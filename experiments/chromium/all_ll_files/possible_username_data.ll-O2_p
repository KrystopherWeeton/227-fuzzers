; ModuleID = '../../components/password_manager/core/browser/possible_username_data.cc'
source_filename = "../../components/password_manager/core/browser/possible_username_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.password_manager::PossibleUsernameData" = type { %"class.std::__1::basic_string", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string.1", %"class.base::Time", i32, %"class.absl::optional" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.autofill::FieldRendererId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.10 }
%union.anon.10 = type { %"struct.password_manager::FormPredictions" }
%"struct.password_manager::FormPredictions" = type { i32, %"class.autofill::FormSignature", %"class.std::__1::vector" }
%"class.autofill::FormSignature" = type { %"class.util::IdType.11" }
%"class.util::IdType.11" = type { %"class.base::StrongAlias.12" }
%"class.base::StrongAlias.12" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.password_manager::PasswordFieldPrediction"*, %"struct.password_manager::PasswordFieldPrediction"*, %"class.std::__1::__compressed_pair.15" }
%"struct.password_manager::PasswordFieldPrediction" = type <{ %"class.autofill::FieldRendererId", %"class.autofill::FieldSignature", i32, i8, [3 x i8] }>
%"class.autofill::FieldSignature" = type { %"class.util::IdType.13" }
%"class.util::IdType.13" = type { %"class.base::StrongAlias.14" }
%"class.base::StrongAlias.14" = type { i32 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.password_manager::PasswordFieldPrediction"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.5 }
%struct.anon.5 = type { %"struct.std::__1::__padding.6", i8 }
%"struct.std::__1::__padding.6" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::basic_string.1"* }

@_ZN16password_manager20PossibleUsernameDataC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN8autofill15FieldRendererIdENS2_IDsNS3_IDsEENS5_IDsEEEEN4base4TimeEi = hidden unnamed_addr alias void (%"struct.password_manager::PossibleUsernameData"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string.1"*, i64, i32), void (%"struct.password_manager::PossibleUsernameData"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string.1"*, i64, i32)* @_ZN16password_manager20PossibleUsernameDataC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN8autofill15FieldRendererIdENS2_IDsNS3_IDsEENS5_IDsEEEEN4base4TimeEi
@_ZN16password_manager20PossibleUsernameDataC1ERKS0_ = hidden unnamed_addr alias void (%"struct.password_manager::PossibleUsernameData"*, %"struct.password_manager::PossibleUsernameData"*), void (%"struct.password_manager::PossibleUsernameData"*, %"struct.password_manager::PossibleUsernameData"*)* @_ZN16password_manager20PossibleUsernameDataC2ERKS0_
@_ZN16password_manager20PossibleUsernameDataD1Ev = hidden unnamed_addr alias void (%"struct.password_manager::PossibleUsernameData"*), void (%"struct.password_manager::PossibleUsernameData"*)* @_ZN16password_manager20PossibleUsernameDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager20PossibleUsernameDataC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN8autofill15FieldRendererIdENS2_IDsNS3_IDsEENS5_IDsEEEEN4base4TimeEi(%"struct.password_manager::PossibleUsernameData"* nocapture, %"class.std::__1::basic_string"* nocapture, i32, %"class.std::__1::basic_string.1"* nocapture, i64, i32) unnamed_addr #0 align 2 {
  %7 = bitcast %"struct.password_manager::PossibleUsernameData"* %0 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #9
  %9 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string.1"* %10 to i8*
  %12 = bitcast %"class.std::__1::basic_string.1"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #9
  %13 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %4, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 4
  store i32 %5, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %union.anon.10* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 40, i1 false) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager20PossibleUsernameDataC2ERKS0_(%"struct.password_manager::PossibleUsernameData"*, %"struct.password_manager::PossibleUsernameData"* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.password_manager::PossibleUsernameData"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.password_manager::PossibleUsernameData"* %0 to i8*
  %9 = bitcast %"struct.password_manager::PossibleUsernameData"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #9
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #9
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load i32, i32* %17, align 8
  store i32 %19, i32* %18, align 8
  %20 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %1, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string.1"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %16
  %27 = bitcast %"class.std::__1::basic_string.1"* %20 to i8*
  %28 = bitcast %"class.std::__1::basic_string.1"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #9
  br label %204

29:                                               ; preds = %16
  %30 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  %32 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, 11
  br i1 %34, label %35, label %40

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::basic_string.1"* %20 to i16*
  %37 = trunc i64 %33 to i8
  %38 = bitcast %"class.std::__1::basic_string.1"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  store i8 %37, i8* %39, align 1
  br label %57

40:                                               ; preds = %29
  %41 = icmp ugt i64 %33, 9223372036854775791
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::basic_string.1"* %20 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %43) #10
  unreachable

44:                                               ; preds = %40
  %45 = add nuw nsw i64 %33, 8
  %46 = and i64 %45, -8
  %47 = icmp slt i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  tail call void @abort() #10
  unreachable

49:                                               ; preds = %44
  %50 = shl i64 %46, 1
  %51 = tail call i8* @_Znwm(i64 %50) #11
  %52 = bitcast i8* %51 to i16*
  %53 = bitcast %"class.std::__1::basic_string.1"* %20 to i8**
  store i8* %51, i8** %53, align 8
  %54 = or i64 %46, -9223372036854775808
  %55 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %56, align 8
  br label %57

57:                                               ; preds = %49, %35
  %58 = phi i16* [ %36, %35 ], [ %52, %49 ]
  %59 = add nuw nsw i64 %33, 1
  %60 = add i64 %33, 1
  %61 = icmp ult i64 %60, 16
  br i1 %61, label %151, label %62

62:                                               ; preds = %57
  %63 = add i64 %33, 1
  %64 = getelementptr i16, i16* %58, i64 %63
  %65 = getelementptr i16, i16* %31, i64 %63
  %66 = icmp ult i16* %58, %65
  %67 = icmp ult i16* %31, %64
  %68 = and i1 %66, %67
  br i1 %68, label %151, label %69

69:                                               ; preds = %62
  %70 = and i64 %60, -16
  %71 = sub i64 %59, %70
  %72 = getelementptr i16, i16* %31, i64 %70
  %73 = getelementptr i16, i16* %58, i64 %70
  %74 = add i64 %70, -16
  %75 = lshr exact i64 %74, 4
  %76 = add nuw nsw i64 %75, 1
  %77 = and i64 %76, 3
  %78 = icmp ult i64 %74, 48
  br i1 %78, label %130, label %79

79:                                               ; preds = %69
  %80 = sub nsw i64 %76, %77
  br label %81

81:                                               ; preds = %81, %79
  %82 = phi i64 [ 0, %79 ], [ %127, %81 ]
  %83 = phi i64 [ %80, %79 ], [ %128, %81 ]
  %84 = getelementptr i16, i16* %31, i64 %82
  %85 = getelementptr i16, i16* %58, i64 %82
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !2
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !2
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !5, !noalias !2
  %92 = getelementptr i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !5, !noalias !2
  %94 = or i64 %82, 16
  %95 = getelementptr i16, i16* %31, i64 %94
  %96 = getelementptr i16, i16* %58, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !2
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !2
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !5, !noalias !2
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !5, !noalias !2
  %105 = or i64 %82, 32
  %106 = getelementptr i16, i16* %31, i64 %105
  %107 = getelementptr i16, i16* %58, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !2
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !2
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !5, !noalias !2
  %114 = getelementptr i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !5, !noalias !2
  %116 = or i64 %82, 48
  %117 = getelementptr i16, i16* %31, i64 %116
  %118 = getelementptr i16, i16* %58, i64 %116
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !2
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !5, !noalias !2
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !5, !noalias !2
  %127 = add i64 %82, 64
  %128 = add i64 %83, -4
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %81, !llvm.loop !7

130:                                              ; preds = %81, %69
  %131 = phi i64 [ 0, %69 ], [ %127, %81 ]
  %132 = icmp eq i64 %77, 0
  br i1 %132, label %149, label %133

133:                                              ; preds = %130, %133
  %134 = phi i64 [ %146, %133 ], [ %131, %130 ]
  %135 = phi i64 [ %147, %133 ], [ %77, %130 ]
  %136 = getelementptr i16, i16* %31, i64 %134
  %137 = getelementptr i16, i16* %58, i64 %134
  %138 = bitcast i16* %136 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !2
  %140 = getelementptr i16, i16* %136, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !2
  %143 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %143, align 2, !alias.scope !5, !noalias !2
  %144 = getelementptr i16, i16* %137, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %145, align 2, !alias.scope !5, !noalias !2
  %146 = add i64 %134, 16
  %147 = add i64 %135, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %133, !llvm.loop !9

149:                                              ; preds = %133, %130
  %150 = icmp eq i64 %60, %70
  br i1 %150, label %204, label %151

151:                                              ; preds = %149, %62, %57
  %152 = phi i64 [ %59, %62 ], [ %59, %57 ], [ %71, %149 ]
  %153 = phi i16* [ %31, %62 ], [ %31, %57 ], [ %72, %149 ]
  %154 = phi i16* [ %58, %62 ], [ %58, %57 ], [ %73, %149 ]
  %155 = add i64 %152, -1
  %156 = and i64 %152, 7
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %169, label %158

158:                                              ; preds = %151, %158
  %159 = phi i64 [ %164, %158 ], [ %152, %151 ]
  %160 = phi i16* [ %166, %158 ], [ %153, %151 ]
  %161 = phi i16* [ %165, %158 ], [ %154, %151 ]
  %162 = phi i64 [ %167, %158 ], [ %156, %151 ]
  %163 = load i16, i16* %160, align 2
  store i16 %163, i16* %161, align 2
  %164 = add i64 %159, -1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = getelementptr inbounds i16, i16* %160, i64 1
  %167 = add i64 %162, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %158, !llvm.loop !11

169:                                              ; preds = %158, %151
  %170 = phi i64 [ %152, %151 ], [ %164, %158 ]
  %171 = phi i16* [ %153, %151 ], [ %166, %158 ]
  %172 = phi i16* [ %154, %151 ], [ %165, %158 ]
  %173 = icmp ult i64 %155, 7
  br i1 %173, label %204, label %174

174:                                              ; preds = %169, %174
  %175 = phi i64 [ %200, %174 ], [ %170, %169 ]
  %176 = phi i16* [ %202, %174 ], [ %171, %169 ]
  %177 = phi i16* [ %201, %174 ], [ %172, %169 ]
  %178 = load i16, i16* %176, align 2
  store i16 %178, i16* %177, align 2
  %179 = getelementptr inbounds i16, i16* %177, i64 1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %177, i64 2
  %183 = getelementptr inbounds i16, i16* %176, i64 2
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %177, i64 3
  %186 = getelementptr inbounds i16, i16* %176, i64 3
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %177, i64 4
  %189 = getelementptr inbounds i16, i16* %176, i64 4
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %177, i64 5
  %192 = getelementptr inbounds i16, i16* %176, i64 5
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %177, i64 6
  %195 = getelementptr inbounds i16, i16* %176, i64 6
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %177, i64 7
  %198 = getelementptr inbounds i16, i16* %176, i64 7
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = add i64 %175, -8
  %201 = getelementptr inbounds i16, i16* %177, i64 8
  %202 = getelementptr inbounds i16, i16* %176, i64 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %174, !llvm.loop !12

204:                                              ; preds = %169, %174, %149, %26
  %205 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 3
  %206 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %1, i64 0, i32 3
  %207 = bitcast %"class.base::Time"* %205 to i8*
  %208 = bitcast %"class.base::Time"* %206 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %207, i8* align 8 %208, i64 12, i1 false)
  %209 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %210 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 48, i1 false) #9
  %211 = load i8, i8* %210, align 8, !range !13
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %216, label %213

213:                                              ; preds = %204
  %214 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %215 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN16password_manager15FormPredictionsC1ERKS0_(%"struct.password_manager::FormPredictions"* %215, %"struct.password_manager::FormPredictions"* dereferenceable(40) %214) #9
  store i8 1, i8* %209, align 8
  br label %216

216:                                              ; preds = %204, %213
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager20PossibleUsernameDataD2Ev(%"struct.password_manager::PossibleUsernameData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !13
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN16password_manager15FormPredictionsD1Ev(%"struct.password_manager::FormPredictions"* %6) #9
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::basic_string.1"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %7
  %14 = bitcast %"class.std::__1::basic_string.1"* %8 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %7, %13
  %17 = bitcast %"struct.password_manager::PossibleUsernameData"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %16, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16password_manager23IsPossibleUsernameValidERKNS_20PossibleUsernameDataERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS3_6vectorINS4_IDsNS5_IDsEENS7_IDsEEEENS7_ISF_EEEE(%"struct.password_manager::PossibleUsernameData"* dereferenceable(120), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.20"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string.1", align 8
  %5 = alloca %"class.std::__1::basic_string.1", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = bitcast %"struct.password_manager::PossibleUsernameData"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = icmp eq i64 %13, %21
  br i1 %22, label %23, label %163

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %27 = select i1 %9, i8* %25, i8* %26
  %28 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast %"struct.password_manager::PossibleUsernameData"* %0 to i8*
  %31 = select i1 %17, i8* %29, i8* %30
  %32 = icmp eq i64 %13, 0
  br i1 %9, label %39, label %33

33:                                               ; preds = %23
  br i1 %32, label %55, label %34

34:                                               ; preds = %33
  %35 = ptrtoint i8* %25 to i64
  %36 = trunc i64 %35 to i8
  %37 = load i8, i8* %31, align 1
  %38 = icmp eq i8 %37, %36
  br i1 %38, label %40, label %163

39:                                               ; preds = %23
  br i1 %32, label %55, label %52

40:                                               ; preds = %34, %47
  %41 = phi i64 [ %44, %47 ], [ %12, %34 ]
  %42 = phi i8* [ %45, %47 ], [ %26, %34 ]
  %43 = phi i8* [ %48, %47 ], [ %31, %34 ]
  %44 = add i64 %41, -1
  %45 = getelementptr inbounds i8, i8* %42, i64 1
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds i8, i8* %43, i64 1
  %49 = load i8, i8* %45, align 1
  %50 = load i8, i8* %48, align 1
  %51 = icmp eq i8 %49, %50
  br i1 %51, label %40, label %163

52:                                               ; preds = %39
  %53 = tail call i32 @bcmp(i8* %27, i8* %31, i64 %13) #9
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %163

55:                                               ; preds = %40, %52, %33, %39
  %56 = bitcast %"class.std::__1::basic_string.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #9
  %57 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 2
  %58 = bitcast %"class.std::__1::basic_string.1"* %57 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %58, i64 0, i32 1, i32 1
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i16*, i16** %62, align 8
  %64 = bitcast %"class.std::__1::basic_string.1"* %57 to i16*
  %65 = select i1 %61, i16* %63, i16* %64
  %66 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %60 to i64
  %69 = select i1 %61, i64 %67, i64 %68
  call void @_ZN16password_manager20CanonicalizeUsernameEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* nonnull sret %5, i16* %65, i64 %69) #9
  %70 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %2, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %2, i64 0, i32 0, i32 1
  %73 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %72, align 8
  %74 = icmp eq %"class.std::__1::basic_string.1"* %71, %73
  br i1 %74, label %75, label %77

75:                                               ; preds = %55
  %76 = bitcast %"class.std::__1::basic_string.1"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %145

77:                                               ; preds = %55
  %78 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  %79 = bitcast %"class.std::__1::basic_string.1"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %79, i64 0, i32 1, i32 1
  %81 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = bitcast %"class.std::__1::basic_string.1"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %82, i64 0, i32 1, i32 1
  %84 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::basic_string.1"* %5 to i16*
  %87 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::basic_string.1"* %4 to i16*
  %89 = bitcast %"class.std::__1::basic_string.1"* %4 to i8**
  br label %90

90:                                               ; preds = %139, %77
  %91 = phi %"class.std::__1::basic_string.1"* [ %71, %77 ], [ %140, %139 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #9
  %92 = bitcast %"class.std::__1::basic_string.1"* %91 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %92, i64 0, i32 1, i32 1
  %94 = load i8, i8* %93, align 1, !noalias !14
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i16*, i16** %96, align 8, !noalias !14
  %98 = bitcast %"class.std::__1::basic_string.1"* %91 to i16*
  %99 = select i1 %95, i16* %97, i16* %98
  %100 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8, !noalias !14
  %102 = zext i8 %94 to i64
  %103 = select i1 %95, i64 %101, i64 %102
  call void @_ZN16password_manager20CanonicalizeUsernameEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* nonnull sret %4, i16* %99, i64 %103) #9
  %104 = load i8, i8* %80, align 1
  %105 = icmp slt i8 %104, 0
  %106 = load i64, i64* %81, align 8
  %107 = zext i8 %104 to i64
  %108 = select i1 %105, i64 %106, i64 %107
  %109 = load i8, i8* %83, align 1
  %110 = icmp slt i8 %109, 0
  %111 = load i64, i64* %84, align 8
  %112 = zext i8 %109 to i64
  %113 = select i1 %110, i64 %111, i64 %112
  %114 = icmp eq i64 %108, %113
  br i1 %114, label %115, label %134

115:                                              ; preds = %90
  %116 = icmp eq i64 %108, 0
  br i1 %116, label %134, label %117

117:                                              ; preds = %115
  %118 = load i16*, i16** %85, align 8
  %119 = select i1 %110, i16* %118, i16* %86
  %120 = load i16*, i16** %87, align 8
  %121 = select i1 %105, i16* %120, i16* %88
  br label %122

122:                                              ; preds = %129, %117
  %123 = phi i64 [ %130, %129 ], [ %108, %117 ]
  %124 = phi i16* [ %132, %129 ], [ %119, %117 ]
  %125 = phi i16* [ %131, %129 ], [ %121, %117 ]
  %126 = load i16, i16* %125, align 2
  %127 = load i16, i16* %124, align 2
  %128 = icmp eq i16 %127, %126
  br i1 %128, label %129, label %134

129:                                              ; preds = %122
  %130 = add i64 %123, -1
  %131 = getelementptr inbounds i16, i16* %125, i64 1
  %132 = getelementptr inbounds i16, i16* %124, i64 1
  %133 = icmp eq i64 %130, 0
  br i1 %133, label %134, label %122

134:                                              ; preds = %129, %122, %115, %90
  %135 = phi i1 [ false, %90 ], [ true, %115 ], [ false, %122 ], [ true, %129 ]
  br i1 %105, label %136, label %138

136:                                              ; preds = %134
  %137 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %137) #11
  br label %138

138:                                              ; preds = %136, %134
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #9
  br i1 %135, label %142, label %139

139:                                              ; preds = %138
  %140 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %91, i64 1
  %141 = icmp eq %"class.std::__1::basic_string.1"* %140, %73
  br i1 %141, label %142, label %90

142:                                              ; preds = %139, %138
  %143 = phi %"class.std::__1::basic_string.1"* [ %91, %138 ], [ %73, %139 ]
  %144 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %72, align 8
  br label %145

145:                                              ; preds = %75, %142
  %146 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %76, %75 ], [ %82, %142 ]
  %147 = phi %"class.std::__1::basic_string.1"* [ %71, %75 ], [ %144, %142 ]
  %148 = phi %"class.std::__1::basic_string.1"* [ %71, %75 ], [ %143, %142 ]
  %149 = icmp eq %"class.std::__1::basic_string.1"* %148, %147
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %146, i64 0, i32 1, i32 1
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %145
  %154 = bitcast %"class.std::__1::basic_string.1"* %5 to i8**
  %155 = load i8*, i8** %154, align 8
  call void @_ZdlPv(i8* %155) #11
  br label %156

156:                                              ; preds = %145, %153
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #9
  br i1 %149, label %163, label %157

157:                                              ; preds = %156
  %158 = call i64 @_ZN4base4Time3NowEv() #9
  %159 = getelementptr inbounds %"struct.password_manager::PossibleUsernameData", %"struct.password_manager::PossibleUsernameData"* %0, i64 0, i32 3, i32 0, i32 0
  %160 = load i64, i64* %159, align 8
  %161 = sub nsw i64 %158, %160
  %162 = icmp slt i64 %161, 60000001
  br label %163

163:                                              ; preds = %47, %34, %52, %156, %3, %157
  %164 = phi i1 [ false, %52 ], [ %162, %157 ], [ false, %156 ], [ false, %3 ], [ false, %34 ], [ false, %47 ]
  ret i1 %164
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN16password_manager20CanonicalizeUsernameEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* sret, i16*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN16password_manager15FormPredictionsC1ERKS0_(%"struct.password_manager::FormPredictions"*, %"struct.password_manager::FormPredictions"* dereferenceable(40)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN16password_manager15FormPredictionsD1Ev(%"struct.password_manager::FormPredictions"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{i8 0, i8 2}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4base8internal10InvokeImplIRPFNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_16BasicStringPieceIDsS5_EEEJRKS8_EEEDcOT_DpOT0_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal10InvokeImplIRPFNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_16BasicStringPieceIDsS5_EEEJRKS8_EEEDcOT_DpOT0_"}
!17 = distinct !{!17, !18, !"_ZN4base6invokeIRPFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_16BasicStringPieceIDsS4_EEEJRKS7_EEEDcOT_DpOT0_: argument 0"}
!18 = distinct !{!18, !"_ZN4base6invokeIRPFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_16BasicStringPieceIDsS4_EEEJRKS7_EEEDcOT_DpOT0_"}
