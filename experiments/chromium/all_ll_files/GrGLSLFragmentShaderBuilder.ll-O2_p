; ModuleID = '../../third_party/skia/src/gpu/glsl/GrGLSLFragmentShaderBuilder.cpp'
source_filename = "../../third_party/skia/src/gpu/glsl/GrGLSLFragmentShaderBuilder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.10, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.10 = type { i32*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.2, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.8], i32, i8, [3 x i8], i32 }>
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [120 x i8] }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkSTArray.2 = type { %class.SkAlignedSTStorage.3, %class.SkTArray.4 }
%class.SkAlignedSTStorage.3 = type { [16 x i8] }
%class.SkTArray.4 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.8 = type { %class.SkAlignedSTStorage.9, %class.SkTArray }
%class.SkAlignedSTStorage.9 = type { [8 x i8] }
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.248", %"class.std::__1::vector.254", i32, %class.SkSTArray.268 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrProgramDesc = type <{ %class.SkSTArray.11, i32, [4 x i8] }>
%class.SkSTArray.11 = type { %class.SkAlignedSTStorage.12, %class.SkTArray.13 }
%class.SkAlignedSTStorage.12 = type { [132 x i8] }
%class.SkTArray.13 = type { i32*, i64 }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.14, i32, [4 x i8] }
%union.anon.14 = type { %struct.anon.15 }
%struct.anon.15 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.223, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.17, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.17 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.18, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.217" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.214 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.19, [4 x i8] }>
%union.anon.19 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.20, i8* }
%class.sk_sp.20 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.21, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.21 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.22, %"class.std::__1::unique_ptr.24", i32, %class.GrDirectContext*, %class.SkSTArray.211, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.22 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.23, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.23 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.65", %"class.std::__1::shared_ptr.65", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.67", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.73" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.35", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.37" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.64"* }
%"class.std::__1::vector.64" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.65" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.65", %"class.std::__1::vector.271", i8, %"class.std::__1::vector.279", %"class.std::__1::forward_list", %class.SkTHashMap.292, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.271" = type { %"class.std::__1::__vector_base.272" }
%"class.std::__1::__vector_base.272" = type { %"class.std::__1::unique_ptr.273"*, %"class.std::__1::unique_ptr.273"*, %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.std::__1::unique_ptr.273"* }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"class.std::__1::unique_ptr.281"*, %"class.std::__1::unique_ptr.281"*, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.std::__1::unique_ptr.281"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.292 = type { %class.SkTHashTable.293 }
%class.SkTHashTable.293 = type { i32, i32, %class.SkAutoTArray.294 }
%class.SkAutoTArray.294 = type { %"class.std::__1::unique_ptr.295" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.325" }
%"struct.std::__1::pair.325" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.65", %"class.std::__1::shared_ptr.66" }
%"class.std::__1::shared_ptr.66" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.45", %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.61", [4 x i8] }>
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47", %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { i64 }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { i64*, i64*, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { i64* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.140", %class.sk_sp.146, %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.186", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.84", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.83 }
%class.sk_sp.83 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.87, %class.SkTHashMap, %class.SkTHashMap.95, %class.SkTArray.104, %class.SkTArray, i32, i8, [3 x i8] }>
%class.SkTArray.87 = type { %"class.std::__1::unique_ptr.88"*, i64 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.95 = type { %class.SkTHashTable.96 }
%class.SkTHashTable.96 = type { i32, i32, %class.SkAutoTArray.97 }
%class.SkAutoTArray.97 = type { %"class.std::__1::unique_ptr.98" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.308" }
%"struct.std::__1::pair.308" = type { i32, %class.SkTArray.309* }
%class.SkTArray.309 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.104 = type { %"class.std::__1::unique_ptr.105"*, i64 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.309, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.118 }
%class.SkFibBlockSizes.118 = type { i32 }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.146 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.158, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.174, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.150 }
%class.SkTHashTable.150 = type { i32, i32, %class.SkAutoTArray.151 }
%class.SkAutoTArray.151 = type { %"class.std::__1::unique_ptr.152" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.158 = type { %class.SkTHashTable.159 }
%class.SkTHashTable.159 = type { i32, i32, %class.SkAutoTArray.160 }
%class.SkAutoTArray.160 = type { %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.167, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.167 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.168" }
%"struct.std::__1::atomic.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__cxx_atomic_impl.171" }
%"struct.std::__1::__cxx_atomic_impl.171" = type { %"struct.std::__1::__cxx_atomic_base_impl.172" }
%"struct.std::__1::__cxx_atomic_base_impl.172" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.173, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.173 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.174 = type { %class.SkTHashTable.175 }
%class.SkTHashTable.175 = type { i32, i32, %class.SkAutoTArray.176 }
%class.SkAutoTArray.176 = type { %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.22, %class.sk_sp.189, %class.sk_sp.189 }
%class.sk_sp.189 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray.211 = type { %class.SkAlignedSTStorage.212, %class.SkTArray.213 }
%class.SkAlignedSTStorage.212 = type { [64 x i8] }
%class.SkTArray.213 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.214 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.215, void (i8*)*, i8* }
%class.SkNVRefCnt.215 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.18, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.217" = type { %"struct.std::__1::__atomic_base.218" }
%"struct.std::__1::__atomic_base.218" = type { %"struct.std::__1::__atomic_base.219" }
%"struct.std::__1::__atomic_base.219" = type { %"struct.std::__1::__cxx_atomic_impl.220" }
%"struct.std::__1::__cxx_atomic_impl.220" = type { %"struct.std::__1::__cxx_atomic_base_impl.221" }
%"struct.std::__1::__cxx_atomic_base_impl.221" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.222 }
%union.anon.222 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.223 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.224, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef.224 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.225"*, [24 x i8] }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.228, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.228 = type { %class.SkAlignedSTStorage.229, %class.SkTArray.230 }
%class.SkAlignedSTStorage.229 = type { [8 x i8] }
%class.SkTArray.230 = type { %"class.std::__1::unique_ptr.231"*, i64 }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.240, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.240 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.244 }
%class.SkTArray.244 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector.254" = type { %"class.std::__1::__vector_base.255" }
%"class.std::__1::__vector_base.255" = type { %"class.std::__1::unique_ptr.256"*, %"class.std::__1::unique_ptr.256"*, %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.259 }
%class.SkTArray.259 = type { %"class.std::__1::unique_ptr.256"*, i64 }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::unique_ptr.256"* }
%class.SkSTArray.268 = type { %class.SkAlignedSTStorage.269, %class.SkTArray.270 }
%class.SkAlignedSTStorage.269 = type { [160 x i8] }
%class.SkTArray.270 = type { %class.GrShaderVar*, i64 }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.2, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.8], i32, i8, [3 x i8], i32, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type { %class.GrFragmentProcessor*, %class.GrShaderVar* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%class.GrGLSLVaryingHandler = type { i32 (...)**, [8 x i8], %class.GrTBlockList.301, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrGLSLProgramBuilder*, i8* }
%class.GrTBlockList.301 = type { %class.GrSBlockAllocator.302 }
%class.GrSBlockAllocator.302 = type { [80 x i8] }
%class.GrGLSLXPFragmentBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZN12GrTBlockListI11GrShaderVarLi1EE12emplace_backIJPKc8GrSLTypeNS0_12TypeModifierEEEERS0_DpOT_ = comdat any

$_ZN23GrGLSLFPFragmentBuilderD1Ev = comdat any

$_ZN23GrGLSLFPFragmentBuilderD0Ev = comdat any

$_ZTv0_n24_N23GrGLSLFPFragmentBuilderD1Ev = comdat any

$_ZTv0_n24_N23GrGLSLFPFragmentBuilderD0Ev = comdat any

$_ZN23GrGLSLXPFragmentBuilderD1Ev = comdat any

$_ZN23GrGLSLXPFragmentBuilderD0Ev = comdat any

$_ZTv0_n24_N23GrGLSLXPFragmentBuilderD1Ev = comdat any

$_ZTv0_n24_N23GrGLSLXPFragmentBuilderD0Ev = comdat any

$_ZN27GrGLSLFragmentShaderBuilder18forceHighPrecisionEv = comdat any

$_ZNK27GrGLSLFragmentShaderBuilder15getMangleStringEv = comdat any

$_ZN27GrGLSLFragmentShaderBuilderD1Ev = comdat any

$_ZN27GrGLSLFragmentShaderBuilderD0Ev = comdat any

$_ZNK27GrGLSLFragmentShaderBuilder20hasCustomColorOutputEv = comdat any

$_ZNK27GrGLSLFragmentShaderBuilder18hasSecondaryOutputEv = comdat any

$_ZThn16_NK27GrGLSLFragmentShaderBuilder20hasCustomColorOutputEv = comdat any

$_ZThn16_NK27GrGLSLFragmentShaderBuilder18hasSecondaryOutputEv = comdat any

$_ZThn16_N27GrGLSLFragmentShaderBuilderD1Ev = comdat any

$_ZThn16_N27GrGLSLFragmentShaderBuilderD0Ev = comdat any

$_ZTv0_n24_N27GrGLSLFragmentShaderBuilderD1Ev = comdat any

$_ZTv0_n24_N27GrGLSLFragmentShaderBuilderD0Ev = comdat any

$_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN19GrGLSLShaderBuilderD2Ev = comdat any

$_ZN19GrGLSLShaderBuilderD0Ev = comdat any

$_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv = comdat any

$_ZN8SkTArrayIiLb0EE12checkReallocEiNS0_11ReallocTypeE = comdat any

$_ZTV19GrGLSLShaderBuilder = comdat any

@.str = private unnamed_addr constant [10 x i8] c"_dstColor\00", align 1
@_ZN27GrGLSLFragmentShaderBuilder13kDstColorNameE = hidden local_unnamed_addr global i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), align 8
@_ZTV27GrGLSLFragmentShaderBuilder = hidden unnamed_addr constant { [14 x i8*], [9 x i8*], [7 x i8*] } { [14 x i8*] [i8* inttoptr (i64 64 to i8*), i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentShaderBuilder*)* @_ZN27GrGLSLFragmentShaderBuilder18forceHighPrecisionEv to i8*), i8* bitcast (void (%class.GrGLSLFragmentShaderBuilder*)* @_ZN27GrGLSLFragmentShaderBuilder25onBeforeChildProcEmitCodeEv to i8*), i8* bitcast (void (%class.GrGLSLFragmentShaderBuilder*)* @_ZN27GrGLSLFragmentShaderBuilder24onAfterChildProcEmitCodeEv to i8*), i8* bitcast (%class.SkString* (%class.GrGLSLFragmentShaderBuilder*)* @_ZNK27GrGLSLFragmentShaderBuilder15getMangleStringEv to i8*), i8* bitcast (void (%class.GrGLSLFragmentShaderBuilder*)* @_ZN27GrGLSLFragmentShaderBuilderD1Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentShaderBuilder*)* @_ZN27GrGLSLFragmentShaderBuilderD0Ev to i8*), i8* bitcast (i1 (%class.GrGLSLFragmentShaderBuilder*)* @_ZNK27GrGLSLFragmentShaderBuilder20hasCustomColorOutputEv to i8*), i8* bitcast (i1 (%class.GrGLSLFragmentShaderBuilder*)* @_ZNK27GrGLSLFragmentShaderBuilder18hasSecondaryOutputEv to i8*), i8* bitcast (i8* (%class.GrGLSLFragmentShaderBuilder*)* @_ZN27GrGLSLFragmentShaderBuilder8dstColorEv to i8*), i8* bitcast (void (%class.GrGLSLFragmentShaderBuilder*, i32)* @_ZN27GrGLSLFragmentShaderBuilder35enableAdvancedBlendEquationIfNeededE15GrBlendEquation to i8*), i8* bitcast (void (%class.GrGLSLFragmentShaderBuilder*)* @_ZN27GrGLSLFragmentShaderBuilder10onFinalizeEv to i8*)], [9 x i8*] [i8* inttoptr (i64 48 to i8*), i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (i1 (%class.GrGLSLFragmentShaderBuilder*)* @_ZThn16_NK27GrGLSLFragmentShaderBuilder20hasCustomColorOutputEv to i8*), i8* bitcast (i1 (%class.GrGLSLFragmentShaderBuilder*)* @_ZThn16_NK27GrGLSLFragmentShaderBuilder18hasSecondaryOutputEv to i8*), i8* bitcast (i8* (%class.GrGLSLFragmentShaderBuilder*)* @_ZThn16_N27GrGLSLFragmentShaderBuilder8dstColorEv to i8*), i8* bitcast (void (%class.GrGLSLFragmentShaderBuilder*, i32)* @_ZThn16_N27GrGLSLFragmentShaderBuilder35enableAdvancedBlendEquationIfNeededE15GrBlendEquation to i8*), i8* bitcast (void (%class.GrGLSLFragmentShaderBuilder*)* @_ZThn16_N27GrGLSLFragmentShaderBuilderD1Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentShaderBuilder*)* @_ZThn16_N27GrGLSLFragmentShaderBuilderD0Ev to i8*)], [7 x i8*] [i8* inttoptr (i64 -64 to i8*), i8* inttoptr (i64 -64 to i8*), i8* inttoptr (i64 -64 to i8*), i8* null, i8* bitcast (void (%class.GrGLSLFragmentShaderBuilder*)* @_ZTv0_n24_N27GrGLSLFragmentShaderBuilderD1Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentShaderBuilder*)* @_ZTv0_n24_N27GrGLSLFragmentShaderBuilderD0Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentShaderBuilder*)* @_ZTv0_n32_N27GrGLSLFragmentShaderBuilder10onFinalizeEv to i8*)] }, align 8
@_ZTT27GrGLSLFragmentShaderBuilder = hidden unnamed_addr constant [7 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTC27GrGLSLFragmentShaderBuilder0_23GrGLSLFPFragmentBuilder, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTC27GrGLSLFragmentShaderBuilder0_23GrGLSLFPFragmentBuilder, i32 0, inrange i32 1, i32 4) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTC27GrGLSLFragmentShaderBuilder16_23GrGLSLXPFragmentBuilder, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTC27GrGLSLFragmentShaderBuilder16_23GrGLSLXPFragmentBuilder, i32 0, inrange i32 1, i32 4) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i32 0, inrange i32 2, i32 4) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i32 0, inrange i32 1, i32 3) to i8*)], align 8
@.str.1 = private unnamed_addr constant [27 x i8] c"float2 %s = %s.xy / %s.z;\0A\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"sk_LastFragColor\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"half4 %s = %s;\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"GL_KHR_blend_equation_advanced\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"blend_support_all_equations\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"gl_SecondaryFragColorEXT\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"_c%d\00", align 1
@_ZTC27GrGLSLFragmentShaderBuilder0_23GrGLSLFPFragmentBuilder = hidden unnamed_addr constant { [9 x i8*], [7 x i8*] } { [9 x i8*] [i8* inttoptr (i64 64 to i8*), i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFPFragmentBuilder*)* @_ZN23GrGLSLFPFragmentBuilderD1Ev to i8*), i8* bitcast (void (%class.GrGLSLFPFragmentBuilder*)* @_ZN23GrGLSLFPFragmentBuilderD0Ev to i8*)], [7 x i8*] [i8* null, i8* inttoptr (i64 -64 to i8*), i8* inttoptr (i64 -64 to i8*), i8* null, i8* bitcast (void (%class.GrGLSLFPFragmentBuilder*)* @_ZTv0_n24_N23GrGLSLFPFragmentBuilderD1Ev to i8*), i8* bitcast (void (%class.GrGLSLFPFragmentBuilder*)* @_ZTv0_n24_N23GrGLSLFPFragmentBuilderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTC27GrGLSLFragmentShaderBuilder16_23GrGLSLXPFragmentBuilder = hidden unnamed_addr constant { [9 x i8*], [7 x i8*] } { [9 x i8*] [i8* inttoptr (i64 48 to i8*), i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLXPFragmentBuilder*)* @_ZN23GrGLSLXPFragmentBuilderD1Ev to i8*), i8* bitcast (void (%class.GrGLSLXPFragmentBuilder*)* @_ZN23GrGLSLXPFragmentBuilderD0Ev to i8*)], [7 x i8*] [i8* null, i8* inttoptr (i64 -48 to i8*), i8* inttoptr (i64 -48 to i8*), i8* null, i8* bitcast (void (%class.GrGLSLXPFragmentBuilder*)* @_ZTv0_n24_N23GrGLSLXPFragmentBuilderD1Ev to i8*), i8* bitcast (void (%class.GrGLSLXPFragmentBuilder*)* @_ZTv0_n24_N23GrGLSLXPFragmentBuilderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.8 = private unnamed_addr constant [13 x i8] c"sk_FragColor\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"fsSecondaryColorOut\00", align 1
@_ZTV19GrGLSLShaderBuilder = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLShaderBuilder*)* @_ZN19GrGLSLShaderBuilderD2Ev to i8*), i8* bitcast (void (%class.GrGLSLShaderBuilder*)* @_ZN19GrGLSLShaderBuilderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZN27GrGLSLFragmentShaderBuilder19KeyForSurfaceOriginE15GrSurfaceOrigin(i32) local_unnamed_addr #0 align 2 {
  %2 = trunc i32 %0 to i8
  %3 = add i8 %2, 1
  ret i8 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27GrGLSLFragmentShaderBuilderC2EP20GrGLSLProgramBuilder(%class.GrGLSLFragmentShaderBuilder*, i8** nocapture readonly, %class.GrGLSLProgramBuilder* nocapture readnone) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds i8*, i8** %1, i64 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds i8*, i8** %1, i64 2
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %6 to i8*
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = bitcast i8* %16 to i64*
  store i64 %10, i64* %17, align 16
  %18 = getelementptr %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 0, i32 1, i64 0
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 1
  %20 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 2
  %21 = getelementptr inbounds i8*, i8** %1, i64 3
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %class.GrGLSLXPFragmentBuilder.base* %20 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds i8*, i8** %1, i64 4
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = inttoptr i64 %23 to i8*
  %29 = getelementptr i8, i8* %28, i64 -24
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %class.GrGLSLXPFragmentBuilder.base* %20 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  %34 = bitcast i8* %33 to i64*
  store i64 %27, i64* %34, align 16
  %35 = bitcast i8** %1 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %7, align 8
  %37 = getelementptr inbounds i8*, i8** %1, i64 5
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = inttoptr i64 %36 to i8*
  %41 = getelementptr i8, i8* %40, i64 -24
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds i8, i8* %15, i64 %43
  %45 = bitcast i8* %44 to i64*
  store i64 %39, i64* %45, align 16
  %46 = getelementptr inbounds i8*, i8** %1, i64 6
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %24, align 8
  %49 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 3
  %50 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 3, i32 1
  %51 = getelementptr inbounds %class.SkTArray.10, %class.SkTArray.10* %49, i64 0, i32 0
  store i32* null, i32** %51, align 8
  store i64 1, i64* %50, align 8
  %52 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 4
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %52) #7
  %53 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 5
  %54 = bitcast %class.GrShaderVar** %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 12, i1 false)
  tail call void @_ZN8SkTArrayIiLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.10* %49, i32 1, i32 1) #7
  %55 = load i32*, i32** %51, align 8
  %56 = load i64, i64* %50, align 8
  %57 = lshr i64 %56, 1
  %58 = and i64 %57, 2147483647
  %59 = getelementptr inbounds i32, i32* %55, i64 %58
  %60 = add i64 %56, 2
  %61 = and i64 %60, 4294967294
  %62 = and i64 %56, -4294967295
  %63 = or i64 %61, %62
  store i64 %63, i64* %50, align 8
  store i32 0, i32* %59, align 4
  ret void
}

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27GrGLSLFragmentShaderBuilderC1EP20GrGLSLProgramBuilder(%class.GrGLSLFragmentShaderBuilder*, %class.GrGLSLProgramBuilder*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 11
  %4 = bitcast %class.GrGLSLShaderBuilder.base* %3 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilderC2EP20GrGLSLProgramBuilder(%class.GrGLSLShaderBuilder* %4, %class.GrGLSLProgramBuilder* %1) #7
  %5 = getelementptr %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 0, i32 1, i64 0
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 1
  %7 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder.base, %class.GrGLSLShaderBuilder.base* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 2, i64 4) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 3
  %11 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 3, i32 1
  %12 = getelementptr inbounds %class.SkTArray.10, %class.SkTArray.10* %10, i64 0, i32 0
  store i32* null, i32** %12, align 8
  store i64 1, i64* %11, align 8
  %13 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 4
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %13) #7
  %14 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 5
  %15 = bitcast %class.GrShaderVar** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %15, i8 0, i64 12, i1 false)
  tail call void @_ZN8SkTArrayIiLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.10* %10, i32 1, i32 1) #7
  %16 = load i32*, i32** %12, align 8
  %17 = load i64, i64* %11, align 8
  %18 = lshr i64 %17, 1
  %19 = and i64 %18, 2147483647
  %20 = getelementptr inbounds i32, i32* %16, i64 %19
  %21 = add i64 %17, 2
  %22 = and i64 %21, 4294967294
  %23 = and i64 %17, -4294967295
  %24 = or i64 %22, %23
  store i64 %24, i64* %11, align 8
  store i32 0, i32* %20, align 4
  ret void
}

declare void @_ZN19GrGLSLShaderBuilderC2EP20GrGLSLProgramBuilder(%class.GrGLSLShaderBuilder*, %class.GrGLSLProgramBuilder*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23GrGLSLFPFragmentBuilder22writeProcessorFunctionEP23GrGLSLFragmentProcessorRNS0_8EmitArgsE(%class.SkString* noalias sret, %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) local_unnamed_addr #1 align 2 {
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.SkString, align 8
  %7 = alloca [2 x %class.GrShaderVar], align 16
  %8 = bitcast %class.GrGLSLFPFragmentBuilder* %1 to void (%class.GrGLSLFPFragmentBuilder*)***
  %9 = load void (%class.GrGLSLFPFragmentBuilder*)**, void (%class.GrGLSLFPFragmentBuilder*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrGLSLFPFragmentBuilder*)*, void (%class.GrGLSLFPFragmentBuilder*)** %9, i64 1
  %11 = load void (%class.GrGLSLFPFragmentBuilder*)*, void (%class.GrGLSLFPFragmentBuilder*)** %10, align 8
  tail call void %11(%class.GrGLSLFPFragmentBuilder* %1) #7
  %12 = bitcast %class.GrGLSLFPFragmentBuilder* %1 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr i8, i8* %13, i64 -24
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %class.GrGLSLFPFragmentBuilder* %1 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %16
  %19 = getelementptr inbounds i8, i8* %18, i64 160
  %20 = bitcast i8* %19 to %class.SkTArray*
  tail call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %20, i32 1, i32 1) #7
  %21 = bitcast i8* %19 to %class.SkString**
  %22 = load %class.SkString*, %class.SkString** %21, align 8
  %23 = getelementptr inbounds i8, i8* %18, i64 168
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %25, 1
  %27 = and i64 %26, 2147483647
  %28 = getelementptr inbounds %class.SkString, %class.SkString* %22, i64 %27
  %29 = add i64 %25, 2
  %30 = and i64 %29, 4294967294
  %31 = and i64 %25, -4294967295
  %32 = or i64 %30, %31
  store i64 %32, i64* %24, align 8
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %28) #7
  %33 = getelementptr inbounds i8, i8* %18, i64 488
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %34, align 8
  %37 = bitcast [2 x %class.GrShaderVar]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %37) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 -86, i64 80, i1 false)
  %38 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 0
  %39 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %3, i64 0, i32 4
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %6, i8* %40) #7
  %42 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 0
  store i32 31, i32* %42, align 16
  %43 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 1
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 2
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %45, %class.SkString* nonnull dereferenceable(8) %6) #7
  %46 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %46) #7
  %47 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %47) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  %48 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %3, i64 0, i32 5
  %49 = load i8*, i8** %48, align 8
  %50 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %5, i8* %49) #7
  %51 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 1, i32 0
  store i32 22, i32* %51, align 8
  %52 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 1, i32 1
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 1, i32 2
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 1, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %54, %class.SkString* nonnull dereferenceable(8) %5) #7
  %55 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 1, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %55) #7
  %56 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 1, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %56) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  %57 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %3, i64 0, i32 3
  %58 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %57, align 8
  %59 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %58, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, 32
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %88

63:                                               ; preds = %4
  %64 = and i32 %60, 16
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %88, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %3, i64 0, i32 6
  %68 = load %"class.GrGLSLFragmentProcessor::BuilderInputProvider"*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"** %67, align 8
  %69 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::BuilderInputProvider", %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* %68, i64 0, i32 1
  %70 = load %class.GrShaderVar*, %class.GrShaderVar** %69, align 8
  %71 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %70, i64 0, i32 0
  %72 = load i32, i32* %71, align 8
  switch i32 %72, label %88 [
    i32 22, label %73
    i32 23, label %77
  ]

73:                                               ; preds = %66
  %74 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %70, i64 0, i32 3, i32 0, i32 0
  %75 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %74, align 8
  %76 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %75, i64 0, i32 2
  store i8* %76, i8** %48, align 8
  br label %88

77:                                               ; preds = %66
  %78 = load i8*, i8** %12, align 8
  %79 = getelementptr i8, i8* %78, i64 -24
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds i8, i8* %17, i64 %81
  %83 = bitcast i8* %82 to %class.GrGLSLShaderBuilder*
  %84 = load i8*, i8** %48, align 8
  %85 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %70, i64 0, i32 3, i32 0, i32 0
  %86 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %85, align 8
  %87 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %86, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %83, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* %84, i8* %87, i8* %87)
  br label %88

88:                                               ; preds = %63, %4, %73, %77, %66
  %89 = phi i64 [ 2, %4 ], [ 1, %63 ], [ 1, %66 ], [ 1, %77 ], [ 1, %73 ]
  %90 = bitcast %class.GrGLSLFragmentProcessor* %2 to void (%class.GrGLSLFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)***
  %91 = load void (%class.GrGLSLFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)**, void (%class.GrGLSLFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)*** %90, align 8
  %92 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)*, void (%class.GrGLSLFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)** %91, i64 2
  %93 = load void (%class.GrGLSLFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)*, void (%class.GrGLSLFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)** %92, align 8
  call void %93(%class.GrGLSLFragmentProcessor* %2, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %3) #7
  %94 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %94, align 8
  %95 = load i8*, i8** %12, align 8
  %96 = getelementptr i8, i8* %95, i64 -24
  %97 = bitcast i8* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds i8, i8* %17, i64 %98
  %100 = bitcast i8* %99 to %class.GrGLSLShaderBuilder*
  %101 = bitcast %class.GrFragmentProcessor** %57 to %class.GrProcessor**
  %102 = load %class.GrProcessor*, %class.GrProcessor** %101, align 8
  %103 = bitcast %class.GrProcessor* %102 to i8* (%class.GrProcessor*)***
  %104 = load i8* (%class.GrProcessor*)**, i8* (%class.GrProcessor*)*** %103, align 8
  %105 = getelementptr inbounds i8* (%class.GrProcessor*)*, i8* (%class.GrProcessor*)** %104, i64 2
  %106 = load i8* (%class.GrProcessor*)*, i8* (%class.GrProcessor*)** %105, align 8
  %107 = call i8* %106(%class.GrProcessor* %102) #7
  call void @_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc(%class.SkString* sret %0, %class.GrGLSLShaderBuilder* %100, i8* %107) #7
  %108 = load i8*, i8** %12, align 8
  %109 = getelementptr i8, i8* %108, i64 -24
  %110 = bitcast i8* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds i8, i8* %17, i64 %111
  %113 = bitcast i8* %112 to %class.GrGLSLShaderBuilder*
  %114 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %94, align 8
  %115 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %114, i64 0, i32 2
  %116 = getelementptr inbounds i8, i8* %112, i64 160
  %117 = getelementptr inbounds i8, i8* %112, i64 488
  %118 = bitcast i8* %117 to i32*
  %119 = load i32, i32* %118, align 8
  %120 = bitcast i8* %116 to %class.SkString**
  %121 = load %class.SkString*, %class.SkString** %120, align 8
  %122 = sext i32 %119 to i64
  %123 = getelementptr inbounds %class.SkString, %class.SkString* %121, i64 %122, i32 0, i32 0
  %124 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %123, align 8
  %125 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %124, i64 0, i32 2
  call void @_ZN19GrGLSLShaderBuilder12emitFunctionE8GrSLTypePKc6SkSpanIK11GrShaderVarES2_(%class.GrGLSLShaderBuilder* %113, i32 31, i8* %115, %class.GrShaderVar* nonnull %38, i64 %89, i8* %125) #7
  %126 = load i8*, i8** %12, align 8
  %127 = getelementptr i8, i8* %126, i64 -24
  %128 = bitcast i8* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds i8, i8* %17, i64 %129
  %131 = getelementptr inbounds i8, i8* %130, i64 160
  %132 = bitcast i8* %131 to %class.SkTArray*
  %133 = getelementptr inbounds i8, i8* %130, i64 168
  %134 = bitcast i8* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = lshr i64 %135, 1
  %137 = and i64 %136, 2147483647
  %138 = add nuw nsw i64 %137, 4294967295
  %139 = shl nuw nsw i64 %138, 1
  %140 = and i64 %139, 4294967294
  %141 = and i64 %135, -4294967295
  %142 = or i64 %140, %141
  store i64 %142, i64* %134, align 8
  %143 = bitcast i8* %131 to %class.SkString**
  %144 = load %class.SkString*, %class.SkString** %143, align 8
  %145 = and i64 %138, 2147483647
  %146 = getelementptr inbounds %class.SkString, %class.SkString* %144, i64 %145
  call void @_ZN8SkStringD1Ev(%class.SkString* %146) #7
  call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %132, i32 0, i32 2) #7
  %147 = getelementptr inbounds i8, i8* %130, i64 488
  %148 = bitcast i8* %147 to i32*
  %149 = load i32, i32* %148, align 8
  %150 = add nsw i32 %149, -1
  store i32 %150, i32* %148, align 8
  %151 = load void (%class.GrGLSLFPFragmentBuilder*)**, void (%class.GrGLSLFPFragmentBuilder*)*** %8, align 8
  %152 = getelementptr inbounds void (%class.GrGLSLFPFragmentBuilder*)*, void (%class.GrGLSLFPFragmentBuilder*)** %151, i64 2
  %153 = load void (%class.GrGLSLFPFragmentBuilder*)*, void (%class.GrGLSLFPFragmentBuilder*)** %152, align 8
  call void %153(%class.GrGLSLFPFragmentBuilder* %1) #7
  %154 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 1, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %154) #7
  %155 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 1, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %155) #7
  %156 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 1, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %156) #7
  %157 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %157) #7
  %158 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %158) #7
  %159 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %159) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %37) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #7
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7
  ret void
}

declare void @_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc(%class.SkString* sret, %class.GrGLSLShaderBuilder*, i8*) local_unnamed_addr #2

declare void @_ZN19GrGLSLShaderBuilder12emitFunctionE8GrSLTypePKc6SkSpanIK11GrShaderVarES2_(%class.GrGLSLShaderBuilder*, i32, i8*, %class.GrShaderVar*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN27GrGLSLFragmentShaderBuilder8dstColorEv(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #1 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr i8, i8* %6, i64 -24
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 %9
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = bitcast i8* %12 to %class.GrGLSLProgramBuilder**
  %14 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %13, align 8
  %15 = bitcast %class.GrGLSLProgramBuilder* %14 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %16 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %15, align 16
  %17 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %16, i64 2
  %18 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %17, align 8
  %19 = tail call %class.GrCaps* %18(%class.GrGLSLProgramBuilder* %14) #7
  %20 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %19, i64 0, i32 2, i32 0
  %21 = load %class.GrShaderCaps*, %class.GrShaderCaps** %20, align 8
  %22 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %21, i64 0, i32 2
  %23 = bitcast i56* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i8
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %88

27:                                               ; preds = %1
  %28 = load i8*, i8** %5, align 8
  %29 = getelementptr i8, i8* %28, i64 -24
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds i8, i8* %10, i64 %31
  %33 = bitcast i8* %32 to %class.GrGLSLShaderBuilder*
  %34 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %21, i64 0, i32 15
  %35 = load i8*, i8** %34, align 8
  %36 = tail call zeroext i1 @_ZN19GrGLSLShaderBuilder10addFeatureEjPKc(%class.GrGLSLShaderBuilder* %33, i32 8, i8* %35) #7
  %37 = load i64, i64* %23, align 8
  %38 = and i64 %37, 256
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %90, label %40

40:                                               ; preds = %27
  %41 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 5
  %42 = load %class.GrShaderVar*, %class.GrShaderVar** %41, align 8
  %43 = icmp eq %class.GrShaderVar* %42, null
  br i1 %43, label %44, label %78

44:                                               ; preds = %40
  %45 = load i8*, i8** %5, align 8
  %46 = getelementptr i8, i8* %45, i64 -24
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds i8, i8* %10, i64 %48
  %50 = getelementptr inbounds i8, i8* %49, i64 336
  %51 = bitcast i8* %50 to %class.GrTBlockList*
  %52 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #7
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8** %2, align 8
  %53 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #7
  store i32 31, i32* %3, align 4
  %54 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #7
  store i32 1, i32* %4, align 4
  %55 = call dereferenceable(40) %class.GrShaderVar* @_ZN12GrTBlockListI11GrShaderVarLi1EE12emplace_backIJPKc8GrSLTypeNS0_12TypeModifierEEEERS0_DpOT_(%class.GrTBlockList* %51, i8** nonnull dereferenceable(8) %2, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4) #7
  store %class.GrShaderVar* %55, %class.GrShaderVar** %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #7
  %56 = load i8*, i8** %5, align 8
  %57 = getelementptr i8, i8* %56, i64 -24
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds i8, i8* %10, i64 %59
  %61 = getelementptr inbounds i8, i8* %60, i64 8
  %62 = bitcast i8* %61 to %class.GrGLSLProgramBuilder**
  %63 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %62, align 8
  %64 = getelementptr inbounds i8, i8* %60, i64 336
  %65 = bitcast i8* %64 to %"class.GrBlockAllocator::Block"**
  %66 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %65, align 16
  %67 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %66, i64 0, i32 4
  %68 = load i32, i32* %67, align 8
  %69 = bitcast %"class.GrBlockAllocator::Block"* %66 to i8*
  %70 = sext i32 %68 to i64
  %71 = getelementptr inbounds i8, i8* %69, i64 %70
  %72 = bitcast i8* %71 to %class.GrShaderVar*
  %73 = bitcast %class.GrGLSLProgramBuilder* %63 to void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)***
  %74 = load void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)**, void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)*** %73, align 16
  %75 = getelementptr inbounds void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)*, void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)** %74, i64 7
  %76 = load void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)*, void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)** %75, align 8
  call void %76(%class.GrGLSLProgramBuilder* %63, %class.GrShaderVar* dereferenceable(40) %72) #7
  %77 = load %class.GrShaderVar*, %class.GrShaderVar** %41, align 8
  br label %78

78:                                               ; preds = %40, %44
  %79 = phi %class.GrShaderVar* [ %42, %40 ], [ %77, %44 ]
  %80 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %79, i64 0, i32 1
  store i32 3, i32* %80, align 4
  %81 = load i8*, i8** %5, align 8
  %82 = getelementptr i8, i8* %81, i64 -24
  %83 = bitcast i8* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds i8, i8* %10, i64 %84
  %86 = bitcast i8* %85 to %class.GrGLSLShaderBuilder*
  %87 = load i8*, i8** @_ZN27GrGLSLFragmentShaderBuilder13kDstColorNameE, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %86, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* %87, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0))
  br label %88

88:                                               ; preds = %78, %1
  %89 = load i8*, i8** @_ZN27GrGLSLFragmentShaderBuilder13kDstColorNameE, align 8
  br label %90

90:                                               ; preds = %27, %88
  %91 = phi i8* [ %89, %88 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), %27 ]
  ret i8* %91
}

declare zeroext i1 @_ZN19GrGLSLShaderBuilder10addFeatureEjPKc(%class.GrGLSLShaderBuilder*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27GrGLSLFragmentShaderBuilder18enableCustomOutputEv(%class.GrGLSLFragmentShaderBuilder*) local_unnamed_addr #1 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 5
  %6 = load %class.GrShaderVar*, %class.GrShaderVar** %5, align 8
  %7 = icmp eq %class.GrShaderVar* %6, null
  br i1 %7, label %8, label %43

8:                                                ; preds = %1
  %9 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr i8, i8* %10, i64 -24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  %16 = getelementptr inbounds i8, i8* %15, i64 336
  %17 = bitcast i8* %16 to %class.GrTBlockList*
  %18 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8** %2, align 8
  %19 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #7
  store i32 31, i32* %3, align 4
  %20 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #7
  store i32 1, i32* %4, align 4
  %21 = call dereferenceable(40) %class.GrShaderVar* @_ZN12GrTBlockListI11GrShaderVarLi1EE12emplace_backIJPKc8GrSLTypeNS0_12TypeModifierEEEERS0_DpOT_(%class.GrTBlockList* %17, i8** nonnull dereferenceable(8) %2, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4)
  store %class.GrShaderVar* %21, %class.GrShaderVar** %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  %22 = load i8*, i8** %9, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %14, i64 %25
  %27 = getelementptr inbounds i8, i8* %26, i64 8
  %28 = bitcast i8* %27 to %class.GrGLSLProgramBuilder**
  %29 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %28, align 8
  %30 = getelementptr inbounds i8, i8* %26, i64 336
  %31 = bitcast i8* %30 to %"class.GrBlockAllocator::Block"**
  %32 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %31, align 16
  %33 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %32, i64 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = bitcast %"class.GrBlockAllocator::Block"* %32 to i8*
  %36 = sext i32 %34 to i64
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to %class.GrShaderVar*
  %39 = bitcast %class.GrGLSLProgramBuilder* %29 to void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)***
  %40 = load void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)**, void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)*** %39, align 16
  %41 = getelementptr inbounds void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)*, void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)** %40, i64 7
  %42 = load void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)*, void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)** %41, align 8
  call void %42(%class.GrGLSLProgramBuilder* %29, %class.GrShaderVar* dereferenceable(40) %38) #7
  br label %43

43:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZThn16_N27GrGLSLFragmentShaderBuilder8dstColorEv(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 -1, i32 11, i32 17
  %3 = bitcast i32* %2 to %class.GrGLSLFragmentShaderBuilder*
  %4 = tail call i8* @_ZN27GrGLSLFragmentShaderBuilder8dstColorEv(%class.GrGLSLFragmentShaderBuilder* %3)
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27GrGLSLFragmentShaderBuilder35enableAdvancedBlendEquationIfNeededE15GrBlendEquation(%class.GrGLSLFragmentShaderBuilder*, i32) unnamed_addr #1 align 2 {
  %3 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 %7
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to %class.GrGLSLProgramBuilder**
  %12 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %11, align 8
  %13 = bitcast %class.GrGLSLProgramBuilder* %12 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %14 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %13, align 16
  %15 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %14, i64 2
  %16 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %15, align 8
  %17 = tail call %class.GrCaps* %16(%class.GrGLSLProgramBuilder* %12) #7
  %18 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %17, i64 0, i32 2, i32 0
  %19 = load %class.GrShaderCaps*, %class.GrShaderCaps** %18, align 8
  %20 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %19, i64 0, i32 18
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %21, 1
  br i1 %22, label %23, label %37

23:                                               ; preds = %2
  %24 = load i8*, i8** %3, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %8, i64 %27
  %29 = bitcast i8* %28 to %class.GrGLSLShaderBuilder*
  %30 = tail call zeroext i1 @_ZN19GrGLSLShaderBuilder10addFeatureEjPKc(%class.GrGLSLShaderBuilder* %29, i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0)) #7
  %31 = load i8*, i8** %3, align 8
  %32 = getelementptr i8, i8* %31, i64 -24
  %33 = bitcast i8* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds i8, i8* %8, i64 %34
  %36 = bitcast i8* %35 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilder18addLayoutQualifierEPKcNS_18InterfaceQualifierE(%class.GrGLSLShaderBuilder* %36, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 1) #7
  br label %37

37:                                               ; preds = %23, %2
  ret void
}

declare void @_ZN19GrGLSLShaderBuilder18addLayoutQualifierEPKcNS_18InterfaceQualifierE(%class.GrGLSLShaderBuilder*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N27GrGLSLFragmentShaderBuilder35enableAdvancedBlendEquationIfNeededE15GrBlendEquation(%class.GrGLSLFragmentShaderBuilder*, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 -1, i32 11, i32 17
  %4 = bitcast i32* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr i8, i8* %5, i64 -24
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i32* %3 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %8
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to %class.GrGLSLProgramBuilder**
  %13 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %12, align 8
  %14 = bitcast %class.GrGLSLProgramBuilder* %13 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %15 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %14, align 16
  %16 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %15, i64 2
  %17 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %16, align 8
  %18 = tail call %class.GrCaps* %17(%class.GrGLSLProgramBuilder* %13) #7
  %19 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %18, i64 0, i32 2, i32 0
  %20 = load %class.GrShaderCaps*, %class.GrShaderCaps** %19, align 8
  %21 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %20, i64 0, i32 18
  %22 = load i32, i32* %21, align 8
  %23 = icmp sgt i32 %22, 1
  br i1 %23, label %24, label %38

24:                                               ; preds = %2
  %25 = load i8*, i8** %4, align 8
  %26 = getelementptr i8, i8* %25, i64 -24
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %9, i64 %28
  %30 = bitcast i8* %29 to %class.GrGLSLShaderBuilder*
  %31 = tail call zeroext i1 @_ZN19GrGLSLShaderBuilder10addFeatureEjPKc(%class.GrGLSLShaderBuilder* %30, i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0)) #7
  %32 = load i8*, i8** %4, align 8
  %33 = getelementptr i8, i8* %32, i64 -24
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds i8, i8* %9, i64 %35
  %37 = bitcast i8* %36 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilder18addLayoutQualifierEPKcNS_18InterfaceQualifierE(%class.GrGLSLShaderBuilder* %37, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 1) #7
  br label %38

38:                                               ; preds = %2, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %class.GrShaderVar* @_ZN12GrTBlockListI11GrShaderVarLi1EE12emplace_backIJPKc8GrSLTypeNS0_12TypeModifierEEEERS0_DpOT_(%class.GrTBlockList*, i8** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %class.SkString, align 8
  %6 = bitcast %class.GrTBlockList* %0 to %"class.GrBlockAllocator::Block"**
  %7 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %6, align 16, !noalias !2
  %8 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %7, i64 0, i32 3
  %9 = load i32, i32* %8, align 4, !noalias !2
  %10 = add i32 %9, 7
  %11 = and i32 %10, -8
  %12 = add nsw i32 %11, 40
  %13 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %7, i64 0, i32 2
  %14 = load i32, i32* %13, align 8, !noalias !2
  %15 = icmp sgt i32 %12, %14
  br i1 %15, label %16, label %24

16:                                               ; preds = %4
  %17 = bitcast %class.GrTBlockList* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator8addBlockEii(%class.GrBlockAllocator* %17, i32 72, i32 536870944) #7, !noalias !2
  %18 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %6, align 16, !noalias !2
  %19 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %18, i64 0, i32 3
  %20 = load i32, i32* %19, align 4, !noalias !2
  %21 = add i32 %20, 7
  %22 = and i32 %21, -8
  %23 = add nsw i32 %22, 40
  br label %24

24:                                               ; preds = %4, %16
  %25 = phi %"class.GrBlockAllocator::Block"* [ %18, %16 ], [ %7, %4 ]
  %26 = phi i32 [ %22, %16 ], [ %11, %4 ]
  %27 = phi i32 [ %23, %16 ], [ %12, %4 ]
  %28 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %25, i64 0, i32 3
  store i32 %27, i32* %28, align 4, !noalias !2
  %29 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %6, align 16, !noalias !2
  %30 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %29, i64 0, i32 4
  store i32 %26, i32* %30, align 8
  %31 = getelementptr inbounds %class.GrTBlockList, %class.GrTBlockList* %0, i64 0, i32 0, i32 0, i64 44
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %32, align 4
  %35 = bitcast %"class.GrBlockAllocator::Block"* %29 to i8*
  %36 = sext i32 %26 to i64
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to %class.GrShaderVar*
  %39 = load i8*, i8** %1, align 8
  %40 = load i32, i32* %2, align 4
  %41 = load i32, i32* %3, align 4
  %42 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %5, i8* %39) #7
  %43 = bitcast i8* %37 to i32*
  store i32 %40, i32* %43, align 8
  %44 = getelementptr inbounds i8, i8* %37, i64 4
  %45 = bitcast i8* %44 to i32*
  store i32 %41, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %37, i64 8
  %47 = bitcast i8* %46 to i32*
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds i8, i8* %37, i64 16
  %49 = bitcast i8* %48 to %class.SkString*
  call void @_ZN8SkStringC1EOS_(%class.SkString* %49, %class.SkString* nonnull dereferenceable(8) %5) #7
  %50 = getelementptr inbounds i8, i8* %37, i64 24
  %51 = bitcast i8* %50 to %class.SkString*
  call void @_ZN8SkStringC1Ev(%class.SkString* %51) #7
  %52 = getelementptr inbounds i8, i8* %37, i64 32
  %53 = bitcast i8* %52 to %class.SkString*
  call void @_ZN8SkStringC1Ev(%class.SkString* %53) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  ret %class.GrShaderVar* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27GrGLSLFragmentShaderBuilder21enableSecondaryOutputEv(%class.GrGLSLFragmentShaderBuilder*) local_unnamed_addr #1 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 7
  store i8 1, i8* %5, align 1
  %6 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr i8, i8* %7, i64 -24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %10
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to %class.GrGLSLProgramBuilder**
  %15 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %14, align 8
  %16 = bitcast %class.GrGLSLProgramBuilder* %15 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %17 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %16, align 16
  %18 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %17, i64 2
  %19 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %18, align 8
  %20 = tail call %class.GrCaps* %19(%class.GrGLSLProgramBuilder* %15) #7
  %21 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %20, i64 0, i32 2, i32 0
  %22 = load %class.GrShaderCaps*, %class.GrShaderCaps** %21, align 8
  %23 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %22, i64 0, i32 8
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %34, label %26

26:                                               ; preds = %1
  %27 = load i8*, i8** %6, align 8
  %28 = getelementptr i8, i8* %27, i64 -24
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i8, i8* %11, i64 %30
  %32 = bitcast i8* %31 to %class.GrGLSLShaderBuilder*
  %33 = tail call zeroext i1 @_ZN19GrGLSLShaderBuilder10addFeatureEjPKc(%class.GrGLSLShaderBuilder* %32, i32 4, i8* nonnull %24) #7
  br label %34

34:                                               ; preds = %1, %26
  %35 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %22, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %71

38:                                               ; preds = %34
  %39 = load i8*, i8** %6, align 8
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i8, i8* %11, i64 %42
  %44 = getelementptr inbounds i8, i8* %43, i64 336
  %45 = bitcast i8* %44 to %class.GrTBlockList*
  %46 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i8** %2, align 8
  %47 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #7
  store i32 31, i32* %3, align 4
  %48 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #7
  store i32 1, i32* %4, align 4
  %49 = call dereferenceable(40) %class.GrShaderVar* @_ZN12GrTBlockListI11GrShaderVarLi1EE12emplace_backIJPKc8GrSLTypeNS0_12TypeModifierEEEERS0_DpOT_(%class.GrTBlockList* %45, i8** nonnull dereferenceable(8) %2, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  %50 = load i8*, i8** %6, align 8
  %51 = getelementptr i8, i8* %50, i64 -24
  %52 = bitcast i8* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds i8, i8* %11, i64 %53
  %55 = getelementptr inbounds i8, i8* %54, i64 8
  %56 = bitcast i8* %55 to %class.GrGLSLProgramBuilder**
  %57 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %56, align 8
  %58 = getelementptr inbounds i8, i8* %54, i64 336
  %59 = bitcast i8* %58 to %"class.GrBlockAllocator::Block"**
  %60 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %59, align 16
  %61 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %60, i64 0, i32 4
  %62 = load i32, i32* %61, align 8
  %63 = bitcast %"class.GrBlockAllocator::Block"* %60 to i8*
  %64 = sext i32 %62 to i64
  %65 = getelementptr inbounds i8, i8* %63, i64 %64
  %66 = bitcast i8* %65 to %class.GrShaderVar*
  %67 = bitcast %class.GrGLSLProgramBuilder* %57 to void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)***
  %68 = load void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)**, void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)*** %67, align 16
  %69 = getelementptr inbounds void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)*, void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)** %68, i64 8
  %70 = load void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)*, void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)** %69, align 8
  call void %70(%class.GrGLSLProgramBuilder* %57, %class.GrShaderVar* dereferenceable(40) %66) #7
  br label %71

71:                                               ; preds = %38, %34
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK27GrGLSLFragmentShaderBuilder25getPrimaryColorOutputNameEv(%class.GrGLSLFragmentShaderBuilder* nocapture readnone) local_unnamed_addr #0 align 2 {
  ret i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK27GrGLSLFragmentShaderBuilder25primaryColorOutputIsInOutEv(%class.GrGLSLFragmentShaderBuilder* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 5
  %3 = load %class.GrShaderVar*, %class.GrShaderVar** %2, align 8
  %4 = icmp eq %class.GrShaderVar* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 3
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK27GrGLSLFragmentShaderBuilder27getSecondaryColorOutputNameEv(%class.GrGLSLFragmentShaderBuilder*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i1 (%class.GrGLSLFragmentShaderBuilder*)***
  %3 = load i1 (%class.GrGLSLFragmentShaderBuilder*)**, i1 (%class.GrGLSLFragmentShaderBuilder*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%class.GrGLSLFragmentShaderBuilder*)*, i1 (%class.GrGLSLFragmentShaderBuilder*)** %3, i64 7
  %5 = load i1 (%class.GrGLSLFragmentShaderBuilder*)*, i1 (%class.GrGLSLFragmentShaderBuilder*)** %4, align 8
  %6 = tail call zeroext i1 %5(%class.GrGLSLFragmentShaderBuilder* %0) #7
  br i1 %6, label %7, label %29

7:                                                ; preds = %1
  %8 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr i8, i8* %9, i64 -24
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 %12
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = bitcast i8* %15 to %class.GrGLSLProgramBuilder**
  %17 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %16, align 8
  %18 = bitcast %class.GrGLSLProgramBuilder* %17 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %19 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %18, align 16
  %20 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %19, i64 2
  %21 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %20, align 8
  %22 = tail call %class.GrCaps* %21(%class.GrGLSLProgramBuilder* %17) #7
  %23 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %22, i64 0, i32 2, i32 0
  %24 = load %class.GrShaderCaps*, %class.GrShaderCaps** %23, align 8
  %25 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, 0
  %28 = select i1 %27, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0)
  ret i8* %28

29:                                               ; preds = %1
  ret i8* null
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK27GrGLSLFragmentShaderBuilder16getSurfaceOriginEv(%class.GrGLSLFragmentShaderBuilder* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr i8, i8* %3, i64 -24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 %6
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to %class.GrGLSLProgramBuilder**
  %11 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %10, align 8
  %12 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %11, i64 0, i32 7
  %13 = load %class.GrProgramInfo*, %class.GrProgramInfo** %12, align 16
  %14 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %13, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27GrGLSLFragmentShaderBuilder10onFinalizeEv(%class.GrGLSLFragmentShaderBuilder* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr i8, i8* %3, i64 -24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 %6
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to %class.GrGLSLProgramBuilder**
  %11 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %10, align 8
  %12 = bitcast %class.GrGLSLProgramBuilder* %11 to %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)***
  %13 = load %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*** %12, align 16
  %14 = getelementptr inbounds %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)** %13, i64 6
  %15 = load %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)** %14, align 8
  %16 = tail call %class.GrGLSLVaryingHandler* %15(%class.GrGLSLProgramBuilder* %11) #7
  %17 = load i8*, i8** %2, align 8
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %7, i64 %20
  %22 = getelementptr inbounds i8, i8* %21, i64 160
  %23 = bitcast i8* %22 to %class.SkString**
  %24 = load %class.SkString*, %class.SkString** %23, align 8
  %25 = getelementptr inbounds %class.SkString, %class.SkString* %24, i64 5
  %26 = getelementptr inbounds %class.SkString, %class.SkString* %24, i64 6
  tail call void @_ZNK20GrGLSLVaryingHandler12getFragDeclsEP8SkStringS1_(%class.GrGLSLVaryingHandler* %16, %class.SkString* %25, %class.SkString* %26) #7
  ret void
}

declare void @_ZNK20GrGLSLVaryingHandler12getFragDeclsEP8SkStringS1_(%class.GrGLSLVaryingHandler*, %class.SkString*, %class.SkString*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n32_N27GrGLSLFragmentShaderBuilder10onFinalizeEv(%class.GrGLSLFragmentShaderBuilder* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8*
  %3 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -32
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr i8, i8* %10, i64 -24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 %13
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = bitcast i8* %15 to %class.GrGLSLProgramBuilder**
  %17 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %16, align 8
  %18 = bitcast %class.GrGLSLProgramBuilder* %17 to %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)***
  %19 = load %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*** %18, align 16
  %20 = getelementptr inbounds %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)** %19, i64 6
  %21 = load %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)** %20, align 8
  %22 = tail call %class.GrGLSLVaryingHandler* %21(%class.GrGLSLProgramBuilder* %17) #7
  %23 = load i8*, i8** %9, align 8
  %24 = getelementptr i8, i8* %23, i64 -24
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %8, i64 %26
  %28 = getelementptr inbounds i8, i8* %27, i64 160
  %29 = bitcast i8* %28 to %class.SkString**
  %30 = load %class.SkString*, %class.SkString** %29, align 8
  %31 = getelementptr inbounds %class.SkString, %class.SkString* %30, i64 5
  %32 = getelementptr inbounds %class.SkString, %class.SkString* %30, i64 6
  tail call void @_ZNK20GrGLSLVaryingHandler12getFragDeclsEP8SkStringS1_(%class.GrGLSLVaryingHandler* %22, %class.SkString* %31, %class.SkString* %32) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27GrGLSLFragmentShaderBuilder25onBeforeChildProcEmitCodeEv(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 3
  tail call void @_ZN8SkTArrayIiLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.10* %2, i32 1, i32 1) #7
  %3 = getelementptr inbounds %class.SkTArray.10, %class.SkTArray.10* %2, i64 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 3, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 1
  %8 = and i64 %7, 2147483647
  %9 = getelementptr inbounds i32, i32* %4, i64 %8
  %10 = add i64 %6, 2
  %11 = and i64 %10, 4294967294
  %12 = and i64 %6, -4294967295
  %13 = or i64 %11, %12
  store i64 %13, i64* %5, align 8
  store i32 0, i32* %9, align 4
  %14 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 4
  %15 = load i64, i64* %5, align 8
  %16 = load i32*, i32** %3, align 8
  %17 = shl i64 %15, 31
  %18 = and i64 %17, 9223372032559808512
  %19 = add nsw i64 %18, -8589934592
  %20 = ashr exact i64 %19, 32
  %21 = getelementptr inbounds i32, i32* %16, i64 %20
  %22 = load i32, i32* %21, align 4
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i32 %22) #7
  ret void
}

declare void @_ZN8SkString7appendfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27GrGLSLFragmentShaderBuilder24onAfterChildProcEmitCodeEv(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 3
  %3 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 3, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 4294967294
  %6 = add nuw nsw i64 %5, 4294967294
  %7 = and i64 %6, 4294967294
  %8 = and i64 %4, -4294967295
  %9 = or i64 %7, %8
  store i64 %9, i64* %3, align 8
  tail call void @_ZN8SkTArrayIiLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.10* %2, i32 0, i32 2) #7
  %10 = getelementptr inbounds %class.SkTArray.10, %class.SkTArray.10* %2, i64 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = load i64, i64* %3, align 8
  %13 = lshr i64 %12, 1
  %14 = and i64 %13, 2147483647
  %15 = add nsw i64 %14, -1
  %16 = getelementptr inbounds i32, i32* %11, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 4
  %19 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 4
  %20 = getelementptr inbounds %class.SkString, %class.SkString* %19, i64 0, i32 0, i32 0
  %21 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %20, align 8
  %22 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %21, i64 0, i32 2
  %23 = tail call i8* @strrchr(i8* %22, i32 95) #11
  %24 = icmp eq i8* %23, null
  %25 = ptrtoint i8* %23 to i64
  %26 = ptrtoint i8* %22 to i64
  %27 = sub i64 %25, %26
  %28 = shl i64 %27, 32
  %29 = ashr exact i64 %28, 32
  %30 = select i1 %24, i64 -1, i64 %29
  %31 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %21, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = sub nsw i64 %33, %30
  tail call void @_ZN8SkString6removeEmm(%class.SkString* %19, i64 %30, i64 %34) #7
  ret void
}

declare void @_ZN8SkString6removeEmm(%class.SkString*, i64, i64) local_unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFPFragmentBuilderD1Ev(%class.GrGLSLFPFragmentBuilder*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFPFragmentBuilderD0Ev(%class.GrGLSLFPFragmentBuilder*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N23GrGLSLFPFragmentBuilderD1Ev(%class.GrGLSLFPFragmentBuilder*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N23GrGLSLFPFragmentBuilderD0Ev(%class.GrGLSLFPFragmentBuilder*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLXPFragmentBuilderD1Ev(%class.GrGLSLXPFragmentBuilder*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLXPFragmentBuilderD0Ev(%class.GrGLSLXPFragmentBuilder*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N23GrGLSLXPFragmentBuilderD1Ev(%class.GrGLSLXPFragmentBuilder*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N23GrGLSLXPFragmentBuilderD0Ev(%class.GrGLSLXPFragmentBuilder*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27GrGLSLFragmentShaderBuilder18forceHighPrecisionEv(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 9
  store i8 1, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.SkString* @_ZNK27GrGLSLFragmentShaderBuilder15getMangleStringEv(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 4
  ret %class.SkString* %2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27GrGLSLFragmentShaderBuilderD1Ev(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 11
  %4 = bitcast %class.GrGLSLShaderBuilder.base* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 2, i64 4) to i64), i64* %4, align 16
  %5 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 2
  %6 = bitcast %class.GrGLSLXPFragmentBuilder.base* %5 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 1, i64 3) to i64), i64* %6, align 8
  %7 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %7) #7
  %8 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 3
  %14 = bitcast %class.SkTArray.10* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @_Z7sk_freePv(i8* %15) #7
  br label %16

16:                                               ; preds = %1, %12
  %17 = bitcast %class.GrGLSLShaderBuilder.base* %3 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilderD2Ev(%class.GrGLSLShaderBuilder* %17) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27GrGLSLFragmentShaderBuilderD0Ev(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 11
  %4 = bitcast %class.GrGLSLShaderBuilder.base* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 2, i64 4) to i64), i64* %4, align 16
  %5 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 2
  %6 = bitcast %class.GrGLSLXPFragmentBuilder.base* %5 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 1, i64 3) to i64), i64* %6, align 8
  %7 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %7) #7
  %8 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 3
  %14 = bitcast %class.SkTArray.10* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @_Z7sk_freePv(i8* %15) #7
  br label %16

16:                                               ; preds = %1, %12
  %17 = bitcast %class.GrGLSLShaderBuilder.base* %3 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilderD2Ev(%class.GrGLSLShaderBuilder* %17) #7
  %18 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK27GrGLSLFragmentShaderBuilder20hasCustomColorOutputEv(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 5
  %3 = load %class.GrShaderVar*, %class.GrShaderVar** %2, align 8
  %4 = icmp ne %class.GrShaderVar* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK27GrGLSLFragmentShaderBuilder18hasSecondaryOutputEv(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 1, !range !5
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn16_NK27GrGLSLFragmentShaderBuilder20hasCustomColorOutputEv(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 -1, i32 11, i32 17
  %3 = getelementptr inbounds i32, i32* %2, i64 12
  %4 = bitcast i32* %3 to %class.GrShaderVar**
  %5 = load %class.GrShaderVar*, %class.GrShaderVar** %4, align 8
  %6 = icmp ne %class.GrShaderVar* %5, null
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn16_NK27GrGLSLFragmentShaderBuilder18hasSecondaryOutputEv(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 -1, i32 11, i32 17
  %3 = bitcast i32* %2 to %class.GrGLSLFragmentShaderBuilder*
  %4 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %3, i64 0, i32 7
  %5 = load i8, i8* %4, align 1, !range !5
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N27GrGLSLFragmentShaderBuilderD1Ev(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 -1, i32 11, i32 17
  %3 = bitcast i32* %2 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 0, i64 3) to i64), i64* %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 16
  %5 = bitcast i32* %4 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 2, i64 4) to i64), i64* %5, align 16
  %6 = getelementptr inbounds i32, i32* %2, i64 4
  %7 = bitcast i32* %6 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 1, i64 3) to i64), i64* %7, align 8
  %8 = getelementptr inbounds i32, i32* %2, i64 10
  %9 = bitcast i32* %8 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %9) #7
  %10 = getelementptr inbounds i32, i32* %2, i64 8
  %11 = bitcast i32* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds i32, i32* %2, i64 6
  %17 = bitcast i32* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_Z7sk_freePv(i8* %18) #7
  br label %19

19:                                               ; preds = %1, %15
  %20 = bitcast i32* %4 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilderD2Ev(%class.GrGLSLShaderBuilder* %20) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N27GrGLSLFragmentShaderBuilderD0Ev(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentShaderBuilder, %class.GrGLSLFragmentShaderBuilder* %0, i64 -1, i32 11, i32 17
  %3 = bitcast i32* %2 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 0, i64 3) to i64), i64* %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 16
  %5 = bitcast i32* %4 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 2, i64 4) to i64), i64* %5, align 16
  %6 = getelementptr inbounds i32, i32* %2, i64 4
  %7 = bitcast i32* %6 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 1, i64 3) to i64), i64* %7, align 8
  %8 = getelementptr inbounds i32, i32* %2, i64 10
  %9 = bitcast i32* %8 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %9) #7
  %10 = getelementptr inbounds i32, i32* %2, i64 8
  %11 = bitcast i32* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds i32, i32* %2, i64 6
  %17 = bitcast i32* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_Z7sk_freePv(i8* %18) #7
  br label %19

19:                                               ; preds = %1, %15
  %20 = bitcast i32* %4 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilderD2Ev(%class.GrGLSLShaderBuilder* %20) #7
  %21 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N27GrGLSLFragmentShaderBuilderD1Ev(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8*
  %3 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 64
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 2, i64 4) to i64), i64* %11, align 16
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 1, i64 3) to i64), i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 40
  %15 = bitcast i8* %14 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %15) #7
  %16 = getelementptr inbounds i8, i8* %8, i64 32
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds i8, i8* %8, i64 24
  %23 = bitcast i8* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @_Z7sk_freePv(i8* %24) #7
  br label %25

25:                                               ; preds = %1, %21
  %26 = bitcast i8* %10 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilderD2Ev(%class.GrGLSLShaderBuilder* %26) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N27GrGLSLFragmentShaderBuilderD0Ev(%class.GrGLSLFragmentShaderBuilder*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8*
  %3 = bitcast %class.GrGLSLFragmentShaderBuilder* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 64
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 2, i64 4) to i64), i64* %11, align 16
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [14 x i8*], [9 x i8*], [7 x i8*] }, { [14 x i8*], [9 x i8*], [7 x i8*] }* @_ZTV27GrGLSLFragmentShaderBuilder, i64 0, inrange i32 1, i64 3) to i64), i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 40
  %15 = bitcast i8* %14 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %15) #7
  %16 = getelementptr inbounds i8, i8* %8, i64 32
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds i8, i8* %8, i64 24
  %23 = bitcast i8* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @_Z7sk_freePv(i8* %24) #7
  br label %25

25:                                               ; preds = %1, %21
  %26 = bitcast i8* %10 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilderD2Ev(%class.GrGLSLShaderBuilder* %26) #7
  tail call void @_ZdlPv(i8* %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #7
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to %class.SkString*
  %55 = load %class.SkString*, %class.SkString** %49, align 8
  %56 = getelementptr inbounds %class.SkString, %class.SkString* %55, i64 %51
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %54, %class.SkString* dereferenceable(8) %56) #7
  %57 = load %class.SkString*, %class.SkString** %49, align 8
  %58 = getelementptr inbounds %class.SkString, %class.SkString* %57, i64 %51
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %58) #7
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #7
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #7

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #7

; Function Attrs: nofree nounwind readonly
declare i8* @strrchr(i8*, i32) local_unnamed_addr #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilderD2Ev(%class.GrGLSLShaderBuilder*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV19GrGLSLShaderBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16
  %3 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %class.SkString**
  br label %15

11:                                               ; preds = %15, %1
  %12 = phi i64 [ %6, %1 ], [ %20, %15 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %27, label %24

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %19, %15 ]
  %17 = load %class.SkString*, %class.SkString** %10, align 8
  %18 = getelementptr inbounds %class.SkString, %class.SkString* %17, i64 %16
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %18) #7
  %19 = add nuw nsw i64 %16, 1
  %20 = load i64, i64* %5, align 8
  %21 = lshr i64 %20, 1
  %22 = and i64 %21, 2147483647
  %23 = icmp ult i64 %19, %22
  br i1 %23, label %15, label %11

24:                                               ; preds = %11
  %25 = bitcast i8* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_Z7sk_freePv(i8* %26) #7
  br label %27

27:                                               ; preds = %11, %24
  %28 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 0, i32 0, i32 0, i64 8
  %29 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 0, i32 0, i32 0, i64 16
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 4294967294
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %109, label %98

34:                                               ; preds = %116
  %35 = bitcast i8* %125 to %"class.std::__1::unique_ptr"**
  br label %40

36:                                               ; preds = %51, %116
  %37 = phi i64 [ %128, %116 ], [ %53, %51 ]
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %60, label %57

40:                                               ; preds = %51, %34
  %41 = phi i64 [ 0, %34 ], [ %52, %51 ]
  %42 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %35, align 8
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 %41, i32 0, i32 0, i32 0
  %44 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %43, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %43, align 8
  %45 = icmp eq %"class.SkSL::Statement"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.SkSL::Statement"* %44 to void (%"class.SkSL::Statement"*)***
  %48 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %48, i64 1
  %50 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %49, align 8
  tail call void %50(%"class.SkSL::Statement"* nonnull %44) #7
  br label %51

51:                                               ; preds = %46, %40
  %52 = add nuw nsw i64 %41, 1
  %53 = load i64, i64* %127, align 8
  %54 = lshr i64 %53, 1
  %55 = and i64 %54, 2147483647
  %56 = icmp ult i64 %52, %55
  br i1 %56, label %40, label %36

57:                                               ; preds = %36
  %58 = bitcast i8* %125 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %59) #7
  br label %60

60:                                               ; preds = %36, %57
  %61 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 6
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %61) #7
  %62 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %62) #7
  %63 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %63) #7
  %64 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %65 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 128
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 4294967294
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %60
  %71 = bitcast i8* %64 to %class.SkString**
  br label %76

72:                                               ; preds = %76, %60
  %73 = phi i64 [ %67, %60 ], [ %81, %76 ]
  %74 = and i64 %73, 1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %88, label %85

76:                                               ; preds = %76, %70
  %77 = phi i64 [ 0, %70 ], [ %80, %76 ]
  %78 = load %class.SkString*, %class.SkString** %71, align 8
  %79 = getelementptr inbounds %class.SkString, %class.SkString* %78, i64 %77
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %79) #7
  %80 = add nuw nsw i64 %77, 1
  %81 = load i64, i64* %66, align 8
  %82 = lshr i64 %81, 1
  %83 = and i64 %82, 2147483647
  %84 = icmp ult i64 %80, %83
  br i1 %84, label %76, label %72

85:                                               ; preds = %72
  %86 = bitcast i8* %64 to i8**
  %87 = load i8*, i8** %86, align 8
  tail call void @_Z7sk_freePv(i8* %87) #7
  br label %88

88:                                               ; preds = %72, %85
  %89 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 2, i32 0
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  tail call void @_ZdlPv(i8* %96) #13
  br label %97

97:                                               ; preds = %88, %94
  ret void

98:                                               ; preds = %27
  %99 = bitcast i8* %28 to %class.SkString**
  br label %100

100:                                              ; preds = %100, %98
  %101 = phi i64 [ 0, %98 ], [ %104, %100 ]
  %102 = load %class.SkString*, %class.SkString** %99, align 8
  %103 = getelementptr inbounds %class.SkString, %class.SkString* %102, i64 %101
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %103) #7
  %104 = add nuw nsw i64 %101, 1
  %105 = load i64, i64* %30, align 8
  %106 = lshr i64 %105, 1
  %107 = and i64 %106, 2147483647
  %108 = icmp ult i64 %104, %107
  br i1 %108, label %100, label %109

109:                                              ; preds = %100, %27
  %110 = phi i64 [ %31, %27 ], [ %105, %100 ]
  %111 = and i64 %110, 1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = bitcast i8* %28 to i8**
  %115 = load i8*, i8** %114, align 8
  tail call void @_Z7sk_freePv(i8* %115) #7
  br label %116

116:                                              ; preds = %113, %109
  %117 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 10
  tail call void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList* %117) #7
  %118 = bitcast %class.GrTBlockList* %117 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %118) #7
  %119 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 10, i32 0, i32 0, i64 16
  %120 = bitcast i8* %119 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %120) #7
  %121 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 9
  tail call void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList* %121) #7
  %122 = bitcast %class.GrTBlockList* %121 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %122) #7
  %123 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 9, i32 0, i32 0, i64 16
  %124 = bitcast i8* %123 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %124) #7
  %125 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 7, i32 0, i32 0, i64 16
  %126 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 7, i32 0, i32 0, i64 24
  %127 = bitcast i8* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = and i64 %128, 4294967294
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %36, label %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilderD0Ev(%class.GrGLSLShaderBuilder*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList*) local_unnamed_addr #1 comdat align 2 {
  %2 = bitcast %class.GrTBlockList* %0 to %"class.GrBlockAllocator::Block"**
  %3 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %2, align 16, !noalias !6
  %4 = icmp eq %"class.GrBlockAllocator::Block"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 1
  %7 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %6, align 8, !noalias !6
  %8 = icmp eq %"class.GrBlockAllocator::Block"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %7, i64 0, i32 3
  %11 = load i32, i32* %10, align 4, !noalias !6
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %7
  br label %14

14:                                               ; preds = %9, %5
  %15 = phi %"class.GrBlockAllocator::Block"* [ %13, %9 ], [ null, %5 ]
  %16 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8, !noalias !6
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %35, %14
  %20 = phi %"class.GrBlockAllocator::Block"* [ %3, %14 ], [ %24, %35 ]
  %21 = phi %"class.GrBlockAllocator::Block"* [ %15, %14 ], [ %36, %35 ]
  %22 = phi i32 [ %17, %14 ], [ %38, %35 ]
  br label %42

23:                                               ; preds = %14, %35
  %24 = phi %"class.GrBlockAllocator::Block"* [ %36, %35 ], [ %15, %14 ]
  %25 = icmp eq %"class.GrBlockAllocator::Block"* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 1
  %28 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %27, align 8, !noalias !6
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %28, i64 0, i32 3
  %32 = load i32, i32* %31, align 4, !noalias !6
  %33 = icmp slt i32 %32, 0
  %34 = select i1 %33, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %28
  br label %35

35:                                               ; preds = %30, %26
  %36 = phi %"class.GrBlockAllocator::Block"* [ null, %26 ], [ %34, %30 ]
  %37 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 4
  %38 = load i32, i32* %37, align 8, !noalias !6
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %23, label %19

40:                                               ; preds = %23, %59, %79, %1
  %41 = bitcast %class.GrTBlockList* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %41) #7
  ret void

42:                                               ; preds = %75, %19
  %43 = phi %"class.GrBlockAllocator::Block"* [ %20, %19 ], [ %76, %75 ]
  %44 = phi %"class.GrBlockAllocator::Block"* [ %21, %19 ], [ %77, %75 ]
  %45 = phi i32 [ %22, %19 ], [ %78, %75 ]
  %46 = bitcast %"class.GrBlockAllocator::Block"* %43 to i8*
  br label %47

47:                                               ; preds = %42, %47
  %48 = phi i32 [ %57, %47 ], [ %45, %42 ]
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  %51 = getelementptr inbounds i8, i8* %50, i64 32
  %52 = bitcast i8* %51 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %52) #7
  %53 = getelementptr inbounds i8, i8* %50, i64 24
  %54 = bitcast i8* %53 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %54) #7
  %55 = getelementptr inbounds i8, i8* %50, i64 16
  %56 = bitcast i8* %55 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %56) #7
  %57 = add i32 %48, -40
  %58 = icmp slt i32 %57, 32
  br i1 %58, label %59, label %47

59:                                               ; preds = %47
  %60 = icmp eq %"class.GrBlockAllocator::Block"* %44, null
  br i1 %60, label %40, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 1
  %63 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %62, align 8
  %64 = icmp eq %"class.GrBlockAllocator::Block"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %63, i64 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %67, 0
  %69 = select i1 %68, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %63
  br label %70

70:                                               ; preds = %65, %61
  %71 = phi %"class.GrBlockAllocator::Block"* [ null, %61 ], [ %69, %65 ]
  %72 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %91, %70
  %76 = phi %"class.GrBlockAllocator::Block"* [ %44, %70 ], [ %80, %91 ]
  %77 = phi %"class.GrBlockAllocator::Block"* [ %71, %70 ], [ %92, %91 ]
  %78 = phi i32 [ %73, %70 ], [ %94, %91 ]
  br label %42

79:                                               ; preds = %70, %91
  %80 = phi %"class.GrBlockAllocator::Block"* [ %92, %91 ], [ %71, %70 ]
  %81 = icmp eq %"class.GrBlockAllocator::Block"* %80, null
  br i1 %81, label %40, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %80, i64 0, i32 1
  %84 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %83, align 8
  %85 = icmp eq %"class.GrBlockAllocator::Block"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %84, i64 0, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = icmp slt i32 %88, 0
  %90 = select i1 %89, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %84
  br label %91

91:                                               ; preds = %86, %82
  %92 = phi %"class.GrBlockAllocator::Block"* [ null, %82 ], [ %90, %86 ]
  %93 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %80, i64 0, i32 4
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %79, label %75
}

declare void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIiLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.10*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.10, %class.SkTArray.10* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %75

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %75, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 4) #7
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.10, %class.SkTArray.10* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %58, %50 ]
  %52 = shl nuw nsw i64 %51, 2
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to i32*
  %55 = load i32*, i32** %49, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 %51
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %54, align 4
  %58 = add nuw nsw i64 %51, 1
  %59 = load i64, i64* %4, align 8
  %60 = lshr i64 %59, 1
  %61 = and i64 %60, 2147483647
  %62 = icmp ult i64 %58, %61
  br i1 %62, label %50, label %63

63:                                               ; preds = %50, %35
  %64 = phi i64 [ %45, %35 ], [ %59, %50 ]
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  %67 = bitcast %class.SkTArray.10* %0 to i8**
  br i1 %66, label %71, label %68

68:                                               ; preds = %63
  %69 = load i8*, i8** %67, align 8
  tail call void @_Z7sk_freePv(i8* %69) #7
  %70 = load i64, i64* %4, align 8
  br label %71

71:                                               ; preds = %63, %68
  %72 = phi i64 [ %70, %68 ], [ %64, %63 ]
  store i8* %44, i8** %67, align 8
  %73 = and i64 %72, -4294967298
  %74 = or i64 %73, 1
  store i64 %74, i64* %4, align 8
  br label %75

75:                                               ; preds = %71, %32, %21
  ret void
}

declare void @_ZN16GrBlockAllocator8addBlockEii(%class.GrBlockAllocator*, i32, i32) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readonly }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm: argument 0"}
!4 = distinct !{!4, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb0ELb0EXadL_ZN12GrTBlockListIS0_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_5FirstES7_EEXadL_ZNS3_9DecrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv: argument 0"}
!8 = distinct !{!8, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb0ELb0EXadL_ZN12GrTBlockListIS0_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_5FirstES7_EEXadL_ZNS3_9DecrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv"}
