; ModuleID = '../../third_party/boringssl/src/crypto/dsa/dsa.c'
source_filename = "../../third_party/boringssl/src/crypto/dsa/dsa.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.CRYPTO_EX_DATA_CLASS = type { %struct.CRYPTO_STATIC_MUTEX, %struct.stack_st_CRYPTO_EX_DATA_FUNCS*, i8 }
%struct.CRYPTO_STATIC_MUTEX = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%struct.stack_st_CRYPTO_EX_DATA_FUNCS = type opaque
%struct.dsa_st = type { i64, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %union.crypto_mutex_st, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, i32, %struct.crypto_ex_data_st }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.bn_mont_ctx_st = type { %struct.bignum_st, %struct.bignum_st, [2 x i64] }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.bn_gencb_st = type { i8*, i32 (i32, i32, %struct.bn_gencb_st*)* }
%struct.env_md_st = type opaque
%struct.bignum_ctx = type opaque
%struct.engine_st = type opaque
%struct.DSA_SIG_st = type { %struct.bignum_st*, %struct.bignum_st* }
%struct.dh_st = type { %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %union.crypto_mutex_st, %struct.bn_mont_ctx_st*, %struct.bignum_st*, %struct.bignum_st*, i8*, i32, %struct.bignum_st*, i32, i32 }

@.str = private unnamed_addr constant [49 x i8] c"../../third_party/boringssl/src/crypto/dsa/dsa.c\00", align 1
@g_ex_data_class = internal global %struct.CRYPTO_EX_DATA_CLASS zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %struct.dsa_st* @DSA_new() local_unnamed_addr #0 {
  %1 = tail call i8* @OPENSSL_malloc(i64 144) #6
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  tail call void @ERR_put_error(i32 10, i32 0, i32 65, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 92) #6
  br label %12

4:                                                ; preds = %0
  %5 = bitcast i8* %1 to %struct.dsa_st*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %1, i8 0, i64 144, i1 false) #6
  %6 = getelementptr inbounds i8, i8* %1, i64 128
  %7 = bitcast i8* %6 to i32*
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 56
  %9 = bitcast i8* %8 to %union.crypto_mutex_st*
  tail call void @CRYPTO_MUTEX_init(%union.crypto_mutex_st* %9) #6
  %10 = getelementptr inbounds i8, i8* %1, i64 136
  %11 = bitcast i8* %10 to %struct.crypto_ex_data_st*
  tail call void @CRYPTO_new_ex_data(%struct.crypto_ex_data_st* %11) #6
  br label %12

12:                                               ; preds = %4, %3
  %13 = phi %struct.dsa_st* [ null, %3 ], [ %5, %4 ]
  ret %struct.dsa_st* %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_init(%union.crypto_mutex_st*) local_unnamed_addr #2

declare void @CRYPTO_new_ex_data(%struct.crypto_ex_data_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @DSA_free(%struct.dsa_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.dsa_st* %0, null
  br i1 %2, label %25, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 10
  %5 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %4) #6
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %3
  %8 = bitcast %struct.dsa_st* %0 to i8*
  %9 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 11
  tail call void @CRYPTO_free_ex_data(%struct.CRYPTO_EX_DATA_CLASS* nonnull @g_ex_data_class, i8* nonnull %8, %struct.crypto_ex_data_st* %9) #6
  %10 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 1
  %11 = load %struct.bignum_st*, %struct.bignum_st** %10, align 8
  tail call void @BN_clear_free(%struct.bignum_st* %11) #6
  %12 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 2
  %13 = load %struct.bignum_st*, %struct.bignum_st** %12, align 8
  tail call void @BN_clear_free(%struct.bignum_st* %13) #6
  %14 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 3
  %15 = load %struct.bignum_st*, %struct.bignum_st** %14, align 8
  tail call void @BN_clear_free(%struct.bignum_st* %15) #6
  %16 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 4
  %17 = load %struct.bignum_st*, %struct.bignum_st** %16, align 8
  tail call void @BN_clear_free(%struct.bignum_st* %17) #6
  %18 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 5
  %19 = load %struct.bignum_st*, %struct.bignum_st** %18, align 8
  tail call void @BN_clear_free(%struct.bignum_st* %19) #6
  %20 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 8
  %21 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %20, align 8
  tail call void @BN_MONT_CTX_free(%struct.bn_mont_ctx_st* %21) #6
  %22 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 9
  %23 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %22, align 8
  tail call void @BN_MONT_CTX_free(%struct.bn_mont_ctx_st* %23) #6
  %24 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 7
  tail call void @CRYPTO_MUTEX_cleanup(%union.crypto_mutex_st* %24) #6
  tail call void @OPENSSL_free(i8* nonnull %8) #6
  br label %25

25:                                               ; preds = %3, %1, %7
  ret void
}

declare i32 @CRYPTO_refcount_dec_and_test_zero(i32*) local_unnamed_addr #2

declare void @CRYPTO_free_ex_data(%struct.CRYPTO_EX_DATA_CLASS*, i8*, %struct.crypto_ex_data_st*) local_unnamed_addr #2

declare void @BN_clear_free(%struct.bignum_st*) local_unnamed_addr #2

declare void @BN_MONT_CTX_free(%struct.bn_mont_ctx_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_cleanup(%union.crypto_mutex_st*) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DSA_up_ref(%struct.dsa_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 10
  tail call void @CRYPTO_refcount_inc(i32* %2) #6
  ret i32 1
}

declare void @CRYPTO_refcount_inc(i32*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.bignum_st* @DSA_get0_pub_key(%struct.dsa_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 4
  %3 = load %struct.bignum_st*, %struct.bignum_st** %2, align 8
  ret %struct.bignum_st* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.bignum_st* @DSA_get0_priv_key(%struct.dsa_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 5
  %3 = load %struct.bignum_st*, %struct.bignum_st** %2, align 8
  ret %struct.bignum_st* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.bignum_st* @DSA_get0_p(%struct.dsa_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 1
  %3 = load %struct.bignum_st*, %struct.bignum_st** %2, align 8
  ret %struct.bignum_st* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.bignum_st* @DSA_get0_q(%struct.dsa_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 2
  %3 = load %struct.bignum_st*, %struct.bignum_st** %2, align 8
  ret %struct.bignum_st* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.bignum_st* @DSA_get0_g(%struct.dsa_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 3
  %3 = load %struct.bignum_st*, %struct.bignum_st** %2, align 8
  ret %struct.bignum_st* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @DSA_get0_key(%struct.dsa_st* nocapture readonly, %struct.bignum_st**, %struct.bignum_st**) local_unnamed_addr #4 {
  %4 = icmp eq %struct.bignum_st** %1, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 4
  %7 = bitcast %struct.bignum_st** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %struct.bignum_st** %1 to i64*
  store i64 %8, i64* %9, align 8
  br label %10

10:                                               ; preds = %3, %5
  %11 = icmp eq %struct.bignum_st** %2, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 5
  %14 = bitcast %struct.bignum_st** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %struct.bignum_st** %2 to i64*
  store i64 %15, i64* %16, align 8
  br label %17

17:                                               ; preds = %10, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @DSA_get0_pqg(%struct.dsa_st* nocapture readonly, %struct.bignum_st**, %struct.bignum_st**, %struct.bignum_st**) local_unnamed_addr #4 {
  %5 = icmp eq %struct.bignum_st** %1, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 1
  %8 = bitcast %struct.bignum_st** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %struct.bignum_st** %1 to i64*
  store i64 %9, i64* %10, align 8
  br label %11

11:                                               ; preds = %4, %6
  %12 = icmp eq %struct.bignum_st** %2, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 2
  %15 = bitcast %struct.bignum_st** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %struct.bignum_st** %2 to i64*
  store i64 %16, i64* %17, align 8
  br label %18

18:                                               ; preds = %11, %13
  %19 = icmp eq %struct.bignum_st** %3, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 3
  %22 = bitcast %struct.bignum_st** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %struct.bignum_st** %3 to i64*
  store i64 %23, i64* %24, align 8
  br label %25

25:                                               ; preds = %18, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DSA_set0_key(%struct.dsa_st* nocapture, %struct.bignum_st*, %struct.bignum_st*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 4
  %5 = load %struct.bignum_st*, %struct.bignum_st** %4, align 8
  %6 = icmp eq %struct.bignum_st* %5, null
  %7 = icmp eq %struct.bignum_st* %1, null
  %8 = and i1 %7, %6
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  br i1 %7, label %11, label %10

10:                                               ; preds = %9
  tail call void @BN_free(%struct.bignum_st* %5) #6
  store %struct.bignum_st* %1, %struct.bignum_st** %4, align 8
  br label %11

11:                                               ; preds = %9, %10
  %12 = icmp eq %struct.bignum_st* %2, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 5
  %15 = load %struct.bignum_st*, %struct.bignum_st** %14, align 8
  tail call void @BN_free(%struct.bignum_st* %15) #6
  store %struct.bignum_st* %2, %struct.bignum_st** %14, align 8
  br label %16

16:                                               ; preds = %13, %11, %3
  %17 = phi i32 [ 0, %3 ], [ 1, %11 ], [ 1, %13 ]
  ret i32 %17
}

declare void @BN_free(%struct.bignum_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DSA_set0_pqg(%struct.dsa_st* nocapture, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 1
  %6 = load %struct.bignum_st*, %struct.bignum_st** %5, align 8
  %7 = icmp eq %struct.bignum_st* %6, null
  %8 = icmp eq %struct.bignum_st* %1, null
  %9 = and i1 %8, %7
  br i1 %9, label %30, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 2
  %12 = load %struct.bignum_st*, %struct.bignum_st** %11, align 8
  %13 = icmp eq %struct.bignum_st* %12, null
  %14 = icmp eq %struct.bignum_st* %2, null
  %15 = and i1 %14, %13
  br i1 %15, label %30, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 3
  %18 = load %struct.bignum_st*, %struct.bignum_st** %17, align 8
  %19 = icmp eq %struct.bignum_st* %18, null
  %20 = icmp eq %struct.bignum_st* %3, null
  %21 = and i1 %20, %19
  br i1 %21, label %30, label %22

22:                                               ; preds = %16
  br i1 %8, label %24, label %23

23:                                               ; preds = %22
  tail call void @BN_free(%struct.bignum_st* %6) #6
  store %struct.bignum_st* %1, %struct.bignum_st** %5, align 8
  br label %24

24:                                               ; preds = %22, %23
  br i1 %14, label %27, label %25

25:                                               ; preds = %24
  %26 = load %struct.bignum_st*, %struct.bignum_st** %11, align 8
  tail call void @BN_free(%struct.bignum_st* %26) #6
  store %struct.bignum_st* %2, %struct.bignum_st** %11, align 8
  br label %27

27:                                               ; preds = %24, %25
  br i1 %20, label %30, label %28

28:                                               ; preds = %27
  %29 = load %struct.bignum_st*, %struct.bignum_st** %17, align 8
  tail call void @BN_free(%struct.bignum_st* %29) #6
  store %struct.bignum_st* %3, %struct.bignum_st** %17, align 8
  br label %30

30:                                               ; preds = %28, %27, %4, %10, %16
  %31 = phi i32 [ 0, %16 ], [ 0, %10 ], [ 0, %4 ], [ 1, %27 ], [ 1, %28 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DSA_generate_parameters_ex(%struct.dsa_st* nocapture, i32, i8* readonly, i64, i32*, i64*, %struct.bn_gencb_st*) local_unnamed_addr #0 {
  %8 = alloca [32 x i8], align 16
  %9 = alloca [32 x i8], align 16
  %10 = alloca [32 x i8], align 16
  %11 = alloca [32 x i8], align 16
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #6
  %13 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #6
  %14 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #6
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #6
  %16 = icmp ugt i32 %1, 2047
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 32, i1 false)
  br i1 %16, label %17, label %19

17:                                               ; preds = %7
  %18 = tail call %struct.env_md_st* @EVP_sha256() #6
  br label %21

19:                                               ; preds = %7
  %20 = tail call %struct.env_md_st* @EVP_sha1() #6
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi %struct.env_md_st* [ %18, %17 ], [ %20, %19 ]
  %23 = tail call i64 @EVP_MD_size(%struct.env_md_st* %22) #6
  %24 = trunc i64 %23 to i32
  %25 = icmp ugt i32 %1, 512
  %26 = select i1 %25, i32 %1, i32 512
  %27 = add i32 %26, 63
  %28 = and i32 %27, -64
  %29 = icmp eq i8* %2, null
  br i1 %29, label %38, label %30

30:                                               ; preds = %21
  %31 = and i64 %23, 4294967295
  %32 = icmp ugt i64 %31, %3
  br i1 %32, label %289, label %33

33:                                               ; preds = %30
  %34 = icmp ult i64 %31, %3
  %35 = select i1 %34, i64 %31, i64 %3
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %12, i8* nonnull align 1 %2, i64 %35, i1 false) #6
  br label %38

38:                                               ; preds = %37, %33, %21
  %39 = tail call %struct.bignum_ctx* @BN_CTX_new() #6
  %40 = icmp eq %struct.bignum_ctx* %39, null
  br i1 %40, label %286, label %41

41:                                               ; preds = %38
  tail call void @BN_CTX_start(%struct.bignum_ctx* nonnull %39) #6
  %42 = tail call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* nonnull %39) #6
  %43 = tail call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* nonnull %39) #6
  %44 = tail call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* nonnull %39) #6
  %45 = tail call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* nonnull %39) #6
  %46 = tail call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* nonnull %39) #6
  %47 = tail call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* nonnull %39) #6
  %48 = tail call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* nonnull %39) #6
  %49 = tail call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* nonnull %39) #6
  %50 = icmp eq %struct.bignum_st* %49, null
  br i1 %50, label %283, label %51

51:                                               ; preds = %41
  %52 = tail call %struct.bignum_st* @BN_value_one() #6
  %53 = add i32 %28, -1
  %54 = tail call i32 @BN_lshift(%struct.bignum_st* nonnull %49, %struct.bignum_st* %52, i32 %53) #6
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %283, label %56

56:                                               ; preds = %51
  %57 = and i64 %23, 4294967295
  %58 = icmp eq i64 %57, 0
  %59 = add i32 %24, -1
  %60 = icmp eq i32 %24, 0
  %61 = zext i32 %59 to i64
  %62 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i64 0, i64 %61
  %63 = udiv i32 %53, 160
  %64 = shl i32 %24, 3
  %65 = and i64 %23, 4294967295
  %66 = icmp ult i64 %65, 32
  %67 = and i64 %23, 31
  %68 = sub nsw i64 %65, %67
  %69 = icmp eq i64 %67, 0
  br label %70

70:                                               ; preds = %147, %56
  %71 = phi i8* [ %2, %56 ], [ null, %147 ]
  %72 = phi i32 [ 0, %56 ], [ %73, %147 ]
  %73 = add nuw nsw i32 %72, 1
  %74 = call i32 @BN_GENCB_call(%struct.bn_gencb_st* %6, i32 0, i32 %72) #6
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %280, label %76

76:                                               ; preds = %70
  %77 = icmp eq i8* %71, null
  %78 = zext i1 %77 to i32
  br i1 %77, label %79, label %82

79:                                               ; preds = %76
  %80 = call i32 @RAND_bytes(i8* nonnull %12, i64 %57) #6
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %280, label %82

82:                                               ; preds = %76, %79
  br i1 %58, label %84, label %83

83:                                               ; preds = %82
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %14, i8* nonnull align 16 %12, i64 %57, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %15, i8* nonnull align 16 %12, i64 %57, i1 false) #6
  br label %84

84:                                               ; preds = %82, %83
  br i1 %60, label %95, label %85

85:                                               ; preds = %84, %85
  %86 = phi i32 [ %92, %85 ], [ %59, %84 ]
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = add i8 %89, 1
  store i8 %90, i8* %88, align 1
  %91 = icmp eq i8 %90, 0
  %92 = add i32 %86, -1
  %93 = icmp ult i32 %92, %24
  %94 = and i1 %91, %93
  br i1 %94, label %85, label %95

95:                                               ; preds = %85, %84
  %96 = call i32 @EVP_Digest(i8* nonnull %12, i64 %57, i8* nonnull %13, i32* null, %struct.env_md_st* %22, %struct.engine_st* null) #6
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %280, label %98

98:                                               ; preds = %95
  %99 = call i32 @EVP_Digest(i8* nonnull %14, i64 %57, i8* nonnull %15, i32* null, %struct.env_md_st* %22, %struct.engine_st* null) #6
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %280, label %101

101:                                              ; preds = %98
  br i1 %60, label %135, label %102

102:                                              ; preds = %101
  br i1 %66, label %124, label %103

103:                                              ; preds = %102, %103
  %104 = phi i64 [ %121, %103 ], [ 0, %102 ]
  %105 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 %104
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 16
  %108 = getelementptr inbounds i8, i8* %105, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 16
  %111 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i64 0, i64 %104
  %112 = bitcast i8* %111 to <16 x i8>*
  %113 = load <16 x i8>, <16 x i8>* %112, align 16
  %114 = getelementptr inbounds i8, i8* %111, i64 16
  %115 = bitcast i8* %114 to <16 x i8>*
  %116 = load <16 x i8>, <16 x i8>* %115, align 16
  %117 = xor <16 x i8> %113, %107
  %118 = xor <16 x i8> %116, %110
  %119 = bitcast i8* %111 to <16 x i8>*
  store <16 x i8> %117, <16 x i8>* %119, align 16
  %120 = bitcast i8* %114 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %120, align 16
  %121 = add i64 %104, 32
  %122 = icmp eq i64 %121, %68
  br i1 %122, label %123, label %103, !llvm.loop !2

123:                                              ; preds = %103
  br i1 %69, label %135, label %124

124:                                              ; preds = %123, %102
  %125 = phi i64 [ 0, %102 ], [ %68, %123 ]
  br label %126

126:                                              ; preds = %124, %126
  %127 = phi i64 [ %133, %126 ], [ %125, %124 ]
  %128 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i64 0, i64 %127
  %131 = load i8, i8* %130, align 1
  %132 = xor i8 %131, %129
  store i8 %132, i8* %130, align 1
  %133 = add nuw nsw i64 %127, 1
  %134 = icmp eq i64 %133, %65
  br i1 %134, label %135, label %126, !llvm.loop !4

135:                                              ; preds = %126, %123, %101
  %136 = load i8, i8* %13, align 16
  %137 = or i8 %136, -128
  store i8 %137, i8* %13, align 16
  %138 = load i8, i8* %62, align 1
  %139 = or i8 %138, 1
  store i8 %139, i8* %62, align 1
  %140 = call %struct.bignum_st* @BN_bin2bn(i8* nonnull %13, i64 %57, %struct.bignum_st* %45) #6
  %141 = icmp eq %struct.bignum_st* %140, null
  br i1 %141, label %280, label %142

142:                                              ; preds = %135
  %143 = call i32 @BN_is_prime_fasttest_ex(%struct.bignum_st* %45, i32 50, %struct.bignum_ctx* nonnull %39, i32 %78, %struct.bn_gencb_st* %6) #6
  %144 = icmp sgt i32 %143, 0
  br i1 %144, label %148, label %145

145:                                              ; preds = %142
  %146 = icmp eq i32 %143, 0
  br i1 %146, label %147, label %280

147:                                              ; preds = %219, %145
  br label %70

148:                                              ; preds = %142
  %149 = call i32 @BN_GENCB_call(%struct.bn_gencb_st* %6, i32 2, i32 0) #6
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %280, label %151

151:                                              ; preds = %148
  %152 = call i32 @BN_GENCB_call(%struct.bn_gencb_st* %6, i32 3, i32 0) #6
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %280, label %154

154:                                              ; preds = %151, %219
  %155 = phi i32 [ %220, %219 ], [ 0, %151 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %160, label %157

157:                                              ; preds = %154
  %158 = call i32 @BN_GENCB_call(%struct.bn_gencb_st* %6, i32 0, i32 %155) #6
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %280, label %160

160:                                              ; preds = %157, %154
  call void @BN_zero(%struct.bignum_st* %44) #6
  br label %164

161:                                              ; preds = %186
  %162 = add nuw nsw i32 %165, 1
  %163 = icmp ult i32 %165, %63
  br i1 %163, label %164, label %189

164:                                              ; preds = %161, %160
  %165 = phi i32 [ 0, %160 ], [ %162, %161 ]
  br label %166

166:                                              ; preds = %164, %170
  %167 = phi i32 [ %168, %170 ], [ %24, %164 ]
  %168 = add i32 %167, -1
  %169 = icmp ult i32 %168, %24
  br i1 %169, label %170, label %176

170:                                              ; preds = %166
  %171 = zext i32 %168 to i64
  %172 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = add i8 %173, 1
  store i8 %174, i8* %172, align 1
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %166, label %176

176:                                              ; preds = %170, %166
  %177 = call i32 @EVP_Digest(i8* nonnull %14, i64 %57, i8* nonnull %13, i32* null, %struct.env_md_st* %22, %struct.engine_st* null) #6
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %280, label %179

179:                                              ; preds = %176
  %180 = call %struct.bignum_st* @BN_bin2bn(i8* nonnull %13, i64 %57, %struct.bignum_st* %42) #6
  %181 = icmp eq %struct.bignum_st* %180, null
  br i1 %181, label %280, label %182

182:                                              ; preds = %179
  %183 = mul i32 %64, %165
  %184 = call i32 @BN_lshift(%struct.bignum_st* %42, %struct.bignum_st* %42, i32 %183) #6
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %280, label %186

186:                                              ; preds = %182
  %187 = call i32 @BN_add(%struct.bignum_st* %44, %struct.bignum_st* %44, %struct.bignum_st* %42) #6
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %280, label %161

189:                                              ; preds = %161
  %190 = call i32 @BN_mask_bits(%struct.bignum_st* %44, i32 %53) #6
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %280, label %192

192:                                              ; preds = %189
  %193 = call %struct.bignum_st* @BN_copy(%struct.bignum_st* %46, %struct.bignum_st* %44) #6
  %194 = icmp eq %struct.bignum_st* %193, null
  br i1 %194, label %280, label %195

195:                                              ; preds = %192
  %196 = call i32 @BN_add(%struct.bignum_st* %46, %struct.bignum_st* %46, %struct.bignum_st* nonnull %49) #6
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %280, label %198

198:                                              ; preds = %195
  %199 = call i32 @BN_lshift1(%struct.bignum_st* %42, %struct.bignum_st* %45) #6
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %280, label %201

201:                                              ; preds = %198
  %202 = call i32 @BN_div(%struct.bignum_st* null, %struct.bignum_st* %47, %struct.bignum_st* %46, %struct.bignum_st* %42, %struct.bignum_ctx* nonnull %39) #6
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %280, label %204

204:                                              ; preds = %201
  %205 = call %struct.bignum_st* @BN_value_one() #6
  %206 = call i32 @BN_sub(%struct.bignum_st* %42, %struct.bignum_st* %47, %struct.bignum_st* %205) #6
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %280, label %208

208:                                              ; preds = %204
  %209 = call i32 @BN_sub(%struct.bignum_st* %48, %struct.bignum_st* %46, %struct.bignum_st* %42) #6
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %280, label %211

211:                                              ; preds = %208
  %212 = call i32 @BN_cmp(%struct.bignum_st* %48, %struct.bignum_st* nonnull %49) #6
  %213 = icmp sgt i32 %212, -1
  br i1 %213, label %214, label %219

214:                                              ; preds = %211
  %215 = call i32 @BN_is_prime_fasttest_ex(%struct.bignum_st* %48, i32 50, %struct.bignum_ctx* nonnull %39, i32 1, %struct.bn_gencb_st* %6) #6
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %222, label %217

217:                                              ; preds = %214
  %218 = icmp eq i32 %215, 0
  br i1 %218, label %219, label %280

219:                                              ; preds = %217, %211
  %220 = add nuw nsw i32 %155, 1
  %221 = icmp eq i32 %220, 4096
  br i1 %221, label %147, label %154

222:                                              ; preds = %214
  %223 = call i32 @BN_GENCB_call(%struct.bn_gencb_st* %6, i32 2, i32 1) #6
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %280, label %225

225:                                              ; preds = %222
  %226 = call %struct.bignum_st* @BN_value_one() #6
  %227 = call i32 @BN_sub(%struct.bignum_st* nonnull %49, %struct.bignum_st* %48, %struct.bignum_st* %226) #6
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %280, label %229

229:                                              ; preds = %225
  %230 = call i32 @BN_div(%struct.bignum_st* %42, %struct.bignum_st* null, %struct.bignum_st* nonnull %49, %struct.bignum_st* %45, %struct.bignum_ctx* nonnull %39) #6
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %280, label %232

232:                                              ; preds = %229
  %233 = call %struct.bn_mont_ctx_st* @BN_MONT_CTX_new_for_modulus(%struct.bignum_st* %48, %struct.bignum_ctx* nonnull %39) #6
  %234 = icmp eq %struct.bn_mont_ctx_st* %233, null
  br i1 %234, label %280, label %235

235:                                              ; preds = %232
  %236 = call i32 @BN_set_word(%struct.bignum_st* nonnull %49, i64 2) #6
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %280, label %238

238:                                              ; preds = %235
  %239 = call i32 @BN_mod_exp_mont(%struct.bignum_st* %43, %struct.bignum_st* nonnull %49, %struct.bignum_st* %42, %struct.bignum_st* %48, %struct.bignum_ctx* nonnull %39, %struct.bn_mont_ctx_st* nonnull %233) #6
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %280, label %241

241:                                              ; preds = %238, %249
  %242 = phi i32 [ %250, %249 ], [ 2, %238 ]
  %243 = call i32 @BN_is_one(%struct.bignum_st* %43) #6
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %253, label %245

245:                                              ; preds = %241
  %246 = call %struct.bignum_st* @BN_value_one() #6
  %247 = call i32 @BN_add(%struct.bignum_st* nonnull %49, %struct.bignum_st* nonnull %49, %struct.bignum_st* %246) #6
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %280, label %249

249:                                              ; preds = %245
  %250 = add i32 %242, 1
  %251 = call i32 @BN_mod_exp_mont(%struct.bignum_st* %43, %struct.bignum_st* nonnull %49, %struct.bignum_st* %42, %struct.bignum_st* %48, %struct.bignum_ctx* nonnull %39, %struct.bn_mont_ctx_st* nonnull %233) #6
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %280, label %241

253:                                              ; preds = %241
  %254 = call i32 @BN_GENCB_call(%struct.bn_gencb_st* %6, i32 3, i32 1) #6
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %280, label %256

256:                                              ; preds = %253
  %257 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 1
  %258 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 2
  %259 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 3
  %260 = load %struct.bignum_st*, %struct.bignum_st** %257, align 8
  call void @BN_free(%struct.bignum_st* %260) #6
  %261 = load %struct.bignum_st*, %struct.bignum_st** %258, align 8
  call void @BN_free(%struct.bignum_st* %261) #6
  %262 = load %struct.bignum_st*, %struct.bignum_st** %259, align 8
  call void @BN_free(%struct.bignum_st* %262) #6
  %263 = call %struct.bignum_st* @BN_dup(%struct.bignum_st* %48) #6
  store %struct.bignum_st* %263, %struct.bignum_st** %257, align 8
  %264 = call %struct.bignum_st* @BN_dup(%struct.bignum_st* %45) #6
  store %struct.bignum_st* %264, %struct.bignum_st** %258, align 8
  %265 = call %struct.bignum_st* @BN_dup(%struct.bignum_st* %43) #6
  store %struct.bignum_st* %265, %struct.bignum_st** %259, align 8
  %266 = load %struct.bignum_st*, %struct.bignum_st** %257, align 8
  %267 = icmp eq %struct.bignum_st* %266, null
  br i1 %267, label %280, label %268

268:                                              ; preds = %256
  %269 = load %struct.bignum_st*, %struct.bignum_st** %258, align 8
  %270 = icmp eq %struct.bignum_st* %269, null
  %271 = icmp eq %struct.bignum_st* %265, null
  %272 = or i1 %271, %270
  br i1 %272, label %280, label %273

273:                                              ; preds = %268
  %274 = icmp eq i32* %4, null
  br i1 %274, label %276, label %275

275:                                              ; preds = %273
  store i32 %155, i32* %4, align 4
  br label %276

276:                                              ; preds = %273, %275
  %277 = icmp eq i64* %5, null
  br i1 %277, label %280, label %278

278:                                              ; preds = %276
  %279 = zext i32 %242 to i64
  store i64 %279, i64* %5, align 8
  br label %280

280:                                              ; preds = %148, %151, %145, %135, %95, %98, %79, %70, %217, %157, %198, %201, %204, %208, %189, %192, %195, %176, %179, %182, %186, %245, %249, %238, %232, %235, %225, %229, %222, %253, %256, %268, %276, %278
  %281 = phi %struct.bn_mont_ctx_st* [ %233, %276 ], [ %233, %278 ], [ %233, %253 ], [ %233, %268 ], [ %233, %256 ], [ %233, %238 ], [ null, %232 ], [ %233, %235 ], [ null, %225 ], [ null, %229 ], [ null, %222 ], [ %233, %249 ], [ %233, %245 ], [ null, %186 ], [ null, %182 ], [ null, %179 ], [ null, %176 ], [ null, %195 ], [ null, %192 ], [ null, %189 ], [ null, %208 ], [ null, %204 ], [ null, %201 ], [ null, %198 ], [ null, %157 ], [ null, %217 ], [ null, %70 ], [ null, %79 ], [ null, %98 ], [ null, %95 ], [ null, %135 ], [ null, %145 ], [ null, %151 ], [ null, %148 ]
  %282 = phi i32 [ 1, %276 ], [ 1, %278 ], [ 0, %253 ], [ 0, %268 ], [ 0, %256 ], [ 0, %238 ], [ 0, %232 ], [ 0, %235 ], [ 0, %225 ], [ 0, %229 ], [ 0, %222 ], [ 0, %249 ], [ 0, %245 ], [ 0, %186 ], [ 0, %182 ], [ 0, %179 ], [ 0, %176 ], [ 0, %195 ], [ 0, %192 ], [ 0, %189 ], [ 0, %208 ], [ 0, %204 ], [ 0, %201 ], [ 0, %198 ], [ 0, %157 ], [ 0, %217 ], [ 0, %70 ], [ 0, %79 ], [ 0, %98 ], [ 0, %95 ], [ 0, %135 ], [ 0, %145 ], [ 0, %151 ], [ 0, %148 ]
  br i1 %40, label %286, label %283

283:                                              ; preds = %51, %41, %280
  %284 = phi i32 [ %282, %280 ], [ 0, %41 ], [ 0, %51 ]
  %285 = phi %struct.bn_mont_ctx_st* [ %281, %280 ], [ null, %41 ], [ null, %51 ]
  call void @BN_CTX_end(%struct.bignum_ctx* nonnull %39) #6
  call void @BN_CTX_free(%struct.bignum_ctx* nonnull %39) #6
  br label %286

286:                                              ; preds = %38, %280, %283
  %287 = phi i32 [ %282, %280 ], [ %284, %283 ], [ 0, %38 ]
  %288 = phi %struct.bn_mont_ctx_st* [ %281, %280 ], [ %285, %283 ], [ null, %38 ]
  call void @BN_MONT_CTX_free(%struct.bn_mont_ctx_st* %288) #6
  br label %289

289:                                              ; preds = %30, %286
  %290 = phi i32 [ %287, %286 ], [ 0, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6
  ret i32 %290
}

declare %struct.env_md_st* @EVP_sha256() local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha1() local_unnamed_addr #2

declare i64 @EVP_MD_size(%struct.env_md_st*) local_unnamed_addr #2

declare %struct.bignum_ctx* @BN_CTX_new() local_unnamed_addr #2

declare void @BN_CTX_start(%struct.bignum_ctx*) local_unnamed_addr #2

declare %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx*) local_unnamed_addr #2

declare i32 @BN_lshift(%struct.bignum_st*, %struct.bignum_st*, i32) local_unnamed_addr #2

declare %struct.bignum_st* @BN_value_one() local_unnamed_addr #2

declare i32 @BN_GENCB_call(%struct.bn_gencb_st*, i32, i32) local_unnamed_addr #2

declare i32 @RAND_bytes(i8*, i64) local_unnamed_addr #2

declare i32 @EVP_Digest(i8*, i64, i8*, i32*, %struct.env_md_st*, %struct.engine_st*) local_unnamed_addr #2

declare %struct.bignum_st* @BN_bin2bn(i8*, i64, %struct.bignum_st*) local_unnamed_addr #2

declare i32 @BN_is_prime_fasttest_ex(%struct.bignum_st*, i32, %struct.bignum_ctx*, i32, %struct.bn_gencb_st*) local_unnamed_addr #2

declare void @BN_zero(%struct.bignum_st*) local_unnamed_addr #2

declare i32 @BN_add(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*) local_unnamed_addr #2

declare i32 @BN_mask_bits(%struct.bignum_st*, i32) local_unnamed_addr #2

declare %struct.bignum_st* @BN_copy(%struct.bignum_st*, %struct.bignum_st*) local_unnamed_addr #2

declare i32 @BN_lshift1(%struct.bignum_st*, %struct.bignum_st*) local_unnamed_addr #2

declare i32 @BN_div(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

declare i32 @BN_sub(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*) local_unnamed_addr #2

declare i32 @BN_cmp(%struct.bignum_st*, %struct.bignum_st*) local_unnamed_addr #2

declare %struct.bn_mont_ctx_st* @BN_MONT_CTX_new_for_modulus(%struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

declare i32 @BN_set_word(%struct.bignum_st*, i64) local_unnamed_addr #2

declare i32 @BN_mod_exp_mont(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*, %struct.bn_mont_ctx_st*) local_unnamed_addr #2

declare i32 @BN_is_one(%struct.bignum_st*) local_unnamed_addr #2

declare %struct.bignum_st* @BN_dup(%struct.bignum_st*) local_unnamed_addr #2

declare void @BN_CTX_end(%struct.bignum_ctx*) local_unnamed_addr #2

declare void @BN_CTX_free(%struct.bignum_ctx*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.dsa_st* @DSAparams_dup(%struct.dsa_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = tail call i8* @OPENSSL_malloc(i64 144) #6
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @ERR_put_error(i32 10, i32 0, i32 65, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 92) #6
  br label %36

5:                                                ; preds = %1
  %6 = bitcast i8* %2 to %struct.dsa_st*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %2, i8 0, i64 144, i1 false) #6
  %7 = getelementptr inbounds i8, i8* %2, i64 128
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 56
  %10 = bitcast i8* %9 to %union.crypto_mutex_st*
  tail call void @CRYPTO_MUTEX_init(%union.crypto_mutex_st* %10) #6
  %11 = getelementptr inbounds i8, i8* %2, i64 136
  %12 = bitcast i8* %11 to %struct.crypto_ex_data_st*
  tail call void @CRYPTO_new_ex_data(%struct.crypto_ex_data_st* %12) #6
  %13 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 1
  %14 = load %struct.bignum_st*, %struct.bignum_st** %13, align 8
  %15 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* %14) #6
  %16 = getelementptr inbounds i8, i8* %2, i64 8
  %17 = bitcast i8* %16 to %struct.bignum_st**
  store %struct.bignum_st* %15, %struct.bignum_st** %17, align 8
  %18 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 2
  %19 = load %struct.bignum_st*, %struct.bignum_st** %18, align 8
  %20 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* %19) #6
  %21 = getelementptr inbounds i8, i8* %2, i64 16
  %22 = bitcast i8* %21 to %struct.bignum_st**
  store %struct.bignum_st* %20, %struct.bignum_st** %22, align 8
  %23 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 3
  %24 = load %struct.bignum_st*, %struct.bignum_st** %23, align 8
  %25 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* %24) #6
  %26 = getelementptr inbounds i8, i8* %2, i64 24
  %27 = bitcast i8* %26 to %struct.bignum_st**
  store %struct.bignum_st* %25, %struct.bignum_st** %27, align 8
  %28 = load %struct.bignum_st*, %struct.bignum_st** %17, align 8
  %29 = icmp eq %struct.bignum_st* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %5
  %31 = load %struct.bignum_st*, %struct.bignum_st** %22, align 8
  %32 = icmp eq %struct.bignum_st* %31, null
  %33 = icmp eq %struct.bignum_st* %25, null
  %34 = or i1 %33, %32
  br i1 %34, label %35, label %36

35:                                               ; preds = %30, %5
  tail call void @DSA_free(%struct.dsa_st* nonnull %6)
  br label %36

36:                                               ; preds = %4, %30, %35
  %37 = phi %struct.dsa_st* [ null, %35 ], [ %6, %30 ], [ null, %4 ]
  ret %struct.dsa_st* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DSA_generate_key(%struct.dsa_st*) local_unnamed_addr #0 {
  %2 = tail call %struct.bignum_ctx* @BN_CTX_new() #6
  %3 = icmp eq %struct.bignum_ctx* %2, null
  br i1 %3, label %40, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 5
  %6 = load %struct.bignum_st*, %struct.bignum_st** %5, align 8
  %7 = icmp eq %struct.bignum_st* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = tail call %struct.bignum_st* @BN_new() #6
  %10 = icmp eq %struct.bignum_st* %9, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %8, %4
  %12 = phi %struct.bignum_st* [ %9, %8 ], [ %6, %4 ]
  %13 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 2
  %14 = load %struct.bignum_st*, %struct.bignum_st** %13, align 8
  %15 = tail call i32 @BN_rand_range_ex(%struct.bignum_st* nonnull %12, i64 1, %struct.bignum_st* %14) #6
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %40, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 4
  %19 = load %struct.bignum_st*, %struct.bignum_st** %18, align 8
  %20 = icmp eq %struct.bignum_st* %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = tail call %struct.bignum_st* @BN_new() #6
  %23 = icmp eq %struct.bignum_st* %22, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %21, %17
  %25 = phi %struct.bignum_st* [ %22, %21 ], [ %19, %17 ]
  %26 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 8
  %27 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 7
  %28 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 1
  %29 = load %struct.bignum_st*, %struct.bignum_st** %28, align 8
  %30 = tail call i32 @BN_MONT_CTX_set_locked(%struct.bn_mont_ctx_st** %26, %union.crypto_mutex_st* %27, %struct.bignum_st* %29, %struct.bignum_ctx* nonnull %2) #6
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %40, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 3
  %34 = load %struct.bignum_st*, %struct.bignum_st** %33, align 8
  %35 = load %struct.bignum_st*, %struct.bignum_st** %28, align 8
  %36 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %26, align 8
  %37 = tail call i32 @BN_mod_exp_mont_consttime(%struct.bignum_st* nonnull %25, %struct.bignum_st* %34, %struct.bignum_st* nonnull %12, %struct.bignum_st* %35, %struct.bignum_ctx* nonnull %2, %struct.bn_mont_ctx_st* %36) #6
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %32
  store %struct.bignum_st* %12, %struct.bignum_st** %5, align 8
  store %struct.bignum_st* %25, %struct.bignum_st** %18, align 8
  br label %40

40:                                               ; preds = %32, %24, %11, %21, %8, %1, %39
  %41 = phi i32 [ 0, %1 ], [ 0, %8 ], [ 0, %21 ], [ 1, %39 ], [ 0, %32 ], [ 0, %24 ], [ 0, %11 ]
  %42 = phi %struct.bignum_st* [ null, %1 ], [ null, %8 ], [ null, %21 ], [ %25, %39 ], [ %25, %32 ], [ %25, %24 ], [ null, %11 ]
  %43 = phi %struct.bignum_st* [ null, %1 ], [ null, %8 ], [ %12, %21 ], [ %12, %39 ], [ %12, %32 ], [ %12, %24 ], [ %12, %11 ]
  %44 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 4
  %45 = load %struct.bignum_st*, %struct.bignum_st** %44, align 8
  %46 = icmp eq %struct.bignum_st* %45, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %40
  tail call void @BN_free(%struct.bignum_st* %42) #6
  br label %48

48:                                               ; preds = %47, %40
  %49 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 5
  %50 = load %struct.bignum_st*, %struct.bignum_st** %49, align 8
  %51 = icmp eq %struct.bignum_st* %50, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %48
  tail call void @BN_free(%struct.bignum_st* %43) #6
  br label %53

53:                                               ; preds = %52, %48
  tail call void @BN_CTX_free(%struct.bignum_ctx* %2) #6
  ret i32 %41
}

declare %struct.bignum_st* @BN_new() local_unnamed_addr #2

declare i32 @BN_rand_range_ex(%struct.bignum_st*, i64, %struct.bignum_st*) local_unnamed_addr #2

declare i32 @BN_MONT_CTX_set_locked(%struct.bn_mont_ctx_st**, %union.crypto_mutex_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

declare i32 @BN_mod_exp_mont_consttime(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*, %struct.bn_mont_ctx_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.DSA_SIG_st* @DSA_SIG_new() local_unnamed_addr #0 {
  %1 = tail call i8* @OPENSSL_malloc(i64 16) #6
  %2 = icmp eq i8* %1, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  %4 = bitcast i8* %1 to %struct.DSA_SIG_st*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 16, i1 false)
  br label %5

5:                                                ; preds = %0, %3
  %6 = phi %struct.DSA_SIG_st* [ %4, %3 ], [ null, %0 ]
  ret %struct.DSA_SIG_st* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @DSA_SIG_free(%struct.DSA_SIG_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.DSA_SIG_st* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.DSA_SIG_st, %struct.DSA_SIG_st* %0, i64 0, i32 0
  %5 = load %struct.bignum_st*, %struct.bignum_st** %4, align 8
  tail call void @BN_free(%struct.bignum_st* %5) #6
  %6 = getelementptr inbounds %struct.DSA_SIG_st, %struct.DSA_SIG_st* %0, i64 0, i32 1
  %7 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  tail call void @BN_free(%struct.bignum_st* %7) #6
  %8 = bitcast %struct.DSA_SIG_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %8) #6
  br label %9

9:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.DSA_SIG_st* @DSA_do_sign(i8*, i64, %struct.dsa_st*) local_unnamed_addr #0 {
  %4 = alloca %struct.bignum_st, align 8
  %5 = alloca %struct.bignum_st, align 8
  %6 = alloca %struct.bignum_st, align 8
  %7 = tail call i32 @dsa_check_parameters(%struct.dsa_st* %2) #6
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %170, label %9

9:                                                ; preds = %3
  %10 = bitcast %struct.bignum_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #6
  %11 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i64 0, i32 0
  %12 = bitcast %struct.bignum_st* %6 to i8*
  %13 = bitcast %struct.bignum_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #6
  %14 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i64 0, i32 0
  %15 = bitcast %struct.bignum_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @BN_init(%struct.bignum_st* nonnull %5) #6
  call void @BN_init(%struct.bignum_st* nonnull %6) #6
  %16 = call %struct.bignum_st* @BN_new() #6
  %17 = icmp eq %struct.bignum_st* %16, null
  br i1 %17, label %161, label %18

18:                                               ; preds = %9
  %19 = call %struct.bignum_ctx* @BN_CTX_new() #6
  %20 = icmp eq %struct.bignum_ctx* %19, null
  br i1 %20, label %161, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %2, i64 0, i32 1
  %23 = load %struct.bignum_st*, %struct.bignum_st** %22, align 8
  %24 = icmp eq %struct.bignum_st* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %2, i64 0, i32 2
  %27 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %2, i64 0, i32 3
  %28 = bitcast %struct.bignum_st* %4 to i8*
  %29 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %2, i64 0, i32 8
  %30 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %2, i64 0, i32 7
  %31 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %2, i64 0, i32 9
  %32 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %2, i64 0, i32 5
  br label %33

33:                                               ; preds = %25, %150
  %34 = phi i64 [ %1, %25 ], [ %98, %150 ]
  %35 = phi i64 [ 0, %25 ], [ %84, %150 ]
  %36 = phi %struct.bignum_st* [ null, %25 ], [ %83, %150 ]
  %37 = load %struct.bignum_st*, %struct.bignum_st** %26, align 8
  %38 = icmp eq %struct.bignum_st* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = load %struct.bignum_st*, %struct.bignum_st** %27, align 8
  %41 = icmp eq %struct.bignum_st* %40, null
  br i1 %41, label %42, label %45

42:                                               ; preds = %39, %33, %150, %21
  %43 = phi %struct.bignum_st* [ null, %21 ], [ %83, %150 ], [ %36, %33 ], [ %36, %39 ]
  %44 = phi i64 [ 0, %21 ], [ %84, %150 ], [ %35, %33 ], [ %35, %39 ]
  call void @ERR_put_error(i32 10, i32 0, i32 101, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 847) #6
  br label %161

45:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false) #6
  call void @BN_init(%struct.bignum_st* nonnull %4) #6
  %46 = call %struct.bignum_st* @BN_new() #6
  %47 = call %struct.bignum_st* @BN_new() #6
  %48 = icmp eq %struct.bignum_st* %46, null
  %49 = icmp eq %struct.bignum_st* %47, null
  %50 = or i1 %48, %49
  br i1 %50, label %78, label %51

51:                                               ; preds = %45
  %52 = load %struct.bignum_st*, %struct.bignum_st** %26, align 8
  %53 = call i32 @BN_rand_range_ex(%struct.bignum_st* nonnull %4, i64 1, %struct.bignum_st* %52) #6
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %78, label %55

55:                                               ; preds = %51
  %56 = load %struct.bignum_st*, %struct.bignum_st** %22, align 8
  %57 = call i32 @BN_MONT_CTX_set_locked(%struct.bn_mont_ctx_st** %29, %union.crypto_mutex_st* %30, %struct.bignum_st* %56, %struct.bignum_ctx* %19) #6
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %55
  %60 = load %struct.bignum_st*, %struct.bignum_st** %26, align 8
  %61 = call i32 @BN_MONT_CTX_set_locked(%struct.bn_mont_ctx_st** %31, %union.crypto_mutex_st* %30, %struct.bignum_st* %60, %struct.bignum_ctx* %19) #6
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %78, label %63

63:                                               ; preds = %59
  %64 = load %struct.bignum_st*, %struct.bignum_st** %27, align 8
  %65 = load %struct.bignum_st*, %struct.bignum_st** %22, align 8
  %66 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %29, align 8
  %67 = call i32 @BN_mod_exp_mont_consttime(%struct.bignum_st* nonnull %46, %struct.bignum_st* %64, %struct.bignum_st* nonnull %4, %struct.bignum_st* %65, %struct.bignum_ctx* %19, %struct.bn_mont_ctx_st* %66) #6
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %78, label %69

69:                                               ; preds = %63
  %70 = load %struct.bignum_st*, %struct.bignum_st** %26, align 8
  %71 = call i32 @BN_div(%struct.bignum_st* null, %struct.bignum_st* nonnull %46, %struct.bignum_st* nonnull %46, %struct.bignum_st* %70, %struct.bignum_ctx* %19) #6
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %69
  %74 = load %struct.bignum_st*, %struct.bignum_st** %26, align 8
  %75 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %31, align 8
  %76 = call i32 @bn_mod_inverse_prime(%struct.bignum_st* nonnull %47, %struct.bignum_st* nonnull %4, %struct.bignum_st* %74, %struct.bignum_ctx* %19, %struct.bn_mont_ctx_st* %75) #6
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %73, %69, %63, %59, %55, %51, %45
  call void @ERR_put_error(i32 10, i32 0, i32 3, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 879) #6
  br label %82

79:                                               ; preds = %73
  call void @BN_clear_free(%struct.bignum_st* %36) #6
  %80 = inttoptr i64 %35 to %struct.bignum_st*
  call void @BN_clear_free(%struct.bignum_st* %80) #6
  %81 = ptrtoint %struct.bignum_st* %46 to i64
  br label %82

82:                                               ; preds = %78, %79
  %83 = phi %struct.bignum_st* [ %36, %78 ], [ %47, %79 ]
  %84 = phi i64 [ %35, %78 ], [ %81, %79 ]
  %85 = phi i1 [ true, %78 ], [ false, %79 ]
  %86 = phi %struct.bignum_st* [ %46, %78 ], [ null, %79 ]
  %87 = phi %struct.bignum_st* [ %47, %78 ], [ null, %79 ]
  call void @BN_clear_free(%struct.bignum_st* nonnull %4) #6
  call void @BN_clear_free(%struct.bignum_st* %86) #6
  call void @BN_clear_free(%struct.bignum_st* %87) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #6
  br i1 %85, label %161, label %88

88:                                               ; preds = %82
  %89 = load %struct.bignum_st*, %struct.bignum_st** %26, align 8
  %90 = call i32 @BN_num_bytes(%struct.bignum_st* %89) #6
  %91 = zext i32 %90 to i64
  %92 = icmp ugt i64 %34, %91
  br i1 %92, label %93, label %97

93:                                               ; preds = %88
  %94 = load %struct.bignum_st*, %struct.bignum_st** %26, align 8
  %95 = call i32 @BN_num_bytes(%struct.bignum_st* %94) #6
  %96 = zext i32 %95 to i64
  br label %97

97:                                               ; preds = %93, %88
  %98 = phi i64 [ %96, %93 ], [ %34, %88 ]
  %99 = call %struct.bignum_st* @BN_bin2bn(i8* %0, i64 %98, %struct.bignum_st* nonnull %5) #6
  %100 = icmp eq %struct.bignum_st* %99, null
  br i1 %100, label %161, label %101

101:                                              ; preds = %97
  %102 = load %struct.bignum_st*, %struct.bignum_st** %26, align 8
  %103 = call i32 @bn_minimal_width(%struct.bignum_st* %102) #6
  %104 = sext i32 %103 to i64
  %105 = call i32 @bn_resize_words(%struct.bignum_st* nonnull %5, i64 %104) #6
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %161, label %107

107:                                              ; preds = %101
  %108 = call i32 @bn_resize_words(%struct.bignum_st* nonnull %6, i64 %104) #6
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %161, label %110

110:                                              ; preds = %107
  %111 = load i64*, i64** %11, align 8
  %112 = load %struct.bignum_st*, %struct.bignum_st** %26, align 8
  %113 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %112, i64 0, i32 0
  %114 = load i64*, i64** %113, align 8
  %115 = load i64*, i64** %14, align 8
  %116 = call i64 @bn_reduce_once_in_place(i64* %111, i64 0, i64* %114, i64* %115, i64 %104) #6
  %117 = load %struct.bignum_st*, %struct.bignum_st** %32, align 8
  %118 = inttoptr i64 %84 to %struct.bignum_st*
  %119 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %31, align 8
  call void @BN_CTX_start(%struct.bignum_ctx* %19) #6
  %120 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %19) #6
  %121 = icmp eq %struct.bignum_st* %120, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %110
  %123 = call i32 @BN_to_montgomery(%struct.bignum_st* nonnull %120, %struct.bignum_st* %117, %struct.bn_mont_ctx_st* %119, %struct.bignum_ctx* %19) #6
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122, %110
  call void @BN_CTX_end(%struct.bignum_ctx* %19) #6
  br label %161

126:                                              ; preds = %122
  %127 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* nonnull %6, %struct.bignum_st* nonnull %120, %struct.bignum_st* %118, %struct.bn_mont_ctx_st* %119, %struct.bignum_ctx* %19) #6
  %128 = icmp eq i32 %127, 0
  call void @BN_CTX_end(%struct.bignum_ctx* %19) #6
  br i1 %128, label %161, label %129

129:                                              ; preds = %126
  %130 = load %struct.bignum_st*, %struct.bignum_st** %26, align 8
  %131 = call i32 @bn_mod_add_consttime(%struct.bignum_st* nonnull %16, %struct.bignum_st* nonnull %6, %struct.bignum_st* nonnull %5, %struct.bignum_st* %130, %struct.bignum_ctx* nonnull %19) #6
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %161, label %133

133:                                              ; preds = %129
  %134 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %31, align 8
  call void @BN_CTX_start(%struct.bignum_ctx* %19) #6
  %135 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %19) #6
  %136 = icmp eq %struct.bignum_st* %135, null
  br i1 %136, label %140, label %137

137:                                              ; preds = %133
  %138 = call i32 @BN_to_montgomery(%struct.bignum_st* nonnull %135, %struct.bignum_st* nonnull %16, %struct.bn_mont_ctx_st* %134, %struct.bignum_ctx* %19) #6
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137, %133
  call void @BN_CTX_end(%struct.bignum_ctx* %19) #6
  br label %161

141:                                              ; preds = %137
  %142 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* nonnull %16, %struct.bignum_st* nonnull %135, %struct.bignum_st* %83, %struct.bn_mont_ctx_st* %134, %struct.bignum_ctx* %19) #6
  %143 = icmp eq i32 %142, 0
  call void @BN_CTX_end(%struct.bignum_ctx* %19) #6
  br i1 %143, label %161, label %144

144:                                              ; preds = %141
  %145 = call i32 @BN_is_zero(%struct.bignum_st* %118) #6
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %144
  %148 = call i32 @BN_is_zero(%struct.bignum_st* nonnull %16) #6
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %153, label %150

150:                                              ; preds = %147, %144
  %151 = load %struct.bignum_st*, %struct.bignum_st** %22, align 8
  %152 = icmp eq %struct.bignum_st* %151, null
  br i1 %152, label %42, label %33

153:                                              ; preds = %147
  %154 = call i8* @OPENSSL_malloc(i64 16) #6
  %155 = icmp eq i8* %154, null
  br i1 %155, label %161, label %156

156:                                              ; preds = %153
  %157 = bitcast i8* %154 to %struct.DSA_SIG_st*
  %158 = bitcast i8* %154 to i64*
  store i64 %84, i64* %158, align 8
  %159 = getelementptr inbounds i8, i8* %154, i64 8
  %160 = bitcast i8* %159 to %struct.bignum_st**
  store %struct.bignum_st* %16, %struct.bignum_st** %160, align 8
  br label %166

161:                                              ; preds = %97, %141, %129, %126, %107, %101, %82, %153, %9, %18, %42, %125, %140
  %162 = phi %struct.bignum_st* [ %83, %140 ], [ %83, %125 ], [ %43, %42 ], [ null, %18 ], [ null, %9 ], [ %83, %153 ], [ %83, %82 ], [ %83, %101 ], [ %83, %107 ], [ %83, %126 ], [ %83, %129 ], [ %83, %141 ], [ %83, %97 ]
  %163 = phi i64 [ %84, %140 ], [ %84, %125 ], [ %44, %42 ], [ 0, %18 ], [ 0, %9 ], [ %84, %153 ], [ %84, %82 ], [ %84, %101 ], [ %84, %107 ], [ %84, %126 ], [ %84, %129 ], [ %84, %141 ], [ %84, %97 ]
  %164 = phi %struct.bignum_ctx* [ %19, %140 ], [ %19, %125 ], [ %19, %42 ], [ null, %18 ], [ null, %9 ], [ %19, %153 ], [ %19, %82 ], [ %19, %101 ], [ %19, %107 ], [ %19, %126 ], [ %19, %129 ], [ %19, %141 ], [ %19, %97 ]
  call void @ERR_put_error(i32 10, i32 0, i32 3, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 641) #6
  %165 = inttoptr i64 %163 to %struct.bignum_st*
  call void @BN_free(%struct.bignum_st* %165) #6
  call void @BN_free(%struct.bignum_st* %16) #6
  br label %166

166:                                              ; preds = %156, %161
  %167 = phi %struct.DSA_SIG_st* [ null, %161 ], [ %157, %156 ]
  %168 = phi %struct.bignum_ctx* [ %164, %161 ], [ %19, %156 ]
  %169 = phi %struct.bignum_st* [ %162, %161 ], [ %83, %156 ]
  call void @BN_CTX_free(%struct.bignum_ctx* %168) #6
  call void @BN_clear_free(%struct.bignum_st* nonnull %5) #6
  call void @BN_clear_free(%struct.bignum_st* nonnull %6) #6
  call void @BN_clear_free(%struct.bignum_st* %169) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #6
  br label %170

170:                                              ; preds = %3, %166
  %171 = phi %struct.DSA_SIG_st* [ %167, %166 ], [ null, %3 ]
  ret %struct.DSA_SIG_st* %171
}

declare i32 @dsa_check_parameters(%struct.dsa_st*) local_unnamed_addr #2

declare void @BN_init(%struct.bignum_st*) local_unnamed_addr #2

declare i32 @BN_num_bytes(%struct.bignum_st*) local_unnamed_addr #2

declare i32 @bn_minimal_width(%struct.bignum_st*) local_unnamed_addr #2

declare i32 @bn_resize_words(%struct.bignum_st*, i64) local_unnamed_addr #2

declare i64 @bn_reduce_once_in_place(i64*, i64, i64*, i64*, i64) local_unnamed_addr #2

declare i32 @bn_mod_add_consttime(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

declare i32 @BN_is_zero(%struct.bignum_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DSA_do_verify(i8*, i64, %struct.DSA_SIG_st* nocapture readonly, %struct.dsa_st*) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6
  store i32 -1431655766, i32* %5, align 4
  %7 = call i32 @DSA_do_check_signature(i32* nonnull %5, i8* %0, i64 %1, %struct.DSA_SIG_st* %2, %struct.dsa_st* %3)
  %8 = icmp eq i32 %7, 0
  %9 = load i32, i32* %5, align 4
  %10 = select i1 %8, i32 -1, i32 %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DSA_do_check_signature(i32* nocapture, i8*, i64, %struct.DSA_SIG_st* nocapture readonly, %struct.dsa_st*) local_unnamed_addr #0 {
  %6 = alloca %struct.bignum_st, align 8
  %7 = alloca %struct.bignum_st, align 8
  %8 = alloca %struct.bignum_st, align 8
  store i32 0, i32* %0, align 4
  %9 = tail call i32 @dsa_check_parameters(%struct.dsa_st* %4) #6
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %100, label %11

11:                                               ; preds = %5
  %12 = bitcast %struct.bignum_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #6
  %13 = bitcast %struct.bignum_st* %7 to i8*
  %14 = bitcast %struct.bignum_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #6
  %15 = bitcast %struct.bignum_st* %8 to i8*
  %16 = bitcast %struct.bignum_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #6
  %17 = bitcast %struct.bignum_st* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @BN_init(%struct.bignum_st* nonnull %6) #6
  call void @BN_init(%struct.bignum_st* nonnull %7) #6
  call void @BN_init(%struct.bignum_st* nonnull %8) #6
  %18 = call %struct.bignum_ctx* @BN_CTX_new() #6
  %19 = icmp eq %struct.bignum_ctx* %18, null
  br i1 %19, label %97, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.DSA_SIG_st, %struct.DSA_SIG_st* %3, i64 0, i32 0
  %22 = load %struct.bignum_st*, %struct.bignum_st** %21, align 8
  %23 = call i32 @BN_is_zero(%struct.bignum_st* %22) #6
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %98

25:                                               ; preds = %20
  %26 = load %struct.bignum_st*, %struct.bignum_st** %21, align 8
  %27 = call i32 @BN_is_negative(%struct.bignum_st* %26) #6
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %98

29:                                               ; preds = %25
  %30 = load %struct.bignum_st*, %struct.bignum_st** %21, align 8
  %31 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %4, i64 0, i32 2
  %32 = load %struct.bignum_st*, %struct.bignum_st** %31, align 8
  %33 = call i32 @BN_ucmp(%struct.bignum_st* %30, %struct.bignum_st* %32) #6
  %34 = icmp sgt i32 %33, -1
  br i1 %34, label %98, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %struct.DSA_SIG_st, %struct.DSA_SIG_st* %3, i64 0, i32 1
  %37 = load %struct.bignum_st*, %struct.bignum_st** %36, align 8
  %38 = call i32 @BN_is_zero(%struct.bignum_st* %37) #6
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %98

40:                                               ; preds = %35
  %41 = load %struct.bignum_st*, %struct.bignum_st** %36, align 8
  %42 = call i32 @BN_is_negative(%struct.bignum_st* %41) #6
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %98

44:                                               ; preds = %40
  %45 = load %struct.bignum_st*, %struct.bignum_st** %36, align 8
  %46 = load %struct.bignum_st*, %struct.bignum_st** %31, align 8
  %47 = call i32 @BN_ucmp(%struct.bignum_st* %45, %struct.bignum_st* %46) #6
  %48 = icmp sgt i32 %47, -1
  br i1 %48, label %98, label %49

49:                                               ; preds = %44
  %50 = load %struct.bignum_st*, %struct.bignum_st** %36, align 8
  %51 = load %struct.bignum_st*, %struct.bignum_st** %31, align 8
  %52 = call %struct.bignum_st* @BN_mod_inverse(%struct.bignum_st* nonnull %7, %struct.bignum_st* %50, %struct.bignum_st* %51, %struct.bignum_ctx* nonnull %18) #6
  %53 = icmp eq %struct.bignum_st* %52, null
  br i1 %53, label %97, label %54

54:                                               ; preds = %49
  %55 = load %struct.bignum_st*, %struct.bignum_st** %31, align 8
  %56 = call i32 @BN_num_bits(%struct.bignum_st* %55) #6
  %57 = lshr i32 %56, 3
  %58 = zext i32 %57 to i64
  %59 = icmp ult i64 %58, %2
  %60 = select i1 %59, i64 %58, i64 %2
  %61 = call %struct.bignum_st* @BN_bin2bn(i8* %1, i64 %60, %struct.bignum_st* nonnull %6) #6
  %62 = icmp eq %struct.bignum_st* %61, null
  br i1 %62, label %97, label %63

63:                                               ; preds = %54
  %64 = load %struct.bignum_st*, %struct.bignum_st** %31, align 8
  %65 = call i32 @BN_mod_mul(%struct.bignum_st* nonnull %6, %struct.bignum_st* nonnull %6, %struct.bignum_st* nonnull %7, %struct.bignum_st* %64, %struct.bignum_ctx* nonnull %18) #6
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %97, label %67

67:                                               ; preds = %63
  %68 = load %struct.bignum_st*, %struct.bignum_st** %21, align 8
  %69 = load %struct.bignum_st*, %struct.bignum_st** %31, align 8
  %70 = call i32 @BN_mod_mul(%struct.bignum_st* nonnull %7, %struct.bignum_st* %68, %struct.bignum_st* nonnull %7, %struct.bignum_st* %69, %struct.bignum_ctx* nonnull %18) #6
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %97, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %4, i64 0, i32 8
  %74 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %4, i64 0, i32 7
  %75 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %4, i64 0, i32 1
  %76 = load %struct.bignum_st*, %struct.bignum_st** %75, align 8
  %77 = call i32 @BN_MONT_CTX_set_locked(%struct.bn_mont_ctx_st** %73, %union.crypto_mutex_st* %74, %struct.bignum_st* %76, %struct.bignum_ctx* nonnull %18) #6
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %97, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %4, i64 0, i32 3
  %81 = load %struct.bignum_st*, %struct.bignum_st** %80, align 8
  %82 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %4, i64 0, i32 4
  %83 = load %struct.bignum_st*, %struct.bignum_st** %82, align 8
  %84 = load %struct.bignum_st*, %struct.bignum_st** %75, align 8
  %85 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %73, align 8
  %86 = call i32 @BN_mod_exp2_mont(%struct.bignum_st* nonnull %8, %struct.bignum_st* %81, %struct.bignum_st* nonnull %6, %struct.bignum_st* %83, %struct.bignum_st* nonnull %7, %struct.bignum_st* %84, %struct.bignum_ctx* nonnull %18, %struct.bn_mont_ctx_st* %85) #6
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %79
  %89 = load %struct.bignum_st*, %struct.bignum_st** %31, align 8
  %90 = call i32 @BN_div(%struct.bignum_st* null, %struct.bignum_st* nonnull %6, %struct.bignum_st* nonnull %8, %struct.bignum_st* %89, %struct.bignum_ctx* nonnull %18) #6
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %97, label %92

92:                                               ; preds = %88
  %93 = load %struct.bignum_st*, %struct.bignum_st** %21, align 8
  %94 = call i32 @BN_ucmp(%struct.bignum_st* nonnull %6, %struct.bignum_st* %93) #6
  %95 = icmp eq i32 %94, 0
  %96 = zext i1 %95 to i32
  store i32 %96, i32* %0, align 4
  br label %98

97:                                               ; preds = %11, %49, %54, %88, %79, %72, %67, %63
  call void @ERR_put_error(i32 10, i32 0, i32 3, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 743) #6
  br label %98

98:                                               ; preds = %92, %25, %20, %29, %40, %35, %44, %97
  %99 = phi i32 [ 0, %97 ], [ 1, %92 ], [ 1, %25 ], [ 1, %20 ], [ 1, %29 ], [ 1, %40 ], [ 1, %35 ], [ 1, %44 ]
  call void @BN_CTX_free(%struct.bignum_ctx* %18) #6
  call void @BN_free(%struct.bignum_st* nonnull %6) #6
  call void @BN_free(%struct.bignum_st* nonnull %7) #6
  call void @BN_free(%struct.bignum_st* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #6
  br label %100

100:                                              ; preds = %5, %98
  %101 = phi i32 [ %99, %98 ], [ 0, %5 ]
  ret i32 %101
}

declare i32 @BN_is_negative(%struct.bignum_st*) local_unnamed_addr #2

declare i32 @BN_ucmp(%struct.bignum_st*, %struct.bignum_st*) local_unnamed_addr #2

declare %struct.bignum_st* @BN_mod_inverse(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

declare i32 @BN_num_bits(%struct.bignum_st*) local_unnamed_addr #2

declare i32 @BN_mod_mul(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

declare i32 @BN_mod_exp2_mont(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*, %struct.bn_mont_ctx_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DSA_sign(i32, i8*, i64, i8*, i32* nocapture, %struct.dsa_st*) local_unnamed_addr #0 {
  %7 = alloca i8*, align 8
  store i8* %3, i8** %7, align 8
  %8 = tail call %struct.DSA_SIG_st* @DSA_do_sign(i8* %1, i64 %2, %struct.dsa_st* %5)
  %9 = icmp eq %struct.DSA_SIG_st* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i32 0, i32* %4, align 4
  br label %18

11:                                               ; preds = %6
  %12 = call i32 @i2d_DSA_SIG(%struct.DSA_SIG_st* nonnull %8, i8** nonnull %7) #6
  store i32 %12, i32* %4, align 4
  %13 = getelementptr inbounds %struct.DSA_SIG_st, %struct.DSA_SIG_st* %8, i64 0, i32 0
  %14 = load %struct.bignum_st*, %struct.bignum_st** %13, align 8
  call void @BN_free(%struct.bignum_st* %14) #6
  %15 = getelementptr inbounds %struct.DSA_SIG_st, %struct.DSA_SIG_st* %8, i64 0, i32 1
  %16 = load %struct.bignum_st*, %struct.bignum_st** %15, align 8
  call void @BN_free(%struct.bignum_st* %16) #6
  %17 = bitcast %struct.DSA_SIG_st* %8 to i8*
  call void @OPENSSL_free(i8* nonnull %17) #6
  br label %18

18:                                               ; preds = %11, %10
  %19 = phi i32 [ 0, %10 ], [ 1, %11 ]
  ret i32 %19
}

declare i32 @i2d_DSA_SIG(%struct.DSA_SIG_st*, i8**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DSA_verify(i32, i8*, i64, i8*, i64, %struct.dsa_st*) local_unnamed_addr #0 {
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #6
  store i32 -1431655766, i32* %7, align 4
  %9 = call i32 @DSA_check_signature(i32* nonnull %7, i8* %1, i64 %2, i8* %3, i64 %4, %struct.dsa_st* %5)
  %10 = icmp eq i32 %9, 0
  %11 = load i32, i32* %7, align 4
  %12 = select i1 %10, i32 -1, i32 %11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #6
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DSA_check_signature(i32* nocapture, i8*, i64, i8*, i64, %struct.dsa_st*) local_unnamed_addr #0 {
  %7 = alloca %struct.DSA_SIG_st*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = bitcast %struct.DSA_SIG_st** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  store %struct.DSA_SIG_st* null, %struct.DSA_SIG_st** %7, align 8
  %11 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6
  store i8* null, i8** %8, align 8
  %12 = tail call i8* @OPENSSL_malloc(i64 16) #6
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %6
  store %struct.DSA_SIG_st* null, %struct.DSA_SIG_st** %7, align 8
  br label %39

15:                                               ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #6
  %16 = bitcast %struct.DSA_SIG_st** %7 to i8**
  store i8* %12, i8** %16, align 8
  store i8* %3, i8** %9, align 8
  %17 = call %struct.DSA_SIG_st* @d2i_DSA_SIG(%struct.DSA_SIG_st** nonnull %7, i8** nonnull %9, i64 %4) #6
  %18 = icmp eq %struct.DSA_SIG_st* %17, null
  br i1 %18, label %39, label %19

19:                                               ; preds = %15
  %20 = load i8*, i8** %9, align 8
  %21 = getelementptr inbounds i8, i8* %3, i64 %4
  %22 = icmp eq i8* %20, %21
  br i1 %22, label %23, label %39

23:                                               ; preds = %19
  %24 = load %struct.DSA_SIG_st*, %struct.DSA_SIG_st** %7, align 8
  %25 = call i32 @i2d_DSA_SIG(%struct.DSA_SIG_st* %24, i8** nonnull %8) #6
  %26 = icmp sgt i32 %25, -1
  %27 = sext i32 %25 to i64
  %28 = icmp eq i64 %27, %4
  %29 = and i1 %26, %28
  br i1 %29, label %30, label %39

30:                                               ; preds = %23
  %31 = icmp eq i64 %4, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %30
  %33 = load i8*, i8** %8, align 8
  %34 = call i32 @bcmp(i8* %3, i8* %33, i64 %4)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30, %32
  %37 = load %struct.DSA_SIG_st*, %struct.DSA_SIG_st** %7, align 8
  %38 = call i32 @DSA_do_check_signature(i32* %0, i8* %1, i64 %2, %struct.DSA_SIG_st* %37, %struct.dsa_st* %5)
  br label %39

39:                                               ; preds = %14, %23, %32, %19, %15, %36
  %40 = phi i32 [ 0, %15 ], [ 0, %19 ], [ 0, %23 ], [ 0, %32 ], [ %38, %36 ], [ 0, %14 ]
  %41 = load i8*, i8** %8, align 8
  call void @OPENSSL_free(i8* %41) #6
  %42 = load %struct.DSA_SIG_st*, %struct.DSA_SIG_st** %7, align 8
  %43 = icmp eq %struct.DSA_SIG_st* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.DSA_SIG_st, %struct.DSA_SIG_st* %42, i64 0, i32 0
  %46 = load %struct.bignum_st*, %struct.bignum_st** %45, align 8
  call void @BN_free(%struct.bignum_st* %46) #6
  %47 = getelementptr inbounds %struct.DSA_SIG_st, %struct.DSA_SIG_st* %42, i64 0, i32 1
  %48 = load %struct.bignum_st*, %struct.bignum_st** %47, align 8
  call void @BN_free(%struct.bignum_st* %48) #6
  %49 = bitcast %struct.DSA_SIG_st* %42 to i8*
  call void @OPENSSL_free(i8* nonnull %49) #6
  br label %50

50:                                               ; preds = %39, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  ret i32 %40
}

declare %struct.DSA_SIG_st* @d2i_DSA_SIG(%struct.DSA_SIG_st**, i8**, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DSA_size(%struct.dsa_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 2
  %3 = load %struct.bignum_st*, %struct.bignum_st** %2, align 8
  %4 = tail call i32 @BN_num_bytes(%struct.bignum_st* %3) #6
  %5 = zext i32 %4 to i64
  %6 = add nuw nsw i64 %5, 1
  %7 = icmp ult i64 %6, 128
  br i1 %7, label %14, label %8

8:                                                ; preds = %1, %8
  %9 = phi i64 [ %11, %8 ], [ 1, %1 ]
  %10 = phi i64 [ %12, %8 ], [ %6, %1 ]
  %11 = add nuw nsw i64 %9, 1
  %12 = lshr i64 %10, 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %8

14:                                               ; preds = %8, %1
  %15 = phi i64 [ 1, %1 ], [ %11, %8 ]
  %16 = add nuw nsw i64 %5, 2
  %17 = add i64 %16, %15
  %18 = icmp ult i64 %17, %5
  br i1 %18, label %37, label %19

19:                                               ; preds = %14
  %20 = shl i64 %17, 1
  %21 = icmp ult i64 %20, %17
  br i1 %21, label %37, label %22

22:                                               ; preds = %19
  %23 = icmp ult i64 %20, 128
  br i1 %23, label %30, label %24

24:                                               ; preds = %22, %24
  %25 = phi i64 [ %27, %24 ], [ 1, %22 ]
  %26 = phi i64 [ %28, %24 ], [ %20, %22 ]
  %27 = add nuw nsw i64 %25, 1
  %28 = lshr i64 %26, 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %24

30:                                               ; preds = %24, %22
  %31 = phi i64 [ 1, %22 ], [ %27, %24 ]
  %32 = or i64 %20, 1
  %33 = add i64 %32, %31
  %34 = icmp ult i64 %33, %20
  %35 = trunc i64 %33 to i32
  %36 = select i1 %34, i32 0, i32 %35
  br label %37

37:                                               ; preds = %19, %30, %14
  %38 = phi i32 [ 0, %14 ], [ 0, %19 ], [ %36, %30 ]
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DSA_get_ex_new_index(i64, i8*, i32* nocapture readnone, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8**, i32, i64, i8*)* nocapture readnone, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)*) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #6
  store i32 -1431655766, i32* %6, align 4
  %8 = call i32 @CRYPTO_get_ex_new_index(%struct.CRYPTO_EX_DATA_CLASS* nonnull @g_ex_data_class, i32* nonnull %6, i64 %0, i8* %1, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %4) #6
  %9 = icmp eq i32 %8, 0
  %10 = load i32, i32* %6, align 4
  %11 = select i1 %9, i32 -1, i32 %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #6
  ret i32 %11
}

declare i32 @CRYPTO_get_ex_new_index(%struct.CRYPTO_EX_DATA_CLASS*, i32*, i64, i8*, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DSA_set_ex_data(%struct.dsa_st*, i32, i8*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 11
  %5 = tail call i32 @CRYPTO_set_ex_data(%struct.crypto_ex_data_st* %4, i32 %1, i8* %2) #6
  ret i32 %5
}

declare i32 @CRYPTO_set_ex_data(%struct.crypto_ex_data_st*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @DSA_get_ex_data(%struct.dsa_st*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 11
  %4 = tail call i8* @CRYPTO_get_ex_data(%struct.crypto_ex_data_st* %3, i32 %1) #6
  ret i8* %4
}

declare i8* @CRYPTO_get_ex_data(%struct.crypto_ex_data_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.dh_st* @DSA_dup_DH(%struct.dsa_st* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.dsa_st* %0, null
  br i1 %2, label %50, label %3

3:                                                ; preds = %1
  %4 = tail call %struct.dh_st* @DH_new() #6
  %5 = icmp eq %struct.dh_st* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 2
  %8 = load %struct.bignum_st*, %struct.bignum_st** %7, align 8
  %9 = icmp eq %struct.bignum_st* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = tail call i32 @BN_num_bits(%struct.bignum_st* nonnull %8) #6
  %12 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %4, i64 0, i32 4
  store i32 %11, i32* %12, align 8
  %13 = load %struct.bignum_st*, %struct.bignum_st** %7, align 8
  %14 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* %13) #6
  %15 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %4, i64 0, i32 7
  store %struct.bignum_st* %14, %struct.bignum_st** %15, align 8
  %16 = icmp eq %struct.bignum_st* %14, null
  br i1 %16, label %49, label %17

17:                                               ; preds = %6, %10
  %18 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 1
  %19 = load %struct.bignum_st*, %struct.bignum_st** %18, align 8
  %20 = icmp eq %struct.bignum_st* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* nonnull %19) #6
  %23 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %4, i64 0, i32 0
  store %struct.bignum_st* %22, %struct.bignum_st** %23, align 8
  %24 = icmp eq %struct.bignum_st* %22, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %17, %21
  %26 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 3
  %27 = load %struct.bignum_st*, %struct.bignum_st** %26, align 8
  %28 = icmp eq %struct.bignum_st* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* nonnull %27) #6
  %31 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %4, i64 0, i32 1
  store %struct.bignum_st* %30, %struct.bignum_st** %31, align 8
  %32 = icmp eq %struct.bignum_st* %30, null
  br i1 %32, label %49, label %33

33:                                               ; preds = %25, %29
  %34 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 4
  %35 = load %struct.bignum_st*, %struct.bignum_st** %34, align 8
  %36 = icmp eq %struct.bignum_st* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* nonnull %35) #6
  %39 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %4, i64 0, i32 2
  store %struct.bignum_st* %38, %struct.bignum_st** %39, align 8
  %40 = icmp eq %struct.bignum_st* %38, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %33, %37
  %42 = getelementptr inbounds %struct.dsa_st, %struct.dsa_st* %0, i64 0, i32 5
  %43 = load %struct.bignum_st*, %struct.bignum_st** %42, align 8
  %44 = icmp eq %struct.bignum_st* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* nonnull %43) #6
  %47 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %4, i64 0, i32 3
  store %struct.bignum_st* %46, %struct.bignum_st** %47, align 8
  %48 = icmp eq %struct.bignum_st* %46, null
  br i1 %48, label %49, label %50

49:                                               ; preds = %21, %29, %37, %45, %10, %3
  tail call void @DH_free(%struct.dh_st* %4) #6
  br label %50

50:                                               ; preds = %49, %41, %45, %1
  %51 = phi %struct.dh_st* [ null, %1 ], [ null, %49 ], [ %4, %41 ], [ %4, %45 ]
  ret %struct.dh_st* %51
}

declare %struct.dh_st* @DH_new() local_unnamed_addr #2

declare void @DH_free(%struct.dh_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @BN_to_montgomery(%struct.bignum_st*, %struct.bignum_st*, %struct.bn_mont_ctx_st*, %struct.bignum_ctx*) local_unnamed_addr #2

declare i32 @BN_mod_mul_montgomery(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bn_mont_ctx_st*, %struct.bignum_ctx*) local_unnamed_addr #2

declare i32 @bn_mod_inverse_prime(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*, %struct.bn_mont_ctx_st*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
