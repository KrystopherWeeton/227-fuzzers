; ModuleID = '../../components/media_router/browser/issues_observer.cc'
source_filename = "../../components/media_router/browser/issues_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media_router::IssuesObserver" = type <{ i32 (...)**, %"class.media_router::IssueManager"*, i8, [7 x i8] }>
%"class.media_router::IssueManager" = type { %"class.base::small_map", %"class.base::small_map", %"class.base::ObserverList", %"class.media_router::Issue"*, %class.scoped_refptr }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon = type { [4 x %"struct.std::__1::pair"] }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.media_router::IssueManager::Entry"* }
%"struct.media_router::IssueManager::Entry" = type { %"class.media_router::Issue", %"class.std::__1::unique_ptr.9" }
%"class.media_router::Issue" = type { i32, %"struct.media_router::IssueInfo" }
%"struct.media_router::IssueInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.2 }
%union.anon.2 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.base::internal::CancelableCallbackImpl"* }
%"class.base::internal::CancelableCallbackImpl" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.24", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.26" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

$_ZN12media_router14IssuesObserver7OnIssueERKNS_5IssueE = comdat any

$_ZN12media_router14IssuesObserver15OnIssuesClearedEv = comdat any

@_ZTVN12media_router14IssuesObserverE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media_router::IssuesObserver"*)* @_ZN12media_router14IssuesObserverD2Ev to i8*), i8* bitcast (void (%"class.media_router::IssuesObserver"*)* @_ZN12media_router14IssuesObserverD0Ev to i8*), i8* bitcast (void (%"class.media_router::IssuesObserver"*, %"class.media_router::Issue"*)* @_ZN12media_router14IssuesObserver7OnIssueERKNS_5IssueE to i8*), i8* bitcast (void (%"class.media_router::IssuesObserver"*)* @_ZN12media_router14IssuesObserver15OnIssuesClearedEv to i8*)] }, align 8

@_ZN12media_router14IssuesObserverC1EPNS_12IssueManagerE = hidden unnamed_addr alias void (%"class.media_router::IssuesObserver"*, %"class.media_router::IssueManager"*), void (%"class.media_router::IssuesObserver"*, %"class.media_router::IssueManager"*)* @_ZN12media_router14IssuesObserverC2EPNS_12IssueManagerE
@_ZN12media_router14IssuesObserverD1Ev = hidden unnamed_addr alias void (%"class.media_router::IssuesObserver"*), void (%"class.media_router::IssuesObserver"*)* @_ZN12media_router14IssuesObserverD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12media_router14IssuesObserverC2EPNS_12IssueManagerE(%"class.media_router::IssuesObserver"* nocapture, %"class.media_router::IssueManager"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media_router::IssuesObserver", %"class.media_router::IssuesObserver"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12media_router14IssuesObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.media_router::IssuesObserver", %"class.media_router::IssuesObserver"* %0, i64 0, i32 1
  store %"class.media_router::IssueManager"* %1, %"class.media_router::IssueManager"** %4, align 8
  %5 = getelementptr inbounds %"class.media_router::IssuesObserver", %"class.media_router::IssuesObserver"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12media_router14IssuesObserverD2Ev(%"class.media_router::IssuesObserver"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.media_router::IssuesObserver", %"class.media_router::IssuesObserver"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12media_router14IssuesObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media_router::IssuesObserver", %"class.media_router::IssuesObserver"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media_router::IssuesObserver", %"class.media_router::IssuesObserver"* %0, i64 0, i32 1
  %8 = load %"class.media_router::IssueManager"*, %"class.media_router::IssueManager"** %7, align 8
  tail call void @_ZN12media_router12IssueManager18UnregisterObserverEPNS_14IssuesObserverE(%"class.media_router::IssueManager"* %8, %"class.media_router::IssuesObserver"* %0) #4
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

declare void @_ZN12media_router12IssueManager18UnregisterObserverEPNS_14IssuesObserverE(%"class.media_router::IssueManager"*, %"class.media_router::IssuesObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12media_router14IssuesObserverD0Ev(%"class.media_router::IssuesObserver"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.media_router::IssuesObserver", %"class.media_router::IssuesObserver"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12media_router14IssuesObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media_router::IssuesObserver", %"class.media_router::IssuesObserver"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media_router::IssuesObserver", %"class.media_router::IssuesObserver"* %0, i64 0, i32 1
  %8 = load %"class.media_router::IssueManager"*, %"class.media_router::IssueManager"** %7, align 8
  tail call void @_ZN12media_router12IssueManager18UnregisterObserverEPNS_14IssuesObserverE(%"class.media_router::IssueManager"* %8, %"class.media_router::IssuesObserver"* %0) #4
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.media_router::IssuesObserver"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12media_router14IssuesObserver4InitEv(%"class.media_router::IssuesObserver"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.media_router::IssuesObserver", %"class.media_router::IssuesObserver"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.media_router::IssuesObserver", %"class.media_router::IssuesObserver"* %0, i64 0, i32 1
  %7 = load %"class.media_router::IssueManager"*, %"class.media_router::IssueManager"** %6, align 8
  tail call void @_ZN12media_router12IssueManager16RegisterObserverEPNS_14IssuesObserverE(%"class.media_router::IssueManager"* %7, %"class.media_router::IssuesObserver"* %0) #4
  store i8 1, i8* %2, align 8
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN12media_router12IssueManager16RegisterObserverEPNS_14IssuesObserverE(%"class.media_router::IssueManager"*, %"class.media_router::IssuesObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12media_router14IssuesObserver7OnIssueERKNS_5IssueE(%"class.media_router::IssuesObserver"*, %"class.media_router::Issue"* dereferenceable(144)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12media_router14IssuesObserver15OnIssuesClearedEv(%"class.media_router::IssuesObserver"*) unnamed_addr #1 comdat align 2 {
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
