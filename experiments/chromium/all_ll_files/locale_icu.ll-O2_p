; ModuleID = '../../third_party/blink/renderer/platform/text/locale_icu.cc'
source_filename = "../../third_party/blink/renderer/platform/text/locale_icu.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::LocaleICU" = type <{ %"class.blink::Locale.base", [6 x i8], %"class.std::__1::basic_string", i8**, i8**, i8, i8, [6 x i8], %"class.std::__1::unique_ptr.8", i32, [4 x i8], %"class.std::__1::unique_ptr.8", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8**, i8**, %"class.WTF::Vector", %"class.WTF::Vector", %"class.WTF::Vector", %"class.WTF::Vector", i8, [7 x i8] }>
%"class.blink::Locale.base" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8 }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase", [96 x i8] }
%struct.UParseError = type { i32, i32, [16 x i16], [16 x i16] }
%struct.UFieldPosition = type { i32, i32, i32 }
%"class.WTF::Vector.21" = type { %"class.WTF::VectorBuffer.22" }
%"class.WTF::VectorBuffer.22" = type { %"class.WTF::VectorBufferBase.23" }
%"class.WTF::VectorBufferBase.23" = type { i16*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZN3WTF12VectorBufferINS_6StringELj12ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKPKcEEvOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA3_KcEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j = comdat any

$_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIDsEEvPKT_j = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA4_KcEEvOT_ = comdat any

@_ZTVN5blink9LocaleICUE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU10DateFormatEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU11MonthFormatEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU16ShortMonthFormatEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU10TimeFormatEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU15ShortTimeFormatEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU25DateTimeFormatWithSecondsEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU28DateTimeFormatWithoutSecondsEv to i8*), i8* bitcast (%"class.WTF::Vector"* (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU16ShortMonthLabelsEv to i8*), i8* bitcast (%"class.WTF::Vector"* (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU21StandAloneMonthLabelsEv to i8*), i8* bitcast (%"class.WTF::Vector"* (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU26ShortStandAloneMonthLabelsEv to i8*), i8* bitcast (%"class.WTF::Vector"* (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU14TimeAMPMLabelsEv to i8*), i8* bitcast (%"class.WTF::Vector"* (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU11MonthLabelsEv to i8*), i8* bitcast (%"class.WTF::Vector"* (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU18WeekDayShortLabelsEv to i8*), i8* bitcast (i32 (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU14FirstDayOfWeekEv to i8*), i8* bitcast (i1 (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU5IsRTLEv to i8*), i8* bitcast (void (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICUD2Ev to i8*), i8* bitcast (void (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICUD0Ev to i8*), i8* bitcast (void (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICU20InitializeLocaleDataEv to i8*)] }, align 8
@_ZZNK5blink9LocaleICU14OpenDateFormatE16UDateFormatStyleS1_E12kGmtTimezone = internal constant [3 x i16] [i16 71, i16 77, i16 84], align 2
@_ZZNK5blink9LocaleICU38OpenDateFormatForStandAloneMonthLabelsEbE13kMonthPattern = internal constant [4 x i16] [i16 76, i16 76, i16 76, i16 76], align 2
@.str = private unnamed_addr constant [11 x i8] c"yyyy-MM-dd\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"yyyyMMMM\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"yyyyMMM\00", align 1
@_ZN3WTFL10kMonthNameE = internal constant [12 x [4 x i8]] [[4 x i8] c"Jan\00", [4 x i8] c"Feb\00", [4 x i8] c"Mar\00", [4 x i8] c"Apr\00", [4 x i8] c"May\00", [4 x i8] c"Jun\00", [4 x i8] c"Jul\00", [4 x i8] c"Aug\00", [4 x i8] c"Sep\00", [4 x i8] c"Oct\00", [4 x i8] c"Nov\00", [4 x i8] c"Dec\00"], align 16
@.str.3 = private unnamed_addr constant [4 x i8] c"Sun\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"Mon\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"Tue\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"Wed\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"Thu\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"Fri\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"Sat\00", align 1
@_ZN3WTFL14kMonthFullNameE = internal constant [12 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i32 0, i32 0)], align 16
@.str.10 = private unnamed_addr constant [8 x i8] c"January\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"February\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"March\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"April\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"May\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"June\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"July\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"August\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"September\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"October\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"November\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"December\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.22 = private unnamed_addr constant [3 x i8] c"AM\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"PM\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"yyyy-MM\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.26 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.28 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.29 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.30 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [100 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<WTF::String, 0, WTF::PartitionAllocator>]\00", align 1

@_ZN5blink9LocaleICUC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.blink::LocaleICU"*, %"class.std::__1::basic_string"*), void (%"class.blink::LocaleICU"*, %"class.std::__1::basic_string"*)* @_ZN5blink9LocaleICUC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN5blink9LocaleICUD1Ev = hidden unnamed_addr alias void (%"class.blink::LocaleICU"*), void (%"class.blink::LocaleICU"*)* @_ZN5blink9LocaleICUD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Locale"* @_ZN5blink6Locale6CreateERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #10
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.WTF::String"* %0, i32 0) #10
  %4 = call noalias i8* @malloc(i64 368) #10
  %5 = bitcast i8* %4 to i32 (...)***
  %6 = getelementptr i8, i8* %4, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 137, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink9LocaleICUE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 152
  %8 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* nonnull align 8 %3, i64 24, i1 false) #10
  br label %20

13:                                               ; preds = %1
  %14 = bitcast i8* %7 to %"class.std::__1::basic_string"*
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %14, i8* %16, i64 %18) #10
  %19 = load i8, i8* %9, align 1
  br label %20

20:                                               ; preds = %13, %12
  %21 = phi i8 [ %19, %13 ], [ %10, %12 ]
  %22 = getelementptr inbounds i8, i8* %4, i64 176
  %23 = getelementptr inbounds i8, i8* %4, i64 200
  %24 = bitcast i8* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %4, i64 208
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %4, i64 216
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 18, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 145, i1 false) #10
  %28 = icmp slt i8 %21, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %20, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #10
  %33 = bitcast i8* %4 to %"class.blink::Locale"*
  ret %"class.blink::Locale"* %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LocaleICUC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::LocaleICU"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 0, i32 1, i64 0
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 137, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink9LocaleICUE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #10
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %6, i8* %16, i64 %18) #10
  br label %19

19:                                               ; preds = %11, %14
  %20 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 3
  %21 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 8
  %22 = bitcast %"class.std::__1::unique_ptr.8"* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 9
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 11
  %25 = bitcast i8*** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 18, i1 false)
  %26 = bitcast %"class.std::__1::unique_ptr.8"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 145, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LocaleICUD2Ev(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink9LocaleICUE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 3
  %4 = load i8**, i8*** %3, align 8
  tail call void @unum_close_69(i8** %4) #10
  %5 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 4
  %6 = load i8**, i8*** %5, align 8
  tail call void @udat_close_69(i8** %6) #10
  %7 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 19
  %8 = load i8**, i8*** %7, align 8
  tail call void @udat_close_69(i8** %8) #10
  %9 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 20
  %10 = load i8**, i8*** %9, align 8
  tail call void @udat_close_69(i8** %10) #10
  %11 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 24
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::String"*, %"class.WTF::String"** %12, align 8
  %14 = icmp eq %"class.WTF::String"* %13, null
  br i1 %14, label %49, label %15, !prof !2

15:                                               ; preds = %1
  %16 = bitcast %"class.WTF::String"* %13 to i8*
  %17 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 24, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %47, label %20, !prof !3

20:                                               ; preds = %15
  %21 = zext i32 %18 to i64
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %21
  br label %23

23:                                               ; preds = %41, %20
  %24 = phi %"class.WTF::String"* [ %42, %41 ], [ %13, %20 ]
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #10
  br label %41

41:                                               ; preds = %40, %37, %23
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 1
  %43 = icmp eq %"class.WTF::String"* %42, %22
  br i1 %43, label %44, label %23

44:                                               ; preds = %41
  store i32 0, i32* %17, align 4
  %45 = bitcast %"class.WTF::Vector"* %11 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %15
  %48 = phi i8* [ %46, %44 ], [ %16, %15 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %48) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %12, align 8
  br label %49

49:                                               ; preds = %1, %47
  %50 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 23
  %51 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::String"*, %"class.WTF::String"** %51, align 8
  %53 = icmp eq %"class.WTF::String"* %52, null
  br i1 %53, label %88, label %54, !prof !2

54:                                               ; preds = %49
  %55 = bitcast %"class.WTF::String"* %52 to i8*
  %56 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 23, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %86, label %59, !prof !3

59:                                               ; preds = %54
  %60 = zext i32 %57 to i64
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 %60
  br label %62

62:                                               ; preds = %80, %59
  %63 = phi %"class.WTF::String"* [ %81, %80 ], [ %52, %59 ]
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #10
  br label %80

80:                                               ; preds = %79, %76, %62
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 1
  %82 = icmp eq %"class.WTF::String"* %81, %61
  br i1 %82, label %83, label %62

83:                                               ; preds = %80
  store i32 0, i32* %56, align 4
  %84 = bitcast %"class.WTF::Vector"* %50 to i8**
  %85 = load i8*, i8** %84, align 8
  br label %86

86:                                               ; preds = %83, %54
  %87 = phi i8* [ %85, %83 ], [ %55, %54 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %87) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %51, align 8
  br label %88

88:                                               ; preds = %49, %86
  %89 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 22
  %90 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::String"*, %"class.WTF::String"** %90, align 8
  %92 = icmp eq %"class.WTF::String"* %91, null
  br i1 %92, label %127, label %93, !prof !2

93:                                               ; preds = %88
  %94 = bitcast %"class.WTF::String"* %91 to i8*
  %95 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 22, i32 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %125, label %98, !prof !3

98:                                               ; preds = %93
  %99 = zext i32 %96 to i64
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %91, i64 %99
  br label %101

101:                                              ; preds = %119, %98
  %102 = phi %"class.WTF::String"* [ %120, %119 ], [ %91, %98 ]
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %102, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #10
  br label %119

119:                                              ; preds = %118, %115, %101
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %102, i64 1
  %121 = icmp eq %"class.WTF::String"* %120, %100
  br i1 %121, label %122, label %101

122:                                              ; preds = %119
  store i32 0, i32* %95, align 4
  %123 = bitcast %"class.WTF::Vector"* %89 to i8**
  %124 = load i8*, i8** %123, align 8
  br label %125

125:                                              ; preds = %122, %93
  %126 = phi i8* [ %124, %122 ], [ %94, %93 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %126) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %90, align 8
  br label %127

127:                                              ; preds = %88, %125
  %128 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 21
  %129 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::String"*, %"class.WTF::String"** %129, align 8
  %131 = icmp eq %"class.WTF::String"* %130, null
  br i1 %131, label %166, label %132, !prof !2

132:                                              ; preds = %127
  %133 = bitcast %"class.WTF::String"* %130 to i8*
  %134 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 21, i32 0, i32 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %164, label %137, !prof !3

137:                                              ; preds = %132
  %138 = zext i32 %135 to i64
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %130, i64 %138
  br label %140

140:                                              ; preds = %158, %137
  %141 = phi %"class.WTF::String"* [ %159, %158 ], [ %130, %137 ]
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #10
  br label %158

158:                                              ; preds = %157, %154, %140
  %159 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %141, i64 1
  %160 = icmp eq %"class.WTF::String"* %159, %139
  br i1 %160, label %161, label %140

161:                                              ; preds = %158
  store i32 0, i32* %134, align 4
  %162 = bitcast %"class.WTF::Vector"* %128 to i8**
  %163 = load i8*, i8** %162, align 8
  br label %164

164:                                              ; preds = %161, %132
  %165 = phi i8* [ %163, %161 ], [ %133, %132 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %165) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %129, align 8
  br label %166

166:                                              ; preds = %127, %164
  %167 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 18, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #10
  br label %183

183:                                              ; preds = %166, %179, %182
  %184 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 17, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %200, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  br i1 %191, label %194, label %196

194:                                              ; preds = %187
  %195 = add i32 %193, -1
  store i32 %195, i32* %192, align 4
  br label %196

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %195, %194 ], [ %193, %187 ]
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %185) #10
  br label %200

200:                                              ; preds = %183, %196, %199
  %201 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 16, i32 0, i32 0
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %203, label %217, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  br i1 %208, label %211, label %213

211:                                              ; preds = %204
  %212 = add i32 %210, -1
  store i32 %212, i32* %209, align 4
  br label %213

213:                                              ; preds = %211, %204
  %214 = phi i32 [ %212, %211 ], [ %210, %204 ]
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %202) #10
  br label %217

217:                                              ; preds = %200, %213, %216
  %218 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 15, i32 0, i32 0
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %218, align 8
  %220 = icmp eq %"class.WTF::StringImpl"* %219, null
  br i1 %220, label %234, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  br i1 %225, label %228, label %230

228:                                              ; preds = %221
  %229 = add i32 %227, -1
  store i32 %229, i32* %226, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = phi i32 [ %229, %228 ], [ %227, %221 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %230
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %219) #10
  br label %234

234:                                              ; preds = %217, %230, %233
  %235 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 14, i32 0, i32 0
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %251, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load atomic i32, i32* %239 monotonic, align 4
  %241 = and i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %244 = load i32, i32* %243, align 4
  br i1 %242, label %245, label %247

245:                                              ; preds = %238
  %246 = add i32 %244, -1
  store i32 %246, i32* %243, align 4
  br label %247

247:                                              ; preds = %245, %238
  %248 = phi i32 [ %246, %245 ], [ %244, %238 ]
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %247
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %236) #10
  br label %251

251:                                              ; preds = %234, %247, %250
  %252 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 13, i32 0, i32 0
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %253, null
  br i1 %254, label %268, label %255

255:                                              ; preds = %251
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 0
  %261 = load i32, i32* %260, align 4
  br i1 %259, label %262, label %264

262:                                              ; preds = %255
  %263 = add i32 %261, -1
  store i32 %263, i32* %260, align 4
  br label %264

264:                                              ; preds = %262, %255
  %265 = phi i32 [ %263, %262 ], [ %261, %255 ]
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %268

267:                                              ; preds = %264
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %253) #10
  br label %268

268:                                              ; preds = %251, %264, %267
  %269 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 12, i32 0, i32 0
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %269, align 8
  %271 = icmp eq %"class.WTF::StringImpl"* %270, null
  br i1 %271, label %285, label %272

272:                                              ; preds = %268
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = load atomic i32, i32* %273 monotonic, align 4
  %275 = and i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  br i1 %276, label %279, label %281

279:                                              ; preds = %272
  %280 = add i32 %278, -1
  store i32 %280, i32* %277, align 4
  br label %281

281:                                              ; preds = %279, %272
  %282 = phi i32 [ %280, %279 ], [ %278, %272 ]
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %281
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %270) #10
  br label %285

285:                                              ; preds = %268, %281, %284
  %286 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %287 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %286, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %286, align 8
  %288 = icmp eq %"class.WTF::Vector"* %287, null
  br i1 %288, label %329, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %287, i64 0, i32 0, i32 0, i32 0
  %291 = load %"class.WTF::String"*, %"class.WTF::String"** %290, align 8
  %292 = icmp eq %"class.WTF::String"* %291, null
  br i1 %292, label %327, label %293, !prof !2

293:                                              ; preds = %289
  %294 = bitcast %"class.WTF::String"* %291 to i8*
  %295 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %287, i64 0, i32 0, i32 0, i32 2
  %296 = load i32, i32* %295, align 4
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %325, label %298, !prof !3

298:                                              ; preds = %293
  %299 = zext i32 %296 to i64
  %300 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %291, i64 %299
  br label %301

301:                                              ; preds = %319, %298
  %302 = phi %"class.WTF::String"* [ %320, %319 ], [ %291, %298 ]
  %303 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %302, i64 0, i32 0, i32 0
  %304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %303, align 8
  %305 = icmp eq %"class.WTF::StringImpl"* %304, null
  br i1 %305, label %319, label %306

306:                                              ; preds = %301
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = and i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 0
  %312 = load i32, i32* %311, align 4
  br i1 %310, label %313, label %315

313:                                              ; preds = %306
  %314 = add i32 %312, -1
  store i32 %314, i32* %311, align 4
  br label %315

315:                                              ; preds = %313, %306
  %316 = phi i32 [ %314, %313 ], [ %312, %306 ]
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %319

318:                                              ; preds = %315
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %304) #10
  br label %319

319:                                              ; preds = %318, %315, %301
  %320 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %302, i64 1
  %321 = icmp eq %"class.WTF::String"* %320, %300
  br i1 %321, label %322, label %301

322:                                              ; preds = %319
  store i32 0, i32* %295, align 4
  %323 = bitcast %"class.WTF::Vector"* %287 to i8**
  %324 = load i8*, i8** %323, align 8
  br label %325

325:                                              ; preds = %322, %293
  %326 = phi i8* [ %324, %322 ], [ %294, %293 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %326) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %290, align 8
  br label %327

327:                                              ; preds = %325, %289
  %328 = bitcast %"class.WTF::Vector"* %287 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %328) #10
  br label %329

329:                                              ; preds = %285, %327
  %330 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %331 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %330, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %330, align 8
  %332 = icmp eq %"class.WTF::Vector"* %331, null
  br i1 %332, label %373, label %333

333:                                              ; preds = %329
  %334 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %331, i64 0, i32 0, i32 0, i32 0
  %335 = load %"class.WTF::String"*, %"class.WTF::String"** %334, align 8
  %336 = icmp eq %"class.WTF::String"* %335, null
  br i1 %336, label %371, label %337, !prof !2

337:                                              ; preds = %333
  %338 = bitcast %"class.WTF::String"* %335 to i8*
  %339 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %331, i64 0, i32 0, i32 0, i32 2
  %340 = load i32, i32* %339, align 4
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %369, label %342, !prof !3

342:                                              ; preds = %337
  %343 = zext i32 %340 to i64
  %344 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %335, i64 %343
  br label %345

345:                                              ; preds = %363, %342
  %346 = phi %"class.WTF::String"* [ %364, %363 ], [ %335, %342 ]
  %347 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %346, i64 0, i32 0, i32 0
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %347, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %348, null
  br i1 %349, label %363, label %350

350:                                              ; preds = %345
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  br i1 %354, label %357, label %359

357:                                              ; preds = %350
  %358 = add i32 %356, -1
  store i32 %358, i32* %355, align 4
  br label %359

359:                                              ; preds = %357, %350
  %360 = phi i32 [ %358, %357 ], [ %356, %350 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %359
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %348) #10
  br label %363

363:                                              ; preds = %362, %359, %345
  %364 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %346, i64 1
  %365 = icmp eq %"class.WTF::String"* %364, %344
  br i1 %365, label %366, label %345

366:                                              ; preds = %363
  store i32 0, i32* %339, align 4
  %367 = bitcast %"class.WTF::Vector"* %331 to i8**
  %368 = load i8*, i8** %367, align 8
  br label %369

369:                                              ; preds = %366, %337
  %370 = phi i8* [ %368, %366 ], [ %338, %337 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %370) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %334, align 8
  br label %371

371:                                              ; preds = %369, %333
  %372 = bitcast %"class.WTF::Vector"* %331 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %372) #10
  br label %373

373:                                              ; preds = %329, %371
  %374 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %375 = bitcast %"class.std::__1::basic_string"* %374 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %376 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %375, i64 0, i32 1, i32 0
  %377 = load i8, i8* %376, align 1
  %378 = icmp slt i8 %377, 0
  br i1 %378, label %379, label %382

379:                                              ; preds = %373
  %380 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %374, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %381 = load i8*, i8** %380, align 8
  tail call void @_ZdlPv(i8* %381) #11
  br label %382

382:                                              ; preds = %373, %379
  %383 = bitcast %"class.blink::LocaleICU"* %0 to %"class.blink::Locale"*
  tail call void @_ZN5blink6LocaleD2Ev(%"class.blink::Locale"* %383) #10
  ret void
}

declare void @unum_close_69(i8**) local_unnamed_addr #2

declare void @udat_close_69(i8**) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink6LocaleD2Ev(%"class.blink::Locale"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LocaleICUD0Ev(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9LocaleICUD2Ev(%"class.blink::LocaleICU"* %0) #10
  %2 = bitcast %"class.blink::LocaleICU"* %0 to i8*
  tail call void @free(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU13DecimalSymbolE19UNumberFormatSymbol(%"class.blink::LocaleICU"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i16*, align 8
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 0, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 3
  %7 = load i8**, i8*** %6, align 8
  %8 = call i32 @unum_getSymbol_69(i8** %7, i32 %1, i16* null, i32 0, i32* nonnull %4) #10
  %9 = load i32, i32* %4, align 4
  %10 = icmp sgt i32 %9, 0
  %11 = icmp ne i32 %9, 15
  %12 = and i1 %10, %11
  br i1 %12, label %78, label %13

13:                                               ; preds = %2
  %14 = bitcast i16** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %3, align 8
  %15 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %8, i16** nonnull dereferenceable(8) %3) #10
  %16 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  store i32 0, i32* %4, align 4
  %17 = load i8**, i8*** %6, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %25 = bitcast %"class.WTF::StringImpl"* %24 to i16*
  br label %26

26:                                               ; preds = %13, %19, %23
  %27 = phi i16* [ %25, %23 ], [ null, %19 ], [ null, %13 ]
  %28 = call i32 @unum_getSymbol_69(i8** %17, i32 %1, i16* %27, i32 %8, i32* nonnull %4) #10
  %29 = load i32, i32* %4, align 4
  %30 = icmp slt i32 %29, 1
  br i1 %30, label %31, label %61

31:                                               ; preds = %26
  br i1 %18, label %36, label %32

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %57

36:                                               ; preds = %32, %31
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %38 = ptrtoint %"class.WTF::StringImpl"* %37 to i64
  %39 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #10
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !3

54:                                               ; preds = %45
  call void @llvm.trap() #10
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %32, %36, %40, %55
  %58 = phi i64 [ %16, %36 ], [ %16, %55 ], [ %16, %40 ], [ 0, %32 ]
  %59 = phi i64 [ %38, %36 ], [ %38, %55 ], [ %38, %40 ], [ %16, %32 ]
  %60 = inttoptr i64 %58 to %"class.WTF::StringImpl"*
  br label %61

61:                                               ; preds = %26, %57
  %62 = phi i64 [ %59, %57 ], [ 0, %26 ]
  %63 = phi %"class.WTF::StringImpl"* [ %60, %57 ], [ %15, %26 ]
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #10
  br label %78

78:                                               ; preds = %77, %74, %61, %2
  %79 = phi i64 [ 0, %2 ], [ %62, %61 ], [ %62, %74 ], [ %62, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  %80 = inttoptr i64 %79 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %80
}

declare i32 @unum_getSymbol_69(i8**, i32, i16*, i32, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU20DecimalTextAttributeE26UNumberFormatTextAttribute(%"class.blink::LocaleICU"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i16*, align 8
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 0, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 3
  %7 = load i8**, i8*** %6, align 8
  %8 = call i32 @unum_getTextAttribute_69(i8** %7, i32 %1, i16* null, i32 0, i32* nonnull %4) #10
  %9 = load i32, i32* %4, align 4
  %10 = icmp sgt i32 %9, 0
  %11 = icmp ne i32 %9, 15
  %12 = and i1 %10, %11
  br i1 %12, label %78, label %13

13:                                               ; preds = %2
  %14 = bitcast i16** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %3, align 8
  %15 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %8, i16** nonnull dereferenceable(8) %3) #10
  %16 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  store i32 0, i32* %4, align 4
  %17 = load i8**, i8*** %6, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %25 = bitcast %"class.WTF::StringImpl"* %24 to i16*
  br label %26

26:                                               ; preds = %13, %19, %23
  %27 = phi i16* [ %25, %23 ], [ null, %19 ], [ null, %13 ]
  %28 = call i32 @unum_getTextAttribute_69(i8** %17, i32 %1, i16* %27, i32 %8, i32* nonnull %4) #10
  %29 = load i32, i32* %4, align 4
  %30 = icmp slt i32 %29, 1
  br i1 %30, label %31, label %61

31:                                               ; preds = %26
  br i1 %18, label %36, label %32

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %57

36:                                               ; preds = %32, %31
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %38 = ptrtoint %"class.WTF::StringImpl"* %37 to i64
  %39 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #10
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !3

54:                                               ; preds = %45
  call void @llvm.trap() #10
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %32, %36, %40, %55
  %58 = phi i64 [ %16, %36 ], [ %16, %55 ], [ %16, %40 ], [ 0, %32 ]
  %59 = phi i64 [ %38, %36 ], [ %38, %55 ], [ %38, %40 ], [ %16, %32 ]
  %60 = inttoptr i64 %58 to %"class.WTF::StringImpl"*
  br label %61

61:                                               ; preds = %26, %57
  %62 = phi i64 [ %59, %57 ], [ 0, %26 ]
  %63 = phi %"class.WTF::StringImpl"* [ %60, %57 ], [ %15, %26 ]
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #10
  br label %78

78:                                               ; preds = %77, %74, %61, %2
  %79 = phi i64 [ 0, %2 ], [ %62, %61 ], [ %62, %74 ], [ %62, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  %80 = inttoptr i64 %79 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %80
}

declare i32 @unum_getTextAttribute_69(i8**, i32, i16*, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LocaleICU20InitializeLocaleDataEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.WTF::Vector.17", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 5
  %21 = load i8, i8* %20, align 8, !range !4
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %546

23:                                               ; preds = %1
  store i8 1, i8* %20, align 8
  %24 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #10
  store i32 0, i32* %2, align 4
  %25 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  br label %35

33:                                               ; preds = %23
  %34 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  br label %35

35:                                               ; preds = %30, %33
  %36 = phi i8* [ %32, %30 ], [ %34, %33 ]
  %37 = call i8** @unum_open_69(i32 1, i16* null, i32 0, i8* %36, %struct.UParseError* null, i32* nonnull %2) #10
  %38 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 3
  store i8** %37, i8*** %38, align 8
  %39 = load i32, i32* %2, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %545, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.WTF::Vector.17"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %42) #10
  %43 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 96, i1 false)
  %44 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 1, i64 0
  %45 = bitcast %"class.WTF::Vector.17"* %3 to i8**
  store i8* %44, i8** %45, align 8
  %46 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 1
  store i32 12, i32* %46, align 8
  %47 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %47, align 4
  %48 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #10
  %49 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU13DecimalSymbolE19UNumberFormatSymbol(%"class.blink::LocaleICU"* %0, i32 4)
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %50, align 8
  %51 = load i32, i32* %47, align 4
  %52 = load i32, i32* %46, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %63, label %54, !prof !3

54:                                               ; preds = %41
  %55 = ptrtoint %"class.WTF::StringImpl"* %49 to i64
  %56 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::String"*, %"class.WTF::String"** %56, align 8
  %58 = zext i32 %51 to i64
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 %58
  %60 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 %55, i64* %60, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %61 = load i32, i32* %47, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %47, align 4
  br label %79

63:                                               ; preds = %41
  call void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.17"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #10
  br label %79

79:                                               ; preds = %54, %63, %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #10
  %80 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #10
  %81 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU13DecimalSymbolE19UNumberFormatSymbol(%"class.blink::LocaleICU"* %0, i32 18)
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %82, align 8
  %83 = load i32, i32* %47, align 4
  %84 = load i32, i32* %46, align 8
  %85 = icmp eq i32 %83, %84
  br i1 %85, label %95, label %86, !prof !3

86:                                               ; preds = %79
  %87 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %88 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::String"*, %"class.WTF::String"** %88, align 8
  %90 = zext i32 %83 to i64
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %89, i64 %90
  %92 = bitcast %"class.WTF::String"* %91 to i64*
  store i64 %87, i64* %92, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %93 = load i32, i32* %47, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %47, align 4
  br label %111

95:                                               ; preds = %79
  call void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.17"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #10
  br label %111

111:                                              ; preds = %86, %95, %107, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #10
  %112 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #10
  %113 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU13DecimalSymbolE19UNumberFormatSymbol(%"class.blink::LocaleICU"* %0, i32 19)
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %114, align 8
  %115 = load i32, i32* %47, align 4
  %116 = load i32, i32* %46, align 8
  %117 = icmp eq i32 %115, %116
  br i1 %117, label %127, label %118, !prof !3

118:                                              ; preds = %111
  %119 = ptrtoint %"class.WTF::StringImpl"* %113 to i64
  %120 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::String"*, %"class.WTF::String"** %120, align 8
  %122 = zext i32 %115 to i64
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 %122
  %124 = bitcast %"class.WTF::String"* %123 to i64*
  store i64 %119, i64* %124, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %114, align 8
  %125 = load i32, i32* %47, align 4
  %126 = add i32 %125, 1
  store i32 %126, i32* %47, align 4
  br label %143

127:                                              ; preds = %111
  call void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.17"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %6) #10
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #10
  br label %143

143:                                              ; preds = %118, %127, %139, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #10
  %144 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #10
  %145 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU13DecimalSymbolE19UNumberFormatSymbol(%"class.blink::LocaleICU"* %0, i32 20)
  %146 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %145, %"class.WTF::StringImpl"** %146, align 8
  %147 = load i32, i32* %47, align 4
  %148 = load i32, i32* %46, align 8
  %149 = icmp eq i32 %147, %148
  br i1 %149, label %159, label %150, !prof !3

150:                                              ; preds = %143
  %151 = ptrtoint %"class.WTF::StringImpl"* %145 to i64
  %152 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.WTF::String"*, %"class.WTF::String"** %152, align 8
  %154 = zext i32 %147 to i64
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %153, i64 %154
  %156 = bitcast %"class.WTF::String"* %155 to i64*
  store i64 %151, i64* %156, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %146, align 8
  %157 = load i32, i32* %47, align 4
  %158 = add i32 %157, 1
  store i32 %158, i32* %47, align 4
  br label %175

159:                                              ; preds = %143
  call void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.17"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %7) #10
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %159
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #10
  br label %175

175:                                              ; preds = %150, %159, %171, %174
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #10
  %176 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #10
  %177 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU13DecimalSymbolE19UNumberFormatSymbol(%"class.blink::LocaleICU"* %0, i32 21)
  %178 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %177, %"class.WTF::StringImpl"** %178, align 8
  %179 = load i32, i32* %47, align 4
  %180 = load i32, i32* %46, align 8
  %181 = icmp eq i32 %179, %180
  br i1 %181, label %191, label %182, !prof !3

182:                                              ; preds = %175
  %183 = ptrtoint %"class.WTF::StringImpl"* %177 to i64
  %184 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 0
  %185 = load %"class.WTF::String"*, %"class.WTF::String"** %184, align 8
  %186 = zext i32 %179 to i64
  %187 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %185, i64 %186
  %188 = bitcast %"class.WTF::String"* %187 to i64*
  store i64 %183, i64* %188, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %178, align 8
  %189 = load i32, i32* %47, align 4
  %190 = add i32 %189, 1
  store i32 %190, i32* %47, align 4
  br label %207

191:                                              ; preds = %175
  call void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.17"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %8) #10
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #10
  br label %207

207:                                              ; preds = %182, %191, %203, %206
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #10
  %208 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #10
  %209 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU13DecimalSymbolE19UNumberFormatSymbol(%"class.blink::LocaleICU"* %0, i32 22)
  %210 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %209, %"class.WTF::StringImpl"** %210, align 8
  %211 = load i32, i32* %47, align 4
  %212 = load i32, i32* %46, align 8
  %213 = icmp eq i32 %211, %212
  br i1 %213, label %223, label %214, !prof !3

214:                                              ; preds = %207
  %215 = ptrtoint %"class.WTF::StringImpl"* %209 to i64
  %216 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 0
  %217 = load %"class.WTF::String"*, %"class.WTF::String"** %216, align 8
  %218 = zext i32 %211 to i64
  %219 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %217, i64 %218
  %220 = bitcast %"class.WTF::String"* %219 to i64*
  store i64 %215, i64* %220, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %210, align 8
  %221 = load i32, i32* %47, align 4
  %222 = add i32 %221, 1
  store i32 %222, i32* %47, align 4
  br label %239

223:                                              ; preds = %207
  call void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.17"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %9) #10
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #10
  br label %239

239:                                              ; preds = %214, %223, %235, %238
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #10
  %240 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %240) #10
  %241 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU13DecimalSymbolE19UNumberFormatSymbol(%"class.blink::LocaleICU"* %0, i32 23)
  %242 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %241, %"class.WTF::StringImpl"** %242, align 8
  %243 = load i32, i32* %47, align 4
  %244 = load i32, i32* %46, align 8
  %245 = icmp eq i32 %243, %244
  br i1 %245, label %255, label %246, !prof !3

246:                                              ; preds = %239
  %247 = ptrtoint %"class.WTF::StringImpl"* %241 to i64
  %248 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 0
  %249 = load %"class.WTF::String"*, %"class.WTF::String"** %248, align 8
  %250 = zext i32 %243 to i64
  %251 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %249, i64 %250
  %252 = bitcast %"class.WTF::String"* %251 to i64*
  store i64 %247, i64* %252, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %242, align 8
  %253 = load i32, i32* %47, align 4
  %254 = add i32 %253, 1
  store i32 %254, i32* %47, align 4
  br label %271

255:                                              ; preds = %239
  call void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.17"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %10) #10
  %256 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %242, align 8
  %257 = icmp eq %"class.WTF::StringImpl"* %256, null
  br i1 %257, label %271, label %258

258:                                              ; preds = %255
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %256, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = load atomic i32, i32* %259 monotonic, align 4
  %261 = and i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %256, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  br i1 %262, label %265, label %267

265:                                              ; preds = %258
  %266 = add i32 %264, -1
  store i32 %266, i32* %263, align 4
  br label %267

267:                                              ; preds = %265, %258
  %268 = phi i32 [ %266, %265 ], [ %264, %258 ]
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %267
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %256) #10
  br label %271

271:                                              ; preds = %246, %255, %267, %270
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %240) #10
  %272 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %272) #10
  %273 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU13DecimalSymbolE19UNumberFormatSymbol(%"class.blink::LocaleICU"* %0, i32 24)
  %274 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %273, %"class.WTF::StringImpl"** %274, align 8
  %275 = load i32, i32* %47, align 4
  %276 = load i32, i32* %46, align 8
  %277 = icmp eq i32 %275, %276
  br i1 %277, label %287, label %278, !prof !3

278:                                              ; preds = %271
  %279 = ptrtoint %"class.WTF::StringImpl"* %273 to i64
  %280 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 0
  %281 = load %"class.WTF::String"*, %"class.WTF::String"** %280, align 8
  %282 = zext i32 %275 to i64
  %283 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %281, i64 %282
  %284 = bitcast %"class.WTF::String"* %283 to i64*
  store i64 %279, i64* %284, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %274, align 8
  %285 = load i32, i32* %47, align 4
  %286 = add i32 %285, 1
  store i32 %286, i32* %47, align 4
  br label %303

287:                                              ; preds = %271
  call void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.17"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %11) #10
  %288 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %274, align 8
  %289 = icmp eq %"class.WTF::StringImpl"* %288, null
  br i1 %289, label %303, label %290

290:                                              ; preds = %287
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load atomic i32, i32* %291 monotonic, align 4
  %293 = and i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 0
  %296 = load i32, i32* %295, align 4
  br i1 %294, label %297, label %299

297:                                              ; preds = %290
  %298 = add i32 %296, -1
  store i32 %298, i32* %295, align 4
  br label %299

299:                                              ; preds = %297, %290
  %300 = phi i32 [ %298, %297 ], [ %296, %290 ]
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %303

302:                                              ; preds = %299
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %288) #10
  br label %303

303:                                              ; preds = %278, %287, %299, %302
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %272) #10
  %304 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %304) #10
  %305 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU13DecimalSymbolE19UNumberFormatSymbol(%"class.blink::LocaleICU"* %0, i32 25)
  %306 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %305, %"class.WTF::StringImpl"** %306, align 8
  %307 = load i32, i32* %47, align 4
  %308 = load i32, i32* %46, align 8
  %309 = icmp eq i32 %307, %308
  br i1 %309, label %319, label %310, !prof !3

310:                                              ; preds = %303
  %311 = ptrtoint %"class.WTF::StringImpl"* %305 to i64
  %312 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 0
  %313 = load %"class.WTF::String"*, %"class.WTF::String"** %312, align 8
  %314 = zext i32 %307 to i64
  %315 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %313, i64 %314
  %316 = bitcast %"class.WTF::String"* %315 to i64*
  store i64 %311, i64* %316, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %306, align 8
  %317 = load i32, i32* %47, align 4
  %318 = add i32 %317, 1
  store i32 %318, i32* %47, align 4
  br label %335

319:                                              ; preds = %303
  call void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.17"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %12) #10
  %320 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  %321 = icmp eq %"class.WTF::StringImpl"* %320, null
  br i1 %321, label %335, label %322

322:                                              ; preds = %319
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = and i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 0
  %328 = load i32, i32* %327, align 4
  br i1 %326, label %329, label %331

329:                                              ; preds = %322
  %330 = add i32 %328, -1
  store i32 %330, i32* %327, align 4
  br label %331

331:                                              ; preds = %329, %322
  %332 = phi i32 [ %330, %329 ], [ %328, %322 ]
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %331
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %320) #10
  br label %335

335:                                              ; preds = %310, %319, %331, %334
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304) #10
  %336 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %336) #10
  %337 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU13DecimalSymbolE19UNumberFormatSymbol(%"class.blink::LocaleICU"* %0, i32 26)
  %338 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %337, %"class.WTF::StringImpl"** %338, align 8
  %339 = load i32, i32* %47, align 4
  %340 = load i32, i32* %46, align 8
  %341 = icmp eq i32 %339, %340
  br i1 %341, label %351, label %342, !prof !3

342:                                              ; preds = %335
  %343 = ptrtoint %"class.WTF::StringImpl"* %337 to i64
  %344 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 0
  %345 = load %"class.WTF::String"*, %"class.WTF::String"** %344, align 8
  %346 = zext i32 %339 to i64
  %347 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %345, i64 %346
  %348 = bitcast %"class.WTF::String"* %347 to i64*
  store i64 %343, i64* %348, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %338, align 8
  %349 = load i32, i32* %47, align 4
  %350 = add i32 %349, 1
  store i32 %350, i32* %47, align 4
  br label %367

351:                                              ; preds = %335
  call void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.17"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %13) #10
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %338, align 8
  %353 = icmp eq %"class.WTF::StringImpl"* %352, null
  br i1 %353, label %367, label %354

354:                                              ; preds = %351
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = and i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 0
  %360 = load i32, i32* %359, align 4
  br i1 %358, label %361, label %363

361:                                              ; preds = %354
  %362 = add i32 %360, -1
  store i32 %362, i32* %359, align 4
  br label %363

363:                                              ; preds = %361, %354
  %364 = phi i32 [ %362, %361 ], [ %360, %354 ]
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %367

366:                                              ; preds = %363
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %352) #10
  br label %367

367:                                              ; preds = %342, %351, %363, %366
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %336) #10
  %368 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %368) #10
  %369 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU13DecimalSymbolE19UNumberFormatSymbol(%"class.blink::LocaleICU"* %0, i32 0)
  %370 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %369, %"class.WTF::StringImpl"** %370, align 8
  %371 = load i32, i32* %47, align 4
  %372 = load i32, i32* %46, align 8
  %373 = icmp eq i32 %371, %372
  br i1 %373, label %383, label %374, !prof !3

374:                                              ; preds = %367
  %375 = ptrtoint %"class.WTF::StringImpl"* %369 to i64
  %376 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 0
  %377 = load %"class.WTF::String"*, %"class.WTF::String"** %376, align 8
  %378 = zext i32 %371 to i64
  %379 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %377, i64 %378
  %380 = bitcast %"class.WTF::String"* %379 to i64*
  store i64 %375, i64* %380, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %370, align 8
  %381 = load i32, i32* %47, align 4
  %382 = add i32 %381, 1
  store i32 %382, i32* %47, align 4
  br label %399

383:                                              ; preds = %367
  call void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.17"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %14) #10
  %384 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %370, align 8
  %385 = icmp eq %"class.WTF::StringImpl"* %384, null
  br i1 %385, label %399, label %386

386:                                              ; preds = %383
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = load atomic i32, i32* %387 monotonic, align 4
  %389 = and i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 0, i32 0
  %392 = load i32, i32* %391, align 4
  br i1 %390, label %393, label %395

393:                                              ; preds = %386
  %394 = add i32 %392, -1
  store i32 %394, i32* %391, align 4
  br label %395

395:                                              ; preds = %393, %386
  %396 = phi i32 [ %394, %393 ], [ %392, %386 ]
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %399

398:                                              ; preds = %395
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %384) #10
  br label %399

399:                                              ; preds = %374, %383, %395, %398
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %368) #10
  %400 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %400) #10
  %401 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU13DecimalSymbolE19UNumberFormatSymbol(%"class.blink::LocaleICU"* %0, i32 1)
  %402 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %401, %"class.WTF::StringImpl"** %402, align 8
  %403 = load i32, i32* %47, align 4
  %404 = load i32, i32* %46, align 8
  %405 = icmp eq i32 %403, %404
  br i1 %405, label %415, label %406, !prof !3

406:                                              ; preds = %399
  %407 = ptrtoint %"class.WTF::StringImpl"* %401 to i64
  %408 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 0
  %409 = load %"class.WTF::String"*, %"class.WTF::String"** %408, align 8
  %410 = zext i32 %403 to i64
  %411 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %409, i64 %410
  %412 = bitcast %"class.WTF::String"* %411 to i64*
  store i64 %407, i64* %412, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %402, align 8
  %413 = load i32, i32* %47, align 4
  %414 = add i32 %413, 1
  store i32 %414, i32* %47, align 4
  br label %431

415:                                              ; preds = %399
  call void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.17"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %15) #10
  %416 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %402, align 8
  %417 = icmp eq %"class.WTF::StringImpl"* %416, null
  br i1 %417, label %431, label %418

418:                                              ; preds = %415
  %419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %416, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %420 = load atomic i32, i32* %419 monotonic, align 4
  %421 = and i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %416, i64 0, i32 0
  %424 = load i32, i32* %423, align 4
  br i1 %422, label %425, label %427

425:                                              ; preds = %418
  %426 = add i32 %424, -1
  store i32 %426, i32* %423, align 4
  br label %427

427:                                              ; preds = %425, %418
  %428 = phi i32 [ %426, %425 ], [ %424, %418 ]
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %430, label %431

430:                                              ; preds = %427
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %416) #10
  br label %431

431:                                              ; preds = %406, %415, %427, %430
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %400) #10
  %432 = bitcast %"class.blink::LocaleICU"* %0 to %"class.blink::Locale"*
  %433 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %433) #10
  %434 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU20DecimalTextAttributeE26UNumberFormatTextAttribute(%"class.blink::LocaleICU"* %0, i32 0)
  %435 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %434, %"class.WTF::StringImpl"** %435, align 8
  %436 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %436) #10
  %437 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU20DecimalTextAttributeE26UNumberFormatTextAttribute(%"class.blink::LocaleICU"* %0, i32 1)
  %438 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %437, %"class.WTF::StringImpl"** %438, align 8
  %439 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %439) #10
  %440 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU20DecimalTextAttributeE26UNumberFormatTextAttribute(%"class.blink::LocaleICU"* %0, i32 2)
  %441 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %440, %"class.WTF::StringImpl"** %441, align 8
  %442 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %442) #10
  %443 = call %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU20DecimalTextAttributeE26UNumberFormatTextAttribute(%"class.blink::LocaleICU"* %0, i32 3)
  %444 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %443, %"class.WTF::StringImpl"** %444, align 8
  call void @_ZN5blink6Locale13SetLocaleDataERKN3WTF6VectorINS1_6StringELj12ENS1_18PartitionAllocatorEEERKS3_S9_S9_S9_(%"class.blink::Locale"* %432, %"class.WTF::Vector.17"* nonnull dereferenceable(112) %3, %"class.WTF::String"* nonnull dereferenceable(8) %16, %"class.WTF::String"* nonnull dereferenceable(8) %17, %"class.WTF::String"* nonnull dereferenceable(8) %18, %"class.WTF::String"* nonnull dereferenceable(8) %19) #10
  %445 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %444, align 8
  %446 = icmp eq %"class.WTF::StringImpl"* %445, null
  br i1 %446, label %460, label %447

447:                                              ; preds = %431
  %448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %445, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %449 = load atomic i32, i32* %448 monotonic, align 4
  %450 = and i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %445, i64 0, i32 0
  %453 = load i32, i32* %452, align 4
  br i1 %451, label %454, label %456

454:                                              ; preds = %447
  %455 = add i32 %453, -1
  store i32 %455, i32* %452, align 4
  br label %456

456:                                              ; preds = %454, %447
  %457 = phi i32 [ %455, %454 ], [ %453, %447 ]
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %460

459:                                              ; preds = %456
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %445) #10
  br label %460

460:                                              ; preds = %431, %456, %459
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %442) #10
  %461 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %441, align 8
  %462 = icmp eq %"class.WTF::StringImpl"* %461, null
  br i1 %462, label %476, label %463

463:                                              ; preds = %460
  %464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %461, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %465 = load atomic i32, i32* %464 monotonic, align 4
  %466 = and i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %461, i64 0, i32 0
  %469 = load i32, i32* %468, align 4
  br i1 %467, label %470, label %472

470:                                              ; preds = %463
  %471 = add i32 %469, -1
  store i32 %471, i32* %468, align 4
  br label %472

472:                                              ; preds = %470, %463
  %473 = phi i32 [ %471, %470 ], [ %469, %463 ]
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %476

475:                                              ; preds = %472
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %461) #10
  br label %476

476:                                              ; preds = %460, %472, %475
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %439) #10
  %477 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %438, align 8
  %478 = icmp eq %"class.WTF::StringImpl"* %477, null
  br i1 %478, label %492, label %479

479:                                              ; preds = %476
  %480 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %477, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %481 = load atomic i32, i32* %480 monotonic, align 4
  %482 = and i32 %481, 2
  %483 = icmp eq i32 %482, 0
  %484 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %477, i64 0, i32 0
  %485 = load i32, i32* %484, align 4
  br i1 %483, label %486, label %488

486:                                              ; preds = %479
  %487 = add i32 %485, -1
  store i32 %487, i32* %484, align 4
  br label %488

488:                                              ; preds = %486, %479
  %489 = phi i32 [ %487, %486 ], [ %485, %479 ]
  %490 = icmp eq i32 %489, 0
  br i1 %490, label %491, label %492

491:                                              ; preds = %488
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %477) #10
  br label %492

492:                                              ; preds = %476, %488, %491
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %436) #10
  %493 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %435, align 8
  %494 = icmp eq %"class.WTF::StringImpl"* %493, null
  br i1 %494, label %508, label %495

495:                                              ; preds = %492
  %496 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %493, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %497 = load atomic i32, i32* %496 monotonic, align 4
  %498 = and i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %493, i64 0, i32 0
  %501 = load i32, i32* %500, align 4
  br i1 %499, label %502, label %504

502:                                              ; preds = %495
  %503 = add i32 %501, -1
  store i32 %503, i32* %500, align 4
  br label %504

504:                                              ; preds = %502, %495
  %505 = phi i32 [ %503, %502 ], [ %501, %495 ]
  %506 = icmp eq i32 %505, 0
  br i1 %506, label %507, label %508

507:                                              ; preds = %504
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %493) #10
  br label %508

508:                                              ; preds = %492, %504, %507
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %433) #10
  %509 = load i32, i32* %47, align 4
  %510 = icmp eq i32 %509, 0
  %511 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 0
  br i1 %510, label %538, label %512, !prof !3

512:                                              ; preds = %508
  %513 = load %"class.WTF::String"*, %"class.WTF::String"** %511, align 8
  %514 = zext i32 %509 to i64
  %515 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %513, i64 %514
  br label %516

516:                                              ; preds = %534, %512
  %517 = phi %"class.WTF::String"* [ %535, %534 ], [ %513, %512 ]
  %518 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %517, i64 0, i32 0, i32 0
  %519 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %518, align 8
  %520 = icmp eq %"class.WTF::StringImpl"* %519, null
  br i1 %520, label %534, label %521

521:                                              ; preds = %516
  %522 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %519, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %523 = load atomic i32, i32* %522 monotonic, align 4
  %524 = and i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %519, i64 0, i32 0
  %527 = load i32, i32* %526, align 4
  br i1 %525, label %528, label %530

528:                                              ; preds = %521
  %529 = add i32 %527, -1
  store i32 %529, i32* %526, align 4
  br label %530

530:                                              ; preds = %528, %521
  %531 = phi i32 [ %529, %528 ], [ %527, %521 ]
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %533, label %534

533:                                              ; preds = %530
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %519) #10
  br label %534

534:                                              ; preds = %533, %530, %516
  %535 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %517, i64 1
  %536 = icmp eq %"class.WTF::String"* %535, %515
  br i1 %536, label %537, label %516

537:                                              ; preds = %534
  store i32 0, i32* %47, align 4
  br label %538

538:                                              ; preds = %537, %508
  %539 = load %"class.WTF::String"*, %"class.WTF::String"** %511, align 8
  %540 = bitcast i8* %44 to %"class.WTF::String"*
  %541 = icmp eq %"class.WTF::String"* %539, %540
  br i1 %541, label %544, label %542, !prof !2

542:                                              ; preds = %538
  %543 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferINS_6StringELj12ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.18"* nonnull %543, %"class.WTF::String"* %539) #10
  br label %544

544:                                              ; preds = %538, %542
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %42) #10
  br label %545

545:                                              ; preds = %35, %544
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #10
  br label %546

546:                                              ; preds = %1, %545
  ret void
}

declare i8** @unum_open_69(i32, i16*, i32, i8*, %struct.UParseError*, i32*) local_unnamed_addr #2

declare void @_ZN5blink6Locale13SetLocaleDataERKN3WTF6VectorINS1_6StringELj12ENS1_18PartitionAllocatorEEERKS3_S9_S9_S9_(%"class.blink::Locale"*, %"class.WTF::Vector.17"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9LocaleICU25InitializeShortDateFormatEv(%"class.blink::LocaleICU"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 1, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 4
  %8 = load i8**, i8*** %7, align 8
  br label %25

9:                                                ; preds = %1
  %10 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #10
  store i32 0, i32* %2, align 4
  %11 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  br label %21

19:                                               ; preds = %9
  %20 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  br label %21

21:                                               ; preds = %16, %19
  %22 = phi i8* [ %18, %16 ], [ %20, %19 ]
  %23 = call i8** @udat_open_69(i32 -1, i32 3, i8* %22, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZZNK5blink9LocaleICU14OpenDateFormatE16UDateFormatStyleS1_E12kGmtTimezone, i64 0, i64 0), i32 3, i16* null, i32 -1, i32* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #10
  %24 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 4
  store i8** %23, i8*** %24, align 8
  store i8 1, i8* %3, align 1
  br label %25

25:                                               ; preds = %21, %6
  %26 = phi i8** [ %8, %6 ], [ %23, %21 ]
  %27 = icmp ne i8** %26, null
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i8** @_ZNK5blink9LocaleICU14OpenDateFormatE16UDateFormatStyleS1_(%"class.blink::LocaleICU"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 0, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  br label %16

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i8* [ %13, %11 ], [ %15, %14 ]
  %18 = call i8** @udat_open_69(i32 %1, i32 %2, i8* %17, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZZNK5blink9LocaleICU14OpenDateFormatE16UDateFormatStyleS1_E12kGmtTimezone, i64 0, i64 0), i32 3, i16* null, i32 -1, i32* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  ret i8** %18
}

declare i8** @udat_open_69(i32, i32, i8*, i16*, i32, i16*, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8** @_ZNK5blink9LocaleICU38OpenDateFormatForStandAloneMonthLabelsEb(%"class.blink::LocaleICU"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #10
  store i32 0, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  br label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i8* [ %12, %10 ], [ %14, %13 ]
  %17 = select i1 %1, i32 3, i32 4
  %18 = call i8** @udat_open_69(i32 -2, i32 -2, i8* %16, i16* null, i32 -1, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZZNK5blink9LocaleICU38OpenDateFormatForStandAloneMonthLabelsEbE13kMonthPattern, i64 0, i64 0), i32 %17, i32* nonnull %3) #10
  call void @udat_setContext_69(i8** %18, i32 260, i32* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #10
  ret i8** %18
}

declare void @udat_setContext_69(i8**, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::Vector"* @_ZN5blink9LocaleICU17CreateLabelVectorEPKPv21UDateFormatSymbolTypeii(%"class.blink::LocaleICU"* nocapture readnone, i8**, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i16*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.WTF::String", align 8
  %9 = icmp eq i8** %1, null
  br i1 %9, label %209, label %10

10:                                               ; preds = %5
  %11 = tail call i32 @udat_countSymbols_69(i8** nonnull %1, i32 %2) #10
  %12 = add nsw i32 %4, %3
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %209

14:                                               ; preds = %10
  %15 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %16 = bitcast i8* %15 to %"class.WTF::Vector"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #10
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds i8, i8* %15, i64 8
  %19 = bitcast i8* %18 to i32*
  %20 = icmp eq i32 %4, 0
  br i1 %20, label %209, label %21, !prof !3

21:                                               ; preds = %14
  %22 = zext i32 %4 to i64
  %23 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %22) #10
  %24 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %25 = ptrtoint i8* %24 to i64
  %26 = bitcast i8* %15 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = lshr i64 %23, 3
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %19, align 8
  %29 = or i32 %2, 1
  %30 = icmp eq i32 %29, 11
  %31 = icmp sgt i32 %4, 0
  br i1 %31, label %32, label %209

32:                                               ; preds = %21
  %33 = bitcast i32* %7 to i8*
  %34 = bitcast i16** %6 to i8*
  %35 = bitcast %"class.WTF::String"* %8 to i8*
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds i8, i8* %15, i64 12
  %38 = bitcast i8* %37 to i32*
  %39 = bitcast i8* %15 to %"class.WTF::String"**
  br label %42

40:                                               ; preds = %167
  %41 = icmp eq i32 %169, %4
  br i1 %41, label %209, label %42

42:                                               ; preds = %40, %32
  %43 = phi i32 [ 0, %32 ], [ %169, %40 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #10
  store i32 0, i32* %7, align 4
  br i1 %30, label %44, label %49

44:                                               ; preds = %42
  %45 = sitofp i32 %43 to double
  %46 = fmul double %45, 2.592000e+09
  %47 = fadd double %46, 1.296000e+09
  %48 = call i32 @udat_format_69(i8** nonnull %1, double %47, i16* null, i32 0, %struct.UFieldPosition* null, i32* nonnull %7) #10
  br label %52

49:                                               ; preds = %42
  %50 = add nsw i32 %43, %3
  %51 = call i32 @udat_getSymbols_69(i8** nonnull %1, i32 %2, i32 %50, i16* null, i32 0, i32* nonnull %7) #10
  br label %52

52:                                               ; preds = %49, %44
  %53 = phi i32 [ %48, %44 ], [ %51, %49 ]
  %54 = load i32, i32* %7, align 4
  %55 = icmp eq i32 %54, 15
  br i1 %55, label %57, label %56

56:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #10
  br label %170

57:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %58 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %53, i16** nonnull dereferenceable(8) %6) #10
  %59 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  store i32 0, i32* %7, align 4
  br i1 %30, label %60, label %75

60:                                               ; preds = %57
  %61 = sitofp i32 %43 to double
  %62 = fmul double %61, 2.592000e+09
  %63 = fadd double %62, 1.296000e+09
  %64 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 1
  %71 = bitcast %"class.WTF::StringImpl"* %70 to i16*
  br label %72

72:                                               ; preds = %60, %65, %69
  %73 = phi i16* [ %71, %69 ], [ null, %65 ], [ null, %60 ]
  %74 = call i32 @udat_format_69(i8** nonnull %1, double %63, i16* %73, i32 %53, %struct.UFieldPosition* null, i32* nonnull %7) #10
  br label %88

75:                                               ; preds = %57
  %76 = add nsw i32 %43, %3
  %77 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %77, label %85, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 1
  %84 = bitcast %"class.WTF::StringImpl"* %83 to i16*
  br label %85

85:                                               ; preds = %75, %78, %82
  %86 = phi i16* [ %84, %82 ], [ null, %78 ], [ null, %75 ]
  %87 = call i32 @udat_getSymbols_69(i8** nonnull %1, i32 %2, i32 %76, i16* %86, i32 %53, i32* nonnull %7) #10
  br label %88

88:                                               ; preds = %85, %72
  %89 = load i32, i32* %7, align 4
  %90 = icmp slt i32 %89, 1
  br i1 %90, label %91, label %150

91:                                               ; preds = %88
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %92 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %92, label %97, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %118

97:                                               ; preds = %93, %91
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %99 = ptrtoint %"class.WTF::StringImpl"* %98 to i64
  %100 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %100, label %118, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = zext i32 %108 to i33
  %110 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #10
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !3

115:                                              ; preds = %106
  call void @llvm.trap() #10
  unreachable

116:                                              ; preds = %106
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %107, align 4
  br label %118

118:                                              ; preds = %93, %97, %101, %116
  %119 = phi i64 [ %59, %97 ], [ %59, %116 ], [ %59, %101 ], [ 0, %93 ]
  %120 = phi i64 [ %99, %97 ], [ %99, %116 ], [ %99, %101 ], [ %59, %93 ]
  %121 = inttoptr i64 %119 to %"class.WTF::StringImpl"*
  %122 = inttoptr i64 %120 to %"class.WTF::StringImpl"*
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %36, align 8
  %123 = load i32, i32* %38, align 4
  %124 = load i32, i32* %19, align 8
  %125 = icmp eq i32 %123, %124
  br i1 %125, label %133, label %126, !prof !3

126:                                              ; preds = %118
  %127 = load %"class.WTF::String"*, %"class.WTF::String"** %39, align 8
  %128 = zext i32 %123 to i64
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 %128
  %130 = bitcast %"class.WTF::String"* %129 to i64*
  store i64 %120, i64* %130, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %36, align 8
  %131 = load i32, i32* %38, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %38, align 4
  br label %149

133:                                              ; preds = %118
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector"* %16, %"class.WTF::String"* nonnull dereferenceable(8) %8) #10
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #10
  br label %149

149:                                              ; preds = %126, %133, %145, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  br label %150

150:                                              ; preds = %88, %149
  %151 = phi %"class.WTF::StringImpl"* [ %121, %149 ], [ %58, %88 ]
  %152 = phi i32 [ 0, %149 ], [ 1, %88 ]
  %153 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #10
  br label %167

167:                                              ; preds = %166, %163, %150
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #10
  %168 = icmp eq i32 %152, 0
  %169 = add nuw nsw i32 %43, 1
  br i1 %168, label %40, label %170

170:                                              ; preds = %167, %56
  %171 = icmp eq i8* %15, null
  br i1 %171, label %209, label %172

172:                                              ; preds = %170
  %173 = load %"class.WTF::String"*, %"class.WTF::String"** %39, align 8
  %174 = icmp eq %"class.WTF::String"* %173, null
  br i1 %174, label %208, label %175, !prof !2

175:                                              ; preds = %172
  %176 = bitcast %"class.WTF::String"* %173 to i8*
  %177 = load i32, i32* %38, align 4
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %206, label %179, !prof !3

179:                                              ; preds = %175
  %180 = zext i32 %177 to i64
  %181 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %173, i64 %180
  br label %182

182:                                              ; preds = %200, %179
  %183 = phi %"class.WTF::String"* [ %201, %200 ], [ %173, %179 ]
  %184 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %183, i64 0, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %200, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  br i1 %191, label %194, label %196

194:                                              ; preds = %187
  %195 = add i32 %193, -1
  store i32 %195, i32* %192, align 4
  br label %196

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %195, %194 ], [ %193, %187 ]
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %185) #10
  br label %200

200:                                              ; preds = %199, %196, %182
  %201 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %183, i64 1
  %202 = icmp eq %"class.WTF::String"* %201, %181
  br i1 %202, label %203, label %182

203:                                              ; preds = %200
  store i32 0, i32* %38, align 4
  %204 = bitcast i8* %15 to i8**
  %205 = load i8*, i8** %204, align 8
  br label %206

206:                                              ; preds = %203, %175
  %207 = phi i8* [ %205, %203 ], [ %176, %175 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %207) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %39, align 8
  br label %208

208:                                              ; preds = %206, %172
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %15) #10
  br label %209

209:                                              ; preds = %40, %14, %21, %208, %170, %10, %5
  %210 = phi i64 [ 0, %5 ], [ 0, %10 ], [ 0, %170 ], [ 0, %208 ], [ %17, %21 ], [ %17, %14 ], [ %17, %40 ]
  %211 = inttoptr i64 %210 to %"class.WTF::Vector"*
  ret %"class.WTF::Vector"* %211
}

declare i32 @udat_countSymbols_69(i8**, i32) local_unnamed_addr #2

declare i32 @udat_format_69(i8**, double, i16*, i32, %struct.UFieldPosition*, i32*) local_unnamed_addr #2

declare i32 @udat_getSymbols_69(i8**, i32, i32, i16*, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LocaleICU18InitializeCalendarEv(%"class.blink::LocaleICU"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %6 = icmp eq %"class.WTF::Vector"* %5, null
  br i1 %6, label %7, label %181

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 4
  %13 = load i8**, i8*** %12, align 8
  br label %30

14:                                               ; preds = %7
  %15 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #10
  store i32 0, i32* %2, align 4
  %16 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  br label %26

24:                                               ; preds = %14
  %25 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  br label %26

26:                                               ; preds = %24, %21
  %27 = phi i8* [ %23, %21 ], [ %25, %24 ]
  %28 = call i8** @udat_open_69(i32 -1, i32 3, i8* %27, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZZNK5blink9LocaleICU14OpenDateFormatE16UDateFormatStyleS1_E12kGmtTimezone, i64 0, i64 0), i32 3, i16* null, i32 -1, i32* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #10
  %29 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 4
  store i8** %28, i8*** %29, align 8
  store i8 1, i8* %8, align 1
  br label %30

30:                                               ; preds = %11, %26
  %31 = phi i8** [ %13, %11 ], [ %28, %26 ]
  %32 = icmp eq i8** %31, null
  br i1 %32, label %33, label %80

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 9
  store i32 0, i32* %34, align 8
  %35 = call fastcc %"class.WTF::Vector"* @_ZN5blinkL32CreateFallbackWeekDayShortLabelsEv()
  %36 = ptrtoint %"class.WTF::Vector"* %35 to i64
  %37 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.8"* %3 to i64*
  store i64 %36, i64* %38, align 8
  %39 = icmp eq %"class.WTF::Vector"* %37, null
  br i1 %39, label %181, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %37, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::String"*, %"class.WTF::String"** %41, align 8
  %43 = icmp eq %"class.WTF::String"* %42, null
  br i1 %43, label %78, label %44, !prof !2

44:                                               ; preds = %40
  %45 = bitcast %"class.WTF::String"* %42 to i8*
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %37, i64 0, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %76, label %49, !prof !3

49:                                               ; preds = %44
  %50 = zext i32 %47 to i64
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %42, i64 %50
  br label %52

52:                                               ; preds = %70, %49
  %53 = phi %"class.WTF::String"* [ %71, %70 ], [ %42, %49 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #10
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 1
  %72 = icmp eq %"class.WTF::String"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %46, align 4
  %74 = bitcast %"class.WTF::Vector"* %37 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %73, %44
  %77 = phi i8* [ %75, %73 ], [ %45, %44 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %77) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %41, align 8
  br label %78

78:                                               ; preds = %76, %40
  %79 = bitcast %"class.WTF::Vector"* %37 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %79) #10
  br label %181

80:                                               ; preds = %30
  %81 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 4
  %82 = call i8** @udat_getCalendar_69(i8** nonnull %31) #10
  %83 = call i32 @ucal_getAttribute_69(i8** %82, i32 1) #10
  %84 = add nsw i32 %83, -1
  %85 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 9
  store i32 %84, i32* %85, align 8
  %86 = load i8**, i8*** %81, align 8
  %87 = call %"class.WTF::Vector"* @_ZN5blink9LocaleICU17CreateLabelVectorEPKPv21UDateFormatSymbolTypeii(%"class.blink::LocaleICU"* undef, i8** %86, i32 9, i32 1, i32 7)
  %88 = ptrtoint %"class.WTF::Vector"* %87 to i64
  %89 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.8"* %3 to i64*
  store i64 %88, i64* %90, align 8
  %91 = icmp eq %"class.WTF::Vector"* %89, null
  br i1 %91, label %133, label %92

92:                                               ; preds = %80
  %93 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %89, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::String"*, %"class.WTF::String"** %93, align 8
  %95 = icmp eq %"class.WTF::String"* %94, null
  br i1 %95, label %130, label %96, !prof !2

96:                                               ; preds = %92
  %97 = bitcast %"class.WTF::String"* %94 to i8*
  %98 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %89, i64 0, i32 0, i32 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %128, label %101, !prof !3

101:                                              ; preds = %96
  %102 = zext i32 %99 to i64
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %94, i64 %102
  br label %104

104:                                              ; preds = %122, %101
  %105 = phi %"class.WTF::String"* [ %123, %122 ], [ %94, %101 ]
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #10
  br label %122

122:                                              ; preds = %121, %118, %104
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %105, i64 1
  %124 = icmp eq %"class.WTF::String"* %123, %103
  br i1 %124, label %125, label %104

125:                                              ; preds = %122
  store i32 0, i32* %98, align 4
  %126 = bitcast %"class.WTF::Vector"* %89 to i8**
  %127 = load i8*, i8** %126, align 8
  br label %128

128:                                              ; preds = %125, %96
  %129 = phi i8* [ %127, %125 ], [ %97, %96 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %129) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %93, align 8
  br label %130

130:                                              ; preds = %128, %92
  %131 = bitcast %"class.WTF::Vector"* %89 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %131) #10
  %132 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  br label %133

133:                                              ; preds = %130, %80
  %134 = phi %"class.WTF::Vector"* [ %132, %130 ], [ %87, %80 ]
  %135 = icmp eq %"class.WTF::Vector"* %134, null
  br i1 %135, label %136, label %181

136:                                              ; preds = %133
  %137 = call fastcc %"class.WTF::Vector"* @_ZN5blinkL32CreateFallbackWeekDayShortLabelsEv()
  %138 = ptrtoint %"class.WTF::Vector"* %137 to i64
  %139 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  store i64 %138, i64* %90, align 8
  %140 = icmp eq %"class.WTF::Vector"* %139, null
  br i1 %140, label %181, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %139, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.WTF::String"*, %"class.WTF::String"** %142, align 8
  %144 = icmp eq %"class.WTF::String"* %143, null
  br i1 %144, label %179, label %145, !prof !2

145:                                              ; preds = %141
  %146 = bitcast %"class.WTF::String"* %143 to i8*
  %147 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %139, i64 0, i32 0, i32 0, i32 2
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %177, label %150, !prof !3

150:                                              ; preds = %145
  %151 = zext i32 %148 to i64
  %152 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %143, i64 %151
  br label %153

153:                                              ; preds = %171, %150
  %154 = phi %"class.WTF::String"* [ %172, %171 ], [ %143, %150 ]
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %154, i64 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #10
  br label %171

171:                                              ; preds = %170, %167, %153
  %172 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %154, i64 1
  %173 = icmp eq %"class.WTF::String"* %172, %152
  br i1 %173, label %174, label %153

174:                                              ; preds = %171
  store i32 0, i32* %147, align 4
  %175 = bitcast %"class.WTF::Vector"* %139 to i8**
  %176 = load i8*, i8** %175, align 8
  br label %177

177:                                              ; preds = %174, %145
  %178 = phi i8* [ %176, %174 ], [ %146, %145 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %178) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %142, align 8
  br label %179

179:                                              ; preds = %177, %141
  %180 = bitcast %"class.WTF::Vector"* %139 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %180) #10
  br label %181

181:                                              ; preds = %133, %1, %136, %179, %33, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::Vector"* @_ZN5blinkL32CreateFallbackWeekDayShortLabelsEv() unnamed_addr #0 {
  %1 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %2 = bitcast i8* %1 to %"class.WTF::Vector"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 16, i1 false) #10
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i32*
  %5 = tail call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 56) #10
  %6 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %7 = ptrtoint i8* %6 to i64
  %8 = bitcast i8* %1 to i64*
  store atomic i64 %7, i64* %8 monotonic, align 8
  %9 = lshr i64 %5, 3
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %4, align 8
  %11 = getelementptr inbounds i8, i8* %1, i64 12
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i8, i8* %1, i64 12
  %15 = bitcast i8* %14 to i32*
  %16 = icmp eq i32 %13, %10
  br i1 %16, label %23, label %17, !prof !3

17:                                               ; preds = %0
  %18 = bitcast i8* %6 to %"class.WTF::String"*
  %19 = zext i32 %13 to i64
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 %19
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3) #10
  %21 = load i32, i32* %15, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %15, align 4
  br label %25

23:                                               ; preds = %0
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA4_KcEEvOT_(%"class.WTF::Vector"* %2, [4 x i8]* nonnull dereferenceable(4) @.str.3) #10
  %24 = load i32, i32* %15, align 4
  br label %25

25:                                               ; preds = %17, %23
  %26 = phi i32 [ %22, %17 ], [ %24, %23 ]
  %27 = load i32, i32* %4, align 8
  %28 = icmp eq i32 %26, %27
  br i1 %28, label %36, label %29, !prof !3

29:                                               ; preds = %25
  %30 = bitcast i8* %1 to %"class.WTF::String"**
  %31 = load %"class.WTF::String"*, %"class.WTF::String"** %30, align 8
  %32 = zext i32 %26 to i64
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 %32
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3) #10
  %34 = load i32, i32* %15, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %15, align 4
  br label %38

36:                                               ; preds = %25
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA4_KcEEvOT_(%"class.WTF::Vector"* %2, [4 x i8]* nonnull dereferenceable(4) @.str.4) #10
  %37 = load i32, i32* %15, align 4
  br label %38

38:                                               ; preds = %29, %36
  %39 = phi i32 [ %35, %29 ], [ %37, %36 ]
  %40 = load i32, i32* %4, align 8
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %49, label %42, !prof !3

42:                                               ; preds = %38
  %43 = bitcast i8* %1 to %"class.WTF::String"**
  %44 = load %"class.WTF::String"*, %"class.WTF::String"** %43, align 8
  %45 = zext i32 %39 to i64
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 %45
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %46, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3) #10
  %47 = load i32, i32* %15, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %15, align 4
  br label %51

49:                                               ; preds = %38
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA4_KcEEvOT_(%"class.WTF::Vector"* %2, [4 x i8]* nonnull dereferenceable(4) @.str.5) #10
  %50 = load i32, i32* %15, align 4
  br label %51

51:                                               ; preds = %42, %49
  %52 = phi i32 [ %48, %42 ], [ %50, %49 ]
  %53 = load i32, i32* %4, align 8
  %54 = icmp eq i32 %52, %53
  br i1 %54, label %62, label %55, !prof !3

55:                                               ; preds = %51
  %56 = bitcast i8* %1 to %"class.WTF::String"**
  %57 = load %"class.WTF::String"*, %"class.WTF::String"** %56, align 8
  %58 = zext i32 %52 to i64
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 %58
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %59, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3) #10
  %60 = load i32, i32* %15, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %15, align 4
  br label %64

62:                                               ; preds = %51
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA4_KcEEvOT_(%"class.WTF::Vector"* %2, [4 x i8]* nonnull dereferenceable(4) @.str.6) #10
  %63 = load i32, i32* %15, align 4
  br label %64

64:                                               ; preds = %55, %62
  %65 = phi i32 [ %61, %55 ], [ %63, %62 ]
  %66 = load i32, i32* %4, align 8
  %67 = icmp eq i32 %65, %66
  br i1 %67, label %75, label %68, !prof !3

68:                                               ; preds = %64
  %69 = bitcast i8* %1 to %"class.WTF::String"**
  %70 = load %"class.WTF::String"*, %"class.WTF::String"** %69, align 8
  %71 = zext i32 %65 to i64
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 %71
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %72, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i64 3) #10
  %73 = load i32, i32* %15, align 4
  %74 = add i32 %73, 1
  store i32 %74, i32* %15, align 4
  br label %77

75:                                               ; preds = %64
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA4_KcEEvOT_(%"class.WTF::Vector"* %2, [4 x i8]* nonnull dereferenceable(4) @.str.7) #10
  %76 = load i32, i32* %15, align 4
  br label %77

77:                                               ; preds = %68, %75
  %78 = phi i32 [ %74, %68 ], [ %76, %75 ]
  %79 = load i32, i32* %4, align 8
  %80 = icmp eq i32 %78, %79
  br i1 %80, label %88, label %81, !prof !3

81:                                               ; preds = %77
  %82 = bitcast i8* %1 to %"class.WTF::String"**
  %83 = load %"class.WTF::String"*, %"class.WTF::String"** %82, align 8
  %84 = zext i32 %78 to i64
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 %84
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %85, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i64 3) #10
  %86 = load i32, i32* %15, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %15, align 4
  br label %90

88:                                               ; preds = %77
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA4_KcEEvOT_(%"class.WTF::Vector"* %2, [4 x i8]* nonnull dereferenceable(4) @.str.8) #10
  %89 = load i32, i32* %15, align 4
  br label %90

90:                                               ; preds = %81, %88
  %91 = phi i32 [ %87, %81 ], [ %89, %88 ]
  %92 = load i32, i32* %4, align 8
  %93 = icmp eq i32 %91, %92
  br i1 %93, label %101, label %94, !prof !3

94:                                               ; preds = %90
  %95 = bitcast i8* %1 to %"class.WTF::String"**
  %96 = load %"class.WTF::String"*, %"class.WTF::String"** %95, align 8
  %97 = zext i32 %91 to i64
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %97
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %98, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i64 3) #10
  %99 = load i32, i32* %15, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %15, align 4
  br label %102

101:                                              ; preds = %90
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA4_KcEEvOT_(%"class.WTF::Vector"* %2, [4 x i8]* nonnull dereferenceable(4) @.str.9) #10
  br label %102

102:                                              ; preds = %94, %101
  ret %"class.WTF::Vector"* %2
}

declare i32 @ucal_getAttribute_69(i8**, i32) local_unnamed_addr #2

declare i8** @udat_getCalendar_69(i8**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink9LocaleICU11MonthLabelsEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 11
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %6 = icmp eq %"class.WTF::Vector"* %5, null
  br i1 %6, label %7, label %164

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 4
  %13 = load i8**, i8*** %12, align 8
  br label %30

14:                                               ; preds = %7
  %15 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #10
  store i32 0, i32* %2, align 4
  %16 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  br label %26

24:                                               ; preds = %14
  %25 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  br label %26

26:                                               ; preds = %24, %21
  %27 = phi i8* [ %23, %21 ], [ %25, %24 ]
  %28 = call i8** @udat_open_69(i32 -1, i32 3, i8* %27, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZZNK5blink9LocaleICU14OpenDateFormatE16UDateFormatStyleS1_E12kGmtTimezone, i64 0, i64 0), i32 3, i16* null, i32 -1, i32* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #10
  %29 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 4
  store i8** %28, i8*** %29, align 8
  store i8 1, i8* %8, align 1
  br label %30

30:                                               ; preds = %11, %26
  %31 = phi i8** [ %13, %11 ], [ %28, %26 ]
  %32 = icmp eq i8** %31, null
  br i1 %32, label %83, label %33

33:                                               ; preds = %30
  %34 = call %"class.WTF::Vector"* @_ZN5blink9LocaleICU17CreateLabelVectorEPKPv21UDateFormatSymbolTypeii(%"class.blink::LocaleICU"* undef, i8** nonnull %31, i32 1, i32 0, i32 12)
  %35 = ptrtoint %"class.WTF::Vector"* %34 to i64
  %36 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.8"* %3 to i64*
  store i64 %35, i64* %37, align 8
  %38 = icmp eq %"class.WTF::Vector"* %36, null
  br i1 %38, label %80, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %36, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::String"*, %"class.WTF::String"** %40, align 8
  %42 = icmp eq %"class.WTF::String"* %41, null
  br i1 %42, label %77, label %43, !prof !2

43:                                               ; preds = %39
  %44 = bitcast %"class.WTF::String"* %41 to i8*
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %36, i64 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %75, label %48, !prof !3

48:                                               ; preds = %43
  %49 = zext i32 %46 to i64
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 %49
  br label %51

51:                                               ; preds = %69, %48
  %52 = phi %"class.WTF::String"* [ %70, %69 ], [ %41, %48 ]
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #10
  br label %69

69:                                               ; preds = %68, %65, %51
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 1
  %71 = icmp eq %"class.WTF::String"* %70, %50
  br i1 %71, label %72, label %51

72:                                               ; preds = %69
  store i32 0, i32* %45, align 4
  %73 = bitcast %"class.WTF::Vector"* %36 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %72, %43
  %76 = phi i8* [ %74, %72 ], [ %44, %43 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %40, align 8
  br label %77

77:                                               ; preds = %75, %39
  %78 = bitcast %"class.WTF::Vector"* %36 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %78) #10
  %79 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  br label %80

80:                                               ; preds = %77, %33
  %81 = phi %"class.WTF::Vector"* [ %79, %77 ], [ %34, %33 ]
  %82 = icmp eq %"class.WTF::Vector"* %81, null
  br i1 %82, label %83, label %164

83:                                               ; preds = %80, %30
  %84 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %85 = bitcast i8* %84 to %"class.WTF::Vector"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 16, i1 false) #10
  %86 = getelementptr inbounds i8, i8* %84, i64 8
  %87 = bitcast i8* %86 to i32*
  %88 = bitcast i8* %84 to %"class.WTF::String"**
  %89 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 96) #10
  %90 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %91 = ptrtoint i8* %90 to i64
  %92 = bitcast i8* %84 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = lshr i64 %89, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %87, align 8
  %95 = getelementptr inbounds i8, i8* %84, i64 12
  %96 = bitcast i8* %95 to i32*
  br label %97

97:                                               ; preds = %115, %83
  %98 = phi i32 [ %94, %83 ], [ %116, %115 ]
  %99 = phi i64 [ 0, %83 ], [ %113, %115 ]
  %100 = getelementptr inbounds [12 x i8*], [12 x i8*]* @_ZN3WTFL14kMonthFullNameE, i64 0, i64 %99
  %101 = load i32, i32* %96, align 4
  %102 = icmp eq i32 %101, %98
  br i1 %102, label %111, label %103, !prof !3

103:                                              ; preds = %97
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %88, align 8
  %105 = zext i32 %101 to i64
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %105
  %107 = load i8*, i8** %100, align 8
  %108 = call i64 @strlen(i8* nonnull %107) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %106, i8* %107, i64 %108) #10
  %109 = load i32, i32* %96, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %96, align 4
  br label %112

111:                                              ; preds = %97
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKPKcEEvOT_(%"class.WTF::Vector"* %85, i8** dereferenceable(8) %100) #10
  br label %112

112:                                              ; preds = %111, %103
  %113 = add nuw nsw i64 %99, 1
  %114 = icmp eq i64 %113, 12
  br i1 %114, label %117, label %115

115:                                              ; preds = %112
  %116 = load i32, i32* %87, align 8
  br label %97

117:                                              ; preds = %112
  %118 = ptrtoint i8* %84 to i64
  %119 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.8"* %3 to i64*
  store i64 %118, i64* %120, align 8
  %121 = icmp eq %"class.WTF::Vector"* %119, null
  %122 = bitcast i8* %84 to %"class.WTF::Vector"*
  br i1 %121, label %164, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %119, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.WTF::String"*, %"class.WTF::String"** %124, align 8
  %126 = icmp eq %"class.WTF::String"* %125, null
  br i1 %126, label %161, label %127, !prof !2

127:                                              ; preds = %123
  %128 = bitcast %"class.WTF::String"* %125 to i8*
  %129 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %119, i64 0, i32 0, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %159, label %132, !prof !3

132:                                              ; preds = %127
  %133 = zext i32 %130 to i64
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %125, i64 %133
  br label %135

135:                                              ; preds = %153, %132
  %136 = phi %"class.WTF::String"* [ %154, %153 ], [ %125, %132 ]
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %136, i64 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #10
  br label %153

153:                                              ; preds = %152, %149, %135
  %154 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %136, i64 1
  %155 = icmp eq %"class.WTF::String"* %154, %134
  br i1 %155, label %156, label %135

156:                                              ; preds = %153
  store i32 0, i32* %129, align 4
  %157 = bitcast %"class.WTF::Vector"* %119 to i8**
  %158 = load i8*, i8** %157, align 8
  br label %159

159:                                              ; preds = %156, %127
  %160 = phi i8* [ %158, %156 ], [ %128, %127 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %160) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %124, align 8
  br label %161

161:                                              ; preds = %159, %123
  %162 = bitcast %"class.WTF::Vector"* %119 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %162) #10
  %163 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  br label %164

164:                                              ; preds = %117, %161, %80, %1
  %165 = phi %"class.WTF::Vector"* [ %5, %1 ], [ %81, %80 ], [ %163, %161 ], [ %122, %117 ]
  ret %"class.WTF::Vector"* %165
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink9LocaleICU18WeekDayShortLabelsEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9LocaleICU18InitializeCalendarEv(%"class.blink::LocaleICU"* %0)
  %2 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %2, align 8
  ret %"class.WTF::Vector"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9LocaleICU14FirstDayOfWeekEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9LocaleICU18InitializeCalendarEv(%"class.blink::LocaleICU"* %0)
  %2 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9LocaleICU5IsRTLEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #10
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  br label %14

12:                                               ; preds = %1
  %13 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i8* [ %11, %9 ], [ %13, %12 ]
  %16 = call i32 @uloc_getCharacterOrientation_69(i8* %15, i32* nonnull %2) #10
  %17 = icmp eq i32 %16, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #10
  ret i1 %17
}

declare i32 @uloc_getCharacterOrientation_69(i8*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LocaleICU24InitializeDateTimeFormatEv(%"class.blink::LocaleICU"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 25
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %226

9:                                                ; preds = %1
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #10
  store i32 0, i32* %5, align 4
  %11 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  br label %21

19:                                               ; preds = %9
  %20 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  br label %21

21:                                               ; preds = %16, %19
  %22 = phi i8* [ %18, %16 ], [ %20, %19 ]
  %23 = call i8** @udat_open_69(i32 2, i32 -1, i8* %22, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZZNK5blink9LocaleICU14OpenDateFormatE16UDateFormatStyleS1_E12kGmtTimezone, i64 0, i64 0), i32 3, i16* null, i32 -1, i32* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #10
  %24 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 19
  store i8** %23, i8*** %24, align 8
  %25 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL20GetDateFormatPatternEPKPv(i8** %23)
  %26 = ptrtoint %"class.WTF::StringImpl"* %25 to i64
  %27 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 15
  %28 = bitcast %"class.WTF::String"* %27 to i64*
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  store i64 %26, i64* %28, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #10
  br label %45

45:                                               ; preds = %44, %41, %21
  %46 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #10
  store i32 0, i32* %4, align 4
  %47 = load i8, i8* %13, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  br label %54

52:                                               ; preds = %45
  %53 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  br label %54

54:                                               ; preds = %49, %52
  %55 = phi i8* [ %51, %49 ], [ %53, %52 ]
  %56 = call i8** @udat_open_69(i32 3, i32 -1, i8* %55, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZZNK5blink9LocaleICU14OpenDateFormatE16UDateFormatStyleS1_E12kGmtTimezone, i64 0, i64 0), i32 3, i16* null, i32 -1, i32* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #10
  %57 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 20
  store i8** %56, i8*** %57, align 8
  %58 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL20GetDateFormatPatternEPKPv(i8** %56)
  %59 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  %60 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 16
  %61 = bitcast %"class.WTF::String"* %60 to i64*
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  store i64 %59, i64* %61, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %54
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #10
  br label %78

78:                                               ; preds = %77, %74, %54
  %79 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #10
  store i32 0, i32* %3, align 4
  %80 = load i8, i8* %13, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  br label %87

85:                                               ; preds = %78
  %86 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  br label %87

87:                                               ; preds = %82, %85
  %88 = phi i8* [ %84, %82 ], [ %86, %85 ]
  %89 = call i8** @udat_open_69(i32 2, i32 3, i8* %88, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZZNK5blink9LocaleICU14OpenDateFormatE16UDateFormatStyleS1_E12kGmtTimezone, i64 0, i64 0), i32 3, i16* null, i32 -1, i32* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #10
  %90 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL20GetDateFormatPatternEPKPv(i8** %89)
  %91 = ptrtoint %"class.WTF::StringImpl"* %90 to i64
  %92 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 17
  %93 = bitcast %"class.WTF::String"* %92 to i64*
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  store i64 %91, i64* %93, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %87
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #10
  br label %110

110:                                              ; preds = %109, %106, %87
  call void @udat_close_69(i8** %89) #10
  %111 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111) #10
  store i32 0, i32* %2, align 4
  %112 = load i8, i8* %13, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  br label %119

117:                                              ; preds = %110
  %118 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  br label %119

119:                                              ; preds = %114, %117
  %120 = phi i8* [ %116, %114 ], [ %118, %117 ]
  %121 = call i8** @udat_open_69(i32 3, i32 3, i8* %120, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZZNK5blink9LocaleICU14OpenDateFormatE16UDateFormatStyleS1_E12kGmtTimezone, i64 0, i64 0), i32 3, i16* null, i32 -1, i32* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111) #10
  %122 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL20GetDateFormatPatternEPKPv(i8** %121)
  %123 = ptrtoint %"class.WTF::StringImpl"* %122 to i64
  %124 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 18
  %125 = bitcast %"class.WTF::String"* %124 to i64*
  %126 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %124, i64 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  store i64 %123, i64* %125, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %119
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #10
  br label %142

142:                                              ; preds = %141, %138, %119
  call void @udat_close_69(i8** %121) #10
  %143 = load i8**, i8*** %24, align 8
  %144 = call %"class.WTF::Vector"* @_ZN5blink9LocaleICU17CreateLabelVectorEPKPv21UDateFormatSymbolTypeii(%"class.blink::LocaleICU"* undef, i8** %143, i32 5, i32 0, i32 2)
  %145 = icmp eq %"class.WTF::Vector"* %144, null
  br i1 %145, label %146, label %181

146:                                              ; preds = %142
  %147 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %148 = bitcast i8* %147 to %"class.WTF::Vector"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 16, i1 false) #10
  %149 = getelementptr inbounds i8, i8* %147, i64 8
  %150 = bitcast i8* %149 to i32*
  %151 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 16) #10
  %152 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %151, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %153 = ptrtoint i8* %152 to i64
  %154 = bitcast i8* %147 to i64*
  store atomic i64 %153, i64* %154 monotonic, align 8
  %155 = lshr i64 %151, 3
  %156 = trunc i64 %155 to i32
  store i32 %156, i32* %150, align 8
  %157 = getelementptr inbounds i8, i8* %147, i64 12
  %158 = bitcast i8* %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, %156
  br i1 %160, label %167, label %161, !prof !3

161:                                              ; preds = %146
  %162 = bitcast i8* %152 to %"class.WTF::String"*
  %163 = zext i32 %159 to i64
  %164 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %162, i64 %163
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %164, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i64 2) #10
  %165 = load i32, i32* %158, align 4
  %166 = add i32 %165, 1
  store i32 %166, i32* %158, align 4
  br label %169

167:                                              ; preds = %146
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA3_KcEEvOT_(%"class.WTF::Vector"* %148, [3 x i8]* nonnull dereferenceable(3) @.str.22) #10
  %168 = load i32, i32* %158, align 4
  br label %169

169:                                              ; preds = %167, %161
  %170 = phi i32 [ %166, %161 ], [ %168, %167 ]
  %171 = load i32, i32* %150, align 8
  %172 = icmp eq i32 %170, %171
  br i1 %172, label %180, label %173, !prof !3

173:                                              ; preds = %169
  %174 = bitcast i8* %147 to %"class.WTF::String"**
  %175 = load %"class.WTF::String"*, %"class.WTF::String"** %174, align 8
  %176 = zext i32 %170 to i64
  %177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %175, i64 %176
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %177, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), i64 2) #10
  %178 = load i32, i32* %158, align 4
  %179 = add i32 %178, 1
  store i32 %179, i32* %158, align 4
  br label %181

180:                                              ; preds = %169
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA3_KcEEvOT_(%"class.WTF::Vector"* %148, [3 x i8]* nonnull dereferenceable(3) @.str.23) #10
  br label %181

181:                                              ; preds = %180, %173, %142
  %182 = phi %"class.WTF::Vector"* [ %144, %142 ], [ %148, %173 ], [ %148, %180 ]
  %183 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 24
  %184 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"* %183, %"class.WTF::Vector"* dereferenceable(16) %182)
  store i8 1, i8* %6, align 8
  %185 = icmp eq %"class.WTF::Vector"* %182, null
  br i1 %185, label %226, label %186

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %182, i64 0, i32 0, i32 0, i32 0
  %188 = load %"class.WTF::String"*, %"class.WTF::String"** %187, align 8
  %189 = icmp eq %"class.WTF::String"* %188, null
  br i1 %189, label %224, label %190, !prof !2

190:                                              ; preds = %186
  %191 = bitcast %"class.WTF::String"* %188 to i8*
  %192 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %182, i64 0, i32 0, i32 0, i32 2
  %193 = load i32, i32* %192, align 4
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %222, label %195, !prof !3

195:                                              ; preds = %190
  %196 = zext i32 %193 to i64
  %197 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 %196
  br label %198

198:                                              ; preds = %216, %195
  %199 = phi %"class.WTF::String"* [ %217, %216 ], [ %188, %195 ]
  %200 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %199, i64 0, i32 0, i32 0
  %201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %200, align 8
  %202 = icmp eq %"class.WTF::StringImpl"* %201, null
  br i1 %202, label %216, label %203

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load atomic i32, i32* %204 monotonic, align 4
  %206 = and i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 0
  %209 = load i32, i32* %208, align 4
  br i1 %207, label %210, label %212

210:                                              ; preds = %203
  %211 = add i32 %209, -1
  store i32 %211, i32* %208, align 4
  br label %212

212:                                              ; preds = %210, %203
  %213 = phi i32 [ %211, %210 ], [ %209, %203 ]
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %212
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %201) #10
  br label %216

216:                                              ; preds = %215, %212, %198
  %217 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %199, i64 1
  %218 = icmp eq %"class.WTF::String"* %217, %197
  br i1 %218, label %219, label %198

219:                                              ; preds = %216
  store i32 0, i32* %192, align 4
  %220 = bitcast %"class.WTF::Vector"* %182 to i8**
  %221 = load i8*, i8** %220, align 8
  br label %222

222:                                              ; preds = %219, %190
  %223 = phi i8* [ %221, %219 ], [ %191, %190 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %223) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %187, align 8
  br label %224

224:                                              ; preds = %222, %186
  %225 = bitcast %"class.WTF::Vector"* %182 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %225) #10
  br label %226

226:                                              ; preds = %224, %181, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blinkL20GetDateFormatPatternEPKPv(i8**) unnamed_addr #0 {
  %2 = alloca i16*, align 8
  %3 = alloca i32, align 4
  %4 = icmp eq i8** %0, null
  br i1 %4, label %5, label %27

5:                                                ; preds = %1
  %6 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %145, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %145

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #10
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #10
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %145

27:                                               ; preds = %1
  %28 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #10
  store i32 0, i32* %3, align 4
  %29 = call i32 @udat_toPattern_69(i8** nonnull %0, i8 signext 1, i16* null, i32 0, i32* nonnull %3) #10
  %30 = load i32, i32* %3, align 4
  %31 = icmp eq i32 %30, 15
  %32 = icmp ne i32 %29, 0
  %33 = and i1 %32, %31
  br i1 %33, label %56, label %34

34:                                               ; preds = %27
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %143, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %143

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #10
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !3

53:                                               ; preds = %44
  call void @llvm.trap() #10
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %143

56:                                               ; preds = %27
  %57 = bitcast i16** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %2, align 8
  %58 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %29, i16** nonnull dereferenceable(8) %2) #10
  %59 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #10
  store i32 0, i32* %3, align 4
  %60 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 1
  %67 = bitcast %"class.WTF::StringImpl"* %66 to i16*
  br label %68

68:                                               ; preds = %56, %61, %65
  %69 = phi i16* [ %67, %65 ], [ null, %61 ], [ null, %56 ]
  %70 = call i32 @udat_toPattern_69(i8** nonnull %0, i8 signext 1, i16* %69, i32 %29, i32* nonnull %3) #10
  %71 = load i32, i32* %3, align 4
  %72 = icmp slt i32 %71, 1
  br i1 %72, label %95, label %73

73:                                               ; preds = %68
  %74 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %126, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %126

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #10
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %83
  call void @llvm.trap() #10
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %126

95:                                               ; preds = %68
  br i1 %60, label %100, label %96

96:                                               ; preds = %95
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %121

100:                                              ; preds = %96, %95
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %102 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %103 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %121

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #10
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !3

118:                                              ; preds = %109
  call void @llvm.trap() #10
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %121

121:                                              ; preds = %96, %100, %104, %119
  %122 = phi i64 [ %59, %100 ], [ %59, %119 ], [ %59, %104 ], [ 0, %96 ]
  %123 = phi i64 [ %102, %100 ], [ %102, %119 ], [ %102, %104 ], [ %59, %96 ]
  %124 = inttoptr i64 %122 to %"class.WTF::StringImpl"*
  %125 = inttoptr i64 %123 to %"class.WTF::StringImpl"*
  br label %126

126:                                              ; preds = %93, %78, %73, %121
  %127 = phi %"class.WTF::StringImpl"* [ %125, %121 ], [ null, %73 ], [ %76, %78 ], [ %76, %93 ]
  %128 = phi %"class.WTF::StringImpl"* [ %124, %121 ], [ %58, %73 ], [ %58, %78 ], [ %58, %93 ]
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #10
  br label %143

143:                                              ; preds = %142, %139, %126, %54, %39, %34
  %144 = phi %"class.WTF::StringImpl"* [ null, %34 ], [ %37, %39 ], [ %37, %54 ], [ %127, %126 ], [ %127, %139 ], [ %127, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #10
  br label %145

145:                                              ; preds = %25, %10, %5, %143
  %146 = phi %"class.WTF::StringImpl"* [ %144, %143 ], [ null, %5 ], [ %8, %10 ], [ %8, %25 ]
  ret %"class.WTF::StringImpl"* %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %219, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #10
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %116

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %114

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %"class.WTF::String"* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #10
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 1
  %72 = icmp eq %"class.WTF::String"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = bitcast %"class.WTF::Vector"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #10
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %40, align 8
  br label %80

80:                                               ; preds = %43, %74
  %81 = phi i32 [ 0, %43 ], [ %79, %74 ]
  %82 = phi i32 [ %8, %43 ], [ %78, %74 ]
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %114, !prof !2

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %87 = icmp eq %"class.WTF::String"* %86, null
  %88 = zext i32 %82 to i64
  %89 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %88) #10
  %90 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  br i1 %87, label %91, label %96

91:                                               ; preds = %84
  %92 = ptrtoint i8* %90 to i64
  %93 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %89, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %40, align 8
  br label %114

96:                                               ; preds = %84
  %97 = lshr i64 %89, 3
  %98 = ptrtoint i8* %90 to i64
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %100 = icmp ne i8* %90, null
  %101 = icmp ne %"class.WTF::String"* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %"class.WTF::String"* %99 to i8*
  br i1 %102, label %104, label %110, !prof !2

104:                                              ; preds = %96
  %105 = load i32, i32* %5, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %103, i64 %107, i1 false) #10
  %108 = bitcast %"class.WTF::Vector"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi i8* [ %109, %104 ], [ %103, %96 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #10
  %112 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %98, i64* %112 monotonic, align 8
  %113 = trunc i64 %97 to i32
  store i32 %113, i32* %40, align 8
  br label %114

114:                                              ; preds = %39, %80, %91, %110
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %114, %38
  %117 = phi i32 [ %115, %114 ], [ %8, %38 ]
  %118 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 %120
  %122 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq i32 %117, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %116, %167
  %126 = phi %"class.WTF::String"* [ %169, %167 ], [ %123, %116 ]
  %127 = phi %"class.WTF::String"* [ %168, %167 ], [ %119, %116 ]
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #10
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !3

145:                                              ; preds = %136
  tail call void @llvm.trap() #10
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %125
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::String"* %126 to i64*
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #10
  br label %167

167:                                              ; preds = %166, %163, %148
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 1
  %170 = icmp eq %"class.WTF::String"* %168, %121
  br i1 %170, label %171, label %125

171:                                              ; preds = %167
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %173 = load i32, i32* %5, align 4
  %174 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  br label %175

175:                                              ; preds = %171, %116
  %176 = phi %"class.WTF::String"* [ %174, %171 ], [ %123, %116 ]
  %177 = phi i32 [ %173, %171 ], [ 0, %116 ]
  %178 = phi %"class.WTF::String"* [ %172, %171 ], [ %119, %116 ]
  %179 = zext i32 %177 to i64
  %180 = load i32, i32* %7, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %181
  %183 = icmp eq i32 %177, %180
  br i1 %183, label %217, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %179
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %179
  br label %187

187:                                              ; preds = %184, %211
  %188 = phi %"class.WTF::String"* [ %212, %211 ], [ %185, %184 ]
  %189 = phi %"class.WTF::String"* [ %213, %211 ], [ %186, %184 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #10
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !3

208:                                              ; preds = %199
  tail call void @llvm.trap() #10
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %187
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %214 = icmp eq %"class.WTF::String"* %213, %182
  br i1 %214, label %215, label %187

215:                                              ; preds = %211
  %216 = load i32, i32* %7, align 4
  br label %217

217:                                              ; preds = %215, %175
  %218 = phi i32 [ %216, %215 ], [ %177, %175 ]
  store i32 %218, i32* %5, align 4
  br label %219

219:                                              ; preds = %2, %217
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU10DateFormatEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 12
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %26, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %95

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #10
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !3

23:                                               ; preds = %14
  tail call void @llvm.trap() #10
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %95

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 6
  %28 = load i8, i8* %27, align 1, !range !4
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 4
  %32 = load i8**, i8*** %31, align 8
  br label %49

33:                                               ; preds = %26
  %34 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #10
  store i32 0, i32* %2, align 4
  %35 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %36 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  br label %45

43:                                               ; preds = %33
  %44 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  br label %45

45:                                               ; preds = %43, %40
  %46 = phi i8* [ %42, %40 ], [ %44, %43 ]
  %47 = call i8** @udat_open_69(i32 -1, i32 3, i8* %46, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZZNK5blink9LocaleICU14OpenDateFormatE16UDateFormatStyleS1_E12kGmtTimezone, i64 0, i64 0), i32 3, i16* null, i32 -1, i32* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #10
  %48 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 4
  store i8** %47, i8*** %48, align 8
  store i8 1, i8* %27, align 1
  br label %49

49:                                               ; preds = %30, %45
  %50 = phi i8** [ %32, %30 ], [ %47, %45 ]
  %51 = icmp eq i8** %50, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10) #10
  br label %95

53:                                               ; preds = %49
  %54 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL20GetDateFormatPatternEPKPv(i8** nonnull %50)
  %55 = ptrtoint %"class.WTF::StringImpl"* %54 to i64
  %56 = bitcast %"class.WTF::String"* %4 to i64*
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  store i64 %55, i64* %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %74, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #10
  br label %72

72:                                               ; preds = %68, %71
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  br label %74

74:                                               ; preds = %72, %53
  %75 = phi %"class.WTF::StringImpl"* [ %73, %72 ], [ %54, %53 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %76, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #10
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %83
  call void @llvm.trap() #10
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %93, %78, %74, %24, %8, %52
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  ret %"class.WTF::StringImpl"* %97
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU11MonthFormatEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 13
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %93

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %93

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  br label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  br label %35

35:                                               ; preds = %30, %33
  %36 = phi i8* [ %32, %30 ], [ %34, %33 ]
  %37 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 8) #10
  %38 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL20GetFormatForSkeletonEPKcRKN3WTF6StringE(i8* %36, %"class.WTF::String"* nonnull dereferenceable(8) %2)
  %39 = ptrtoint %"class.WTF::StringImpl"* %38 to i64
  %40 = bitcast %"class.WTF::String"* %3 to i64*
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  store i64 %39, i64* %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #10
  br label %56

56:                                               ; preds = %55, %52, %35
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #10
  br label %73

73:                                               ; preds = %56, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %93, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %93

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i33
  %85 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #10
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !3

90:                                               ; preds = %81
  call void @llvm.trap() #10
  unreachable

91:                                               ; preds = %81
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %82, align 4
  br label %93

93:                                               ; preds = %91, %76, %73, %22, %7
  %94 = phi %"class.WTF::StringImpl"* [ %5, %7 ], [ %5, %22 ], [ null, %73 ], [ %74, %76 ], [ %74, %91 ]
  ret %"class.WTF::StringImpl"* %94
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blinkL20GetFormatForSkeletonEPKcRKN3WTF6StringE(i8*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca i16*, align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.WTF::Vector.21", align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %7, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0), i64 7) #10
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #10
  store i32 0, i32* %5, align 4
  %9 = call i8** @udatpg_open_69(i8* %0, i32* nonnull %5) #10
  %10 = icmp eq i8** %9, null
  br i1 %10, label %131, label %11

11:                                               ; preds = %2
  store i32 0, i32* %5, align 4
  %12 = bitcast %"class.WTF::Vector.21"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %6, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #10
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %32, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  br i1 %26, label %30, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.21"* nonnull %6, i8* %29, i32 %20) #10
  br label %32

30:                                               ; preds = %22
  %31 = bitcast %"class.WTF::StringImpl"* %27 to i16*
  call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIDsEEvPKT_j(%"class.WTF::Vector.21"* nonnull %6, i16* %31, i32 %20) #10
  br label %32

32:                                               ; preds = %11, %18, %28, %30
  %33 = load i16*, i16** %13, align 8
  %34 = load i32, i32* %14, align 4
  %35 = call i32 @udatpg_getBestPattern_69(i8** nonnull %9, i16* %33, i32 %34, i16* null, i32 0, i32* nonnull %5) #10
  %36 = load i32, i32* %5, align 4
  %37 = icmp eq i32 %36, 15
  %38 = icmp ne i32 %35, 0
  %39 = and i1 %38, %37
  br i1 %39, label %40, label %121

40:                                               ; preds = %32
  %41 = bitcast i16** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %3, align 8
  %42 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %35, i16** nonnull dereferenceable(8) %3) #10
  %43 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #10
  store i32 0, i32* %5, align 4
  %44 = load i16*, i16** %13, align 8
  %45 = load i32, i32* %14, align 4
  %46 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  %53 = bitcast %"class.WTF::StringImpl"* %52 to i16*
  br label %54

54:                                               ; preds = %40, %47, %51
  %55 = phi i16* [ %53, %51 ], [ null, %47 ], [ null, %40 ]
  %56 = call i32 @udatpg_getBestPattern_69(i8** nonnull %9, i16* %44, i32 %45, i16* %55, i32 %35, i32* nonnull %5) #10
  %57 = load i32, i32* %5, align 4
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %105, label %59

59:                                               ; preds = %54
  br i1 %46, label %64, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %85

64:                                               ; preds = %60, %59
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %66 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #10
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %73
  call void @llvm.trap() #10
  unreachable

83:                                               ; preds = %73
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %74, align 4
  br label %85

85:                                               ; preds = %60, %64, %68, %83
  %86 = phi i64 [ %43, %64 ], [ %43, %83 ], [ %43, %68 ], [ 0, %60 ]
  %87 = phi i64 [ %66, %64 ], [ %66, %83 ], [ %66, %68 ], [ %43, %60 ]
  %88 = inttoptr i64 %86 to %"class.WTF::StringImpl"*
  %89 = bitcast %"class.WTF::String"* %4 to i64*
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %87, i64* %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #10
  br label %105

105:                                              ; preds = %85, %101, %104, %54
  %106 = phi %"class.WTF::StringImpl"* [ %42, %54 ], [ %88, %104 ], [ %88, %101 ], [ %88, %85 ]
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #10
  br label %121

121:                                              ; preds = %120, %117, %105, %32
  call void @udatpg_close_69(i8** nonnull %9) #10
  %122 = load i16*, i16** %13, align 8
  %123 = icmp eq i16* %122, null
  %124 = bitcast i16* %122 to i8*
  br i1 %123, label %130, label %125, !prof !2

125:                                              ; preds = %121
  %126 = load i32, i32* %14, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %129, label %128, !prof !3

128:                                              ; preds = %125
  store i32 0, i32* %14, align 4
  br label %129

129:                                              ; preds = %128, %125
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %124) #10
  store i16* null, i16** %13, align 8
  br label %130

130:                                              ; preds = %121, %129
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  br label %131

131:                                              ; preds = %2, %130
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #10
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  ret %"class.WTF::StringImpl"* %132
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU16ShortMonthFormatEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 14
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %93

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %93

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  br label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  br label %35

35:                                               ; preds = %30, %33
  %36 = phi i8* [ %32, %30 ], [ %34, %33 ]
  %37 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7) #10
  %38 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL20GetFormatForSkeletonEPKcRKN3WTF6StringE(i8* %36, %"class.WTF::String"* nonnull dereferenceable(8) %2)
  %39 = ptrtoint %"class.WTF::StringImpl"* %38 to i64
  %40 = bitcast %"class.WTF::String"* %3 to i64*
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  store i64 %39, i64* %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #10
  br label %56

56:                                               ; preds = %55, %52, %35
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #10
  br label %73

73:                                               ; preds = %56, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %93, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %93

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i33
  %85 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #10
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !3

90:                                               ; preds = %81
  call void @llvm.trap() #10
  unreachable

91:                                               ; preds = %81
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %82, align 4
  br label %93

93:                                               ; preds = %91, %76, %73, %22, %7
  %94 = phi %"class.WTF::StringImpl"* [ %5, %7 ], [ %5, %22 ], [ null, %73 ], [ %74, %76 ], [ %74, %91 ]
  ret %"class.WTF::StringImpl"* %94
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU10TimeFormatEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9LocaleICU24InitializeDateTimeFormatEv(%"class.blink::LocaleICU"* %0)
  %2 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 15, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #10
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %10
  tail call void @llvm.trap() #10
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU15ShortTimeFormatEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9LocaleICU24InitializeDateTimeFormatEv(%"class.blink::LocaleICU"* %0)
  %2 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 16, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #10
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %10
  tail call void @llvm.trap() #10
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU25DateTimeFormatWithSecondsEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9LocaleICU24InitializeDateTimeFormatEv(%"class.blink::LocaleICU"* %0)
  %2 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 17, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #10
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %10
  tail call void @llvm.trap() #10
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9LocaleICU28DateTimeFormatWithoutSecondsEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9LocaleICU24InitializeDateTimeFormatEv(%"class.blink::LocaleICU"* %0)
  %2 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 18, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #10
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %10
  tail call void @llvm.trap() #10
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink9LocaleICU16ShortMonthLabelsEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 21
  %4 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 21, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %139

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 4
  %13 = load i8**, i8*** %12, align 8
  br label %30

14:                                               ; preds = %7
  %15 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #10
  store i32 0, i32* %2, align 4
  %16 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  br label %26

24:                                               ; preds = %14
  %25 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  br label %26

26:                                               ; preds = %24, %21
  %27 = phi i8* [ %23, %21 ], [ %25, %24 ]
  %28 = call i8** @udat_open_69(i32 -1, i32 3, i8* %27, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZZNK5blink9LocaleICU14OpenDateFormatE16UDateFormatStyleS1_E12kGmtTimezone, i64 0, i64 0), i32 3, i16* null, i32 -1, i32* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #10
  %29 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 4
  store i8** %28, i8*** %29, align 8
  store i8 1, i8* %8, align 1
  br label %30

30:                                               ; preds = %11, %26
  %31 = phi i8** [ %13, %11 ], [ %28, %26 ]
  %32 = icmp eq i8** %31, null
  br i1 %32, label %77, label %33

33:                                               ; preds = %30
  %34 = call %"class.WTF::Vector"* @_ZN5blink9LocaleICU17CreateLabelVectorEPKPv21UDateFormatSymbolTypeii(%"class.blink::LocaleICU"* undef, i8** nonnull %31, i32 2, i32 0, i32 12)
  %35 = icmp eq %"class.WTF::Vector"* %34, null
  br i1 %35, label %77, label %36

36:                                               ; preds = %33
  %37 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"* %3, %"class.WTF::Vector"* nonnull dereferenceable(16) %34)
  %38 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::String"*, %"class.WTF::String"** %38, align 8
  %40 = icmp eq %"class.WTF::String"* %39, null
  br i1 %40, label %75, label %41, !prof !2

41:                                               ; preds = %36
  %42 = bitcast %"class.WTF::String"* %39 to i8*
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %73, label %46, !prof !3

46:                                               ; preds = %41
  %47 = zext i32 %44 to i64
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 %47
  br label %49

49:                                               ; preds = %67, %46
  %50 = phi %"class.WTF::String"* [ %68, %67 ], [ %39, %46 ]
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #10
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 1
  %69 = icmp eq %"class.WTF::String"* %68, %48
  br i1 %69, label %70, label %49

70:                                               ; preds = %67
  store i32 0, i32* %43, align 4
  %71 = bitcast %"class.WTF::Vector"* %34 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %41
  %74 = phi i8* [ %72, %70 ], [ %42, %41 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %38, align 8
  br label %75

75:                                               ; preds = %36, %73
  %76 = bitcast %"class.WTF::Vector"* %34 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %76) #10
  br label %139

77:                                               ; preds = %33, %30
  %78 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 21, i32 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = icmp ult i32 %79, 12
  br i1 %80, label %81, label %112, !prof !2

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::String"*, %"class.WTF::String"** %82, align 8
  %84 = icmp eq %"class.WTF::String"* %83, null
  %85 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 96) #10
  %86 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %85, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  br i1 %84, label %87, label %92

87:                                               ; preds = %81
  %88 = ptrtoint i8* %86 to i64
  %89 = bitcast %"class.WTF::Vector"* %3 to i64*
  store atomic i64 %88, i64* %89 monotonic, align 8
  %90 = lshr i64 %85, 3
  %91 = trunc i64 %90 to i32
  br label %110

92:                                               ; preds = %81
  %93 = lshr i64 %85, 3
  %94 = ptrtoint i8* %86 to i64
  %95 = load %"class.WTF::String"*, %"class.WTF::String"** %82, align 8
  %96 = icmp ne i8* %86, null
  %97 = icmp ne %"class.WTF::String"* %95, null
  %98 = and i1 %96, %97
  %99 = bitcast %"class.WTF::String"* %95 to i8*
  br i1 %98, label %100, label %106, !prof !2

100:                                              ; preds = %92
  %101 = load i32, i32* %4, align 4
  %102 = zext i32 %101 to i64
  %103 = shl nuw nsw i64 %102, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %86, i8* nonnull align 8 %99, i64 %103, i1 false) #10
  %104 = bitcast %"class.WTF::Vector"* %3 to i8**
  %105 = load i8*, i8** %104, align 8
  br label %106

106:                                              ; preds = %100, %92
  %107 = phi i8* [ %105, %100 ], [ %99, %92 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %107) #10
  %108 = bitcast %"class.WTF::Vector"* %3 to i64*
  store atomic i64 %94, i64* %108 monotonic, align 8
  %109 = trunc i64 %93 to i32
  br label %110

110:                                              ; preds = %106, %87
  %111 = phi i32 [ %91, %87 ], [ %109, %106 ]
  store i32 %111, i32* %78, align 8
  br label %112

112:                                              ; preds = %110, %77
  %113 = phi i32 [ %79, %77 ], [ %111, %110 ]
  %114 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  br label %115

115:                                              ; preds = %137, %112
  %116 = phi i32 [ %113, %112 ], [ %138, %137 ]
  %117 = phi i64 [ 0, %112 ], [ %135, %137 ]
  %118 = getelementptr inbounds [12 x [4 x i8]], [12 x [4 x i8]]* @_ZN3WTFL10kMonthNameE, i64 0, i64 %117
  %119 = load i32, i32* %4, align 4
  %120 = icmp eq i32 %119, %116
  br i1 %120, label %133, label %121, !prof !3

121:                                              ; preds = %115
  %122 = load %"class.WTF::String"*, %"class.WTF::String"** %114, align 8
  %123 = zext i32 %119 to i64
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 %123
  %125 = getelementptr inbounds [4 x i8], [4 x i8]* %118, i64 0, i64 0
  %126 = icmp eq [4 x i8]* %118, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %121
  %128 = call i64 @strlen(i8* nonnull %125) #12
  br label %129

129:                                              ; preds = %127, %121
  %130 = phi i64 [ %128, %127 ], [ 0, %121 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %124, i8* %125, i64 %130) #10
  %131 = load i32, i32* %4, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %4, align 4
  br label %134

133:                                              ; preds = %115
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA4_KcEEvOT_(%"class.WTF::Vector"* %3, [4 x i8]* dereferenceable(4) %118) #10
  br label %134

134:                                              ; preds = %129, %133
  %135 = add nuw nsw i64 %117, 1
  %136 = icmp eq i64 %135, 12
  br i1 %136, label %139, label %137

137:                                              ; preds = %134
  %138 = load i32, i32* %78, align 8
  br label %115

139:                                              ; preds = %134, %75, %1
  ret %"class.WTF::Vector"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink9LocaleICU21StandAloneMonthLabelsEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 22
  %4 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 22, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %75

7:                                                ; preds = %1
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #10
  store i32 0, i32* %2, align 4
  %9 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  br label %19

17:                                               ; preds = %7
  %18 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  br label %19

19:                                               ; preds = %14, %17
  %20 = phi i8* [ %16, %14 ], [ %18, %17 ]
  %21 = call i8** @udat_open_69(i32 -2, i32 -2, i8* %20, i16* null, i32 -1, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZZNK5blink9LocaleICU38OpenDateFormatForStandAloneMonthLabelsEbE13kMonthPattern, i64 0, i64 0), i32 4, i32* nonnull %2) #10
  call void @udat_setContext_69(i8** %21, i32 260, i32* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #10
  %22 = icmp eq i8** %21, null
  br i1 %22, label %68, label %23

23:                                               ; preds = %19
  %24 = call %"class.WTF::Vector"* @_ZN5blink9LocaleICU17CreateLabelVectorEPKPv21UDateFormatSymbolTypeii(%"class.blink::LocaleICU"* undef, i8** nonnull %21, i32 10, i32 0, i32 12)
  %25 = icmp eq %"class.WTF::Vector"* %24, null
  br i1 %25, label %67, label %26

26:                                               ; preds = %23
  %27 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"* %3, %"class.WTF::Vector"* nonnull dereferenceable(16) %24)
  call void @udat_close_69(i8** nonnull %21) #10
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %24, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::String"*, %"class.WTF::String"** %28, align 8
  %30 = icmp eq %"class.WTF::String"* %29, null
  br i1 %30, label %65, label %31, !prof !2

31:                                               ; preds = %26
  %32 = bitcast %"class.WTF::String"* %29 to i8*
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %24, i64 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %63, label %36, !prof !3

36:                                               ; preds = %31
  %37 = zext i32 %34 to i64
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 %37
  br label %39

39:                                               ; preds = %57, %36
  %40 = phi %"class.WTF::String"* [ %58, %57 ], [ %29, %36 ]
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %56, %53, %39
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 1
  %59 = icmp eq %"class.WTF::String"* %58, %38
  br i1 %59, label %60, label %39

60:                                               ; preds = %57
  store i32 0, i32* %33, align 4
  %61 = bitcast %"class.WTF::Vector"* %24 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %31
  %64 = phi i8* [ %62, %60 ], [ %32, %31 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %28, align 8
  br label %65

65:                                               ; preds = %26, %63
  %66 = bitcast %"class.WTF::Vector"* %24 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %66) #10
  br label %75

67:                                               ; preds = %23
  call void @udat_close_69(i8** nonnull %21) #10
  br label %68

68:                                               ; preds = %19, %67
  %69 = bitcast %"class.blink::LocaleICU"* %0 to %"class.WTF::Vector"* (%"class.blink::LocaleICU"*)***
  %70 = load %"class.WTF::Vector"* (%"class.blink::LocaleICU"*)**, %"class.WTF::Vector"* (%"class.blink::LocaleICU"*)*** %69, align 8
  %71 = getelementptr inbounds %"class.WTF::Vector"* (%"class.blink::LocaleICU"*)*, %"class.WTF::Vector"* (%"class.blink::LocaleICU"*)** %70, i64 11
  %72 = load %"class.WTF::Vector"* (%"class.blink::LocaleICU"*)*, %"class.WTF::Vector"* (%"class.blink::LocaleICU"*)** %71, align 8
  %73 = call dereferenceable(16) %"class.WTF::Vector"* %72(%"class.blink::LocaleICU"* %0) #10
  %74 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"* %3, %"class.WTF::Vector"* dereferenceable(16) %73)
  br label %75

75:                                               ; preds = %68, %65, %1
  ret %"class.WTF::Vector"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink9LocaleICU26ShortStandAloneMonthLabelsEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 23
  %4 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 23, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %75

7:                                                ; preds = %1
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #10
  store i32 0, i32* %2, align 4
  %9 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  br label %19

17:                                               ; preds = %7
  %18 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  br label %19

19:                                               ; preds = %14, %17
  %20 = phi i8* [ %16, %14 ], [ %18, %17 ]
  %21 = call i8** @udat_open_69(i32 -2, i32 -2, i8* %20, i16* null, i32 -1, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZZNK5blink9LocaleICU38OpenDateFormatForStandAloneMonthLabelsEbE13kMonthPattern, i64 0, i64 0), i32 3, i32* nonnull %2) #10
  call void @udat_setContext_69(i8** %21, i32 260, i32* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #10
  %22 = icmp eq i8** %21, null
  br i1 %22, label %68, label %23

23:                                               ; preds = %19
  %24 = call %"class.WTF::Vector"* @_ZN5blink9LocaleICU17CreateLabelVectorEPKPv21UDateFormatSymbolTypeii(%"class.blink::LocaleICU"* undef, i8** nonnull %21, i32 11, i32 0, i32 12)
  %25 = icmp eq %"class.WTF::Vector"* %24, null
  br i1 %25, label %67, label %26

26:                                               ; preds = %23
  %27 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"* %3, %"class.WTF::Vector"* nonnull dereferenceable(16) %24)
  call void @udat_close_69(i8** nonnull %21) #10
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %24, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::String"*, %"class.WTF::String"** %28, align 8
  %30 = icmp eq %"class.WTF::String"* %29, null
  br i1 %30, label %65, label %31, !prof !2

31:                                               ; preds = %26
  %32 = bitcast %"class.WTF::String"* %29 to i8*
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %24, i64 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %63, label %36, !prof !3

36:                                               ; preds = %31
  %37 = zext i32 %34 to i64
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 %37
  br label %39

39:                                               ; preds = %57, %36
  %40 = phi %"class.WTF::String"* [ %58, %57 ], [ %29, %36 ]
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %56, %53, %39
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 1
  %59 = icmp eq %"class.WTF::String"* %58, %38
  br i1 %59, label %60, label %39

60:                                               ; preds = %57
  store i32 0, i32* %33, align 4
  %61 = bitcast %"class.WTF::Vector"* %24 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %31
  %64 = phi i8* [ %62, %60 ], [ %32, %31 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %28, align 8
  br label %65

65:                                               ; preds = %26, %63
  %66 = bitcast %"class.WTF::Vector"* %24 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %66) #10
  br label %75

67:                                               ; preds = %23
  call void @udat_close_69(i8** nonnull %21) #10
  br label %68

68:                                               ; preds = %19, %67
  %69 = bitcast %"class.blink::LocaleICU"* %0 to %"class.WTF::Vector"* (%"class.blink::LocaleICU"*)***
  %70 = load %"class.WTF::Vector"* (%"class.blink::LocaleICU"*)**, %"class.WTF::Vector"* (%"class.blink::LocaleICU"*)*** %69, align 8
  %71 = getelementptr inbounds %"class.WTF::Vector"* (%"class.blink::LocaleICU"*)*, %"class.WTF::Vector"* (%"class.blink::LocaleICU"*)** %70, i64 7
  %72 = load %"class.WTF::Vector"* (%"class.blink::LocaleICU"*)*, %"class.WTF::Vector"* (%"class.blink::LocaleICU"*)** %71, align 8
  %73 = call dereferenceable(16) %"class.WTF::Vector"* %72(%"class.blink::LocaleICU"* %0) #10
  %74 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"* %3, %"class.WTF::Vector"* dereferenceable(16) %73)
  br label %75

75:                                               ; preds = %68, %65, %1
  ret %"class.WTF::Vector"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink9LocaleICU14TimeAMPMLabelsEv(%"class.blink::LocaleICU"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9LocaleICU24InitializeDateTimeFormatEv(%"class.blink::LocaleICU"* %0)
  %2 = getelementptr inbounds %"class.blink::LocaleICU", %"class.blink::LocaleICU"* %0, i64 0, i32 24
  ret %"class.WTF::Vector"* %2
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferINS_6StringELj12ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.18"*, %"class.WTF::String"*) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast %"class.WTF::String"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKPKcEEvOT_(%"class.WTF::Vector"*, i8** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  br i1 %15, label %18, label %45, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq %"class.WTF::String"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.WTF::String"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.WTF::String"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !2

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.WTF::String"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.WTF::String"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 %48
  %50 = load i8*, i8** %1, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %45
  %53 = tail call i64 @strlen(i8* nonnull %50) #12
  br label %54

54:                                               ; preds = %45, %52
  %55 = phi i64 [ %53, %52 ], [ 0, %45 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %49, i8* %50, i64 %55) #10
  %56 = load i32, i32* %3, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %3, align 4
  ret void
}

declare i32 @udat_toPattern_69(i8**, i8 signext, i16*, i32, i32*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA3_KcEEvOT_(%"class.WTF::Vector"*, [3 x i8]* dereferenceable(3)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  br i1 %15, label %18, label %45, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq %"class.WTF::String"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.WTF::String"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.WTF::String"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !2

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.WTF::String"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.WTF::String"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 %48
  %50 = getelementptr inbounds [3 x i8], [3 x i8]* %1, i64 0, i64 0
  %51 = icmp eq [3 x i8]* %1, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %45
  %53 = tail call i64 @strlen(i8* nonnull %50) #12
  br label %54

54:                                               ; preds = %45, %52
  %55 = phi i64 [ %53, %52 ], [ 0, %45 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %49, i8* %50, i64 %55) #10
  %56 = load i32, i32* %3, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare i8** @udatpg_open_69(i8*, i32*) local_unnamed_addr #2

declare i32 @udatpg_getBestPattern_69(i8**, i16*, i32, i16*, i32, i32*) local_unnamed_addr #2

declare void @udatpg_close_69(i8**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.21"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %52

13:                                               ; preds = %3
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %9
  %20 = select i1 %19, i32 %18, i32 %9
  %21 = icmp ult i32 %11, %20
  br i1 %21, label %22, label %52, !prof !2

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = icmp eq i16* %24, null
  %26 = zext i32 %20 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %34

29:                                               ; preds = %22
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 1
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %10, align 8
  br label %52

34:                                               ; preds = %22
  %35 = lshr i64 %27, 1
  %36 = ptrtoint i8* %28 to i64
  %37 = load i16*, i16** %23, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne i16* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast i16* %37 to i8*
  br i1 %40, label %42, label %48, !prof !2

42:                                               ; preds = %34
  %43 = load i32, i32* %7, align 4
  %44 = zext i32 %43 to i64
  %45 = shl nuw nsw i64 %44, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %28, i8* nonnull align 2 %41, i64 %45, i1 false) #10
  %46 = bitcast %"class.WTF::Vector.21"* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %42, %34
  %49 = phi i8* [ %47, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #10
  %50 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %36, i64* %50 monotonic, align 8
  %51 = trunc i64 %35 to i32
  store i32 %51, i32* %10, align 8
  br label %52

52:                                               ; preds = %48, %29, %13, %3
  %53 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %54, align 8
  %55 = load i32, i32* %7, align 4
  %56 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56)
  %57 = icmp ult i32 %9, %55
  br i1 %57, label %59, label %58

58:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56)
  store i8* null, i8** %54, align 8
  br label %68

59:                                               ; preds = %52
  %60 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %61 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %55) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* %60, i8* %61) #10
  %62 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56)
  store i8* %63, i8** %54, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #10
  br label %68

68:                                               ; preds = %58, %59, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  %69 = zext i32 %2 to i64
  %70 = getelementptr inbounds i8, i8* %1, i64 %69
  %71 = icmp eq i32 %2, 0
  br i1 %71, label %158, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = load i16*, i16** %73, align 8
  %75 = load i32, i32* %7, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i16, i16* %74, i64 %76
  %78 = icmp ult i32 %2, 16
  br i1 %78, label %147, label %79

79:                                               ; preds = %72
  %80 = bitcast i16* %77 to i8*
  %81 = add nuw nsw i64 %76, %69
  %82 = getelementptr i16, i16* %74, i64 %81
  %83 = bitcast i16* %82 to i8*
  %84 = icmp ugt i8* %70, %80
  %85 = icmp ugt i8* %83, %1
  %86 = and i1 %84, %85
  br i1 %86, label %147, label %87

87:                                               ; preds = %79
  %88 = and i64 %69, 4294967280
  %89 = getelementptr i16, i16* %77, i64 %88
  %90 = getelementptr i8, i8* %1, i64 %88
  %91 = add nsw i64 %88, -16
  %92 = lshr exact i64 %91, 4
  %93 = add nuw nsw i64 %92, 1
  %94 = and i64 %93, 1
  %95 = icmp eq i64 %91, 0
  br i1 %95, label %129, label %96

96:                                               ; preds = %87
  %97 = sub nuw nsw i64 %93, %94
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i64 [ 0, %96 ], [ %126, %98 ]
  %100 = phi i64 [ %97, %96 ], [ %127, %98 ]
  %101 = getelementptr i16, i16* %77, i64 %99
  %102 = getelementptr i8, i8* %1, i64 %99
  %103 = bitcast i8* %102 to <8 x i8>*
  %104 = load <8 x i8>, <8 x i8>* %103, align 1, !alias.scope !5
  %105 = getelementptr i8, i8* %102, i64 8
  %106 = bitcast i8* %105 to <8 x i8>*
  %107 = load <8 x i8>, <8 x i8>* %106, align 1, !alias.scope !5
  %108 = zext <8 x i8> %104 to <8 x i16>
  %109 = zext <8 x i8> %107 to <8 x i16>
  %110 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %110, align 2, !alias.scope !8, !noalias !5
  %111 = getelementptr i16, i16* %101, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !8, !noalias !5
  %113 = or i64 %99, 16
  %114 = getelementptr i16, i16* %77, i64 %113
  %115 = getelementptr i8, i8* %1, i64 %113
  %116 = bitcast i8* %115 to <8 x i8>*
  %117 = load <8 x i8>, <8 x i8>* %116, align 1, !alias.scope !5
  %118 = getelementptr i8, i8* %115, i64 8
  %119 = bitcast i8* %118 to <8 x i8>*
  %120 = load <8 x i8>, <8 x i8>* %119, align 1, !alias.scope !5
  %121 = zext <8 x i8> %117 to <8 x i16>
  %122 = zext <8 x i8> %120 to <8 x i16>
  %123 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %123, align 2, !alias.scope !8, !noalias !5
  %124 = getelementptr i16, i16* %114, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %125, align 2, !alias.scope !8, !noalias !5
  %126 = add i64 %99, 32
  %127 = add i64 %100, -2
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %98, !llvm.loop !10

129:                                              ; preds = %98, %87
  %130 = phi i64 [ 0, %87 ], [ %126, %98 ]
  %131 = icmp eq i64 %94, 0
  br i1 %131, label %145, label %132

132:                                              ; preds = %129
  %133 = getelementptr i16, i16* %77, i64 %130
  %134 = getelementptr i8, i8* %1, i64 %130
  %135 = bitcast i8* %134 to <8 x i8>*
  %136 = load <8 x i8>, <8 x i8>* %135, align 1, !alias.scope !5
  %137 = getelementptr i8, i8* %134, i64 8
  %138 = bitcast i8* %137 to <8 x i8>*
  %139 = load <8 x i8>, <8 x i8>* %138, align 1, !alias.scope !5
  %140 = zext <8 x i8> %136 to <8 x i16>
  %141 = zext <8 x i8> %139 to <8 x i16>
  %142 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %142, align 2, !alias.scope !8, !noalias !5
  %143 = getelementptr i16, i16* %133, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %144, align 2, !alias.scope !8, !noalias !5
  br label %145

145:                                              ; preds = %129, %132
  %146 = icmp eq i64 %88, %69
  br i1 %146, label %158, label %147

147:                                              ; preds = %145, %79, %72
  %148 = phi i16* [ %77, %79 ], [ %77, %72 ], [ %89, %145 ]
  %149 = phi i8* [ %1, %79 ], [ %1, %72 ], [ %90, %145 ]
  br label %150

150:                                              ; preds = %147, %150
  %151 = phi i16* [ %155, %150 ], [ %148, %147 ]
  %152 = phi i8* [ %156, %150 ], [ %149, %147 ]
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i16
  store i16 %154, i16* %151, align 2
  %155 = getelementptr inbounds i16, i16* %151, i64 1
  %156 = getelementptr inbounds i8, i8* %152, i64 1
  %157 = icmp eq i8* %156, %70
  br i1 %157, label %158, label %150, !llvm.loop !12

158:                                              ; preds = %150, %145, %68
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIDsEEvPKT_j(%"class.WTF::Vector.21"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %101

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = icmp ugt i16* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i16, i16* %15, i64 %18
  %20 = icmp ugt i16* %19, %1
  br i1 %20, label %58, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %101, !prof !2

30:                                               ; preds = %21
  %31 = icmp eq i16* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %32) #10
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #10
  br i1 %31, label %35, label %40

35:                                               ; preds = %30
  %36 = ptrtoint i8* %34 to i64
  %37 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = lshr i64 %33, 1
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %10, align 8
  br label %101

40:                                               ; preds = %30
  %41 = lshr i64 %33, 1
  %42 = ptrtoint i8* %34 to i64
  %43 = load i16*, i16** %14, align 8
  %44 = icmp ne i8* %34, null
  %45 = icmp ne i16* %43, null
  %46 = and i1 %44, %45
  %47 = bitcast i16* %43 to i8*
  br i1 %46, label %48, label %54, !prof !2

48:                                               ; preds = %40
  %49 = load i32, i32* %7, align 4
  %50 = zext i32 %49 to i64
  %51 = shl nuw nsw i64 %50, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %34, i8* nonnull align 2 %47, i64 %51, i1 false) #10
  %52 = bitcast %"class.WTF::Vector.21"* %0 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %48, %40
  %55 = phi i8* [ %53, %48 ], [ %47, %40 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #10
  %56 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %42, i64* %56 monotonic, align 8
  %57 = trunc i64 %41 to i32
  store i32 %57, i32* %10, align 8
  br label %101

58:                                               ; preds = %17
  %59 = ptrtoint i16* %1 to i64
  %60 = ptrtoint i16* %15 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 1
  %63 = lshr i32 %11, 2
  %64 = add nuw i32 %11, 1
  %65 = add i32 %64, %63
  %66 = icmp ugt i32 %65, 4
  %67 = select i1 %66, i32 %65, i32 4
  %68 = icmp ugt i32 %67, %9
  %69 = select i1 %68, i32 %67, i32 %9
  %70 = icmp ult i32 %11, %69
  br i1 %70, label %71, label %98, !prof !2

71:                                               ; preds = %58
  %72 = icmp eq i16* %15, null
  %73 = zext i32 %69 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %73) #10
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #10
  %76 = ptrtoint i8* %75 to i64
  br i1 %72, label %77, label %79

77:                                               ; preds = %71
  %78 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %76, i64* %78 monotonic, align 8
  br label %94

79:                                               ; preds = %71
  %80 = load i16*, i16** %14, align 8
  %81 = icmp ne i8* %75, null
  %82 = icmp ne i16* %80, null
  %83 = and i1 %81, %82
  %84 = bitcast i16* %80 to i8*
  br i1 %83, label %85, label %91, !prof !2

85:                                               ; preds = %79
  %86 = load i32, i32* %7, align 4
  %87 = zext i32 %86 to i64
  %88 = shl nuw nsw i64 %87, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %75, i8* nonnull align 2 %84, i64 %88, i1 false) #10
  %89 = bitcast %"class.WTF::Vector.21"* %0 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %85, %79
  %92 = phi i8* [ %90, %85 ], [ %84, %79 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %92) #10
  %93 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %76, i64* %93 monotonic, align 8
  br label %94

94:                                               ; preds = %91, %77
  %95 = lshr i64 %74, 1
  %96 = trunc i64 %95 to i32
  store i32 %96, i32* %10, align 8
  %97 = bitcast i8* %75 to i16*
  br label %98

98:                                               ; preds = %94, %58
  %99 = phi i16* [ %15, %58 ], [ %97, %94 ]
  %100 = getelementptr inbounds i16, i16* %99, i64 %62
  br label %101

101:                                              ; preds = %98, %21, %35, %54, %3
  %102 = phi i16* [ %1, %3 ], [ %100, %98 ], [ %1, %21 ], [ %1, %35 ], [ %1, %54 ]
  %103 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #10
  %104 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %104, align 8
  %105 = load i32, i32* %7, align 4
  %106 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  %107 = icmp ult i32 %9, %105
  br i1 %107, label %109, label %108

108:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* null, i8** %104, align 8
  br label %118

109:                                              ; preds = %101
  %110 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %111 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %105) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* %110, i8* %111) #10
  %112 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* %113, i8** %104, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %109
  %116 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #10
  br label %118

118:                                              ; preds = %108, %109, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #10
  %119 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %120 = load i16*, i16** %119, align 8
  %121 = load i32, i32* %7, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i16, i16* %120, i64 %122
  %124 = icmp ne i16* %123, null
  %125 = icmp ne i16* %102, null
  %126 = and i1 %125, %124
  br i1 %126, label %127, label %132, !prof !2

127:                                              ; preds = %118
  %128 = zext i32 %2 to i64
  %129 = bitcast i16* %123 to i8*
  %130 = bitcast i16* %102 to i8*
  %131 = shl nuw nsw i64 %128, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %129, i8* nonnull align 2 %130, i64 %131, i1 false) #10
  br label %132

132:                                              ; preds = %118, %127
  store i32 %9, i32* %7, align 4
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.29, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.17"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.17"* %0, i32 %5) #10
  %14 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.WTF::String"* %1 to i64
  %17 = ptrtoint %"class.WTF::String"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.17"* %0, i32 %5) #10
  %20 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.WTF::String"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.WTF::String"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 %26
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %29 = bitcast %"class.WTF::String"* %24 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.WTF::String"* %27 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %28, align 8
  %32 = load i32, i32* %3, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.17"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::String"*, %"class.WTF::String"** %31, align 8
  %33 = icmp eq %"class.WTF::String"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 12
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %37) #10
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 12, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.17"* %0, i32 %27) #10
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.17"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 13
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::String"*, %"class.WTF::String"** %5, align 8
  %7 = icmp eq %"class.WTF::String"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.WTF::String"*
  %10 = icmp eq %"class.WTF::String"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 12, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 12, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.WTF::String"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #10
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferINS_6StringELj12ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.18"* %19, %"class.WTF::String"* nonnull %6) #10
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %30) #10
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::String"*, %"class.WTF::String"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.WTF::String"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.WTF::String"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #10
  %46 = load %"class.WTF::String"*, %"class.WTF::String"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.WTF::String"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.WTF::String"*
  %51 = icmp eq %"class.WTF::String"* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferINS_6StringELj12ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.18"* %53, %"class.WTF::String"* %48) #10
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.29, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA4_KcEEvOT_(%"class.WTF::Vector"*, [4 x i8]* dereferenceable(4)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  br i1 %15, label %18, label %45, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq %"class.WTF::String"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.WTF::String"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.WTF::String"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !2

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.WTF::String"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.WTF::String"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 %48
  %50 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i64 0
  %51 = icmp eq [4 x i8]* %1, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %45
  %53 = tail call i64 @strlen(i8* nonnull %50) #12
  br label %54

54:                                               ; preds = %45, %52
  %55 = phi i64 [ %53, %52 ], [ 0, %45 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %49, i8* %50, i64 %55) #10
  %56 = load i32, i32* %3, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %3, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !11}
