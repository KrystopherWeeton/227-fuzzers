; ModuleID = '../../third_party/blink/renderer/modules/credentialmanager/credential_manager_type_converters.cc'
source_filename = "../../third_party/blink/renderer/modules/credentialmanager/credential_manager_type_converters.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::CredentialInfo"* }
%"class.blink::mojom::blink::CredentialInfo" = type { i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.WTF::String", %class.scoped_refptr.5 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::KURL"* }
%class.scoped_refptr.5 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.5 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::Credential" = type { %"class.blink::ScriptWrappable", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::FederatedCredential" = type { %"class.blink::Credential", %class.scoped_refptr.5, %"class.WTF::String", %"class.blink::KURL" }
%"class.blink::PasswordCredential" = type { %"class.blink::Credential", %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.blink::ArrayBufferOrArrayBufferView" = type { i32, %"class.blink::Member", %"class.blink::NotShared" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::NotShared" = type { %"class.blink::Member.10" }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::DOMArrayBufferView"* }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.12" }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.173 }
%union.anon.173 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.absl::optional.24" = type { %"class.absl::optional_internal::optional_data.25" }
%"class.absl::optional_internal::optional_data.25" = type { %"class.absl::optional_internal::optional_data_base.26" }
%"class.absl::optional_internal::optional_data_base.26" = type { %"class.absl::optional_internal::optional_data_dtor_base.27" }
%"class.absl::optional_internal::optional_data_dtor_base.27" = type { i8, %union.anon.28 }
%union.anon.28 = type { %"class.WTF::String" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::AuthenticatorSelectionCriteria", i32 }
%"class.blink::mojom::blink::AuthenticatorSelectionCriteria" = type { i32, i32, i32 }
%"class.blink::AuthenticatorSelectionCriteria" = type { %"class.blink::IDLDictionaryBase", i8, %"class.WTF::String", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.mojo::StructPtr.31" = type { %"class.std::__1::unique_ptr.32" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"* }
%"class.blink::mojom::blink::PublicKeyCredentialUserEntity" = type { %"class.WTF::Vector", %"class.WTF::String", %"class.absl::optional.35", %"class.WTF::String" }
%"class.absl::optional.35" = type { %"class.absl::optional_internal::optional_data.36" }
%"class.absl::optional_internal::optional_data.36" = type { %"class.absl::optional_internal::optional_data_base.37" }
%"class.absl::optional_internal::optional_data_base.37" = type { %"class.absl::optional_internal::optional_data_dtor_base.38" }
%"class.absl::optional_internal::optional_data_dtor_base.38" = type { i8, %union.anon.39 }
%union.anon.39 = type { %"class.blink::KURL" }
%"class.blink::PublicKeyCredentialUserEntity" = type { %"class.blink::PublicKeyCredentialEntity", %"class.WTF::String", %"class.blink::ArrayBufferOrArrayBufferView" }
%"class.blink::PublicKeyCredentialEntity" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.43" = type { %"class.std::__1::unique_ptr.44" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"* }
%"class.blink::mojom::blink::PublicKeyCredentialRpEntity" = type { %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.35" }
%"class.blink::PublicKeyCredentialRpEntity" = type { %"class.blink::PublicKeyCredentialEntity", %"class.WTF::String" }
%"class.mojo::StructPtr.55" = type { %"class.std::__1::unique_ptr.56" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* }
%"class.blink::mojom::blink::PublicKeyCredentialDescriptor" = type { i32, %"class.WTF::Vector", %"class.WTF::Vector.59" }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { i32*, i32, i32 }
%"class.blink::PublicKeyCredentialDescriptor" = type { %"class.blink::IDLDictionaryBase", i8, %"class.blink::ArrayBufferOrArrayBufferView", %"class.WTF::Vector.50", %"class.WTF::String" }
%"class.WTF::Vector.50" = type { %"class.WTF::VectorBuffer.51" }
%"class.WTF::VectorBuffer.51" = type { %"class.WTF::VectorBufferBase.52" }
%"class.WTF::VectorBufferBase.52" = type { %"class.WTF::String"*, i32, i32 }
%"class.absl::optional.14" = type { %"class.absl::optional_internal::optional_data.15" }
%"class.absl::optional_internal::optional_data.15" = type { %"class.absl::optional_internal::optional_data_base.16" }
%"class.absl::optional_internal::optional_data_base.16" = type { %"class.absl::optional_internal::optional_data_dtor_base.17" }
%"class.absl::optional_internal::optional_data_dtor_base.17" = type { i8, %union.anon.18 }
%union.anon.18 = type { i32 }
%"class.mojo::InlinedStructPtr.67" = type { %"class.blink::mojom::blink::PublicKeyCredentialParameters", i32 }
%"class.blink::mojom::blink::PublicKeyCredentialParameters" = type { i32, i32 }
%"class.blink::PublicKeyCredentialParameters" = type { %"class.blink::IDLDictionaryBase", i8, i32, %"class.WTF::String" }
%"class.mojo::StructPtr.106" = type { %"class.std::__1::unique_ptr.107" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::mojom::blink::PublicKeyCredentialCreationOptions"* }
%"class.blink::mojom::blink::PublicKeyCredentialCreationOptions" = type { %"class.mojo::StructPtr.43", %"class.mojo::StructPtr.31", %"class.WTF::Vector", %"class.WTF::Vector.110", %"class.absl::optional.115", %"class.WTF::Vector.120", %"class.mojo::InlinedStructPtr", i32, %"class.mojo::StructPtr.125", i8, i8, i32, i8, %"class.WTF::String", i8, i32, i8, %"class.absl::optional.132" }
%"class.WTF::Vector.110" = type { %"class.WTF::VectorBuffer.111" }
%"class.WTF::VectorBuffer.111" = type { %"class.WTF::VectorBufferBase.112" }
%"class.WTF::VectorBufferBase.112" = type { %"class.mojo::InlinedStructPtr.67"*, i32, i32 }
%"class.absl::optional.115" = type { %"class.absl::optional_internal::optional_data.116" }
%"class.absl::optional_internal::optional_data.116" = type { %"class.absl::optional_internal::optional_data_base.117" }
%"class.absl::optional_internal::optional_data_base.117" = type { %"class.absl::optional_internal::optional_data_dtor_base.118" }
%"class.absl::optional_internal::optional_data_dtor_base.118" = type { i8, %union.anon.119 }
%union.anon.119 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.WTF::Vector.120" = type { %"class.WTF::VectorBuffer.121" }
%"class.WTF::VectorBuffer.121" = type { %"class.WTF::VectorBufferBase.122" }
%"class.WTF::VectorBufferBase.122" = type { %"class.mojo::StructPtr.55"*, i32, i32 }
%"class.mojo::StructPtr.125" = type { %"class.std::__1::unique_ptr.126" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::mojom::blink::CableRegistration"* }
%"class.blink::mojom::blink::CableRegistration" = type { %"class.WTF::Vector", %"class.WTF::Vector" }
%"class.absl::optional.132" = type { %"class.absl::optional_internal::optional_data.133" }
%"class.absl::optional_internal::optional_data.133" = type { %"class.absl::optional_internal::optional_data_base.134" }
%"class.absl::optional_internal::optional_data_base.134" = type { %"class.absl::optional_internal::optional_data_dtor_base.135" }
%"class.absl::optional_internal::optional_data_dtor_base.135" = type { i8, %union.anon.136 }
%union.anon.136 = type { %"class.WTF::Vector" }
%"class.blink::PublicKeyCredentialCreationOptions" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, %"class.WTF::String", %"class.blink::Member.68", %"class.blink::ArrayBufferOrArrayBufferView", %"class.blink::HeapVector", %"class.blink::Member.78", %"class.blink::HeapVector.93", %"class.blink::Member.102", i32, %"class.blink::Member.104" }
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::AuthenticatorSelectionCriteria"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.72" }
%"class.WTF::Vector.72" = type { %"class.WTF::VectorBuffer.73" }
%"class.WTF::VectorBuffer.73" = type { %"class.WTF::VectorBufferBase.74" }
%"class.WTF::VectorBufferBase.74" = type { %"class.blink::Member.75"*, i32, i32 }
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::PublicKeyCredentialDescriptor"* }
%"class.blink::Member.78" = type { %"class.blink::MemberBase.79" }
%"class.blink::MemberBase.79" = type { %"class.blink::AuthenticationExtensionsClientInputs"* }
%"class.blink::AuthenticationExtensionsClientInputs" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.WTF::String", %"class.WTF::String", %"class.blink::HeapVector.80", %"class.blink::Member.89", %"class.blink::ArrayBufferOrArrayBufferView", i8, [7 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8], %"class.blink::Member.91", i8, [7 x i8] }>
%"class.blink::HeapVector.80" = type { %"class.WTF::Vector.83" }
%"class.WTF::Vector.83" = type { %"class.WTF::VectorBuffer.84" }
%"class.WTF::VectorBuffer.84" = type { %"class.WTF::VectorBufferBase.85" }
%"class.WTF::VectorBufferBase.85" = type { %"class.blink::Member.86"*, i32, i32 }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::CableAuthenticationData"* }
%"class.blink::CableAuthenticationData" = type <{ %"class.blink::IDLDictionaryBase", i8, [7 x i8], %"class.blink::ArrayBufferOrArrayBufferView", %"class.blink::ArrayBufferOrArrayBufferView", %"class.blink::ArrayBufferOrArrayBufferView", i8, [7 x i8] }>
%"class.blink::Member.89" = type { %"class.blink::MemberBase.90" }
%"class.blink::MemberBase.90" = type { %"class.blink::CableRegistrationData"* }
%"class.blink::CableRegistrationData" = type { %"class.blink::IDLDictionaryBase", i8, %"class.blink::ArrayBufferOrArrayBufferView", %"class.WTF::Vector" }
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::AuthenticationExtensionsLargeBlobInputs"* }
%"class.blink::AuthenticationExtensionsLargeBlobInputs" = type { %"class.blink::IDLDictionaryBase", i8, i8, %"class.WTF::String", %"class.blink::ArrayBufferOrArrayBufferView" }
%"class.blink::HeapVector.93" = type { %"class.WTF::Vector.96" }
%"class.WTF::Vector.96" = type { %"class.WTF::VectorBuffer.97" }
%"class.WTF::VectorBuffer.97" = type { %"class.WTF::VectorBufferBase.98" }
%"class.WTF::VectorBufferBase.98" = type { %"class.blink::Member.99"*, i32, i32 }
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::PublicKeyCredentialParameters"* }
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::PublicKeyCredentialRpEntity"* }
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::PublicKeyCredentialUserEntity"* }
%"class.mojo::StructPtr.140" = type { %"class.std::__1::unique_ptr.141" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::mojom::blink::CableAuthentication"* }
%"class.blink::mojom::blink::CableAuthentication" = type { i8, %"class.absl::optional.132", %"class.absl::optional.132", %"class.absl::optional.132", %"class.absl::optional.132" }
%"class.mojo::StructPtr.147" = type { %"class.std::__1::unique_ptr.148" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* }
%"class.blink::mojom::blink::PublicKeyCredentialRequestOptions" = type <{ i8, [7 x i8], %"class.WTF::Vector", %"class.absl::optional.115", %"class.WTF::String", %"class.WTF::Vector.120", i32, [4 x i8], %"class.WTF::String", %"class.WTF::Vector.151", i8, [7 x i8], %"class.WTF::Vector.156", i8, [7 x i8], %"class.absl::optional.132", i8, [7 x i8] }>
%"class.WTF::Vector.151" = type { %"class.WTF::VectorBuffer.152" }
%"class.WTF::VectorBuffer.152" = type { %"class.WTF::VectorBufferBase.153" }
%"class.WTF::VectorBufferBase.153" = type { %"class.mojo::StructPtr.140"*, i32, i32 }
%"class.WTF::Vector.156" = type { %"class.WTF::VectorBuffer.157" }
%"class.WTF::VectorBuffer.157" = type { %"class.WTF::VectorBufferBase.158" }
%"class.WTF::VectorBufferBase.158" = type { %"class.mojo::StructPtr.159"*, i32, i32 }
%"class.mojo::StructPtr.159" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::mojom::blink::PRFValues"* }
%"class.blink::mojom::blink::PRFValues" = type { %"class.absl::optional.132", %"class.WTF::Vector", %"class.absl::optional.132" }
%"class.blink::PublicKeyCredentialRequestOptions" = type { %"class.blink::IDLDictionaryBase", i8, i8, %"class.blink::HeapVector", %"class.blink::ArrayBufferOrArrayBufferView", %"class.blink::Member.78", %"class.WTF::String", i32, %"class.WTF::String" }

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j = comdat any

$_ZN4absl8optionalIN3WTF6StringEEaSIRKS2_vEERS3_OT_ = comdat any

$_ZN3WTF6VectorIN5blink5mojom22AuthenticatorTransportELj0ENS_18PartitionAllocatorEEaSESt16initializer_listIS3_E = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEEaSERKS2_ = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF6VectorIN5blink5mojom22AuthenticatorTransportELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom22AuthenticatorTransportEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEEEEmm = comdat any

@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str = private unnamed_addr constant [11 x i8] c"public-key\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"usb\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"nfc\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"ble\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"cable\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"internal\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"discouraged\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"preferred\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"required\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"indirect\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"direct\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"enterprise\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"platform\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"cross-platform\00", align 1
@.ref.tmp = private constant [5 x i32] [i32 0, i32 2, i32 1, i32 3, i32 4], align 4
@.str.15 = private unnamed_addr constant [25 x i8] c"userVerificationOptional\00", align 1
@.str.16 = private unnamed_addr constant [45 x i8] c"userVerificationOptionalWithCredentialIDList\00", align 1
@.str.17 = private unnamed_addr constant [25 x i8] c"userVerificationRequired\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.18 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.19 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.21 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.22 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom22AuthenticatorTransportEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::mojom::AuthenticatorTransport]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEEEEPKcv = private unnamed_addr constant [122 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::InlinedStructPtr<blink::mojom::blink::PublicKeyCredentialParameters>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEEEEPKcv = private unnamed_addr constant [115 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<blink::mojom::blink::PublicKeyCredentialDescriptor>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEEEEPKcv = private unnamed_addr constant [105 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<blink::mojom::blink::CableAuthentication>]\00", align 1
@switch.table._ZN4mojo13TypeConverterIN5blink5mojom22CredentialManagerErrorENS2_19AuthenticatorStatusEE7ConvertERKS4_ = private unnamed_addr constant [21 x i32] [i32 1, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 15, i32 12, i32 13, i32 14, i32 11, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink14CredentialInfoEEEPNS2_10CredentialEE7ConvertES8_(%"class.mojo::StructPtr"* noalias nocapture sret, %"class.blink::Credential"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 152) #12, !noalias !2
  %4 = bitcast i8* %3 to %"class.blink::mojom::blink::CredentialInfo"*
  tail call void @_ZN5blink5mojom5blink14CredentialInfoC1Ev(%"class.blink::mojom::blink::CredentialInfo"* nonnull %4) #13, !noalias !2
  %5 = ptrtoint i8* %3 to i64
  %6 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %5, i64* %6, align 8, !alias.scope !2
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = getelementptr inbounds %"class.blink::Credential", %"class.blink::Credential"* %1, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #13
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !5

25:                                               ; preds = %16
  tail call void @llvm.trap() #13
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %2
  %29 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %30 = bitcast i8* %7 to i64*
  %31 = bitcast i8* %7 to %"class.WTF::StringImpl"**
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %29, i64* %30, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #13
  br label %47

47:                                               ; preds = %28, %43, %46
  %48 = bitcast %"class.blink::Credential"* %1 to i1 (%"class.blink::Credential"*)***
  %49 = load i1 (%"class.blink::Credential"*)**, i1 (%"class.blink::Credential"*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::Credential"*)*, i1 (%"class.blink::Credential"*)** %49, i64 9
  %51 = load i1 (%"class.blink::Credential"*)*, i1 (%"class.blink::Credential"*)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::Credential"* %1) #13
  %53 = bitcast i8* %3 to i32*
  br i1 %52, label %54, label %158

54:                                               ; preds = %47
  store i32 1, i32* %53, align 8
  %55 = getelementptr inbounds %"class.blink::Credential", %"class.blink::Credential"* %1, i64 1
  %56 = getelementptr inbounds i8, i8* %3, i64 136
  %57 = bitcast %"class.blink::Credential"* %55 to %"class.WTF::StringImpl"**
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i33
  %69 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #13
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !5

74:                                               ; preds = %65
  tail call void @llvm.trap() #13
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4
  br label %77

77:                                               ; preds = %75, %60, %54
  %78 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  %79 = bitcast i8* %56 to i64*
  %80 = bitcast i8* %56 to %"class.WTF::StringImpl"**
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  store i64 %78, i64* %79, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #13
  br label %96

96:                                               ; preds = %77, %92, %95
  %97 = getelementptr inbounds %"class.blink::Credential", %"class.blink::Credential"* %1, i64 1, i32 0, i32 1
  %98 = getelementptr inbounds i8, i8* %3, i64 16
  %99 = bitcast %"class.blink::TraceWrapperV8Reference"* %97 to %"class.WTF::StringImpl"**
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %119, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %119

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i33
  %111 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %110, i33 1) #13
  %112 = extractvalue { i33, i1 } %111, 1
  %113 = extractvalue { i33, i1 } %111, 0
  %114 = icmp slt i33 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %117, !prof !5

116:                                              ; preds = %107
  tail call void @llvm.trap() #13
  unreachable

117:                                              ; preds = %107
  %118 = trunc i33 %113 to i32
  store i32 %118, i32* %108, align 4
  br label %119

119:                                              ; preds = %117, %102, %96
  %120 = ptrtoint %"class.WTF::StringImpl"* %100 to i64
  %121 = bitcast i8* %98 to i64*
  %122 = bitcast i8* %98 to %"class.WTF::StringImpl"**
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  store i64 %120, i64* %121, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #13
  br label %138

138:                                              ; preds = %119, %134, %137
  %139 = getelementptr inbounds %"class.blink::Credential", %"class.blink::Credential"* %1, i64 1, i32 1
  %140 = bitcast %"class.WTF::String"* %139 to %"class.blink::KURL"*
  %141 = getelementptr inbounds i8, i8* %3, i64 24
  %142 = bitcast i8* %141 to %"class.blink::KURL"*
  %143 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %142, %"class.blink::KURL"* dereferenceable(112) %140) #13
  %144 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin18CreateUniqueOpaqueEv() #13
  %145 = ptrtoint %"class.blink::SecurityOrigin"* %144 to i64
  %146 = getelementptr inbounds i8, i8* %3, i64 144
  %147 = bitcast i8* %146 to i64*
  %148 = bitcast i8* %146 to %"class.blink::SecurityOrigin"**
  %149 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %148, align 8
  store i64 %145, i64* %147, align 8
  %150 = icmp eq %"class.blink::SecurityOrigin"* %149, null
  br i1 %150, label %269, label %151

151:                                              ; preds = %138
  %152 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %149, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %152) #13
  %153 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %149, i64 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %269

156:                                              ; preds = %151
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %149) #13
  %157 = bitcast %"class.blink::SecurityOrigin"* %149 to i8*
  tail call void @free(i8* %157) #13
  br label %269

158:                                              ; preds = %47
  store i32 2, i32* %53, align 8
  %159 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %160 = getelementptr inbounds i8, i8* %3, i64 136
  %161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %159, i64 0, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %181, label %164

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %181

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = zext i32 %171 to i33
  %173 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %172, i33 1) #13
  %174 = extractvalue { i33, i1 } %173, 1
  %175 = extractvalue { i33, i1 } %173, 0
  %176 = icmp slt i33 %175, 0
  %177 = or i1 %174, %176
  br i1 %177, label %178, label %179, !prof !5

178:                                              ; preds = %169
  tail call void @llvm.trap() #13
  unreachable

179:                                              ; preds = %169
  %180 = trunc i33 %175 to i32
  store i32 %180, i32* %170, align 4
  br label %181

181:                                              ; preds = %179, %164, %158
  %182 = ptrtoint %"class.WTF::StringImpl"* %162 to i64
  %183 = bitcast i8* %160 to i64*
  %184 = bitcast i8* %160 to %"class.WTF::StringImpl"**
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  store i64 %182, i64* %183, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %200, label %187

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  br i1 %191, label %194, label %196

194:                                              ; preds = %187
  %195 = add i32 %193, -1
  store i32 %195, i32* %192, align 4
  br label %196

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %195, %194 ], [ %193, %187 ]
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %185) #13
  br label %200

200:                                              ; preds = %181, %196, %199
  %201 = getelementptr inbounds %"class.blink::Credential", %"class.blink::Credential"* %1, i64 1
  %202 = bitcast %"class.blink::Credential"* %201 to %"class.blink::SecurityOrigin"**
  %203 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %202, align 8
  %204 = icmp eq %"class.blink::SecurityOrigin"* %203, null
  br i1 %204, label %207, label %205

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %203, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %206) #13
  br label %207

207:                                              ; preds = %200, %205
  %208 = getelementptr inbounds i8, i8* %3, i64 144
  %209 = ptrtoint %"class.blink::SecurityOrigin"* %203 to i64
  %210 = bitcast i8* %208 to i64*
  %211 = bitcast i8* %208 to %"class.blink::SecurityOrigin"**
  %212 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %211, align 8
  store i64 %209, i64* %210, align 8
  %213 = icmp eq %"class.blink::SecurityOrigin"* %212, null
  br i1 %213, label %221, label %214

214:                                              ; preds = %207
  %215 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %212, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %215) #13
  %216 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %212, i64 0, i32 0, i32 0, i32 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %221

219:                                              ; preds = %214
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %212) #13
  %220 = bitcast %"class.blink::SecurityOrigin"* %212 to i8*
  tail call void @free(i8* %220) #13
  br label %221

221:                                              ; preds = %207, %214, %219
  %222 = getelementptr inbounds %"class.blink::Credential", %"class.blink::Credential"* %1, i64 1, i32 0, i32 1
  %223 = getelementptr inbounds i8, i8* %3, i64 16
  %224 = bitcast %"class.blink::TraceWrapperV8Reference"* %222 to %"class.WTF::StringImpl"**
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  %226 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %226, label %244, label %227

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %244

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = zext i32 %234 to i33
  %236 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %235, i33 1) #13
  %237 = extractvalue { i33, i1 } %236, 1
  %238 = extractvalue { i33, i1 } %236, 0
  %239 = icmp slt i33 %238, 0
  %240 = or i1 %237, %239
  br i1 %240, label %241, label %242, !prof !5

241:                                              ; preds = %232
  tail call void @llvm.trap() #13
  unreachable

242:                                              ; preds = %232
  %243 = trunc i33 %238 to i32
  store i32 %243, i32* %233, align 4
  br label %244

244:                                              ; preds = %242, %227, %221
  %245 = ptrtoint %"class.WTF::StringImpl"* %225 to i64
  %246 = bitcast i8* %223 to i64*
  %247 = bitcast i8* %223 to %"class.WTF::StringImpl"**
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  store i64 %245, i64* %246, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %248, null
  br i1 %249, label %263, label %250

250:                                              ; preds = %244
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 0
  %256 = load i32, i32* %255, align 4
  br i1 %254, label %257, label %259

257:                                              ; preds = %250
  %258 = add i32 %256, -1
  store i32 %258, i32* %255, align 4
  br label %259

259:                                              ; preds = %257, %250
  %260 = phi i32 [ %258, %257 ], [ %256, %250 ]
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %259
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %248) #13
  br label %263

263:                                              ; preds = %244, %259, %262
  %264 = getelementptr inbounds %"class.blink::Credential", %"class.blink::Credential"* %1, i64 1, i32 1
  %265 = bitcast %"class.WTF::String"* %264 to %"class.blink::KURL"*
  %266 = getelementptr inbounds i8, i8* %3, i64 24
  %267 = bitcast i8* %266 to %"class.blink::KURL"*
  %268 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %267, %"class.blink::KURL"* dereferenceable(112) %265) #13
  br label %269

269:                                              ; preds = %138, %151, %156, %263
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin18CreateUniqueOpaqueEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Credential"* @_ZN4mojo13TypeConverterIPN5blink10CredentialENS_9StructPtrINS1_5mojom5blink14CredentialInfoEEEE7ConvertERKS8_(%"class.mojo::StructPtr"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::mojom::blink::CredentialInfo"*, %"class.blink::mojom::blink::CredentialInfo"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::CredentialInfo", %"class.blink::mojom::blink::CredentialInfo"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %27 [
    i32 2, label %6
    i32 1, label %20
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::mojom::blink::CredentialInfo", %"class.blink::mojom::blink::CredentialInfo"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::CredentialInfo", %"class.blink::mojom::blink::CredentialInfo"* %3, i64 0, i32 5, i32 0
  %9 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %8, align 8
  %10 = icmp eq %"class.blink::SecurityOrigin"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %9, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %12) #13
  %13 = load %"class.blink::mojom::blink::CredentialInfo"*, %"class.blink::mojom::blink::CredentialInfo"** %2, align 8
  br label %14

14:                                               ; preds = %6, %11
  %15 = phi %"class.blink::mojom::blink::CredentialInfo"* [ %3, %6 ], [ %13, %11 ]
  %16 = getelementptr inbounds %"class.blink::mojom::blink::CredentialInfo", %"class.blink::mojom::blink::CredentialInfo"* %15, i64 0, i32 2
  %17 = getelementptr inbounds %"class.blink::mojom::blink::CredentialInfo", %"class.blink::mojom::blink::CredentialInfo"* %15, i64 0, i32 3
  %18 = tail call %"class.blink::FederatedCredential"* @_ZN5blink19FederatedCredential6CreateERKN3WTF6StringE13scoped_refptrIKNS_14SecurityOriginEES4_RKNS_4KURLE(%"class.WTF::String"* dereferenceable(8) %7, %"class.blink::SecurityOrigin"* %9, %"class.WTF::String"* dereferenceable(8) %16, %"class.blink::KURL"* dereferenceable(112) %17) #13
  %19 = getelementptr inbounds %"class.blink::FederatedCredential", %"class.blink::FederatedCredential"* %18, i64 0, i32 0
  br label %27

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.blink::mojom::blink::CredentialInfo", %"class.blink::mojom::blink::CredentialInfo"* %3, i64 0, i32 1
  %22 = getelementptr inbounds %"class.blink::mojom::blink::CredentialInfo", %"class.blink::mojom::blink::CredentialInfo"* %3, i64 0, i32 4
  %23 = getelementptr inbounds %"class.blink::mojom::blink::CredentialInfo", %"class.blink::mojom::blink::CredentialInfo"* %3, i64 0, i32 2
  %24 = getelementptr inbounds %"class.blink::mojom::blink::CredentialInfo", %"class.blink::mojom::blink::CredentialInfo"* %3, i64 0, i32 3
  %25 = tail call %"class.blink::PasswordCredential"* @_ZN5blink18PasswordCredential6CreateERKN3WTF6StringES4_S4_RKNS_4KURLE(%"class.WTF::String"* dereferenceable(8) %21, %"class.WTF::String"* dereferenceable(8) %22, %"class.WTF::String"* dereferenceable(8) %23, %"class.blink::KURL"* dereferenceable(112) %24) #13
  %26 = getelementptr inbounds %"class.blink::PasswordCredential", %"class.blink::PasswordCredential"* %25, i64 0, i32 0
  br label %27

27:                                               ; preds = %1, %20, %14
  %28 = phi %"class.blink::Credential"* [ %26, %20 ], [ %19, %14 ], [ null, %1 ]
  ret %"class.blink::Credential"* %28
}

declare %"class.blink::FederatedCredential"* @_ZN5blink19FederatedCredential6CreateERKN3WTF6StringE13scoped_refptrIKNS_14SecurityOriginEES4_RKNS_4KURLE(%"class.WTF::String"* dereferenceable(8), %"class.blink::SecurityOrigin"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare %"class.blink::PasswordCredential"* @_ZN5blink18PasswordCredential6CreateERKN3WTF6StringES4_S4_RKNS_4KURLE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN4mojo13TypeConverterIN5blink5mojom22CredentialManagerErrorENS2_19AuthenticatorStatusEE7ConvertERKS4_(i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %2 = load i32, i32* %0, align 4
  %3 = add i32 %2, -1
  %4 = icmp ult i32 %3, 21
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZN4mojo13TypeConverterIN5blink5mojom22CredentialManagerErrorENS2_19AuthenticatorStatusEE7ConvertERKS4_, i64 0, i64 %6
  %8 = load i32, i32* %7, align 4
  ret i32 %8

9:                                                ; preds = %1
  ret i32 22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo21ConvertFixedSizeArrayERKN5blink28ArrayBufferOrArrayBufferViewEj(%"class.WTF::Vector"* noalias sret, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24), i32) local_unnamed_addr #0 {
  %4 = alloca %"class.blink::NotShared", align 8
  %5 = getelementptr inbounds %"class.blink::ArrayBufferOrArrayBufferView", %"class.blink::ArrayBufferOrArrayBufferView"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = tail call %"class.blink::DOMArrayBuffer"* @_ZNK5blink28ArrayBufferOrArrayBufferView16GetAsArrayBufferEv(%"class.blink::ArrayBufferOrArrayBufferView"* %1) #13
  %10 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %11) #13
  br label %15

15:                                               ; preds = %8, %13
  %16 = phi i64 [ %14, %13 ], [ 0, %8 ]
  %17 = zext i32 %2 to i64
  %18 = icmp eq i64 %16, %17
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #13
  br label %41

21:                                               ; preds = %15
  %22 = load i32, i32* %5, align 8
  br label %23

23:                                               ; preds = %21, %3
  %24 = phi i32 [ %22, %21 ], [ %6, %3 ]
  %25 = icmp eq i32 %24, 2
  %26 = bitcast %"class.blink::NotShared"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  br i1 %25, label %27, label %39

27:                                               ; preds = %23
  call void @_ZNK5blink28ArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv(%"class.blink::NotShared"* nonnull sret %4, %"class.blink::ArrayBufferOrArrayBufferView"* %1) #13
  %28 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %28, align 8
  %30 = bitcast %"class.blink::DOMArrayBufferView"* %29 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %31 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %30, align 8
  %32 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %31, i64 10
  %33 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %32, align 8
  %34 = call i64 %33(%"class.blink::DOMArrayBufferView"* %29) #13
  %35 = zext i32 %2 to i64
  %36 = icmp eq i64 %34, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br i1 %36, label %40, label %37

37:                                               ; preds = %27
  %38 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #13
  br label %41

39:                                               ; preds = %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br label %40

40:                                               ; preds = %27, %39
  call void @_ZN4mojo13TypeConverterIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEN5blink28ArrayBufferOrArrayBufferViewEE7ConvertERKS6_(%"class.WTF::Vector"* sret %0, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24) %1) #13
  br label %41

41:                                               ; preds = %40, %37, %19
  ret void
}

declare %"class.blink::DOMArrayBuffer"* @_ZNK5blink28ArrayBufferOrArrayBufferView16GetAsArrayBufferEv(%"class.blink::ArrayBufferOrArrayBufferView"*) local_unnamed_addr #2

declare void @_ZNK5blink28ArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv(%"class.blink::NotShared"* sret, %"class.blink::ArrayBufferOrArrayBufferView"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEN5blink28ArrayBufferOrArrayBufferViewEE7ConvertERKS6_(%"class.WTF::Vector"* noalias sret, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NotShared", align 8
  %4 = alloca %"class.blink::NotShared", align 8
  %5 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #13
  %6 = getelementptr inbounds %"class.blink::ArrayBufferOrArrayBufferView", %"class.blink::ArrayBufferOrArrayBufferView"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %29

9:                                                ; preds = %2
  %10 = tail call %"class.blink::DOMArrayBuffer"* @_ZNK5blink28ArrayBufferOrArrayBufferView16GetAsArrayBufferEv(%"class.blink::ArrayBufferOrArrayBufferView"* %1) #13
  %11 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %11, align 8
  %13 = icmp eq %"class.v8::BackingStore"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %12) #13
  br label %16

16:                                               ; preds = %9, %14
  %17 = phi i8* [ %15, %14 ], [ null, %9 ]
  %18 = tail call %"class.blink::DOMArrayBuffer"* @_ZNK5blink28ArrayBufferOrArrayBufferView16GetAsArrayBufferEv(%"class.blink::ArrayBufferOrArrayBufferView"* %1) #13
  %19 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %19, align 8
  %21 = icmp eq %"class.v8::BackingStore"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %16
  %23 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %20) #13
  %24 = icmp ult i64 %23, 4294967296
  br i1 %24, label %26, label %25, !prof !6

25:                                               ; preds = %22
  tail call void @llvm.trap() #13
  unreachable

26:                                               ; preds = %16, %22
  %27 = phi i64 [ %23, %22 ], [ 0, %16 ]
  %28 = trunc i64 %27 to i32
  tail call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector"* %0, i8* %17, i32 %28)
  br label %55

29:                                               ; preds = %2
  %30 = bitcast %"class.blink::NotShared"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  call void @_ZNK5blink28ArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv(%"class.blink::NotShared"* nonnull sret %3, %"class.blink::ArrayBufferOrArrayBufferView"* %1) #13
  %31 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %3, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %32, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %34, i64 0, i32 2
  %36 = load i8, i8* %35, align 8, !range !7
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %32, i64 0, i32 1
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %29, %38
  %42 = phi i8* [ %40, %38 ], [ null, %29 ]
  %43 = bitcast %"class.blink::NotShared"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  call void @_ZNK5blink28ArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv(%"class.blink::NotShared"* nonnull sret %4, %"class.blink::ArrayBufferOrArrayBufferView"* %1) #13
  %44 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %4, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %44, align 8
  %46 = bitcast %"class.blink::DOMArrayBufferView"* %45 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %47 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %46, align 8
  %48 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %47, i64 10
  %49 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %48, align 8
  %50 = call i64 %49(%"class.blink::DOMArrayBufferView"* %45) #13
  %51 = icmp ult i64 %50, 4294967296
  br i1 %51, label %53, label %52, !prof !6

52:                                               ; preds = %41
  call void @llvm.trap() #13
  unreachable

53:                                               ; preds = %41
  %54 = trunc i64 %50 to i32
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector"* %0, i8* %42, i32 %54)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  br label %55

55:                                               ; preds = %26, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !6

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %32) #13
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !6

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #13
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #13
  %50 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !6

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %66) #13
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %67, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !6

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #13
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #13
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #13
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i8* %96, i8* %97) #13
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #13
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #13
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #13
  %105 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !6

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #13
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4mojo13TypeConverterIN5blink5mojom23PublicKeyCredentialTypeEN3WTF6StringEE7ConvertERKS5_(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %9, align 8
  %10 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %11 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %10, i64* %11, align 8
  br label %20

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %18 = bitcast i8** %17 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %18, align 8
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %20

20:                                               ; preds = %12, %8
  %21 = phi i64 [ %19, %12 ], [ %10, %8 ]
  %22 = phi i32 [ %15, %12 ], [ 0, %8 ]
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %22, i32* %23, align 8
  %24 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %25 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %21, i64* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 10, i32* %27, align 8
  %28 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4mojo13TypeConverterIN4absl8optionalIN5blink5mojom22AuthenticatorTransportEEEN3WTF6StringEE7ConvertERKS8_(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %17, align 8
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %18, i64* %19, align 8
  br label %28

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %26, align 8
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %28

28:                                               ; preds = %20, %16
  %29 = phi i64 [ %27, %20 ], [ %18, %16 ]
  %30 = phi i32 [ %23, %20 ], [ 0, %16 ]
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %30, i32* %31, align 8
  %32 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #13
  %33 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %29, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 3, i32* %35, align 8
  %36 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #13
  br i1 %36, label %138, label %37

37:                                               ; preds = %28
  %38 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %42, align 8
  %43 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %44 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %43, i64* %44, align 8
  br label %53

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %51 = bitcast i8** %50 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %51, align 8
  %52 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %53

53:                                               ; preds = %45, %41
  %54 = phi i64 [ %52, %45 ], [ %43, %41 ]
  %55 = phi i32 [ %48, %45 ], [ 0, %41 ]
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %55, i32* %56, align 8
  %57 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #13
  %58 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %54, i64* %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %59, align 8
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 3, i32* %60, align 8
  %61 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13
  br i1 %61, label %138, label %62

62:                                               ; preds = %53
  %63 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #13
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %66, label %70

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %67, align 8
  %68 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %69 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %68, i64* %69, align 8
  br label %78

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %76 = bitcast i8** %75 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %76, align 8
  %77 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %78

78:                                               ; preds = %70, %66
  %79 = phi i64 [ %77, %70 ], [ %68, %66 ]
  %80 = phi i32 [ %73, %70 ], [ 0, %66 ]
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %80, i32* %81, align 8
  %82 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #13
  %83 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %79, i64* %83, align 8
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8** %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 3, i32* %85, align 8
  %86 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #13
  br i1 %86, label %138, label %87

87:                                               ; preds = %78
  %88 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #13
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %95

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %92, align 8
  %93 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %94 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %93, i64* %94, align 8
  br label %103

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"** %96, align 8
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %101 = bitcast i8** %100 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %101, align 8
  %102 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

103:                                              ; preds = %95, %91
  %104 = phi i64 [ %102, %95 ], [ %93, %91 ]
  %105 = phi i32 [ %98, %95 ], [ 0, %91 ]
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %105, i32* %106, align 8
  %107 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #13
  %108 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %104, i64* %108, align 8
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8** %109, align 8
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 5, i32* %110, align 8
  %111 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #13
  br i1 %111, label %138, label %112

112:                                              ; preds = %103
  %113 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #13
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %116, label %120

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %117, align 8
  %118 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %119 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %118, i64* %119, align 8
  br label %128

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %121, align 8
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 1
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %126 = bitcast i8** %125 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %126, align 8
  %127 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %128

128:                                              ; preds = %120, %116
  %129 = phi i64 [ %127, %120 ], [ %118, %116 ]
  %130 = phi i32 [ %123, %120 ], [ 0, %116 ]
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %130, i32* %131, align 8
  %132 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #13
  %133 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %129, i64* %133, align 8
  %134 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i8** %134, align 8
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 8, i32* %135, align 8
  %136 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #13
  %137 = zext i1 %136 to i64
  br label %138

138:                                              ; preds = %128, %103, %78, %53, %28
  %139 = phi i64 [ 1, %28 ], [ 1, %53 ], [ 1, %78 ], [ 1, %103 ], [ %137, %128 ]
  %140 = phi i64 [ 0, %28 ], [ 4294967296, %53 ], [ 8589934592, %78 ], [ 12884901888, %103 ], [ 17179869184, %128 ]
  %141 = or i64 %140, %139
  ret i64 %141
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN4mojo13TypeConverterIN3WTF6StringEN5blink5mojom22AuthenticatorTransportEE7ConvertERKS5_(i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = load i32, i32* %0, align 4
  switch i32 %3, label %9 [
    i32 0, label %4
    i32 1, label %5
    i32 2, label %6
    i32 3, label %7
    i32 4, label %8
  ]

4:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3) #13
  br label %10

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3) #13
  br label %10

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3) #13
  br label %10

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 5) #13
  br label %10

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i64 8) #13
  br label %10

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3) #13
  br label %10

10:                                               ; preds = %9, %8, %7, %6, %5, %4
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  ret %"class.WTF::StringImpl"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4mojo13TypeConverterIN4absl8optionalIN5blink5mojom22ResidentKeyRequirementEEEN3WTF6StringEE7ConvertERKS8_(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %13, align 8
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %15 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %14, i64* %15, align 8
  br label %24

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %22 = bitcast i8** %21 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %22, align 8
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %24

24:                                               ; preds = %16, %12
  %25 = phi i64 [ %23, %16 ], [ %14, %12 ]
  %26 = phi i32 [ %19, %16 ], [ 0, %12 ]
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %26, i32* %27, align 8
  %28 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #13
  %29 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8** %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 11, i32* %31, align 8
  %32 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #13
  br i1 %32, label %84, label %33

33:                                               ; preds = %24
  %34 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #13
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %38, align 8
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %39, i64* %40, align 8
  br label %49

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %47 = bitcast i8** %46 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %47, align 8
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %49

49:                                               ; preds = %41, %37
  %50 = phi i64 [ %48, %41 ], [ %39, %37 ]
  %51 = phi i32 [ %44, %41 ], [ 0, %37 ]
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %51, i32* %52, align 8
  %53 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #13
  %54 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %50, i64* %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i8** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 9, i32* %56, align 8
  %57 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #13
  br i1 %57, label %84, label %58

58:                                               ; preds = %49
  %59 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #13
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %63, align 8
  %64 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %65 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %64, i64* %65, align 8
  br label %74

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 1
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %72 = bitcast i8** %71 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %72, align 8
  %73 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %74

74:                                               ; preds = %66, %62
  %75 = phi i64 [ %73, %66 ], [ %64, %62 ]
  %76 = phi i32 [ %69, %66 ], [ 0, %62 ]
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %76, i32* %77, align 8
  %78 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #13
  %79 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %75, i64* %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i8** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 8, i32* %81, align 8
  %82 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #13
  %83 = zext i1 %82 to i64
  br label %84

84:                                               ; preds = %74, %49, %24
  %85 = phi i64 [ 1, %24 ], [ 1, %49 ], [ %83, %74 ]
  %86 = phi i64 [ 0, %24 ], [ 4294967296, %49 ], [ 8589934592, %74 ]
  %87 = or i64 %86, %85
  ret i64 %87
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4mojo13TypeConverterIN5blink5mojom27UserVerificationRequirementEN3WTF6StringEE7ConvertERKS5_(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %13, align 8
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %15 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %14, i64* %15, align 8
  br label %24

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %22 = bitcast i8** %21 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %22, align 8
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %24

24:                                               ; preds = %16, %12
  %25 = phi i64 [ %23, %16 ], [ %14, %12 ]
  %26 = phi i32 [ %19, %16 ], [ 0, %12 ]
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %26, i32* %27, align 8
  %28 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #13
  %29 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i8** %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 8, i32* %31, align 8
  %32 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #13
  br i1 %32, label %84, label %33

33:                                               ; preds = %24
  %34 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #13
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %38, align 8
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %39, i64* %40, align 8
  br label %49

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %47 = bitcast i8** %46 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %47, align 8
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %49

49:                                               ; preds = %41, %37
  %50 = phi i64 [ %48, %41 ], [ %39, %37 ]
  %51 = phi i32 [ %44, %41 ], [ 0, %37 ]
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %51, i32* %52, align 8
  %53 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #13
  %54 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %50, i64* %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i8** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 9, i32* %56, align 8
  %57 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #13
  br i1 %57, label %84, label %58

58:                                               ; preds = %49
  %59 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #13
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %63, align 8
  %64 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %65 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %64, i64* %65, align 8
  br label %74

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 1
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %72 = bitcast i8** %71 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %72, align 8
  %73 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %74

74:                                               ; preds = %66, %62
  %75 = phi i64 [ %73, %66 ], [ %64, %62 ]
  %76 = phi i32 [ %69, %66 ], [ 0, %62 ]
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %76, i32* %77, align 8
  %78 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #13
  %79 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %75, i64* %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 11, i32* %81, align 8
  %82 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #13
  %83 = select i1 %82, i32 2, i32 1
  br label %84

84:                                               ; preds = %74, %49, %24
  %85 = phi i32 [ 0, %24 ], [ 1, %49 ], [ %83, %74 ]
  ret i32 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4mojo13TypeConverterIN5blink5mojom31AttestationConveyancePreferenceEN3WTF6StringEE7ConvertERKS5_(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %15, align 8
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %16, i64* %17, align 8
  br label %26

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %24, align 8
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %26

26:                                               ; preds = %18, %14
  %27 = phi i64 [ %25, %18 ], [ %16, %14 ]
  %28 = phi i32 [ %21, %18 ], [ 0, %14 ]
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %28, i32* %29, align 8
  %30 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #13
  %31 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %27, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 4, i32* %33, align 8
  %34 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  br i1 %34, label %111, label %35

35:                                               ; preds = %26
  %36 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #13
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %40, align 8
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %41, i64* %42, align 8
  br label %51

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 1
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %49 = bitcast i8** %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %49, align 8
  %50 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %51

51:                                               ; preds = %43, %39
  %52 = phi i64 [ %50, %43 ], [ %41, %39 ]
  %53 = phi i32 [ %46, %43 ], [ 0, %39 ]
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %53, i32* %54, align 8
  %55 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #13
  %56 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %52, i64* %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i8** %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 8, i32* %58, align 8
  %59 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #13
  br i1 %59, label %111, label %60

60:                                               ; preds = %51
  %61 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #13
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %65, align 8
  %66 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %67 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %66, i64* %67, align 8
  br label %76

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %74 = bitcast i8** %73 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %74, align 8
  %75 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %76

76:                                               ; preds = %68, %64
  %77 = phi i64 [ %75, %68 ], [ %66, %64 ]
  %78 = phi i32 [ %71, %68 ], [ 0, %64 ]
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %78, i32* %79, align 8
  %80 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #13
  %81 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %77, i64* %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i8** %82, align 8
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 6, i32* %83, align 8
  %84 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #13
  br i1 %84, label %111, label %85

85:                                               ; preds = %76
  %86 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #13
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %90, align 8
  %91 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %92 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %91, i64* %92, align 8
  br label %101

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %94, align 8
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 1
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %99 = bitcast i8** %98 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %99, align 8
  %100 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %101

101:                                              ; preds = %93, %89
  %102 = phi i64 [ %100, %93 ], [ %91, %89 ]
  %103 = phi i32 [ %96, %93 ], [ 0, %89 ]
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %103, i32* %104, align 8
  %105 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #13
  %106 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %102, i64* %106, align 8
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8** %107, align 8
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 10, i32* %108, align 8
  %109 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #13
  %110 = select i1 %109, i32 3, i32 0
  br label %111

111:                                              ; preds = %101, %76, %51, %26
  %112 = phi i32 [ 0, %26 ], [ 1, %51 ], [ 2, %76 ], [ %110, %101 ]
  ret i32 %112
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4mojo13TypeConverterIN5blink5mojom23AuthenticatorAttachmentEN4absl8optionalIN3WTF6StringEEEE7ConvertERKS8_(%"class.absl::optional.24"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %15, align 8
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %16, i64* %17, align 8
  br label %26

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %24, align 8
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %26

26:                                               ; preds = %18, %14
  %27 = phi i64 [ %25, %18 ], [ %16, %14 ]
  %28 = phi i32 [ %21, %18 ], [ 0, %14 ]
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %28, i32* %29, align 8
  %30 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #13
  %31 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %27, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 8, i32* %33, align 8
  %34 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  br i1 %34, label %65, label %35

35:                                               ; preds = %26
  %36 = load i8, i8* %6, align 8, !range !7
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #14
  unreachable

39:                                               ; preds = %35
  %40 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #13
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %44, align 8
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %46 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %45, i64* %46, align 8
  br label %55

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 1
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %53 = bitcast i8** %52 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %53, align 8
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %55

55:                                               ; preds = %47, %43
  %56 = phi i64 [ %54, %47 ], [ %45, %43 ]
  %57 = phi i32 [ %50, %47 ], [ 0, %43 ]
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %57, i32* %58, align 8
  %59 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #13
  %60 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %56, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i8** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 14, i32* %62, align 8
  %63 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #13
  %64 = select i1 %63, i32 2, i32 0
  br label %65

65:                                               ; preds = %1, %55, %26
  %66 = phi i32 [ 0, %1 ], [ 1, %26 ], [ %64, %55 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4mojo13TypeConverterIN5blink5mojom16LargeBlobSupportEN4absl8optionalIN3WTF6StringEEEE7ConvertERKS8_(%"class.absl::optional.24"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %64, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %15, align 8
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %16, i64* %17, align 8
  br label %26

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %24, align 8
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %26

26:                                               ; preds = %18, %14
  %27 = phi i64 [ %25, %18 ], [ %16, %14 ]
  %28 = phi i32 [ %21, %18 ], [ 0, %14 ]
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %28, i32* %29, align 8
  %30 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #13
  %31 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %27, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 8, i32* %33, align 8
  %34 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  br i1 %34, label %64, label %35

35:                                               ; preds = %26
  %36 = load i8, i8* %6, align 8, !range !7
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %39, !prof !5

38:                                               ; preds = %35
  call void @llvm.trap() #13
  unreachable

39:                                               ; preds = %35
  %40 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #13
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %44, align 8
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %46 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %45, i64* %46, align 8
  br label %55

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 1
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %53 = bitcast i8** %52 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %53, align 8
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %55

55:                                               ; preds = %47, %43
  %56 = phi i64 [ %54, %47 ], [ %45, %43 ]
  %57 = phi i32 [ %50, %47 ], [ 0, %43 ]
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %57, i32* %58, align 8
  %59 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #13
  %60 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %56, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i8** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 9, i32* %62, align 8
  %63 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #13
  ret i32 2

64:                                               ; preds = %1, %26
  %65 = phi i32 [ 1, %26 ], [ 2, %1 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterINS_16InlinedStructPtrIN5blink5mojom5blink30AuthenticatorSelectionCriteriaEEENS2_30AuthenticatorSelectionCriteriaEE7ConvertERKS7_(%"class.mojo::InlinedStructPtr"* noalias sret, %"class.blink::AuthenticatorSelectionCriteria"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.24", align 8
  %4 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %0, i64 0, i32 0, i32 2
  %7 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %0, i64 0, i32 0
  %9 = bitcast %"class.mojo::InlinedStructPtr"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 -86, i64 16, i1 false)
  tail call void @_ZN5blink5mojom5blink30AuthenticatorSelectionCriteriaC1Ev(%"class.blink::mojom::blink::AuthenticatorSelectionCriteria"* %8) #13
  store i32 1, i32* %7, align 4, !alias.scope !8
  %10 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.blink::AuthenticatorSelectionCriteria", %"class.blink::AuthenticatorSelectionCriteria"* %1, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::AuthenticatorSelectionCriteria", %"class.blink::AuthenticatorSelectionCriteria"* %1, i64 0, i32 2
  %16 = call dereferenceable(16) %"class.absl::optional.24"* @_ZN4absl8optionalIN3WTF6StringEEaSIRKS2_vEERS3_OT_(%"class.absl::optional.24"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %15)
  br label %17

17:                                               ; preds = %2, %14
  %18 = call i32 @_ZN4mojo13TypeConverterIN5blink5mojom23AuthenticatorAttachmentEN4absl8optionalIN3WTF6StringEEEE7ConvertERKS8_(%"class.absl::optional.24"* nonnull dereferenceable(16) %3) #13
  store i32 %18, i32* %4, align 4
  %19 = getelementptr inbounds %"class.blink::AuthenticatorSelectionCriteria", %"class.blink::AuthenticatorSelectionCriteria"* %1, i64 0, i32 4, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::AuthenticatorSelectionCriteria", %"class.blink::AuthenticatorSelectionCriteria"* %1, i64 0, i32 4
  %24 = call i64 @_ZN4mojo13TypeConverterIN4absl8optionalIN5blink5mojom22ResidentKeyRequirementEEEN3WTF6StringEE7ConvertERKS8_(%"class.WTF::String"* dereferenceable(8) %23) #13
  %25 = trunc i64 %24 to i8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = lshr i64 %24, 32
  %29 = trunc i64 %28 to i32
  br label %35

30:                                               ; preds = %22, %17
  %31 = getelementptr inbounds %"class.blink::AuthenticatorSelectionCriteria", %"class.blink::AuthenticatorSelectionCriteria"* %1, i64 0, i32 3
  %32 = load i8, i8* %31, align 8, !range !7
  %33 = icmp eq i8 %32, 0
  %34 = select i1 %33, i32 0, i32 2
  br label %35

35:                                               ; preds = %30, %27
  %36 = phi i32 [ %29, %27 ], [ %34, %30 ]
  store i32 %36, i32* %5, align 4
  store i32 1, i32* %6, align 4
  %37 = getelementptr inbounds %"class.blink::AuthenticatorSelectionCriteria", %"class.blink::AuthenticatorSelectionCriteria"* %1, i64 0, i32 5, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::AuthenticatorSelectionCriteria", %"class.blink::AuthenticatorSelectionCriteria"* %1, i64 0, i32 5
  %42 = call i32 @_ZN4mojo13TypeConverterIN5blink5mojom27UserVerificationRequirementEN3WTF6StringEE7ConvertERKS5_(%"class.WTF::String"* dereferenceable(8) %41) #13
  store i32 %42, i32* %6, align 4
  br label %43

43:                                               ; preds = %35, %40
  %44 = load i8, i8* %10, align 8, !range !7
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %64, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #13
  br label %63

63:                                               ; preds = %62, %59, %46
  store i8 0, i8* %10, align 8
  br label %64

64:                                               ; preds = %43, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.absl::optional.24"* @_ZN4absl8optionalIN3WTF6StringEEaSIRKS2_vEERS3_OT_(%"class.absl::optional.24"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !7
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %47, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #13
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !5

25:                                               ; preds = %16
  tail call void @llvm.trap() #13
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %6
  %29 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %30 = bitcast %"class.WTF::String"* %7 to i64*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %29, i64* %30, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %70, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %70

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #13
  br label %70

47:                                               ; preds = %2
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %50, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %51, label %69, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i33
  %61 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #13
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !5

66:                                               ; preds = %57
  tail call void @llvm.trap() #13
  unreachable

67:                                               ; preds = %57
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %58, align 4
  br label %69

69:                                               ; preds = %67, %52, %47
  store i8 1, i8* %3, align 8
  br label %70

70:                                               ; preds = %46, %43, %28, %69
  ret %"class.absl::optional.24"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink29PublicKeyCredentialUserEntityEEENS2_29PublicKeyCredentialUserEntityEE7ConvertERKS7_(%"class.mojo::StructPtr.31"* noalias nocapture sret, %"class.blink::PublicKeyCredentialUserEntity"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = tail call i8* @_Znwm(i64 152) #12, !noalias !11
  %7 = bitcast i8* %6 to %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"*
  tail call void @_ZN5blink5mojom5blink29PublicKeyCredentialUserEntityC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialUserEntity"* nonnull %7) #13, !noalias !11
  %8 = ptrtoint i8* %6 to i64
  %9 = bitcast %"class.mojo::StructPtr.31"* %0 to i64*
  store i64 %8, i64* %9, align 8, !alias.scope !11
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  %11 = getelementptr inbounds %"class.blink::PublicKeyCredentialUserEntity", %"class.blink::PublicKeyCredentialUserEntity"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #13
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !5

28:                                               ; preds = %19
  tail call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %29, %14, %2
  %32 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %33 = bitcast i8* %10 to i64*
  %34 = bitcast i8* %10 to %"class.WTF::StringImpl"**
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %32, i64* %33, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #13
  br label %50

50:                                               ; preds = %31, %46, %49
  %51 = getelementptr inbounds %"class.blink::PublicKeyCredentialUserEntity", %"class.blink::PublicKeyCredentialUserEntity"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %82, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %68

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %59) #13
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #13
  %60 = getelementptr inbounds i8, i8* %6, i64 24
  %61 = load i8, i8* %60, align 8, !range !7
  %62 = icmp eq i8 %61, 0
  %63 = getelementptr inbounds i8, i8* %6, i64 32
  %64 = bitcast i8* %63 to %"class.blink::KURL"*
  br i1 %62, label %67, label %65

65:                                               ; preds = %58
  %66 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %64, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #13
  br label %79

67:                                               ; preds = %58
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %64, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #13
  store i8 1, i8* %60, align 8
  br label %79

68:                                               ; preds = %54
  %69 = getelementptr inbounds %"class.blink::PublicKeyCredentialUserEntity", %"class.blink::PublicKeyCredentialUserEntity"* %1, i64 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %70) #13
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %69) #13
  %71 = getelementptr inbounds i8, i8* %6, i64 24
  %72 = load i8, i8* %71, align 8, !range !7
  %73 = icmp eq i8 %72, 0
  %74 = getelementptr inbounds i8, i8* %6, i64 32
  %75 = bitcast i8* %74 to %"class.blink::KURL"*
  br i1 %73, label %78, label %76

76:                                               ; preds = %68
  %77 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %75, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #13
  br label %79

78:                                               ; preds = %68
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %75, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #13
  store i8 1, i8* %71, align 8
  br label %79

79:                                               ; preds = %78, %76, %67, %65
  %80 = phi %"class.blink::KURL"* [ %3, %65 ], [ %3, %67 ], [ %4, %76 ], [ %4, %78 ]
  %81 = phi i8* [ %59, %65 ], [ %59, %67 ], [ %70, %76 ], [ %70, %78 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %80) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %81) #13
  br label %82

82:                                               ; preds = %79, %50
  %83 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #13
  %84 = getelementptr inbounds %"class.blink::PublicKeyCredentialUserEntity", %"class.blink::PublicKeyCredentialUserEntity"* %1, i64 0, i32 2
  call void @_ZN4mojo13TypeConverterIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEN5blink28ArrayBufferOrArrayBufferViewEE7ConvertERKS6_(%"class.WTF::Vector"* nonnull sret %5, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24) %84) #13
  %85 = bitcast %"class.WTF::Vector"* %5 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast i8* %6 to i64*
  %88 = load i64, i64* %87, align 8
  store atomic i64 %88, i64* %85 monotonic, align 8
  store atomic i64 %86, i64* %87 monotonic, align 8
  %89 = getelementptr inbounds i8, i8* %6, i64 8
  %90 = bitcast i8* %89 to i32*
  %91 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %92 = load i32, i32* %90, align 4
  %93 = load i32, i32* %91, align 8
  store i32 %93, i32* %90, align 4
  store i32 %92, i32* %91, align 8
  %94 = getelementptr inbounds i8, i8* %6, i64 12
  %95 = bitcast i8* %94 to i32*
  %96 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %97 = load i32, i32* %95, align 4
  %98 = load i32, i32* %96, align 4
  store i32 %98, i32* %95, align 4
  store i32 %97, i32* %96, align 4
  %99 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %100 = inttoptr i64 %88 to i8*
  %101 = icmp eq i64 %88, 0
  br i1 %101, label %106, label %102, !prof !6

102:                                              ; preds = %82
  %103 = icmp eq i32 %97, 0
  br i1 %103, label %105, label %104, !prof !5

104:                                              ; preds = %102
  store i32 0, i32* %96, align 4
  br label %105

105:                                              ; preds = %104, %102
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %100) #13
  store i8* null, i8** %99, align 8
  br label %106

106:                                              ; preds = %82, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #13
  %107 = getelementptr inbounds i8, i8* %6, i64 144
  %108 = getelementptr inbounds %"class.blink::PublicKeyCredentialUserEntity", %"class.blink::PublicKeyCredentialUserEntity"* %1, i64 0, i32 1, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %128, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %128

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = zext i32 %118 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #13
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !5

125:                                              ; preds = %116
  call void @llvm.trap() #13
  unreachable

126:                                              ; preds = %116
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %117, align 4
  br label %128

128:                                              ; preds = %126, %111, %106
  %129 = ptrtoint %"class.WTF::StringImpl"* %109 to i64
  %130 = bitcast i8* %107 to i64*
  %131 = bitcast i8* %107 to %"class.WTF::StringImpl"**
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  store i64 %129, i64* %130, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #13
  br label %147

147:                                              ; preds = %128, %143, %146
  ret void
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink27PublicKeyCredentialRpEntityEEENS2_27PublicKeyCredentialRpEntityEE7ConvertERKS7_(%"class.mojo::StructPtr.43"* noalias nocapture sret, %"class.blink::PublicKeyCredentialRpEntity"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = tail call i8* @_Znwm(i64 136) #12, !noalias !14
  %6 = bitcast i8* %5 to %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"*
  tail call void @_ZN5blink5mojom5blink27PublicKeyCredentialRpEntityC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialRpEntity"* nonnull %6) #13, !noalias !14
  %7 = ptrtoint i8* %5 to i64
  %8 = getelementptr inbounds %"class.blink::PublicKeyCredentialRpEntity", %"class.blink::PublicKeyCredentialRpEntity"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %122, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %5, i64 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #13
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !5

26:                                               ; preds = %17
  tail call void @llvm.trap() #13
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %11
  %30 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %31 = bitcast i8* %12 to i64*
  %32 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store i64 %30, i64* %31, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #13
  br label %48

48:                                               ; preds = %29, %44, %47
  %49 = getelementptr inbounds %"class.blink::PublicKeyCredentialRpEntity", %"class.blink::PublicKeyCredentialRpEntity"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %80, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %66

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %57) #13
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #13
  %58 = getelementptr inbounds i8, i8* %5, i64 16
  %59 = load i8, i8* %58, align 8, !range !7
  %60 = icmp eq i8 %59, 0
  %61 = getelementptr inbounds i8, i8* %5, i64 24
  %62 = bitcast i8* %61 to %"class.blink::KURL"*
  br i1 %60, label %65, label %63

63:                                               ; preds = %56
  %64 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %62, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #13
  br label %77

65:                                               ; preds = %56
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %62, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #13
  store i8 1, i8* %58, align 8
  br label %77

66:                                               ; preds = %52
  %67 = getelementptr inbounds %"class.blink::PublicKeyCredentialRpEntity", %"class.blink::PublicKeyCredentialRpEntity"* %1, i64 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %68) #13
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %67) #13
  %69 = getelementptr inbounds i8, i8* %5, i64 16
  %70 = load i8, i8* %69, align 8, !range !7
  %71 = icmp eq i8 %70, 0
  %72 = getelementptr inbounds i8, i8* %5, i64 24
  %73 = bitcast i8* %72 to %"class.blink::KURL"*
  br i1 %71, label %76, label %74

74:                                               ; preds = %66
  %75 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %73, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #13
  br label %77

76:                                               ; preds = %66
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %73, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #13
  store i8 1, i8* %69, align 8
  br label %77

77:                                               ; preds = %76, %74, %65, %63
  %78 = phi %"class.blink::KURL"* [ %3, %63 ], [ %3, %65 ], [ %4, %74 ], [ %4, %76 ]
  %79 = phi i8* [ %57, %63 ], [ %57, %65 ], [ %68, %74 ], [ %68, %76 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %78) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %79) #13
  br label %80

80:                                               ; preds = %77, %48
  %81 = getelementptr inbounds %"class.blink::PublicKeyCredentialRpEntity", %"class.blink::PublicKeyCredentialRpEntity"* %1, i64 0, i32 1, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %120, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %101

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i33
  %93 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #13
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !5

98:                                               ; preds = %89
  call void @llvm.trap() #13
  unreachable

99:                                               ; preds = %89
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %90, align 4
  br label %101

101:                                              ; preds = %99, %84
  %102 = ptrtoint %"class.WTF::StringImpl"* %82 to i64
  %103 = bitcast i8* %5 to i64*
  %104 = bitcast i8* %5 to %"class.WTF::StringImpl"**
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  store i64 %102, i64* %103, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #13
  br label %120

120:                                              ; preds = %80, %101, %116, %119
  %121 = bitcast %"class.mojo::StructPtr.43"* %0 to i64*
  store i64 %7, i64* %121, align 8
  br label %124

122:                                              ; preds = %2
  %123 = bitcast %"class.mojo::StructPtr.43"* %0 to i64*
  store i64 0, i64* %123, align 8
  tail call void @_ZN5blink5mojom5blink27PublicKeyCredentialRpEntityD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialRpEntity"* nonnull %6) #13
  tail call void @_ZdlPv(i8* nonnull %5) #12
  br label %124

124:                                              ; preds = %120, %122
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEENS2_29PublicKeyCredentialDescriptorEE7ConvertERKS7_(%"class.mojo::StructPtr.55"* noalias nocapture sret, %"class.blink::PublicKeyCredentialDescriptor"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.absl::optional.14"*
  %8 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call i8* @_Znwm(i64 40) #12, !noalias !17
  %10 = bitcast i8* %9 to %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"*
  tail call void @_ZN5blink5mojom5blink29PublicKeyCredentialDescriptorC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* nonnull %10) #13, !noalias !17
  %11 = ptrtoint i8* %9 to i64
  %12 = bitcast %"class.mojo::StructPtr.55"* %0 to i64*
  store i64 %11, i64* %12, align 8, !alias.scope !17
  %13 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.blink::PublicKeyCredentialDescriptor", %"class.blink::PublicKeyCredentialDescriptor"* %1, i64 0, i32 4, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %18, align 8
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %20 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %19, i64* %20, align 8
  br label %29

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %27 = bitcast i8** %26 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %27, align 8
  %28 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

29:                                               ; preds = %17, %21
  %30 = phi i64 [ %28, %21 ], [ %19, %17 ]
  %31 = phi i32 [ %24, %21 ], [ 0, %17 ]
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %31, i32* %32, align 8
  %33 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #13
  %34 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %30, i64* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8** %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 10, i32* %36, align 8
  %37 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #13
  %38 = bitcast i8* %9 to i32*
  store i32 0, i32* %38, align 8
  %39 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.blink::PublicKeyCredentialDescriptor", %"class.blink::PublicKeyCredentialDescriptor"* %1, i64 0, i32 2
  call void @_ZN4mojo13TypeConverterIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEN5blink28ArrayBufferOrArrayBufferViewEE7ConvertERKS6_(%"class.WTF::Vector"* nonnull sret %5, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24) %40) #13
  %41 = getelementptr inbounds i8, i8* %9, i64 8
  %42 = bitcast %"class.WTF::Vector"* %5 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast i8* %41 to i64*
  %45 = load i64, i64* %44, align 8
  store atomic i64 %45, i64* %42 monotonic, align 8
  store atomic i64 %43, i64* %44 monotonic, align 8
  %46 = getelementptr inbounds i8, i8* %9, i64 16
  %47 = bitcast i8* %46 to i32*
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %49 = load i32, i32* %47, align 4
  %50 = load i32, i32* %48, align 8
  store i32 %50, i32* %47, align 4
  store i32 %49, i32* %48, align 8
  %51 = getelementptr inbounds i8, i8* %9, i64 20
  %52 = bitcast i8* %51 to i32*
  %53 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %54 = load i32, i32* %52, align 4
  %55 = load i32, i32* %53, align 4
  store i32 %55, i32* %52, align 4
  store i32 %54, i32* %53, align 4
  %56 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %57 = inttoptr i64 %45 to i8*
  %58 = icmp eq i64 %45, 0
  br i1 %58, label %63, label %59, !prof !6

59:                                               ; preds = %29
  %60 = icmp eq i32 %54, 0
  br i1 %60, label %62, label %61, !prof !5

61:                                               ; preds = %59
  store i32 0, i32* %53, align 4
  br label %62

62:                                               ; preds = %61, %59
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #13
  store i8* null, i8** %56, align 8
  br label %63

63:                                               ; preds = %29, %62
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #13
  %64 = getelementptr inbounds %"class.blink::PublicKeyCredentialDescriptor", %"class.blink::PublicKeyCredentialDescriptor"* %1, i64 0, i32 1
  %65 = load i8, i8* %64, align 8, !range !7
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %104, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::PublicKeyCredentialDescriptor", %"class.blink::PublicKeyCredentialDescriptor"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %104, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::PublicKeyCredentialDescriptor", %"class.blink::PublicKeyCredentialDescriptor"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::String"*, %"class.WTF::String"** %72, align 8
  %74 = zext i32 %69 to i64
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 %74
  %76 = bitcast i64* %6 to i8*
  %77 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %78

78:                                               ; preds = %71, %101
  %79 = phi %"class.WTF::String"* [ %73, %71 ], [ %102, %101 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #13
  store i64 -6148914691236517206, i64* %6, align 8
  %80 = call i64 @_ZN4mojo13TypeConverterIN4absl8optionalIN5blink5mojom22AuthenticatorTransportEEEN3WTF6StringEE7ConvertERKS8_(%"class.WTF::String"* dereferenceable(8) %79) #13
  store i64 %80, i64* %6, align 8
  %81 = trunc i64 %80 to i8
  %82 = icmp eq i8 %81, 0
  %83 = lshr i64 %80, 32
  %84 = trunc i64 %83 to i32
  br i1 %82, label %101, label %85

85:                                               ; preds = %78
  %86 = load %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"*, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %8, align 8
  %87 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialDescriptor", %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* %86, i64 0, i32 2
  %88 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialDescriptor", %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* %86, i64 0, i32 2, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialDescriptor", %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* %86, i64 0, i32 2, i32 0, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %89, %91
  br i1 %92, label %100, label %93, !prof !5

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %87, i64 0, i32 0, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = zext i32 %89 to i64
  %97 = getelementptr inbounds i32, i32* %95, i64 %96
  store i32 %84, i32* %97, align 4
  %98 = load i32, i32* %88, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %88, align 4
  br label %101

100:                                              ; preds = %85
  call void @_ZN3WTF6VectorIN5blink5mojom22AuthenticatorTransportELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.59"* %87, i32* dereferenceable(4) %77) #13
  br label %101

101:                                              ; preds = %78, %100, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #13
  %102 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 1
  %103 = icmp eq %"class.WTF::String"* %102, %75
  br i1 %103, label %108, label %78

104:                                              ; preds = %63, %67
  %105 = load %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"*, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %8, align 8
  %106 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialDescriptor", %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* %105, i64 0, i32 2
  %107 = call dereferenceable(16) %"class.WTF::Vector.59"* @_ZN3WTF6VectorIN5blink5mojom22AuthenticatorTransportELj0ENS_18PartitionAllocatorEEaSESt16initializer_listIS3_E(%"class.WTF::Vector.59"* %106, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.ref.tmp, i64 0, i64 0), i64 5)
  br label %108

108:                                              ; preds = %101, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.59"* @_ZN3WTF6VectorIN5blink5mojom22AuthenticatorTransportELj0ENS_18PartitionAllocatorEEaSESt16initializer_listIS3_E(%"class.WTF::Vector.59"*, i32*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ult i64 %2, 4294967296
  br i1 %4, label %6, label %5, !prof !6

5:                                                ; preds = %3
  tail call void @llvm.trap() #13
  unreachable

6:                                                ; preds = %3
  %7 = trunc i64 %2 to i32
  %8 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp ugt i32 %9, %7
  br i1 %10, label %11, label %12

11:                                               ; preds = %6
  store i32 %7, i32* %8, align 4
  br label %59

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp ult i32 %14, %7
  br i1 %15, label %16, label %59

16:                                               ; preds = %12
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %16
  %19 = icmp eq i32 %9, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %18
  store i32 0, i32* %8, align 4
  br label %21

21:                                               ; preds = %20, %18
  %22 = bitcast %"class.WTF::Vector.59"* %0 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.WTF::Vector.59"* %0 to i64*
  store atomic i64 0, i64* %24 monotonic, align 8
  store i32 0, i32* %13, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %23) #13
  %25 = load i32, i32* %13, align 8
  br label %26

26:                                               ; preds = %16, %21
  %27 = phi i32 [ 0, %16 ], [ %25, %21 ]
  %28 = icmp ult i32 %27, %7
  br i1 %28, label %29, label %59, !prof !6

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = icmp eq i32* %31, null
  %33 = and i64 %2, 4294967295
  %34 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom22AuthenticatorTransportEEEmm(i64 %33) #13
  %35 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom22AuthenticatorTransportEEEPKcv, i64 0, i64 0)) #13
  br i1 %32, label %36, label %41

36:                                               ; preds = %29
  %37 = ptrtoint i8* %35 to i64
  %38 = bitcast %"class.WTF::Vector.59"* %0 to i64*
  store atomic i64 %37, i64* %38 monotonic, align 8
  %39 = lshr i64 %34, 2
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %13, align 8
  br label %59

41:                                               ; preds = %29
  %42 = lshr i64 %34, 2
  %43 = ptrtoint i8* %35 to i64
  %44 = load i32*, i32** %30, align 8
  %45 = icmp ne i8* %35, null
  %46 = icmp ne i32* %44, null
  %47 = and i1 %45, %46
  %48 = bitcast i32* %44 to i8*
  br i1 %47, label %49, label %55, !prof !6

49:                                               ; preds = %41
  %50 = load i32, i32* %8, align 4
  %51 = zext i32 %50 to i64
  %52 = shl nuw nsw i64 %51, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %35, i8* nonnull align 4 %48, i64 %52, i1 false) #13
  %53 = bitcast %"class.WTF::Vector.59"* %0 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %49, %41
  %56 = phi i8* [ %54, %49 ], [ %48, %41 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #13
  %57 = bitcast %"class.WTF::Vector.59"* %0 to i64*
  store atomic i64 %43, i64* %57 monotonic, align 8
  %58 = trunc i64 %42 to i32
  store i32 %58, i32* %13, align 8
  br label %59

59:                                               ; preds = %55, %36, %26, %12, %11
  %60 = load i32, i32* %8, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.WTF::Vector.59"* %0 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast i32* %1 to i8*
  %66 = shl nuw nsw i64 %61, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %65, i64 %66, i1 false) #13
  %67 = load i32, i32* %8, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %1, i64 %68
  %70 = load i32*, i32** %62, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 %68
  %72 = icmp ne i32* %71, null
  %73 = icmp ne i32* %69, null
  %74 = and i1 %73, %72
  br i1 %74, label %75, label %82, !prof !6

75:                                               ; preds = %59
  %76 = getelementptr inbounds i32, i32* %1, i64 %2
  %77 = bitcast i32* %71 to i8*
  %78 = bitcast i32* %69 to i8*
  %79 = ptrtoint i32* %76 to i64
  %80 = ptrtoint i32* %69 to i64
  %81 = sub i64 %79, %80
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %77, i8* nonnull align 4 %78, i64 %81, i1 false) #13
  br label %82

82:                                               ; preds = %59, %75
  store i32 %7, i32* %8, align 4
  ret %"class.WTF::Vector.59"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterINS_16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEENS2_29PublicKeyCredentialParametersEE7ConvertERKS7_(%"class.mojo::InlinedStructPtr.67"* noalias sret, %"class.blink::PublicKeyCredentialParameters"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %0, i64 0, i32 0, i32 0
  store i32 -1431655766, i32* %5, align 4
  %6 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %0, i64 0, i32 0, i32 1
  store i32 -1431655766, i32* %6, align 4
  %7 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %0, i64 0, i32 1
  store i32 -1431655766, i32* %7, align 4
  %8 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %0, i64 0, i32 0
  tail call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %8) #13
  store i32 1, i32* %7, align 4, !alias.scope !20
  %9 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.blink::PublicKeyCredentialParameters", %"class.blink::PublicKeyCredentialParameters"* %1, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %14, align 8
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %16 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %15, i64* %16, align 8
  br label %25

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

25:                                               ; preds = %13, %17
  %26 = phi i64 [ %24, %17 ], [ %15, %13 ]
  %27 = phi i32 [ %20, %17 ], [ 0, %13 ]
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %27, i32* %28, align 8
  %29 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %26, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 10, i32* %32, align 8
  %33 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  store i32 0, i32* %5, align 4
  %34 = getelementptr inbounds %"class.blink::PublicKeyCredentialParameters", %"class.blink::PublicKeyCredentialParameters"* %1, i64 0, i32 2
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink34PublicKeyCredentialCreationOptionsEEENS2_34PublicKeyCredentialCreationOptionsEE7ConvertERKS7_(%"class.mojo::StructPtr.106"* noalias nocapture sret, %"class.blink::PublicKeyCredentialCreationOptions"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.blink::mojom::blink::AuthenticatorSelectionCriteria", align 4
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca i64, align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.mojo::StructPtr.43", align 8
  %24 = alloca %"class.mojo::StructPtr.31", align 8
  %25 = alloca %"class.WTF::Vector", align 8
  %26 = alloca %"class.WTF::Vector.110", align 8
  %27 = alloca %"class.mojo::InlinedStructPtr.67", align 8
  %28 = alloca %"class.mojo::InlinedStructPtr.67", align 8
  %29 = alloca %"class.mojo::InlinedStructPtr.67", align 8
  %30 = alloca %"class.mojo::StructPtr.55", align 8
  %31 = alloca %"class.mojo::InlinedStructPtr", align 4
  %32 = alloca %"class.mojo::StructPtr.125", align 8
  %33 = alloca %"class.absl::optional.24", align 8
  %34 = alloca %"class.WTF::Vector", align 8
  %35 = tail call i8* @_Znwm(i64 176) #12, !noalias !23
  %36 = bitcast i8* %35 to %"class.blink::mojom::blink::PublicKeyCredentialCreationOptions"*
  tail call void @_ZN5blink5mojom5blink34PublicKeyCredentialCreationOptionsC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialCreationOptions"* nonnull %36) #13, !noalias !23
  %37 = ptrtoint i8* %35 to i64
  %38 = bitcast %"class.mojo::StructPtr.43"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13
  %39 = getelementptr inbounds %"class.blink::PublicKeyCredentialCreationOptions", %"class.blink::PublicKeyCredentialCreationOptions"* %1, i64 0, i32 10, i32 0, i32 0
  %40 = load %"class.blink::PublicKeyCredentialRpEntity"*, %"class.blink::PublicKeyCredentialRpEntity"** %39, align 8
  call void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink27PublicKeyCredentialRpEntityEEENS2_27PublicKeyCredentialRpEntityEE7ConvertERKS7_(%"class.mojo::StructPtr.43"* nonnull sret %23, %"class.blink::PublicKeyCredentialRpEntity"* dereferenceable(32) %40) #13
  %41 = bitcast i8* %35 to %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"**
  %42 = load %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"*, %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"** %41, align 8
  store %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"* null, %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"** %41, align 8
  %43 = icmp eq %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"* %42, null
  br i1 %43, label %44, label %49

44:                                               ; preds = %2
  %45 = bitcast i8* %35 to i64*
  %46 = bitcast %"class.mojo::StructPtr.43"* %23 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %45, align 8
  %48 = getelementptr inbounds %"class.mojo::StructPtr.43", %"class.mojo::StructPtr.43"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"* null, %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"** %48, align 8
  br label %60

49:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink27PublicKeyCredentialRpEntityD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialRpEntity"* nonnull %42) #13
  %50 = bitcast %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"* %42 to i8*
  tail call void @_ZdlPv(i8* %50) #12
  %51 = bitcast i8* %35 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.mojo::StructPtr.43"* %23 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %51, align 8
  %55 = getelementptr inbounds %"class.mojo::StructPtr.43", %"class.mojo::StructPtr.43"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"* null, %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"** %55, align 8
  %56 = icmp eq i64 %52, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %49
  %58 = inttoptr i64 %52 to %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"*
  tail call void @_ZN5blink5mojom5blink27PublicKeyCredentialRpEntityD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialRpEntity"* nonnull %58) #13
  %59 = inttoptr i64 %52 to i8*
  tail call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %44, %49, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  %61 = bitcast %"class.mojo::StructPtr.31"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #13
  %62 = getelementptr inbounds %"class.blink::PublicKeyCredentialCreationOptions", %"class.blink::PublicKeyCredentialCreationOptions"* %1, i64 0, i32 12, i32 0, i32 0
  %63 = load %"class.blink::PublicKeyCredentialUserEntity"*, %"class.blink::PublicKeyCredentialUserEntity"** %62, align 8
  call void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink29PublicKeyCredentialUserEntityEEENS2_29PublicKeyCredentialUserEntityEE7ConvertERKS7_(%"class.mojo::StructPtr.31"* nonnull sret %24, %"class.blink::PublicKeyCredentialUserEntity"* dereferenceable(56) %63) #13
  %64 = getelementptr inbounds i8, i8* %35, i64 8
  %65 = bitcast i8* %64 to %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"**
  %66 = load %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"*, %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"** %65, align 8
  store %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"* null, %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"** %65, align 8
  %67 = icmp eq %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"* %66, null
  br i1 %67, label %68, label %73

68:                                               ; preds = %60
  %69 = bitcast i8* %64 to i64*
  %70 = bitcast %"class.mojo::StructPtr.31"* %24 to i64*
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %69, align 8
  %72 = getelementptr inbounds %"class.mojo::StructPtr.31", %"class.mojo::StructPtr.31"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"* null, %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"** %72, align 8
  br label %84

73:                                               ; preds = %60
  tail call void @_ZN5blink5mojom5blink29PublicKeyCredentialUserEntityD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialUserEntity"* nonnull %66) #13
  %74 = bitcast %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"* %66 to i8*
  tail call void @_ZdlPv(i8* %74) #12
  %75 = bitcast i8* %64 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.mojo::StructPtr.31"* %24 to i64*
  %78 = load i64, i64* %77, align 8
  store i64 %78, i64* %75, align 8
  %79 = getelementptr inbounds %"class.mojo::StructPtr.31", %"class.mojo::StructPtr.31"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"* null, %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"** %79, align 8
  %80 = icmp eq i64 %76, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %73
  %82 = inttoptr i64 %76 to %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"*
  tail call void @_ZN5blink5mojom5blink29PublicKeyCredentialUserEntityD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialUserEntity"* nonnull %82) #13
  %83 = inttoptr i64 %76 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %68, %73, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #13
  %85 = load %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"*, %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"** %41, align 8
  %86 = icmp eq %"class.blink::mojom::blink::PublicKeyCredentialRpEntity"* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %84
  %88 = load %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"*, %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"** %65, align 8
  %89 = icmp eq %"class.blink::mojom::blink::PublicKeyCredentialUserEntity"* %88, null
  br i1 %89, label %90, label %92

90:                                               ; preds = %84, %87
  %91 = bitcast %"class.mojo::StructPtr.106"* %0 to i64*
  store i64 0, i64* %91, align 8
  br label %716

92:                                               ; preds = %87
  %93 = bitcast %"class.WTF::Vector"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #13
  %94 = getelementptr inbounds %"class.blink::PublicKeyCredentialCreationOptions", %"class.blink::PublicKeyCredentialCreationOptions"* %1, i64 0, i32 6
  call void @_ZN4mojo13TypeConverterIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEN5blink28ArrayBufferOrArrayBufferViewEE7ConvertERKS6_(%"class.WTF::Vector"* nonnull sret %25, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24) %94) #13
  %95 = getelementptr inbounds i8, i8* %35, i64 16
  %96 = bitcast %"class.WTF::Vector"* %25 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast i8* %95 to i64*
  %99 = load i64, i64* %98, align 8
  store atomic i64 %99, i64* %96 monotonic, align 8
  store atomic i64 %97, i64* %98 monotonic, align 8
  %100 = getelementptr inbounds i8, i8* %35, i64 24
  %101 = bitcast i8* %100 to i32*
  %102 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %25, i64 0, i32 0, i32 0, i32 1
  %103 = load i32, i32* %101, align 4
  %104 = load i32, i32* %102, align 8
  store i32 %104, i32* %101, align 4
  store i32 %103, i32* %102, align 8
  %105 = getelementptr inbounds i8, i8* %35, i64 28
  %106 = bitcast i8* %105 to i32*
  %107 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %25, i64 0, i32 0, i32 0, i32 2
  %108 = load i32, i32* %106, align 4
  %109 = load i32, i32* %107, align 4
  store i32 %109, i32* %106, align 4
  store i32 %108, i32* %107, align 4
  %110 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %25, i64 0, i32 0, i32 0, i32 0
  %111 = inttoptr i64 %99 to i8*
  %112 = icmp eq i64 %99, 0
  br i1 %112, label %117, label %113, !prof !6

113:                                              ; preds = %92
  %114 = icmp eq i32 %108, 0
  br i1 %114, label %116, label %115, !prof !5

115:                                              ; preds = %113
  store i32 0, i32* %107, align 4
  br label %116

116:                                              ; preds = %115, %113
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %111) #13
  store i8* null, i8** %110, align 8
  br label %117

117:                                              ; preds = %92, %116
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #13
  %118 = bitcast %"class.WTF::Vector.110"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #13
  %119 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %26, i64 0, i32 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %26, i64 0, i32 0, i32 0, i32 1
  %121 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %26, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 0, i64 16, i1 false) #13
  %122 = getelementptr inbounds %"class.blink::PublicKeyCredentialCreationOptions", %"class.blink::PublicKeyCredentialCreationOptions"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %179

125:                                              ; preds = %117
  %126 = bitcast %"class.mojo::InlinedStructPtr.67"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %126) #13
  %127 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %27, i64 0, i32 0, i32 0
  store i32 -1431655766, i32* %127, align 8, !alias.scope !26
  %128 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %27, i64 0, i32 0, i32 1
  store i32 -1431655766, i32* %128, align 4, !alias.scope !26
  %129 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %27, i64 0, i32 1
  store i32 -1431655766, i32* %129, align 8, !alias.scope !26
  %130 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %27, i64 0, i32 0
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* nonnull %130) #13
  store i32 1, i32* %129, align 8, !alias.scope !29
  store i32 0, i32* %127, align 8, !alias.scope !26
  store i32 -7, i32* %128, align 4, !alias.scope !26
  %131 = load i32, i32* %121, align 4
  %132 = load i32, i32* %120, align 8
  %133 = icmp eq i32 %131, %132
  br i1 %133, label %150, label %134, !prof !5

134:                                              ; preds = %125
  %135 = load %"class.mojo::InlinedStructPtr.67"*, %"class.mojo::InlinedStructPtr.67"** %119, align 8
  %136 = zext i32 %131 to i64
  %137 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %135, i64 %136
  %138 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %137, i64 0, i32 0
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %138) #13
  %139 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %135, i64 %136, i32 1
  store i32 0, i32* %139, align 4
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %138) #13
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %138) #13
  %140 = bitcast i64* %20 to %"class.blink::mojom::blink::PublicKeyCredentialParameters"*
  %141 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #13
  %142 = bitcast %"class.mojo::InlinedStructPtr.67"* %137 to i64*
  %143 = load i64, i64* %142, align 4
  store i64 %143, i64* %20, align 8
  %144 = bitcast %"class.mojo::InlinedStructPtr.67"* %27 to i64*
  %145 = load i64, i64* %144, align 8
  store i64 %145, i64* %142, align 4
  store i64 %143, i64* %144, align 8
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* nonnull %140) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #13
  %146 = load i32, i32* %139, align 4
  %147 = load i32, i32* %129, align 8
  store i32 %147, i32* %139, align 4
  store i32 %146, i32* %129, align 8
  %148 = load i32, i32* %121, align 4
  %149 = add i32 %148, 1
  store i32 %149, i32* %121, align 4
  br label %151

150:                                              ; preds = %125
  call void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.110"* nonnull %26, %"class.mojo::InlinedStructPtr.67"* nonnull dereferenceable(12) %27) #13
  br label %151

151:                                              ; preds = %134, %150
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* nonnull %130) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %126) #13
  %152 = bitcast %"class.mojo::InlinedStructPtr.67"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %152) #13
  %153 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %28, i64 0, i32 0, i32 0
  store i32 -1431655766, i32* %153, align 8, !alias.scope !32
  %154 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %28, i64 0, i32 0, i32 1
  store i32 -1431655766, i32* %154, align 4, !alias.scope !32
  %155 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %28, i64 0, i32 1
  store i32 -1431655766, i32* %155, align 8, !alias.scope !32
  %156 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %28, i64 0, i32 0
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* nonnull %156) #13
  store i32 1, i32* %155, align 8, !alias.scope !35
  store i32 0, i32* %153, align 8, !alias.scope !32
  store i32 -257, i32* %154, align 4, !alias.scope !32
  %157 = load i32, i32* %121, align 4
  %158 = load i32, i32* %120, align 8
  %159 = icmp eq i32 %157, %158
  br i1 %159, label %176, label %160, !prof !5

160:                                              ; preds = %151
  %161 = load %"class.mojo::InlinedStructPtr.67"*, %"class.mojo::InlinedStructPtr.67"** %119, align 8
  %162 = zext i32 %157 to i64
  %163 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %161, i64 %162
  %164 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %163, i64 0, i32 0
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %164) #13
  %165 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %161, i64 %162, i32 1
  store i32 0, i32* %165, align 4
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %164) #13
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %164) #13
  %166 = bitcast i64* %19 to %"class.blink::mojom::blink::PublicKeyCredentialParameters"*
  %167 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #13
  %168 = bitcast %"class.mojo::InlinedStructPtr.67"* %163 to i64*
  %169 = load i64, i64* %168, align 4
  store i64 %169, i64* %19, align 8
  %170 = bitcast %"class.mojo::InlinedStructPtr.67"* %28 to i64*
  %171 = load i64, i64* %170, align 8
  store i64 %171, i64* %168, align 4
  store i64 %169, i64* %170, align 8
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* nonnull %166) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #13
  %172 = load i32, i32* %165, align 4
  %173 = load i32, i32* %155, align 8
  store i32 %173, i32* %165, align 4
  store i32 %172, i32* %155, align 8
  %174 = load i32, i32* %121, align 4
  %175 = add i32 %174, 1
  store i32 %175, i32* %121, align 4
  br label %177

176:                                              ; preds = %151
  call void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.110"* nonnull %26, %"class.mojo::InlinedStructPtr.67"* nonnull dereferenceable(12) %28) #13
  br label %177

177:                                              ; preds = %160, %176
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* nonnull %156) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %152) #13
  %178 = load i32, i32* %121, align 4
  br label %248

179:                                              ; preds = %117
  %180 = getelementptr inbounds %"class.blink::PublicKeyCredentialCreationOptions", %"class.blink::PublicKeyCredentialCreationOptions"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %181 = load %"class.blink::Member.99"*, %"class.blink::Member.99"** %180, align 8
  %182 = zext i32 %123 to i64
  %183 = getelementptr inbounds %"class.blink::Member.99", %"class.blink::Member.99"* %181, i64 %182
  %184 = bitcast %"class.mojo::InlinedStructPtr.67"* %29 to i8*
  %185 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %29, i64 0, i32 0, i32 0
  %186 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %29, i64 0, i32 0, i32 1
  %187 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %29, i64 0, i32 1
  %188 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %29, i64 0, i32 0
  %189 = bitcast %"class.WTF::StringView"* %17 to i8*
  %190 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 0
  %191 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %192 = bitcast i8** %191 to %"class.WTF::StringImpl"**
  %193 = bitcast %"class.WTF::StringView"* %17 to i64*
  %194 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  %195 = bitcast %"class.WTF::StringView"* %18 to i8*
  %196 = bitcast %"class.WTF::StringView"* %18 to i64*
  %197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %198 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  %199 = bitcast i64* %16 to %"class.blink::mojom::blink::PublicKeyCredentialParameters"*
  %200 = bitcast i64* %16 to i8*
  %201 = bitcast %"class.mojo::InlinedStructPtr.67"* %29 to i64*
  br label %205

202:                                              ; preds = %245
  %203 = load i32, i32* %121, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %691, label %248

205:                                              ; preds = %179, %245
  %206 = phi %"class.blink::Member.99"* [ %181, %179 ], [ %246, %245 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %184) #13
  store i32 -1431655766, i32* %185, align 8
  store i32 -1431655766, i32* %186, align 4
  store i32 -1431655766, i32* %187, align 8
  %207 = getelementptr inbounds %"class.blink::Member.99", %"class.blink::Member.99"* %206, i64 0, i32 0, i32 0
  %208 = load %"class.blink::PublicKeyCredentialParameters"*, %"class.blink::PublicKeyCredentialParameters"** %207, align 8
  store i32 -1431655766, i32* %185, align 8, !alias.scope !38
  store i32 -1431655766, i32* %186, align 4, !alias.scope !38
  store i32 -1431655766, i32* %187, align 8, !alias.scope !38
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* nonnull %188) #13
  store i32 1, i32* %187, align 8, !alias.scope !43
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #13, !noalias !38
  %209 = getelementptr inbounds %"class.blink::PublicKeyCredentialParameters", %"class.blink::PublicKeyCredentialParameters"* %208, i64 0, i32 3, i32 0, i32 0
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8, !noalias !38
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %212, label %214

212:                                              ; preds = %205
  store i8* null, i8** %191, align 8, !noalias !38
  %213 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %213, i64* %193, align 8, !noalias !38
  br label %219

214:                                              ; preds = %205
  store %"class.WTF::StringImpl"* %210, %"class.WTF::StringImpl"** %190, align 8, !noalias !38
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 1
  %216 = load i32, i32* %215, align 4
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 1
  store %"class.WTF::StringImpl"* %217, %"class.WTF::StringImpl"** %192, align 8, !noalias !38
  %218 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %219

219:                                              ; preds = %212, %214
  %220 = phi i64 [ %218, %214 ], [ %213, %212 ]
  %221 = phi i32 [ %216, %214 ], [ 0, %212 ]
  store i32 %221, i32* %194, align 8, !noalias !38
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %195) #13, !noalias !38
  store i64 %220, i64* %196, align 8, !noalias !38
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8** %197, align 8, !noalias !38
  store i32 10, i32* %198, align 8, !noalias !38
  %222 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %18) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %195) #13, !noalias !38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #13, !noalias !38
  store i32 0, i32* %185, align 8, !alias.scope !38
  %223 = getelementptr inbounds %"class.blink::PublicKeyCredentialParameters", %"class.blink::PublicKeyCredentialParameters"* %208, i64 0, i32 2
  %224 = load i32, i32* %223, align 4, !noalias !38
  store i32 %224, i32* %186, align 4, !alias.scope !38
  %225 = load i32, i32* %187, align 8
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %245, label %227

227:                                              ; preds = %219
  %228 = load i32, i32* %121, align 4
  %229 = load i32, i32* %120, align 8
  %230 = icmp eq i32 %228, %229
  br i1 %230, label %244, label %231, !prof !5

231:                                              ; preds = %227
  %232 = load %"class.mojo::InlinedStructPtr.67"*, %"class.mojo::InlinedStructPtr.67"** %119, align 8
  %233 = zext i32 %228 to i64
  %234 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %232, i64 %233
  %235 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %234, i64 0, i32 0
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %235) #13
  %236 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %232, i64 %233, i32 1
  store i32 0, i32* %236, align 4
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %235) #13
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %235) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #13
  %237 = bitcast %"class.mojo::InlinedStructPtr.67"* %234 to i64*
  %238 = load i64, i64* %237, align 4
  store i64 %238, i64* %16, align 8
  %239 = load i64, i64* %201, align 8
  store i64 %239, i64* %237, align 4
  store i64 %238, i64* %201, align 8
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* nonnull %199) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #13
  %240 = load i32, i32* %236, align 4
  %241 = load i32, i32* %187, align 8
  store i32 %241, i32* %236, align 4
  store i32 %240, i32* %187, align 8
  %242 = load i32, i32* %121, align 4
  %243 = add i32 %242, 1
  store i32 %243, i32* %121, align 4
  br label %245

244:                                              ; preds = %227
  call void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.110"* nonnull %26, %"class.mojo::InlinedStructPtr.67"* nonnull dereferenceable(12) %29) #13
  br label %245

245:                                              ; preds = %219, %244, %231
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* nonnull %188) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %184) #13
  %246 = getelementptr inbounds %"class.blink::Member.99", %"class.blink::Member.99"* %206, i64 1
  %247 = icmp eq %"class.blink::Member.99"* %246, %183
  br i1 %247, label %202, label %205

248:                                              ; preds = %202, %177
  %249 = phi i32 [ %203, %202 ], [ %178, %177 ]
  %250 = getelementptr inbounds i8, i8* %35, i64 32
  %251 = bitcast %"class.WTF::Vector.110"* %26 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast i8* %250 to i64*
  %254 = load i64, i64* %253, align 8
  store atomic i64 %254, i64* %251 monotonic, align 8
  store atomic i64 %252, i64* %253 monotonic, align 8
  %255 = getelementptr inbounds i8, i8* %35, i64 40
  %256 = bitcast i8* %255 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = load i32, i32* %120, align 8
  store i32 %258, i32* %256, align 4
  store i32 %257, i32* %120, align 8
  %259 = getelementptr inbounds i8, i8* %35, i64 44
  %260 = bitcast i8* %259 to i32*
  %261 = load i32, i32* %260, align 4
  store i32 %249, i32* %260, align 4
  store i32 %261, i32* %121, align 4
  %262 = getelementptr inbounds %"class.blink::PublicKeyCredentialCreationOptions", %"class.blink::PublicKeyCredentialCreationOptions"* %1, i64 0, i32 3
  %263 = load i8, i8* %262, align 2, !range !7
  %264 = icmp eq i8 %263, 0
  br i1 %264, label %276, label %265

265:                                              ; preds = %248
  %266 = getelementptr inbounds %"class.blink::PublicKeyCredentialCreationOptions", %"class.blink::PublicKeyCredentialCreationOptions"* %1, i64 0, i32 11
  %267 = load i32, i32* %266, align 8
  %268 = zext i32 %267 to i64
  %269 = mul nuw nsw i64 %268, 1000
  %270 = getelementptr inbounds i8, i8* %35, i64 48
  %271 = load i8, i8* %270, align 8, !range !7
  %272 = icmp eq i8 %271, 0
  %273 = getelementptr inbounds i8, i8* %35, i64 56
  %274 = bitcast i8* %273 to i64*
  store i64 %269, i64* %274, align 8
  br i1 %272, label %275, label %276

275:                                              ; preds = %265
  store i8 1, i8* %270, align 8
  br label %276

276:                                              ; preds = %248, %275, %265
  %277 = getelementptr inbounds %"class.blink::PublicKeyCredentialCreationOptions", %"class.blink::PublicKeyCredentialCreationOptions"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %278 = load %"class.blink::Member.75"*, %"class.blink::Member.75"** %277, align 8
  %279 = getelementptr inbounds %"class.blink::PublicKeyCredentialCreationOptions", %"class.blink::PublicKeyCredentialCreationOptions"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %280 = load i32, i32* %279, align 4
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds %"class.blink::Member.75", %"class.blink::Member.75"* %278, i64 %281
  %283 = icmp eq i32 %280, 0
  br i1 %283, label %295, label %284

284:                                              ; preds = %276
  %285 = bitcast %"class.mojo::StructPtr.55"* %30 to i8*
  %286 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %287 = getelementptr inbounds i8, i8* %35, i64 64
  %288 = getelementptr inbounds i8, i8* %35, i64 76
  %289 = bitcast i8* %288 to i32*
  %290 = getelementptr inbounds i8, i8* %35, i64 72
  %291 = bitcast i8* %290 to i32*
  %292 = bitcast i8* %287 to %"class.mojo::StructPtr.55"**
  %293 = bitcast %"class.mojo::StructPtr.55"* %30 to i64*
  %294 = bitcast i8* %287 to %"class.WTF::Vector.120"*
  br label %299

295:                                              ; preds = %324, %276
  %296 = getelementptr inbounds %"class.blink::PublicKeyCredentialCreationOptions", %"class.blink::PublicKeyCredentialCreationOptions"* %1, i64 0, i32 5, i32 0, i32 0
  %297 = load %"class.blink::AuthenticatorSelectionCriteria"*, %"class.blink::AuthenticatorSelectionCriteria"** %296, align 8
  %298 = icmp eq %"class.blink::AuthenticatorSelectionCriteria"* %297, null
  br i1 %298, label %338, label %327

299:                                              ; preds = %284, %324
  %300 = phi %"class.blink::Member.75"* [ %278, %284 ], [ %325, %324 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %285) #13
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* inttoptr (i64 -6148914691236517206 to %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"*), %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %286, align 8
  %301 = getelementptr inbounds %"class.blink::Member.75", %"class.blink::Member.75"* %300, i64 0, i32 0, i32 0
  %302 = load %"class.blink::PublicKeyCredentialDescriptor"*, %"class.blink::PublicKeyCredentialDescriptor"** %301, align 8
  call void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEENS2_29PublicKeyCredentialDescriptorEE7ConvertERKS7_(%"class.mojo::StructPtr.55"* nonnull sret %30, %"class.blink::PublicKeyCredentialDescriptor"* dereferenceable(64) %302) #13
  %303 = load %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"*, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %286, align 8
  %304 = icmp eq %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* %303, null
  br i1 %304, label %305, label %306

305:                                              ; preds = %299
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %286, align 8
  br label %324

306:                                              ; preds = %299
  %307 = load i32, i32* %289, align 4
  %308 = load i32, i32* %291, align 8
  %309 = icmp eq i32 %307, %308
  br i1 %309, label %319, label %310, !prof !5

310:                                              ; preds = %306
  %311 = load %"class.mojo::StructPtr.55"*, %"class.mojo::StructPtr.55"** %292, align 8
  %312 = zext i32 %307 to i64
  %313 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %311, i64 %312
  %314 = bitcast %"class.mojo::StructPtr.55"* %313 to i64*
  %315 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %313, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %315, align 8
  %316 = load i64, i64* %293, align 8
  store i64 %316, i64* %314, align 8
  %317 = load i32, i32* %289, align 4
  %318 = add i32 %317, 1
  store i32 %318, i32* %289, align 4
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %286, align 8
  br label %324

319:                                              ; preds = %306
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.120"* %294, %"class.mojo::StructPtr.55"* nonnull dereferenceable(8) %30) #13
  %320 = load %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"*, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %286, align 8
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %286, align 8
  %321 = icmp eq %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* %320, null
  br i1 %321, label %324, label %322

322:                                              ; preds = %319
  %323 = bitcast %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* %320 to i8*
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialDescriptorD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* nonnull %320) #13
  call void @_ZdlPv(i8* %323) #12
  br label %324

324:                                              ; preds = %310, %305, %319, %322
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %285) #13
  %325 = getelementptr inbounds %"class.blink::Member.75", %"class.blink::Member.75"* %300, i64 1
  %326 = icmp eq %"class.blink::Member.75"* %325, %282
  br i1 %326, label %295, label %299

327:                                              ; preds = %295
  %328 = bitcast %"class.mojo::InlinedStructPtr"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %328) #13
  call void @_ZN4mojo13TypeConverterINS_16InlinedStructPtrIN5blink5mojom5blink30AuthenticatorSelectionCriteriaEEENS2_30AuthenticatorSelectionCriteriaEE7ConvertERKS7_(%"class.mojo::InlinedStructPtr"* nonnull sret %31, %"class.blink::AuthenticatorSelectionCriteria"* nonnull dereferenceable(48) %297) #13
  %329 = getelementptr inbounds i8, i8* %35, i64 80
  %330 = getelementptr inbounds i8, i8* %35, i64 92
  %331 = bitcast i8* %330 to i32*
  store i32 0, i32* %331, align 4
  %332 = bitcast i8* %329 to %"class.blink::mojom::blink::AuthenticatorSelectionCriteria"*
  call void @_ZN5blink5mojom5blink30AuthenticatorSelectionCriteriaD1Ev(%"class.blink::mojom::blink::AuthenticatorSelectionCriteria"* %332) #13
  call void @_ZN5blink5mojom5blink30AuthenticatorSelectionCriteriaC1Ev(%"class.blink::mojom::blink::AuthenticatorSelectionCriteria"* %332) #13
  %333 = bitcast %"class.blink::mojom::blink::AuthenticatorSelectionCriteria"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %333) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %333, i8* align 4 %329, i64 12, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %329, i8* nonnull align 4 %328, i64 12, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %328, i8* nonnull align 4 %333, i64 12, i1 false) #13
  call void @_ZN5blink5mojom5blink30AuthenticatorSelectionCriteriaD1Ev(%"class.blink::mojom::blink::AuthenticatorSelectionCriteria"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %333) #13
  %334 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %31, i64 0, i32 1
  %335 = load i32, i32* %331, align 4
  %336 = load i32, i32* %334, align 4
  store i32 %336, i32* %331, align 4
  store i32 %335, i32* %334, align 4
  %337 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %31, i64 0, i32 0
  call void @_ZN5blink5mojom5blink30AuthenticatorSelectionCriteriaD1Ev(%"class.blink::mojom::blink::AuthenticatorSelectionCriteria"* nonnull %337) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %328) #13
  br label %338

338:                                              ; preds = %295, %327
  %339 = getelementptr inbounds i8, i8* %35, i64 96
  %340 = bitcast i8* %339 to i32*
  store i32 0, i32* %340, align 8
  %341 = getelementptr inbounds %"class.blink::PublicKeyCredentialCreationOptions", %"class.blink::PublicKeyCredentialCreationOptions"* %1, i64 0, i32 4, i32 0, i32 0
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %341, align 8
  %343 = icmp eq %"class.WTF::StringImpl"* %342, null
  br i1 %343, label %437, label %344

344:                                              ; preds = %338
  %345 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %345) #13
  %346 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %342, %"class.WTF::StringImpl"** %346, align 8
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 1
  %348 = load i32, i32* %347, align 4
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 1
  %350 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %351 = bitcast i8** %350 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %349, %"class.WTF::StringImpl"** %351, align 8
  %352 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %353 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %348, i32* %353, align 8
  %354 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %354) #13
  %355 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %352, i64* %355, align 8
  %356 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8** %356, align 8
  %357 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 4, i32* %357, align 8
  %358 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %354) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %345) #13
  br i1 %358, label %437, label %359

359:                                              ; preds = %344
  %360 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %360) #13
  %361 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %341, align 8
  %362 = icmp eq %"class.WTF::StringImpl"* %361, null
  br i1 %362, label %363, label %367

363:                                              ; preds = %359
  %364 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %364, align 8
  %365 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %366 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %365, i64* %366, align 8
  br label %375

367:                                              ; preds = %359
  %368 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %361, %"class.WTF::StringImpl"** %368, align 8
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %361, i64 0, i32 1
  %370 = load i32, i32* %369, align 4
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %361, i64 1
  %372 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %373 = bitcast i8** %372 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %371, %"class.WTF::StringImpl"** %373, align 8
  %374 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %375

375:                                              ; preds = %367, %363
  %376 = phi i64 [ %374, %367 ], [ %365, %363 ]
  %377 = phi i32 [ %370, %367 ], [ 0, %363 ]
  %378 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %377, i32* %378, align 8
  %379 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %379) #13
  %380 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %376, i64* %380, align 8
  %381 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i8** %381, align 8
  %382 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 8, i32* %382, align 8
  %383 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %379) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %360) #13
  br i1 %383, label %384, label %385

384:                                              ; preds = %375
  store i32 1, i32* %340, align 8
  br label %437

385:                                              ; preds = %375
  %386 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %386) #13
  %387 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %341, align 8
  %388 = icmp eq %"class.WTF::StringImpl"* %387, null
  br i1 %388, label %389, label %393

389:                                              ; preds = %385
  %390 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %390, align 8
  %391 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %392 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %391, i64* %392, align 8
  br label %401

393:                                              ; preds = %385
  %394 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %387, %"class.WTF::StringImpl"** %394, align 8
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 1
  %396 = load i32, i32* %395, align 4
  %397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 1
  %398 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %399 = bitcast i8** %398 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %397, %"class.WTF::StringImpl"** %399, align 8
  %400 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %401

401:                                              ; preds = %393, %389
  %402 = phi i64 [ %400, %393 ], [ %391, %389 ]
  %403 = phi i32 [ %396, %393 ], [ 0, %389 ]
  %404 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %403, i32* %404, align 8
  %405 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %405) #13
  %406 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %402, i64* %406, align 8
  %407 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i8** %407, align 8
  %408 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 6, i32* %408, align 8
  %409 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %405) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %386) #13
  br i1 %409, label %410, label %411

410:                                              ; preds = %401
  store i32 2, i32* %340, align 8
  br label %437

411:                                              ; preds = %401
  %412 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %412) #13
  %413 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %341, align 8
  %414 = icmp eq %"class.WTF::StringImpl"* %413, null
  br i1 %414, label %415, label %419

415:                                              ; preds = %411
  %416 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %416, align 8
  %417 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %418 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %417, i64* %418, align 8
  br label %427

419:                                              ; preds = %411
  %420 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %413, %"class.WTF::StringImpl"** %420, align 8
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 1
  %422 = load i32, i32* %421, align 4
  %423 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 1
  %424 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %425 = bitcast i8** %424 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %423, %"class.WTF::StringImpl"** %425, align 8
  %426 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %427

427:                                              ; preds = %419, %415
  %428 = phi i64 [ %426, %419 ], [ %417, %415 ]
  %429 = phi i32 [ %422, %419 ], [ 0, %415 ]
  %430 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %429, i32* %430, align 8
  %431 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %431) #13
  %432 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %428, i64* %432, align 8
  %433 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8** %433, align 8
  %434 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 10, i32* %434, align 8
  %435 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %431) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %412) #13
  br i1 %435, label %436, label %691

436:                                              ; preds = %427
  store i32 3, i32* %340, align 8
  br label %437

437:                                              ; preds = %338, %384, %436, %410, %344
  %438 = getelementptr inbounds i8, i8* %35, i64 116
  %439 = bitcast i8* %438 to i32*
  store i32 0, i32* %439, align 4
  %440 = getelementptr inbounds i8, i8* %35, i64 120
  store i8 0, i8* %440, align 8
  %441 = getelementptr inbounds %"class.blink::PublicKeyCredentialCreationOptions", %"class.blink::PublicKeyCredentialCreationOptions"* %1, i64 0, i32 8, i32 0, i32 0
  %442 = load %"class.blink::AuthenticationExtensionsClientInputs"*, %"class.blink::AuthenticationExtensionsClientInputs"** %441, align 8
  %443 = icmp eq %"class.blink::AuthenticationExtensionsClientInputs"* %442, null
  br i1 %443, label %691, label %444

444:                                              ; preds = %437
  %445 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %442, i64 0, i32 9, i32 0, i32 0
  %446 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %445, align 8
  %447 = icmp eq %"class.WTF::StringImpl"* %446, null
  br i1 %447, label %485, label %448

448:                                              ; preds = %444
  %449 = getelementptr inbounds i8, i8* %35, i64 128
  %450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %446, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %451 = load atomic i32, i32* %450 monotonic, align 4
  %452 = and i32 %451, 2
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %454, label %466

454:                                              ; preds = %448
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %446, i64 0, i32 0
  %456 = load i32, i32* %455, align 4
  %457 = zext i32 %456 to i33
  %458 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %457, i33 1) #13
  %459 = extractvalue { i33, i1 } %458, 1
  %460 = extractvalue { i33, i1 } %458, 0
  %461 = icmp slt i33 %460, 0
  %462 = or i1 %459, %461
  br i1 %462, label %463, label %464, !prof !5

463:                                              ; preds = %454
  call void @llvm.trap() #13
  unreachable

464:                                              ; preds = %454
  %465 = trunc i33 %460 to i32
  store i32 %465, i32* %455, align 4
  br label %466

466:                                              ; preds = %464, %448
  %467 = ptrtoint %"class.WTF::StringImpl"* %446 to i64
  %468 = bitcast i8* %449 to i64*
  %469 = bitcast i8* %449 to %"class.WTF::StringImpl"**
  %470 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %469, align 8
  store i64 %467, i64* %468, align 8
  %471 = icmp eq %"class.WTF::StringImpl"* %470, null
  br i1 %471, label %485, label %472

472:                                              ; preds = %466
  %473 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %470, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %474 = load atomic i32, i32* %473 monotonic, align 4
  %475 = and i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %470, i64 0, i32 0
  %478 = load i32, i32* %477, align 4
  br i1 %476, label %479, label %481

479:                                              ; preds = %472
  %480 = add i32 %478, -1
  store i32 %480, i32* %477, align 4
  br label %481

481:                                              ; preds = %479, %472
  %482 = phi i32 [ %480, %479 ], [ %478, %472 ]
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %484, label %485

484:                                              ; preds = %481
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %470) #13
  br label %485

485:                                              ; preds = %444, %484, %481, %466
  %486 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %442, i64 0, i32 11, i32 0, i32 0
  %487 = load %"class.blink::CableRegistrationData"*, %"class.blink::CableRegistrationData"** %486, align 8
  %488 = icmp eq %"class.blink::CableRegistrationData"* %487, null
  br i1 %488, label %512, label %489

489:                                              ; preds = %485
  %490 = bitcast %"class.mojo::StructPtr.125"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %490) #13
  %491 = getelementptr inbounds %"class.mojo::StructPtr.125", %"class.mojo::StructPtr.125"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableRegistration"* inttoptr (i64 -6148914691236517206 to %"class.blink::mojom::blink::CableRegistration"*), %"class.blink::mojom::blink::CableRegistration"** %491, align 8
  call void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink17CableRegistrationEEENS2_21CableRegistrationDataEE7ConvertERKS7_(%"class.mojo::StructPtr.125"* nonnull sret %32, %"class.blink::CableRegistrationData"* nonnull dereferenceable(56) %487) #13
  %492 = load %"class.blink::mojom::blink::CableRegistration"*, %"class.blink::mojom::blink::CableRegistration"** %491, align 8
  %493 = icmp eq %"class.blink::mojom::blink::CableRegistration"* %492, null
  %494 = ptrtoint %"class.blink::mojom::blink::CableRegistration"* %492 to i64
  br i1 %493, label %495, label %496

495:                                              ; preds = %489
  store %"class.blink::mojom::blink::CableRegistration"* null, %"class.blink::mojom::blink::CableRegistration"** %491, align 8
  br label %511

496:                                              ; preds = %489
  %497 = getelementptr inbounds i8, i8* %35, i64 104
  %498 = bitcast i8* %497 to %"class.blink::mojom::blink::CableRegistration"**
  %499 = load %"class.blink::mojom::blink::CableRegistration"*, %"class.blink::mojom::blink::CableRegistration"** %498, align 8
  store %"class.blink::mojom::blink::CableRegistration"* null, %"class.blink::mojom::blink::CableRegistration"** %498, align 8
  %500 = icmp eq %"class.blink::mojom::blink::CableRegistration"* %499, null
  br i1 %500, label %501, label %503

501:                                              ; preds = %496
  %502 = bitcast i8* %497 to i64*
  store i64 %494, i64* %502, align 8
  store %"class.blink::mojom::blink::CableRegistration"* null, %"class.blink::mojom::blink::CableRegistration"** %491, align 8
  br label %511

503:                                              ; preds = %496
  call void @_ZN5blink5mojom5blink17CableRegistrationD1Ev(%"class.blink::mojom::blink::CableRegistration"* nonnull %499) #13
  %504 = bitcast %"class.blink::mojom::blink::CableRegistration"* %499 to i8*
  call void @_ZdlPv(i8* %504) #12
  %505 = bitcast i8* %497 to i64*
  %506 = load i64, i64* %505, align 8
  store i64 %494, i64* %505, align 8
  store %"class.blink::mojom::blink::CableRegistration"* null, %"class.blink::mojom::blink::CableRegistration"** %491, align 8
  %507 = icmp eq i64 %506, 0
  br i1 %507, label %511, label %508

508:                                              ; preds = %503
  %509 = inttoptr i64 %506 to %"class.blink::mojom::blink::CableRegistration"*
  call void @_ZN5blink5mojom5blink17CableRegistrationD1Ev(%"class.blink::mojom::blink::CableRegistration"* nonnull %509) #13
  %510 = inttoptr i64 %506 to i8*
  call void @_ZdlPv(i8* %510) #12
  br label %511

511:                                              ; preds = %501, %495, %503, %508
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %490) #13
  br label %512

512:                                              ; preds = %485, %511
  %513 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %442, i64 0, i32 5
  %514 = load i8, i8* %513, align 4, !range !7
  %515 = icmp eq i8 %514, 0
  br i1 %515, label %520, label %516

516:                                              ; preds = %512
  %517 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %442, i64 0, i32 18
  %518 = load i8, i8* %517, align 2, !range !7
  %519 = getelementptr inbounds i8, i8* %35, i64 112
  store i8 %518, i8* %519, align 8
  br label %520

520:                                              ; preds = %512, %516
  %521 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %442, i64 0, i32 15, i32 0, i32 0
  %522 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %521, align 8
  %523 = icmp eq %"class.WTF::StringImpl"* %522, null
  br i1 %523, label %591, label %524

524:                                              ; preds = %520
  %525 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %525) #13
  %526 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %522, %"class.WTF::StringImpl"** %526, align 8
  %527 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %522, i64 0, i32 1
  %528 = load i32, i32* %527, align 4
  %529 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %522, i64 1
  %530 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %531 = bitcast i8** %530 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %529, %"class.WTF::StringImpl"** %531, align 8
  %532 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %533 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %528, i32* %533, align 8
  %534 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %534) #13
  %535 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %532, i64* %535, align 8
  %536 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i64 0, i64 0), i8** %536, align 8
  %537 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 24, i32* %537, align 8
  %538 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %534) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %525) #13
  br i1 %538, label %589, label %539

539:                                              ; preds = %524
  %540 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %540) #13
  %541 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %521, align 8
  %542 = icmp eq %"class.WTF::StringImpl"* %541, null
  br i1 %542, label %543, label %547

543:                                              ; preds = %539
  %544 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %544, align 8
  %545 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %546 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %545, i64* %546, align 8
  br label %555

547:                                              ; preds = %539
  %548 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %541, %"class.WTF::StringImpl"** %548, align 8
  %549 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %541, i64 0, i32 1
  %550 = load i32, i32* %549, align 4
  %551 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %541, i64 1
  %552 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %553 = bitcast i8** %552 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %551, %"class.WTF::StringImpl"** %553, align 8
  %554 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %555

555:                                              ; preds = %547, %543
  %556 = phi i64 [ %554, %547 ], [ %545, %543 ]
  %557 = phi i32 [ %550, %547 ], [ 0, %543 ]
  %558 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %557, i32* %558, align 8
  %559 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %559) #13
  %560 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %556, i64* %560, align 8
  %561 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.16, i64 0, i64 0), i8** %561, align 8
  %562 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 44, i32* %562, align 8
  %563 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %559) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %540) #13
  br i1 %563, label %589, label %564

564:                                              ; preds = %555
  %565 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %565) #13
  %566 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %521, align 8
  %567 = icmp eq %"class.WTF::StringImpl"* %566, null
  br i1 %567, label %568, label %572

568:                                              ; preds = %564
  %569 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* null, i8** %569, align 8
  %570 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %571 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %570, i64* %571, align 8
  br label %580

572:                                              ; preds = %564
  %573 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 0
  store %"class.WTF::StringImpl"* %566, %"class.WTF::StringImpl"** %573, align 8
  %574 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %566, i64 0, i32 1
  %575 = load i32, i32* %574, align 4
  %576 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %566, i64 1
  %577 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  %578 = bitcast i8** %577 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %576, %"class.WTF::StringImpl"** %578, align 8
  %579 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %580

580:                                              ; preds = %572, %568
  %581 = phi i64 [ %579, %572 ], [ %570, %568 ]
  %582 = phi i32 [ %575, %572 ], [ 0, %568 ]
  %583 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 %582, i32* %583, align 8
  %584 = bitcast %"class.WTF::StringView"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %584) #13
  %585 = bitcast %"class.WTF::StringView"* %22 to i64*
  store i64 %581, i64* %585, align 8
  %586 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i64 0, i64 0), i8** %586, align 8
  %587 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 24, i32* %587, align 8
  %588 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %21, %"class.WTF::StringView"* nonnull dereferenceable(24) %22) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %584) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %565) #13
  br i1 %588, label %589, label %691

589:                                              ; preds = %580, %555, %524
  %590 = phi i32 [ 1, %524 ], [ 2, %555 ], [ 3, %580 ]
  store i32 %590, i32* %439, align 4
  br label %591

591:                                              ; preds = %589, %520
  %592 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %442, i64 0, i32 3
  %593 = load i8, i8* %592, align 2, !range !7
  %594 = icmp eq i8 %593, 0
  br i1 %594, label %600, label %595

595:                                              ; preds = %591
  %596 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %442, i64 0, i32 16
  %597 = load i8, i8* %596, align 8, !range !7
  %598 = icmp eq i8 %597, 0
  br i1 %598, label %600, label %599

599:                                              ; preds = %595
  store i8 1, i8* %440, align 8
  br label %600

600:                                              ; preds = %595, %591, %599
  %601 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %442, i64 0, i32 13
  %602 = load i8, i8* %601, align 8, !range !7
  %603 = icmp eq i8 %602, 0
  br i1 %603, label %606, label %604

604:                                              ; preds = %600
  %605 = getelementptr inbounds i8, i8* %35, i64 136
  store i8 1, i8* %605, align 8
  br label %606

606:                                              ; preds = %600, %604
  %607 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %442, i64 0, i32 20, i32 0, i32 0
  %608 = load %"class.blink::AuthenticationExtensionsLargeBlobInputs"*, %"class.blink::AuthenticationExtensionsLargeBlobInputs"** %607, align 8
  %609 = icmp eq %"class.blink::AuthenticationExtensionsLargeBlobInputs"* %608, null
  br i1 %609, label %643, label %610

610:                                              ; preds = %606
  %611 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %611) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %611, i8 -86, i64 16, i1 false)
  store i8 0, i8* %611, align 8
  %612 = getelementptr inbounds %"class.blink::AuthenticationExtensionsLargeBlobInputs", %"class.blink::AuthenticationExtensionsLargeBlobInputs"* %608, i64 0, i32 3, i32 0, i32 0
  %613 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %612, align 8
  %614 = icmp eq %"class.WTF::StringImpl"* %613, null
  br i1 %614, label %618, label %615

615:                                              ; preds = %610
  %616 = getelementptr inbounds %"class.blink::AuthenticationExtensionsLargeBlobInputs", %"class.blink::AuthenticationExtensionsLargeBlobInputs"* %608, i64 0, i32 3
  %617 = call dereferenceable(16) %"class.absl::optional.24"* @_ZN4absl8optionalIN3WTF6StringEEaSIRKS2_vEERS3_OT_(%"class.absl::optional.24"* nonnull %33, %"class.WTF::String"* dereferenceable(8) %616)
  br label %618

618:                                              ; preds = %610, %615
  %619 = call i32 @_ZN4mojo13TypeConverterIN5blink5mojom16LargeBlobSupportEN4absl8optionalIN3WTF6StringEEEE7ConvertERKS8_(%"class.absl::optional.24"* nonnull dereferenceable(16) %33) #13
  %620 = getelementptr inbounds i8, i8* %35, i64 140
  %621 = bitcast i8* %620 to i32*
  store i32 %619, i32* %621, align 4
  %622 = load i8, i8* %611, align 8, !range !7
  %623 = icmp eq i8 %622, 0
  br i1 %623, label %642, label %624

624:                                              ; preds = %618
  %625 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %33, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %626 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %625, align 8
  %627 = icmp eq %"class.WTF::StringImpl"* %626, null
  br i1 %627, label %641, label %628

628:                                              ; preds = %624
  %629 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %626, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %630 = load atomic i32, i32* %629 monotonic, align 4
  %631 = and i32 %630, 2
  %632 = icmp eq i32 %631, 0
  %633 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %626, i64 0, i32 0
  %634 = load i32, i32* %633, align 4
  br i1 %632, label %635, label %637

635:                                              ; preds = %628
  %636 = add i32 %634, -1
  store i32 %636, i32* %633, align 4
  br label %637

637:                                              ; preds = %635, %628
  %638 = phi i32 [ %636, %635 ], [ %634, %628 ]
  %639 = icmp eq i32 %638, 0
  br i1 %639, label %640, label %641

640:                                              ; preds = %637
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %626) #13
  br label %641

641:                                              ; preds = %640, %637, %624
  store i8 0, i8* %611, align 8
  br label %642

642:                                              ; preds = %618, %641
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %611) #13
  br label %643

643:                                              ; preds = %606, %642
  %644 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %442, i64 0, i32 12, i32 0
  %645 = load i32, i32* %644, align 8
  %646 = icmp eq i32 %645, 0
  br i1 %646, label %691, label %647

647:                                              ; preds = %643
  %648 = bitcast %"class.WTF::Vector"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %648) #13
  %649 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %442, i64 0, i32 12
  call void @_ZN4mojo13TypeConverterIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEN5blink28ArrayBufferOrArrayBufferViewEE7ConvertERKS6_(%"class.WTF::Vector"* nonnull sret %34, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24) %649) #13
  %650 = getelementptr inbounds i8, i8* %35, i64 152
  %651 = load i8, i8* %650, align 8, !range !7
  %652 = icmp eq i8 %651, 0
  %653 = getelementptr inbounds i8, i8* %35, i64 160
  br i1 %652, label %654, label %667

654:                                              ; preds = %647
  %655 = getelementptr inbounds i8, i8* %35, i64 168
  %656 = bitcast i8* %655 to i32*
  %657 = getelementptr inbounds i8, i8* %35, i64 172
  %658 = bitcast i8* %657 to i32*
  %659 = bitcast %"class.WTF::Vector"* %34 to i64*
  %660 = bitcast i8* %653 to i64*
  store i64 0, i64* %660, align 8
  %661 = load i64, i64* %659, align 8
  %662 = bitcast i8* %653 to i64*
  store atomic i64 0, i64* %659 monotonic, align 8
  store atomic i64 %661, i64* %662 monotonic, align 8
  %663 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 0, i32 0, i32 0, i32 1
  %664 = load i32, i32* %663, align 8
  store i32 %664, i32* %656, align 4
  store i32 0, i32* %663, align 8
  %665 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 0, i32 0, i32 0, i32 2
  %666 = load i32, i32* %665, align 4
  store i32 %666, i32* %658, align 4
  store i32 0, i32* %665, align 4
  store i8 1, i8* %650, align 8
  br label %690

667:                                              ; preds = %647
  %668 = bitcast %"class.WTF::Vector"* %34 to i64*
  %669 = load i64, i64* %668, align 8
  %670 = bitcast i8* %653 to i64*
  %671 = load i64, i64* %670, align 8
  store atomic i64 %671, i64* %668 monotonic, align 8
  store atomic i64 %669, i64* %670 monotonic, align 8
  %672 = getelementptr inbounds i8, i8* %35, i64 168
  %673 = bitcast i8* %672 to i32*
  %674 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 0, i32 0, i32 0, i32 1
  %675 = load i32, i32* %673, align 4
  %676 = load i32, i32* %674, align 8
  store i32 %676, i32* %673, align 4
  store i32 %675, i32* %674, align 8
  %677 = getelementptr inbounds i8, i8* %35, i64 172
  %678 = bitcast i8* %677 to i32*
  %679 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 0, i32 0, i32 0, i32 2
  %680 = load i32, i32* %678, align 4
  %681 = load i32, i32* %679, align 4
  store i32 %681, i32* %678, align 4
  store i32 %680, i32* %679, align 4
  %682 = inttoptr i64 %671 to i8*
  %683 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 0, i32 0, i32 0, i32 0
  %684 = icmp eq i64 %671, 0
  br i1 %684, label %690, label %685, !prof !6

685:                                              ; preds = %667
  %686 = icmp eq i32 %680, 0
  br i1 %686, label %689, label %687, !prof !5

687:                                              ; preds = %685
  %688 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %688, align 4
  br label %689

689:                                              ; preds = %687, %685
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %682) #13
  store i8* null, i8** %683, align 8
  br label %690

690:                                              ; preds = %654, %667, %689
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %648) #13
  br label %691

691:                                              ; preds = %690, %437, %643, %580, %427, %202
  %692 = phi i64 [ 0, %202 ], [ 0, %427 ], [ 0, %580 ], [ %37, %643 ], [ %37, %437 ], [ %37, %690 ]
  %693 = phi i64 [ %37, %202 ], [ %37, %427 ], [ %37, %580 ], [ 0, %643 ], [ 0, %437 ], [ 0, %690 ]
  %694 = bitcast %"class.mojo::StructPtr.106"* %0 to i64*
  store i64 %692, i64* %694, align 8
  %695 = load %"class.mojo::InlinedStructPtr.67"*, %"class.mojo::InlinedStructPtr.67"** %119, align 8
  %696 = icmp eq %"class.mojo::InlinedStructPtr.67"* %695, null
  br i1 %696, label %714, label %697, !prof !6

697:                                              ; preds = %691
  %698 = bitcast %"class.mojo::InlinedStructPtr.67"* %695 to i8*
  %699 = load i32, i32* %121, align 4
  %700 = icmp eq i32 %699, 0
  br i1 %700, label %712, label %701, !prof !5

701:                                              ; preds = %697
  %702 = zext i32 %699 to i64
  %703 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %695, i64 %702
  br label %704

704:                                              ; preds = %704, %701
  %705 = phi %"class.mojo::InlinedStructPtr.67"* [ %707, %704 ], [ %695, %701 ]
  %706 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %705, i64 0, i32 0
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %706) #13
  %707 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %705, i64 1
  %708 = icmp eq %"class.mojo::InlinedStructPtr.67"* %707, %703
  br i1 %708, label %709, label %704

709:                                              ; preds = %704
  store i32 0, i32* %121, align 4
  %710 = bitcast %"class.WTF::Vector.110"* %26 to i8**
  %711 = load i8*, i8** %710, align 8
  br label %712

712:                                              ; preds = %709, %697
  %713 = phi i8* [ %711, %709 ], [ %698, %697 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %713) #13
  store %"class.mojo::InlinedStructPtr.67"* null, %"class.mojo::InlinedStructPtr.67"** %119, align 8
  br label %714

714:                                              ; preds = %712, %691
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #13
  %715 = icmp eq i64 %693, 0
  br i1 %715, label %720, label %716

716:                                              ; preds = %90, %714
  %717 = phi i64 [ %37, %90 ], [ %693, %714 ]
  %718 = inttoptr i64 %717 to %"class.blink::mojom::blink::PublicKeyCredentialCreationOptions"*
  call void @_ZN5blink5mojom5blink34PublicKeyCredentialCreationOptionsD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialCreationOptions"* nonnull %718) #13
  %719 = inttoptr i64 %717 to i8*
  call void @_ZdlPv(i8* %719) #12
  br label %720

720:                                              ; preds = %714, %716
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink19CableAuthenticationEEENS2_23CableAuthenticationDataEE7ConvertERKS7_(%"class.mojo::StructPtr.140"* noalias nocapture sret, %"class.blink::CableAuthenticationData"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NotShared", align 8
  %4 = alloca %"class.blink::NotShared", align 8
  %5 = alloca %"class.blink::NotShared", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = alloca %"class.WTF::Vector", align 8
  %8 = alloca %"class.WTF::Vector", align 8
  %9 = alloca %"class.WTF::Vector", align 8
  %10 = tail call i8* @_Znwm(i64 104) #12, !noalias !46
  %11 = bitcast i8* %10 to %"class.blink::mojom::blink::CableAuthentication"*
  tail call void @_ZN5blink5mojom5blink19CableAuthenticationC1Ev(%"class.blink::mojom::blink::CableAuthentication"* nonnull %11) #13, !noalias !46
  %12 = ptrtoint i8* %10 to i64
  %13 = getelementptr inbounds %"class.blink::CableAuthenticationData", %"class.blink::CableAuthenticationData"* %1, i64 0, i32 6
  %14 = load i8, i8* %13, align 8
  store i8 %14, i8* %10, align 8
  switch i8 %14, label %317 [
    i8 1, label %15
    i8 2, label %264
  ]

15:                                               ; preds = %2
  %16 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.blink::CableAuthenticationData", %"class.blink::CableAuthenticationData"* %1, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::ArrayBufferOrArrayBufferView", %"class.blink::ArrayBufferOrArrayBufferView"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 8, !noalias !49
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %32

21:                                               ; preds = %15
  %22 = tail call %"class.blink::DOMArrayBuffer"* @_ZNK5blink28ArrayBufferOrArrayBufferView16GetAsArrayBufferEv(%"class.blink::ArrayBufferOrArrayBufferView"* %17) #13
  %23 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %22, i64 0, i32 0, i32 1, i32 0, i32 0
  %24 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %23, align 8
  %25 = icmp eq %"class.v8::BackingStore"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %21
  %27 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %24) #13
  %28 = icmp eq i64 %27, 16
  br i1 %28, label %30, label %29

29:                                               ; preds = %21, %26
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false) #13, !alias.scope !49
  br label %48

30:                                               ; preds = %26
  %31 = load i32, i32* %18, align 8, !noalias !49
  br label %32

32:                                               ; preds = %30, %15
  %33 = phi i32 [ %31, %30 ], [ %19, %15 ]
  %34 = icmp eq i32 %33, 2
  %35 = bitcast %"class.blink::NotShared"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13, !noalias !49
  br i1 %34, label %36, label %46

36:                                               ; preds = %32
  call void @_ZNK5blink28ArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv(%"class.blink::NotShared"* nonnull sret %5, %"class.blink::ArrayBufferOrArrayBufferView"* %17) #13
  %37 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %5, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %37, align 8, !noalias !49
  %39 = bitcast %"class.blink::DOMArrayBufferView"* %38 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %40 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %40, i64 10
  %42 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %41, align 8
  %43 = call i64 %42(%"class.blink::DOMArrayBufferView"* %38) #13
  %44 = icmp eq i64 %43, 16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13, !noalias !49
  br i1 %44, label %47, label %45

45:                                               ; preds = %36
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false) #13, !alias.scope !49
  br label %48

46:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13, !noalias !49
  br label %47

47:                                               ; preds = %46, %36
  call void @_ZN4mojo13TypeConverterIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEN5blink28ArrayBufferOrArrayBufferViewEE7ConvertERKS6_(%"class.WTF::Vector"* nonnull sret %6, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24) %17) #13
  br label %48

48:                                               ; preds = %29, %45, %47
  %49 = getelementptr inbounds i8, i8* %10, i64 8
  %50 = load i8, i8* %49, align 8, !range !7
  %51 = icmp eq i8 %50, 0
  %52 = getelementptr inbounds i8, i8* %10, i64 16
  br i1 %51, label %53, label %66

53:                                               ; preds = %48
  %54 = getelementptr inbounds i8, i8* %10, i64 24
  %55 = bitcast i8* %54 to i32*
  %56 = getelementptr inbounds i8, i8* %10, i64 28
  %57 = bitcast i8* %56 to i32*
  %58 = bitcast %"class.WTF::Vector"* %6 to i64*
  %59 = bitcast i8* %52 to i64*
  store i64 0, i64* %59, align 8
  %60 = load i64, i64* %58, align 8
  %61 = bitcast i8* %52 to i64*
  store atomic i64 0, i64* %58 monotonic, align 8
  store atomic i64 %60, i64* %61 monotonic, align 8
  %62 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 1
  %63 = load i32, i32* %62, align 8
  store i32 %63, i32* %55, align 4
  store i32 0, i32* %62, align 8
  %64 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %57, align 4
  store i32 0, i32* %64, align 4
  store i8 1, i8* %49, align 8
  br label %89

66:                                               ; preds = %48
  %67 = bitcast %"class.WTF::Vector"* %6 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast i8* %52 to i64*
  %70 = load i64, i64* %69, align 8
  store atomic i64 %70, i64* %67 monotonic, align 8
  store atomic i64 %68, i64* %69 monotonic, align 8
  %71 = getelementptr inbounds i8, i8* %10, i64 24
  %72 = bitcast i8* %71 to i32*
  %73 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = load i32, i32* %72, align 4
  %75 = load i32, i32* %73, align 8
  store i32 %75, i32* %72, align 4
  store i32 %74, i32* %73, align 8
  %76 = getelementptr inbounds i8, i8* %10, i64 28
  %77 = bitcast i8* %76 to i32*
  %78 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %79 = load i32, i32* %77, align 4
  %80 = load i32, i32* %78, align 4
  store i32 %80, i32* %77, align 4
  store i32 %79, i32* %78, align 4
  %81 = inttoptr i64 %70 to i8*
  %82 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = icmp eq i64 %70, 0
  br i1 %83, label %89, label %84, !prof !6

84:                                               ; preds = %66
  %85 = icmp eq i32 %79, 0
  br i1 %85, label %88, label %86, !prof !5

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %87, align 4
  br label %88

88:                                               ; preds = %86, %84
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %81) #13
  store i8* null, i8** %82, align 8
  br label %89

89:                                               ; preds = %53, %66, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #13
  %90 = bitcast %"class.WTF::Vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #13
  %91 = getelementptr inbounds %"class.blink::CableAuthenticationData", %"class.blink::CableAuthenticationData"* %1, i64 0, i32 3
  %92 = getelementptr inbounds %"class.blink::ArrayBufferOrArrayBufferView", %"class.blink::ArrayBufferOrArrayBufferView"* %91, i64 0, i32 0
  %93 = load i32, i32* %92, align 8, !noalias !52
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %106

95:                                               ; preds = %89
  %96 = call %"class.blink::DOMArrayBuffer"* @_ZNK5blink28ArrayBufferOrArrayBufferView16GetAsArrayBufferEv(%"class.blink::ArrayBufferOrArrayBufferView"* %91) #13
  %97 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %96, i64 0, i32 0, i32 1, i32 0, i32 0
  %98 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %97, align 8
  %99 = icmp eq %"class.v8::BackingStore"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %98) #13
  %102 = icmp eq i64 %101, 16
  br i1 %102, label %104, label %103

103:                                              ; preds = %95, %100
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 16, i1 false) #13, !alias.scope !52
  br label %122

104:                                              ; preds = %100
  %105 = load i32, i32* %92, align 8, !noalias !52
  br label %106

106:                                              ; preds = %104, %89
  %107 = phi i32 [ %105, %104 ], [ %93, %89 ]
  %108 = icmp eq i32 %107, 2
  %109 = bitcast %"class.blink::NotShared"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #13, !noalias !52
  br i1 %108, label %110, label %120

110:                                              ; preds = %106
  call void @_ZNK5blink28ArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv(%"class.blink::NotShared"* nonnull sret %4, %"class.blink::ArrayBufferOrArrayBufferView"* %91) #13
  %111 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %4, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %111, align 8, !noalias !52
  %113 = bitcast %"class.blink::DOMArrayBufferView"* %112 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %114 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %113, align 8
  %115 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %114, i64 10
  %116 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %115, align 8
  %117 = call i64 %116(%"class.blink::DOMArrayBufferView"* %112) #13
  %118 = icmp eq i64 %117, 16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #13, !noalias !52
  br i1 %118, label %121, label %119

119:                                              ; preds = %110
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 16, i1 false) #13, !alias.scope !52
  br label %122

120:                                              ; preds = %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #13, !noalias !52
  br label %121

121:                                              ; preds = %120, %110
  call void @_ZN4mojo13TypeConverterIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEN5blink28ArrayBufferOrArrayBufferViewEE7ConvertERKS6_(%"class.WTF::Vector"* nonnull sret %7, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24) %91) #13
  br label %122

122:                                              ; preds = %103, %119, %121
  %123 = getelementptr inbounds i8, i8* %10, i64 32
  %124 = load i8, i8* %123, align 8, !range !7
  %125 = icmp eq i8 %124, 0
  %126 = getelementptr inbounds i8, i8* %10, i64 40
  br i1 %125, label %127, label %140

127:                                              ; preds = %122
  %128 = getelementptr inbounds i8, i8* %10, i64 48
  %129 = bitcast i8* %128 to i32*
  %130 = getelementptr inbounds i8, i8* %10, i64 52
  %131 = bitcast i8* %130 to i32*
  %132 = bitcast %"class.WTF::Vector"* %7 to i64*
  %133 = bitcast i8* %126 to i64*
  store i64 0, i64* %133, align 8
  %134 = load i64, i64* %132, align 8
  %135 = bitcast i8* %126 to i64*
  store atomic i64 0, i64* %132 monotonic, align 8
  store atomic i64 %134, i64* %135 monotonic, align 8
  %136 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  store i32 %137, i32* %129, align 4
  store i32 0, i32* %136, align 8
  %138 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %139 = load i32, i32* %138, align 4
  store i32 %139, i32* %131, align 4
  store i32 0, i32* %138, align 4
  store i8 1, i8* %123, align 8
  br label %163

140:                                              ; preds = %122
  %141 = bitcast %"class.WTF::Vector"* %7 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast i8* %126 to i64*
  %144 = load i64, i64* %143, align 8
  store atomic i64 %144, i64* %141 monotonic, align 8
  store atomic i64 %142, i64* %143 monotonic, align 8
  %145 = getelementptr inbounds i8, i8* %10, i64 48
  %146 = bitcast i8* %145 to i32*
  %147 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 1
  %148 = load i32, i32* %146, align 4
  %149 = load i32, i32* %147, align 8
  store i32 %149, i32* %146, align 4
  store i32 %148, i32* %147, align 8
  %150 = getelementptr inbounds i8, i8* %10, i64 52
  %151 = bitcast i8* %150 to i32*
  %152 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %153 = load i32, i32* %151, align 4
  %154 = load i32, i32* %152, align 4
  store i32 %154, i32* %151, align 4
  store i32 %153, i32* %152, align 4
  %155 = inttoptr i64 %144 to i8*
  %156 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %157 = icmp eq i64 %144, 0
  br i1 %157, label %163, label %158, !prof !6

158:                                              ; preds = %140
  %159 = icmp eq i32 %153, 0
  br i1 %159, label %162, label %160, !prof !5

160:                                              ; preds = %158
  %161 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %161, align 4
  br label %162

162:                                              ; preds = %160, %158
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %155) #13
  store i8* null, i8** %156, align 8
  br label %163

163:                                              ; preds = %127, %140, %162
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #13
  %164 = bitcast %"class.WTF::Vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %164) #13
  %165 = getelementptr inbounds %"class.blink::CableAuthenticationData", %"class.blink::CableAuthenticationData"* %1, i64 0, i32 5
  %166 = getelementptr inbounds %"class.blink::ArrayBufferOrArrayBufferView", %"class.blink::ArrayBufferOrArrayBufferView"* %165, i64 0, i32 0
  %167 = load i32, i32* %166, align 8, !noalias !55
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %169, label %180

169:                                              ; preds = %163
  %170 = call %"class.blink::DOMArrayBuffer"* @_ZNK5blink28ArrayBufferOrArrayBufferView16GetAsArrayBufferEv(%"class.blink::ArrayBufferOrArrayBufferView"* %165) #13
  %171 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %170, i64 0, i32 0, i32 1, i32 0, i32 0
  %172 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %171, align 8
  %173 = icmp eq %"class.v8::BackingStore"* %172, null
  br i1 %173, label %177, label %174

174:                                              ; preds = %169
  %175 = call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %172) #13
  %176 = icmp eq i64 %175, 32
  br i1 %176, label %178, label %177

177:                                              ; preds = %169, %174
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %164, i8 0, i64 16, i1 false) #13, !alias.scope !55
  br label %196

178:                                              ; preds = %174
  %179 = load i32, i32* %166, align 8, !noalias !55
  br label %180

180:                                              ; preds = %178, %163
  %181 = phi i32 [ %179, %178 ], [ %167, %163 ]
  %182 = icmp eq i32 %181, 2
  %183 = bitcast %"class.blink::NotShared"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #13, !noalias !55
  br i1 %182, label %184, label %194

184:                                              ; preds = %180
  call void @_ZNK5blink28ArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv(%"class.blink::NotShared"* nonnull sret %3, %"class.blink::ArrayBufferOrArrayBufferView"* %165) #13
  %185 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %3, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %185, align 8, !noalias !55
  %187 = bitcast %"class.blink::DOMArrayBufferView"* %186 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %188 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %187, align 8
  %189 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %188, i64 10
  %190 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %189, align 8
  %191 = call i64 %190(%"class.blink::DOMArrayBufferView"* %186) #13
  %192 = icmp eq i64 %191, 32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #13, !noalias !55
  br i1 %192, label %195, label %193

193:                                              ; preds = %184
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %164, i8 0, i64 16, i1 false) #13, !alias.scope !55
  br label %196

194:                                              ; preds = %180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #13, !noalias !55
  br label %195

195:                                              ; preds = %194, %184
  call void @_ZN4mojo13TypeConverterIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEN5blink28ArrayBufferOrArrayBufferViewEE7ConvertERKS6_(%"class.WTF::Vector"* nonnull sret %8, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24) %165) #13
  br label %196

196:                                              ; preds = %177, %193, %195
  %197 = getelementptr inbounds i8, i8* %10, i64 56
  %198 = load i8, i8* %197, align 8, !range !7
  %199 = icmp eq i8 %198, 0
  %200 = getelementptr inbounds i8, i8* %10, i64 64
  br i1 %199, label %201, label %214

201:                                              ; preds = %196
  %202 = getelementptr inbounds i8, i8* %10, i64 72
  %203 = bitcast i8* %202 to i32*
  %204 = getelementptr inbounds i8, i8* %10, i64 76
  %205 = bitcast i8* %204 to i32*
  %206 = bitcast %"class.WTF::Vector"* %8 to i64*
  %207 = bitcast i8* %200 to i64*
  store i64 0, i64* %207, align 8
  %208 = load i64, i64* %206, align 8
  %209 = bitcast i8* %200 to i64*
  store atomic i64 0, i64* %206 monotonic, align 8
  store atomic i64 %208, i64* %209 monotonic, align 8
  %210 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 1
  %211 = load i32, i32* %210, align 8
  store i32 %211, i32* %203, align 4
  store i32 0, i32* %210, align 8
  %212 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 2
  %213 = load i32, i32* %212, align 4
  store i32 %213, i32* %205, align 4
  store i32 0, i32* %212, align 4
  store i8 1, i8* %197, align 8
  br label %237

214:                                              ; preds = %196
  %215 = bitcast %"class.WTF::Vector"* %8 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast i8* %200 to i64*
  %218 = load i64, i64* %217, align 8
  store atomic i64 %218, i64* %215 monotonic, align 8
  store atomic i64 %216, i64* %217 monotonic, align 8
  %219 = getelementptr inbounds i8, i8* %10, i64 72
  %220 = bitcast i8* %219 to i32*
  %221 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 1
  %222 = load i32, i32* %220, align 4
  %223 = load i32, i32* %221, align 8
  store i32 %223, i32* %220, align 4
  store i32 %222, i32* %221, align 8
  %224 = getelementptr inbounds i8, i8* %10, i64 76
  %225 = bitcast i8* %224 to i32*
  %226 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 2
  %227 = load i32, i32* %225, align 4
  %228 = load i32, i32* %226, align 4
  store i32 %228, i32* %225, align 4
  store i32 %227, i32* %226, align 4
  %229 = inttoptr i64 %218 to i8*
  %230 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 0
  %231 = icmp eq i64 %218, 0
  br i1 %231, label %237, label %232, !prof !6

232:                                              ; preds = %214
  %233 = icmp eq i32 %227, 0
  br i1 %233, label %236, label %234, !prof !5

234:                                              ; preds = %232
  %235 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %235, align 4
  br label %236

236:                                              ; preds = %234, %232
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %229) #13
  store i8* null, i8** %230, align 8
  br label %237

237:                                              ; preds = %201, %214, %236
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %164) #13
  %238 = load i8, i8* %49, align 8, !range !7
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %240, label %241, !prof !5

240:                                              ; preds = %237
  call void @llvm.trap() #13
  unreachable

241:                                              ; preds = %237
  %242 = getelementptr inbounds i8, i8* %10, i64 28
  %243 = bitcast i8* %242 to i32*
  %244 = load i32, i32* %243, align 4
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %317, label %246

246:                                              ; preds = %241
  %247 = load i8, i8* %123, align 8, !range !7
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %249, label %250, !prof !5

249:                                              ; preds = %246
  call void @llvm.trap() #13
  unreachable

250:                                              ; preds = %246
  %251 = getelementptr inbounds i8, i8* %10, i64 52
  %252 = bitcast i8* %251 to i32*
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %317, label %255

255:                                              ; preds = %250
  %256 = load i8, i8* %197, align 8, !range !7
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %258, label %259, !prof !5

258:                                              ; preds = %255
  call void @llvm.trap() #13
  unreachable

259:                                              ; preds = %255
  %260 = getelementptr inbounds i8, i8* %10, i64 76
  %261 = bitcast i8* %260 to i32*
  %262 = load i32, i32* %261, align 4
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %317, label %315

264:                                              ; preds = %2
  %265 = bitcast %"class.WTF::Vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %265) #13
  %266 = getelementptr inbounds %"class.blink::CableAuthenticationData", %"class.blink::CableAuthenticationData"* %1, i64 0, i32 5
  call void @_ZN4mojo13TypeConverterIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEN5blink28ArrayBufferOrArrayBufferViewEE7ConvertERKS6_(%"class.WTF::Vector"* nonnull sret %9, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24) %266) #13
  %267 = getelementptr inbounds i8, i8* %10, i64 80
  %268 = load i8, i8* %267, align 8, !range !7
  %269 = icmp eq i8 %268, 0
  %270 = getelementptr inbounds i8, i8* %10, i64 88
  br i1 %269, label %271, label %284

271:                                              ; preds = %264
  %272 = getelementptr inbounds i8, i8* %10, i64 96
  %273 = bitcast i8* %272 to i32*
  %274 = getelementptr inbounds i8, i8* %10, i64 100
  %275 = bitcast i8* %274 to i32*
  %276 = bitcast %"class.WTF::Vector"* %9 to i64*
  %277 = bitcast i8* %270 to i64*
  store i64 0, i64* %277, align 8
  %278 = load i64, i64* %276, align 8
  %279 = bitcast i8* %270 to i64*
  store atomic i64 0, i64* %276 monotonic, align 8
  store atomic i64 %278, i64* %279 monotonic, align 8
  %280 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 1
  %281 = load i32, i32* %280, align 8
  store i32 %281, i32* %273, align 4
  store i32 0, i32* %280, align 8
  %282 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 2
  %283 = load i32, i32* %282, align 4
  store i32 %283, i32* %275, align 4
  store i32 0, i32* %282, align 4
  store i8 1, i8* %267, align 8
  br label %305

284:                                              ; preds = %264
  %285 = bitcast %"class.WTF::Vector"* %9 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = bitcast i8* %270 to i64*
  %288 = load i64, i64* %287, align 8
  store atomic i64 %288, i64* %285 monotonic, align 8
  store atomic i64 %286, i64* %287 monotonic, align 8
  %289 = getelementptr inbounds i8, i8* %10, i64 96
  %290 = bitcast i8* %289 to i32*
  %291 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 1
  %292 = load i32, i32* %290, align 4
  %293 = load i32, i32* %291, align 8
  store i32 %293, i32* %290, align 4
  store i32 %292, i32* %291, align 8
  %294 = getelementptr inbounds i8, i8* %10, i64 100
  %295 = bitcast i8* %294 to i32*
  %296 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 2
  %297 = load i32, i32* %295, align 4
  %298 = load i32, i32* %296, align 4
  store i32 %298, i32* %295, align 4
  store i32 %297, i32* %296, align 4
  %299 = inttoptr i64 %288 to i8*
  %300 = icmp eq i64 %288, 0
  br i1 %300, label %305, label %301, !prof !6

301:                                              ; preds = %284
  %302 = icmp eq i32 %297, 0
  br i1 %302, label %306, label %303, !prof !5

303:                                              ; preds = %301
  %304 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %304, align 4
  br label %306

305:                                              ; preds = %284, %271
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %265) #13
  br label %310

306:                                              ; preds = %301, %303
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %299) #13
  %307 = load i8, i8* %267, align 8, !range !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %265) #13
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %309, label %310, !prof !5

309:                                              ; preds = %306
  call void @llvm.trap() #13
  unreachable

310:                                              ; preds = %305, %306
  %311 = getelementptr inbounds i8, i8* %10, i64 100
  %312 = bitcast i8* %311 to i32*
  %313 = load i32, i32* %312, align 4
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %317, label %315

315:                                              ; preds = %259, %310
  %316 = bitcast %"class.mojo::StructPtr.140"* %0 to i64*
  store i64 %12, i64* %316, align 8
  br label %319

317:                                              ; preds = %2, %310, %241, %250, %259
  %318 = bitcast %"class.mojo::StructPtr.140"* %0 to i64*
  store i64 0, i64* %318, align 8
  call void @_ZN5blink5mojom5blink19CableAuthenticationD1Ev(%"class.blink::mojom::blink::CableAuthentication"* nonnull %11) #13
  call void @_ZdlPv(i8* nonnull %10) #12
  br label %319

319:                                              ; preds = %315, %317
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink17CableRegistrationEEENS2_21CableRegistrationDataEE7ConvertERKS7_(%"class.mojo::StructPtr.125"* noalias nocapture sret, %"class.blink::CableRegistrationData"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NotShared", align 8
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = tail call i8* @_Znwm(i64 32) #12, !noalias !58
  %6 = bitcast i8* %5 to %"class.blink::mojom::blink::CableRegistration"*
  tail call void @_ZN5blink5mojom5blink17CableRegistrationC1Ev(%"class.blink::mojom::blink::CableRegistration"* nonnull %6) #13, !noalias !58
  %7 = ptrtoint i8* %5 to i64
  %8 = getelementptr inbounds %"class.blink::CableRegistrationData", %"class.blink::CableRegistrationData"* %1, i64 0, i32 3
  %9 = bitcast i8* %5 to %"class.WTF::Vector"*
  %10 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector"* nonnull %9, %"class.WTF::Vector"* dereferenceable(16) %8)
  %11 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.blink::CableRegistrationData", %"class.blink::CableRegistrationData"* %1, i64 0, i32 2
  %13 = getelementptr inbounds %"class.blink::ArrayBufferOrArrayBufferView", %"class.blink::ArrayBufferOrArrayBufferView"* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 8, !noalias !61
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %27

16:                                               ; preds = %2
  %17 = tail call %"class.blink::DOMArrayBuffer"* @_ZNK5blink28ArrayBufferOrArrayBufferView16GetAsArrayBufferEv(%"class.blink::ArrayBufferOrArrayBufferView"* %12) #13
  %18 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %19 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %18, align 8
  %20 = icmp eq %"class.v8::BackingStore"* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %19) #13
  %23 = icmp eq i64 %22, 65
  br i1 %23, label %25, label %24

24:                                               ; preds = %16, %21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #13, !alias.scope !61
  br label %49

25:                                               ; preds = %21
  %26 = load i32, i32* %13, align 8, !noalias !61
  br label %27

27:                                               ; preds = %25, %2
  %28 = phi i32 [ %26, %25 ], [ %14, %2 ]
  %29 = icmp eq i32 %28, 2
  %30 = bitcast %"class.blink::NotShared"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13, !noalias !61
  br i1 %29, label %31, label %41

31:                                               ; preds = %27
  call void @_ZNK5blink28ArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv(%"class.blink::NotShared"* nonnull sret %3, %"class.blink::ArrayBufferOrArrayBufferView"* %12) #13
  %32 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %3, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %32, align 8, !noalias !61
  %34 = bitcast %"class.blink::DOMArrayBufferView"* %33 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %35 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %34, align 8
  %36 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %35, i64 10
  %37 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %36, align 8
  %38 = call i64 %37(%"class.blink::DOMArrayBufferView"* %33) #13
  %39 = icmp eq i64 %38, 65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13, !noalias !61
  br i1 %39, label %42, label %40

40:                                               ; preds = %31
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #13, !alias.scope !61
  br label %49

41:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13, !noalias !61
  br label %42

42:                                               ; preds = %41, %31
  call void @_ZN4mojo13TypeConverterIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEN5blink28ArrayBufferOrArrayBufferViewEE7ConvertERKS6_(%"class.WTF::Vector"* nonnull sret %4, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24) %12) #13
  %43 = bitcast %"class.WTF::Vector"* %4 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  br label %49

49:                                               ; preds = %24, %40, %42
  %50 = phi i32 [ 0, %24 ], [ 0, %40 ], [ %48, %42 ]
  %51 = phi i32 [ 0, %24 ], [ 0, %40 ], [ %46, %42 ]
  %52 = phi i64 [ 0, %24 ], [ 0, %40 ], [ %44, %42 ]
  %53 = getelementptr inbounds i8, i8* %5, i64 16
  %54 = bitcast %"class.WTF::Vector"* %4 to i64*
  %55 = bitcast i8* %53 to i64*
  %56 = load i64, i64* %55, align 8
  store atomic i64 %56, i64* %54 monotonic, align 8
  store atomic i64 %52, i64* %55 monotonic, align 8
  %57 = getelementptr inbounds i8, i8* %5, i64 24
  %58 = bitcast i8* %57 to i32*
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %58, align 4
  store i32 %51, i32* %58, align 4
  store i32 %60, i32* %59, align 8
  %61 = getelementptr inbounds i8, i8* %5, i64 28
  %62 = bitcast i8* %61 to i32*
  %63 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %64 = load i32, i32* %62, align 4
  store i32 %50, i32* %62, align 4
  store i32 %64, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %66 = inttoptr i64 %56 to i8*
  %67 = icmp eq i64 %56, 0
  br i1 %67, label %73, label %68, !prof !6

68:                                               ; preds = %49
  %69 = icmp eq i32 %64, 0
  br i1 %69, label %71, label %70, !prof !5

70:                                               ; preds = %68
  store i32 0, i32* %63, align 4
  br label %71

71:                                               ; preds = %70, %68
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #13
  store i8* null, i8** %65, align 8
  %72 = load i32, i32* %62, align 4
  br label %73

73:                                               ; preds = %49, %71
  %74 = phi i32 [ %50, %49 ], [ %72, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  %75 = icmp eq i32 %74, 0
  %76 = bitcast %"class.mojo::StructPtr.125"* %0 to i64*
  br i1 %75, label %78, label %77

77:                                               ; preds = %73
  store i64 %7, i64* %76, align 8
  br label %79

78:                                               ; preds = %73
  store i64 0, i64* %76, align 8
  call void @_ZN5blink5mojom5blink17CableRegistrationD1Ev(%"class.blink::mojom::blink::CableRegistration"* nonnull %6) #13
  call void @_ZdlPv(i8* nonnull %5) #12
  br label %79

79:                                               ; preds = %77, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %79, label %4, !prof !5

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %54

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %54

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #13
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ 0, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %8, %15 ], [ %24, %20 ]
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %54, !prof !6

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %34) #13
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %37 = ptrtoint i8* %36 to i64
  br i1 %33, label %38, label %41

38:                                               ; preds = %30
  %39 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %39 monotonic, align 8
  %40 = trunc i64 %35 to i32
  store i32 %40, i32* %12, align 8
  br label %54

41:                                               ; preds = %30
  %42 = load i8*, i8** %31, align 8
  %43 = icmp ne i8* %36, null
  %44 = icmp ne i8* %42, null
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %50, !prof !6

46:                                               ; preds = %41
  %47 = load i32, i32* %5, align 4
  %48 = zext i32 %47 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* nonnull align 1 %42, i64 %48, i1 false) #13
  %49 = load i8*, i8** %31, align 8
  br label %50

50:                                               ; preds = %46, %41
  %51 = phi i8* [ %42, %41 ], [ %49, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #13
  %52 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %52 monotonic, align 8
  %53 = trunc i64 %35 to i32
  store i32 %53, i32* %12, align 8
  br label %54

54:                                               ; preds = %50, %38, %26, %11, %10
  %55 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = load i32, i32* %5, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %56, i64 %58, i1 false) #13
  %61 = load i8*, i8** %55, align 8
  %62 = load i32, i32* %5, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %61, i64 %63
  %65 = load i8*, i8** %59, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %63
  %67 = icmp ne i8* %66, null
  %68 = icmp ne i8* %64, null
  %69 = and i1 %68, %67
  br i1 %69, label %70, label %77, !prof !6

70:                                               ; preds = %54
  %71 = load i32, i32* %7, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %61, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = ptrtoint i8* %64 to i64
  %76 = sub i64 %74, %75
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %66, i8* nonnull align 1 %64, i64 %76, i1 false) #13
  br label %77

77:                                               ; preds = %54, %70
  %78 = load i32, i32* %7, align 4
  store i32 %78, i32* %5, align 4
  br label %79

79:                                               ; preds = %2, %77
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink33PublicKeyCredentialRequestOptionsEEENS2_33PublicKeyCredentialRequestOptionsEE7ConvertERKS7_(%"class.mojo::StructPtr.147"* noalias nocapture sret, %"class.blink::PublicKeyCredentialRequestOptions"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = alloca %"class.mojo::StructPtr.55", align 8
  %5 = alloca %"class.WTF::Vector.151", align 8
  %6 = alloca %"class.mojo::StructPtr.140", align 8
  %7 = alloca %"class.WTF::Vector", align 8
  %8 = getelementptr inbounds %"class.mojo::StructPtr.147", %"class.mojo::StructPtr.147"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call i8* @_Znwm(i64 160) #12, !noalias !64
  %10 = bitcast i8* %9 to %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"*
  tail call void @_ZN5blink5mojom5blink33PublicKeyCredentialRequestOptionsC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* nonnull %10) #13, !noalias !64
  %11 = ptrtoint i8* %9 to i64
  %12 = bitcast %"class.mojo::StructPtr.147"* %0 to i64*
  store i64 %11, i64* %12, align 8, !alias.scope !64
  %13 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.blink::PublicKeyCredentialRequestOptions", %"class.blink::PublicKeyCredentialRequestOptions"* %1, i64 0, i32 4
  call void @_ZN4mojo13TypeConverterIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEN5blink28ArrayBufferOrArrayBufferViewEE7ConvertERKS6_(%"class.WTF::Vector"* nonnull sret %3, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24) %14) #13
  %15 = getelementptr inbounds i8, i8* %9, i64 8
  %16 = bitcast %"class.WTF::Vector"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %15 to i64*
  %19 = load i64, i64* %18, align 8
  store atomic i64 %19, i64* %16 monotonic, align 8
  store atomic i64 %17, i64* %18 monotonic, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 16
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %21, align 4
  %24 = load i32, i32* %22, align 8
  store i32 %24, i32* %21, align 4
  store i32 %23, i32* %22, align 8
  %25 = getelementptr inbounds i8, i8* %9, i64 20
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %26, align 4
  %29 = load i32, i32* %27, align 4
  store i32 %29, i32* %26, align 4
  store i32 %28, i32* %27, align 4
  %30 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %31 = inttoptr i64 %19 to i8*
  %32 = icmp eq i64 %19, 0
  br i1 %32, label %37, label %33, !prof !6

33:                                               ; preds = %2
  %34 = icmp eq i32 %28, 0
  br i1 %34, label %36, label %35, !prof !5

35:                                               ; preds = %33
  store i32 0, i32* %27, align 4
  br label %36

36:                                               ; preds = %35, %33
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #13
  store i8* null, i8** %30, align 8
  br label %37

37:                                               ; preds = %2, %36
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #13
  %38 = getelementptr inbounds %"class.blink::PublicKeyCredentialRequestOptions", %"class.blink::PublicKeyCredentialRequestOptions"* %1, i64 0, i32 2
  %39 = load i8, i8* %38, align 1, !range !7
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %52, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::PublicKeyCredentialRequestOptions", %"class.blink::PublicKeyCredentialRequestOptions"* %1, i64 0, i32 7
  %43 = load i32, i32* %42, align 8
  %44 = zext i32 %43 to i64
  %45 = mul nuw nsw i64 %44, 1000
  %46 = getelementptr inbounds i8, i8* %9, i64 24
  %47 = load i8, i8* %46, align 8, !range !7
  %48 = icmp eq i8 %47, 0
  %49 = getelementptr inbounds i8, i8* %9, i64 32
  %50 = bitcast i8* %49 to i64*
  store i64 %45, i64* %50, align 8
  br i1 %48, label %51, label %52

51:                                               ; preds = %41
  store i8 1, i8* %46, align 8
  br label %52

52:                                               ; preds = %37, %51, %41
  %53 = getelementptr inbounds %"class.blink::PublicKeyCredentialRequestOptions", %"class.blink::PublicKeyCredentialRequestOptions"* %1, i64 0, i32 6, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %94, label %56

56:                                               ; preds = %52
  %57 = load %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"*, %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"** %8, align 8
  %58 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %57, i64 0, i32 4
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #13
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !5

72:                                               ; preds = %63
  call void @llvm.trap() #13
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %73, %56
  %76 = ptrtoint %"class.WTF::StringImpl"* %54 to i64
  %77 = bitcast %"class.WTF::String"* %58 to i64*
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  store i64 %76, i64* %77, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #13
  br label %94

94:                                               ; preds = %52, %93, %90, %75
  %95 = getelementptr inbounds %"class.blink::PublicKeyCredentialRequestOptions", %"class.blink::PublicKeyCredentialRequestOptions"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::Member.75"*, %"class.blink::Member.75"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::PublicKeyCredentialRequestOptions", %"class.blink::PublicKeyCredentialRequestOptions"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds %"class.blink::Member.75", %"class.blink::Member.75"* %96, i64 %99
  %101 = icmp eq i32 %98, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %94
  %103 = bitcast %"class.mojo::StructPtr.55"* %4 to i8*
  %104 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.mojo::StructPtr.55"* %4 to i64*
  br label %112

106:                                              ; preds = %142, %94
  %107 = load %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"*, %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"** %8, align 8
  %108 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %107, i64 0, i32 6
  store i32 1, i32* %108, align 8
  %109 = getelementptr inbounds %"class.blink::PublicKeyCredentialRequestOptions", %"class.blink::PublicKeyCredentialRequestOptions"* %1, i64 0, i32 8, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %148, label %145

112:                                              ; preds = %102, %142
  %113 = phi %"class.blink::Member.75"* [ %96, %102 ], [ %143, %142 ]
  %114 = getelementptr inbounds %"class.blink::Member.75", %"class.blink::Member.75"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.blink::PublicKeyCredentialDescriptor"*, %"class.blink::PublicKeyCredentialDescriptor"** %114, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #13
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* inttoptr (i64 -6148914691236517206 to %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"*), %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %104, align 8
  call void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEENS2_29PublicKeyCredentialDescriptorEE7ConvertERKS7_(%"class.mojo::StructPtr.55"* nonnull sret %4, %"class.blink::PublicKeyCredentialDescriptor"* dereferenceable(64) %115) #13
  %116 = load %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"*, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %104, align 8
  %117 = icmp eq %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* %116, null
  br i1 %117, label %118, label %119

118:                                              ; preds = %112
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %104, align 8
  br label %142

119:                                              ; preds = %112
  %120 = load %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"*, %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"** %8, align 8
  %121 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %120, i64 0, i32 5
  %122 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %120, i64 0, i32 5, i32 0, i32 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %120, i64 0, i32 5, i32 0, i32 0, i32 1
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %123, %125
  br i1 %126, label %137, label %127, !prof !5

127:                                              ; preds = %119
  %128 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %121, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.mojo::StructPtr.55"*, %"class.mojo::StructPtr.55"** %128, align 8
  %130 = zext i32 %123 to i64
  %131 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %129, i64 %130
  %132 = bitcast %"class.mojo::StructPtr.55"* %131 to i64*
  %133 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %133, align 8
  %134 = load i64, i64* %105, align 8
  store i64 %134, i64* %132, align 8
  %135 = load i32, i32* %122, align 4
  %136 = add i32 %135, 1
  store i32 %136, i32* %122, align 4
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %104, align 8
  br label %142

137:                                              ; preds = %119
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.120"* %121, %"class.mojo::StructPtr.55"* nonnull dereferenceable(8) %4) #13
  %138 = load %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"*, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %104, align 8
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %104, align 8
  %139 = icmp eq %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %137
  %141 = bitcast %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* %138 to i8*
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialDescriptorD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* nonnull %138) #13
  call void @_ZdlPv(i8* %141) #12
  br label %142

142:                                              ; preds = %127, %118, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #13
  %143 = getelementptr inbounds %"class.blink::Member.75", %"class.blink::Member.75"* %113, i64 1
  %144 = icmp eq %"class.blink::Member.75"* %143, %100
  br i1 %144, label %106, label %112

145:                                              ; preds = %106
  %146 = getelementptr inbounds %"class.blink::PublicKeyCredentialRequestOptions", %"class.blink::PublicKeyCredentialRequestOptions"* %1, i64 0, i32 8
  %147 = call i32 @_ZN4mojo13TypeConverterIN5blink5mojom27UserVerificationRequirementEN3WTF6StringEE7ConvertERKS5_(%"class.WTF::String"* dereferenceable(8) %146) #13
  store i32 %147, i32* %108, align 8
  br label %148

148:                                              ; preds = %106, %145
  %149 = getelementptr inbounds %"class.blink::PublicKeyCredentialRequestOptions", %"class.blink::PublicKeyCredentialRequestOptions"* %1, i64 0, i32 5, i32 0, i32 0
  %150 = load %"class.blink::AuthenticationExtensionsClientInputs"*, %"class.blink::AuthenticationExtensionsClientInputs"** %149, align 8
  %151 = icmp eq %"class.blink::AuthenticationExtensionsClientInputs"* %150, null
  br i1 %151, label %359, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %150, i64 0, i32 8, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %193, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %107, i64 0, i32 8
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %174

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = zext i32 %164 to i33
  %166 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %165, i33 1) #13
  %167 = extractvalue { i33, i1 } %166, 1
  %168 = extractvalue { i33, i1 } %166, 0
  %169 = icmp slt i33 %168, 0
  %170 = or i1 %167, %169
  br i1 %170, label %171, label %172, !prof !5

171:                                              ; preds = %162
  call void @llvm.trap() #13
  unreachable

172:                                              ; preds = %162
  %173 = trunc i33 %168 to i32
  store i32 %173, i32* %163, align 4
  br label %174

174:                                              ; preds = %172, %156
  %175 = ptrtoint %"class.WTF::StringImpl"* %154 to i64
  %176 = bitcast %"class.WTF::String"* %157 to i64*
  %177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  store i64 %175, i64* %176, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #13
  br label %193

193:                                              ; preds = %152, %192, %189, %174
  %194 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %150, i64 0, i32 1
  %195 = load i8, i8* %194, align 8, !range !7
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %288, label %197

197:                                              ; preds = %193
  %198 = bitcast %"class.WTF::Vector.151"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %198) #13
  %199 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %5, i64 0, i32 0, i32 0, i32 0
  %200 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %5, i64 0, i32 0, i32 0, i32 1
  %201 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %198, i8 0, i64 16, i1 false) #13
  %202 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %150, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %203 = load %"class.blink::Member.86"*, %"class.blink::Member.86"** %202, align 8
  %204 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %150, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2
  %205 = load i32, i32* %204, align 4
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds %"class.blink::Member.86", %"class.blink::Member.86"* %203, i64 %206
  %208 = icmp eq i32 %205, 0
  br i1 %208, label %262, label %209

209:                                              ; preds = %197
  %210 = bitcast %"class.mojo::StructPtr.140"* %6 to i8*
  %211 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %212 = bitcast %"class.mojo::StructPtr.140"* %6 to i64*
  br label %216

213:                                              ; preds = %248
  %214 = load i32, i32* %201, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %262, label %251

216:                                              ; preds = %209, %248
  %217 = phi %"class.blink::Member.86"* [ %203, %209 ], [ %249, %248 ]
  %218 = getelementptr inbounds %"class.blink::Member.86", %"class.blink::Member.86"* %217, i64 0, i32 0, i32 0
  %219 = load %"class.blink::CableAuthenticationData"*, %"class.blink::CableAuthenticationData"** %218, align 8
  %220 = getelementptr inbounds %"class.blink::CableAuthenticationData", %"class.blink::CableAuthenticationData"* %219, i64 0, i32 6
  %221 = load i8, i8* %220, align 8
  %222 = add i8 %221, -1
  %223 = icmp ugt i8 %222, 1
  br i1 %223, label %248, label %224

224:                                              ; preds = %216
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210) #13
  store %"class.blink::mojom::blink::CableAuthentication"* inttoptr (i64 -6148914691236517206 to %"class.blink::mojom::blink::CableAuthentication"*), %"class.blink::mojom::blink::CableAuthentication"** %211, align 8
  %225 = load %"class.blink::CableAuthenticationData"*, %"class.blink::CableAuthenticationData"** %218, align 8
  call void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink19CableAuthenticationEEENS2_23CableAuthenticationDataEE7ConvertERKS7_(%"class.mojo::StructPtr.140"* nonnull sret %6, %"class.blink::CableAuthenticationData"* dereferenceable(96) %225) #13
  %226 = load %"class.blink::mojom::blink::CableAuthentication"*, %"class.blink::mojom::blink::CableAuthentication"** %211, align 8
  %227 = icmp eq %"class.blink::mojom::blink::CableAuthentication"* %226, null
  br i1 %227, label %228, label %229

228:                                              ; preds = %224
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %211, align 8
  br label %247

229:                                              ; preds = %224
  %230 = load i32, i32* %201, align 4
  %231 = load i32, i32* %200, align 8
  %232 = icmp eq i32 %230, %231
  br i1 %232, label %242, label %233, !prof !5

233:                                              ; preds = %229
  %234 = load %"class.mojo::StructPtr.140"*, %"class.mojo::StructPtr.140"** %199, align 8
  %235 = zext i32 %230 to i64
  %236 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %234, i64 %235
  %237 = bitcast %"class.mojo::StructPtr.140"* %236 to i64*
  %238 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %236, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %238, align 8
  %239 = load i64, i64* %212, align 8
  store i64 %239, i64* %237, align 8
  %240 = load i32, i32* %201, align 4
  %241 = add i32 %240, 1
  store i32 %241, i32* %201, align 4
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %211, align 8
  br label %247

242:                                              ; preds = %229
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.151"* nonnull %5, %"class.mojo::StructPtr.140"* nonnull dereferenceable(8) %6) #13
  %243 = load %"class.blink::mojom::blink::CableAuthentication"*, %"class.blink::mojom::blink::CableAuthentication"** %211, align 8
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %211, align 8
  %244 = icmp eq %"class.blink::mojom::blink::CableAuthentication"* %243, null
  br i1 %244, label %247, label %245

245:                                              ; preds = %242
  call void @_ZN5blink5mojom5blink19CableAuthenticationD1Ev(%"class.blink::mojom::blink::CableAuthentication"* nonnull %243) #13
  %246 = getelementptr inbounds %"class.blink::mojom::blink::CableAuthentication", %"class.blink::mojom::blink::CableAuthentication"* %243, i64 0, i32 0
  call void @_ZdlPv(i8* %246) #12
  br label %247

247:                                              ; preds = %233, %228, %242, %245
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #13
  br label %248

248:                                              ; preds = %216, %247
  %249 = getelementptr inbounds %"class.blink::Member.86", %"class.blink::Member.86"* %217, i64 1
  %250 = icmp eq %"class.blink::Member.86"* %249, %207
  br i1 %250, label %213, label %216

251:                                              ; preds = %213
  %252 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %107, i64 0, i32 9
  %253 = bitcast %"class.WTF::Vector.151"* %5 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = bitcast %"class.WTF::Vector.151"* %252 to i64*
  %256 = load i64, i64* %255, align 8
  store atomic i64 %256, i64* %253 monotonic, align 8
  store atomic i64 %254, i64* %255 monotonic, align 8
  %257 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %107, i64 0, i32 9, i32 0, i32 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = load i32, i32* %200, align 8
  store i32 %259, i32* %257, align 4
  store i32 %258, i32* %200, align 8
  %260 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %107, i64 0, i32 9, i32 0, i32 0, i32 2
  %261 = load i32, i32* %260, align 4
  store i32 %214, i32* %260, align 4
  store i32 %261, i32* %201, align 4
  br label %262

262:                                              ; preds = %197, %213, %251
  %263 = phi i32 [ 0, %213 ], [ %261, %251 ], [ 0, %197 ]
  %264 = load %"class.mojo::StructPtr.140"*, %"class.mojo::StructPtr.140"** %199, align 8
  %265 = icmp eq %"class.mojo::StructPtr.140"* %264, null
  br i1 %265, label %287, label %266, !prof !6

266:                                              ; preds = %262
  %267 = bitcast %"class.mojo::StructPtr.140"* %264 to i8*
  %268 = icmp eq i32 %263, 0
  br i1 %268, label %285, label %269, !prof !5

269:                                              ; preds = %266
  %270 = zext i32 %263 to i64
  %271 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %264, i64 %270
  br label %272

272:                                              ; preds = %279, %269
  %273 = phi %"class.mojo::StructPtr.140"* [ %280, %279 ], [ %264, %269 ]
  %274 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %273, i64 0, i32 0, i32 0, i32 0, i32 0
  %275 = load %"class.blink::mojom::blink::CableAuthentication"*, %"class.blink::mojom::blink::CableAuthentication"** %274, align 8
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %274, align 8
  %276 = icmp eq %"class.blink::mojom::blink::CableAuthentication"* %275, null
  br i1 %276, label %279, label %277

277:                                              ; preds = %272
  call void @_ZN5blink5mojom5blink19CableAuthenticationD1Ev(%"class.blink::mojom::blink::CableAuthentication"* nonnull %275) #13
  %278 = getelementptr inbounds %"class.blink::mojom::blink::CableAuthentication", %"class.blink::mojom::blink::CableAuthentication"* %275, i64 0, i32 0
  call void @_ZdlPv(i8* %278) #12
  br label %279

279:                                              ; preds = %277, %272
  %280 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %273, i64 1
  %281 = icmp eq %"class.mojo::StructPtr.140"* %280, %271
  br i1 %281, label %282, label %272

282:                                              ; preds = %279
  store i32 0, i32* %201, align 4
  %283 = bitcast %"class.WTF::Vector.151"* %5 to i8**
  %284 = load i8*, i8** %283, align 8
  br label %285

285:                                              ; preds = %282, %266
  %286 = phi i8* [ %284, %282 ], [ %267, %266 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %286) #13
  store %"class.mojo::StructPtr.140"* null, %"class.mojo::StructPtr.140"** %199, align 8
  br label %287

287:                                              ; preds = %262, %285
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %198) #13
  br label %288

288:                                              ; preds = %193, %287
  %289 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %150, i64 0, i32 20, i32 0, i32 0
  %290 = load %"class.blink::AuthenticationExtensionsLargeBlobInputs"*, %"class.blink::AuthenticationExtensionsLargeBlobInputs"** %289, align 8
  %291 = icmp eq %"class.blink::AuthenticationExtensionsLargeBlobInputs"* %290, null
  br i1 %291, label %348, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::AuthenticationExtensionsLargeBlobInputs", %"class.blink::AuthenticationExtensionsLargeBlobInputs"* %290, i64 0, i32 1
  %294 = load i8, i8* %293, align 8, !range !7
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %302, label %296

296:                                              ; preds = %292
  %297 = getelementptr inbounds %"class.blink::AuthenticationExtensionsLargeBlobInputs", %"class.blink::AuthenticationExtensionsLargeBlobInputs"* %290, i64 0, i32 2
  %298 = load i8, i8* %297, align 1, !range !7
  %299 = load %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"*, %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"** %8, align 8
  %300 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %299, i64 0, i32 13
  store i8 %298, i8* %300, align 8
  %301 = load %"class.blink::AuthenticationExtensionsLargeBlobInputs"*, %"class.blink::AuthenticationExtensionsLargeBlobInputs"** %289, align 8
  br label %302

302:                                              ; preds = %292, %296
  %303 = phi %"class.blink::AuthenticationExtensionsLargeBlobInputs"* [ %290, %292 ], [ %301, %296 ]
  %304 = getelementptr inbounds %"class.blink::AuthenticationExtensionsLargeBlobInputs", %"class.blink::AuthenticationExtensionsLargeBlobInputs"* %303, i64 0, i32 4, i32 0
  %305 = load i32, i32* %304, align 8
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %348, label %307

307:                                              ; preds = %302
  %308 = bitcast %"class.WTF::Vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %308) #13
  %309 = getelementptr inbounds %"class.blink::AuthenticationExtensionsLargeBlobInputs", %"class.blink::AuthenticationExtensionsLargeBlobInputs"* %303, i64 0, i32 4
  call void @_ZN4mojo13TypeConverterIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEN5blink28ArrayBufferOrArrayBufferViewEE7ConvertERKS6_(%"class.WTF::Vector"* nonnull sret %7, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24) %309) #13
  %310 = load %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"*, %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"** %8, align 8
  %311 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %310, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %312 = load i8, i8* %311, align 8, !range !7
  %313 = icmp eq i8 %312, 0
  %314 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %310, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %313, label %315, label %326

315:                                              ; preds = %307
  %316 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %310, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %317 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %310, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %318 = bitcast %"class.WTF::Vector"* %7 to i64*
  %319 = bitcast %"class.WTF::Vector"* %314 to i64*
  store i64 0, i64* %319, align 8
  %320 = load i64, i64* %318, align 8
  %321 = bitcast %"class.WTF::Vector"* %314 to i64*
  store atomic i64 0, i64* %318 monotonic, align 8
  store atomic i64 %320, i64* %321 monotonic, align 8
  %322 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 1
  %323 = load i32, i32* %322, align 8
  store i32 %323, i32* %316, align 4
  store i32 0, i32* %322, align 8
  %324 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %325 = load i32, i32* %324, align 4
  store i32 %325, i32* %317, align 4
  store i32 0, i32* %324, align 4
  store i8 1, i8* %311, align 8
  br label %347

326:                                              ; preds = %307
  %327 = bitcast %"class.WTF::Vector"* %7 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = bitcast %"class.WTF::Vector"* %314 to i64*
  %330 = load i64, i64* %329, align 8
  store atomic i64 %330, i64* %327 monotonic, align 8
  store atomic i64 %328, i64* %329 monotonic, align 8
  %331 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %310, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %332 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 1
  %333 = load i32, i32* %331, align 4
  %334 = load i32, i32* %332, align 8
  store i32 %334, i32* %331, align 4
  store i32 %333, i32* %332, align 8
  %335 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %310, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %336 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %337 = load i32, i32* %335, align 4
  %338 = load i32, i32* %336, align 4
  store i32 %338, i32* %335, align 4
  store i32 %337, i32* %336, align 4
  %339 = inttoptr i64 %330 to i8*
  %340 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %341 = icmp eq i64 %330, 0
  br i1 %341, label %347, label %342, !prof !6

342:                                              ; preds = %326
  %343 = icmp eq i32 %337, 0
  br i1 %343, label %346, label %344, !prof !5

344:                                              ; preds = %342
  %345 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %345, align 4
  br label %346

346:                                              ; preds = %344, %342
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %339) #13
  store i8* null, i8** %340, align 8
  br label %347

347:                                              ; preds = %315, %326, %346
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %308) #13
  br label %348

348:                                              ; preds = %302, %288, %347
  %349 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %150, i64 0, i32 4
  %350 = load i8, i8* %349, align 1, !range !7
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %359, label %352

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientInputs", %"class.blink::AuthenticationExtensionsClientInputs"* %150, i64 0, i32 17
  %354 = load i8, i8* %353, align 1, !range !7
  %355 = icmp eq i8 %354, 0
  br i1 %355, label %359, label %356

356:                                              ; preds = %352
  %357 = load %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"*, %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"** %8, align 8
  %358 = getelementptr inbounds %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions", %"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"* %357, i64 0, i32 16
  store i8 1, i8* %358, align 8
  br label %359

359:                                              ; preds = %352, %348, %148, %356
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink30AuthenticatorSelectionCriteriaD1Ev(%"class.blink::mojom::blink::AuthenticatorSelectionCriteria"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink29PublicKeyCredentialUserEntityD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialUserEntity"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink27PublicKeyCredentialRpEntityD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialRpEntity"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink29PublicKeyCredentialDescriptorD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialDescriptor"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink17CableRegistrationD1Ev(%"class.blink::mojom::blink::CableRegistration"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink34PublicKeyCredentialCreationOptionsD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialCreationOptions"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink19CableAuthenticationD1Ev(%"class.blink::mojom::blink::CableAuthentication"*) unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #13
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #13
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #13
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #13
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #13
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #13
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN5blink5mojom5blink14CredentialInfoC1Ev(%"class.blink::mojom::blink::CredentialInfo"*) unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.22, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #13
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN5blink5mojom5blink30AuthenticatorSelectionCriteriaC1Ev(%"class.blink::mojom::blink::AuthenticatorSelectionCriteria"*) unnamed_addr #2

declare void @_ZN5blink5mojom5blink29PublicKeyCredentialUserEntityC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialUserEntity"*) unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

declare void @_ZN5blink5mojom5blink27PublicKeyCredentialRpEntityC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialRpEntity"*) unnamed_addr #2

declare void @_ZN5blink5mojom5blink29PublicKeyCredentialDescriptorC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialDescriptor"*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink5mojom22AuthenticatorTransportELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.59"*, i32* dereferenceable(4)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !6

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom22AuthenticatorTransportEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom22AuthenticatorTransportEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.59"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !6

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.59"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.59"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !6

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom22AuthenticatorTransportEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom22AuthenticatorTransportEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.59"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !6

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.59"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.59"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom22AuthenticatorTransportEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.22, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare void @_ZN5blink5mojom5blink34PublicKeyCredentialCreationOptionsC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialCreationOptions"*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.110"*, %"class.mojo::InlinedStructPtr.67"* dereferenceable(12)) local_unnamed_addr #11 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, 1
  %7 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.mojo::InlinedStructPtr.67"*, %"class.mojo::InlinedStructPtr.67"** %7, align 8
  %9 = icmp ugt %"class.mojo::InlinedStructPtr.67"* %8, %1
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = zext i32 %5 to i64
  %12 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %8, i64 %11
  %13 = icmp ugt %"class.mojo::InlinedStructPtr.67"* %12, %1
  br i1 %13, label %38, label %14

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = lshr i32 %16, 2
  %18 = add i32 %16, 1
  %19 = add i32 %18, %17
  %20 = icmp ugt i32 %19, 4
  %21 = select i1 %20, i32 %19, i32 4
  %22 = icmp ugt i32 %21, %6
  %23 = select i1 %22, i32 %21, i32 %6
  %24 = icmp ult i32 %16, %23
  br i1 %24, label %25, label %69, !prof !6

25:                                               ; preds = %14
  %26 = icmp eq %"class.mojo::InlinedStructPtr.67"* %8, null
  br i1 %26, label %27, label %36

27:                                               ; preds = %25
  %28 = zext i32 %23 to i64
  %29 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEEEEmm(i64 %28) #13
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEEEEPKcv, i64 0, i64 0)) #13
  %31 = ptrtoint i8* %30 to i64
  %32 = bitcast %"class.WTF::Vector.110"* %0 to i64*
  store atomic i64 %31, i64* %32 monotonic, align 8
  %33 = udiv i64 %29, 12
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %15, align 8
  %35 = bitcast i8* %30 to %"class.mojo::InlinedStructPtr.67"*
  br label %69

36:                                               ; preds = %25
  tail call void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.110"* %0, i32 %23) #13
  %37 = load %"class.mojo::InlinedStructPtr.67"*, %"class.mojo::InlinedStructPtr.67"** %7, align 8
  br label %69

38:                                               ; preds = %10
  %39 = ptrtoint %"class.mojo::InlinedStructPtr.67"* %1 to i64
  %40 = ptrtoint %"class.mojo::InlinedStructPtr.67"* %8 to i64
  %41 = sub i64 %39, %40
  %42 = sdiv exact i64 %41, 12
  %43 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %0, i64 0, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = lshr i32 %44, 2
  %46 = add i32 %44, 1
  %47 = add i32 %46, %45
  %48 = icmp ugt i32 %47, 4
  %49 = select i1 %48, i32 %47, i32 4
  %50 = icmp ugt i32 %49, %6
  %51 = select i1 %50, i32 %49, i32 %6
  %52 = icmp ult i32 %44, %51
  br i1 %52, label %53, label %66, !prof !6

53:                                               ; preds = %38
  %54 = icmp eq %"class.mojo::InlinedStructPtr.67"* %8, null
  br i1 %54, label %55, label %64

55:                                               ; preds = %53
  %56 = zext i32 %51 to i64
  %57 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEEEEmm(i64 %56) #13
  %58 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %57, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEEEEPKcv, i64 0, i64 0)) #13
  %59 = ptrtoint i8* %58 to i64
  %60 = bitcast %"class.WTF::Vector.110"* %0 to i64*
  store atomic i64 %59, i64* %60 monotonic, align 8
  %61 = udiv i64 %57, 12
  %62 = trunc i64 %61 to i32
  store i32 %62, i32* %43, align 8
  %63 = bitcast i8* %58 to %"class.mojo::InlinedStructPtr.67"*
  br label %66

64:                                               ; preds = %53
  tail call void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.110"* %0, i32 %51) #13
  %65 = load %"class.mojo::InlinedStructPtr.67"*, %"class.mojo::InlinedStructPtr.67"** %7, align 8
  br label %66

66:                                               ; preds = %38, %55, %64
  %67 = phi %"class.mojo::InlinedStructPtr.67"* [ %8, %38 ], [ %63, %55 ], [ %65, %64 ]
  %68 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %67, i64 %42
  br label %69

69:                                               ; preds = %36, %27, %14, %66
  %70 = phi %"class.mojo::InlinedStructPtr.67"* [ %67, %66 ], [ %8, %14 ], [ %35, %27 ], [ %37, %36 ]
  %71 = phi %"class.mojo::InlinedStructPtr.67"* [ %68, %66 ], [ %1, %14 ], [ %1, %27 ], [ %1, %36 ]
  %72 = load i32, i32* %4, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %70, i64 %73
  %75 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %74, i64 0, i32 0
  tail call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %75) #13
  %76 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %70, i64 %73, i32 1
  store i32 0, i32* %76, align 4
  tail call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %75) #13
  tail call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %75) #13
  %77 = bitcast i64* %3 to %"class.blink::mojom::blink::PublicKeyCredentialParameters"*
  %78 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #13
  %79 = bitcast %"class.mojo::InlinedStructPtr.67"* %74 to i64*
  %80 = load i64, i64* %79, align 4
  store i64 %80, i64* %3, align 8
  %81 = bitcast %"class.mojo::InlinedStructPtr.67"* %71 to i64*
  %82 = load i64, i64* %81, align 4
  store i64 %82, i64* %79, align 4
  store i64 %80, i64* %81, align 4
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* nonnull %77) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #13
  %83 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %71, i64 0, i32 1
  %84 = load i32, i32* %76, align 4
  %85 = load i32, i32* %83, align 4
  store i32 %85, i32* %76, align 4
  store i32 %84, i32* %83, align 4
  %86 = load i32, i32* %4, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.110"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %37

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.mojo::InlinedStructPtr.67"*, %"class.mojo::InlinedStructPtr.67"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %8, i64 %11
  %13 = bitcast %"class.WTF::Vector.110"* %0 to i64*
  store atomic i64 0, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %14, align 8
  %15 = icmp eq i32 %10, 0
  br i1 %15, label %35, label %16

16:                                               ; preds = %6
  %17 = bitcast i64* %3 to %"class.blink::mojom::blink::PublicKeyCredentialParameters"*
  %18 = bitcast i64* %3 to i8*
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi %"class.mojo::InlinedStructPtr.67"* [ %8, %16 ], [ %33, %19 ]
  %21 = phi %"class.mojo::InlinedStructPtr.67"* [ null, %16 ], [ %32, %19 ]
  %22 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %21, i64 0, i32 0
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %22) #13
  %23 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %21, i64 0, i32 1
  store i32 0, i32* %23, align 4
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %22) #13
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %22) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  %24 = bitcast %"class.mojo::InlinedStructPtr.67"* %21 to i64*
  %25 = load i64, i64* %24, align 4
  store i64 %25, i64* %3, align 8
  %26 = bitcast %"class.mojo::InlinedStructPtr.67"* %20 to i64*
  %27 = load i64, i64* %26, align 4
  store i64 %27, i64* %24, align 4
  store i64 %25, i64* %26, align 4
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %28 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %20, i64 0, i32 1
  %29 = load i32, i32* %23, align 4
  %30 = load i32, i32* %28, align 4
  store i32 %30, i32* %23, align 4
  store i32 %29, i32* %28, align 4
  %31 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %20, i64 0, i32 0
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %31) #13
  %32 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %21, i64 1
  %33 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %20, i64 1
  %34 = icmp eq %"class.mojo::InlinedStructPtr.67"* %33, %12
  br i1 %34, label %35, label %19

35:                                               ; preds = %19, %6
  %36 = bitcast %"class.mojo::InlinedStructPtr.67"* %8 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %36) #13
  br label %80

37:                                               ; preds = %2
  %38 = zext i32 %1 to i64
  %39 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEEEEmm(i64 %38) #13
  %40 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %39, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEEEEPKcv, i64 0, i64 0)) #13
  %41 = udiv i64 %39, 12
  %42 = ptrtoint i8* %40 to i64
  %43 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.mojo::InlinedStructPtr.67"*, %"class.mojo::InlinedStructPtr.67"** %43, align 8
  %45 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %0, i64 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %44, i64 %47
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %37
  %51 = bitcast %"class.mojo::InlinedStructPtr.67"* %44 to i8*
  br label %75

52:                                               ; preds = %37
  %53 = bitcast i8* %40 to %"class.mojo::InlinedStructPtr.67"*
  %54 = bitcast i64* %4 to %"class.blink::mojom::blink::PublicKeyCredentialParameters"*
  %55 = bitcast i64* %4 to i8*
  br label %56

56:                                               ; preds = %56, %52
  %57 = phi %"class.mojo::InlinedStructPtr.67"* [ %44, %52 ], [ %70, %56 ]
  %58 = phi %"class.mojo::InlinedStructPtr.67"* [ %53, %52 ], [ %69, %56 ]
  %59 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %58, i64 0, i32 0
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %59) #13
  %60 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %58, i64 0, i32 1
  store i32 0, i32* %60, align 4
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %59) #13
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %59) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  %61 = bitcast %"class.mojo::InlinedStructPtr.67"* %58 to i64*
  %62 = load i64, i64* %61, align 4
  store i64 %62, i64* %4, align 8
  %63 = bitcast %"class.mojo::InlinedStructPtr.67"* %57 to i64*
  %64 = load i64, i64* %63, align 4
  store i64 %64, i64* %61, align 4
  store i64 %62, i64* %63, align 4
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* nonnull %54) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  %65 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %57, i64 0, i32 1
  %66 = load i32, i32* %60, align 4
  %67 = load i32, i32* %65, align 4
  store i32 %67, i32* %60, align 4
  store i32 %66, i32* %65, align 4
  %68 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %57, i64 0, i32 0
  call void @_ZN5blink5mojom5blink29PublicKeyCredentialParametersD1Ev(%"class.blink::mojom::blink::PublicKeyCredentialParameters"* %68) #13
  %69 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %58, i64 1
  %70 = getelementptr inbounds %"class.mojo::InlinedStructPtr.67", %"class.mojo::InlinedStructPtr.67"* %57, i64 1
  %71 = icmp eq %"class.mojo::InlinedStructPtr.67"* %70, %48
  br i1 %71, label %72, label %56

72:                                               ; preds = %56
  %73 = bitcast %"class.WTF::Vector.110"* %0 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %50, %72
  %76 = phi i8* [ %74, %72 ], [ %51, %50 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #13
  %77 = bitcast %"class.WTF::Vector.110"* %0 to i64*
  store atomic i64 %42, i64* %77 monotonic, align 8
  %78 = trunc i64 %41 to i32
  %79 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %78, i32* %79, align 8
  br label %80

80:                                               ; preds = %75, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 178782208
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 178782208) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.22, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 12
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.120"*, %"class.mojo::StructPtr.55"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.55"*, %"class.mojo::StructPtr.55"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.55"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.55"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !6

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.55"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEEEEmm(i64 %27) #13
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEEEEPKcv, i64 0, i64 0)) #13
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.120"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.55"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.120"* %0, i32 %22) #13
  %36 = load %"class.mojo::StructPtr.55"*, %"class.mojo::StructPtr.55"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.55"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.55"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !6

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.55"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEEEEmm(i64 %55) #13
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEEEEPKcv, i64 0, i64 0)) #13
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.120"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.55"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.120"* %0, i32 %50) #13
  %64 = load %"class.mojo::StructPtr.55"*, %"class.mojo::StructPtr.55"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.55"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.55"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.55"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.55"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.55"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.120"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.55"*, %"class.mojo::StructPtr.55"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.55"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.120"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.55"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.55"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.55"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.55"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !67

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.55"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.55"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.55"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.55"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.55"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.55"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.55"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.55"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.55"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.55"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.55"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.55"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.55"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #13
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEEEEmm(i64 %73) #13
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEEEEPKcv, i64 0, i64 0)) #13
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.55"*, %"class.mojo::StructPtr.55"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.55"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.55"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.55"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.55"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.55"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.55"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !69

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.55"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.55"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.55"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.55"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.55"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.55"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.55"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.55"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.55"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.55"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.55"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.55"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"* null, %"class.blink::mojom::blink::PublicKeyCredentialDescriptor"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.55", %"class.mojo::StructPtr.55"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.55"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.120"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #13
  %149 = bitcast %"class.WTF::Vector.120"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink29PublicKeyCredentialDescriptorEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.22, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare void @_ZN5blink5mojom5blink19CableAuthenticationC1Ev(%"class.blink::mojom::blink::CableAuthentication"*) unnamed_addr #2

declare void @_ZN5blink5mojom5blink17CableRegistrationC1Ev(%"class.blink::mojom::blink::CableRegistration"*) unnamed_addr #2

declare void @_ZN5blink5mojom5blink33PublicKeyCredentialRequestOptionsC1Ev(%"class.blink::mojom::blink::PublicKeyCredentialRequestOptions"*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.151"*, %"class.mojo::StructPtr.140"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.140"*, %"class.mojo::StructPtr.140"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.140"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.140"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !6

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.140"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEEEEmm(i64 %27) #13
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEEEEPKcv, i64 0, i64 0)) #13
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.151"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.140"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.151"* %0, i32 %22) #13
  %36 = load %"class.mojo::StructPtr.140"*, %"class.mojo::StructPtr.140"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.140"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.140"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !6

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.140"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEEEEmm(i64 %55) #13
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEEEEPKcv, i64 0, i64 0)) #13
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.151"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.140"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.151"* %0, i32 %50) #13
  %64 = load %"class.mojo::StructPtr.140"*, %"class.mojo::StructPtr.140"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.140"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.140"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.140"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.140"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.140"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.151"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.140"*, %"class.mojo::StructPtr.140"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.140"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.151"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.140"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.140"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.140"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.140"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !70

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.140"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.140"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.140"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.140"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.140"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.140"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.140"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.140"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.140"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.140"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.140"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.140"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.140"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #13
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEEEEmm(i64 %73) #13
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEEEEPKcv, i64 0, i64 0)) #13
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.140"*, %"class.mojo::StructPtr.140"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.140"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.140"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.140"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.140"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.140"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.140"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !71

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.140"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.140"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.140"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.140"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.140"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.140"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.140"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.140"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.140"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.140"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.140"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.140"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CableAuthentication"* null, %"class.blink::mojom::blink::CableAuthentication"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.140", %"class.mojo::StructPtr.140"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.140"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.151"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #13
  %149 = bitcast %"class.WTF::Vector.151"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink19CableAuthenticationEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.22, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink5mojom5blink14CredentialInfo3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink5mojom5blink14CredentialInfo3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink5mojom5blink30AuthenticatorSelectionCriteria3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZN5blink5mojom5blink30AuthenticatorSelectionCriteria3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink5mojom5blink29PublicKeyCredentialUserEntity3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZN5blink5mojom5blink29PublicKeyCredentialUserEntity3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink5mojom5blink27PublicKeyCredentialRpEntity3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!16 = distinct !{!16, !"_ZN5blink5mojom5blink27PublicKeyCredentialRpEntity3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink5mojom5blink29PublicKeyCredentialDescriptor3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!19 = distinct !{!19, !"_ZN5blink5mojom5blink29PublicKeyCredentialDescriptor3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blink5mojom5blink29PublicKeyCredentialParameters3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!22 = distinct !{!22, !"_ZN5blink5mojom5blink29PublicKeyCredentialParameters3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN5blink5mojom5blink34PublicKeyCredentialCreationOptions3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!25 = distinct !{!25, !"_ZN5blink5mojom5blink34PublicKeyCredentialCreationOptions3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN4mojo12_GLOBAL__N_134CreatePublicKeyCredentialParameterEi: argument 0"}
!28 = distinct !{!28, !"_ZN4mojo12_GLOBAL__N_134CreatePublicKeyCredentialParameterEi"}
!29 = !{!30, !27}
!30 = distinct !{!30, !31, !"_ZN5blink5mojom5blink29PublicKeyCredentialParameters3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!31 = distinct !{!31, !"_ZN5blink5mojom5blink29PublicKeyCredentialParameters3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN4mojo12_GLOBAL__N_134CreatePublicKeyCredentialParameterEi: argument 0"}
!34 = distinct !{!34, !"_ZN4mojo12_GLOBAL__N_134CreatePublicKeyCredentialParameterEi"}
!35 = !{!36, !33}
!36 = distinct !{!36, !37, !"_ZN5blink5mojom5blink29PublicKeyCredentialParameters3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!37 = distinct !{!37, !"_ZN5blink5mojom5blink29PublicKeyCredentialParameters3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!38 = !{!39, !41}
!39 = distinct !{!39, !40, !"_ZN4mojo13TypeConverterINS_16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEENS2_29PublicKeyCredentialParametersEE7ConvertERKS7_: argument 0"}
!40 = distinct !{!40, !"_ZN4mojo13TypeConverterINS_16InlinedStructPtrIN5blink5mojom5blink29PublicKeyCredentialParametersEEENS2_29PublicKeyCredentialParametersEE7ConvertERKS7_"}
!41 = distinct !{!41, !42, !"_ZN5blink5mojom5blink29PublicKeyCredentialParameters4FromINS_29PublicKeyCredentialParametersEEEN4mojo16InlinedStructPtrIS2_EERKT_: argument 0"}
!42 = distinct !{!42, !"_ZN5blink5mojom5blink29PublicKeyCredentialParameters4FromINS_29PublicKeyCredentialParametersEEEN4mojo16InlinedStructPtrIS2_EERKT_"}
!43 = !{!44, !39, !41}
!44 = distinct !{!44, !45, !"_ZN5blink5mojom5blink29PublicKeyCredentialParameters3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!45 = distinct !{!45, !"_ZN5blink5mojom5blink29PublicKeyCredentialParameters3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN5blink5mojom5blink19CableAuthentication3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!48 = distinct !{!48, !"_ZN5blink5mojom5blink19CableAuthentication3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN4mojo21ConvertFixedSizeArrayERKN5blink28ArrayBufferOrArrayBufferViewEj: argument 0"}
!51 = distinct !{!51, !"_ZN4mojo21ConvertFixedSizeArrayERKN5blink28ArrayBufferOrArrayBufferViewEj"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN4mojo21ConvertFixedSizeArrayERKN5blink28ArrayBufferOrArrayBufferViewEj: argument 0"}
!54 = distinct !{!54, !"_ZN4mojo21ConvertFixedSizeArrayERKN5blink28ArrayBufferOrArrayBufferViewEj"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZN4mojo21ConvertFixedSizeArrayERKN5blink28ArrayBufferOrArrayBufferViewEj: argument 0"}
!57 = distinct !{!57, !"_ZN4mojo21ConvertFixedSizeArrayERKN5blink28ArrayBufferOrArrayBufferViewEj"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZN5blink5mojom5blink17CableRegistration3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!60 = distinct !{!60, !"_ZN5blink5mojom5blink17CableRegistration3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN4mojo21ConvertFixedSizeArrayERKN5blink28ArrayBufferOrArrayBufferViewEj: argument 0"}
!63 = distinct !{!63, !"_ZN4mojo21ConvertFixedSizeArrayERKN5blink28ArrayBufferOrArrayBufferViewEj"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN5blink5mojom5blink33PublicKeyCredentialRequestOptions3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!66 = distinct !{!66, !"_ZN5blink5mojom5blink33PublicKeyCredentialRequestOptions3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!67 = distinct !{!67, !68}
!68 = !{!"llvm.loop.unroll.disable"}
!69 = distinct !{!69, !68}
!70 = distinct !{!70, !68}
!71 = distinct !{!71, !68}
