; ModuleID = '../../base/metrics/sample_map.cc'
source_filename = "../../base/metrics/sample_map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::SampleMap" = type { %"class.base::HistogramSamples", %"class.std::__1::map" }
%"class.base::HistogramSamples" = type { i32 (...)**, %"struct.base::HistogramSamples::Metadata"* }
%"struct.base::HistogramSamples::Metadata" = type { i64, i64, i32, %"union.base::HistogramSamples::AtomicSingleSample" }
%"union.base::HistogramSamples::AtomicSingleSample" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.base::HistogramSamples::LocalMetadata" = type { %"struct.base::HistogramSamples::Metadata" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.base::SampleCountIterator" = type { i32 (...)** }
%"class.base::(anonymous namespace)::SampleMapIterator" = type { %"class.base::SampleCountIterator", %"class.std::__1::__map_const_iterator", %"class.std::__1::__map_const_iterator" }
%"class.std::__1::__map_const_iterator" = type { %"class.std::__1::__tree_const_iterator" }
%"class.std::__1::__tree_const_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"class.base::PickleIterator" = type opaque
%"class.base::Pickle" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

$_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTVN4base9SampleMapE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::SampleMap"*)* @_ZN4base9SampleMapD2Ev to i8*), i8* bitcast (void (%"class.base::SampleMap"*)* @_ZN4base9SampleMapD0Ev to i8*), i8* bitcast (void (%"class.base::SampleMap"*, i32, i32)* @_ZN4base9SampleMap10AccumulateEii to i8*), i8* bitcast (i32 (%"class.base::SampleMap"*, i32)* @_ZNK4base9SampleMap8GetCountEi to i8*), i8* bitcast (i32 (%"class.base::SampleMap"*)* @_ZNK4base9SampleMap10TotalCountEv to i8*), i8* bitcast (void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)* @_ZN4base16HistogramSamples3AddERKS0_ to i8*), i8* bitcast (i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)* @_ZN4base16HistogramSamples13AddFromPickleEPNS_14PickleIteratorE to i8*), i8* bitcast (void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)* @_ZN4base16HistogramSamples8SubtractERKS0_ to i8*), i8* bitcast (%"class.base::SampleCountIterator"* (%"class.base::SampleMap"*)* @_ZNK4base9SampleMap8IteratorEv to i8*), i8* bitcast (void (%"class.base::HistogramSamples"*, %"class.base::Pickle"*)* @_ZNK4base16HistogramSamples9SerializeEPNS_6PickleE to i8*), i8* bitcast (i1 (%"class.base::SampleMap"*, %"class.base::SampleCountIterator"*, i32)* @_ZN4base9SampleMap15AddSubtractImplEPNS_19SampleCountIteratorENS_16HistogramSamples8OperatorE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.base::HistogramSamples"*)* @_ZNK4base16HistogramSamples12GetAsciiBodyEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.base::HistogramSamples"*, i8*, i64, i32)* @_ZNK4base16HistogramSamples14GetAsciiHeaderENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi to i8*)] }, align 8
@_ZTVN4base12_GLOBAL__N_117SampleMapIteratorE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::SampleCountIterator"*)* @_ZN4base19SampleCountIteratorD2Ev to i8*), i8* bitcast (void (%"class.base::(anonymous namespace)::SampleMapIterator"*)* @_ZN4base12_GLOBAL__N_117SampleMapIteratorD0Ev to i8*), i8* bitcast (i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)* @_ZNK4base12_GLOBAL__N_117SampleMapIterator4DoneEv to i8*), i8* bitcast (void (%"class.base::(anonymous namespace)::SampleMapIterator"*)* @_ZN4base12_GLOBAL__N_117SampleMapIterator4NextEv to i8*), i8* bitcast (void (%"class.base::(anonymous namespace)::SampleMapIterator"*, i32*, i64*, i32*)* @_ZNK4base12_GLOBAL__N_117SampleMapIterator3GetEPiPlS2_ to i8*), i8* bitcast (i1 (%"class.base::SampleCountIterator"*, i64*)* @_ZNK4base19SampleCountIterator14GetBucketIndexEPm to i8*)] }, align 8

@_ZN4base9SampleMapC1Ev = hidden unnamed_addr alias void (%"class.base::SampleMap"*), void (%"class.base::SampleMap"*)* @_ZN4base9SampleMapC2Ev
@_ZN4base9SampleMapC1Em = hidden unnamed_addr alias void (%"class.base::SampleMap"*, i64), void (%"class.base::SampleMap"*, i64)* @_ZN4base9SampleMapC2Em
@_ZN4base9SampleMapD1Ev = hidden unnamed_addr alias void (%"class.base::SampleMap"*), void (%"class.base::SampleMap"*)* @_ZN4base9SampleMapD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9SampleMapC2Ev(%"class.base::SampleMap"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 0
  %3 = tail call i8* @_Znwm(i64 24) #9
  %4 = bitcast i8* %3 to %"struct.base::HistogramSamples::LocalMetadata"*
  tail call void @_ZN4base16HistogramSamples13LocalMetadataC1Ev(%"struct.base::HistogramSamples::LocalMetadata"* nonnull %4) #10
  %5 = bitcast i8* %3 to %"struct.base::HistogramSamples::Metadata"*
  tail call void @_ZN4base16HistogramSamplesC2EmPNS0_8MetadataE(%"class.base::HistogramSamples"* %2, i64 0, %"struct.base::HistogramSamples::Metadata"* nonnull %5) #10
  %6 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4base9SampleMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9SampleMapC2Em(%"class.base::SampleMap"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 0
  %4 = tail call i8* @_Znwm(i64 24) #9
  %5 = bitcast i8* %4 to %"struct.base::HistogramSamples::LocalMetadata"*
  tail call void @_ZN4base16HistogramSamples13LocalMetadataC1Ev(%"struct.base::HistogramSamples::LocalMetadata"* nonnull %5) #10
  %6 = bitcast i8* %4 to %"struct.base::HistogramSamples::Metadata"*
  tail call void @_ZN4base16HistogramSamplesC2EmPNS0_8MetadataE(%"class.base::HistogramSamples"* %3, i64 %1, %"struct.base::HistogramSamples::Metadata"* nonnull %6) #10
  %7 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4base9SampleMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_node_base"** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"** %10, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN4base16HistogramSamples13LocalMetadataC1Ev(%"struct.base::HistogramSamples::LocalMetadata"*) unnamed_addr #2

declare void @_ZN4base16HistogramSamplesC2EmPNS0_8MetadataE(%"class.base::HistogramSamples"*, i64, %"struct.base::HistogramSamples::Metadata"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9SampleMapD2Ev(%"class.base::SampleMap"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4base9SampleMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 0, i32 1
  %5 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %4, align 8
  %6 = icmp eq %"struct.base::HistogramSamples::Metadata"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.base::HistogramSamples::Metadata"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #9
  br label %9

9:                                                ; preds = %7, %1
  %10 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %10, %"class.std::__1::__tree_node"* %13) #10
  tail call void @_ZN4base16HistogramSamplesD2Ev(%"class.base::HistogramSamples"* %3) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base16HistogramSamplesD2Ev(%"class.base::HistogramSamples"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9SampleMapD0Ev(%"class.base::SampleMap"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4base9SampleMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 0, i32 1
  %5 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %4, align 8
  %6 = icmp eq %"struct.base::HistogramSamples::Metadata"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.base::HistogramSamples::Metadata"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #9
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %10, %"class.std::__1::__tree_node"* %13) #10
  tail call void @_ZN4base16HistogramSamplesD2Ev(%"class.base::HistogramSamples"* %3) #10
  %14 = bitcast %"class.base::SampleMap"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9SampleMap10AccumulateEii(%"class.base::SampleMap"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %33, %9
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %7, %9 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %10, %9 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, %1
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp slt i32 %15, %1
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %39

39:                                               ; preds = %37, %31, %29, %21
  %40 = phi %"class.std::__1::__tree_end_node"* [ %5, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %72

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 40) #9, !noalias !2
  %47 = getelementptr inbounds i8, i8* %46, i64 28
  %48 = bitcast i8* %47 to i32*
  store i32 %1, i32* %48, align 4, !noalias !2
  %49 = getelementptr inbounds i8, i8* %46, i64 32
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 4, !noalias !2
  %51 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %52 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds i8, i8* %46, i64 16
  %54 = bitcast i8* %53 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %54, align 8
  %55 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %4, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %45
  %62 = ptrtoint %"class.std::__1::__tree_node_base"* %59 to i64
  %63 = bitcast %"class.std::__1::map"* %4 to i64*
  store i64 %62, i64* %63, align 8
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %65

65:                                               ; preds = %61, %45
  %66 = phi %"class.std::__1::__tree_node_base"* [ %52, %45 ], [ %64, %61 ]
  %67 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %68, %"class.std::__1::__tree_node_base"* %66) #10
  %69 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %69, align 8
  br label %72

72:                                               ; preds = %39, %65
  %73 = phi %"class.std::__1::__tree_node"* [ %51, %65 ], [ %43, %39 ]
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %73, i64 0, i32 1, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = add nsw i32 %75, %2
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 0
  %78 = sext i32 %2 to i64
  %79 = sext i32 %1 to i64
  %80 = mul nsw i64 %78, %79
  tail call void @_ZN4base16HistogramSamples19IncreaseSumAndCountEli(%"class.base::HistogramSamples"* %77, i64 %80, i32 %2) #10
  ret void
}

declare void @_ZN4base16HistogramSamples19IncreaseSumAndCountEli(%"class.base::HistogramSamples"*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base9SampleMap8GetCountEi(%"class.base::SampleMap"*, i32) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %32, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to i32*
  %31 = load i32, i32* %30, align 4
  br label %32

32:                                               ; preds = %23, %21, %2, %28
  %33 = phi i32 [ %31, %28 ], [ 0, %2 ], [ 0, %21 ], [ 0, %23 ]
  ret i32 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base9SampleMap10TotalCountEv(%"class.base::SampleMap"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %6, label %8

6:                                                ; preds = %42, %1
  %7 = phi i32 [ 0, %1 ], [ %14, %42 ]
  ret i32 %7

8:                                                ; preds = %1, %42
  %9 = phi i32 [ %14, %42 ], [ 0, %1 ]
  %10 = phi %"class.std::__1::__tree_end_node"* [ %43, %42 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 4
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, %9
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 1, i32 0
  %16 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %17 = icmp eq %"class.std::__1::__tree_node_base"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %8
  %19 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node_base"*
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 2
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_end_node"**
  %22 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 0, i32 0
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, %19
  br i1 %25, label %42, label %33

26:                                               ; preds = %8, %26
  %27 = phi %"class.std::__1::__tree_node_base"* [ %29, %26 ], [ %16, %8 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %26

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %27, i64 0, i32 0
  br label %42

33:                                               ; preds = %18, %33
  %34 = phi %"class.std::__1::__tree_end_node"** [ %37, %33 ], [ %21, %18 ]
  %35 = bitcast %"class.std::__1::__tree_end_node"** %34 to %"class.std::__1::__tree_node_base"**
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %36
  br i1 %41, label %42, label %33

42:                                               ; preds = %33, %18, %31
  %43 = phi %"class.std::__1::__tree_end_node"* [ %32, %31 ], [ %22, %18 ], [ %38, %33 ]
  %44 = icmp eq %"class.std::__1::__tree_end_node"* %43, %4
  br i1 %44, label %6, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SampleCountIterator"* @_ZNK4base9SampleMap8IteratorEv(%"class.base::SampleMap"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1
  %3 = tail call i8* @_Znwm(i64 24) #9
  %4 = bitcast i8* %3 to %"class.base::(anonymous namespace)::SampleMapIterator"*
  %5 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base12_GLOBAL__N_117SampleMapIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast %"class.std::__1::map"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds i8, i8* %3, i64 16
  %12 = bitcast i8* %11 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %12, align 8
  %13 = bitcast i8* %8 to %"class.std::__1::__tree_node"**
  %14 = bitcast i8* %3 to i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)***
  %15 = bitcast i8* %8 to %"class.std::__1::__tree_end_node"**
  %16 = inttoptr i64 %7 to %"class.std::__1::__tree_end_node"*
  %17 = icmp eq %"class.std::__1::__tree_end_node"* %10, %16
  br i1 %17, label %65, label %18

18:                                               ; preds = %1
  %19 = inttoptr i64 %7 to %"class.std::__1::__tree_node"*
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %65

23:                                               ; preds = %18
  %24 = inttoptr i64 %7 to %"class.std::__1::__tree_node_base"*
  br label %25

25:                                               ; preds = %59, %23
  %26 = phi %"class.std::__1::__tree_node_base"* [ %64, %59 ], [ %24, %23 ]
  %27 = phi %"class.std::__1::__tree_node"* [ %60, %59 ], [ %19, %23 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %27, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %27, i64 0, i32 0, i32 2
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, %26
  br i1 %36, label %53, label %44

37:                                               ; preds = %25, %37
  %38 = phi %"class.std::__1::__tree_node_base"* [ %40, %37 ], [ %29, %25 ]
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %37

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  br label %53

44:                                               ; preds = %31, %44
  %45 = phi %"class.std::__1::__tree_end_node"** [ %48, %44 ], [ %32, %31 ]
  %46 = bitcast %"class.std::__1::__tree_end_node"** %45 to %"class.std::__1::__tree_node_base"**
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %47, i64 0, i32 2
  %49 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, %47
  br i1 %52, label %53, label %44

53:                                               ; preds = %44, %42, %31
  %54 = phi %"class.std::__1::__tree_end_node"* [ %43, %42 ], [ %33, %31 ], [ %49, %44 ]
  store %"class.std::__1::__tree_end_node"* %54, %"class.std::__1::__tree_end_node"** %15, align 8
  %55 = load i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)**, i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)*** %14, align 8
  %56 = getelementptr inbounds i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)*, i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)** %55, i64 2
  %57 = load i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)*, i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.base::(anonymous namespace)::SampleMapIterator"* nonnull %4) #10
  br i1 %58, label %65, label %59

59:                                               ; preds = %53
  %60 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %13, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 1, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  %64 = bitcast %"class.std::__1::__tree_node"* %60 to %"class.std::__1::__tree_node_base"*
  br i1 %63, label %25, label %65

65:                                               ; preds = %59, %53, %18, %1
  %66 = bitcast i8* %3 to %"class.base::SampleCountIterator"*
  ret %"class.base::SampleCountIterator"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base9SampleMap15AddSubtractImplEPNS_19SampleCountIteratorENS_16HistogramSamples8OperatorE(%"class.base::SampleMap"*, %"class.base::SampleCountIterator"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #10
  store i32 -1431655766, i32* %4, align 4
  %8 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  store i64 -6148914691236517206, i64* %5, align 8
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #10
  store i32 -1431655766, i32* %6, align 4
  %10 = bitcast %"class.base::SampleCountIterator"* %1 to void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)***
  %11 = bitcast %"class.base::SampleCountIterator"* %1 to i1 (%"class.base::SampleCountIterator"*)***
  %12 = load i1 (%"class.base::SampleCountIterator"*)**, i1 (%"class.base::SampleCountIterator"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.base::SampleCountIterator"*)*, i1 (%"class.base::SampleCountIterator"*)** %12, i64 2
  %14 = load i1 (%"class.base::SampleCountIterator"*)*, i1 (%"class.base::SampleCountIterator"*)** %13, align 8
  %15 = call zeroext i1 %14(%"class.base::SampleCountIterator"* %1) #10
  br i1 %15, label %109, label %16

16:                                               ; preds = %3
  %17 = icmp eq i32 %2, 0
  %18 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"**
  %21 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::map"* %18 to i64*
  %25 = getelementptr inbounds %"class.base::SampleMap", %"class.base::SampleMap"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %"class.base::SampleCountIterator"* %1 to void (%"class.base::SampleCountIterator"*)***
  br label %27

27:                                               ; preds = %16, %97
  %28 = load void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)**, void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)*** %10, align 8
  %29 = getelementptr inbounds void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)*, void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)** %28, i64 4
  %30 = load void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)*, void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)** %29, align 8
  call void %30(%"class.base::SampleCountIterator"* %1, i32* nonnull %4, i64* nonnull %5, i32* nonnull %6) #10
  %31 = load i32, i32* %4, align 4
  %32 = sext i32 %31 to i64
  %33 = add nsw i64 %32, 1
  %34 = load i64, i64* %5, align 8
  %35 = icmp eq i64 %33, %34
  br i1 %35, label %36, label %109

36:                                               ; preds = %27
  %37 = load i32, i32* %6, align 4
  %38 = sub nsw i32 0, %37
  %39 = select i1 %17, i32 %37, i32 %38
  %40 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %41 = icmp eq %"class.std::__1::__tree_node"* %40, null
  br i1 %41, label %68, label %42

42:                                               ; preds = %36, %64
  %43 = phi %"class.std::__1::__tree_node"* [ %67, %64 ], [ %40, %36 ]
  %44 = phi %"class.std::__1::__tree_node_base"** [ %66, %64 ], [ %21, %36 ]
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 1, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %31, %46
  br i1 %47, label %48, label %54

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %64

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 0
  br label %68

54:                                               ; preds = %42
  %55 = icmp slt i32 %46, %31
  br i1 %55, label %56, label %62

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 1
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 0
  br label %68

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 0
  br label %68

64:                                               ; preds = %56, %48
  %65 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %58, %56 ]
  %66 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %57, %56 ]
  %67 = bitcast %"class.std::__1::__tree_node_base"* %65 to %"class.std::__1::__tree_node"*
  br label %42

68:                                               ; preds = %36, %62, %60, %52
  %69 = phi %"class.std::__1::__tree_end_node"* [ %53, %52 ], [ %61, %60 ], [ %63, %62 ], [ %19, %36 ]
  %70 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %57, %60 ], [ %44, %62 ], [ %22, %36 ]
  %71 = bitcast %"class.std::__1::__tree_node_base"** %70 to %"class.std::__1::__tree_node"**
  %72 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node"* %72, null
  br i1 %73, label %74, label %97

74:                                               ; preds = %68
  %75 = call i8* @_Znwm(i64 40) #9, !noalias !5
  %76 = getelementptr inbounds i8, i8* %75, i64 28
  %77 = bitcast i8* %76 to i32*
  store i32 %31, i32* %77, align 4, !noalias !5
  %78 = getelementptr inbounds i8, i8* %75, i64 32
  %79 = bitcast i8* %78 to i32*
  store i32 0, i32* %79, align 4, !noalias !5
  %80 = bitcast i8* %75 to %"class.std::__1::__tree_node"*
  %81 = bitcast i8* %75 to %"class.std::__1::__tree_node_base"*
  %82 = getelementptr inbounds i8, i8* %75, i64 16
  %83 = bitcast i8* %82 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %69, %"class.std::__1::__tree_end_node"** %83, align 8
  %84 = bitcast %"class.std::__1::__tree_node_base"** %70 to i8**
  store i8* %75, i8** %84, align 8
  %85 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %74
  %90 = ptrtoint %"class.std::__1::__tree_node_base"* %87 to i64
  store i64 %90, i64* %24, align 8
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  br label %92

92:                                               ; preds = %89, %74
  %93 = phi %"class.std::__1::__tree_node_base"* [ %81, %74 ], [ %91, %89 ]
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %94, %"class.std::__1::__tree_node_base"* %93) #10
  %95 = load i64, i64* %25, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %25, align 8
  br label %97

97:                                               ; preds = %68, %92
  %98 = phi %"class.std::__1::__tree_node"* [ %80, %92 ], [ %72, %68 ]
  %99 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %98, i64 0, i32 1, i32 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = add nsw i32 %100, %39
  store i32 %101, i32* %99, align 4
  %102 = load void (%"class.base::SampleCountIterator"*)**, void (%"class.base::SampleCountIterator"*)*** %26, align 8
  %103 = getelementptr inbounds void (%"class.base::SampleCountIterator"*)*, void (%"class.base::SampleCountIterator"*)** %102, i64 3
  %104 = load void (%"class.base::SampleCountIterator"*)*, void (%"class.base::SampleCountIterator"*)** %103, align 8
  call void %104(%"class.base::SampleCountIterator"* %1) #10
  %105 = load i1 (%"class.base::SampleCountIterator"*)**, i1 (%"class.base::SampleCountIterator"*)*** %11, align 8
  %106 = getelementptr inbounds i1 (%"class.base::SampleCountIterator"*)*, i1 (%"class.base::SampleCountIterator"*)** %105, i64 2
  %107 = load i1 (%"class.base::SampleCountIterator"*)*, i1 (%"class.base::SampleCountIterator"*)** %106, align 8
  %108 = call zeroext i1 %107(%"class.base::SampleCountIterator"* %1) #10
  br i1 %108, label %109, label %27

109:                                              ; preds = %27, %97, %3
  %110 = phi i1 [ true, %3 ], [ true, %97 ], [ false, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #10
  ret i1 %110
}

declare void @_ZN4base16HistogramSamples3AddERKS0_(%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"* dereferenceable(16)) unnamed_addr #2

declare zeroext i1 @_ZN4base16HistogramSamples13AddFromPickleEPNS_14PickleIteratorE(%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*) unnamed_addr #2

declare void @_ZN4base16HistogramSamples8SubtractERKS0_(%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK4base16HistogramSamples9SerializeEPNS_6PickleE(%"class.base::HistogramSamples"*, %"class.base::Pickle"*) unnamed_addr #2

declare void @_ZNK4base16HistogramSamples12GetAsciiBodyEv(%"class.std::__1::basic_string"* sret, %"class.base::HistogramSamples"*) unnamed_addr #2

declare void @_ZNK4base16HistogramSamples14GetAsciiHeaderENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.std::__1::basic_string"* sret, %"class.base::HistogramSamples"*, i8*, i64, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base19SampleCountIteratorD2Ev(%"class.base::SampleCountIterator"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_117SampleMapIteratorD0Ev(%"class.base::(anonymous namespace)::SampleMapIterator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::(anonymous namespace)::SampleMapIterator", %"class.base::(anonymous namespace)::SampleMapIterator"* %0, i64 0, i32 0
  tail call void @_ZN4base19SampleCountIteratorD2Ev(%"class.base::SampleCountIterator"* %2) #10
  %3 = bitcast %"class.base::(anonymous namespace)::SampleMapIterator"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK4base12_GLOBAL__N_117SampleMapIterator4DoneEv(%"class.base::(anonymous namespace)::SampleMapIterator"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.base::(anonymous namespace)::SampleMapIterator", %"class.base::(anonymous namespace)::SampleMapIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.base::(anonymous namespace)::SampleMapIterator", %"class.base::(anonymous namespace)::SampleMapIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_117SampleMapIterator4NextEv(%"class.base::(anonymous namespace)::SampleMapIterator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::(anonymous namespace)::SampleMapIterator", %"class.base::(anonymous namespace)::SampleMapIterator"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::__map_const_iterator", %"class.std::__1::__map_const_iterator"* %2, i64 0, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__map_const_iterator"* %2 to %"class.std::__1::__tree_node_base"**
  %5 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %5, i64 0, i32 1
  %7 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node_base"* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %5, i64 0, i32 2
  %11 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, %5
  br i1 %14, label %31, label %22

15:                                               ; preds = %1, %15
  %16 = phi %"class.std::__1::__tree_node_base"* [ %18, %15 ], [ %7, %1 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %15

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %16, i64 0, i32 0
  br label %31

22:                                               ; preds = %9, %22
  %23 = phi %"class.std::__1::__tree_end_node"** [ %26, %22 ], [ %10, %9 ]
  %24 = bitcast %"class.std::__1::__tree_end_node"** %23 to %"class.std::__1::__tree_node_base"**
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %27 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, %25
  br i1 %30, label %31, label %22

31:                                               ; preds = %22, %9, %20
  %32 = phi %"class.std::__1::__tree_end_node"* [ %21, %20 ], [ %11, %9 ], [ %27, %22 ]
  store %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::__tree_end_node"** %3, align 8
  %33 = bitcast %"class.std::__1::__map_const_iterator"* %2 to %"class.std::__1::__tree_node"**
  %34 = bitcast %"class.base::(anonymous namespace)::SampleMapIterator"* %0 to i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)***
  %35 = load i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)**, i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)*, i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)** %35, i64 2
  %37 = load i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)*, i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.base::(anonymous namespace)::SampleMapIterator"* %0) #10
  br i1 %38, label %77, label %39

39:                                               ; preds = %31, %71
  %40 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 1, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  %44 = bitcast %"class.std::__1::__tree_node"* %40 to %"class.std::__1::__tree_node_base"*
  br i1 %43, label %45, label %77

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 1
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 2
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %44
  br i1 %54, label %71, label %62

55:                                               ; preds = %45, %55
  %56 = phi %"class.std::__1::__tree_node_base"* [ %58, %55 ], [ %47, %45 ]
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %60, label %55

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %56, i64 0, i32 0
  br label %71

62:                                               ; preds = %49, %62
  %63 = phi %"class.std::__1::__tree_end_node"** [ %66, %62 ], [ %50, %49 ]
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to %"class.std::__1::__tree_node_base"**
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %65, i64 0, i32 2
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %65
  br i1 %70, label %71, label %62

71:                                               ; preds = %62, %60, %49
  %72 = phi %"class.std::__1::__tree_end_node"* [ %61, %60 ], [ %51, %49 ], [ %67, %62 ]
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %3, align 8
  %73 = load i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)**, i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)*** %34, align 8
  %74 = getelementptr inbounds i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)*, i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)** %73, i64 2
  %75 = load i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)*, i1 (%"class.base::(anonymous namespace)::SampleMapIterator"*)** %74, align 8
  %76 = tail call zeroext i1 %75(%"class.base::(anonymous namespace)::SampleMapIterator"* %0) #10
  br i1 %76, label %77, label %39

77:                                               ; preds = %39, %71, %31
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZNK4base12_GLOBAL__N_117SampleMapIterator3GetEPiPlS2_(%"class.base::(anonymous namespace)::SampleMapIterator"* nocapture readonly, i32*, i64*, i32*) unnamed_addr #8 align 2 {
  %5 = icmp eq i32* %1, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.base::(anonymous namespace)::SampleMapIterator", %"class.base::(anonymous namespace)::SampleMapIterator"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::__map_const_iterator"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %1, align 4
  br label %12

12:                                               ; preds = %4, %6
  %13 = icmp eq i64* %2, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.base::(anonymous namespace)::SampleMapIterator", %"class.base::(anonymous namespace)::SampleMapIterator"* %0, i64 0, i32 1
  %16 = bitcast %"class.std::__1::__map_const_iterator"* %15 to %"class.std::__1::__tree_node"**
  %17 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %2, align 8
  br label %22

22:                                               ; preds = %12, %14
  %23 = icmp eq i32* %3, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.base::(anonymous namespace)::SampleMapIterator", %"class.base::(anonymous namespace)::SampleMapIterator"* %0, i64 0, i32 1
  %26 = bitcast %"class.std::__1::__map_const_iterator"* %25 to %"class.std::__1::__tree_node"**
  %27 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %27, i64 0, i32 1, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %3, align 4
  br label %30

30:                                               ; preds = %22, %24
  ret void
}

declare zeroext i1 @_ZNK4base19SampleCountIterator14GetBucketIndexEPm(%"class.base::SampleCountIterator"*, i64*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
!8 = !{i8 0, i8 2}
