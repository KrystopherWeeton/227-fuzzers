; ModuleID = '../../third_party/pdfium/core/fxcrt/css/cfx_cssenumvalue.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/css/cfx_cssenumvalue.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_CSSEnumValue = type { %class.CFX_CSSValue.base, i8, [6 x i8] }
%class.CFX_CSSValue.base = type <{ %"class.fxcrt::Retainable", i8 }>
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%class.CFX_CSSValue = type <{ %"class.fxcrt::Retainable", i8, [7 x i8] }>

@_ZTV16CFX_CSSEnumValue = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFX_CSSEnumValue*)* @_ZN16CFX_CSSEnumValueD2Ev to i8*), i8* bitcast (void (%class.CFX_CSSEnumValue*)* @_ZN16CFX_CSSEnumValueD0Ev to i8*)] }, align 8

@_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue = hidden unnamed_addr alias void (%class.CFX_CSSEnumValue*, i8), void (%class.CFX_CSSEnumValue*, i8)* @_ZN16CFX_CSSEnumValueC2E20CFX_CSSPropertyValue
@_ZN16CFX_CSSEnumValueD1Ev = hidden unnamed_addr alias void (%class.CFX_CSSEnumValue*), void (%class.CFX_CSSEnumValue*)* @_ZN16CFX_CSSEnumValueD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CSSEnumValueC2E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue*, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = bitcast %class.CFX_CSSEnumValue* %0 to %class.CFX_CSSValue*
  tail call void @_ZN12CFX_CSSValueC2ENS_13PrimitiveTypeE(%class.CFX_CSSValue* %3, i8 zeroext 4) #4
  %4 = getelementptr inbounds %class.CFX_CSSEnumValue, %class.CFX_CSSEnumValue* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV16CFX_CSSEnumValue, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CFX_CSSEnumValue, %class.CFX_CSSEnumValue* %0, i64 0, i32 1
  store i8 %1, i8* %5, align 1
  ret void
}

declare void @_ZN12CFX_CSSValueC2ENS_13PrimitiveTypeE(%class.CFX_CSSValue*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12CFX_CSSValueD2Ev(%class.CFX_CSSValue*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CSSEnumValueD2Ev(%class.CFX_CSSEnumValue*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CFX_CSSEnumValue* %0 to %class.CFX_CSSValue*
  tail call void @_ZN12CFX_CSSValueD2Ev(%class.CFX_CSSValue* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CSSEnumValueD0Ev(%class.CFX_CSSEnumValue*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CFX_CSSEnumValue* %0 to %class.CFX_CSSValue*
  tail call void @_ZN12CFX_CSSValueD2Ev(%class.CFX_CSSValue* %2) #4
  %3 = bitcast %class.CFX_CSSEnumValue* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
