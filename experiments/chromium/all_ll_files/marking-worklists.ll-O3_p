; ModuleID = '../../v8/src/heap/cppgc/marking-worklists.cc'
source_filename = "../../v8/src/heap/cppgc/marking-worklists.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist" = type { %"class.v8::base::Mutex", %"class.std::__1::unordered_set" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.12", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { float }
%"class.cppgc::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.15", %"class.heap::base::Worklist.16", %"class.heap::base::Worklist.17", %"class.heap::base::Worklist.18", %"class.heap::base::Worklist.19", %"class.heap::base::Worklist.19", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.15" }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, [512 x %"struct.cppgc::TraceDescriptor"] }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"struct.cppgc::TraceDescriptor" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)* }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.heap::base::Worklist.16" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, [64 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::HeapObjectHeader" = type { i32, i16, i16 }
%"class.heap::base::Worklist.17" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem"] }
%"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem" = type { void (%"class.cppgc::LivenessBroker"*, i8*)*, i8* }
%"class.cppgc::LivenessBroker" = type { i8 }
%"class.heap::base::Worklist.18" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem"] }
%"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64 }
%"class.heap::base::Worklist.19" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem"] }
%"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem" = type { i8*, i8*, %"struct.cppgc::TraceDescriptor" }
%"class.heap::base::Worklist.15" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, [16 x %"class.cppgc::internal::HeapObjectHeader"*] }

@_ZN5cppgc8internal16MarkingWorklists16kMutatorThreadIdE = hidden local_unnamed_addr constant i32 0, align 4

@_ZN5cppgc8internal16MarkingWorklists23ExternalMarkingWorklistD1Ev = hidden unnamed_addr alias void (%"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*), void (%"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*)* @_ZN5cppgc8internal16MarkingWorklists23ExternalMarkingWorklistD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal16MarkingWorklists15ClearForTestingEv(%"class.cppgc::internal::MarkingWorklists"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2) #4
  %3 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %4, align 8
  %6 = icmp eq %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* [ %11, %7 ], [ %5, %1 ]
  %9 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %8 to i8*
  %10 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %8, i64 0, i32 1
  %11 = load %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %10, align 8
  tail call void @_ZdlPv(i8* %9) #5
  %12 = icmp eq %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %11, null
  br i1 %12, label %13, label %7

13:                                               ; preds = %7, %1
  %14 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %4 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #4
  %15 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 1, i32 1, i32 0, i32 2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #5
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %19, align 8
  %29 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %50, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = add i64 %30, -1
  %35 = and i64 %30, 3
  %36 = icmp ult i64 %34, 3
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = sub i64 %30, %35
  br label %51

39:                                               ; preds = %51, %32
  %40 = phi i64 [ 0, %32 ], [ %65, %51 ]
  %41 = icmp eq i64 %35, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %39, %42
  %43 = phi i64 [ %47, %42 ], [ %40, %39 ]
  %44 = phi i64 [ %48, %42 ], [ %35, %39 ]
  %45 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, i64 %43
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %46, align 8
  %47 = add nuw i64 %43, 1
  %48 = add i64 %44, -1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %42, !llvm.loop !2

50:                                               ; preds = %39, %42, %28
  store i64 0, i64* %15, align 8
  br label %68

51:                                               ; preds = %51, %37
  %52 = phi i64 [ 0, %37 ], [ %65, %51 ]
  %53 = phi i64 [ %38, %37 ], [ %66, %51 ]
  %54 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, i64 %52
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %55, align 8
  %56 = or i64 %52, 1
  %57 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %57, i64 %56
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %58, align 8
  %59 = or i64 %52, 2
  %60 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %60, i64 %59
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %61, align 8
  %62 = or i64 %52, 3
  %63 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %63, i64 %62
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %64, align 8
  %65 = add nuw i64 %52, 4
  %66 = add i64 %53, -4
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %39, label %51

68:                                               ; preds = %13, %50
  %69 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %69) #4
  %70 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %70 monotonic, align 8
  %71 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 2, i32 1
  %72 = load %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %71, align 8
  %73 = icmp eq %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %68, %74
  %75 = phi %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* [ %78, %74 ], [ %72, %68 ]
  %76 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %75 to i8*
  %77 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %75, i64 0, i32 1
  %78 = load %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %77, align 8
  tail call void @_ZdlPv(i8* %76) #5
  %79 = icmp eq %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %78, null
  br i1 %79, label %80, label %74

80:                                               ; preds = %74, %68
  %81 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %71 to i64*
  store atomic i64 0, i64* %81 monotonic, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %69) #4
  %82 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %82) #4
  %83 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %83 monotonic, align 8
  %84 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 3, i32 1
  %85 = load %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %84, align 8
  %86 = icmp eq %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* %85, null
  br i1 %86, label %93, label %87

87:                                               ; preds = %80, %87
  %88 = phi %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* [ %91, %87 ], [ %85, %80 ]
  %89 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* %88 to i8*
  %90 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* %88, i64 0, i32 1
  %91 = load %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %90, align 8
  tail call void @_ZdlPv(i8* %89) #5
  %92 = icmp eq %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* %91, null
  br i1 %92, label %93, label %87

93:                                               ; preds = %87, %80
  %94 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %84 to i64*
  store atomic i64 0, i64* %94 monotonic, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %82) #4
  %95 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %95) #4
  %96 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %96 monotonic, align 8
  %97 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 4, i32 1
  %98 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %97, align 8
  %99 = icmp eq %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %98, null
  br i1 %99, label %106, label %100

100:                                              ; preds = %93, %100
  %101 = phi %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* [ %104, %100 ], [ %98, %93 ]
  %102 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %101 to i8*
  %103 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %101, i64 0, i32 1
  %104 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %103, align 8
  tail call void @_ZdlPv(i8* %102) #5
  %105 = icmp eq %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %104, null
  br i1 %105, label %106, label %100

106:                                              ; preds = %100, %93
  %107 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %97 to i64*
  store atomic i64 0, i64* %107 monotonic, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %95) #4
  %108 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %108) #4
  %109 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %109 monotonic, align 8
  %110 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 5, i32 1
  %111 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"** %110, align 8
  %112 = icmp eq %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* %111, null
  br i1 %112, label %119, label %113

113:                                              ; preds = %106, %113
  %114 = phi %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* [ %117, %113 ], [ %111, %106 ]
  %115 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* %114 to i8*
  %116 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* %114, i64 0, i32 1
  %117 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"** %116, align 8
  tail call void @_ZdlPv(i8* %115) #5
  %118 = icmp eq %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* %117, null
  br i1 %118, label %119, label %113

119:                                              ; preds = %113, %106
  %120 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"** %110 to i64*
  store atomic i64 0, i64* %120 monotonic, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %108) #4
  %121 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %121) #4
  %122 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %122 monotonic, align 8
  %123 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 6, i32 1
  %124 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %123, align 8
  %125 = icmp eq %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %124, null
  br i1 %125, label %132, label %126

126:                                              ; preds = %119, %126
  %127 = phi %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* [ %130, %126 ], [ %124, %119 ]
  %128 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %127 to i8*
  %129 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %127, i64 0, i32 1
  %130 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %129, align 8
  tail call void @_ZdlPv(i8* %128) #5
  %131 = icmp eq %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %130, null
  br i1 %131, label %132, label %126

132:                                              ; preds = %126, %119
  %133 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %123 to i64*
  store atomic i64 0, i64* %133 monotonic, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %121) #4
  %134 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %134) #4
  %135 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %135 monotonic, align 8
  %136 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 7, i32 1
  %137 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %136, align 8
  %138 = icmp eq %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %137, null
  br i1 %138, label %145, label %139

139:                                              ; preds = %132, %139
  %140 = phi %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* [ %143, %139 ], [ %137, %132 ]
  %141 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %140 to i8*
  %142 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %140, i64 0, i32 1
  %143 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %142, align 8
  tail call void @_ZdlPv(i8* %141) #5
  %144 = icmp eq %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %143, null
  br i1 %144, label %145, label %139

145:                                              ; preds = %139, %132
  %146 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %136 to i64*
  store atomic i64 0, i64* %146 monotonic, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %134) #4
  %147 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %147) #4
  %148 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %148 monotonic, align 8
  %149 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %0, i64 0, i32 9, i32 1
  %150 = load %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %149, align 8
  %151 = icmp eq %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %150, null
  br i1 %151, label %158, label %152

152:                                              ; preds = %145, %152
  %153 = phi %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* [ %156, %152 ], [ %150, %145 ]
  %154 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %153 to i8*
  %155 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %153, i64 0, i32 1
  %156 = load %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %155, align 8
  tail call void @_ZdlPv(i8* %154) #5
  %157 = icmp eq %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %156, null
  br i1 %157, label %158, label %152

158:                                              ; preds = %152, %145
  %159 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %149 to i64*
  store atomic i64 0, i64* %159 monotonic, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %147) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal16MarkingWorklists23ExternalMarkingWorklistD2Ev(%"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #5
  %10 = icmp eq %"struct.std::__1::__hash_node_base"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %12, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #5
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"* %0, i64 0, i32 0
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %18) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
