; ModuleID = '../../third_party/webrtc/modules/audio_processing/ns/fast_math.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/ns/fast_math.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

; Function Attrs: nofree nounwind ssp uwtable
define hidden float @_ZN6webrtc21SqrtFastApproximationEf(float) local_unnamed_addr #0 {
  %2 = tail call float @sqrtf(float %0) #5
  ret float %2
}

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN6webrtc17Pow2ApproximationEf(float) local_unnamed_addr #2 {
  %2 = tail call float @exp2f(float %0) #1
  ret float %2
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN6webrtc16PowApproximationEff(float, float) local_unnamed_addr #2 {
  %3 = bitcast float %0 to i32
  %4 = uitofp i32 %3 to float
  %5 = fmul float %4, 0x3E80000000000000
  %6 = fadd float %5, 0xC05FBC5520000000
  %7 = fmul float %6, %1
  %8 = tail call float @exp2f(float %7) #1
  ret float %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZN6webrtc16LogApproximationEf(float) local_unnamed_addr #3 {
  %2 = bitcast float %0 to i32
  %3 = uitofp i32 %2 to float
  %4 = fmul float %3, 0x3E80000000000000
  %5 = fadd float %4, 0xC05FBC5520000000
  %6 = fmul float %5, 0x3FE62E4300000000
  ret float %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc16LogApproximationEN3rtc9ArrayViewIKfLln4711EEENS1_IfLln4711EEE(float*, i64, float*, i64) local_unnamed_addr #4 {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %109, label %6

6:                                                ; preds = %4
  %7 = icmp ult i64 %1, 8
  br i1 %7, label %8, label %27

8:                                                ; preds = %107, %27, %6
  %9 = phi i64 [ 0, %27 ], [ 0, %6 ], [ %34, %107 ]
  %10 = xor i64 %9, -1
  %11 = and i64 %1, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds float, float* %0, i64 %9
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = uitofp i32 %16 to float
  %18 = fmul float %17, 0x3E80000000000000
  %19 = fadd float %18, 0xC05FBC5520000000
  %20 = fmul float %19, 0x3FE62E4300000000
  %21 = getelementptr inbounds float, float* %2, i64 %9
  store float %20, float* %21, align 4
  %22 = or i64 %9, 1
  br label %23

23:                                               ; preds = %8, %13
  %24 = phi i64 [ %9, %8 ], [ %22, %13 ]
  %25 = sub i64 0, %1
  %26 = icmp eq i64 %10, %25
  br i1 %26, label %109, label %110

27:                                               ; preds = %6
  %28 = getelementptr float, float* %2, i64 %1
  %29 = getelementptr float, float* %0, i64 %1
  %30 = icmp ugt float* %29, %2
  %31 = icmp ugt float* %28, %0
  %32 = and i1 %30, %31
  br i1 %32, label %8, label %33

33:                                               ; preds = %27
  %34 = and i64 %1, -8
  %35 = add i64 %34, -8
  %36 = lshr exact i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %35, 0
  br i1 %39, label %85, label %40

40:                                               ; preds = %33
  %41 = sub nuw nsw i64 %37, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %82, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %83, %42 ]
  %45 = getelementptr inbounds float, float* %0, i64 %43
  %46 = bitcast float* %45 to <4 x i32>*
  %47 = load <4 x i32>, <4 x i32>* %46, align 4, !alias.scope !2
  %48 = getelementptr inbounds float, float* %45, i64 4
  %49 = bitcast float* %48 to <4 x i32>*
  %50 = load <4 x i32>, <4 x i32>* %49, align 4, !alias.scope !2
  %51 = uitofp <4 x i32> %47 to <4 x float>
  %52 = uitofp <4 x i32> %50 to <4 x float>
  %53 = fmul <4 x float> %51, <float 0x3E80000000000000, float 0x3E80000000000000, float 0x3E80000000000000, float 0x3E80000000000000>
  %54 = fmul <4 x float> %52, <float 0x3E80000000000000, float 0x3E80000000000000, float 0x3E80000000000000, float 0x3E80000000000000>
  %55 = fadd <4 x float> %53, <float 0xC05FBC5520000000, float 0xC05FBC5520000000, float 0xC05FBC5520000000, float 0xC05FBC5520000000>
  %56 = fadd <4 x float> %54, <float 0xC05FBC5520000000, float 0xC05FBC5520000000, float 0xC05FBC5520000000, float 0xC05FBC5520000000>
  %57 = fmul <4 x float> %55, <float 0x3FE62E4300000000, float 0x3FE62E4300000000, float 0x3FE62E4300000000, float 0x3FE62E4300000000>
  %58 = fmul <4 x float> %56, <float 0x3FE62E4300000000, float 0x3FE62E4300000000, float 0x3FE62E4300000000, float 0x3FE62E4300000000>
  %59 = getelementptr inbounds float, float* %2, i64 %43
  %60 = bitcast float* %59 to <4 x float>*
  store <4 x float> %57, <4 x float>* %60, align 4, !alias.scope !5, !noalias !2
  %61 = getelementptr inbounds float, float* %59, i64 4
  %62 = bitcast float* %61 to <4 x float>*
  store <4 x float> %58, <4 x float>* %62, align 4, !alias.scope !5, !noalias !2
  %63 = or i64 %43, 8
  %64 = getelementptr inbounds float, float* %0, i64 %63
  %65 = bitcast float* %64 to <4 x i32>*
  %66 = load <4 x i32>, <4 x i32>* %65, align 4, !alias.scope !2
  %67 = getelementptr inbounds float, float* %64, i64 4
  %68 = bitcast float* %67 to <4 x i32>*
  %69 = load <4 x i32>, <4 x i32>* %68, align 4, !alias.scope !2
  %70 = uitofp <4 x i32> %66 to <4 x float>
  %71 = uitofp <4 x i32> %69 to <4 x float>
  %72 = fmul <4 x float> %70, <float 0x3E80000000000000, float 0x3E80000000000000, float 0x3E80000000000000, float 0x3E80000000000000>
  %73 = fmul <4 x float> %71, <float 0x3E80000000000000, float 0x3E80000000000000, float 0x3E80000000000000, float 0x3E80000000000000>
  %74 = fadd <4 x float> %72, <float 0xC05FBC5520000000, float 0xC05FBC5520000000, float 0xC05FBC5520000000, float 0xC05FBC5520000000>
  %75 = fadd <4 x float> %73, <float 0xC05FBC5520000000, float 0xC05FBC5520000000, float 0xC05FBC5520000000, float 0xC05FBC5520000000>
  %76 = fmul <4 x float> %74, <float 0x3FE62E4300000000, float 0x3FE62E4300000000, float 0x3FE62E4300000000, float 0x3FE62E4300000000>
  %77 = fmul <4 x float> %75, <float 0x3FE62E4300000000, float 0x3FE62E4300000000, float 0x3FE62E4300000000, float 0x3FE62E4300000000>
  %78 = getelementptr inbounds float, float* %2, i64 %63
  %79 = bitcast float* %78 to <4 x float>*
  store <4 x float> %76, <4 x float>* %79, align 4, !alias.scope !5, !noalias !2
  %80 = getelementptr inbounds float, float* %78, i64 4
  %81 = bitcast float* %80 to <4 x float>*
  store <4 x float> %77, <4 x float>* %81, align 4, !alias.scope !5, !noalias !2
  %82 = add i64 %43, 16
  %83 = add i64 %44, -2
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %42, !llvm.loop !7

85:                                               ; preds = %42, %33
  %86 = phi i64 [ 0, %33 ], [ %82, %42 ]
  %87 = icmp eq i64 %38, 0
  br i1 %87, label %107, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds float, float* %0, i64 %86
  %90 = bitcast float* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4, !alias.scope !2
  %92 = getelementptr inbounds float, float* %89, i64 4
  %93 = bitcast float* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4, !alias.scope !2
  %95 = uitofp <4 x i32> %91 to <4 x float>
  %96 = uitofp <4 x i32> %94 to <4 x float>
  %97 = fmul <4 x float> %95, <float 0x3E80000000000000, float 0x3E80000000000000, float 0x3E80000000000000, float 0x3E80000000000000>
  %98 = fmul <4 x float> %96, <float 0x3E80000000000000, float 0x3E80000000000000, float 0x3E80000000000000, float 0x3E80000000000000>
  %99 = fadd <4 x float> %97, <float 0xC05FBC5520000000, float 0xC05FBC5520000000, float 0xC05FBC5520000000, float 0xC05FBC5520000000>
  %100 = fadd <4 x float> %98, <float 0xC05FBC5520000000, float 0xC05FBC5520000000, float 0xC05FBC5520000000, float 0xC05FBC5520000000>
  %101 = fmul <4 x float> %99, <float 0x3FE62E4300000000, float 0x3FE62E4300000000, float 0x3FE62E4300000000, float 0x3FE62E4300000000>
  %102 = fmul <4 x float> %100, <float 0x3FE62E4300000000, float 0x3FE62E4300000000, float 0x3FE62E4300000000, float 0x3FE62E4300000000>
  %103 = getelementptr inbounds float, float* %2, i64 %86
  %104 = bitcast float* %103 to <4 x float>*
  store <4 x float> %101, <4 x float>* %104, align 4, !alias.scope !5, !noalias !2
  %105 = getelementptr inbounds float, float* %103, i64 4
  %106 = bitcast float* %105 to <4 x float>*
  store <4 x float> %102, <4 x float>* %106, align 4, !alias.scope !5, !noalias !2
  br label %107

107:                                              ; preds = %85, %88
  %108 = icmp eq i64 %34, %1
  br i1 %108, label %109, label %8

109:                                              ; preds = %23, %110, %107, %4
  ret void

110:                                              ; preds = %23, %110
  %111 = phi i64 [ %129, %110 ], [ %24, %23 ]
  %112 = getelementptr inbounds float, float* %0, i64 %111
  %113 = bitcast float* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = uitofp i32 %114 to float
  %116 = fmul float %115, 0x3E80000000000000
  %117 = fadd float %116, 0xC05FBC5520000000
  %118 = fmul float %117, 0x3FE62E4300000000
  %119 = getelementptr inbounds float, float* %2, i64 %111
  store float %118, float* %119, align 4
  %120 = add nuw i64 %111, 1
  %121 = getelementptr inbounds float, float* %0, i64 %120
  %122 = bitcast float* %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = uitofp i32 %123 to float
  %125 = fmul float %124, 0x3E80000000000000
  %126 = fadd float %125, 0xC05FBC5520000000
  %127 = fmul float %126, 0x3FE62E4300000000
  %128 = getelementptr inbounds float, float* %2, i64 %120
  store float %127, float* %128, align 4
  %129 = add nuw i64 %111, 2
  %130 = icmp eq i64 %129, %1
  br i1 %130, label %109, label %110, !llvm.loop !9
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN6webrtc16ExpApproximationEf(float) local_unnamed_addr #2 {
  %2 = fmul float %0, 0x3FDBCB7B20000000
  %3 = fmul float %2, 0x400A755C00000000
  %4 = tail call float @exp2f(float %3) #1
  ret float %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16ExpApproximationEN3rtc9ArrayViewIKfLln4711EEENS1_IfLln4711EEE(float*, i64, float*, i64) local_unnamed_addr #2 {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %4
  %7 = and i64 %1, 1
  %8 = icmp eq i64 %1, 1
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  %10 = sub i64 %1, %7
  br label %22

11:                                               ; preds = %22, %6
  %12 = phi i64 [ 0, %6 ], [ %38, %22 ]
  %13 = icmp eq i64 %7, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds float, float* %0, i64 %12
  %16 = load float, float* %15, align 4
  %17 = fmul float %16, 0x3FDBCB7B20000000
  %18 = fmul float %17, 0x400A755C00000000
  %19 = tail call float @exp2f(float %18) #1
  %20 = getelementptr inbounds float, float* %2, i64 %12
  store float %19, float* %20, align 4
  br label %21

21:                                               ; preds = %14, %11, %4
  ret void

22:                                               ; preds = %22, %9
  %23 = phi i64 [ 0, %9 ], [ %38, %22 ]
  %24 = phi i64 [ %10, %9 ], [ %39, %22 ]
  %25 = getelementptr inbounds float, float* %0, i64 %23
  %26 = load float, float* %25, align 4
  %27 = fmul float %26, 0x3FDBCB7B20000000
  %28 = fmul float %27, 0x400A755C00000000
  %29 = tail call float @exp2f(float %28) #1
  %30 = getelementptr inbounds float, float* %2, i64 %23
  store float %29, float* %30, align 4
  %31 = or i64 %23, 1
  %32 = getelementptr inbounds float, float* %0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = fmul float %33, 0x3FDBCB7B20000000
  %35 = fmul float %34, 0x400A755C00000000
  %36 = tail call float @exp2f(float %35) #1
  %37 = getelementptr inbounds float, float* %2, i64 %31
  store float %36, float* %37, align 4
  %38 = add nuw i64 %23, 2
  %39 = add i64 %24, -2
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %11, label %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc24ExpApproximationSignFlipEN3rtc9ArrayViewIKfLln4711EEENS1_IfLln4711EEE(float*, i64, float*, i64) local_unnamed_addr #2 {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %4
  %7 = and i64 %1, 1
  %8 = icmp eq i64 %1, 1
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  %10 = sub i64 %1, %7
  br label %22

11:                                               ; preds = %22, %6
  %12 = phi i64 [ 0, %6 ], [ %38, %22 ]
  %13 = icmp eq i64 %7, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds float, float* %0, i64 %12
  %16 = load float, float* %15, align 4
  %17 = fmul float %16, 0xBFDBCB7B20000000
  %18 = fmul float %17, 0x400A755C00000000
  %19 = tail call float @exp2f(float %18) #1
  %20 = getelementptr inbounds float, float* %2, i64 %12
  store float %19, float* %20, align 4
  br label %21

21:                                               ; preds = %14, %11, %4
  ret void

22:                                               ; preds = %22, %9
  %23 = phi i64 [ 0, %9 ], [ %38, %22 ]
  %24 = phi i64 [ %10, %9 ], [ %39, %22 ]
  %25 = getelementptr inbounds float, float* %0, i64 %23
  %26 = load float, float* %25, align 4
  %27 = fmul float %26, 0xBFDBCB7B20000000
  %28 = fmul float %27, 0x400A755C00000000
  %29 = tail call float @exp2f(float %28) #1
  %30 = getelementptr inbounds float, float* %2, i64 %23
  store float %29, float* %30, align 4
  %31 = or i64 %23, 1
  %32 = getelementptr inbounds float, float* %0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = fmul float %33, 0xBFDBCB7B20000000
  %35 = fmul float %34, 0x400A755C00000000
  %36 = tail call float @exp2f(float %35) #1
  %37 = getelementptr inbounds float, float* %2, i64 %31
  store float %36, float* %37, align 4
  %38 = add nuw i64 %23, 2
  %39 = add i64 %24, -2
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %11, label %22
}

declare float @exp2f(float) local_unnamed_addr

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !8}
