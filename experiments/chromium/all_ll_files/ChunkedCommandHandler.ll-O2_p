; ModuleID = '../../third_party/dawn/src/dawn_wire/ChunkedCommandHandler.cpp'
source_filename = "../../third_party/dawn/src/dawn_wire/ChunkedCommandHandler.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::nothrow_t" = type { i8 }
%"class.dawn_wire::ChunkedCommandHandler" = type { %"class.dawn_wire::CommandHandler", i64, i64, %"class.std::__1::unique_ptr" }
%"class.dawn_wire::CommandHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }

@_ZTVN9dawn_wire21ChunkedCommandHandlerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_wire::ChunkedCommandHandler"*)* @_ZN9dawn_wire21ChunkedCommandHandlerD2Ev to i8*), i8* bitcast (void (%"class.dawn_wire::ChunkedCommandHandler"*)* @_ZN9dawn_wire21ChunkedCommandHandlerD0Ev to i8*), i8* bitcast (i8* (%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64)* @_ZN9dawn_wire21ChunkedCommandHandler14HandleCommandsEPVKcm to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

@_ZN9dawn_wire21ChunkedCommandHandlerD1Ev = hidden unnamed_addr alias void (%"class.dawn_wire::ChunkedCommandHandler"*), void (%"class.dawn_wire::ChunkedCommandHandler"*)* @_ZN9dawn_wire21ChunkedCommandHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9dawn_wire21ChunkedCommandHandlerD2Ev(%"class.dawn_wire::ChunkedCommandHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_wire::ChunkedCommandHandler", %"class.dawn_wire::ChunkedCommandHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN9dawn_wire21ChunkedCommandHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_wire::ChunkedCommandHandler", %"class.dawn_wire::ChunkedCommandHandler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #7
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.dawn_wire::ChunkedCommandHandler", %"class.dawn_wire::ChunkedCommandHandler"* %0, i64 0, i32 0
  tail call void @_ZN9dawn_wire14CommandHandlerD2Ev(%"class.dawn_wire::CommandHandler"* %8) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9dawn_wire14CommandHandlerD2Ev(%"class.dawn_wire::CommandHandler"*) unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN9dawn_wire21ChunkedCommandHandlerD0Ev(%"class.dawn_wire::ChunkedCommandHandler"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN9dawn_wire21ChunkedCommandHandler14HandleCommandsEPVKcm(%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.dawn_wire::ChunkedCommandHandler", %"class.dawn_wire::ChunkedCommandHandler"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %33, label %7

7:                                                ; preds = %3
  %8 = icmp ult i64 %5, %2
  %9 = select i1 %8, i64 %5, i64 %2
  %10 = getelementptr inbounds %"class.dawn_wire::ChunkedCommandHandler", %"class.dawn_wire::ChunkedCommandHandler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.dawn_wire::ChunkedCommandHandler", %"class.dawn_wire::ChunkedCommandHandler"* %0, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %9, i1 false)
  %15 = load i64, i64* %12, align 8
  %16 = add i64 %15, %9
  store i64 %16, i64* %12, align 8
  %17 = load i64, i64* %4, align 8
  %18 = sub i64 %17, %9
  store i64 %18, i64* %4, align 8
  %19 = getelementptr inbounds i8, i8* %1, i64 %9
  %20 = sub i64 %2, %9
  %21 = icmp eq i64 %18, 0
  br i1 %21, label %22, label %33

22:                                               ; preds = %7
  %23 = load i8*, i8** %10, align 8
  store i8* null, i8** %10, align 8
  %24 = bitcast %"class.dawn_wire::ChunkedCommandHandler"* %0 to i8* (%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64)***
  %25 = load i8* (%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64)**, i8* (%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64)*** %24, align 8
  %26 = getelementptr inbounds i8* (%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64)*, i8* (%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64)** %25, i64 3
  %27 = load i8* (%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64)*, i8* (%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64)** %26, align 8
  %28 = tail call i8* %27(%"class.dawn_wire::ChunkedCommandHandler"* %0, i8* %23, i64 %16) #8
  %29 = icmp eq i8* %28, null
  %30 = icmp eq i8* %23, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %22
  tail call void @_ZdaPv(i8* nonnull %23) #7
  br label %32

32:                                               ; preds = %22, %31
  br i1 %29, label %41, label %33

33:                                               ; preds = %32, %7, %3
  %34 = phi i64 [ %2, %3 ], [ %20, %7 ], [ %20, %32 ]
  %35 = phi i8* [ %1, %3 ], [ %19, %7 ], [ %19, %32 ]
  %36 = bitcast %"class.dawn_wire::ChunkedCommandHandler"* %0 to i8* (%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64)***
  %37 = load i8* (%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64)**, i8* (%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64)*** %36, align 8
  %38 = getelementptr inbounds i8* (%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64)*, i8* (%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64)** %37, i64 3
  %39 = load i8* (%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64)*, i8* (%"class.dawn_wire::ChunkedCommandHandler"*, i8*, i64)** %38, align 8
  %40 = tail call i8* %39(%"class.dawn_wire::ChunkedCommandHandler"* %0, i8* %35, i64 %34) #8
  br label %41

41:                                               ; preds = %32, %33
  %42 = phi i8* [ %40, %33 ], [ null, %32 ]
  ret i8* %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9dawn_wire21ChunkedCommandHandler23BeginChunkedCommandDataEPVKcmm(%"class.dawn_wire::ChunkedCommandHandler"* nocapture, i8* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #7
  %6 = getelementptr inbounds %"class.dawn_wire::ChunkedCommandHandler", %"class.dawn_wire::ChunkedCommandHandler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  store i8* %5, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  tail call void @_ZdaPv(i8* nonnull %7) #7
  %10 = load i8*, i8** %6, align 8
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %5, %4 ], [ %10, %9 ]
  %13 = icmp eq i8* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %1, i64 %3, i1 false)
  %15 = getelementptr inbounds %"class.dawn_wire::ChunkedCommandHandler", %"class.dawn_wire::ChunkedCommandHandler"* %0, i64 0, i32 2
  store i64 %3, i64* %15, align 8
  %16 = sub i64 %2, %3
  %17 = getelementptr inbounds %"class.dawn_wire::ChunkedCommandHandler", %"class.dawn_wire::ChunkedCommandHandler"* %0, i64 0, i32 1
  store i64 %16, i64* %17, align 8
  br label %18

18:                                               ; preds = %11, %14
  %19 = phi i32 [ 1, %14 ], [ 2, %11 ]
  ret i32 %19
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
