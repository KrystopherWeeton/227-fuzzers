; ModuleID = '../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/ErrorHandling.cpp'
source_filename = "../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/ErrorHandling.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.llvm::ManagedStaticBase" = type { %"struct.std::__1::atomic", void (i8*)*, %"class.llvm::ManagedStaticBase"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8* }
%"class.llvm::sys::SmartMutex" = type <{ %"class.llvm::sys::MutexImpl", [3 x i8], i32, i8, [3 x i8] }>
%"class.llvm::sys::MutexImpl" = type { i8 }
%"class.llvm::Twine" = type <{ %"union.llvm::Twine::Child", %"union.llvm::Twine::Child", i8, i8, [6 x i8] }>
%"union.llvm::Twine::Child" = type { %"class.llvm::Twine"* }
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl.base", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl.base" = type { %"class.llvm::SmallVectorTemplateBase.base" }
%"class.llvm::SmallVectorTemplateBase.base" = type { %"class.llvm::SmallVectorTemplateCommon.base" }
%"class.llvm::SmallVectorTemplateCommon.base" = type <{ %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion" }>
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [1 x i8] }
%"struct.llvm::SmallVectorStorage" = type { [63 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::raw_svector_ostream" = type { %"class.llvm::raw_pwrite_stream.base", %"class.llvm::SmallVectorImpl"* }
%"class.llvm::raw_pwrite_stream.base" = type { %"class.llvm::raw_ostream.base" }
%"class.llvm::raw_ostream.base" = type <{ i32 (...)**, i8*, i8*, i8*, i32 }>
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase.base", [7 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>
%"class.llvm::SmallVectorTemplateCommon" = type <{ %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion", [7 x i8] }>
%"class.llvm::StringRef" = type { i8*, i64 }

$_ZN4llvm11raw_ostreamlsEPKc = comdat any

$_ZN4llvm11raw_ostream13SetUnbufferedEv = comdat any

$_ZN4llvm11raw_ostreamlsENS_9StringRefE = comdat any

$_ZN4llvm14object_creatorINS_3sys10SmartMutexILb0EEEEEPvv = comdat any

$_ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv = comdat any

@_ZL12ErrorHandler = internal unnamed_addr global void (i8*, %"class.std::__1::basic_string"*, i1)* null, align 8
@_ZL20ErrorHandlerUserData = internal unnamed_addr global i8* null, align 8
@.str = private unnamed_addr constant [13 x i8] c"LLVM ERROR: \00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"UNREACHABLE executed\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c" at \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"!\0A\00", align 1
@_ZL17ErrorHandlerMutex = internal global { { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* } zeroinitializer, align 8
@_ZTVN4llvm19raw_svector_ostreamE = external unnamed_addr constant { [14 x i8*] }, align 8

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm27install_fatal_error_handlerEPFvPvRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbES0_(void (i8*, %"class.std::__1::basic_string"*, i1)*, i8*) local_unnamed_addr #0 {
  %3 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL17ErrorHandlerMutex to i64*) acquire, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL17ErrorHandlerMutex to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_3sys10SmartMutexILb0EEEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv) #10
  br label %6

6:                                                ; preds = %2, %5
  %7 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL17ErrorHandlerMutex to i64*) monotonic, align 8
  %8 = inttoptr i64 %7 to %"class.llvm::sys::SmartMutex"*
  %9 = getelementptr inbounds %"class.llvm::sys::SmartMutex", %"class.llvm::sys::SmartMutex"* %8, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZN4llvm3sys9MutexImpl7acquireEv(%"class.llvm::sys::MutexImpl"* %9) #10
  store void (i8*, %"class.std::__1::basic_string"*, i1)* %0, void (i8*, %"class.std::__1::basic_string"*, i1)** @_ZL12ErrorHandler, align 8
  store i8* %1, i8** @_ZL20ErrorHandlerUserData, align 8
  %11 = tail call zeroext i1 @_ZN4llvm3sys9MutexImpl7releaseEv(%"class.llvm::sys::MutexImpl"* %9) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm26remove_fatal_error_handlerEv() local_unnamed_addr #0 {
  %1 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL17ErrorHandlerMutex to i64*) acquire, align 8
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL17ErrorHandlerMutex to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_3sys10SmartMutexILb0EEEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv) #10
  br label %4

4:                                                ; preds = %0, %3
  %5 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL17ErrorHandlerMutex to i64*) monotonic, align 8
  %6 = inttoptr i64 %5 to %"class.llvm::sys::SmartMutex"*
  %7 = getelementptr inbounds %"class.llvm::sys::SmartMutex", %"class.llvm::sys::SmartMutex"* %6, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN4llvm3sys9MutexImpl7acquireEv(%"class.llvm::sys::MutexImpl"* %7) #10
  store void (i8*, %"class.std::__1::basic_string"*, i1)* null, void (i8*, %"class.std::__1::basic_string"*, i1)** @_ZL12ErrorHandler, align 8
  store i8* null, i8** @_ZL20ErrorHandlerUserData, align 8
  %9 = tail call zeroext i1 @_ZN4llvm3sys9MutexImpl7releaseEv(%"class.llvm::sys::MutexImpl"* %7) #10
  ret void
}

; Function Attrs: noreturn nounwind optsize ssp uwtable
define hidden void @_ZN4llvm18report_fatal_errorEPKcb(i8*, i1 zeroext) local_unnamed_addr #2 {
  %3 = alloca %"class.llvm::Twine", align 8
  %4 = bitcast %"class.llvm::Twine"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %3, i64 0, i32 3
  store i8 1, i8* %5, align 1
  %6 = load i8, i8* %0, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.llvm::Twine"* %3 to i8**
  store i8* %0, i8** %9, align 8
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8 [ 3, %8 ], [ 1, %2 ]
  %12 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %3, i64 0, i32 2
  store i8 %11, i8* %12, align 8
  call void @_ZN4llvm18report_fatal_errorERKNS_5TwineEb(%"class.llvm::Twine"* nonnull dereferenceable(24) %3, i1 zeroext %1) #12
  unreachable
}

; Function Attrs: noreturn nounwind optsize ssp uwtable
define hidden void @_ZN4llvm18report_fatal_errorERKNS_5TwineEb(%"class.llvm::Twine"* dereferenceable(24), i1 zeroext) local_unnamed_addr #2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.llvm::SmallVector", align 8
  %5 = alloca %"class.llvm::raw_svector_ostream", align 8
  %6 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL17ErrorHandlerMutex to i64*) acquire, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL17ErrorHandlerMutex to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_3sys10SmartMutexILb0EEEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv) #10
  br label %9

9:                                                ; preds = %2, %8
  %10 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL17ErrorHandlerMutex to i64*) monotonic, align 8
  %11 = inttoptr i64 %10 to %"class.llvm::sys::SmartMutex"*
  %12 = getelementptr inbounds %"class.llvm::sys::SmartMutex", %"class.llvm::sys::SmartMutex"* %11, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZN4llvm3sys9MutexImpl7acquireEv(%"class.llvm::sys::MutexImpl"* %12) #10
  %14 = load void (i8*, %"class.std::__1::basic_string"*, i1)*, void (i8*, %"class.std::__1::basic_string"*, i1)** @_ZL12ErrorHandler, align 8
  %15 = load i8*, i8** @_ZL20ErrorHandlerUserData, align 8
  %16 = tail call zeroext i1 @_ZN4llvm3sys9MutexImpl7releaseEv(%"class.llvm::sys::MutexImpl"* %12) #10
  %17 = icmp eq void (i8*, %"class.std::__1::basic_string"*, i1)* %14, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %9
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  call void @_ZNK4llvm5Twine3strEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.llvm::Twine"* %0) #10
  call void %14(i8* %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i1 zeroext %1) #10
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %18, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  br label %61

28:                                               ; preds = %9
  %29 = bitcast %"class.llvm::SmallVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 64, i1 false)
  %31 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %32 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %35 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %4, i64 1
  %36 = bitcast i8** %34 to %"class.llvm::SmallVector"**
  store %"class.llvm::SmallVector"* %35, %"class.llvm::SmallVector"** %36, align 8
  %37 = bitcast %"class.llvm::raw_svector_ostream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 40, i1 false)
  %38 = getelementptr inbounds %"class.llvm::raw_svector_ostream", %"class.llvm::raw_svector_ostream"* %5, i64 0, i32 0, i32 0, i32 4
  store i32 1, i32* %38, align 8
  %39 = getelementptr inbounds %"class.llvm::raw_svector_ostream", %"class.llvm::raw_svector_ostream"* %5, i64 0, i32 0, i32 0, i32 1
  %40 = bitcast i8** %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #11
  %41 = getelementptr inbounds %"class.llvm::raw_svector_ostream", %"class.llvm::raw_svector_ostream"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN4llvm19raw_svector_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds %"class.llvm::raw_svector_ostream", %"class.llvm::raw_svector_ostream"* %5, i64 0, i32 1
  %43 = bitcast %"class.llvm::SmallVectorImpl"** %42 to %"class.llvm::SmallVector"**
  store %"class.llvm::SmallVector"* %4, %"class.llvm::SmallVector"** %43, align 8
  %44 = bitcast %"class.llvm::raw_svector_ostream"* %5 to %"class.llvm::raw_ostream"*
  call void @_ZN4llvm11raw_ostream13SetUnbufferedEv(%"class.llvm::raw_ostream"* nonnull %44) #10
  %45 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* nonnull %44, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12) #10
  call void @_ZNK4llvm5Twine5printERNS_11raw_ostreamE(%"class.llvm::Twine"* %0, %"class.llvm::raw_ostream"* dereferenceable(40) %45) #10
  %46 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #10
  %47 = bitcast %"class.llvm::SmallVectorImpl"** %42 to %"class.llvm::SmallVectorTemplateCommon"**
  %48 = load %"class.llvm::SmallVectorTemplateCommon"*, %"class.llvm::SmallVectorTemplateCommon"** %47, align 8
  %49 = getelementptr inbounds %"class.llvm::SmallVectorTemplateCommon", %"class.llvm::SmallVectorTemplateCommon"* %48, i64 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %"class.llvm::SmallVectorTemplateCommon", %"class.llvm::SmallVectorTemplateCommon"* %48, i64 0, i32 0, i32 1
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = ptrtoint i8* %50 to i64
  %55 = sub i64 %53, %54
  %56 = call i64 @write(i32 2, i8* %50, i64 %55) #10
  call void @_ZN4llvm11raw_ostreamD2Ev(%"class.llvm::raw_ostream"* nonnull %44) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #11
  %57 = load i8*, i8** %32, align 8
  %58 = icmp eq i8* %57, %31
  br i1 %58, label %60, label %59

59:                                               ; preds = %28
  call void @free(i8* %57) #10
  br label %60

60:                                               ; preds = %28, %59
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %29) #11
  br label %61

61:                                               ; preds = %60, %27
  call void @_ZN4llvm3sys20RunInterruptHandlersEv() #10
  call void @exit(i32 1) #14
  unreachable
}

; Function Attrs: noreturn nounwind optsize ssp uwtable
define hidden void @_ZN4llvm18report_fatal_errorERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #2 {
  %3 = alloca %"class.llvm::Twine", align 8
  %4 = bitcast %"class.llvm::Twine"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %3, i64 0, i32 2
  store i8 4, i8* %5, align 8
  %6 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %3, i64 0, i32 3
  store i8 1, i8* %6, align 1
  %7 = bitcast %"class.llvm::Twine"* %3 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %7, align 8
  call void @_ZN4llvm18report_fatal_errorERKNS_5TwineEb(%"class.llvm::Twine"* nonnull dereferenceable(24) %3, i1 zeroext %1) #12
  unreachable
}

; Function Attrs: noreturn nounwind optsize ssp uwtable
define hidden void @_ZN4llvm18report_fatal_errorENS_9StringRefEb(i8*, i64, i1 zeroext) local_unnamed_addr #2 {
  %4 = alloca %"class.llvm::StringRef", align 8
  %5 = alloca %"class.llvm::Twine", align 8
  %6 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %4, i64 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %4, i64 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = bitcast %"class.llvm::Twine"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %5, i64 0, i32 2
  store i8 5, i8* %9, align 8
  %10 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %5, i64 0, i32 3
  store i8 1, i8* %10, align 1
  %11 = bitcast %"class.llvm::Twine"* %5 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %4, %"class.llvm::StringRef"** %11, align 8
  call void @_ZN4llvm18report_fatal_errorERKNS_5TwineEb(%"class.llvm::Twine"* nonnull dereferenceable(24) %5, i1 zeroext %2) #12
  unreachable
}

; Function Attrs: optsize
declare void @_ZNK4llvm5Twine3strEv(%"class.std::__1::basic_string"* sret, %"class.llvm::Twine"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* nonnull %1) #15
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i64 [ %5, %4 ], [ 0, %2 ]
  %8 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %0, i8* %1, i64 %7) #16
  ret %"class.llvm::raw_ostream"* %8
}

; Function Attrs: nofree optsize
declare i64 @write(i32, i8* nocapture readonly, i64) local_unnamed_addr #4

; Function Attrs: optsize
declare void @_ZN4llvm3sys20RunInterruptHandlersEv() local_unnamed_addr #3

; Function Attrs: noreturn nounwind optsize
declare void @exit(i32) local_unnamed_addr #5

; Function Attrs: noreturn nounwind optsize ssp uwtable
define hidden void @_ZN4llvm25llvm_unreachable_internalEPKcS1_j(i8*, i8*, i32) local_unnamed_addr #2 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4dbgsEv() #10
  %7 = tail call i64 @strlen(i8* nonnull %0) #15
  %8 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %6, i8* nonnull %0, i64 %7) #10
  %9 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #10
  br label %10

10:                                               ; preds = %3, %5
  %11 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4dbgsEv() #10
  %12 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i64 20) #10
  %13 = icmp eq i8* %1, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %10
  %15 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4dbgsEv() #10
  %16 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #10
  %17 = tail call i64 @strlen(i8* nonnull %1) #15
  %18 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %16, i8* nonnull %1, i64 %17) #10
  %19 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #10
  %20 = zext i32 %2 to i64
  %21 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEm(%"class.llvm::raw_ostream"* %19, i64 %20) #10
  br label %22

22:                                               ; preds = %10, %14
  %23 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4dbgsEv() #10
  %24 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #16
  tail call void @abort() #14
  unreachable
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4dbgsEv() local_unnamed_addr #3

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @LLVMInstallFatalErrorHandler(void (i8*)*) local_unnamed_addr #0 {
  %2 = bitcast void (i8*)* %0 to i8*
  tail call void @_ZN4llvm27install_fatal_error_handlerEPFvPvRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbES0_(void (i8*, %"class.std::__1::basic_string"*, i1)* nonnull @_ZL20bindingsErrorHandlerPvRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb, i8* %2) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZL20bindingsErrorHandlerPvRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(i8* nocapture, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) #0 {
  %4 = bitcast i8* %0 to void (i8*)*
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %12 = select i1 %8, i8* %10, i8* %11
  tail call void %4(i8* %12) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @LLVMResetFatalErrorHandler() local_unnamed_addr #0 {
  tail call void @_ZN4llvm26remove_fatal_error_handlerEv() #16
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZN4llvm3sys9MutexImpl7acquireEv(%"class.llvm::sys::MutexImpl"*) local_unnamed_addr #3

; Function Attrs: optsize
declare zeroext i1 @_ZN4llvm3sys9MutexImpl7releaseEv(%"class.llvm::sys::MutexImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm11raw_ostream13SetUnbufferedEv(%"class.llvm::raw_ostream"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void @_ZN4llvm11raw_ostream14flush_nonemptyEv(%"class.llvm::raw_ostream"* %0) #10
  br label %8

8:                                                ; preds = %1, %7
  tail call void @_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE(%"class.llvm::raw_ostream"* %0, i8* null, i64 0, i32 0) #10
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZN4llvm11raw_ostreamD2Ev(%"class.llvm::raw_ostream"*) unnamed_addr #6

; Function Attrs: optsize
declare void @_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE(%"class.llvm::raw_ostream"*, i8*, i64, i32) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN4llvm11raw_ostream14flush_nonemptyEv(%"class.llvm::raw_ostream"*) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZNK4llvm5Twine5printERNS_11raw_ostreamE(%"class.llvm::Twine"*, %"class.llvm::raw_ostream"* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 2
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = sub i64 %6, %9
  %11 = icmp ult i64 %10, %2
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %0, i8* %1, i64 %2) #10
  br label %19

14:                                               ; preds = %3
  %15 = icmp eq i64 %2, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %1, i64 %2, i1 false)
  %17 = load i8*, i8** %7, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %2
  store i8* %18, i8** %7, align 8
  br label %19

19:                                               ; preds = %16, %14, %12
  %20 = phi %"class.llvm::raw_ostream"* [ %13, %12 ], [ %0, %14 ], [ %0, %16 ]
  ret %"class.llvm::raw_ostream"* %20
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind optsize readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind optsize
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEm(%"class.llvm::raw_ostream"*, i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: optsize
declare void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"*, i8* ()*, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i8* @_ZN4llvm14object_creatorINS_3sys10SmartMutexILb0EEEEEPvv() #0 comdat {
  %1 = tail call i8* @_Znwm(i64 12) #13
  %2 = bitcast i8* %1 to %"class.llvm::sys::MutexImpl"*
  tail call void @_ZN4llvm3sys9MutexImplC1Eb(%"class.llvm::sys::MutexImpl"* nonnull %2, i1 zeroext true) #10
  %3 = getelementptr inbounds i8, i8* %1, i64 4
  %4 = bitcast i8* %3 to i32*
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds i8, i8* %1, i64 8
  store i8 1, i8* %5, align 4
  ret i8* %1
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv(i8*) #0 comdat align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %"class.llvm::sys::MutexImpl"*
  tail call void @_ZN4llvm3sys9MutexImplD1Ev(%"class.llvm::sys::MutexImpl"* nonnull %4) #10
  tail call void @_ZdlPv(i8* nonnull %0) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: optsize
declare void @_ZN4llvm3sys9MutexImplC1Eb(%"class.llvm::sys::MutexImpl"*, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind optsize
declare void @_ZN4llvm3sys9MutexImplD1Ev(%"class.llvm::sys::MutexImpl"*) unnamed_addr #6

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind optsize }
attributes #11 = { nounwind }
attributes #12 = { noreturn optsize }
attributes #13 = { builtin nounwind optsize }
attributes #14 = { noreturn nounwind optsize }
attributes #15 = { nounwind optsize readonly }
attributes #16 = { optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
