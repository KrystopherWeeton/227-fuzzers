; ModuleID = '../../v8/src/compiler/backend/frame-elider.cc'
source_filename = "../../v8/src/compiler/backend/frame-elider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::FrameElider" = type { %"class.v8::internal::compiler::InstructionSequence"* }
%"class.v8::internal::compiler::InstructionSequence" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneMap", %"class.std::__1::map.589", %"class.v8::internal::ZoneVector.598", %"class.v8::internal::ZoneVector.559", %"class.v8::internal::ZoneDeque", i32, %"class.v8::internal::ZoneDeque.630", %"class.v8::internal::ZoneVector.643", i32, %"class.v8::internal::ZoneVector.650", %"class.v8::internal::compiler::InstructionBlock"* }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.320", %"class.std::__1::unique_ptr.321", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.327", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.354", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.361", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.371", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.381", %"struct.std::__1::atomic.44", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.415", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.432"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.433", i32, i8, i8, i32, i32, %"class.std::__1::vector.439", %"class.std::__1::vector.439", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.446", i64, %"class.std::__1::unordered_map.447", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.193", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.52", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.506", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.512", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.546", %"class.std::__1::vector.550", %"class.std::__1::vector.550", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.38", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.53", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.57", %"class.std::__1::vector.57", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.70", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::shared_ptr.154", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.155", %"class.std::__1::unique_ptr.181", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.187", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.200", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set", i8, [7 x i8], %"class.std::__1::unordered_map.229", %"class.std::__1::unordered_map.255", %"class.std::__1::unordered_map.229", %"class.std::__1::unordered_map.279", %"class.std::__1::vector.307", i8, %"class.std::__1::unique_ptr.314", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type opaque
%"class.v8::internal::CodeSpace" = type opaque
%"class.v8::internal::OldLargeObjectSpace" = type opaque
%"class.v8::internal::CodeLargeObjectSpace" = type opaque
%"class.v8::internal::NewLargeObjectSpace" = type opaque
%"class.v8::internal::ReadOnlySpace" = type opaque
%"class.v8::internal::OldSpace" = type opaque
%"class.v8::internal::MapSpace" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type opaque
%"class.v8::internal::Space" = type opaque
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.44", %"struct.std::__1::atomic.48", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl.50" }
%"struct.std::__1::__cxx_atomic_impl.50" = type { %"struct.std::__1::__cxx_atomic_base_impl.51" }
%"struct.std::__1::__cxx_atomic_base_impl.51" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.52" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.59" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type opaque
%"class.v8::internal::MinorMarkCompactCollector" = type opaque
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type opaque
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.154" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type opaque
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.155" = type { %"class.std::__1::__hash_table.156" }
%"class.std::__1::__hash_table.156" = type <{ %"class.std::__1::unique_ptr.157", %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.175", [4 x i8] }>
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159", %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::__hash_node_base.160"** }
%"struct.std::__1::__hash_node_base.160" = type { %"struct.std::__1::__hash_node_base.160"* }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.std::__1::__bucket_list_deallocator.162" }
%"class.std::__1::__bucket_list_deallocator.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.std::__1::__hash_node_base.160" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.193", %"class.std::__1::vector.193" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.206" }
%"class.std::__1::__hash_table.206" = type <{ %"class.std::__1::unique_ptr.207", %"class.std::__1::__compressed_pair.217", %"class.std::__1::__compressed_pair.222", %"class.std::__1::__compressed_pair.224", [4 x i8] }>
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209", %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.std::__1::__hash_node_base.210"** }
%"struct.std::__1::__hash_node_base.210" = type { %"struct.std::__1::__hash_node_base.210"* }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.std::__1::__bucket_list_deallocator.212" }
%"class.std::__1::__bucket_list_deallocator.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.std::__1::__hash_node_base.210" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.255" = type { %"class.std::__1::__hash_table.256" }
%"class.std::__1::__hash_table.256" = type <{ %"class.std::__1::unique_ptr.257", %"class.std::__1::__compressed_pair.267", %"class.std::__1::__compressed_pair.272", %"class.std::__1::__compressed_pair.275", [4 x i8] }>
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259", %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"struct.std::__1::__hash_node_base.260"** }
%"struct.std::__1::__hash_node_base.260" = type { %"struct.std::__1::__hash_node_base.260"* }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.std::__1::__bucket_list_deallocator.262" }
%"class.std::__1::__bucket_list_deallocator.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base.260" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.279" = type { %"class.std::__1::__hash_table.280" }
%"class.std::__1::__hash_table.280" = type <{ %"class.std::__1::unique_ptr.281", %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.301", [4 x i8] }>
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283", %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.std::__1::__hash_node_base.284"** }
%"struct.std::__1::__hash_node_base.284" = type { %"struct.std::__1::__hash_node_base.284"* }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.std::__1::__bucket_list_deallocator.286" }
%"class.std::__1::__bucket_list_deallocator.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::__hash_node_base.284" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.307" = type { %"class.std::__1::__vector_base.308" }
%"class.std::__1::__vector_base.308" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.309" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type opaque
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.193" }
%"class.std::__1::shared_ptr.320" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type opaque
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.327" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type opaque
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type opaque
%"class.v8::internal::StubCache" = type opaque
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type opaque
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.340", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.346", %"class.v8::internal::DetachableVector.347", %"class.v8::internal::DetachableVector.346", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.347" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.346" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.328", %"class.std::__1::unique_ptr.334" }
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type opaque
%"class.v8::internal::EternalHandles" = type opaque
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.348" }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.354" = type { %"class.std::__1::__vector_base.355" }
%"class.std::__1::__vector_base.355" = type { i32*, i32*, %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type opaque
%"struct.std::__1::atomic.361" = type { %"struct.std::__1::__atomic_base.362" }
%"struct.std::__1::__atomic_base.362" = type { %"struct.std::__1::__cxx_atomic_impl.363" }
%"struct.std::__1::__cxx_atomic_impl.363" = type { %"struct.std::__1::__cxx_atomic_base_impl.364" }
%"struct.std::__1::__cxx_atomic_base_impl.364" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.371" = type { %"struct.std::__1::__atomic_base.372" }
%"struct.std::__1::__atomic_base.372" = type { %"struct.std::__1::__cxx_atomic_impl.373" }
%"struct.std::__1::__cxx_atomic_impl.373" = type { %"struct.std::__1::__cxx_atomic_base_impl.374" }
%"struct.std::__1::__cxx_atomic_base_impl.374" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.381" = type { %"class.std::__1::__hash_table.382" }
%"class.std::__1::__hash_table.382" = type <{ %"class.std::__1::unique_ptr.383", %"class.std::__1::__compressed_pair.393", %"class.std::__1::__compressed_pair.398", %"class.std::__1::__compressed_pair.401", [4 x i8] }>
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385", %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.386"** }
%"struct.std::__1::__hash_node_base.386" = type { %"struct.std::__1::__hash_node_base.386"* }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.std::__1::__bucket_list_deallocator.388" }
%"class.std::__1::__bucket_list_deallocator.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"struct.std::__1::__hash_node_base.386" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__cxx_atomic_impl.46" }
%"struct.std::__1::__cxx_atomic_impl.46" = type { %"struct.std::__1::__cxx_atomic_base_impl.47" }
%"struct.std::__1::__cxx_atomic_base_impl.47" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.407", %"class.v8::internal::Handle.413", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.414", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.413" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.414" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type opaque
%"class.std::__1::unique_ptr.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type opaque
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.427" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.421"**, %"struct.std::__1::pair.421"**, %"struct.std::__1::pair.421"**, %"class.std::__1::__compressed_pair.422" }
%"struct.std::__1::pair.421" = type opaque
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"struct.std::__1::pair.421"** }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.432" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.366", i32, %"class.v8::Local.0" }
%"class.v8::Local.366" = type { %"class.v8::Promise"* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type opaque
%"class.std::__1::vector.439" = type { %"class.std::__1::__vector_base.440" }
%"class.std::__1::__vector_base.440" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.446" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.447" = type { %"class.std::__1::__hash_table.448" }
%"class.std::__1::__hash_table.448" = type <{ %"class.std::__1::unique_ptr.449", %"class.std::__1::__compressed_pair.459", %"class.std::__1::__compressed_pair.464", %"class.std::__1::__compressed_pair.469", [4 x i8] }>
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451", %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"struct.std::__1::__hash_node_base.452"** }
%"struct.std::__1::__hash_node_base.452" = type { %"struct.std::__1::__hash_node_base.452"* }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.std::__1::__bucket_list_deallocator.454" }
%"class.std::__1::__bucket_list_deallocator.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"struct.std::__1::__hash_node_base.452" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.193" = type { %"class.std::__1::__vector_base.194" }
%"class.std::__1::__vector_base.194" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.52" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.475", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.504", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.475" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.500, %union.anon.502, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.500 = type { i64 }
%union.anon.502 = type { i64 }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.504" = type { %"class.v8::PersistentBase.505" }
%"class.v8::PersistentBase.505" = type { %"class.v8::Context"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.476", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.476" = type { %"class.std::__1::__hash_table.477" }
%"class.std::__1::__hash_table.477" = type <{ %"class.std::__1::unique_ptr.478", %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.493", %"class.std::__1::__compressed_pair.496", [4 x i8] }>
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480", %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"struct.std::__1::__hash_node_base.481"** }
%"struct.std::__1::__hash_node_base.481" = type { %"struct.std::__1::__hash_node_base.481"* }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.std::__1::__bucket_list_deallocator.483" }
%"class.std::__1::__bucket_list_deallocator.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"struct.std::__1::__hash_node_base.481" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type opaque
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.367", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.367" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.520" }
%"class.std::__1::unordered_map.520" = type { %"class.std::__1::__hash_table.521" }
%"class.std::__1::__hash_table.521" = type <{ %"class.std::__1::unique_ptr.522", %"class.std::__1::__compressed_pair.532", %"class.std::__1::__compressed_pair.537", %"class.std::__1::__compressed_pair.540", [4 x i8] }>
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524", %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.std::__1::__hash_node_base.525"** }
%"struct.std::__1::__hash_node_base.525" = type { %"struct.std::__1::__hash_node_base.525"* }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.std::__1::__bucket_list_deallocator.527" }
%"class.std::__1::__bucket_list_deallocator.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"struct.std::__1::__hash_node_base.525" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.546" = type { %"struct.std::__1::__atomic_base.547" }
%"struct.std::__1::__atomic_base.547" = type { %"struct.std::__1::__cxx_atomic_impl.548" }
%"struct.std::__1::__cxx_atomic_impl.548" = type { %"struct.std::__1::__cxx_atomic_base_impl.549" }
%"struct.std::__1::__cxx_atomic_base_impl.549" = type { %"class.std::__1::vector.550"* }
%"class.std::__1::vector.550" = type { %"class.std::__1::__vector_base.551" }
%"class.std::__1::__vector_base.551" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.552" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.557" }
%"class.std::__1::vector.557" = type { %"class.std::__1::__vector_base.558" }
%"class.std::__1::__vector_base.558" = type { %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"**, %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579", %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.v8::internal::compiler::InstructionBlock"** }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.v8::internal::ZoneAllocator.581" }
%"class.v8::internal::ZoneAllocator.581" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.582", %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583", %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.v8::internal::ZoneAllocator.585" }
%"class.v8::internal::ZoneAllocator.585" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::map.589" = type { %"class.std::__1::__tree.590" }
%"class.std::__1::__tree.590" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.591", %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.583", %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"class.v8::internal::ZoneAllocator.593" }
%"class.v8::internal::ZoneAllocator.593" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ZoneVector.598" = type { %"class.std::__1::vector.599" }
%"class.std::__1::vector.599" = type { %"class.std::__1::__vector_base.600" }
%"class.std::__1::__vector_base.600" = type { %"class.v8::internal::compiler::Constant"*, %"class.v8::internal::compiler::Constant"*, %"class.std::__1::__compressed_pair.601" }
%"class.v8::internal::compiler::Constant" = type { i32, i8, i64 }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602", %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.v8::internal::compiler::Constant"* }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"class.v8::internal::ZoneAllocator.604" }
%"class.v8::internal::ZoneAllocator.604" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.559" = type { %"class.std::__1::vector.560" }
%"class.std::__1::vector.560" = type { %"class.std::__1::__vector_base.561" }
%"class.std::__1::__vector_base.561" = type { %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"*, %"class.std::__1::__compressed_pair.562" }
%"class.v8::internal::compiler::RpoNumber" = type { i32 }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563", %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.v8::internal::compiler::RpoNumber"* }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque.605" }
%"class.std::__1::deque.605" = type { %"class.std::__1::__deque_base.606" }
%"class.std::__1::__deque_base.606" = type { %"struct.std::__1::__split_buffer.607", i64, %"class.std::__1::__compressed_pair.626" }
%"struct.std::__1::__split_buffer.607" = type { %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"***, %"class.std::__1::__compressed_pair.622" }
%"class.v8::internal::compiler::Instruction" = type { i32, i32, [2 x %"class.v8::internal::compiler::ParallelMove"*], %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::InstructionBlock"*, [1 x %"class.v8::internal::compiler::InstructionOperand"] }
%"class.v8::internal::compiler::ParallelMove" = type { %"class.v8::internal::ZoneVector.608" }
%"class.v8::internal::ZoneVector.608" = type { %"class.std::__1::vector.609" }
%"class.std::__1::vector.609" = type { %"class.std::__1::__vector_base.610" }
%"class.std::__1::__vector_base.610" = type { %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"**, %"class.std::__1::__compressed_pair.611" }
%"class.v8::internal::compiler::MoveOperands" = type { %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand" }
%"class.v8::internal::compiler::InstructionOperand" = type { i64 }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612", %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.v8::internal::compiler::MoveOperands"** }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.v8::internal::ZoneAllocator.614" }
%"class.v8::internal::ZoneAllocator.614" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::ReferenceMap" = type <{ %"class.v8::internal::ZoneVector.615", i32, [4 x i8] }>
%"class.v8::internal::ZoneVector.615" = type { %"class.std::__1::vector.616" }
%"class.std::__1::vector.616" = type { %"class.std::__1::__vector_base.617" }
%"class.std::__1::__vector_base.617" = type { %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"*, %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619", %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.v8::internal::compiler::InstructionOperand"* }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.v8::internal::ZoneAllocator.621" }
%"class.v8::internal::ZoneAllocator.621" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623", %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.v8::internal::compiler::Instruction"*** }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.625", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.625" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction **>::FreeBlock" = type opaque
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.v8::internal::RecyclingZoneAllocator.628" }
%"class.v8::internal::RecyclingZoneAllocator.628" = type { %"class.v8::internal::ZoneAllocator.629", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.629" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction *>::FreeBlock" = type opaque
%"class.v8::internal::ZoneDeque.630" = type { %"class.std::__1::deque.631" }
%"class.std::__1::deque.631" = type { %"class.std::__1::__deque_base.632" }
%"class.std::__1::__deque_base.632" = type { %"struct.std::__1::__split_buffer.633", i64, %"class.std::__1::__compressed_pair.639" }
%"struct.std::__1::__split_buffer.633" = type { %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"***, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635", %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::compiler::ReferenceMap"*** }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.v8::internal::RecyclingZoneAllocator.637" }
%"class.v8::internal::RecyclingZoneAllocator.637" = type { %"class.v8::internal::ZoneAllocator.638", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.638" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap **>::FreeBlock" = type opaque
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.v8::internal::RecyclingZoneAllocator.641" }
%"class.v8::internal::RecyclingZoneAllocator.641" = type { %"class.v8::internal::ZoneAllocator.642", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.642" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap *>::FreeBlock" = type opaque
%"class.v8::internal::ZoneVector.643" = type { %"class.std::__1::vector.644" }
%"class.std::__1::vector.644" = type { %"class.std::__1::__vector_base.645" }
%"class.std::__1::__vector_base.645" = type { i8*, i8*, %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647", %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.647" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::ZoneAllocator.649" }
%"class.v8::internal::ZoneAllocator.649" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.650" = type { %"class.std::__1::vector.651" }
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.v8::internal::compiler::DeoptimizationEntry"*, %"class.v8::internal::compiler::DeoptimizationEntry"*, %"class.std::__1::__compressed_pair.669" }
%"class.v8::internal::compiler::DeoptimizationEntry" = type { %"class.v8::internal::compiler::FrameStateDescriptor"*, i8, i8, [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }
%"class.v8::internal::compiler::FrameStateDescriptor" = type { i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::compiler::OutputFrameStateCombine", i64, i64, i64, i64, %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::MaybeHandle", %"class.v8::internal::compiler::FrameStateDescriptor"* }
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::compiler::OutputFrameStateCombine" = type { i64 }
%"class.v8::internal::compiler::StateValueList" = type { %"class.v8::internal::ZoneVector.653", %"class.v8::internal::ZoneVector.661" }
%"class.v8::internal::ZoneVector.653" = type { %"class.std::__1::vector.654" }
%"class.std::__1::vector.654" = type { %"class.std::__1::__vector_base.655" }
%"class.std::__1::__vector_base.655" = type { %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.std::__1::__compressed_pair.657" }
%"class.v8::internal::compiler::StateValueDescriptor" = type { i8, %"class.v8::internal::MachineType", %union.anon.656 }
%"class.v8::internal::MachineType" = type { i8, i8 }
%union.anon.656 = type { i64 }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658", %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.v8::internal::compiler::StateValueDescriptor"* }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.v8::internal::ZoneAllocator.660" }
%"class.v8::internal::ZoneAllocator.660" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.661" = type { %"class.std::__1::vector.662" }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"class.v8::internal::compiler::StateValueList"**, %"class.v8::internal::compiler::StateValueList"**, %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665", %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.v8::internal::compiler::StateValueList"** }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.v8::internal::ZoneAllocator.667" }
%"class.v8::internal::ZoneAllocator.667" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"struct.v8::internal::compiler::FeedbackSource" = type <{ %"class.v8::internal::Handle.668", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.v8::internal::Handle.668" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670", %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::compiler::DeoptimizationEntry"* }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::ZoneAllocator.672" }
%"class.v8::internal::ZoneAllocator.672" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::InstructionBlock" = type <{ %"class.v8::internal::ZoneVector.559", %"class.v8::internal::ZoneVector.559", %"class.v8::internal::ZoneVector.565", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", i32, i32, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::ZoneVector.565" = type { %"class.std::__1::vector.566" }
%"class.std::__1::vector.566" = type { %"class.std::__1::__vector_base.567" }
%"class.std::__1::__vector_base.567" = type { %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"**, %"class.std::__1::__compressed_pair.574" }
%"class.v8::internal::compiler::PhiInstruction" = type { i32, %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::ZoneVector.568" }
%"class.v8::internal::ZoneVector.568" = type { %"class.std::__1::vector.569" }
%"class.std::__1::vector.569" = type { %"class.std::__1::__vector_base.570" }
%"class.std::__1::__vector_base.570" = type { i32*, i32*, %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.357", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.v8::internal::ZoneAllocator.573" }
%"class.v8::internal::ZoneAllocator.573" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575", %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.v8::internal::compiler::PhiInstruction"** }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.v8::internal::ZoneAllocator.577" }
%"class.v8::internal::ZoneAllocator.577" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN2v88internal8compiler11FrameEliderC1EPNS1_19InstructionSequenceE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::FrameElider"*, %"class.v8::internal::compiler::InstructionSequence"*), void (%"class.v8::internal::compiler::FrameElider"*, %"class.v8::internal::compiler::InstructionSequence"*)* @_ZN2v88internal8compiler11FrameEliderC2EPNS1_19InstructionSequenceE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler11FrameEliderC2EPNS1_19InstructionSequenceE(%"class.v8::internal::compiler::FrameElider"* nocapture, %"class.v8::internal::compiler::InstructionSequence"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::FrameElider", %"class.v8::internal::compiler::FrameElider"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionSequence"* %1, %"class.v8::internal::compiler::InstructionSequence"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler11FrameElider3RunEv(%"class.v8::internal::compiler::FrameElider"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::FrameElider", %"class.v8::internal::compiler::FrameElider"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %3, i64 0, i32 2
  %5 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %7, %9
  br i1 %10, label %110, label %11

11:                                               ; preds = %1, %59
  %12 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %60, %59 ], [ %7, %1 ]
  %13 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %13, i64 0, i32 14
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %59

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %13, i64 0, i32 8
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %13, i64 0, i32 9
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %19, %21
  br i1 %22, label %23, label %59

23:                                               ; preds = %17
  %24 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %24, i64 0, i32 8, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %24, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %28 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %27, align 8
  %29 = sext i32 %19 to i64
  %30 = sext i32 %21 to i64
  br label %33

31:                                               ; preds = %56
  %32 = icmp eq i64 %57, %30
  br i1 %32, label %59, label %33

33:                                               ; preds = %31, %23
  %34 = phi i64 [ %29, %23 ], [ %57, %31 ]
  %35 = add i64 %34, %26
  %36 = lshr i64 %35, 9
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %28, i64 %36
  %38 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %37, align 8
  %39 = and i64 %35, 511
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %38, i64 %39
  %41 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %41, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 1073741824
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %41, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 511
  %50 = icmp eq i32 %49, 20
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = lshr i32 %48, 14
  %53 = and i32 %52, 7
  %54 = add nsw i32 %53, -3
  %55 = icmp ult i32 %54, 2
  br i1 %55, label %58, label %56

56:                                               ; preds = %51
  %57 = add nsw i64 %34, 1
  switch i32 %49, label %31 [
    i32 28, label %58
    i32 22, label %58
  ]

58:                                               ; preds = %56, %56, %51, %46, %33
  store i8 1, i8* %14, align 8
  br label %59

59:                                               ; preds = %31, %58, %17, %11
  %60 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %12, i64 1
  %61 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %60, %9
  br i1 %61, label %62, label %11

62:                                               ; preds = %59
  %63 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %63, i64 0, i32 2
  %65 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %65, i64 0, i32 0, i32 0, i32 1
  %69 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %68, align 8
  %70 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %67, %69
  br i1 %70, label %110, label %71

71:                                               ; preds = %62, %101
  %72 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %108, %101 ], [ %69, %62 ]
  %73 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %106, %101 ], [ %67, %62 ]
  br label %74

74:                                               ; preds = %71, %74
  %75 = phi i1 [ %79, %74 ], [ false, %71 ]
  %76 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %80, %74 ], [ %73, %71 ]
  %77 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %76, align 8
  %78 = tail call zeroext i1 @_ZN2v88internal8compiler11FrameElider18PropagateIntoBlockEPNS1_16InstructionBlockE(%"class.v8::internal::compiler::FrameElider"* %0, %"class.v8::internal::compiler::InstructionBlock"* %77) #4
  %79 = or i1 %75, %78
  %80 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %76, i64 1
  %81 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %80, %72
  br i1 %81, label %82, label %74

82:                                               ; preds = %74
  br i1 %79, label %101, label %83

83:                                               ; preds = %82
  %84 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %85 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %84, i64 0, i32 2
  %86 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %86, i64 0, i32 0, i32 0, i32 1
  %88 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %87, align 8, !noalias !3
  %89 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %86, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %89, align 8, !noalias !3
  %91 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %88, %90
  br i1 %91, label %110, label %92

92:                                               ; preds = %83, %92
  %93 = phi i1 [ %98, %92 ], [ false, %83 ]
  %94 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %95, %92 ], [ %88, %83 ]
  %95 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %94, i64 -1
  %96 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %95, align 8
  %97 = tail call zeroext i1 @_ZN2v88internal8compiler11FrameElider18PropagateIntoBlockEPNS1_16InstructionBlockE(%"class.v8::internal::compiler::FrameElider"* %0, %"class.v8::internal::compiler::InstructionBlock"* %96) #4
  %98 = or i1 %93, %97
  %99 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %95, %90
  br i1 %99, label %100, label %92

100:                                              ; preds = %92
  br i1 %98, label %101, label %110

101:                                              ; preds = %100, %82
  %102 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %102, i64 0, i32 2
  %104 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %104, i64 0, i32 0, i32 0, i32 1
  %108 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %107, align 8
  %109 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %106, %108
  br i1 %109, label %110, label %71

110:                                              ; preds = %100, %83, %101, %1, %62
  tail call void @_ZN2v88internal8compiler11FrameElider18MarkDeConstructionEv(%"class.v8::internal::compiler::FrameElider"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler11FrameElider10MarkBlocksEv(%"class.v8::internal::compiler::FrameElider"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::FrameElider", %"class.v8::internal::compiler::FrameElider"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %3, i64 0, i32 2
  %5 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %60, %1
  ret void

12:                                               ; preds = %1, %60
  %13 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %61, %60 ], [ %7, %1 ]
  %14 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 14
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %60

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 8
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 9
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %20, %22
  br i1 %23, label %24, label %60

24:                                               ; preds = %18
  %25 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %25, i64 0, i32 8, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %25, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %29 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %28, align 8
  %30 = sext i32 %20 to i64
  %31 = sext i32 %22 to i64
  br label %34

32:                                               ; preds = %57
  %33 = icmp slt i64 %58, %31
  br i1 %33, label %34, label %60

34:                                               ; preds = %24, %32
  %35 = phi i64 [ %30, %24 ], [ %58, %32 ]
  %36 = add i64 %27, %35
  %37 = lshr i64 %36, 9
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %29, i64 %37
  %39 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %38, align 8
  %40 = and i64 %36, 511
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %39, i64 %40
  %42 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %42, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 1073741824
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %42, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 511
  %51 = icmp eq i32 %50, 20
  br i1 %51, label %59, label %52

52:                                               ; preds = %47
  %53 = lshr i32 %49, 14
  %54 = and i32 %53, 7
  %55 = add nsw i32 %54, -3
  %56 = icmp ult i32 %55, 2
  br i1 %56, label %59, label %57

57:                                               ; preds = %52
  %58 = add nsw i64 %35, 1
  switch i32 %50, label %32 [
    i32 28, label %59
    i32 22, label %59
  ]

59:                                               ; preds = %57, %57, %52, %34, %47
  store i8 1, i8* %15, align 8
  br label %60

60:                                               ; preds = %32, %18, %12, %59
  %61 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %13, i64 1
  %62 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %61, %9
  br i1 %62, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler11FrameElider14PropagateMarksEv(%"class.v8::internal::compiler::FrameElider"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::FrameElider", %"class.v8::internal::compiler::FrameElider"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %3, i64 0, i32 2
  %5 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %7, %9
  br i1 %10, label %50, label %11

11:                                               ; preds = %1, %41
  %12 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %48, %41 ], [ %9, %1 ]
  %13 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %46, %41 ], [ %7, %1 ]
  br label %14

14:                                               ; preds = %11, %14
  %15 = phi i1 [ %19, %14 ], [ false, %11 ]
  %16 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %20, %14 ], [ %13, %11 ]
  %17 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %16, align 8
  %18 = tail call zeroext i1 @_ZN2v88internal8compiler11FrameElider18PropagateIntoBlockEPNS1_16InstructionBlockE(%"class.v8::internal::compiler::FrameElider"* %0, %"class.v8::internal::compiler::InstructionBlock"* %17) #4
  %19 = or i1 %15, %18
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %16, i64 1
  %21 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %20, %12
  br i1 %21, label %22, label %14

22:                                               ; preds = %14
  br i1 %19, label %41, label %23

23:                                               ; preds = %22
  %24 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %24, i64 0, i32 2
  %26 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %26, i64 0, i32 0, i32 0, i32 1
  %28 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %27, align 8, !noalias !6
  %29 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %26, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %29, align 8, !noalias !6
  %31 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %28, %30
  br i1 %31, label %50, label %32

32:                                               ; preds = %23, %32
  %33 = phi i1 [ %38, %32 ], [ false, %23 ]
  %34 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %35, %32 ], [ %28, %23 ]
  %35 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %34, i64 -1
  %36 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %35, align 8
  %37 = tail call zeroext i1 @_ZN2v88internal8compiler11FrameElider18PropagateIntoBlockEPNS1_16InstructionBlockE(%"class.v8::internal::compiler::FrameElider"* %0, %"class.v8::internal::compiler::InstructionBlock"* %36) #4
  %38 = or i1 %33, %37
  %39 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %35, %30
  br i1 %39, label %40, label %32

40:                                               ; preds = %32
  br i1 %38, label %41, label %50

41:                                               ; preds = %22, %40
  %42 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %42, i64 0, i32 2
  %44 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %44, i64 0, i32 0, i32 0, i32 1
  %48 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %47, align 8
  %49 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %46, %48
  br i1 %49, label %50, label %11

50:                                               ; preds = %40, %23, %41, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler11FrameElider18MarkDeConstructionEv(%"class.v8::internal::compiler::FrameElider"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::FrameElider", %"class.v8::internal::compiler::FrameElider"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %3, i64 0, i32 2
  %5 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %125, %1
  ret void

12:                                               ; preds = %1, %125
  %13 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %126, %125 ], [ %7, %1 ]
  %14 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 14
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %88, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 1, i32 0, i32 0, i32 1
  %22 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %21, align 8
  %23 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %20, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 15
  store i8 1, i8* %25, align 1
  br label %26

26:                                               ; preds = %24, %18
  %27 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %29, align 8
  %31 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %28, %30
  br i1 %31, label %125, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 9
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 16
  br label %35

35:                                               ; preds = %32, %85
  %36 = phi %"class.v8::internal::compiler::RpoNumber"* [ %28, %32 ], [ %86, %85 ]
  %37 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %39, i64 0, i32 2
  %41 = bitcast %"class.v8::internal::ZoneVector"** %40 to %"class.std::__1::vector.557"**
  %42 = load %"class.std::__1::vector.557"*, %"class.std::__1::vector.557"** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %"class.std::__1::vector.557", %"class.std::__1::vector.557"* %42, i64 0, i32 0, i32 1
  %45 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.557"* %42 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = ashr exact i64 %49, 3
  %51 = icmp ugt i64 %50, %43
  br i1 %51, label %54, label %52

52:                                               ; preds = %35
  %53 = bitcast %"class.std::__1::vector.557"* %42 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %53) #5
  unreachable

54:                                               ; preds = %35
  %55 = inttoptr i64 %48 to %"class.v8::internal::compiler::InstructionBlock"**
  %56 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %55, i64 %43
  %57 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %57, i64 0, i32 14
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %85

61:                                               ; preds = %54
  %62 = load i32, i32* %33, align 8
  %63 = add nsw i32 %62, -1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %39, i64 0, i32 8, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, %64
  %68 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %39, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %69 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %68, align 8
  %70 = lshr i64 %67, 9
  %71 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %69, i64 %70
  %72 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %71, align 8
  %73 = and i64 %67, 511
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %72, i64 %73
  %75 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, 511
  switch i32 %78, label %79 [
    i32 20, label %85
    i32 19, label %85
    i32 2, label %85
    i32 1, label %85
    i32 0, label %85
  ]

79:                                               ; preds = %61
  %80 = lshr i32 %77, 14
  %81 = and i32 %80, 7
  %82 = add nsw i32 %81, -3
  %83 = icmp ult i32 %82, 2
  br i1 %83, label %85, label %84

84:                                               ; preds = %79
  store i8 1, i8* %34, align 2
  br label %85

85:                                               ; preds = %54, %61, %61, %61, %61, %61, %84, %79
  %86 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %36, i64 1
  %87 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %86, %30
  br i1 %87, label %125, label %35

88:                                               ; preds = %12
  %89 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 0, i32 0, i32 0, i32 1
  %92 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %91, align 8
  %93 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %90, %92
  br i1 %93, label %125, label %94

94:                                               ; preds = %88, %122
  %95 = phi %"class.v8::internal::compiler::RpoNumber"* [ %123, %122 ], [ %90, %88 ]
  %96 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %95, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %98, i64 0, i32 2
  %100 = bitcast %"class.v8::internal::ZoneVector"** %99 to %"class.std::__1::vector.557"**
  %101 = load %"class.std::__1::vector.557"*, %"class.std::__1::vector.557"** %100, align 8
  %102 = sext i32 %97 to i64
  %103 = getelementptr inbounds %"class.std::__1::vector.557", %"class.std::__1::vector.557"* %101, i64 0, i32 0, i32 1
  %104 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.std::__1::vector.557"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %105, %107
  %109 = ashr exact i64 %108, 3
  %110 = icmp ugt i64 %109, %102
  br i1 %110, label %113, label %111

111:                                              ; preds = %94
  %112 = bitcast %"class.std::__1::vector.557"* %101 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %112) #5
  unreachable

113:                                              ; preds = %94
  %114 = inttoptr i64 %107 to %"class.v8::internal::compiler::InstructionBlock"**
  %115 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %114, i64 %102
  %116 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %115, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %116, i64 0, i32 14
  %118 = load i8, i8* %117, align 8, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %116, i64 0, i32 15
  store i8 1, i8* %121, align 1
  br label %122

122:                                              ; preds = %113, %120
  %123 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %95, i64 1
  %124 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %123, %92
  br i1 %124, label %125, label %94

125:                                              ; preds = %85, %122, %26, %88
  %126 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %13, i64 1
  %127 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %126, %9
  br i1 %127, label %11, label %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(32) %"class.v8::internal::ZoneVector"* @_ZNK2v88internal8compiler11FrameElider18instruction_blocksEv(%"class.v8::internal::compiler::FrameElider"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::FrameElider", %"class.v8::internal::compiler::FrameElider"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %3, i64 0, i32 2
  %5 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %4, align 8
  ret %"class.v8::internal::ZoneVector"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::Instruction"* @_ZNK2v88internal8compiler11FrameElider13InstructionAtEi(%"class.v8::internal::compiler::FrameElider"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::FrameElider", %"class.v8::internal::compiler::FrameElider"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %4, i64 0, i32 8, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %5
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %4, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %10 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %9, align 8
  %11 = lshr i64 %8, 9
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %10, i64 %11
  %13 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %12, align 8
  %14 = and i64 %8, 511
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %13, i64 %14
  %16 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %15, align 8
  ret %"class.v8::internal::compiler::Instruction"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler11FrameElider16PropagateInOrderEv(%"class.v8::internal::compiler::FrameElider"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::FrameElider", %"class.v8::internal::compiler::FrameElider"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %3, i64 0, i32 2
  %5 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %7, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %13, %1
  %12 = phi i1 [ false, %1 ], [ %18, %13 ]
  ret i1 %12

13:                                               ; preds = %1, %13
  %14 = phi i1 [ %18, %13 ], [ false, %1 ]
  %15 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %19, %13 ], [ %7, %1 ]
  %16 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %15, align 8
  %17 = tail call zeroext i1 @_ZN2v88internal8compiler11FrameElider18PropagateIntoBlockEPNS1_16InstructionBlockE(%"class.v8::internal::compiler::FrameElider"* %0, %"class.v8::internal::compiler::InstructionBlock"* %16)
  %18 = or i1 %14, %17
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %15, i64 1
  %20 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %19, %9
  br i1 %20, label %11, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler11FrameElider17PropagateReversedEv(%"class.v8::internal::compiler::FrameElider"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::FrameElider", %"class.v8::internal::compiler::FrameElider"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %3, i64 0, i32 2
  %5 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %6, align 8, !noalias !9
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %8, align 8, !noalias !9
  %10 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %7, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %13, %1
  %12 = phi i1 [ false, %1 ], [ %19, %13 ]
  ret i1 %12

13:                                               ; preds = %1, %13
  %14 = phi i1 [ %19, %13 ], [ false, %1 ]
  %15 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %16, %13 ], [ %7, %1 ]
  %16 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %15, i64 -1
  %17 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %16, align 8
  %18 = tail call zeroext i1 @_ZN2v88internal8compiler11FrameElider18PropagateIntoBlockEPNS1_16InstructionBlockE(%"class.v8::internal::compiler::FrameElider"* %0, %"class.v8::internal::compiler::InstructionBlock"* %17)
  %19 = or i1 %14, %18
  %20 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %16, %9
  br i1 %20, label %11, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler11FrameElider18InstructionBlockAtENS1_9RpoNumberE(%"class.v8::internal::compiler::FrameElider"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::FrameElider", %"class.v8::internal::compiler::FrameElider"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %4, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::ZoneVector"** %5 to %"class.std::__1::vector.557"**
  %7 = load %"class.std::__1::vector.557"*, %"class.std::__1::vector.557"** %6, align 8
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.557", %"class.std::__1::vector.557"* %7, i64 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.557"* %7 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ugt i64 %15, %8
  br i1 %16, label %19, label %17

17:                                               ; preds = %2
  %18 = bitcast %"class.std::__1::vector.557"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %18) #5
  unreachable

19:                                               ; preds = %2
  %20 = inttoptr i64 %13 to %"class.v8::internal::compiler::InstructionBlock"**
  %21 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %20, i64 %8
  %22 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %21, align 8
  ret %"class.v8::internal::compiler::InstructionBlock"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler11FrameElider18PropagateIntoBlockEPNS1_16InstructionBlockE(%"class.v8::internal::compiler::FrameElider"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 14
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %130

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %9, align 8
  %11 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %8, %10
  %12 = ptrtoint %"class.v8::internal::compiler::RpoNumber"* %10 to i64
  %13 = ptrtoint %"class.v8::internal::compiler::RpoNumber"* %8 to i64
  br i1 %11, label %130, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %17, align 8
  %19 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %16, %18
  br i1 %19, label %60, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.v8::internal::compiler::FrameElider", %"class.v8::internal::compiler::FrameElider"* %0, i64 0, i32 0
  %22 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %22, i64 0, i32 2
  %24 = bitcast %"class.v8::internal::ZoneVector"** %23 to %"class.std::__1::vector.557"**
  %25 = load %"class.std::__1::vector.557"*, %"class.std::__1::vector.557"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.557", %"class.std::__1::vector.557"* %25, i64 0, i32 0, i32 1
  %27 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.557"* %25 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 3
  %33 = inttoptr i64 %30 to %"class.v8::internal::compiler::InstructionBlock"**
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 10
  br label %35

35:                                               ; preds = %20, %56
  %36 = phi %"class.v8::internal::compiler::RpoNumber"* [ %16, %20 ], [ %57, %56 ]
  %37 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = icmp ugt i64 %32, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.std::__1::vector.557"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %42) #5
  unreachable

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %33, i64 %39
  %45 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %45, i64 0, i32 14
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %45, i64 0, i32 10
  %51 = load i8, i8* %50, align 4, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = load i8, i8* %34, align 4, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %53, %43
  %57 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %36, i64 1
  %58 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %57, %18
  br i1 %58, label %60, label %35

59:                                               ; preds = %53, %49
  store i8 1, i8* %3, align 8
  br label %130

60:                                               ; preds = %56, %14
  %61 = sub i64 %12, %13
  %62 = icmp eq i64 %61, 4
  br i1 %62, label %77, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.v8::internal::compiler::FrameElider", %"class.v8::internal::compiler::FrameElider"* %0, i64 0, i32 0
  %65 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %65, i64 0, i32 2
  %67 = bitcast %"class.v8::internal::ZoneVector"** %66 to %"class.std::__1::vector.557"**
  %68 = load %"class.std::__1::vector.557"*, %"class.std::__1::vector.557"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector.557", %"class.std::__1::vector.557"* %68, i64 0, i32 0, i32 1
  %70 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::vector.557"* %68 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %71, %73
  %75 = ashr exact i64 %74, 3
  %76 = inttoptr i64 %73 to %"class.v8::internal::compiler::InstructionBlock"**
  br label %102

77:                                               ; preds = %60
  %78 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %8, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"class.v8::internal::compiler::FrameElider", %"class.v8::internal::compiler::FrameElider"* %0, i64 0, i32 0
  %81 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %81, i64 0, i32 2
  %83 = bitcast %"class.v8::internal::ZoneVector"** %82 to %"class.std::__1::vector.557"**
  %84 = load %"class.std::__1::vector.557"*, %"class.std::__1::vector.557"** %83, align 8
  %85 = sext i32 %79 to i64
  %86 = getelementptr inbounds %"class.std::__1::vector.557", %"class.std::__1::vector.557"* %84, i64 0, i32 0, i32 1
  %87 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.std::__1::vector.557"* %84 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %88, %90
  %92 = ashr exact i64 %91, 3
  %93 = icmp ugt i64 %92, %85
  br i1 %93, label %96, label %94

94:                                               ; preds = %77
  %95 = bitcast %"class.std::__1::vector.557"* %84 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %95) #5
  unreachable

96:                                               ; preds = %77
  %97 = inttoptr i64 %90 to %"class.v8::internal::compiler::InstructionBlock"**
  %98 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %97, i64 %85
  %99 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %99, i64 0, i32 14
  %101 = load i8, i8* %100, align 8, !range !2
  br label %125

102:                                              ; preds = %63, %121
  %103 = phi i8 [ 0, %63 ], [ %122, %121 ]
  %104 = phi %"class.v8::internal::compiler::RpoNumber"* [ %8, %63 ], [ %123, %121 ]
  %105 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %104, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = sext i32 %106 to i64
  %108 = icmp ugt i64 %75, %107
  br i1 %108, label %111, label %109

109:                                              ; preds = %102
  %110 = bitcast %"class.std::__1::vector.557"* %68 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %110) #5
  unreachable

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %76, i64 %107
  %113 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %113, i64 0, i32 10
  %115 = load i8, i8* %114, align 4, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %121

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %113, i64 0, i32 14
  %119 = load i8, i8* %118, align 8, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %130, label %121

121:                                              ; preds = %117, %111
  %122 = phi i8 [ %103, %111 ], [ 1, %117 ]
  %123 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %104, i64 1
  %124 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %123, %10
  br i1 %124, label %125, label %102

125:                                              ; preds = %121, %96
  %126 = phi i8 [ %101, %96 ], [ %122, %121 ]
  %127 = and i8 %126, 1
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %130, label %129

129:                                              ; preds = %125
  store i8 1, i8* %3, align 8
  br label %130

130:                                              ; preds = %117, %2, %59, %129, %125, %6
  %131 = phi i1 [ true, %59 ], [ false, %2 ], [ false, %6 ], [ true, %129 ], [ false, %125 ], [ false, %117 ]
  ret i1 %131
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN2v84base8ReversedIKNS_8internal10ZoneVectorIPNS2_8compiler16InstructionBlockEEEEEDaRT_: argument 0"}
!5 = distinct !{!5, !"_ZN2v84base8ReversedIKNS_8internal10ZoneVectorIPNS2_8compiler16InstructionBlockEEEEEDaRT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN2v84base8ReversedIKNS_8internal10ZoneVectorIPNS2_8compiler16InstructionBlockEEEEEDaRT_: argument 0"}
!8 = distinct !{!8, !"_ZN2v84base8ReversedIKNS_8internal10ZoneVectorIPNS2_8compiler16InstructionBlockEEEEEDaRT_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN2v84base8ReversedIKNS_8internal10ZoneVectorIPNS2_8compiler16InstructionBlockEEEEEDaRT_: argument 0"}
!11 = distinct !{!11, !"_ZN2v84base8ReversedIKNS_8internal10ZoneVectorIPNS2_8compiler16InstructionBlockEEEEEDaRT_"}
