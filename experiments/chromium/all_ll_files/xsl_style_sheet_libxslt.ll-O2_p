; ModuleID = '../../third_party/blink/renderer/core/xml/xsl_style_sheet_libxslt.cc'
source_filename = "../../third_party/blink/renderer/core/xml/xsl_style_sheet_libxslt.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.url::Component" = type { i32, i32 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.base::TimeDelta" = type { i64 }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.575 }
%union.anon.575 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.569 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.567", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.569 }
%"class.WTF::RefCounted.567" = type { %"class.base::RefCounted.568" }
%"class.base::RefCounted.568" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1218" }
%"class.WTF::HashMap.1218" = type { %"class.WTF::HashTable.1219" }
%"class.WTF::HashTable.1219" = type <{ %"struct.WTF::KeyValuePair.1222"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1222" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1223 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1224", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.1233, i8, %"class.url::Origin" }
%"class.base::RefCounted.1224" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1225" }
%"class.std::__1::vector.1225" = type { %"class.std::__1::__vector_base.1226" }
%"class.std::__1::__vector_base.1226" = type { %"class.std::__1::unique_ptr.1227"*, %"class.std::__1::unique_ptr.1227"*, %"class.std::__1::__compressed_pair.1228" }
%"class.std::__1::unique_ptr.1227" = type { %"class.std::__1::__compressed_pair.1541" }
%"class.std::__1::__compressed_pair.1541" = type { %"struct.std::__1::__compressed_pair_elem.1542" }
%"struct.std::__1::__compressed_pair_elem.1542" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.1229" }
%"struct.std::__1::__compressed_pair_elem.1229" = type { %"class.std::__1::unique_ptr.1227"* }
%class.scoped_refptr.1233 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1234", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1234" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.83" }
%"struct.std::__1::atomic.83" = type { %"struct.std::__1::__atomic_base.84" }
%"struct.std::__1::__atomic_base.84" = type { %"struct.std::__1::__atomic_base.85" }
%"struct.std::__1::__atomic_base.85" = type { %"struct.std::__1::__cxx_atomic_impl.86" }
%"struct.std::__1::__cxx_atomic_impl.86" = type { %"struct.std::__1::__cxx_atomic_base_impl.87" }
%"struct.std::__1::__cxx_atomic_base_impl.87" = type { i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.WTF::Vector.1245" = type { %"class.WTF::VectorBuffer.1246" }
%"class.WTF::VectorBuffer.1246" = type { %"class.WTF::VectorBufferBase.1247" }
%"class.WTF::VectorBufferBase.1247" = type { %class.scoped_refptr.569*, i32, i32 }
%"class.WTF::Vector.661" = type { %"class.WTF::VectorBuffer.662" }
%"class.WTF::VectorBuffer.662" = type { %"class.WTF::VectorBufferBase.663" }
%"class.WTF::VectorBufferBase.663" = type { %"class.WTF::String"*, i32, i32 }
%union.anon.689 = type { %"class.base::TimeDelta" }
%union.anon.1254 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%union.anon.799 = type { %"class.base::UnguessableToken" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.1260 = type { %"class.base::RefCountedData.1261"* }
%"class.base::RefCountedData.1261" = type { %"class.base::RefCountedThreadSafe.1546", %"class.base::internal::flat_tree.1547" }
%"class.base::RefCountedThreadSafe.1546" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.1547" = type { %"class.std::__1::vector.1548" }
%"class.std::__1::vector.1548" = type { %"class.std::__1::__vector_base.1549" }
%"class.std::__1::__vector_base.1549" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1550" }
%"class.std::__1::__compressed_pair.1550" = type { %"struct.std::__1::__compressed_pair_elem.1551" }
%"struct.std::__1::__compressed_pair_elem.1551" = type { i32* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.1262, %"class.mojo::PendingRemote.1263" }
%class.scoped_refptr.1262 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.1263" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.1210" = type { %"class.WTF::HashTable.1211" }
%"class.WTF::HashTable.1211" = type <{ %"struct.std::__1::pair.1214"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1214" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.116 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.117", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.117" = type { %"class.base::RefCounted.118" }
%"class.base::RefCounted.118" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.121" }
%"class.blink::HeapHashMap.121" = type { %"class.WTF::HashMap.124" }
%"class.WTF::HashMap.124" = type { %"class.WTF::HashTable.125" }
%"class.WTF::HashTable.125" = type <{ %"struct.WTF::KeyValuePair.127"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.127" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.129", i32, [4 x i8], %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.265", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.281", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.293", %"class.std::__1::unique_ptr.299", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.306", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.245", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.165" = type { %"struct.std::__1::__atomic_base.166" }
%"struct.std::__1::__atomic_base.166" = type { %"struct.std::__1::__atomic_base.167" }
%"struct.std::__1::__atomic_base.167" = type { %"struct.std::__1::__cxx_atomic_impl.168" }
%"struct.std::__1::__cxx_atomic_impl.168" = type { %"struct.std::__1::__cxx_atomic_base_impl.169" }
%"struct.std::__1::__cxx_atomic_base_impl.169" = type { i64 }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::Worklist.176"* }
%"class.blink::Worklist.176" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::Worklist.183"* }
%"class.blink::Worklist.183" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::Worklist.190"* }
%"class.blink::Worklist.190" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::Worklist.197"* }
%"class.blink::Worklist.197" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::Worklist.204"* }
%"class.blink::Worklist.204" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::Worklist.211"* }
%"class.blink::Worklist.211" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::Worklist.218"* }
%"class.blink::Worklist.218" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.225", %"class.std::__1::__compressed_pair.232", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.239", [4 x i8] }>
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227", %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { i64 }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { float }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.248", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.257" }
%"class.WTF::Vector.257" = type { %"class.WTF::VectorBuffer.258" }
%"class.WTF::VectorBuffer.258" = type { %"class.WTF::VectorBufferBase.259" }
%"class.WTF::VectorBufferBase.259" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.273" }
%"class.WTF::VectorBuffer.273" = type { %"class.WTF::VectorBufferBase.274" }
%"class.WTF::VectorBufferBase.274" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.287" }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.176"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.183"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.190"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.197"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.204"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.537" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.305 }
%class.scoped_refptr.305 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.306" = type { %"struct.std::__1::__atomic_base.307" }
%"struct.std::__1::__atomic_base.307" = type { %"struct.std::__1::__cxx_atomic_impl.308" }
%"struct.std::__1::__cxx_atomic_impl.308" = type { %"struct.std::__1::__cxx_atomic_base_impl.309" }
%"struct.std::__1::__cxx_atomic_base_impl.309" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.1215 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.1216 = type { %"class.base::RefCountedData.1217"* }
%"class.base::RefCountedData.1217" = type opaque
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.83" }
%"class.blink::XSLStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member", %"class.WTF::String", %"class.blink::KURL", i8, %"class.blink::HeapVector", i8, i8, %struct._xmlDoc*, i8, i8, %"class.blink::Member.4", %"class.blink::Member.6" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.8", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.10" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.14", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.16", %"class.blink::Member.16", %"class.blink::Member.52", %"class.blink::Member.54", %"class.blink::Member.56", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.61", %"class.blink::HeapVector.63" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.23" }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.27", i32, %"class.blink::HeapVector.45" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.30" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.29 }
%class.scoped_refptr.29 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.34", %"class.blink::Member.36", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.34" = type { %"class.WTF::SingleThreadedBitField.35" }
%"class.WTF::SingleThreadedBitField.35" = type { i32 }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.38 }
%class.scoped_refptr.38 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.39", %"class.WTF::AtomicString", %"class.WTF::Vector.41" }
%"class.WTF::RefCounted.39" = type { %"class.base::RefCounted.40" }
%"class.base::RefCounted.40" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43", [32 x i8] }
%"class.WTF::VectorBufferBase.43" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector.45" = type { %"class.WTF::Vector.48" }
%"class.WTF::Vector.48" = type { %"class.WTF::VectorBuffer.49" }
%"class.WTF::VectorBuffer.49" = type { %"class.WTF::VectorBufferBase.50" }
%"class.WTF::VectorBufferBase.50" = type { %"class.blink::Member.27"*, i32, i32 }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.58" }
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::HeapHashMap.60"* }
%"class.blink::HeapHashMap.60" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.63" = type { %"class.WTF::Vector.66" }
%"class.WTF::Vector.66" = type { %"class.WTF::VectorBuffer.67" }
%"class.WTF::VectorBuffer.67" = type { %"class.WTF::VectorBufferBase.68" }
%"class.WTF::VectorBufferBase.68" = type { %"class.blink::Member.69"*, i32, i32 }
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.4"*, i32, i32 }
%struct._xmlDoc = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i32, i32, %struct._xmlDtd*, %struct._xmlDtd*, %struct._xmlNs*, i8*, i8*, i8*, i8*, i8*, i32, %struct._xmlDict*, i8*, i32, i32 }
%struct._xmlNode = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNs*, i8*, %struct._xmlAttr*, %struct._xmlNs*, i8*, i16, i16 }
%struct._xmlAttr = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlAttr*, %struct._xmlAttr*, %struct._xmlDoc*, %struct._xmlNs*, i32, i8* }
%struct._xmlDtd = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct._xmlNs = type { %struct._xmlNs*, i32, i8*, i8*, i8*, %struct._xmlDoc* }
%struct._xmlDict = type opaque
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::XSLStyleSheet"* }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.79", %"class.WTF::Vector.79", i8, i32, %"class.blink::Member.90", %"class.blink::Member.92", %"class.blink::Member.94", %"class.blink::Member.96", %"class.blink::Member.98", %"class.blink::Member.100", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.102", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.108", %"class.blink::Member.110", %"class.blink::Member.69", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.113", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.45", %"class.blink::Member.27", %"class.blink::Member.322", %"class.blink::Member.27", %"class.blink::Member.27", %"class.blink::Member.27", %"class.blink::UserActionElementSet", %"class.blink::Member.331", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.338", i16, i8, %"class.blink::Member.345", %"class.blink::Member.347", %"class.blink::Member.349", %"class.blink::Member.351", %"class.blink::TextLinkColors", %"class.blink::Member.353", i8, [7 x i8], %"class.blink::HeapHashMap.355", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.27", %"class.WTF::Vector.362", %"class.blink::Member.367", %"class.blink::Member.369", i8, %"class.blink::Member.27", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.371", %"class.blink::HeapVector.373", %"class.std::__1::unique_ptr.381", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.387", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.400", %"class.WTF::Vector.402", i8, i8, %"class.std::__1::unique_ptr.407", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.45", %"class.blink::HeapVector.413", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.421", i8, i32, %"class.blink::Member.423", %"class.blink::Member.425", %"class.blink::Member.427", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.429", %"class.WTF::HashMap.431", %"class.blink::Member.436", %"class.blink::Member.438", %"class.blink::Member.440", %"class.blink::Member.442", %"class.blink::Member.6", %"class.blink::Member.6", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.444", i8, i32, %"class.blink::Member.451", %"class.blink::Member.453", i32, %"class.blink::Member.455", %"class.blink::Member.457", %"class.blink::Member.459", %"class.std::__1::unique_ptr.461", i64, %"class.std::__1::unique_ptr.467", i32, i32, %"class.blink::Member.473", %"class.blink::Member.475", %"class.blink::Member.477", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.479", %"class.WTF::Vector.481", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.486", %"class.blink::Member.493", %"class.std::__1::unique_ptr.495", %"class.blink::Member.501", i8, i8, %"class.WTF::String", %"class.blink::Member.503", i8, [7 x i8], %"class.blink::HeapHashMap.505", %"class.blink::HeapObserverSet", %"class.blink::Member.519", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.521", i32, i8, i8, %"class.blink::WeakMember.523", %"class.blink::Member.524" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.72" }
%"class.blink::HeapHashMap.72" = type { %"class.WTF::HashMap.75" }
%"class.WTF::HashMap.75" = type { %"class.WTF::HashTable.76" }
%"class.WTF::HashTable.76" = type <{ %"struct.WTF::KeyValuePair.78"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.78" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81" }
%"class.WTF::VectorBufferBase.81" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.82 }
%class.scoped_refptr.82 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.542", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.610", i32, i8, [3 x i8], %"class.blink::HeapVector.612", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.620", %"class.blink::Member.622", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.631", %"class.blink::Member.759", %"class.blink::Member.761", i8, [7 x i8] }>
%"class.blink::Supplementable.542" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.543" }
%"class.blink::HeapHashMap.543" = type { %"class.WTF::HashMap.546" }
%"class.WTF::HashMap.546" = type { %"class.WTF::HashTable.547" }
%"class.WTF::HashTable.547" = type <{ %"struct.WTF::KeyValuePair.549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.549" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.558" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.550" }
%"class.blink::HeapObserverSet.550" = type { i32, [4 x i8], %"class.blink::HeapHashSet.551" }
%"class.blink::HeapHashSet.551" = type { %"class.WTF::HashSet.554" }
%"class.WTF::HashSet.554" = type { %"class.WTF::HashTable.555" }
%"class.WTF::HashTable.555" = type <{ %"class.blink::WeakMember.557"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.557" = type opaque
%"class.blink::Supplementable.558" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.559" }
%"class.blink::HeapHashMap.559" = type { %"class.WTF::HashMap.562" }
%"class.WTF::HashMap.562" = type { %"class.WTF::HashTable.563" }
%"class.WTF::HashTable.563" = type <{ %"struct.WTF::KeyValuePair.565"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.565" = type { i8*, %"class.blink::Member.1384" }
%"class.blink::Member.1384" = type { %"class.blink::MemberBase.1385" }
%"class.blink::MemberBase.1385" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1386" }
%"class.blink::Member.1386" = type { %"class.blink::MemberBase.1387" }
%"class.blink::MemberBase.1387" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.566, %"class.std::__1::unique_ptr.570", %"class.std::__1::unique_ptr.570", %"class.std::__1::unique_ptr.600", %"class.std::__1::unique_ptr.600", %"class.blink::Member.92", i32, [4 x i8], %"class.WTF::HashSet.606", i32, i32 }
%class.scoped_refptr.566 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.587", %"class.std::__1::map.596"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.579", %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.std::__1::map.587" = type { %"class.std::__1::__tree.588" }
%"class.std::__1::__tree.588" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.589", %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.std::__1::map.596" = type opaque
%"class.std::__1::unique_ptr.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.606" = type { %"class.WTF::HashTable.607" }
%"class.WTF::HashTable.607" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.610" = type { %"class.blink::MemberBase.611" }
%"class.blink::MemberBase.611" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.612" = type { %"class.WTF::Vector.615" }
%"class.WTF::Vector.615" = type { %"class.WTF::VectorBuffer.616" }
%"class.WTF::VectorBuffer.616" = type { %"class.WTF::VectorBufferBase.617" }
%"class.WTF::VectorBufferBase.617" = type { %"class.blink::Member.618"*, i32, i32 }
%"class.blink::Member.618" = type opaque
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.624", i32, i32 }
%"class.blink::HeapHashMap.624" = type { %"class.WTF::HashMap.627" }
%"class.WTF::HashMap.627" = type { %"class.WTF::HashTable.628" }
%"class.WTF::HashTable.628" = type <{ %"struct.WTF::KeyValuePair.630"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.630" = type opaque
%"class.std::__1::unique_ptr.631" = type { %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.634" }
%"class.std::__1::unique_ptr.634" = type { %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.637" }
%"class.WTF::Vector.637" = type { %"class.WTF::VectorBuffer.638" }
%"class.WTF::VectorBuffer.638" = type { %"class.WTF::VectorBufferBase.639" }
%"class.WTF::VectorBufferBase.639" = type { %"class.mojo::StructPtr.640"*, i32, i32 }
%"class.mojo::StructPtr.640" = type { %"class.std::__1::unique_ptr.641" }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.644", %"class.WTF::HashMap.651", %"class.WTF::HashMap.656", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.661", i32, %"class.mojo::StructPtr.666", %"class.WTF::Vector.661" }
%"class.mojo::StructPtr.644" = type { %"class.std::__1::unique_ptr.645" }
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.651" = type { %"class.WTF::HashTable.652" }
%"class.WTF::HashTable.652" = type <{ %"struct.WTF::KeyValuePair.655"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.655" = type opaque
%"class.WTF::HashMap.656" = type { %"class.WTF::HashTable.657" }
%"class.WTF::HashTable.657" = type <{ %"struct.WTF::KeyValuePair.660"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.660" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.666" = type { %"class.std::__1::unique_ptr.667" }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.661", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.750" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.681", i32 }>
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.684", %"class.absl::optional.685", %"class.absl::optional.690", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.703", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.725", %"class.std::__1::map.736", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.745", i8, %class.scoped_refptr.695, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.746" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.684" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.685" = type { %"class.absl::optional_internal::optional_data.686" }
%"class.absl::optional_internal::optional_data.686" = type { %"class.absl::optional_internal::optional_data_base.687" }
%"class.absl::optional_internal::optional_data_base.687" = type { %"class.absl::optional_internal::optional_data_dtor_base.688" }
%"class.absl::optional_internal::optional_data_dtor_base.688" = type { i8, %union.anon.689 }
%"class.absl::optional.690" = type { %"class.absl::optional_internal::optional_data.691" }
%"class.absl::optional_internal::optional_data.691" = type { %"class.absl::optional_internal::optional_data_base.692" }
%"class.absl::optional_internal::optional_data_base.692" = type { %"class.absl::optional_internal::optional_data_dtor_base.693" }
%"class.absl::optional_internal::optional_data_dtor_base.693" = type { i8, %union.anon.694 }
%union.anon.694 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.695, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.696" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.696" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.314 }
%class.scoped_refptr.314 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.315", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.315" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.316" }
%"struct.std::__1::atomic.316" = type { %"struct.std::__1::__atomic_base.317" }
%"struct.std::__1::__atomic_base.317" = type { %"struct.std::__1::__atomic_base.318" }
%"struct.std::__1::__atomic_base.318" = type { %"struct.std::__1::__cxx_atomic_impl.319" }
%"struct.std::__1::__cxx_atomic_impl.319" = type { %"struct.std::__1::__cxx_atomic_base_impl.320" }
%"struct.std::__1::__cxx_atomic_base_impl.320" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.701 }
%class.scoped_refptr.701 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.763", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.695, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.763" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.702 }
%class.scoped_refptr.702 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.706", %class.scoped_refptr.707 }
%"class.base::RepeatingCallback.706" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.707 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.708", [4 x i8] }>
%"class.base::RefCountedThreadSafe.708" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.712", %"class.std::__1::unique_ptr.718", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.724" }
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.724" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.725" = type { %"class.std::__1::__tree.726" }
%"class.std::__1::__tree.726" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.727", %"class.std::__1::__compressed_pair.731" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.std::__1::map.736" = type { %"class.std::__1::__tree.737" }
%"class.std::__1::__tree.737" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.738", %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.base::OnceCallback.745" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.695 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.313" }>
%"class.base::RefCountedThreadSafe.313" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.746" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.759" = type { %"class.blink::MemberBase.760" }
%"class.blink::MemberBase.760" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.761" = type { %"class.blink::MemberBase.762" }
%"class.blink::MemberBase.762" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.98" = type { %"class.blink::MemberBase.99" }
%"class.blink::MemberBase.99" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.112 }
%class.scoped_refptr.112 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.113" = type { %"class.WTF::VectorBuffer.114" }
%"class.WTF::VectorBuffer.114" = type { %"class.WTF::VectorBufferBase.115" }
%"class.WTF::VectorBufferBase.115" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.116 }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.324" }
%"class.blink::HeapHashMap.324" = type { %"class.WTF::HashMap.327" }
%"class.WTF::HashMap.327" = type { %"class.WTF::HashTable.328" }
%"class.WTF::HashTable.328" = type <{ %"struct.WTF::KeyValuePair.330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.330" = type opaque
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.335" }
%"class.WTF::HashTable.335" = type <{ %"class.blink::WeakMember.337"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.337" = type opaque
%"class.blink::HeapHashSet.338" = type { %"class.WTF::HashSet.341" }
%"class.WTF::HashSet.341" = type { %"class.WTF::HashTable.342" }
%"class.WTF::HashTable.342" = type <{ %"class.blink::WeakMember.344"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.344" = type opaque
%"class.blink::Member.345" = type { %"class.blink::MemberBase.346" }
%"class.blink::MemberBase.346" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.355" = type { %"class.WTF::HashMap.358" }
%"class.WTF::HashMap.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"struct.WTF::KeyValuePair.361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.361" = type opaque
%"class.WTF::Vector.362" = type { %"class.WTF::VectorBuffer.363" }
%"class.WTF::VectorBuffer.363" = type { %"class.WTF::VectorBufferBase.364" }
%"class.WTF::VectorBufferBase.364" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.373" = type { %"class.WTF::Vector.376" }
%"class.WTF::Vector.376" = type { %"class.WTF::VectorBuffer.377" }
%"class.WTF::VectorBuffer.377" = type { %"class.WTF::VectorBufferBase.378" }
%"class.WTF::VectorBufferBase.378" = type { %"class.blink::Member.379"*, i32, i32 }
%"class.blink::Member.379" = type opaque
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type { %struct._xmlDoc* }
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.387" = type { %"class.WTF::HashSet.390" }
%"class.WTF::HashSet.390" = type { %"class.WTF::HashTable.391" }
%"class.WTF::HashTable.391" = type <{ %"class.blink::WeakMember.393"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.393" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.394", i32, [4 x i8] }>
%"class.WTF::Vector.394" = type { %"class.WTF::VectorBuffer.395" }
%"class.WTF::VectorBuffer.395" = type { %"class.WTF::VectorBufferBase.396" }
%"class.WTF::VectorBufferBase.396" = type { %"struct.std::__1::pair.397"*, i32, i32 }
%"struct.std::__1::pair.397" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.413" = type { %"class.WTF::Vector.416" }
%"class.WTF::Vector.416" = type { %"class.WTF::VectorBuffer.417" }
%"class.WTF::VectorBuffer.417" = type { %"class.WTF::VectorBufferBase.418" }
%"class.WTF::VectorBufferBase.418" = type { %"class.blink::Member.419"*, i32, i32 }
%"class.blink::Member.419" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.6" }
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.431" = type { %"class.WTF::HashTable.432" }
%"class.WTF::HashTable.432" = type <{ %"struct.WTF::KeyValuePair.435"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.435" = type opaque
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.321", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.312, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.312 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.321" = type { %"class.blink::MemberBase.7" }
%"class.blink::HeapHashSet.444" = type { %"class.WTF::HashSet.447" }
%"class.WTF::HashSet.447" = type { %"class.WTF::HashTable.448" }
%"class.WTF::HashTable.448" = type <{ %"class.blink::Member.450"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.450" = type opaque
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.481" = type { %"class.WTF::VectorBuffer.482" }
%"class.WTF::VectorBuffer.482" = type { %"class.WTF::VectorBufferBase.483" }
%"class.WTF::VectorBufferBase.483" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.486" = type { %"class.WTF::HashMap.489" }
%"class.WTF::HashMap.489" = type { %"class.WTF::HashTable.490" }
%"class.WTF::HashTable.490" = type <{ %"struct.WTF::KeyValuePair.492"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.492" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.505" = type { %"class.WTF::HashMap.508" }
%"class.WTF::HashMap.508" = type { %"class.WTF::HashTable.509" }
%"class.WTF::HashTable.509" = type <{ %"struct.WTF::KeyValuePair.511"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.511" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.512" }
%"class.blink::HeapHashSet.512" = type { %"class.WTF::HashSet.515" }
%"class.WTF::HashSet.515" = type { %"class.WTF::HashTable.516" }
%"class.WTF::HashTable.516" = type <{ %"class.blink::WeakMember.518"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.518" = type opaque
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.6", %"class.blink::HeapHashSet.528", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.535", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.528" = type { %"class.WTF::HashSet.531" }
%"class.WTF::HashSet.531" = type { %"class.WTF::HashTable.532" }
%"class.WTF::HashTable.532" = type <{ %"class.blink::Member.534"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.534" = type opaque
%"class.blink::HeapTaskRunnerTimer.535" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.536", { i64, i64 } }
%"class.blink::WeakMember.536" = type { %"class.blink::MemberBase.522" }
%"class.blink::WeakMember.523" = type { %"class.blink::MemberBase" }
%"class.blink::Member.524" = type { %"class.blink::MemberBase.525" }
%"class.blink::MemberBase.525" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::XMLDocumentParserScope" = type { %"class.blink::Document"*, void (i8*, i8*, ...)*, void (i8*, %struct._xmlError*)*, i8* }
%struct._xmlError = type { i32, i32, i8*, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, i8* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.807", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.815", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.829", %"class.blink::FrameLoader", %"class.blink::Member.850", %"class.blink::Member.27", %"class.blink::Member.852", %"class.blink::Member.854", %"class.blink::Member.856", %"class.blink::Member.858", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.860", %class.scoped_refptr.862, %"class.blink::Member.863", %"class.blink::Member.865", %"class.blink::Member.867", %"class.blink::Member.869", %"class.blink::Member.871", %"class.blink::Member.873", %"class.blink::Member.875", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.879", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.885", %"class.std::__1::unique_ptr.886", %"class.absl::optional.795", i32, [4 x i8], %"class.std::__1::unique_ptr.892", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.900", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.905", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.910", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.mojo::StructPtr.922", %"class.blink::Member.931", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.933", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.768", %"class.blink::Member.770", %"class.blink::Member.772", i8, i32, i8, i32, %"class.blink::Member.774", %"class.blink::Member.776", %"class.blink::FrameLifecycle", %"class.blink::Member.766", %"class.blink::Member.766", %"class.blink::Member.766", %"class.blink::Member.766", %"class.blink::Member.766", %"class.blink::Member.766", %"class.blink::Member.778", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.788", i8, %"class.base::UnguessableToken", %"class.absl::optional.790", %"class.absl::optional.795", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.766", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.774" = type { %"class.blink::MemberBase.775" }
%"class.blink::MemberBase.775" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.776" = type { %"class.blink::MemberBase.777" }
%"class.blink::MemberBase.777" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::Frame"* }
%"class.blink::Member.778" = type { %"class.blink::MemberBase.779" }
%"class.blink::MemberBase.779" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.766", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.780" }
%"class.std::__1::vector.780" = type { %"class.std::__1::__vector_base.781" }
%"class.std::__1::__vector_base.781" = type { %"struct.std::__1::pair.782"*, %"struct.std::__1::pair.782"*, %"class.std::__1::__compressed_pair.783" }
%"struct.std::__1::pair.782" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"struct.std::__1::pair.782"* }
%"class.blink::Member.788" = type { %"class.blink::MemberBase.789" }
%"class.blink::MemberBase.789" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.790" = type { %"class.absl::optional_internal::optional_data.791" }
%"class.absl::optional_internal::optional_data.791" = type { %"class.absl::optional_internal::optional_data_base.792" }
%"class.absl::optional_internal::optional_data_base.792" = type { %"class.absl::optional_internal::optional_data_dtor_base.793" }
%"class.absl::optional_internal::optional_data_dtor_base.793" = type { i8, %union.anon.794 }
%union.anon.794 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.800" }
%"class.blink::HeapHashSet.800" = type { %"class.WTF::HashSet.803" }
%"class.WTF::HashSet.803" = type { %"class.WTF::HashTable.804" }
%"class.WTF::HashTable.804" = type <{ %"class.blink::WeakMember.806"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.806" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.807" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.808" }
%"class.blink::HeapHashMap.808" = type { %"class.WTF::HashMap.811" }
%"class.WTF::HashMap.811" = type { %"class.WTF::HashTable.812" }
%"class.WTF::HashTable.812" = type <{ %"struct.WTF::KeyValuePair.814"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.814" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.815" = type { %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.818", %"class.base::WeakPtrFactory.823" }
%"class.WTF::HashMap.818" = type { %"class.WTF::HashTable.819" }
%"class.WTF::HashTable.819" = type <{ %"struct.WTF::KeyValuePair.822"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.822" = type opaque
%"class.base::WeakPtrFactory.823" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.827" }
%"class.blink::Member.827" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1390" }
%"class.blink::WeakMember.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1392", i64, %"class.std::__1::map.1393", i8*, i64, %"class.base::WeakPtrFactory.1402" }
%"class.base::RepeatingCallback.1392" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1393" = type { %"class.std::__1::__tree.1394" }
%"class.std::__1::__tree.1394" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1395", %"class.std::__1::__compressed_pair.1399" }
%"class.std::__1::__compressed_pair.1395" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"class.std::__1::__compressed_pair.1399" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.base::WeakPtrFactory.1402" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.829" = type { %"class.WTF::HashSet.832" }
%"class.WTF::HashSet.832" = type { %"class.WTF::HashTable.833" }
%"class.WTF::HashTable.833" = type <{ %"class.blink::WeakMember.835"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.835" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.778", %"class.blink::Member.836", %"class.blink::Member.838", %"class.std::__1::unique_ptr.840", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.846" }
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.840" = type { %"class.std::__1::__compressed_pair.841" }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.WTF::HashSet.846" = type { %"class.WTF::HashTable.847" }
%"class.WTF::HashTable.847" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.850" = type { %"class.blink::MemberBase.851" }
%"class.blink::MemberBase.851" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.940", %"class.blink::Member.778", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.945", i8, i32, %"class.blink::Color", %"class.absl::optional.947", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.952", %"class.blink::Member.954", %"class.blink::Member.954", %"class.std::__1::unique_ptr.957", i32, [4 x i8], %"class.WTF::HashSet.960", %"class.blink::Member.967", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.969", %"class.blink::HeapHashSet.976", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.984", i8, %"class.blink::Member.990", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1002", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1016", i8, %"class.std::__1::unique_ptr.1022", %"class.std::__1::unique_ptr.1139", %"class.WTF::Vector.1145", i32, %class.scoped_refptr.1150, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1151", %"class.blink::Member.1153", %"class.blink::Member.1155", %"class.blink::HeapHashSet.1157", %"class.blink::HeapHashSet.1164", %"class.std::__1::unique_ptr.1171", %"class.std::__1::unique_ptr.1178", %"class.WTF::Vector.79" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.940" = type { %"class.WTF::HashTable.941" }
%"class.WTF::HashTable.941" = type <{ %class.scoped_refptr.944*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.944 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.945" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.946", { i64, i64 } }
%"class.blink::WeakMember.946" = type { %"class.blink::MemberBase.851" }
%"class.absl::optional.947" = type { %"class.absl::optional_internal::optional_data.948" }
%"class.absl::optional_internal::optional_data.948" = type { %"class.absl::optional_internal::optional_data_base.949" }
%"class.absl::optional_internal::optional_data_base.949" = type { %"class.absl::optional_internal::optional_data_dtor_base.950" }
%"class.absl::optional_internal::optional_data_dtor_base.950" = type { i8, %union.anon.951 }
%union.anon.951 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.952" = type { %"class.blink::MemberBase.953" }
%"class.blink::MemberBase.953" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.954" = type { %"class.blink::MemberBase.955" }
%"class.blink::MemberBase.955" = type { %"class.blink::HeapHashSet.956"* }
%"class.blink::HeapHashSet.956" = type opaque
%"class.std::__1::unique_ptr.957" = type { %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"class.WTF::HashSet.960"* }
%"class.WTF::HashSet.960" = type { %"class.WTF::HashTable.961" }
%"class.WTF::HashTable.961" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.969" = type { %"class.WTF::HashSet.972" }
%"class.WTF::HashSet.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"class.blink::Member.975"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.975" = type opaque
%"class.blink::HeapHashSet.976" = type { %"class.WTF::HashSet.979" }
%"class.WTF::HashSet.979" = type { %"class.WTF::HashTable.980" }
%"class.WTF::HashTable.980" = type <{ %"class.blink::Member.982"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.994", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.994" = type { %"class.WTF::HashTable.995" }
%"class.WTF::HashTable.995" = type <{ %"struct.WTF::KeyValuePair.997"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.997" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.998", i32, i32 }
%"class.WTF::Vector.998" = type { %"class.WTF::VectorBuffer.999" }
%"class.WTF::VectorBuffer.999" = type { %"class.WTF::VectorBufferBase.1000" }
%"class.WTF::VectorBufferBase.1000" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1002" = type { %"class.WTF::LinkedHashSet.1005" }
%"class.WTF::LinkedHashSet.1005" = type { %"class.WTF::HashMap.1006", %"class.WTF::VectorBackedLinkedList.1010" }
%"class.WTF::HashMap.1006" = type { %"class.WTF::HashTable.1007" }
%"class.WTF::HashTable.1007" = type <{ %"struct.WTF::KeyValuePair.1009"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1009" = type opaque
%"class.WTF::VectorBackedLinkedList.1010" = type { %"class.WTF::Vector.1011", i32, i32 }
%"class.WTF::Vector.1011" = type { %"class.WTF::VectorBuffer.1012" }
%"class.WTF::VectorBuffer.1012" = type { %"class.WTF::VectorBufferBase.1013" }
%"class.WTF::VectorBufferBase.1013" = type { %"class.WTF::VectorBackedLinkedListNode.1014"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1014" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1025, %class.scoped_refptr.1025, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1116", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1121", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1025 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1026", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1033" }
%"class.WTF::RefCounted.1026" = type { %"class.base::RefCounted.1027" }
%"class.base::RefCounted.1027" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1028", i32, [4 x i8] }>
%"class.WTF::Vector.1028" = type { %"class.WTF::VectorBuffer.1029" }
%"class.WTF::VectorBuffer.1029" = type { %"class.WTF::VectorBufferBase.1030" }
%"class.WTF::VectorBufferBase.1030" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1033" = type { %"class.WTF::VectorBuffer.1034" }
%"class.WTF::VectorBuffer.1034" = type { %"class.WTF::VectorBufferBase.1035" }
%"class.WTF::VectorBufferBase.1035" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1039", %"class.std::__1::unique_ptr.1088", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1036, %class.scoped_refptr.1037, %class.scoped_refptr.1038 }
%class.scoped_refptr.1036 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1052", i8, i8, %class.scoped_refptr.1036, i32, i32 }
%"class.WTF::RefCounted.1052" = type { %"class.base::RefCounted.1053" }
%"class.base::RefCounted.1053" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1037 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1207" }
%"class.blink::PaintPropertyNode.1207" = type { %"class.WTF::RefCounted.1208", i8, i8, %class.scoped_refptr.1037, i32, i32 }
%"class.WTF::RefCounted.1208" = type { %"class.base::RefCounted.1209" }
%"class.base::RefCounted.1209" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1038 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1204" }
%"class.blink::PaintPropertyNode.1204" = type { %"class.WTF::RefCounted.1205", i8, i8, %class.scoped_refptr.1038, i32, i32 }
%"class.WTF::RefCounted.1205" = type { %"class.base::RefCounted.1206" }
%"class.base::RefCounted.1206" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1042", %"class.WTF::Vector.1047", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1042" = type { %"class.WTF::VectorBuffer.1043" }
%"class.WTF::VectorBuffer.1043" = type { %"class.WTF::VectorBufferBase.1044" }
%"class.WTF::VectorBufferBase.1044" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1047" = type { %"class.WTF::VectorBuffer.1048" }
%"class.WTF::VectorBuffer.1048" = type { %"class.WTF::VectorBufferBase.1049" }
%"class.WTF::VectorBufferBase.1049" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1067" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1060, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1061", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1054" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1060 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1189", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1189" = type { %"class.WTF::RefCounted.1190", i8, i8, %class.scoped_refptr.1060, i32, i32 }
%"class.WTF::RefCounted.1190" = type { %"class.base::RefCounted.1191" }
%"class.base::RefCounted.1191" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1192" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1192" = type { %"class.absl::optional_internal::optional_data.1193" }
%"class.absl::optional_internal::optional_data.1193" = type { %"class.absl::optional_internal::optional_data_base.1194" }
%"class.absl::optional_internal::optional_data_base.1194" = type { %"class.absl::optional_internal::optional_data_dtor_base.1195" }
%"class.absl::optional_internal::optional_data_dtor_base.1195" = type { i8, %union.anon.1196 }
%union.anon.1196 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1197", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1197" = type { %"class.std::__1::__vector_base.1198" }
%"class.std::__1::__vector_base.1198" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1199" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1067" = type { %"class.std::__1::__compressed_pair.1068" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.1069" }
%"struct.std::__1::__compressed_pair_elem.1069" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1070", %"class.std::__1::unique_ptr.1076", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1070" = type { %"class.std::__1::__compressed_pair.1071" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.1072" }
%"struct.std::__1::__compressed_pair_elem.1072" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1091", %"class.absl::optional.1091" }
%"class.absl::optional.1091" = type { %"class.absl::optional_internal::optional_data.1092" }
%"class.absl::optional_internal::optional_data.1092" = type { %"class.absl::optional_internal::optional_data_base.1093" }
%"class.absl::optional_internal::optional_data_base.1093" = type { %"class.absl::optional_internal::optional_data_dtor_base.1094" }
%"class.absl::optional_internal::optional_data_dtor_base.1094" = type { i8, [3 x i8], %union.anon.1095 }
%union.anon.1095 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1033"*, %"class.absl::optional.1101", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1101" = type { %"class.absl::optional_internal::optional_data.1102" }
%"class.absl::optional_internal::optional_data.1102" = type { %"class.absl::optional_internal::optional_data_base.1103" }
%"class.absl::optional_internal::optional_data_base.1103" = type { %"class.absl::optional_internal::optional_data_dtor_base.1104" }
%"class.absl::optional_internal::optional_data_dtor_base.1104" = type { i8, %union.anon.1105 }
%union.anon.1105 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1106", %"class.WTF::Vector.1111" }
%"class.WTF::Vector.1106" = type { %"class.WTF::VectorBuffer.1107" }
%"class.WTF::VectorBuffer.1107" = type { %"class.WTF::VectorBufferBase.1108", [128 x i8] }
%"class.WTF::VectorBufferBase.1108" = type { i32*, i32, i32 }
%"class.WTF::Vector.1111" = type { %"class.WTF::VectorBuffer.1112" }
%"class.WTF::VectorBuffer.1112" = type { %"class.WTF::VectorBufferBase.1113", [128 x i8] }
%"class.WTF::VectorBufferBase.1113" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1116" = type { %"class.WTF::VectorBuffer.1117" }
%"class.WTF::VectorBuffer.1117" = type { %"class.WTF::VectorBufferBase.1118" }
%"class.WTF::VectorBufferBase.1118" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1121" = type { %"class.WTF::HashTable.1122" }
%"class.WTF::HashTable.1122" = type <{ %"struct.WTF::KeyValuePair.1125"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1125" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1126", %"class.WTF::Vector.1131" }
%"class.WTF::HashMap.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"struct.WTF::KeyValuePair.1130"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1130" = type opaque
%"class.WTF::Vector.1131" = type { %"class.WTF::VectorBuffer.1132" }
%"class.WTF::VectorBuffer.1132" = type { %"class.WTF::VectorBufferBase.1133" }
%"class.WTF::VectorBufferBase.1133" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1139" = type { %"class.std::__1::__compressed_pair.1140" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1145" = type { %"class.WTF::VectorBuffer.1146" }
%"class.WTF::VectorBuffer.1146" = type { %"class.WTF::VectorBufferBase.1147" }
%"class.WTF::VectorBufferBase.1147" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1150 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1157" = type { %"class.WTF::HashSet.1160" }
%"class.WTF::HashSet.1160" = type { %"class.WTF::HashTable.1161" }
%"class.WTF::HashTable.1161" = type <{ %"class.blink::WeakMember.1163"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1163" = type opaque
%"class.blink::HeapHashSet.1164" = type { %"class.WTF::HashSet.1167" }
%"class.WTF::HashSet.1167" = type { %"class.WTF::HashTable.1168" }
%"class.WTF::HashTable.1168" = type <{ %"class.blink::WeakMember.1170"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1170" = type opaque
%"class.std::__1::unique_ptr.1171" = type { %"class.std::__1::__compressed_pair.1172" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.1173" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1174" }
%"class.base::time_internal::TimeBase.1174" = type { i64 }
%"class.std::__1::unique_ptr.1178" = type { %"class.std::__1::__compressed_pair.1179" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.1180" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1181", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1181" = type { %"class.absl::optional_internal::optional_data.1182" }
%"class.absl::optional_internal::optional_data.1182" = type { %"class.absl::optional_internal::optional_data_base.1183" }
%"class.absl::optional_internal::optional_data_base.1183" = type { %"class.absl::optional_internal::optional_data_dtor_base.1184" }
%"class.absl::optional_internal::optional_data_dtor_base.1184" = type { i8, %union.anon.1185 }
%union.anon.1185 = type { %"class.base::Time" }
%"class.blink::Member.852" = type { %"class.blink::MemberBase.853" }
%"class.blink::MemberBase.853" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.854" = type { %"class.blink::MemberBase.855" }
%"class.blink::MemberBase.855" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.858" = type { %"class.blink::MemberBase.859" }
%"class.blink::MemberBase.859" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.860" = type { %"class.blink::MemberBase.861" }
%"class.blink::MemberBase.861" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.862 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.863" = type { %"class.blink::MemberBase.864" }
%"class.blink::MemberBase.864" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.875" = type { %"class.blink::MemberBase.876" }
%"class.blink::MemberBase.876" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.877" }
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1498" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1405, %"class.std::__1::unique_ptr.681", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.695, i32 }>
%class.scoped_refptr.1405 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.695, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1464", %"class.absl::optional.1469", %"class.absl::optional.1422", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1489", i8, [7 x i8], %class.scoped_refptr.695, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.708" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.695, %"class.std::__1::unique_ptr.1406", %"class.absl::optional.1416", %"struct.std::__1::atomic.306", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1422", %"class.std::__1::unique_ptr.1427", i8, i64, %class.scoped_refptr.1461, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.1463" }
%"class.std::__1::unique_ptr.1406" = type { %"class.std::__1::__compressed_pair.1407" }
%"class.std::__1::__compressed_pair.1407" = type { %"struct.std::__1::__compressed_pair_elem.1408" }
%"struct.std::__1::__compressed_pair_elem.1408" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.695, i8, %"class.mojo::ScopedHandleBase.1409", %class.scoped_refptr.1410, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1411", i8*, %"class.base::WeakPtrFactory.1412" }
%"class.mojo::ScopedHandleBase.1409" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1410 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.1411" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1412" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1416" = type { %"class.absl::optional_internal::optional_data.1417" }
%"class.absl::optional_internal::optional_data.1417" = type { %"class.absl::optional_internal::optional_data_base.1418" }
%"class.absl::optional_internal::optional_data_base.1418" = type { %"class.absl::optional_internal::optional_data_dtor_base.1419" }
%"class.absl::optional_internal::optional_data_dtor_base.1419" = type { i8, %union.anon.1420 }
%union.anon.1420 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1421", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1421" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1427" = type { %"class.std::__1::__compressed_pair.1428" }
%"class.std::__1::__compressed_pair.1428" = type { %"struct.std::__1::__compressed_pair_elem.1429" }
%"struct.std::__1::__compressed_pair_elem.1429" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1430", i8, i64, %class.scoped_refptr.1431, %class.scoped_refptr.1456 }
%"class.base::RepeatingCallback.1430" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1431 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1432", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1434", %"class.std::__1::map.1445", i8, [7 x i8] }>
%"class.base::RefCounted.1432" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1433 }
%class.scoped_refptr.1433 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1434" = type { %"class.std::__1::__tree.1435" }
%"class.std::__1::__tree.1435" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1436", %"class.std::__1::__compressed_pair.1440" }
%"class.std::__1::__compressed_pair.1436" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.std::__1::map.1445" = type { %"class.std::__1::__tree.1446" }
%"class.std::__1::__tree.1446" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1447", %"class.std::__1::__compressed_pair.1451" }
%"class.std::__1::__compressed_pair.1447" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"class.std::__1::__compressed_pair.1451" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%class.scoped_refptr.1456 = type { %"class.base::RefCountedData.1457"* }
%"class.base::RefCountedData.1457" = type opaque
%class.scoped_refptr.1461 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1462 }
%class.scoped_refptr.1462 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.1463" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1464" = type { %"class.absl::optional_internal::optional_data.1465" }
%"class.absl::optional_internal::optional_data.1465" = type { %"class.absl::optional_internal::optional_data_base.1466" }
%"class.absl::optional_internal::optional_data_base.1466" = type { %"class.absl::optional_internal::optional_data_dtor_base.1467" }
%"class.absl::optional_internal::optional_data_dtor_base.1467" = type { i8, %union.anon.1468 }
%union.anon.1468 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1469" = type { %"class.absl::optional_internal::optional_data.1470" }
%"class.absl::optional_internal::optional_data.1470" = type { %"class.absl::optional_internal::optional_data_base.1471" }
%"class.absl::optional_internal::optional_data_base.1471" = type { %"class.absl::optional_internal::optional_data_dtor_base.1472" }
%"class.absl::optional_internal::optional_data_dtor_base.1472" = type { i8, [7 x i8], %union.anon.1473 }
%union.anon.1473 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1422" = type { %"class.absl::optional_internal::optional_data.1423" }
%"class.absl::optional_internal::optional_data.1423" = type { %"class.absl::optional_internal::optional_data_base.1424" }
%"class.absl::optional_internal::optional_data_base.1424" = type { %"class.absl::optional_internal::optional_data_dtor_base.1425" }
%"class.absl::optional_internal::optional_data_dtor_base.1425" = type { i8, %union.anon.1426 }
%union.anon.1426 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1474 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1474 = type { %"class.std::__1::map.1477" }
%"class.std::__1::map.1477" = type { %"class.std::__1::__tree.1478" }
%"class.std::__1::__tree.1478" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1479", %"class.std::__1::__compressed_pair.1483" }
%"class.std::__1::__compressed_pair.1479" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"class.std::__1::__compressed_pair.1483" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1488"*, i64 }
%"class.std::__1::unique_ptr.1488" = type opaque
%"class.std::__1::map.1489" = type { %"class.std::__1::__tree.1490" }
%"class.std::__1::__tree.1490" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1491", %"class.std::__1::__compressed_pair.1495" }
%"class.std::__1::__compressed_pair.1491" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"class.std::__1::__compressed_pair.1495" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.std::__1::unique_ptr.1498" = type { %"class.std::__1::__compressed_pair.1499" }
%"class.std::__1::__compressed_pair.1499" = type { %"struct.std::__1::__compressed_pair_elem.1500" }
%"struct.std::__1::__compressed_pair_elem.1500" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.base::RepeatingCallback.885" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.886" = type { %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.795" = type { %"class.absl::optional_internal::optional_data.796" }
%"class.absl::optional_internal::optional_data.796" = type { %"class.absl::optional_internal::optional_data_base.797" }
%"class.absl::optional_internal::optional_data_base.797" = type { %"class.absl::optional_internal::optional_data_dtor_base.798" }
%"class.absl::optional_internal::optional_data_dtor_base.798" = type { i8, %union.anon.799 }
%"class.std::__1::unique_ptr.892" = type { %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.898" }
%"class.blink::Member.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1506" }
%"class.mojo::AssociatedRemote.1506" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1507" }
%"class.mojo::internal::AssociatedInterfacePtrState.1507" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1508" }
%"class.std::__1::unique_ptr.1508" = type { %"class.std::__1::__compressed_pair.1509" }
%"class.std::__1::__compressed_pair.1509" = type { %"struct.std::__1::__compressed_pair_elem.1510" }
%"struct.std::__1::__compressed_pair_elem.1510" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.900" = type { %"class.blink::Member.901" }
%"class.blink::Member.901" = type { %"class.blink::MemberBase.902" }
%"class.blink::MemberBase.902" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1516" }
%"class.mojo::AssociatedRemote.1516" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1517" }
%"class.mojo::internal::AssociatedInterfacePtrState.1517" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1518" }
%"class.std::__1::unique_ptr.1518" = type { %"class.std::__1::__compressed_pair.1519" }
%"class.std::__1::__compressed_pair.1519" = type { %"struct.std::__1::__compressed_pair_elem.1520" }
%"struct.std::__1::__compressed_pair_elem.1520" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.903" }
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.778", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1526" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.681" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1526" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.905" = type { %"class.blink::Member.906" }
%"class.blink::Member.906" = type { %"class.blink::MemberBase.907" }
%"class.blink::MemberBase.907" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1529", %"class.blink::Member.778", %"class.mojo::AssociatedReceiver.1530" }
%"class.blink::ThreadState::PrefinalizerRegistration.1529" = type { i8 }
%"class.mojo::AssociatedReceiver.1530" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1531" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1531" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.908" }
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1534", %"class.blink::Member.778", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1534" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1405, %"class.std::__1::unique_ptr.681", %"class.base::WeakPtrFactory.1535" }
%"class.base::WeakPtrFactory.1535" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.910" = type { %"class.blink::Member.911" }
%"class.blink::Member.911" = type { %"class.blink::MemberBase.912" }
%"class.blink::MemberBase.912" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1538", %"class.blink::Member.778", %"class.mojo::AssociatedReceiver.1539" }
%"class.blink::ThreadState::PrefinalizerRegistration.1538" = type { i8 }
%"class.mojo::AssociatedReceiver.1539" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1540" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1540" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::HeapHashMap.921"* }
%"class.blink::HeapHashMap.921" = type opaque
%"class.mojo::StructPtr.922" = type { %"class.std::__1::unique_ptr.923" }
%"class.std::__1::unique_ptr.923" = type { %"class.std::__1::__compressed_pair.924" }
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.925" }
%"struct.std::__1::__compressed_pair_elem.925" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.926", %"class.mojo::InlinedStructPtr.927" }
%"class.mojo::InlinedStructPtr.926" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.927" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.931" = type { %"class.blink::MemberBase.932" }
%"class.blink::MemberBase.932" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.933" = type { %"class.absl::optional_internal::optional_data.934" }
%"class.absl::optional_internal::optional_data.934" = type { %"class.absl::optional_internal::optional_data_base.935" }
%"class.absl::optional_internal::optional_data_base.935" = type { %"class.absl::optional_internal::optional_data_dtor_base.936" }
%"class.absl::optional_internal::optional_data_dtor_base.936" = type { i8, %union.anon.937 }
%union.anon.937 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%struct._xmlParserCtxt = type { %struct._xmlSAXHandler*, i8*, %struct._xmlDoc*, i32, i32, i8*, i8*, i32, i32, %struct._xmlParserInput*, i32, i32, %struct._xmlParserInput**, %struct._xmlNode*, i32, i32, %struct._xmlNode**, i32, %struct._xmlParserNodeInfoSeq, i32, i32, i32, i32, i32, i32, %struct._xmlValidCtxt, i32, i32, i8*, i8*, i32, i32, i8**, i64, i64, i32, i32, i32, i8*, i8*, i8*, i32*, i32, i32, i32*, i32, %struct._xmlParserInput*, i32, i32, i32, i32, i8*, i32, i32, i8*, i32, i32, %struct._xmlDict*, i8**, i32, i32, i8*, i8*, i8*, i32, i32, i32, i8**, i32*, %struct._xmlStartTag*, %struct._xmlHashTable*, %struct._xmlHashTable*, i32, i32, i32, i32, %struct._xmlNode*, i32, %struct._xmlAttr*, %struct._xmlError, i32, i64, i64, %struct._xmlParserNodeInfo*, i32, i32, %struct._xmlParserNodeInfo*, i32, i64 }
%struct._xmlSAXHandler = type { void (i8*, i8*, i8*, i8*)*, i32 (i8*)*, i32 (i8*)*, i32 (i8*)*, %struct._xmlParserInput* (i8*, i8*, i8*)*, %struct._xmlEntity* (i8*, i8*)*, void (i8*, i8*, i32, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i32, i32, i8*, %struct._xmlEnumeration*)*, void (i8*, i8*, i32, %struct._xmlElementContent*)*, void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, %struct._xmlSAXLocator*)*, void (i8*)*, void (i8*)*, void (i8*, i8*, i8**)*, void (i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, %struct._xmlEntity* (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*)*, i32, i8*, void (i8*, i8*, i8*, i8*, i32, i8**, i32, i32, i8**)*, void (i8*, i8*, i8*, i8*)*, void (i8*, %struct._xmlError*)* }
%struct._xmlEnumeration = type { %struct._xmlEnumeration*, i8* }
%struct._xmlElementContent = type { i32, i32, i8*, %struct._xmlElementContent*, %struct._xmlElementContent*, %struct._xmlElementContent*, i8* }
%struct._xmlSAXLocator = type { i8* (i8*)*, i8* (i8*)*, i32 (i8*)*, i32 (i8*)* }
%struct._xmlEntity = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDtd*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i32, i32, i8*, i8*, %struct._xmlEntity*, i8*, i32, i32, i32 }
%struct._xmlParserNodeInfoSeq = type { i64, i64, %struct._xmlParserNodeInfo* }
%struct._xmlValidCtxt = type { i8*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, %struct._xmlNode*, i32, i32, %struct._xmlNode**, i32, %struct._xmlDoc*, i32, %struct._xmlValidState*, i32, i32, %struct._xmlValidState*, i8*, i8* }
%struct._xmlValidState = type opaque
%struct._xmlParserInput = type { %struct._xmlParserInputBuffer*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i64, void (i8*)*, i8*, i8*, i32, i32 }
%struct._xmlParserInputBuffer = type { i8*, i32 (i8*, i8*, i32)*, i32 (i8*)*, %struct._xmlCharEncodingHandler*, %struct._xmlBuf*, %struct._xmlBuf*, i32, i32, i64 }
%struct._xmlCharEncodingHandler = type { i8*, i32 (i8*, i32*, i8*, i32*)*, i32 (i8*, i32*, i8*, i32*)*, %struct._uconv_t*, %struct._uconv_t* }
%struct._uconv_t = type { %struct.UConverter*, %struct.UConverter*, [1024 x i16], i16*, i16* }
%struct.UConverter = type opaque
%struct._xmlBuf = type opaque
%struct._xmlStartTag = type opaque
%struct._xmlHashTable = type opaque
%struct._xmlParserNodeInfo = type { %struct._xmlNode*, i64, i64, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.1210", i8, i8, %class.scoped_refptr.116, %class.scoped_refptr.1215, %class.scoped_refptr.1216 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.blink::FetchParameters" = type <{ %"class.blink::ResourceRequest", %"class.blink::TextResourceDecoderOptions", %"struct.blink::ResourceLoaderOptions", i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.569, %class.scoped_refptr.569, %class.scoped_refptr.569, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1223, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1235", %"class.absl::optional.1240", %"class.absl::optional.1250", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.795", %"class.absl::optional.1250", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1250", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.795", %"class.absl::optional.1255", i8, %class.scoped_refptr.1260 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.absl::optional.1235" = type { %"class.absl::optional_internal::optional_data.1236" }
%"class.absl::optional_internal::optional_data.1236" = type { %"class.absl::optional_internal::optional_data_base.1237" }
%"class.absl::optional_internal::optional_data_base.1237" = type { %"class.absl::optional_internal::optional_data_dtor_base.1238" }
%"class.absl::optional_internal::optional_data_dtor_base.1238" = type { i8, %union.anon.1239 }
%union.anon.1239 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1240" = type { %"class.absl::optional_internal::optional_data.1241" }
%"class.absl::optional_internal::optional_data.1241" = type { %"class.absl::optional_internal::optional_data_base.1242" }
%"class.absl::optional_internal::optional_data_base.1242" = type { %"class.absl::optional_internal::optional_data_dtor_base.1243" }
%"class.absl::optional_internal::optional_data_dtor_base.1243" = type { i8, %union.anon.1244 }
%union.anon.1244 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1245", %"class.WTF::Vector.661", %"class.WTF::String" }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.685", %"class.absl::optional.685" }
%"class.absl::optional.1250" = type { %"class.absl::optional_internal::optional_data.1251" }
%"class.absl::optional_internal::optional_data.1251" = type { %"class.absl::optional_internal::optional_data_base.1252" }
%"class.absl::optional_internal::optional_data_base.1252" = type { %"class.absl::optional_internal::optional_data_dtor_base.1253" }
%"class.absl::optional_internal::optional_data_dtor_base.1253" = type { i8, %union.anon.1254 }
%"class.absl::optional.1255" = type { %"class.absl::optional_internal::optional_data.1256" }
%"class.absl::optional_internal::optional_data.1256" = type { %"class.absl::optional_internal::optional_data_base.1257" }
%"class.absl::optional_internal::optional_data_base.1257" = type { %"class.absl::optional_internal::optional_data_dtor_base.1258" }
%"class.absl::optional_internal::optional_data_dtor_base.1258" = type { i8, %union.anon.1259 }
%union.anon.1259 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.blink::XSLStyleSheetResource" = type { %"class.blink::TextResource", %"class.WTF::String" }
%"class.blink::TextResource" = type { %"class.blink::Resource", %"class.std::__1::unique_ptr.1355" }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1266", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1286", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1323", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1330", %"class.blink::ResourceResponse", %class.scoped_refptr.1332, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1266" = type { %"class.absl::optional_internal::optional_data.1267" }
%"class.absl::optional_internal::optional_data.1267" = type { %"class.absl::optional_internal::optional_data_base.1268" }
%"class.absl::optional_internal::optional_data_base.1268" = type { %"class.absl::optional_internal::optional_data_dtor_base.1269" }
%"class.absl::optional_internal::optional_data_dtor_base.1269" = type { i8, %union.anon.1270 }
%union.anon.1270 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1271", i8, %"class.absl::optional.1276", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1271" = type { %"class.absl::optional_internal::optional_data.1272" }
%"class.absl::optional_internal::optional_data.1272" = type { %"class.absl::optional_internal::optional_data_base.1273" }
%"class.absl::optional_internal::optional_data_base.1273" = type { %"class.absl::optional_internal::optional_data_dtor_base.1274" }
%"class.absl::optional_internal::optional_data_dtor_base.1274" = type { i8, [7 x i8], %union.anon.1275 }
%union.anon.1275 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1276" = type { %"class.absl::optional_internal::optional_data.1277" }
%"class.absl::optional_internal::optional_data.1277" = type { %"class.absl::optional_internal::optional_data_base.1278" }
%"class.absl::optional_internal::optional_data_base.1278" = type { %"class.absl::optional_internal::optional_data_dtor_base.1279" }
%"class.absl::optional_internal::optional_data_dtor_base.1279" = type { i8, %union.anon.1280 }
%union.anon.1280 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1281", %"class.WTF::Vector.661" }
%"class.WTF::Vector.1281" = type { %"class.WTF::VectorBuffer.1282" }
%"class.WTF::VectorBuffer.1282" = type { %"class.WTF::VectorBufferBase.1283" }
%"class.WTF::VectorBufferBase.1283" = type { i32*, i32, i32 }
%"class.WTF::Vector.1286" = type { %"class.WTF::VectorBuffer.1287" }
%"class.WTF::VectorBuffer.1287" = type { %"class.WTF::VectorBufferBase.1288" }
%"class.WTF::VectorBufferBase.1288" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1319" }
%"class.WTF::HashMap.1319" = type { %"class.WTF::HashTable.1320" }
%"class.WTF::HashTable.1320" = type <{ %"struct.WTF::KeyValuePair.1322"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1322" = type <{ %"class.blink::WeakMember.1555", i32, [4 x i8] }>
%"class.blink::WeakMember.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1557", [7 x i8], %"class.blink::Member.1558", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.1557" = type { i8 }
%"class.blink::Member.1558" = type { %"class.blink::MemberBase.1559" }
%"class.blink::MemberBase.1559" = type { %"class.blink::Resource"* }
%"class.blink::HeapHashSet.1323" = type { %"class.WTF::HashSet.1326" }
%"class.WTF::HashSet.1326" = type { %"class.WTF::HashTable.1327" }
%"class.WTF::HashTable.1327" = type <{ %"class.blink::WeakMember.1329"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1329" = type opaque
%"class.blink::Member.1330" = type { %"class.blink::MemberBase.1331" }
%"class.blink::MemberBase.1331" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1289", %class.scoped_refptr.1303, %class.scoped_refptr.1304, %"struct.blink::CacheControlHeader", %"class.absl::optional.685", %"class.absl::optional.1181", %"class.absl::optional.1181", %"class.absl::optional.1181", i64, %"class.blink::KURL", %"class.WTF::Vector.1305", %"class.WTF::String", %"class.WTF::Vector.661", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.795", %"class.WTF::Vector.661", %"class.blink::KURL", %"class.absl::optional.1310" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1289" = type { %"class.absl::optional_internal::optional_data.1290" }
%"class.absl::optional_internal::optional_data.1290" = type { %"class.absl::optional_internal::optional_data_base.1291" }
%"class.absl::optional_internal::optional_data_base.1291" = type { %"class.absl::optional_internal::optional_data_dtor_base.1292" }
%"class.absl::optional_internal::optional_data_dtor_base.1292" = type { i8, %union.anon.1293 }
%union.anon.1293 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.661", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1294", %"class.WTF::Vector.1298" }
%"class.WTF::Vector.1294" = type { %"class.WTF::VectorBuffer.1295" }
%"class.WTF::VectorBuffer.1295" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::Vector.1298" = type { %"class.WTF::VectorBuffer.1299" }
%"class.WTF::VectorBuffer.1299" = type { %"class.WTF::VectorBufferBase.1300" }
%"class.WTF::VectorBufferBase.1300" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1303 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1304 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.WTF::Vector.1305" = type { %"class.WTF::VectorBuffer.1306" }
%"class.WTF::VectorBuffer.1306" = type { %"class.WTF::VectorBufferBase.1307" }
%"class.WTF::VectorBufferBase.1307" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1310" = type { %"class.absl::optional_internal::optional_data.1311" }
%"class.absl::optional_internal::optional_data.1311" = type { %"class.absl::optional_internal::optional_data_base.1312" }
%"class.absl::optional_internal::optional_data_base.1312" = type { %"class.absl::optional_internal::optional_data_dtor_base.1313" }
%"class.absl::optional_internal::optional_data_dtor_base.1313" = type { i8, %union.anon.1314 }
%union.anon.1314 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1332 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1333", i64, %"class.WTF::Vector.1335", %"class.WTF::Vector.1340" }
%"class.WTF::RefCounted.1333" = type { %"class.base::RefCounted.1334" }
%"class.base::RefCounted.1334" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1335" = type { %"class.WTF::VectorBuffer.1336" }
%"class.WTF::VectorBuffer.1336" = type { %"class.WTF::VectorBufferBase.1337" }
%"class.WTF::VectorBufferBase.1337" = type { i8*, i32, i32 }
%"class.WTF::Vector.1340" = type { %"class.WTF::VectorBuffer.1341" }
%"class.WTF::VectorBuffer.1341" = type { %"class.WTF::VectorBufferBase.1342" }
%"class.WTF::VectorBufferBase.1342" = type { %"class.std::__1::unique_ptr.1343"*, i32, i32 }
%"class.std::__1::unique_ptr.1343" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1346" }
%"class.std::__1::__tree.1346" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1347", %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.std::__1::unique_ptr.1355" = type { %"class.std::__1::__compressed_pair.1356" }
%"class.std::__1::__compressed_pair.1356" = type { %"struct.std::__1::__compressed_pair_elem.1357" }
%"struct.std::__1::__compressed_pair_elem.1357" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.1358", i32, %"class.WTF::Vector.1335", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1364" }
%"class.std::__1::unique_ptr.1358" = type { %"class.std::__1::__compressed_pair.1359" }
%"class.std::__1::__compressed_pair.1359" = type { %"struct.std::__1::__compressed_pair_elem.1360" }
%"struct.std::__1::__compressed_pair_elem.1360" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1364" = type { %"class.std::__1::__compressed_pair.1365" }
%"class.std::__1::__compressed_pair.1365" = type { %"struct.std::__1::__compressed_pair_elem.1366" }
%"struct.std::__1::__compressed_pair_elem.1366" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%struct._xsltStylesheet = type { %struct._xsltStylesheet*, %struct._xsltStylesheet*, %struct._xsltStylesheet*, %struct._xsltDocument*, %struct._xmlDoc*, %struct._xmlHashTable*, i32, %struct._xmlHashTable*, %struct._xsltStackElem*, %struct._xsltTemplate*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._xmlHashTable*, %struct._xmlHashTable*, %struct._xmlHashTable*, i8*, i8*, i8*, i8*, i8*, i8*, i32, %struct._xsltDecimalFormat*, i32, i8*, i8*, i32, i8*, %struct._xsltElemPreComp*, i32, i32, i8*, i8**, i32, i32, i8*, %struct._xmlHashTable*, i32, %struct._xsltDocument*, %struct._xmlDict*, i8*, i8*, i32, i32, i32, %struct._xsltStylesheet*, i32, %struct._xmlHashTable*, %struct._xmlXPathContext* }
%struct._xsltStackElem = type { %struct._xsltStackElem*, %struct._xsltStylePreComp*, i32, i8*, i8*, i8*, %struct._xmlNode*, %struct._xmlXPathObject*, %struct._xmlDoc*, i32, %struct._xsltTransformContext*, i32 }
%struct._xsltStylePreComp = type { %struct._xsltElemPreComp*, i32, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)*, %struct._xmlNode*, i8*, i32, i32, i8*, i32, i32, i8*, i32, i8*, i8*, i32, i8*, i32, i32, i8*, i32, i8*, i32, i8*, i8*, i8*, %struct._xsltTemplate*, i8*, i32, i8*, i32, %struct._xsltNumberData, %struct._xmlXPathCompExpr*, %struct._xmlNs**, i32 }
%struct._xsltNumberData = type { i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct._xmlDoc*, %struct._xmlNode*, %struct._xsltCompMatch*, %struct._xsltCompMatch* }
%struct._xsltCompMatch = type opaque
%struct._xmlXPathCompExpr = type opaque
%struct._xmlXPathObject = type { i32, %struct._xmlNodeSet*, i32, double, i8*, i8*, i32, i8*, i32 }
%struct._xmlNodeSet = type { i32, i32, %struct._xmlNode** }
%struct._xsltTransformContext = type { %struct._xsltStylesheet*, i32, %struct._xsltTemplate*, i32, i32, %struct._xsltTemplate**, %struct._xsltStackElem*, i32, i32, %struct._xsltStackElem**, i32, %struct._xmlHashTable*, %struct._xmlHashTable*, %struct._xmlHashTable*, i8*, i8*, %struct._xsltDocument*, %struct._xsltDocument*, %struct._xmlNode*, %struct._xmlNodeSet*, %struct._xmlDoc*, %struct._xmlNode*, %struct._xmlXPathContext*, i32, %struct._xmlHashTable*, %struct._xmlNode*, i32, i8*, i32, i64, i32, i32, i64*, i8*, i32, i32, %struct._xsltRuntimeExtra*, %struct._xsltDocument*, i8*, void (i8*, i8*, ...)*, i8*, void (%struct._xsltTransformContext*, %struct._xmlNode**, i32)*, %struct._xmlDoc*, %struct._xmlDoc*, i32, i8*, i32, i32, i32, i64*, i32, %struct._xmlDict*, %struct._xmlDoc*, i32, i32, i32, %struct._xsltTemplate*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xsltTransformCache*, i8*, %struct._xmlDoc*, %struct._xmlDoc*, i32, i32, i32, i32, i64, i64 }
%struct._xsltRuntimeExtra = type { i8*, void (i8*)*, %union.anon.1373 }
%union.anon.1373 = type { i8* }
%struct._xsltTransformCache = type { %struct._xmlDoc*, i32, %struct._xsltStackElem*, i32 }
%struct._xsltTemplate = type { %struct._xsltTemplate*, %struct._xsltStylesheet*, i8*, float, i8*, i8*, i8*, i8*, %struct._xmlNode*, %struct._xmlNode*, i32, %struct._xmlNs**, i32, i64, i8*, i32, i32, %struct._xsltTemplate**, i32* }
%struct._xsltDecimalFormat = type { %struct._xsltDecimalFormat*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct._xsltElemPreComp = type { %struct._xsltElemPreComp*, i32, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)*, %struct._xmlNode*, void (%struct._xsltElemPreComp*)* }
%struct._xsltDocument = type { %struct._xsltDocument*, i32, %struct._xmlDoc*, i8*, %struct._xsltDocument*, i32, i32 }
%struct._xmlXPathContext = type { %struct._xmlDoc*, %struct._xmlNode*, i32, i32, %struct._xmlHashTable*, i32, i32, %struct._xmlXPathType*, i32, i32, %struct._xmlHashTable*, i32, i32, %struct._xmlXPathAxis*, %struct._xmlNs**, i32, i8*, i32, i32, i32, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlHashTable*, %struct._xmlXPathObject* (i8*, i8*, i8*)*, i8*, i8*, i8*, i8*, void (%struct._xmlXPathParserContext*, i32)* (i8*, i8*, i8*)*, i8*, %struct._xmlNs**, i32, i8*, void (i8*, %struct._xmlError*)*, %struct._xmlError, %struct._xmlNode*, %struct._xmlDict*, i32, i8*, i64, i64, i32 }
%struct._xmlXPathType = type { i8*, i32 (%struct._xmlXPathObject*, i32)* }
%struct._xmlXPathAxis = type { i8*, %struct._xmlXPathObject* (%struct._xmlXPathParserContext*, %struct._xmlXPathObject*)* }
%struct._xmlXPathParserContext = type { i8*, i8*, i32, %struct._xmlXPathContext*, %struct._xmlXPathObject*, i32, i32, %struct._xmlXPathObject**, %struct._xmlXPathCompExpr*, i32, %struct._xmlNode*, i32 }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1378, %"class.blink::Member.1379", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.1378 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1379" = type { %"class.blink::MemberBase.1380" }
%"class.blink::MemberBase.1380" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1381" }
%"class.blink::Persistent.1381" = type { %"class.blink::PersistentBase.1382" }
%"class.blink::PersistentBase.1382" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.1383" }
%"class.base::StrongAlias.1383" = type { %"class.base::UnguessableToken" }
%"class.blink::MediaList" = type opaque
%"class.blink::CSSRule" = type opaque
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZNK5blink13XSLStyleSheet16parentStyleSheetEv = comdat any

$_ZNK5blink13XSLStyleSheet9ownerNodeEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13XSLStyleSheetEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK5blink13XSLStyleSheet7BaseURLEv = comdat any

$_ZNK5blink13XSLStyleSheet4hrefEv = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink10StyleSheet18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink13XSLStyleSheet8disabledEv = comdat any

$_ZN5blink13XSLStyleSheet11setDisabledEb = comdat any

$_ZNK5blink13XSLStyleSheet5titleEv = comdat any

$_ZN5blink10StyleSheet5mediaEv = comdat any

$_ZNK5blink13XSLStyleSheet4typeEv = comdat any

$_ZNK5blink10StyleSheet9ownerRuleEv = comdat any

$_ZN5blink13XSLStyleSheet14ClearOwnerNodeEv = comdat any

$_ZNK5blink13XSLStyleSheet9IsLoadingEv = comdat any

$_ZNK5blink10StyleSheet15IsCSSStyleSheetEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13XSLStyleSheetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13XSLStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13XSLStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13XSLStyleSheetEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13XSLStyleSheetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink13XSLStyleSheetE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::XSLStyleSheet"*)* @_ZN5blink13XSLStyleSheetD2Ev to i8*), i8* bitcast (void (%"class.blink::XSLStyleSheet"*)* @_ZN5blink13XSLStyleSheetD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::XSLStyleSheet"*, %"class.blink::Visitor"*)* @_ZNK5blink13XSLStyleSheet5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::StyleSheet"*)* @_ZNK5blink10StyleSheet18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i1 (%"class.blink::XSLStyleSheet"*)* @_ZNK5blink13XSLStyleSheet8disabledEv to i8*), i8* bitcast (void (%"class.blink::XSLStyleSheet"*, i1)* @_ZN5blink13XSLStyleSheet11setDisabledEb to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::XSLStyleSheet"*)* @_ZNK5blink13XSLStyleSheet9ownerNodeEv to i8*), i8* bitcast (%"class.blink::XSLStyleSheet"* (%"class.blink::XSLStyleSheet"*)* @_ZNK5blink13XSLStyleSheet16parentStyleSheetEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::XSLStyleSheet"*)* @_ZNK5blink13XSLStyleSheet4hrefEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::XSLStyleSheet"*)* @_ZNK5blink13XSLStyleSheet5titleEv to i8*), i8* bitcast (%"class.blink::MediaList"* (%"class.blink::StyleSheet"*)* @_ZN5blink10StyleSheet5mediaEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::XSLStyleSheet"*)* @_ZNK5blink13XSLStyleSheet4typeEv to i8*), i8* bitcast (%"class.blink::CSSRule"* (%"class.blink::StyleSheet"*)* @_ZNK5blink10StyleSheet9ownerRuleEv to i8*), i8* bitcast (void (%"class.blink::XSLStyleSheet"*)* @_ZN5blink13XSLStyleSheet14ClearOwnerNodeEv to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::XSLStyleSheet"*)* @_ZNK5blink13XSLStyleSheet7BaseURLEv to i8*), i8* bitcast (i1 (%"class.blink::XSLStyleSheet"*)* @_ZNK5blink13XSLStyleSheet9IsLoadingEv to i8*), i8* bitcast (i1 (%"class.blink::StyleSheet"*)* @_ZNK5blink10StyleSheet15IsCSSStyleSheetEv to i8*)] }, align 8
@.str = private unnamed_addr constant [37 x i8] c"http://www.w3.org/1999/XSL/Transform\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"import\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"href\00", align 1
@xmlFree = external local_unnamed_addr global void (i8*)*, align 8
@.str.3 = private unnamed_addr constant [8 x i8] c"include\00", align 1
@_ZN5blink26fetch_initiator_type_names4kXmlE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@__const._ZN5blink13XSLStyleSheet14LoadChildSheetERKN3WTF6StringE.params = private unnamed_addr constant <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.569, %class.scoped_refptr.569, %class.scoped_refptr.569, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1223, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1245", %"class.WTF::Vector.661", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1254 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.689 } } } }, { { { { i8, [7 x i8], %union.anon.689 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.799 } } } }, { { { { i8, [7 x i8], %union.anon.1254 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1254 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.799 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1260 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1210", i8, i8, [6 x i8], %class.scoped_refptr.116, %class.scoped_refptr.1215, %class.scoped_refptr.1216 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }> <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.569, %class.scoped_refptr.569, %class.scoped_refptr.569, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1223, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1245", %"class.WTF::Vector.661", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1254 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.689 } } } }, { { { { i8, [7 x i8], %union.anon.689 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.799 } } } }, { { { { i8, [7 x i8], %union.anon.1254 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1254 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.799 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1260 }, %"class.blink::ResourceRequestBody" } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.569, %class.scoped_refptr.569, %class.scoped_refptr.569, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1223, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1245", %"class.WTF::Vector.661", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1254 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.689 } } } }, { { { { i8, [7 x i8], %union.anon.689 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.799 } } } }, { { { { i8, [7 x i8], %union.anon.1254 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1254 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.799 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1260 } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } }, i8, [7 x i8] }> <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } } { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } { %"class.url::SchemeHostPort" <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.573" { %"struct.std::__1::__compressed_pair_elem.574" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.575 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.573" { %"struct.std::__1::__compressed_pair_elem.574" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.575 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { %"class.url::Origin::Nonce" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %class.scoped_refptr.569 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.569 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.569 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.blink::HTTPHeaderMap" { %"class.WTF::HashMap.1218" { %"class.WTF::HashTable.1219" <{ %"struct.WTF::KeyValuePair.1222"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.1222"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, i16 -21846, [2 x i8] c"\AA\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, %class.scoped_refptr.1223 { %"class.blink::WebURLRequestExtraData"* inttoptr (i64 -6148914691236517206 to %"class.blink::WebURLRequestExtraData"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1245", %"class.WTF::Vector.661", %"class.WTF::String" } } } } } } { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1245", %"class.WTF::Vector.661", %"class.WTF::String" } } } } } { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1245", %"class.WTF::Vector.661", %"class.WTF::String" } } } } { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1245", %"class.WTF::Vector.661", %"class.WTF::String" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1245", %"class.WTF::Vector.661", %"class.WTF::String" } } { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1245", %"class.WTF::Vector.661", %"class.WTF::String" } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.WTF::Vector.1245" { %"class.WTF::VectorBuffer.1246" { %"class.WTF::VectorBufferBase.1247" { %class.scoped_refptr.569* inttoptr (i64 -6148914691236517206 to %class.scoped_refptr.569*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.661" { %"class.WTF::VectorBuffer.662" { %"class.WTF::VectorBufferBase.663" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } } }, { { { { i8, [7 x i8], %union.anon.1254 } } } } { { { { i8, [7 x i8], %union.anon.1254 } } } { { { i8, [7 x i8], %union.anon.1254 } } { { i8, [7 x i8], %union.anon.1254 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1254 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.689 } } } }, { { { { i8, [7 x i8], %union.anon.689 } } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.689 } } } } { { { { i8, [7 x i8], %union.anon.689 } } } { { { i8, [7 x i8], %union.anon.689 } } { { i8, [7 x i8], %union.anon.689 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.689 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } }, { { { { i8, [7 x i8], %union.anon.689 } } } } { { { { i8, [7 x i8], %union.anon.689 } } } { { { i8, [7 x i8], %union.anon.689 } } { { i8, [7 x i8], %union.anon.689 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.689 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } } }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.799 } } } } { { { { i8, [7 x i8], %union.anon.799 } } } { { { i8, [7 x i8], %union.anon.799 } } { { i8, [7 x i8], %union.anon.799 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.799 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], %union.anon.1254 } } } } { { { { i8, [7 x i8], %union.anon.1254 } } } { { { i8, [7 x i8], %union.anon.1254 } } { { i8, [7 x i8], %union.anon.1254 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1254 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { { { { i8, [7 x i8], %union.anon.1254 } } } } { { { { i8, [7 x i8], %union.anon.1254 } } } { { { i8, [7 x i8], %union.anon.1254 } } { { i8, [7 x i8], %union.anon.1254 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1254 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, i64 -6148914691236517206, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [2 x i8] c"\AA\AA", { { { { i8, [7 x i8], %union.anon.799 } } } } { { { { i8, [7 x i8], %union.anon.799 } } } { { { i8, [7 x i8], %union.anon.799 } } { { i8, [7 x i8], %union.anon.799 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.799 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, %"class.mojo::PendingRemote" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.1260 { %"class.base::RefCountedData.1261"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.1261"*) } }, %"class.blink::ResourceRequestBody" { %class.scoped_refptr.1262 { %"class.blink::EncodedFormData"* inttoptr (i64 -6148914691236517206 to %"class.blink::EncodedFormData"*) }, %"class.mojo::PendingRemote.1263" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }> <{ i32 -1431655766, i32 -1431655766, %"class.WTF::TextEncoding" { i8* inttoptr (i64 -6148914691236517206 to i8*) }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, [3 x i8] c"\AA\AA\AA", [5 x i8] c"\AA\AA\AA\AA\AA" }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1210", i8, i8, [6 x i8], %class.scoped_refptr.116, %class.scoped_refptr.1215, %class.scoped_refptr.1216 } { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" } { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.WTF::TextPosition" { %"class.WTF::OrdinalNumber" { i32 -1431655766 }, %"class.WTF::OrdinalNumber" { i32 -1431655766 } }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, %"class.base::StrongAlias" { i8 -86 }, [5 x i8] c"\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::HashSet.1210" { %"class.WTF::HashTable.1211" <{ %"struct.std::__1::pair.1214"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.1214"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.116 { %"class.blink::DOMWrapperWorld"* inttoptr (i64 -6148914691236517206 to %"class.blink::DOMWrapperWorld"*) }, %class.scoped_refptr.1215 { %"class.base::RefCountedData"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData"*) }, %class.scoped_refptr.1216 { %"class.base::RefCountedData.1217"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.1217"*) } }, i32 -1431655766, i32 -1431655766, %"struct.blink::FetchParameters::ResourceWidth" <{ float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::ClientHintsPreferences" { %"struct.blink::WebEnabledClientHints" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, align 8
@.str.4 = private unnamed_addr constant [11 x i8] c"iso-8859-1\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"UTF-16LE\00", align 1
@_ZN5blink10StyleSheet18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.7 = private unnamed_addr constant [9 x i8] c"text/xml\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.9 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.12 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.14 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.16 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.17 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13XSLStyleSheetEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::XSLStyleSheet>, WTF::VectorTraits<blink::Member<blink::XSLStyleSheet> > >]\00", align 1

@_ZN5blink13XSLStyleSheetC1EPS0_RKN3WTF6StringERKNS_4KURLE = hidden unnamed_addr alias void (%"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"*, %"class.WTF::String"*, %"class.blink::KURL"*), void (%"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"*, %"class.WTF::String"*, %"class.blink::KURL"*)* @_ZN5blink13XSLStyleSheetC2EPS0_RKN3WTF6StringERKNS_4KURLE
@_ZN5blink13XSLStyleSheetC1EPNS_4NodeERKN3WTF6StringERKNS_4KURLEb = hidden unnamed_addr alias void (%"class.blink::XSLStyleSheet"*, %"class.blink::Node"*, %"class.WTF::String"*, %"class.blink::KURL"*, i1), void (%"class.blink::XSLStyleSheet"*, %"class.blink::Node"*, %"class.WTF::String"*, %"class.blink::KURL"*, i1)* @_ZN5blink13XSLStyleSheetC2EPNS_4NodeERKN3WTF6StringERKNS_4KURLEb
@_ZN5blink13XSLStyleSheetC1EPNS_8DocumentEPNS_4NodeERKN3WTF6StringERKNS_4KURLEb = hidden unnamed_addr alias void (%"class.blink::XSLStyleSheet"*, %"class.blink::Document"*, %"class.blink::Node"*, %"class.WTF::String"*, %"class.blink::KURL"*, i1), void (%"class.blink::XSLStyleSheet"*, %"class.blink::Document"*, %"class.blink::Node"*, %"class.WTF::String"*, %"class.blink::KURL"*, i1)* @_ZN5blink13XSLStyleSheetC2EPNS_8DocumentEPNS_4NodeERKN3WTF6StringERKNS_4KURLEb
@_ZN5blink13XSLStyleSheetD1Ev = hidden unnamed_addr alias void (%"class.blink::XSLStyleSheet"*), void (%"class.blink::XSLStyleSheet"*)* @_ZN5blink13XSLStyleSheetD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XSLStyleSheetC2EPS0_RKN3WTF6StringERKNS_4KURLE(%"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %5, align 8
  %6 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN5blink13XSLStyleSheetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::Node"* null, %"class.blink::Node"** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %4, %12, %27
  %30 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 3
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %30, %"class.blink::KURL"* dereferenceable(112) %3) #11
  %31 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 4
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 8
  store %struct._xmlDoc* null, %struct._xmlDoc** %33, align 8
  %34 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 9
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 10
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 11, i32 0, i32 0
  %37 = bitcast %"class.blink::HeapVector"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 18, i1 false)
  store %"class.blink::XSLStyleSheet"* %1, %"class.blink::XSLStyleSheet"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.blink::Document"* null, %"class.blink::Document"** %38, align 8
  ret void
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XSLStyleSheetC2EPNS_4NodeERKN3WTF6StringERKNS_4KURLEb(%"class.blink::XSLStyleSheet"*, %"class.blink::Node"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), i1 zeroext) unnamed_addr #0 align 2 {
  %6 = zext i1 %4 to i8
  %7 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %7, align 8
  %8 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN5blink13XSLStyleSheetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #11
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #11
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %5, %14, %29
  %32 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 3
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %32, %"class.blink::KURL"* dereferenceable(112) %3) #11
  %33 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 4
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 5
  %35 = bitcast %"class.blink::HeapVector"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #11
  %36 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 6
  store i8 %6, i8* %36, align 8
  %37 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 7
  store i8 1, i8* %37, align 1
  %38 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 8
  store %struct._xmlDoc* null, %struct._xmlDoc** %38, align 8
  %39 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 9
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 10
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 11, i32 0, i32 0
  %42 = bitcast %"class.blink::XSLStyleSheet"** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XSLStyleSheetC2EPNS_8DocumentEPNS_4NodeERKN3WTF6StringERKNS_4KURLEb(%"class.blink::XSLStyleSheet"*, %"class.blink::Document"*, %"class.blink::Node"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), i1 zeroext) unnamed_addr #0 align 2 {
  %7 = zext i1 %5 to i8
  %8 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN5blink13XSLStyleSheetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::Node"* %2, %"class.blink::Node"** %10, align 8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #11
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #11
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %6, %15, %30
  %33 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 3
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %33, %"class.blink::KURL"* dereferenceable(112) %4) #11
  %34 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 4
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 5
  %36 = bitcast %"class.blink::HeapVector"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #11
  %37 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 6
  store i8 %7, i8* %37, align 8
  %38 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 7
  store i8 1, i8* %38, align 1
  %39 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 8
  store %struct._xmlDoc* null, %struct._xmlDoc** %39, align 8
  %40 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 9
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 10
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 11, i32 0, i32 0
  store %"class.blink::XSLStyleSheet"* null, %"class.blink::XSLStyleSheet"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.blink::Document"* %1, %"class.blink::Document"** %43, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XSLStyleSheetD2Ev(%"class.blink::XSLStyleSheet"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN5blink13XSLStyleSheetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 8
  %8 = load %struct._xmlDoc*, %struct._xmlDoc** %7, align 8
  tail call void @xmlFreeDoc(%struct._xmlDoc* %8) #11
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 3
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %10) #11
  %11 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #11
  br label %27

27:                                               ; preds = %9, %23, %26
  %28 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 0
  tail call void @_ZN5blink10StyleSheetD2Ev(%"class.blink::StyleSheet"* %28) #11
  ret void
}

declare void @xmlFreeDoc(%struct._xmlDoc*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink10StyleSheetD2Ev(%"class.blink::StyleSheet"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XSLStyleSheetD0Ev(%"class.blink::XSLStyleSheet"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN5blink13XSLStyleSheetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 8
  %8 = load %struct._xmlDoc*, %struct._xmlDoc** %7, align 8
  tail call void @xmlFreeDoc(%struct._xmlDoc* %8) #11
  br label %9

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 3
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %10) #11
  %11 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #11
  br label %27

27:                                               ; preds = %9, %23, %26
  %28 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 0
  tail call void @_ZN5blink10StyleSheetD2Ev(%"class.blink::StyleSheet"* %28) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XSLStyleSheet11CheckLoadedEv(%"class.blink::XSLStyleSheet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 11, i32 0, i32 0
  %3 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %2, align 8
  %4 = icmp eq %"class.blink::XSLStyleSheet"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink13XSLStyleSheet11CheckLoadedEv(%"class.blink::XSLStyleSheet"* nonnull %3)
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Node"* %8 to i1 (%"class.blink::Node"*)***
  %12 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %12, i64 46
  %14 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::Node"* nonnull %8) #11
  br label %16

16:                                               ; preds = %6, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::XSLStyleSheet"* @_ZNK5blink13XSLStyleSheet16parentStyleSheetEv(%"class.blink::XSLStyleSheet"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 11, i32 0, i32 0
  %3 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %2, align 8
  ret %"class.blink::XSLStyleSheet"* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Node"* @_ZNK5blink13XSLStyleSheet9ownerNodeEv(%"class.blink::XSLStyleSheet"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  ret %"class.blink::Node"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct._xmlDoc* @_ZN5blink13XSLStyleSheet11GetDocumentEv(%"class.blink::XSLStyleSheet"* readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  %5 = icmp eq %"class.blink::XSLStyleSheet"* %0, null
  %6 = or i1 %4, %5
  br i1 %6, label %73, label %7

7:                                                ; preds = %1, %16
  %8 = phi %"class.blink::XSLStyleSheet"* [ %18, %16 ], [ %0, %1 ]
  %9 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %8, i64 0, i32 12, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = icmp eq %"class.blink::Document"* %10, null
  br i1 %11, label %12, label %26

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %8, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %8, i64 0, i32 11, i32 0, i32 0
  %18 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %17, align 8
  %19 = icmp eq %"class.blink::XSLStyleSheet"* %18, null
  br i1 %19, label %73, label %7

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = icmp eq %"class.blink::Document"* %24, null
  br i1 %25, label %73, label %26

26:                                               ; preds = %7, %20
  br label %27

27:                                               ; preds = %26, %41
  %28 = phi %"class.blink::XSLStyleSheet"* [ %43, %41 ], [ %0, %26 ]
  %29 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %28, i64 0, i32 12, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %31 = icmp eq %"class.blink::Document"* %30, null
  br i1 %31, label %32, label %45

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %28, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %33, align 8
  %35 = icmp eq %"class.blink::Node"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %38, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::Document"*, %"class.blink::Document"** %39, align 8
  br label %45

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %28, i64 0, i32 11, i32 0, i32 0
  %43 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %42, align 8
  %44 = icmp eq %"class.blink::XSLStyleSheet"* %43, null
  br i1 %44, label %45, label %27

45:                                               ; preds = %27, %41, %36
  %46 = phi %"class.blink::Document"* [ %40, %36 ], [ %30, %27 ], [ null, %41 ]
  %47 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %46, i64 0, i32 90, i32 0, i32 0, i32 0
  %48 = load %"class.blink::TransformSource"*, %"class.blink::TransformSource"** %47, align 8
  %49 = icmp eq %"class.blink::TransformSource"* %48, null
  br i1 %49, label %73, label %50

50:                                               ; preds = %45, %64
  %51 = phi %"class.blink::XSLStyleSheet"* [ %66, %64 ], [ %0, %45 ]
  %52 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %51, i64 0, i32 12, i32 0, i32 0
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %52, align 8
  %54 = icmp eq %"class.blink::Document"* %53, null
  br i1 %54, label %55, label %68

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %51, i64 0, i32 1, i32 0, i32 0
  %57 = load %"class.blink::Node"*, %"class.blink::Node"** %56, align 8
  %58 = icmp eq %"class.blink::Node"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %57, i64 0, i32 3, i32 0, i32 0
  %61 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::Document"*, %"class.blink::Document"** %62, align 8
  br label %68

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %51, i64 0, i32 11, i32 0, i32 0
  %66 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %65, align 8
  %67 = icmp eq %"class.blink::XSLStyleSheet"* %66, null
  br i1 %67, label %68, label %50

68:                                               ; preds = %50, %64, %59
  %69 = phi %"class.blink::Document"* [ %63, %59 ], [ %53, %50 ], [ null, %64 ]
  %70 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %69, i64 0, i32 90, i32 0, i32 0, i32 0
  %71 = load %"class.blink::TransformSource"*, %"class.blink::TransformSource"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::TransformSource", %"class.blink::TransformSource"* %71, i64 0, i32 0
  br label %75

73:                                               ; preds = %16, %45, %20, %1
  %74 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 8
  br label %75

75:                                               ; preds = %73, %68
  %76 = phi %struct._xmlDoc** [ %72, %68 ], [ %74, %73 ]
  %77 = load %struct._xmlDoc*, %struct._xmlDoc** %76, align 8
  ret %struct._xmlDoc* %77
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::Document"* @_ZN5blink13XSLStyleSheet13OwnerDocumentEv(%"class.blink::XSLStyleSheet"* readonly) local_unnamed_addr #4 align 2 {
  %2 = icmp eq %"class.blink::XSLStyleSheet"* %0, null
  br i1 %2, label %21, label %3

3:                                                ; preds = %1, %17
  %4 = phi %"class.blink::XSLStyleSheet"* [ %19, %17 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %4, i64 0, i32 12, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = icmp eq %"class.blink::Document"* %6, null
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %4, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  br label %21

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %4, i64 0, i32 11, i32 0, i32 0
  %19 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %18, align 8
  %20 = icmp eq %"class.blink::XSLStyleSheet"* %19, null
  br i1 %20, label %21, label %3

21:                                               ; preds = %17, %3, %1, %12
  %22 = phi %"class.blink::Document"* [ %16, %12 ], [ null, %1 ], [ null, %17 ], [ %6, %3 ]
  ret %"class.blink::Document"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XSLStyleSheet14ClearDocumentsEv(%"class.blink::XSLStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 8
  store %struct._xmlDoc* null, %struct._xmlDoc** %2, align 8
  %3 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 5, i32 0
  br label %9

8:                                                ; preds = %9, %1
  ret void

9:                                                ; preds = %6, %9
  %10 = phi i32 [ 0, %6 ], [ %14, %9 ]
  %11 = tail call dereferenceable(8) %"class.blink::Member.4"* @_ZN3WTF6VectorIN5blink6MemberINS1_13XSLStyleSheetEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 %10)
  %12 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %12, align 8
  tail call void @_ZN5blink13XSLStyleSheet14ClearDocumentsEv(%"class.blink::XSLStyleSheet"* %13)
  %14 = add nuw i32 %10, 1
  %15 = load i32, i32* %3, align 4
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %9, label %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.4"* @_ZN3WTF6VectorIN5blink6MemberINS1_13XSLStyleSheetEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %24, i64 %25
  ret %"class.blink::Member.4"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13XSLStyleSheet11ParseStringERKN3WTF6StringE(%"class.blink::XSLStyleSheet"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::XMLDocumentParserScope", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 9
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 8
  %10 = load %struct._xmlDoc*, %struct._xmlDoc** %9, align 8
  tail call void @xmlFreeDoc(%struct._xmlDoc* %10) #11
  br label %11

11:                                               ; preds = %2, %8
  store i8 0, i8* %5, align 8
  %12 = icmp eq %"class.blink::XSLStyleSheet"* %0, null
  br i1 %12, label %31, label %13

13:                                               ; preds = %11, %27
  %14 = phi %"class.blink::XSLStyleSheet"* [ %29, %27 ], [ %0, %11 ]
  %15 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %14, i64 0, i32 12, i32 0, i32 0
  %16 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  %17 = icmp eq %"class.blink::Document"* %16, null
  br i1 %17, label %18, label %31

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %14, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %24, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  br label %31

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %14, i64 0, i32 11, i32 0, i32 0
  %29 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %28, align 8
  %30 = icmp eq %"class.blink::XSLStyleSheet"* %29, null
  br i1 %30, label %31, label %13

31:                                               ; preds = %13, %27, %11, %22
  %32 = phi %"class.blink::Document"* [ %26, %22 ], [ null, %11 ], [ %16, %13 ], [ null, %27 ]
  %33 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %32) #11
  %34 = icmp eq %"class.blink::LocalFrame"* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %33, i64 0, i32 16, i32 0, i32 0
  %37 = load %"class.blink::FrameConsole"*, %"class.blink::FrameConsole"** %36, align 8
  br label %38

38:                                               ; preds = %31, %35
  %39 = phi %"class.blink::FrameConsole"* [ %37, %35 ], [ null, %31 ]
  %40 = bitcast %"class.blink::XMLDocumentParserScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #11
  %41 = bitcast %"class.blink::XMLDocumentParserScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false)
  br i1 %12, label %60, label %42

42:                                               ; preds = %38, %56
  %43 = phi %"class.blink::XSLStyleSheet"* [ %58, %56 ], [ %0, %38 ]
  %44 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %43, i64 0, i32 12, i32 0, i32 0
  %45 = load %"class.blink::Document"*, %"class.blink::Document"** %44, align 8
  %46 = icmp eq %"class.blink::Document"* %45, null
  br i1 %46, label %47, label %60

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %43, i64 0, i32 1, i32 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %53, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.blink::Document"*, %"class.blink::Document"** %54, align 8
  br label %60

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %43, i64 0, i32 11, i32 0, i32 0
  %58 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %57, align 8
  %59 = icmp eq %"class.blink::XSLStyleSheet"* %58, null
  br i1 %59, label %60, label %42

60:                                               ; preds = %42, %56, %38, %51
  %61 = phi %"class.blink::Document"* [ %55, %51 ], [ null, %38 ], [ %45, %42 ], [ null, %56 ]
  %62 = bitcast %"class.blink::FrameConsole"* %39 to i8*
  call void @_ZN5blink22XMLDocumentParserScopeC1EPNS_8DocumentEPFvPvPKczEPFvS3_P9_xmlErrorES3_(%"class.blink::XMLDocumentParserScope"* nonnull %3, %"class.blink::Document"* %61, void (i8*, i8*, ...)* nonnull @_ZN5blink13XSLTProcessor16GenericErrorFuncEPvPKcz, void (i8*, %struct._xmlError*)* nonnull @_ZN5blink13XSLTProcessor14ParseErrorFuncEPvP9_xmlError, i8* %62) #11
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %95, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #11
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !2

80:                                               ; preds = %71
  call void @llvm.trap() #11
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %81, %66
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %95, label %87

87:                                               ; preds = %83
  %88 = load atomic i32, i32* %67 monotonic, align 4
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  %92 = bitcast %"class.WTF::StringImpl"* %91 to i8*
  br i1 %90, label %93, label %95

93:                                               ; preds = %87
  %94 = shl i32 %85, 1
  br label %95

95:                                               ; preds = %87, %93, %60, %83
  %96 = phi i32 [ 0, %83 ], [ 0, %60 ], [ %94, %93 ], [ %85, %87 ]
  %97 = phi i8* [ null, %83 ], [ null, %60 ], [ %92, %93 ], [ %92, %87 ]
  %98 = phi i8* [ null, %83 ], [ null, %60 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), %93 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), %87 ]
  %99 = call %struct._xmlParserCtxt* @xmlCreateMemoryParserCtxt(i8* %97, i32 %96) #11
  %100 = icmp eq %struct._xmlParserCtxt* %99, null
  br i1 %100, label %133, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 11, i32 0, i32 0
  %103 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %102, align 8
  %104 = icmp eq %"class.blink::XSLStyleSheet"* %103, null
  br i1 %104, label %114, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %99, i64 0, i32 57
  %107 = load %struct._xmlDict*, %struct._xmlDict** %106, align 8
  call void @xmlDictFree(%struct._xmlDict* %107) #11
  %108 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %102, align 8
  %109 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %108, i64 0, i32 8
  %110 = load %struct._xmlDoc*, %struct._xmlDoc** %109, align 8
  %111 = getelementptr inbounds %struct._xmlDoc, %struct._xmlDoc* %110, i64 0, i32 20
  %112 = load %struct._xmlDict*, %struct._xmlDict** %111, align 8
  store %struct._xmlDict* %112, %struct._xmlDict** %106, align 8
  %113 = call i32 @xmlDictReference(%struct._xmlDict* %112) #11
  br label %114

114:                                              ; preds = %101, %105
  %115 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #11
  %116 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 3, i32 4
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* %116, i32 0) #11
  %117 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  %123 = select i1 %120, i8* %122, i8* %115
  %124 = call %struct._xmlDoc* @xmlCtxtReadMemory(%struct._xmlParserCtxt* nonnull %99, i8* %97, i32 %96, i8* %123, i8* %98, i32 16458) #11
  %125 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 8
  store %struct._xmlDoc* %124, %struct._xmlDoc** %125, align 8
  %126 = load i8, i8* %118, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %114
  %129 = load i8*, i8** %121, align 8
  call void @_ZdlPv(i8* %129) #12
  br label %130

130:                                              ; preds = %114, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #11
  call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* nonnull %99) #11
  call void @_ZN5blink13XSLStyleSheet15LoadChildSheetsEv(%"class.blink::XSLStyleSheet"* %0)
  %131 = load %struct._xmlDoc*, %struct._xmlDoc** %125, align 8
  %132 = icmp ne %struct._xmlDoc* %131, null
  br label %133

133:                                              ; preds = %95, %130
  %134 = phi i1 [ %132, %130 ], [ false, %95 ]
  br i1 %65, label %148, label %135

135:                                              ; preds = %133
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #11
  br label %148

148:                                              ; preds = %133, %144, %147
  call void @_ZN5blink22XMLDocumentParserScopeD1Ev(%"class.blink::XMLDocumentParserScope"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #11
  ret i1 %134
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink13XSLTProcessor16GenericErrorFuncEPvPKcz(i8*, i8*, ...) #1

declare void @_ZN5blink13XSLTProcessor14ParseErrorFuncEPvP9_xmlError(i8*, %struct._xmlError*) #1

declare void @_ZN5blink22XMLDocumentParserScopeC1EPNS_8DocumentEPFvPvPKczEPFvS3_P9_xmlErrorES3_(%"class.blink::XMLDocumentParserScope"*, %"class.blink::Document"*, void (i8*, i8*, ...)*, void (i8*, %struct._xmlError*)*, i8*) unnamed_addr #1

declare %struct._xmlParserCtxt* @xmlCreateMemoryParserCtxt(i8*, i32) local_unnamed_addr #1

declare void @xmlDictFree(%struct._xmlDict*) local_unnamed_addr #1

declare i32 @xmlDictReference(%struct._xmlDict*) local_unnamed_addr #1

declare %struct._xmlDoc* @xmlCtxtReadMemory(%struct._xmlParserCtxt*, i8*, i32, i8*, i8*, i32) local_unnamed_addr #1

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

declare void @xmlFreeParserCtxt(%struct._xmlParserCtxt*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XSLStyleSheet15LoadChildSheetsEv(%"class.blink::XSLStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 6
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  %8 = icmp eq %"class.blink::XSLStyleSheet"* %0, null
  %9 = or i1 %8, %7
  br i1 %9, label %76, label %10

10:                                               ; preds = %1, %19
  %11 = phi %"class.blink::XSLStyleSheet"* [ %21, %19 ], [ %0, %1 ]
  %12 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %11, i64 0, i32 12, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = icmp eq %"class.blink::Document"* %13, null
  br i1 %14, label %15, label %29

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %11, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %11, i64 0, i32 11, i32 0, i32 0
  %21 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %20, align 8
  %22 = icmp eq %"class.blink::XSLStyleSheet"* %21, null
  br i1 %22, label %76, label %10

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::Document"*, %"class.blink::Document"** %26, align 8
  %28 = icmp eq %"class.blink::Document"* %27, null
  br i1 %28, label %76, label %29

29:                                               ; preds = %10, %23
  br label %30

30:                                               ; preds = %29, %44
  %31 = phi %"class.blink::XSLStyleSheet"* [ %46, %44 ], [ %0, %29 ]
  %32 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %31, i64 0, i32 12, i32 0, i32 0
  %33 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %34 = icmp eq %"class.blink::Document"* %33, null
  br i1 %34, label %35, label %48

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %31, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %38 = icmp eq %"class.blink::Node"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %37, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  br label %48

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %31, i64 0, i32 11, i32 0, i32 0
  %46 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %45, align 8
  %47 = icmp eq %"class.blink::XSLStyleSheet"* %46, null
  br i1 %47, label %48, label %30

48:                                               ; preds = %44, %30, %39
  %49 = phi %"class.blink::Document"* [ %43, %39 ], [ null, %44 ], [ %33, %30 ]
  %50 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %49, i64 0, i32 90, i32 0, i32 0, i32 0
  %51 = load %"class.blink::TransformSource"*, %"class.blink::TransformSource"** %50, align 8
  %52 = icmp eq %"class.blink::TransformSource"* %51, null
  br i1 %52, label %76, label %53

53:                                               ; preds = %48, %67
  %54 = phi %"class.blink::XSLStyleSheet"* [ %69, %67 ], [ %0, %48 ]
  %55 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %54, i64 0, i32 12, i32 0, i32 0
  %56 = load %"class.blink::Document"*, %"class.blink::Document"** %55, align 8
  %57 = icmp eq %"class.blink::Document"* %56, null
  br i1 %57, label %58, label %71

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %54, i64 0, i32 1, i32 0, i32 0
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %59, align 8
  %61 = icmp eq %"class.blink::Node"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %60, i64 0, i32 3, i32 0, i32 0
  %64 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %64, i64 0, i32 2, i32 0, i32 0
  %66 = load %"class.blink::Document"*, %"class.blink::Document"** %65, align 8
  br label %71

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %54, i64 0, i32 11, i32 0, i32 0
  %69 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %68, align 8
  %70 = icmp eq %"class.blink::XSLStyleSheet"* %69, null
  br i1 %70, label %71, label %53

71:                                               ; preds = %67, %53, %62
  %72 = phi %"class.blink::Document"* [ %66, %62 ], [ null, %67 ], [ %56, %53 ]
  %73 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %72, i64 0, i32 90, i32 0, i32 0, i32 0
  %74 = load %"class.blink::TransformSource"*, %"class.blink::TransformSource"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::TransformSource", %"class.blink::TransformSource"* %74, i64 0, i32 0
  br label %78

76:                                               ; preds = %19, %48, %23, %1
  %77 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 8
  br label %78

78:                                               ; preds = %71, %76
  %79 = phi %struct._xmlDoc** [ %75, %71 ], [ %77, %76 ]
  %80 = load %struct._xmlDoc*, %struct._xmlDoc** %79, align 8
  %81 = icmp eq %struct._xmlDoc* %80, null
  br i1 %81, label %358, label %82

82:                                               ; preds = %78
  br i1 %9, label %149, label %83

83:                                               ; preds = %82, %92
  %84 = phi %"class.blink::XSLStyleSheet"* [ %94, %92 ], [ %0, %82 ]
  %85 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %84, i64 0, i32 12, i32 0, i32 0
  %86 = load %"class.blink::Document"*, %"class.blink::Document"** %85, align 8
  %87 = icmp eq %"class.blink::Document"* %86, null
  br i1 %87, label %88, label %102

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %84, i64 0, i32 1, i32 0, i32 0
  %90 = load %"class.blink::Node"*, %"class.blink::Node"** %89, align 8
  %91 = icmp eq %"class.blink::Node"* %90, null
  br i1 %91, label %92, label %96

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %84, i64 0, i32 11, i32 0, i32 0
  %94 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %93, align 8
  %95 = icmp eq %"class.blink::XSLStyleSheet"* %94, null
  br i1 %95, label %149, label %83

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 0, i32 3, i32 0, i32 0
  %98 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %98, i64 0, i32 2, i32 0, i32 0
  %100 = load %"class.blink::Document"*, %"class.blink::Document"** %99, align 8
  %101 = icmp eq %"class.blink::Document"* %100, null
  br i1 %101, label %149, label %102

102:                                              ; preds = %83, %96
  br label %103

103:                                              ; preds = %102, %117
  %104 = phi %"class.blink::XSLStyleSheet"* [ %119, %117 ], [ %0, %102 ]
  %105 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %104, i64 0, i32 12, i32 0, i32 0
  %106 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  %107 = icmp eq %"class.blink::Document"* %106, null
  br i1 %107, label %108, label %121

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %104, i64 0, i32 1, i32 0, i32 0
  %110 = load %"class.blink::Node"*, %"class.blink::Node"** %109, align 8
  %111 = icmp eq %"class.blink::Node"* %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %110, i64 0, i32 3, i32 0, i32 0
  %114 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %114, i64 0, i32 2, i32 0, i32 0
  %116 = load %"class.blink::Document"*, %"class.blink::Document"** %115, align 8
  br label %121

117:                                              ; preds = %108
  %118 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %104, i64 0, i32 11, i32 0, i32 0
  %119 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %118, align 8
  %120 = icmp eq %"class.blink::XSLStyleSheet"* %119, null
  br i1 %120, label %121, label %103

121:                                              ; preds = %117, %103, %112
  %122 = phi %"class.blink::Document"* [ %116, %112 ], [ null, %117 ], [ %106, %103 ]
  %123 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %122, i64 0, i32 90, i32 0, i32 0, i32 0
  %124 = load %"class.blink::TransformSource"*, %"class.blink::TransformSource"** %123, align 8
  %125 = icmp eq %"class.blink::TransformSource"* %124, null
  br i1 %125, label %149, label %126

126:                                              ; preds = %121, %140
  %127 = phi %"class.blink::XSLStyleSheet"* [ %142, %140 ], [ %0, %121 ]
  %128 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %127, i64 0, i32 12, i32 0, i32 0
  %129 = load %"class.blink::Document"*, %"class.blink::Document"** %128, align 8
  %130 = icmp eq %"class.blink::Document"* %129, null
  br i1 %130, label %131, label %144

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %127, i64 0, i32 1, i32 0, i32 0
  %133 = load %"class.blink::Node"*, %"class.blink::Node"** %132, align 8
  %134 = icmp eq %"class.blink::Node"* %133, null
  br i1 %134, label %140, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %133, i64 0, i32 3, i32 0, i32 0
  %137 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %137, i64 0, i32 2, i32 0, i32 0
  %139 = load %"class.blink::Document"*, %"class.blink::Document"** %138, align 8
  br label %144

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %127, i64 0, i32 11, i32 0, i32 0
  %142 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %141, align 8
  %143 = icmp eq %"class.blink::XSLStyleSheet"* %142, null
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %135
  %145 = phi %"class.blink::Document"* [ %139, %135 ], [ null, %140 ], [ %129, %126 ]
  %146 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %145, i64 0, i32 90, i32 0, i32 0, i32 0
  %147 = load %"class.blink::TransformSource"*, %"class.blink::TransformSource"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::TransformSource", %"class.blink::TransformSource"* %147, i64 0, i32 0
  br label %151

149:                                              ; preds = %92, %121, %96, %82
  %150 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 8
  br label %151

151:                                              ; preds = %144, %149
  %152 = phi %struct._xmlDoc** [ %148, %144 ], [ %150, %149 ]
  %153 = load %struct._xmlDoc*, %struct._xmlDoc** %152, align 8
  %154 = getelementptr inbounds %struct._xmlDoc, %struct._xmlDoc* %153, i64 0, i32 3
  %155 = load %struct._xmlNode*, %struct._xmlNode** %154, align 8
  %156 = icmp eq %struct._xmlNode* %155, null
  br i1 %156, label %166, label %157

157:                                              ; preds = %151, %162
  %158 = phi %struct._xmlNode* [ %164, %162 ], [ %155, %151 ]
  %159 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %158, i64 0, i32 1
  %160 = load i32, i32* %159, align 8
  %161 = icmp eq i32 %160, 1
  br i1 %161, label %166, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %158, i64 0, i32 6
  %164 = load %struct._xmlNode*, %struct._xmlNode** %163, align 8
  %165 = icmp eq %struct._xmlNode* %164, null
  br i1 %165, label %166, label %157

166:                                              ; preds = %162, %157, %151
  %167 = phi %struct._xmlNode* [ null, %151 ], [ %158, %157 ], [ null, %162 ]
  br i1 %7, label %259, label %168

168:                                              ; preds = %166
  br i1 %8, label %235, label %169

169:                                              ; preds = %168, %178
  %170 = phi %"class.blink::XSLStyleSheet"* [ %180, %178 ], [ %0, %168 ]
  %171 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %170, i64 0, i32 12, i32 0, i32 0
  %172 = load %"class.blink::Document"*, %"class.blink::Document"** %171, align 8
  %173 = icmp eq %"class.blink::Document"* %172, null
  br i1 %173, label %174, label %188

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %170, i64 0, i32 1, i32 0, i32 0
  %176 = load %"class.blink::Node"*, %"class.blink::Node"** %175, align 8
  %177 = icmp eq %"class.blink::Node"* %176, null
  br i1 %177, label %178, label %182

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %170, i64 0, i32 11, i32 0, i32 0
  %180 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %179, align 8
  %181 = icmp eq %"class.blink::XSLStyleSheet"* %180, null
  br i1 %181, label %235, label %169

182:                                              ; preds = %174
  %183 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %176, i64 0, i32 3, i32 0, i32 0
  %184 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %183, align 8
  %185 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %184, i64 0, i32 2, i32 0, i32 0
  %186 = load %"class.blink::Document"*, %"class.blink::Document"** %185, align 8
  %187 = icmp eq %"class.blink::Document"* %186, null
  br i1 %187, label %235, label %188

188:                                              ; preds = %169, %182
  br label %189

189:                                              ; preds = %188, %203
  %190 = phi %"class.blink::XSLStyleSheet"* [ %205, %203 ], [ %0, %188 ]
  %191 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %190, i64 0, i32 12, i32 0, i32 0
  %192 = load %"class.blink::Document"*, %"class.blink::Document"** %191, align 8
  %193 = icmp eq %"class.blink::Document"* %192, null
  br i1 %193, label %194, label %207

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %190, i64 0, i32 1, i32 0, i32 0
  %196 = load %"class.blink::Node"*, %"class.blink::Node"** %195, align 8
  %197 = icmp eq %"class.blink::Node"* %196, null
  br i1 %197, label %203, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %196, i64 0, i32 3, i32 0, i32 0
  %200 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %200, i64 0, i32 2, i32 0, i32 0
  %202 = load %"class.blink::Document"*, %"class.blink::Document"** %201, align 8
  br label %207

203:                                              ; preds = %194
  %204 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %190, i64 0, i32 11, i32 0, i32 0
  %205 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %204, align 8
  %206 = icmp eq %"class.blink::XSLStyleSheet"* %205, null
  br i1 %206, label %207, label %189

207:                                              ; preds = %203, %189, %198
  %208 = phi %"class.blink::Document"* [ %202, %198 ], [ null, %203 ], [ %192, %189 ]
  %209 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %208, i64 0, i32 90, i32 0, i32 0, i32 0
  %210 = load %"class.blink::TransformSource"*, %"class.blink::TransformSource"** %209, align 8
  %211 = icmp eq %"class.blink::TransformSource"* %210, null
  br i1 %211, label %235, label %212

212:                                              ; preds = %207, %226
  %213 = phi %"class.blink::XSLStyleSheet"* [ %228, %226 ], [ %0, %207 ]
  %214 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %213, i64 0, i32 12, i32 0, i32 0
  %215 = load %"class.blink::Document"*, %"class.blink::Document"** %214, align 8
  %216 = icmp eq %"class.blink::Document"* %215, null
  br i1 %216, label %217, label %230

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %213, i64 0, i32 1, i32 0, i32 0
  %219 = load %"class.blink::Node"*, %"class.blink::Node"** %218, align 8
  %220 = icmp eq %"class.blink::Node"* %219, null
  br i1 %220, label %226, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %219, i64 0, i32 3, i32 0, i32 0
  %223 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %222, align 8
  %224 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %223, i64 0, i32 2, i32 0, i32 0
  %225 = load %"class.blink::Document"*, %"class.blink::Document"** %224, align 8
  br label %230

226:                                              ; preds = %217
  %227 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %213, i64 0, i32 11, i32 0, i32 0
  %228 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %227, align 8
  %229 = icmp eq %"class.blink::XSLStyleSheet"* %228, null
  br i1 %229, label %230, label %212

230:                                              ; preds = %226, %212, %221
  %231 = phi %"class.blink::Document"* [ %225, %221 ], [ null, %226 ], [ %215, %212 ]
  %232 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %231, i64 0, i32 90, i32 0, i32 0, i32 0
  %233 = load %"class.blink::TransformSource"*, %"class.blink::TransformSource"** %232, align 8
  %234 = getelementptr inbounds %"class.blink::TransformSource", %"class.blink::TransformSource"* %233, i64 0, i32 0
  br label %237

235:                                              ; preds = %178, %207, %182, %168
  %236 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 8
  br label %237

237:                                              ; preds = %230, %235
  %238 = phi %struct._xmlDoc** [ %234, %230 ], [ %236, %235 ]
  %239 = load %struct._xmlDoc*, %struct._xmlDoc** %238, align 8
  %240 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %240) #11
  %241 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 3, i32 4
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.WTF::String"* %241, i32 0) #11
  %242 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %243 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %242, i64 0, i32 1, i32 0
  %244 = load i8, i8* %243, align 1
  %245 = icmp slt i8 %244, 0
  %246 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = select i1 %245, i8* %247, i8* %240
  %249 = call %struct._xmlAttr* @xmlGetID(%struct._xmlDoc* %239, i8* %248) #11
  %250 = load i8, i8* %243, align 1
  %251 = icmp slt i8 %250, 0
  br i1 %251, label %252, label %254

252:                                              ; preds = %237
  %253 = load i8*, i8** %246, align 8
  call void @_ZdlPv(i8* %253) #12
  br label %254

254:                                              ; preds = %237, %252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %240) #11
  %255 = icmp eq %struct._xmlAttr* %249, null
  br i1 %255, label %358, label %256

256:                                              ; preds = %254
  %257 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %249, i64 0, i32 5
  %258 = load %struct._xmlNode*, %struct._xmlNode** %257, align 8
  br label %259

259:                                              ; preds = %256, %166
  %260 = phi %struct._xmlNode* [ %167, %166 ], [ %258, %256 ]
  %261 = icmp eq %struct._xmlNode* %260, null
  br i1 %261, label %358, label %262

262:                                              ; preds = %259
  %263 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %260, i64 0, i32 3
  %264 = load %struct._xmlNode*, %struct._xmlNode** %263, align 8
  %265 = icmp eq %struct._xmlNode* %264, null
  br i1 %265, label %358, label %266

266:                                              ; preds = %262
  %267 = bitcast %"class.WTF::String"* %3 to i8*
  %268 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  br label %269

269:                                              ; preds = %266, %274
  %270 = phi %struct._xmlNode* [ %264, %266 ], [ %276, %274 ]
  %271 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %270, i64 0, i32 1
  %272 = load i32, i32* %271, align 8
  %273 = icmp eq i32 %272, 1
  br i1 %273, label %278, label %274

274:                                              ; preds = %269, %310
  %275 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %270, i64 0, i32 6
  %276 = load %struct._xmlNode*, %struct._xmlNode** %275, align 8
  %277 = icmp eq %struct._xmlNode* %276, null
  br i1 %277, label %358, label %269

278:                                              ; preds = %269
  %279 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %270, i64 0, i32 9
  %280 = load %struct._xmlNs*, %struct._xmlNs** %279, align 8
  %281 = icmp eq %struct._xmlNs* %280, null
  br i1 %281, label %312, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %280, i64 0, i32 2
  %284 = load i8*, i8** %283, align 8
  %285 = call i32 @xmlStrEqual(i8* %284, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0)) #11
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %312, label %287

287:                                              ; preds = %282
  %288 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %270, i64 0, i32 2
  %289 = load i8*, i8** %288, align 8
  %290 = call i32 @xmlStrEqual(i8* %289, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #11
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %312, label %292

292:                                              ; preds = %287
  %293 = call i8* @xsltGetNsProp(%struct._xmlNode* nonnull %270, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0)) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %267) #11
  %294 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %293) #11
  store %"class.WTF::StringImpl"* %294, %"class.WTF::StringImpl"** %268, align 8
  call void @_ZN5blink13XSLStyleSheet14LoadChildSheetERKN3WTF6StringE(%"class.blink::XSLStyleSheet"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  %295 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %296 = icmp eq %"class.WTF::StringImpl"* %295, null
  br i1 %296, label %310, label %297

297:                                              ; preds = %292
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load atomic i32, i32* %298 monotonic, align 4
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 0
  %303 = load i32, i32* %302, align 4
  br i1 %301, label %304, label %306

304:                                              ; preds = %297
  %305 = add i32 %303, -1
  store i32 %305, i32* %302, align 4
  br label %306

306:                                              ; preds = %304, %297
  %307 = phi i32 [ %305, %304 ], [ %303, %297 ]
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %310

309:                                              ; preds = %306
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %295) #11
  br label %310

310:                                              ; preds = %292, %306, %309
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %267) #11
  %311 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %311(i8* %293) #11
  br label %274

312:                                              ; preds = %278, %282, %287
  %313 = bitcast %"class.WTF::String"* %4 to i8*
  %314 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  br label %315

315:                                              ; preds = %312, %354
  %316 = phi %struct._xmlNode* [ %270, %312 ], [ %356, %354 ]
  %317 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %316, i64 0, i32 1
  %318 = load i32, i32* %317, align 8
  %319 = icmp eq i32 %318, 1
  br i1 %319, label %320, label %354

320:                                              ; preds = %315
  %321 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %316, i64 0, i32 9
  %322 = load %struct._xmlNs*, %struct._xmlNs** %321, align 8
  %323 = icmp eq %struct._xmlNs* %322, null
  br i1 %323, label %354, label %324

324:                                              ; preds = %320
  %325 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %322, i64 0, i32 2
  %326 = load i8*, i8** %325, align 8
  %327 = call i32 @xmlStrEqual(i8* %326, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0)) #11
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %354, label %329

329:                                              ; preds = %324
  %330 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %316, i64 0, i32 2
  %331 = load i8*, i8** %330, align 8
  %332 = call i32 @xmlStrEqual(i8* %331, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)) #11
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %354, label %334

334:                                              ; preds = %329
  %335 = call i8* @xsltGetNsProp(%struct._xmlNode* nonnull %316, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0)) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %313) #11
  %336 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %335) #11
  store %"class.WTF::StringImpl"* %336, %"class.WTF::StringImpl"** %314, align 8
  call void @_ZN5blink13XSLStyleSheet14LoadChildSheetERKN3WTF6StringE(%"class.blink::XSLStyleSheet"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %337 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %314, align 8
  %338 = icmp eq %"class.WTF::StringImpl"* %337, null
  br i1 %338, label %352, label %339

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = and i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 0
  %345 = load i32, i32* %344, align 4
  br i1 %343, label %346, label %348

346:                                              ; preds = %339
  %347 = add i32 %345, -1
  store i32 %347, i32* %344, align 4
  br label %348

348:                                              ; preds = %346, %339
  %349 = phi i32 [ %347, %346 ], [ %345, %339 ]
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %352

351:                                              ; preds = %348
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %337) #11
  br label %352

352:                                              ; preds = %334, %348, %351
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %313) #11
  %353 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %353(i8* %335) #11
  br label %354

354:                                              ; preds = %329, %324, %320, %352, %315
  %355 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %316, i64 0, i32 6
  %356 = load %struct._xmlNode*, %struct._xmlNode** %355, align 8
  %357 = icmp eq %struct._xmlNode* %356, null
  br i1 %357, label %358, label %315

358:                                              ; preds = %274, %354, %262, %254, %259, %78
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink22XMLDocumentParserScopeD1Ev(%"class.blink::XMLDocumentParserScope"*) unnamed_addr #2

declare %struct._xmlAttr* @xmlGetID(%struct._xmlDoc*, i8*) local_unnamed_addr #1

declare i32 @xmlStrEqual(i8*, i8*) local_unnamed_addr #1

declare i8* @xsltGetNsProp(%struct._xmlNode*, i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XSLStyleSheet14LoadChildSheetERKN3WTF6StringE(%"class.blink::XSLStyleSheet"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"struct.blink::ResourceLoaderOptions", align 8
  %7 = alloca %"class.blink::FetchParameters", align 8
  %8 = alloca %"class.blink::ResourceRequest", align 8
  %9 = alloca %"class.blink::KURL", align 8
  %10 = alloca %"class.blink::XSLStyleSheet"*, align 8
  %11 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 112, i1 false)
  %12 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 3
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %4, %"class.blink::KURL"* dereferenceable(112) %13) #11
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %3, %"class.blink::KURL"* nonnull dereferenceable(112) %4, %"class.WTF::String"* dereferenceable(8) %1) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %12) #11
  %14 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  br label %15

15:                                               ; preds = %20, %2
  %16 = phi %"class.blink::XSLStyleSheet"* [ %0, %2 ], [ %18, %20 ]
  %17 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %16, i64 0, i32 11, i32 0, i32 0
  %18 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %17, align 8
  %19 = icmp eq %"class.blink::XSLStyleSheet"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %14) #11
  %21 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %18, i64 0, i32 3
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %5, %"class.blink::KURL"* dereferenceable(112) %21) #11
  %22 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* nonnull dereferenceable(112) %3, %"class.blink::KURL"* nonnull dereferenceable(112) %5) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %14) #11
  br i1 %22, label %218, label %15

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 4
  %25 = bitcast %"struct.blink::ResourceLoaderOptions"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %25) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 112, i1 false)
  %26 = icmp eq %"class.blink::XSLStyleSheet"* %0, null
  br i1 %26, label %45, label %27

27:                                               ; preds = %23, %41
  %28 = phi %"class.blink::XSLStyleSheet"* [ %43, %41 ], [ %0, %23 ]
  %29 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %28, i64 0, i32 12, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %31 = icmp eq %"class.blink::Document"* %30, null
  br i1 %31, label %32, label %45

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %28, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %33, align 8
  %35 = icmp eq %"class.blink::Node"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %38, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::Document"*, %"class.blink::Document"** %39, align 8
  br label %45

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %28, i64 0, i32 11, i32 0, i32 0
  %43 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %42, align 8
  %44 = icmp eq %"class.blink::XSLStyleSheet"* %43, null
  br i1 %44, label %45, label %27

45:                                               ; preds = %27, %41, %23, %36
  %46 = phi %"class.blink::Document"* [ %40, %36 ], [ null, %23 ], [ %30, %27 ], [ null, %41 ]
  %47 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %46) #11
  %48 = call %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"* %47) #11
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* nonnull %6, %"class.blink::DOMWrapperWorld"* %48) #11
  %49 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names4kXmlE, align 8
  %50 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #11
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !2

67:                                               ; preds = %58
  call void @llvm.trap() #11
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %70

70:                                               ; preds = %68, %53, %45
  %71 = ptrtoint %"class.WTF::StringImpl"* %51 to i64
  %72 = bitcast %"struct.blink::ResourceLoaderOptions"* %6 to i64*
  %73 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  store i64 %71, i64* %72, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #11
  br label %89

89:                                               ; preds = %70, %85, %88
  %90 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %90) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 8 getelementptr inbounds (<{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.569, %class.scoped_refptr.569, %class.scoped_refptr.569, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1223, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1245", %"class.WTF::Vector.661", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1254 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.689 } } } }, { { { { i8, [7 x i8], %union.anon.689 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.799 } } } }, { { { { i8, [7 x i8], %union.anon.1254 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1254 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.799 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1260 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1210", i8, i8, [6 x i8], %class.scoped_refptr.116, %class.scoped_refptr.1215, %class.scoped_refptr.1216 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>, <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.569, %class.scoped_refptr.569, %class.scoped_refptr.569, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1223, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1245", %"class.WTF::Vector.661", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1254 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.689 } } } }, { { { { i8, [7 x i8], %union.anon.689 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.799 } } } }, { { { { i8, [7 x i8], %union.anon.1254 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1254 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.799 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1260 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1210", i8, i8, [6 x i8], %class.scoped_refptr.116, %class.scoped_refptr.1215, %class.scoped_refptr.1216 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>* @__const._ZN5blink13XSLStyleSheet14LoadChildSheetERKN3WTF6StringE.params, i64 0, i32 0, i32 0, i32 0, i32 0), i64 1344, i1 false)
  %91 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %91) #11
  br i1 %26, label %131, label %92

92:                                               ; preds = %89, %106
  %93 = phi %"class.blink::XSLStyleSheet"* [ %108, %106 ], [ %0, %89 ]
  %94 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %93, i64 0, i32 12, i32 0, i32 0
  %95 = load %"class.blink::Document"*, %"class.blink::Document"** %94, align 8
  %96 = icmp eq %"class.blink::Document"* %95, null
  br i1 %96, label %97, label %110

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %93, i64 0, i32 1, i32 0, i32 0
  %99 = load %"class.blink::Node"*, %"class.blink::Node"** %98, align 8
  %100 = icmp eq %"class.blink::Node"* %99, null
  br i1 %100, label %106, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %99, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %103, i64 0, i32 2, i32 0, i32 0
  %105 = load %"class.blink::Document"*, %"class.blink::Document"** %104, align 8
  br label %110

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %93, i64 0, i32 11, i32 0, i32 0
  %108 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %107, align 8
  %109 = icmp eq %"class.blink::XSLStyleSheet"* %108, null
  br i1 %109, label %110, label %92

110:                                              ; preds = %106, %92, %101
  %111 = phi %"class.blink::Document"* [ %105, %101 ], [ %95, %92 ], [ null, %106 ]
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %9, %"class.blink::Document"* %111, %"class.WTF::String"* dereferenceable(8) %24) #11
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %8, %"class.blink::KURL"* nonnull dereferenceable(112) %9) #11
  call void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"* nonnull %7, %"class.blink::ResourceRequest"* nonnull %8, %"struct.blink::ResourceLoaderOptions"* nonnull dereferenceable(112) %6) #11
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %8) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %91) #11
  %112 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %7, i64 0, i32 0, i32 0, i32 17
  store i32 0, i32* %112, align 8
  br label %113

113:                                              ; preds = %110, %127
  %114 = phi %"class.blink::XSLStyleSheet"* [ %129, %127 ], [ %0, %110 ]
  %115 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %114, i64 0, i32 12, i32 0, i32 0
  %116 = load %"class.blink::Document"*, %"class.blink::Document"** %115, align 8
  %117 = icmp eq %"class.blink::Document"* %116, null
  br i1 %117, label %118, label %133

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %114, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::Node"*, %"class.blink::Node"** %119, align 8
  %121 = icmp eq %"class.blink::Node"* %120, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %120, i64 0, i32 3, i32 0, i32 0
  %124 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %124, i64 0, i32 2, i32 0, i32 0
  %126 = load %"class.blink::Document"*, %"class.blink::Document"** %125, align 8
  br label %133

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %114, i64 0, i32 11, i32 0, i32 0
  %129 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %128, align 8
  %130 = icmp eq %"class.blink::XSLStyleSheet"* %129, null
  br i1 %130, label %133, label %113

131:                                              ; preds = %89
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %9, %"class.blink::Document"* null, %"class.WTF::String"* dereferenceable(8) %24) #11
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %8, %"class.blink::KURL"* nonnull dereferenceable(112) %9) #11
  call void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"* nonnull %7, %"class.blink::ResourceRequest"* nonnull %8, %"struct.blink::ResourceLoaderOptions"* nonnull dereferenceable(112) %6) #11
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %8) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %91) #11
  %132 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %7, i64 0, i32 0, i32 0, i32 17
  store i32 0, i32* %132, align 8
  br label %133

133:                                              ; preds = %113, %127, %131, %122
  %134 = phi %"class.blink::Document"* [ %126, %122 ], [ null, %131 ], [ %116, %113 ], [ null, %127 ]
  %135 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %134, i64 0, i32 14, i32 0, i32 0
  %136 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %135, align 8
  %137 = call %"class.blink::XSLStyleSheetResource"* @_ZN5blink21XSLStyleSheetResource18FetchSynchronouslyERNS_15FetchParametersEPNS_15ResourceFetcherE(%"class.blink::FetchParameters"* nonnull dereferenceable(1344) %7, %"class.blink::ResourceFetcher"* %136) #11
  %138 = getelementptr inbounds %"class.blink::XSLStyleSheetResource", %"class.blink::XSLStyleSheetResource"* %137, i64 0, i32 1
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %217, label %142

142:                                              ; preds = %133
  %143 = bitcast %"class.blink::XSLStyleSheet"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #11
  store %"class.blink::XSLStyleSheet"* inttoptr (i64 -6148914691236517206 to %"class.blink::XSLStyleSheet"*), %"class.blink::XSLStyleSheet"** %10, align 8
  %144 = ptrtoint %"class.blink::XSLStyleSheet"* %0 to i64
  %145 = getelementptr inbounds %"class.blink::XSLStyleSheetResource", %"class.blink::XSLStyleSheetResource"* %137, i64 0, i32 0, i32 0, i32 29
  %146 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %145) #11
  %147 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 208) #11
  %148 = getelementptr inbounds i8, i8* %147, i64 8
  %149 = bitcast i8* %148 to i64**
  store i64* null, i64** %149, align 8
  %150 = bitcast i8* %147 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN5blink13XSLStyleSheetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %150, align 8
  %151 = getelementptr inbounds i8, i8* %147, i64 16
  %152 = bitcast i8* %151 to %"class.blink::Node"**
  store %"class.blink::Node"* null, %"class.blink::Node"** %152, align 8
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = getelementptr inbounds i8, i8* %147, i64 24
  %156 = bitcast i8* %155 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %154, %"class.WTF::StringImpl"** %156, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %157, label %175, label %158

158:                                              ; preds = %142
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %175

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i33
  %167 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %166, i33 1) #11
  %168 = extractvalue { i33, i1 } %167, 1
  %169 = extractvalue { i33, i1 } %167, 0
  %170 = icmp slt i33 %169, 0
  %171 = or i1 %168, %170
  br i1 %171, label %172, label %173, !prof !2

172:                                              ; preds = %163
  call void @llvm.trap() #11
  unreachable

173:                                              ; preds = %163
  %174 = trunc i33 %169 to i32
  store i32 %174, i32* %164, align 4
  br label %175

175:                                              ; preds = %142, %158, %173
  %176 = getelementptr inbounds i8, i8* %147, i64 32
  %177 = bitcast i8* %176 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %177, %"class.blink::KURL"* dereferenceable(112) %146) #11
  %178 = getelementptr inbounds i8, i8* %147, i64 144
  store i8 0, i8* %178, align 8
  %179 = getelementptr inbounds i8, i8* %147, i64 152
  %180 = getelementptr inbounds i8, i8* %147, i64 176
  %181 = bitcast i8* %180 to %struct._xmlDoc**
  store %struct._xmlDoc* null, %struct._xmlDoc** %181, align 8
  %182 = getelementptr inbounds i8, i8* %147, i64 184
  store i8 0, i8* %182, align 8
  %183 = getelementptr inbounds i8, i8* %147, i64 185
  store i8 0, i8* %183, align 1
  %184 = getelementptr inbounds i8, i8* %147, i64 192
  call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 18, i1 false) #11
  %185 = bitcast i8* %184 to i64*
  store i64 %144, i64* %185, align 8
  %186 = getelementptr inbounds i8, i8* %147, i64 200
  %187 = bitcast i8* %186 to %"class.blink::Document"**
  store %"class.blink::Document"* null, %"class.blink::Document"** %187, align 8
  %188 = getelementptr inbounds i8, i8* %147, i64 -4
  %189 = bitcast i8* %188 to i16*
  %190 = load atomic i16, i16* %189 monotonic, align 2
  %191 = or i16 %190, 1
  store atomic i16 %191, i16* %189 release, align 2
  %192 = bitcast %"class.blink::XSLStyleSheet"** %10 to i8**
  store i8* %147, i8** %192, align 8
  %193 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 5, i32 0
  %194 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %197 = load i32, i32* %196, align 8
  %198 = icmp eq i32 %195, %197
  br i1 %198, label %213, label %199, !prof !2

199:                                              ; preds = %175
  %200 = ptrtoint i8* %147 to i64
  %201 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %193, i64 0, i32 0, i32 0, i32 0
  %202 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %201, align 8
  %203 = zext i32 %195 to i64
  %204 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %202, i64 %203
  %205 = bitcast %"class.blink::Member.4"* %204 to i64*
  store atomic i64 %200, i64* %205 monotonic, align 8
  %206 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %210, label %208

208:                                              ; preds = %199
  %209 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %147) #11
  br label %210

210:                                              ; preds = %208, %199
  %211 = load i32, i32* %194, align 4
  %212 = add i32 %211, 1
  store i32 %212, i32* %194, align 4
  br label %214

213:                                              ; preds = %175
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13XSLStyleSheetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"* %193, %"class.blink::XSLStyleSheet"** nonnull dereferenceable(8) %10) #11
  br label %214

214:                                              ; preds = %210, %213
  %215 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %10, align 8
  %216 = call zeroext i1 @_ZN5blink13XSLStyleSheet11ParseStringERKN3WTF6StringE(%"class.blink::XSLStyleSheet"* %215, %"class.WTF::String"* dereferenceable(8) %138)
  call void @_ZN5blink13XSLStyleSheet11CheckLoadedEv(%"class.blink::XSLStyleSheet"* %0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #11
  br label %217

217:                                              ; preds = %133, %214
  call void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %90) #11
  call void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %25) #11
  br label %218

218:                                              ; preds = %20, %217
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %11) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13XSLStyleSheet7BaseURLEv(%"class.blink::KURL"* noalias sret, %"class.blink::XSLStyleSheet"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %1, i64 0, i32 3
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* dereferenceable(112) %3) #11
  ret void
}

declare void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #1

declare %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

declare void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #2

declare %"class.blink::XSLStyleSheetResource"* @_ZN5blink21XSLStyleSheetResource18FetchSynchronouslyERNS_15FetchParametersEPNS_15ResourceFetcherE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*) local_unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xsltStylesheet* @_ZN5blink13XSLStyleSheet17CompileStyleSheetEv(%"class.blink::XSLStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %79, label %5

5:                                                ; preds = %1
  %6 = icmp eq %"class.blink::XSLStyleSheet"* %0, null
  br i1 %6, label %73, label %7

7:                                                ; preds = %5, %16
  %8 = phi %"class.blink::XSLStyleSheet"* [ %18, %16 ], [ %0, %5 ]
  %9 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %8, i64 0, i32 12, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = icmp eq %"class.blink::Document"* %10, null
  br i1 %11, label %12, label %26

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %8, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %8, i64 0, i32 11, i32 0, i32 0
  %18 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %17, align 8
  %19 = icmp eq %"class.blink::XSLStyleSheet"* %18, null
  br i1 %19, label %73, label %7

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = icmp eq %"class.blink::Document"* %24, null
  br i1 %25, label %73, label %26

26:                                               ; preds = %7, %20
  br label %27

27:                                               ; preds = %26, %41
  %28 = phi %"class.blink::XSLStyleSheet"* [ %43, %41 ], [ %0, %26 ]
  %29 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %28, i64 0, i32 12, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %31 = icmp eq %"class.blink::Document"* %30, null
  br i1 %31, label %32, label %45

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %28, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %33, align 8
  %35 = icmp eq %"class.blink::Node"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %38, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::Document"*, %"class.blink::Document"** %39, align 8
  br label %45

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %28, i64 0, i32 11, i32 0, i32 0
  %43 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %42, align 8
  %44 = icmp eq %"class.blink::XSLStyleSheet"* %43, null
  br i1 %44, label %45, label %27

45:                                               ; preds = %41, %27, %36
  %46 = phi %"class.blink::Document"* [ %40, %36 ], [ null, %41 ], [ %30, %27 ]
  %47 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %46, i64 0, i32 90, i32 0, i32 0, i32 0
  %48 = load %"class.blink::TransformSource"*, %"class.blink::TransformSource"** %47, align 8
  %49 = icmp eq %"class.blink::TransformSource"* %48, null
  br i1 %49, label %73, label %50

50:                                               ; preds = %45, %64
  %51 = phi %"class.blink::XSLStyleSheet"* [ %66, %64 ], [ %0, %45 ]
  %52 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %51, i64 0, i32 12, i32 0, i32 0
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %52, align 8
  %54 = icmp eq %"class.blink::Document"* %53, null
  br i1 %54, label %55, label %68

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %51, i64 0, i32 1, i32 0, i32 0
  %57 = load %"class.blink::Node"*, %"class.blink::Node"** %56, align 8
  %58 = icmp eq %"class.blink::Node"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %57, i64 0, i32 3, i32 0, i32 0
  %61 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::Document"*, %"class.blink::Document"** %62, align 8
  br label %68

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %51, i64 0, i32 11, i32 0, i32 0
  %66 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %65, align 8
  %67 = icmp eq %"class.blink::XSLStyleSheet"* %66, null
  br i1 %67, label %68, label %50

68:                                               ; preds = %64, %50, %59
  %69 = phi %"class.blink::Document"* [ %63, %59 ], [ null, %64 ], [ %53, %50 ]
  %70 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %69, i64 0, i32 90, i32 0, i32 0, i32 0
  %71 = load %"class.blink::TransformSource"*, %"class.blink::TransformSource"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::TransformSource", %"class.blink::TransformSource"* %71, i64 0, i32 0
  br label %75

73:                                               ; preds = %16, %45, %20, %5
  %74 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 8
  br label %75

75:                                               ; preds = %68, %73
  %76 = phi %struct._xmlDoc** [ %72, %68 ], [ %74, %73 ]
  %77 = load %struct._xmlDoc*, %struct._xmlDoc** %76, align 8
  %78 = tail call %struct._xsltStylesheet* @xsltLoadStylesheetPI(%struct._xmlDoc* %77) #11
  br label %91

79:                                               ; preds = %1
  %80 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 10
  %81 = load i8, i8* %80, align 1, !range !3
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %91

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 8
  %85 = load %struct._xmlDoc*, %struct._xmlDoc** %84, align 8
  %86 = tail call %struct._xsltStylesheet* @xsltParseStylesheetDoc(%struct._xmlDoc* %85) #11
  %87 = icmp eq %struct._xsltStylesheet* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 9
  store i8 1, i8* %89, align 8
  br label %91

90:                                               ; preds = %83
  store i8 1, i8* %80, align 1
  br label %91

91:                                               ; preds = %88, %90, %79, %75
  %92 = phi %struct._xsltStylesheet* [ %78, %75 ], [ null, %79 ], [ null, %90 ], [ %86, %88 ]
  ret %struct._xsltStylesheet* %92
}

declare %struct._xsltStylesheet* @xsltLoadStylesheetPI(%struct._xmlDoc*) local_unnamed_addr #1

declare %struct._xsltStylesheet* @xsltParseStylesheetDoc(%struct._xmlDoc*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @_ZN5blink13XSLStyleSheet27LocateStylesheetSubResourceEP7_xmlDocPKh(%"class.blink::XSLStyleSheet"*, %struct._xmlDoc*, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 6
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  %9 = icmp eq %"class.blink::XSLStyleSheet"* %0, null
  %10 = or i1 %9, %8
  br i1 %10, label %77, label %11

11:                                               ; preds = %3, %20
  %12 = phi %"class.blink::XSLStyleSheet"* [ %22, %20 ], [ %0, %3 ]
  %13 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %12, i64 0, i32 12, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = icmp eq %"class.blink::Document"* %14, null
  br i1 %15, label %16, label %30

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %12, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %12, i64 0, i32 11, i32 0, i32 0
  %22 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %21, align 8
  %23 = icmp eq %"class.blink::XSLStyleSheet"* %22, null
  br i1 %23, label %77, label %11

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = icmp eq %"class.blink::Document"* %28, null
  br i1 %29, label %77, label %30

30:                                               ; preds = %11, %24
  br label %31

31:                                               ; preds = %30, %45
  %32 = phi %"class.blink::XSLStyleSheet"* [ %47, %45 ], [ %0, %30 ]
  %33 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %32, i64 0, i32 12, i32 0, i32 0
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %33, align 8
  %35 = icmp eq %"class.blink::Document"* %34, null
  br i1 %35, label %36, label %49

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %32, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  br label %49

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %32, i64 0, i32 11, i32 0, i32 0
  %47 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %46, align 8
  %48 = icmp eq %"class.blink::XSLStyleSheet"* %47, null
  br i1 %48, label %49, label %31

49:                                               ; preds = %45, %31, %40
  %50 = phi %"class.blink::Document"* [ %44, %40 ], [ null, %45 ], [ %34, %31 ]
  %51 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %50, i64 0, i32 90, i32 0, i32 0, i32 0
  %52 = load %"class.blink::TransformSource"*, %"class.blink::TransformSource"** %51, align 8
  %53 = icmp eq %"class.blink::TransformSource"* %52, null
  br i1 %53, label %77, label %54

54:                                               ; preds = %49, %68
  %55 = phi %"class.blink::XSLStyleSheet"* [ %70, %68 ], [ %0, %49 ]
  %56 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %55, i64 0, i32 12, i32 0, i32 0
  %57 = load %"class.blink::Document"*, %"class.blink::Document"** %56, align 8
  %58 = icmp eq %"class.blink::Document"* %57, null
  br i1 %58, label %59, label %72

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %55, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.blink::Node"*, %"class.blink::Node"** %60, align 8
  %62 = icmp eq %"class.blink::Node"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 3, i32 0, i32 0
  %65 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %65, i64 0, i32 2, i32 0, i32 0
  %67 = load %"class.blink::Document"*, %"class.blink::Document"** %66, align 8
  br label %72

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %55, i64 0, i32 11, i32 0, i32 0
  %70 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %69, align 8
  %71 = icmp eq %"class.blink::XSLStyleSheet"* %70, null
  br i1 %71, label %72, label %54

72:                                               ; preds = %68, %54, %63
  %73 = phi %"class.blink::Document"* [ %67, %63 ], [ null, %68 ], [ %57, %54 ]
  %74 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %73, i64 0, i32 90, i32 0, i32 0, i32 0
  %75 = load %"class.blink::TransformSource"*, %"class.blink::TransformSource"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::TransformSource", %"class.blink::TransformSource"* %75, i64 0, i32 0
  br label %79

77:                                               ; preds = %20, %49, %24, %3
  %78 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 8
  br label %79

79:                                               ; preds = %72, %77
  %80 = phi %struct._xmlDoc** [ %76, %72 ], [ %78, %77 ]
  %81 = load %struct._xmlDoc*, %struct._xmlDoc** %80, align 8
  %82 = icmp eq %struct._xmlDoc* %81, %1
  %83 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %249, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 5, i32 0
  %88 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = bitcast %"class.WTF::String"* %5 to i8*
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %92 = bitcast %struct._xmlDoc* %1 to %struct._xmlNode*
  %93 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %96

96:                                               ; preds = %86, %244
  %97 = phi %struct._xmlDoc* [ undef, %86 ], [ %245, %244 ]
  %98 = phi i32 [ 0, %86 ], [ %246, %244 ]
  %99 = call dereferenceable(8) %"class.blink::Member.4"* @_ZN3WTF6VectorIN5blink6MemberINS1_13XSLStyleSheetEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %87, i32 %98)
  %100 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %99, i64 0, i32 0, i32 0
  %101 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %100, align 8
  br i1 %82, label %102, label %239

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %101, i64 0, i32 7
  %104 = load i8, i8* %103, align 1, !range !3
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %244

106:                                              ; preds = %102
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #11
  %107 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %101, i64 0, i32 2, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %127, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %127

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i33
  %119 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %118, i33 1) #11
  %120 = extractvalue { i33, i1 } %119, 1
  %121 = extractvalue { i33, i1 } %119, 0
  %122 = icmp slt i33 %121, 0
  %123 = or i1 %120, %122
  br i1 %123, label %124, label %125, !prof !2

124:                                              ; preds = %115
  call void @llvm.trap() #11
  unreachable

125:                                              ; preds = %115
  %126 = trunc i33 %121 to i32
  store i32 %126, i32* %116, align 4
  br label %127

127:                                              ; preds = %106, %110, %125
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %91, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5, i32 0) #11
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #11
  br label %143

143:                                              ; preds = %127, %139, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #11
  %144 = call i8* @xmlNodeGetBase(%struct._xmlDoc* %1, %struct._xmlNode* %92) #11
  %145 = load i8, i8* %94, align 1
  %146 = icmp slt i8 %145, 0
  %147 = load i8*, i8** %89, align 8
  %148 = select i1 %146, i8* %147, i8* %88
  %149 = call i8* @xmlBuildURI(i8* %148, i8* %144) #11
  %150 = call i32 @xmlStrEqual(i8* %2, i8* %149) #11
  %151 = icmp eq i32 %150, 0
  %152 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %152(i8* %144) #11
  %153 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %153(i8* %149) #11
  br i1 %151, label %232, label %154

154:                                              ; preds = %143
  store i8 1, i8* %103, align 1
  %155 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %101, i64 0, i32 9
  store i8 1, i8* %155, align 8
  %156 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %101, i64 0, i32 6
  %157 = load i8, i8* %156, align 8, !range !3
  %158 = icmp eq i8 %157, 0
  %159 = icmp eq %"class.blink::XSLStyleSheet"* %101, null
  %160 = or i1 %159, %158
  br i1 %160, label %227, label %161

161:                                              ; preds = %154, %170
  %162 = phi %"class.blink::XSLStyleSheet"* [ %172, %170 ], [ %101, %154 ]
  %163 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %162, i64 0, i32 12, i32 0, i32 0
  %164 = load %"class.blink::Document"*, %"class.blink::Document"** %163, align 8
  %165 = icmp eq %"class.blink::Document"* %164, null
  br i1 %165, label %166, label %180

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %162, i64 0, i32 1, i32 0, i32 0
  %168 = load %"class.blink::Node"*, %"class.blink::Node"** %167, align 8
  %169 = icmp eq %"class.blink::Node"* %168, null
  br i1 %169, label %170, label %174

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %162, i64 0, i32 11, i32 0, i32 0
  %172 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %171, align 8
  %173 = icmp eq %"class.blink::XSLStyleSheet"* %172, null
  br i1 %173, label %227, label %161

174:                                              ; preds = %166
  %175 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 0, i32 3, i32 0, i32 0
  %176 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %176, i64 0, i32 2, i32 0, i32 0
  %178 = load %"class.blink::Document"*, %"class.blink::Document"** %177, align 8
  %179 = icmp eq %"class.blink::Document"* %178, null
  br i1 %179, label %227, label %180

180:                                              ; preds = %161, %174
  br label %181

181:                                              ; preds = %180, %195
  %182 = phi %"class.blink::XSLStyleSheet"* [ %197, %195 ], [ %101, %180 ]
  %183 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %182, i64 0, i32 12, i32 0, i32 0
  %184 = load %"class.blink::Document"*, %"class.blink::Document"** %183, align 8
  %185 = icmp eq %"class.blink::Document"* %184, null
  br i1 %185, label %186, label %199

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %182, i64 0, i32 1, i32 0, i32 0
  %188 = load %"class.blink::Node"*, %"class.blink::Node"** %187, align 8
  %189 = icmp eq %"class.blink::Node"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %188, i64 0, i32 3, i32 0, i32 0
  %192 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %191, align 8
  %193 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %192, i64 0, i32 2, i32 0, i32 0
  %194 = load %"class.blink::Document"*, %"class.blink::Document"** %193, align 8
  br label %199

195:                                              ; preds = %186
  %196 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %182, i64 0, i32 11, i32 0, i32 0
  %197 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %196, align 8
  %198 = icmp eq %"class.blink::XSLStyleSheet"* %197, null
  br i1 %198, label %199, label %181

199:                                              ; preds = %195, %181, %190
  %200 = phi %"class.blink::Document"* [ %194, %190 ], [ null, %195 ], [ %184, %181 ]
  %201 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %200, i64 0, i32 90, i32 0, i32 0, i32 0
  %202 = load %"class.blink::TransformSource"*, %"class.blink::TransformSource"** %201, align 8
  %203 = icmp eq %"class.blink::TransformSource"* %202, null
  br i1 %203, label %227, label %204

204:                                              ; preds = %199, %218
  %205 = phi %"class.blink::XSLStyleSheet"* [ %220, %218 ], [ %101, %199 ]
  %206 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %205, i64 0, i32 12, i32 0, i32 0
  %207 = load %"class.blink::Document"*, %"class.blink::Document"** %206, align 8
  %208 = icmp eq %"class.blink::Document"* %207, null
  br i1 %208, label %209, label %222

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %205, i64 0, i32 1, i32 0, i32 0
  %211 = load %"class.blink::Node"*, %"class.blink::Node"** %210, align 8
  %212 = icmp eq %"class.blink::Node"* %211, null
  br i1 %212, label %218, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %211, i64 0, i32 3, i32 0, i32 0
  %215 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %214, align 8
  %216 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %215, i64 0, i32 2, i32 0, i32 0
  %217 = load %"class.blink::Document"*, %"class.blink::Document"** %216, align 8
  br label %222

218:                                              ; preds = %209
  %219 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %205, i64 0, i32 11, i32 0, i32 0
  %220 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %219, align 8
  %221 = icmp eq %"class.blink::XSLStyleSheet"* %220, null
  br i1 %221, label %222, label %204

222:                                              ; preds = %218, %204, %213
  %223 = phi %"class.blink::Document"* [ %217, %213 ], [ null, %218 ], [ %207, %204 ]
  %224 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %223, i64 0, i32 90, i32 0, i32 0, i32 0
  %225 = load %"class.blink::TransformSource"*, %"class.blink::TransformSource"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::TransformSource", %"class.blink::TransformSource"* %225, i64 0, i32 0
  br label %229

227:                                              ; preds = %170, %199, %174, %154
  %228 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %101, i64 0, i32 8
  br label %229

229:                                              ; preds = %222, %227
  %230 = phi %struct._xmlDoc** [ %226, %222 ], [ %228, %227 ]
  %231 = load %struct._xmlDoc*, %struct._xmlDoc** %230, align 8
  br label %232

232:                                              ; preds = %143, %229
  %233 = phi i32 [ 1, %229 ], [ 4, %143 ]
  %234 = phi %struct._xmlDoc* [ %231, %229 ], [ %97, %143 ]
  %235 = load i8, i8* %94, align 1
  %236 = icmp slt i8 %235, 0
  br i1 %236, label %237, label %242

237:                                              ; preds = %232
  %238 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %238) #12
  br label %242

239:                                              ; preds = %96
  %240 = call %struct._xmlDoc* @_ZN5blink13XSLStyleSheet27LocateStylesheetSubResourceEP7_xmlDocPKh(%"class.blink::XSLStyleSheet"* %101, %struct._xmlDoc* %1, i8* %2)
  %241 = icmp eq %struct._xmlDoc* %240, null
  br i1 %241, label %244, label %249

242:                                              ; preds = %237, %232
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #11
  %243 = icmp eq i32 %233, 4
  br i1 %243, label %244, label %249

244:                                              ; preds = %102, %242, %239
  %245 = phi %struct._xmlDoc* [ %234, %242 ], [ %97, %102 ], [ %97, %239 ]
  %246 = add nuw i32 %98, 1
  %247 = load i32, i32* %83, align 4
  %248 = icmp ult i32 %246, %247
  br i1 %248, label %96, label %249

249:                                              ; preds = %244, %239, %242, %79
  %250 = phi %struct._xmlDoc* [ null, %79 ], [ %234, %242 ], [ %240, %239 ], [ null, %244 ]
  ret %struct._xmlDoc* %250
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink13XSLStyleSheet4hrefEv(%"class.blink::XSLStyleSheet"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #11
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #11
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

declare i8* @xmlNodeGetBase(%struct._xmlDoc*, %struct._xmlNode*) local_unnamed_addr #1

declare i8* @xmlBuildURI(i8*, i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink13XSLStyleSheet15MarkAsProcessedEv(%"class.blink::XSLStyleSheet"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 7
  store i8 1, i8* %2, align 1
  %3 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 9
  store i8 1, i8* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13XSLStyleSheet5TraceEPNS_7VisitorE(%"class.blink::XSLStyleSheet"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 5
  %15 = bitcast %"class.blink::HeapVector"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  %18 = bitcast %"class.blink::HeapVector"* %14 to i8**
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %20 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, i64 11
  %22 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8** %18) #11
  br i1 %17, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %29

29:                                               ; preds = %13, %23
  %30 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 11
  %31 = bitcast %"class.blink::Member.4"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13XSLStyleSheetEE5TraceEPNS_7VisitorEPKv) #11
  br label %40

40:                                               ; preds = %29, %34
  %41 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 12
  %42 = bitcast %"class.blink::Member.6"* %41 to i64*
  %43 = load atomic i64, i64* %42 monotonic, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  %46 = inttoptr i64 %43 to i8*
  %47 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, i64 5
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %49, align 8
  tail call void %50(%"class.blink::Visitor"* %1, i8* nonnull %46, i8* nonnull %46, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #11
  br label %51

51:                                               ; preds = %40, %45
  %52 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %52, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink10StyleSheet18GetWrapperTypeInfoEv(%"class.blink::StyleSheet"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink10StyleSheet18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13XSLStyleSheet8disabledEv(%"class.blink::XSLStyleSheet"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13XSLStyleSheet11setDisabledEb(%"class.blink::XSLStyleSheet"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 4
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink13XSLStyleSheet5titleEv(%"class.blink::XSLStyleSheet"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #11
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #11
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %1, %6, %21
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::MediaList"* @_ZN5blink10StyleSheet5mediaEv(%"class.blink::StyleSheet"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::MediaList"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink13XSLStyleSheet4typeEv(%"class.blink::XSLStyleSheet"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i64 8) #11
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSRule"* @_ZNK5blink10StyleSheet9ownerRuleEv(%"class.blink::StyleSheet"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSRule"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13XSLStyleSheet14ClearOwnerNodeEv(%"class.blink::XSLStyleSheet"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::XSLStyleSheet", %"class.blink::XSLStyleSheet"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::Member"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13XSLStyleSheet9IsLoadingEv(%"class.blink::XSLStyleSheet"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10StyleSheet15IsCSSStyleSheetEv(%"class.blink::StyleSheet"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #9 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13XSLStyleSheetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::XSLStyleSheet"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13XSLStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #11
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %16, i64 %18
  %20 = bitcast %"class.blink::XSLStyleSheet"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.4"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #11
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13XSLStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %8, align 8
  %10 = icmp eq %"class.blink::Member.4"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13XSLStyleSheetEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %8, align 8
  %26 = icmp eq %"class.blink::Member.4"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.4"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13XSLStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13XSLStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13XSLStyleSheetEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.4"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.4"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13XSLStyleSheetEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.14, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.16, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13XSLStyleSheetEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.4"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.4"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13XSLStyleSheetEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13XSLStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13XSLStyleSheetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::XSLStyleSheet"*
  tail call void @_ZNK5blink13XSLStyleSheet5TraceEPNS_7VisitorE(%"class.blink::XSLStyleSheet"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
