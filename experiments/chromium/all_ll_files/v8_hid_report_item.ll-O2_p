; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_hid_report_item.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_hid_report_item.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.89", i32, [4 x i8], %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.241", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.259", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.266", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.205", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.125" = type { %"struct.std::__1::__atomic_base.126" }
%"struct.std::__1::__atomic_base.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__cxx_atomic_impl.128" }
%"struct.std::__1::__cxx_atomic_impl.128" = type { %"struct.std::__1::__cxx_atomic_base_impl.129" }
%"struct.std::__1::__cxx_atomic_base_impl.129" = type { i64 }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::Worklist.136"* }
%"class.blink::Worklist.136" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::Worklist.143"* }
%"class.blink::Worklist.143" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::Worklist.150"* }
%"class.blink::Worklist.150" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::Worklist.157"* }
%"class.blink::Worklist.157" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::Worklist.164"* }
%"class.blink::Worklist.164" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::Worklist.171"* }
%"class.blink::Worklist.171" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::Worklist.178"* }
%"class.blink::Worklist.178" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.185", %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.197", %"class.std::__1::__compressed_pair.199", [4 x i8] }>
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187", %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { i64 }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { float }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.208", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.217" }
%"class.WTF::Vector.217" = type { %"class.WTF::VectorBuffer.218" }
%"class.WTF::VectorBuffer.218" = type { %"class.WTF::VectorBufferBase.219" }
%"class.WTF::VectorBufferBase.219" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.233" }
%"class.WTF::VectorBuffer.233" = type { %"class.WTF::VectorBufferBase.234" }
%"class.WTF::VectorBufferBase.234" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.247" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.136"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.143"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.150"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.157"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.164"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.297" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.265 }
%class.scoped_refptr.265 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.266" = type { %"struct.std::__1::__atomic_base.267" }
%"struct.std::__1::__atomic_base.267" = type { %"struct.std::__1::__cxx_atomic_impl.268" }
%"struct.std::__1::__cxx_atomic_impl.268" = type { %"struct.std::__1::__cxx_atomic_base_impl.269" }
%"struct.std::__1::__cxx_atomic_base_impl.269" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::HIDReportItem" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, %"class.WTF::Vector", i8, i8, i8, i8, i8, i8, i8, i8, %"class.WTF::String", i32, i32, %"class.WTF::Vector.1", i8, [7 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3" }
%"class.WTF::VectorBufferBase.3" = type { i32*, i32, i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.33", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.83", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.270", %"class.std::__1::unique_ptr.275", %"class.blink::Persistent.281", %"class.blink::Persistent.285", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.15", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", i32, i32 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.33" = type { %"class.WTF::HashTable.34" }
%"class.WTF::HashTable.34" = type <{ %"struct.WTF::KeyValuePair.37"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.37" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.46", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.41", i8* }
%"class.WTF::HashMap.41" = type { %"class.WTF::HashTable.42" }
%"class.WTF::HashTable.42" = type <{ %"struct.WTF::KeyValuePair.45"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.45" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.46" = type { %"class.v8::PersistentValueMapBase.47" }
%"class.v8::PersistentValueMapBase.47" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.48", i8* }
%"class.WTF::HashMap.48" = type { %"class.WTF::HashTable.49" }
%"class.WTF::HashTable.49" = type <{ %"struct.WTF::KeyValuePair.52"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.52" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.53" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.67", %"class.WTF::Vector.73", i8, i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.WTF::Vector.59"* }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.61", [32 x i8] }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.304, %"class.blink::Member.323", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.304 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.305", i32, i32, %"class.blink::Persistent.307" }
%"class.WTF::RefCounted.305" = type { %"class.base::RefCounted.306" }
%"class.base::RefCounted.306" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.307" = type { %"class.blink::PersistentBase.308" }
%"class.blink::PersistentBase.308" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.313" }
%"class.WTF::HashMap.313" = type { %"class.WTF::HashTable.314" }
%"class.WTF::HashTable.314" = type <{ %"struct.WTF::KeyValuePair.316"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.316" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.320" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.320" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.320" = type { %"class.v8::TracedReference.321" }
%"class.v8::TracedReference.321" = type { %"class.v8::BasicTracedReference.322" }
%"class.v8::BasicTracedReference.322" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.270" = type { %"class.WTF::VectorBuffer.271" }
%"class.WTF::VectorBuffer.271" = type { %"class.WTF::VectorBufferBase.272" }
%"class.WTF::VectorBufferBase.272" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.281" = type { %"class.blink::PersistentBase.282" }
%"class.blink::PersistentBase.282" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.285" = type { %"class.blink::PersistentBase.286" }
%"class.blink::PersistentBase.286" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.291" }
%"class.WTF::Vector.291" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { %"struct.std::__1::pair.294"*, i32, i32 }
%"struct.std::__1::pair.294" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.325" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::Boolean" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Uint32" = type { i8 }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.6", %"class.v8::Local", %"class.v8::Local.14", %"class.v8::Local.14", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.6" = type { %"class.v8::Object"* }
%"class.v8::Local.14" = type { %"class.v8::String"* }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.v8::Array" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Integer" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::ExecutionContext" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.362 }
%union.anon.362 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18IDLIntegerTypeBaseIjLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_ = comdat any

$_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE = comdat any

$_ZN5blink20ToV8SequenceInternalIN3WTF6VectorIjLj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS5_5ArrayEEERKT_NS6_INS5_6ObjectEEEPNS5_7IsolateE = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blink15V8HIDReportItem6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13HIDReportItemERNS_14ExceptionStateEE12kValidValues = internal constant [7 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"si-linear\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"si-rotation\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"english-linear\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"english-rotation\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"vendor-defined\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"reserved\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"HIDUnitSystem\00", align 1
@_ZZN5blinkL26eternalV8HIDReportItemKeysEPN2v87IsolateEE5kKeys = internal constant [28 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0)], align 16
@.str.9 = private unnamed_addr constant [8 x i8] c"hasNull\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"hasPreferredState\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"isAbsolute\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"isArray\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"isBufferedBytes\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"isConstant\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"isLinear\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"isRange\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"isVolatile\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"logicalMaximum\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"logicalMinimum\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"physicalMaximum\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"physicalMinimum\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"reportCount\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"reportSize\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"strings\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c"unitExponent\00", align 1
@.str.26 = private unnamed_addr constant [26 x i8] c"unitFactorCurrentExponent\00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c"unitFactorLengthExponent\00", align 1
@.str.28 = private unnamed_addr constant [36 x i8] c"unitFactorLuminousIntensityExponent\00", align 1
@.str.29 = private unnamed_addr constant [23 x i8] c"unitFactorMassExponent\00", align 1
@.str.30 = private unnamed_addr constant [30 x i8] c"unitFactorTemperatureExponent\00", align 1
@.str.31 = private unnamed_addr constant [23 x i8] c"unitFactorTimeExponent\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"unitSystem\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"usageMaximum\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"usageMinimum\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"usages\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"wrap\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 28, i8** getelementptr inbounds ([28 x i8*], [28 x i8*]* @_ZZN5blinkL26eternalV8HIDReportItemKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.37 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.38 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.39 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.40 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.41 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.42 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.43 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.44 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15V8HIDReportItem6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13HIDReportItemERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::HIDReportItem"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.WTF::Vector", align 8
  %8 = alloca %"class.blink::V8StringResource", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::Vector.1", align 8
  %12 = icmp eq %"class.v8::Value"* %1, null
  br i1 %12, label %1662, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.v8::Value"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 3
  %17 = icmp eq i64 %16, 1
  br i1 %17, label %18, label %34

18:                                               ; preds = %13
  %19 = add i64 %15, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = and i64 %15, -4294967296
  %23 = zext i32 %21 to i64
  %24 = or i64 %22, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load i16, i16* %26, align 2
  %28 = icmp eq i16 %27, 67
  br i1 %28, label %29, label %34

29:                                               ; preds = %18
  %30 = add i64 %15, 23
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = ashr i32 %32, 1
  switch i32 %33, label %34 [
    i32 5, label %1662
    i32 3, label %1662
  ]

34:                                               ; preds = %29, %18, %13
  %35 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #8
  br i1 %35, label %37, label %36

36:                                               ; preds = %34
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #8
  br label %1662

37:                                               ; preds = %34
  %38 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %39 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %40 = add i64 %39, 8
  %41 = inttoptr i64 %40 to %"class.blink::V8PerIsolateData"**
  %42 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %41, align 8
  %43 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %42, i8* bitcast ([28 x i8*]* @_ZZN5blinkL26eternalV8HIDReportItemKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.325"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.325"*)) #8
  %44 = extractvalue { i64, %"class.v8::Eternal"* } %43, 1
  %45 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %45) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %0) #8
  %46 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #8
  %47 = bitcast %"class.v8::Eternal"* %44 to %"class.v8::Value"**
  %48 = load %"class.v8::Value"*, %"class.v8::Value"** %47, align 8
  %49 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %48) #8
  %50 = icmp eq %"class.v8::Value"* %49, null
  br i1 %50, label %51, label %57

51:                                               ; preds = %37
  %52 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %53 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %54 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %54, i64 5
  %56 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %55, align 8
  call void %56(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %52) #8
  br label %1661

57:                                               ; preds = %37
  %58 = bitcast %"class.v8::Value"* %49 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, 3
  %61 = icmp eq i64 %60, 1
  br i1 %61, label %62, label %79

62:                                               ; preds = %57
  %63 = add i64 %59, -1
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = and i64 %59, -4294967296
  %67 = zext i32 %65 to i64
  %68 = or i64 %66, %67
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp eq i16 %71, 67
  br i1 %72, label %73, label %79

73:                                               ; preds = %62
  %74 = add i64 %59, 23
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = and i32 %76, -2
  %78 = icmp eq i32 %77, 10
  br i1 %78, label %95, label %79

79:                                               ; preds = %62, %57, %73
  %80 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %49) #8
  br i1 %80, label %81, label %84, !prof !2

81:                                               ; preds = %79
  %82 = bitcast %"class.v8::Value"* %49 to %"class.v8::Boolean"*
  %83 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %82) #8
  br label %86

84:                                               ; preds = %79
  %85 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %49, %"class.v8::Isolate"* %0) #8
  br label %86

86:                                               ; preds = %81, %84
  %87 = phi i1 [ %83, %81 ], [ %85, %84 ]
  %88 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %1661

91:                                               ; preds = %86
  %92 = zext i1 %87 to i8
  %93 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 28
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 1
  store i8 1, i8* %94, align 8
  br label %95

95:                                               ; preds = %91, %73
  %96 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 1, i32 0
  %97 = bitcast %"class.v8::Name"** %96 to %"class.v8::Value"**
  %98 = load %"class.v8::Value"*, %"class.v8::Value"** %97, align 8
  %99 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %98) #8
  %100 = icmp eq %"class.v8::Value"* %99, null
  br i1 %100, label %101, label %107

101:                                              ; preds = %95
  %102 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %103 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %104 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %104, i64 5
  %106 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %105, align 8
  call void %106(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %102) #8
  br label %1661

107:                                              ; preds = %95
  %108 = bitcast %"class.v8::Value"* %99 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = and i64 %109, 3
  %111 = icmp eq i64 %110, 1
  br i1 %111, label %112, label %129

112:                                              ; preds = %107
  %113 = add i64 %109, -1
  %114 = inttoptr i64 %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = and i64 %109, -4294967296
  %117 = zext i32 %115 to i64
  %118 = or i64 %116, %117
  %119 = add i64 %118, 7
  %120 = inttoptr i64 %119 to i16*
  %121 = load i16, i16* %120, align 2
  %122 = icmp eq i16 %121, 67
  br i1 %122, label %123, label %129

123:                                              ; preds = %112
  %124 = add i64 %109, 23
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, -2
  %128 = icmp eq i32 %127, 10
  br i1 %128, label %145, label %129

129:                                              ; preds = %112, %107, %123
  %130 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %99) #8
  br i1 %130, label %131, label %134, !prof !2

131:                                              ; preds = %129
  %132 = bitcast %"class.v8::Value"* %99 to %"class.v8::Boolean"*
  %133 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %132) #8
  br label %136

134:                                              ; preds = %129
  %135 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %99, %"class.v8::Isolate"* %0) #8
  br label %136

136:                                              ; preds = %131, %134
  %137 = phi i1 [ %133, %131 ], [ %135, %134 ]
  %138 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %1661

141:                                              ; preds = %136
  %142 = zext i1 %137 to i8
  %143 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 29
  store i8 %142, i8* %143, align 4
  %144 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 2
  store i8 1, i8* %144, align 1
  br label %145

145:                                              ; preds = %141, %123
  %146 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 2, i32 0
  %147 = bitcast %"class.v8::Name"** %146 to %"class.v8::Value"**
  %148 = load %"class.v8::Value"*, %"class.v8::Value"** %147, align 8
  %149 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %148) #8
  %150 = icmp eq %"class.v8::Value"* %149, null
  br i1 %150, label %151, label %157

151:                                              ; preds = %145
  %152 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %153 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %154 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %154, i64 5
  %156 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %155, align 8
  call void %156(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %152) #8
  br label %1661

157:                                              ; preds = %145
  %158 = bitcast %"class.v8::Value"* %149 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = and i64 %159, 3
  %161 = icmp eq i64 %160, 1
  br i1 %161, label %162, label %179

162:                                              ; preds = %157
  %163 = add i64 %159, -1
  %164 = inttoptr i64 %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = and i64 %159, -4294967296
  %167 = zext i32 %165 to i64
  %168 = or i64 %166, %167
  %169 = add i64 %168, 7
  %170 = inttoptr i64 %169 to i16*
  %171 = load i16, i16* %170, align 2
  %172 = icmp eq i16 %171, 67
  br i1 %172, label %173, label %179

173:                                              ; preds = %162
  %174 = add i64 %159, 23
  %175 = inttoptr i64 %174 to i32*
  %176 = load i32, i32* %175, align 4
  %177 = and i32 %176, -2
  %178 = icmp eq i32 %177, 10
  br i1 %178, label %195, label %179

179:                                              ; preds = %162, %157, %173
  %180 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %149) #8
  br i1 %180, label %181, label %184, !prof !2

181:                                              ; preds = %179
  %182 = bitcast %"class.v8::Value"* %149 to %"class.v8::Boolean"*
  %183 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %182) #8
  br label %186

184:                                              ; preds = %179
  %185 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %149, %"class.v8::Isolate"* %0) #8
  br label %186

186:                                              ; preds = %181, %184
  %187 = phi i1 [ %183, %181 ], [ %185, %184 ]
  %188 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %189 = load i32, i32* %188, align 8
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %1661

191:                                              ; preds = %186
  %192 = zext i1 %187 to i8
  %193 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 30
  store i8 %192, i8* %193, align 1
  %194 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 3
  store i8 1, i8* %194, align 2
  br label %195

195:                                              ; preds = %191, %173
  %196 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 3, i32 0
  %197 = bitcast %"class.v8::Name"** %196 to %"class.v8::Value"**
  %198 = load %"class.v8::Value"*, %"class.v8::Value"** %197, align 8
  %199 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %198) #8
  %200 = icmp eq %"class.v8::Value"* %199, null
  br i1 %200, label %201, label %207

201:                                              ; preds = %195
  %202 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %203 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %204 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %203, align 8
  %205 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %204, i64 5
  %206 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %205, align 8
  call void %206(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %202) #8
  br label %1661

207:                                              ; preds = %195
  %208 = bitcast %"class.v8::Value"* %199 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = and i64 %209, 3
  %211 = icmp eq i64 %210, 1
  br i1 %211, label %212, label %229

212:                                              ; preds = %207
  %213 = add i64 %209, -1
  %214 = inttoptr i64 %213 to i32*
  %215 = load i32, i32* %214, align 4
  %216 = and i64 %209, -4294967296
  %217 = zext i32 %215 to i64
  %218 = or i64 %216, %217
  %219 = add i64 %218, 7
  %220 = inttoptr i64 %219 to i16*
  %221 = load i16, i16* %220, align 2
  %222 = icmp eq i16 %221, 67
  br i1 %222, label %223, label %229

223:                                              ; preds = %212
  %224 = add i64 %209, 23
  %225 = inttoptr i64 %224 to i32*
  %226 = load i32, i32* %225, align 4
  %227 = and i32 %226, -2
  %228 = icmp eq i32 %227, 10
  br i1 %228, label %245, label %229

229:                                              ; preds = %212, %207, %223
  %230 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %199) #8
  br i1 %230, label %231, label %234, !prof !2

231:                                              ; preds = %229
  %232 = bitcast %"class.v8::Value"* %199 to %"class.v8::Boolean"*
  %233 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %232) #8
  br label %236

234:                                              ; preds = %229
  %235 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %199, %"class.v8::Isolate"* %0) #8
  br label %236

236:                                              ; preds = %231, %234
  %237 = phi i1 [ %233, %231 ], [ %235, %234 ]
  %238 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %239 = load i32, i32* %238, align 8
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %1661

241:                                              ; preds = %236
  %242 = zext i1 %237 to i8
  %243 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 31
  store i8 %242, i8* %243, align 2
  %244 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 4
  store i8 1, i8* %244, align 1
  br label %245

245:                                              ; preds = %241, %223
  %246 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 4, i32 0
  %247 = bitcast %"class.v8::Name"** %246 to %"class.v8::Value"**
  %248 = load %"class.v8::Value"*, %"class.v8::Value"** %247, align 8
  %249 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %248) #8
  %250 = icmp eq %"class.v8::Value"* %249, null
  br i1 %250, label %251, label %257

251:                                              ; preds = %245
  %252 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %253 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %254 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %253, align 8
  %255 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %254, i64 5
  %256 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %255, align 8
  call void %256(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %252) #8
  br label %1661

257:                                              ; preds = %245
  %258 = bitcast %"class.v8::Value"* %249 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = and i64 %259, 3
  %261 = icmp eq i64 %260, 1
  br i1 %261, label %262, label %279

262:                                              ; preds = %257
  %263 = add i64 %259, -1
  %264 = inttoptr i64 %263 to i32*
  %265 = load i32, i32* %264, align 4
  %266 = and i64 %259, -4294967296
  %267 = zext i32 %265 to i64
  %268 = or i64 %266, %267
  %269 = add i64 %268, 7
  %270 = inttoptr i64 %269 to i16*
  %271 = load i16, i16* %270, align 2
  %272 = icmp eq i16 %271, 67
  br i1 %272, label %273, label %279

273:                                              ; preds = %262
  %274 = add i64 %259, 23
  %275 = inttoptr i64 %274 to i32*
  %276 = load i32, i32* %275, align 4
  %277 = and i32 %276, -2
  %278 = icmp eq i32 %277, 10
  br i1 %278, label %295, label %279

279:                                              ; preds = %262, %257, %273
  %280 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %249) #8
  br i1 %280, label %281, label %284, !prof !2

281:                                              ; preds = %279
  %282 = bitcast %"class.v8::Value"* %249 to %"class.v8::Boolean"*
  %283 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %282) #8
  br label %286

284:                                              ; preds = %279
  %285 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %249, %"class.v8::Isolate"* %0) #8
  br label %286

286:                                              ; preds = %281, %284
  %287 = phi i1 [ %283, %281 ], [ %285, %284 ]
  %288 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %289 = load i32, i32* %288, align 8
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %1661

291:                                              ; preds = %286
  %292 = zext i1 %287 to i8
  %293 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 32
  store i8 %292, i8* %293, align 1
  %294 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 5
  store i8 1, i8* %294, align 4
  br label %295

295:                                              ; preds = %291, %273
  %296 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 5, i32 0
  %297 = bitcast %"class.v8::Name"** %296 to %"class.v8::Value"**
  %298 = load %"class.v8::Value"*, %"class.v8::Value"** %297, align 8
  %299 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %298) #8
  %300 = icmp eq %"class.v8::Value"* %299, null
  br i1 %300, label %301, label %307

301:                                              ; preds = %295
  %302 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %303 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %304 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %303, align 8
  %305 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %304, i64 5
  %306 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %305, align 8
  call void %306(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %302) #8
  br label %1661

307:                                              ; preds = %295
  %308 = bitcast %"class.v8::Value"* %299 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = and i64 %309, 3
  %311 = icmp eq i64 %310, 1
  br i1 %311, label %312, label %329

312:                                              ; preds = %307
  %313 = add i64 %309, -1
  %314 = inttoptr i64 %313 to i32*
  %315 = load i32, i32* %314, align 4
  %316 = and i64 %309, -4294967296
  %317 = zext i32 %315 to i64
  %318 = or i64 %316, %317
  %319 = add i64 %318, 7
  %320 = inttoptr i64 %319 to i16*
  %321 = load i16, i16* %320, align 2
  %322 = icmp eq i16 %321, 67
  br i1 %322, label %323, label %329

323:                                              ; preds = %312
  %324 = add i64 %309, 23
  %325 = inttoptr i64 %324 to i32*
  %326 = load i32, i32* %325, align 4
  %327 = and i32 %326, -2
  %328 = icmp eq i32 %327, 10
  br i1 %328, label %345, label %329

329:                                              ; preds = %312, %307, %323
  %330 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %299) #8
  br i1 %330, label %331, label %334, !prof !2

331:                                              ; preds = %329
  %332 = bitcast %"class.v8::Value"* %299 to %"class.v8::Boolean"*
  %333 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %332) #8
  br label %336

334:                                              ; preds = %329
  %335 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %299, %"class.v8::Isolate"* %0) #8
  br label %336

336:                                              ; preds = %331, %334
  %337 = phi i1 [ %333, %331 ], [ %335, %334 ]
  %338 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %339 = load i32, i32* %338, align 8
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %1661

341:                                              ; preds = %336
  %342 = zext i1 %337 to i8
  %343 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 33
  store i8 %342, i8* %343, align 8
  %344 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 6
  store i8 1, i8* %344, align 1
  br label %345

345:                                              ; preds = %341, %323
  %346 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 6, i32 0
  %347 = bitcast %"class.v8::Name"** %346 to %"class.v8::Value"**
  %348 = load %"class.v8::Value"*, %"class.v8::Value"** %347, align 8
  %349 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %348) #8
  %350 = icmp eq %"class.v8::Value"* %349, null
  br i1 %350, label %351, label %357

351:                                              ; preds = %345
  %352 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %353 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %354 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %353, align 8
  %355 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %354, i64 5
  %356 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %355, align 8
  call void %356(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %352) #8
  br label %1661

357:                                              ; preds = %345
  %358 = bitcast %"class.v8::Value"* %349 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = and i64 %359, 3
  %361 = icmp eq i64 %360, 1
  br i1 %361, label %362, label %379

362:                                              ; preds = %357
  %363 = add i64 %359, -1
  %364 = inttoptr i64 %363 to i32*
  %365 = load i32, i32* %364, align 4
  %366 = and i64 %359, -4294967296
  %367 = zext i32 %365 to i64
  %368 = or i64 %366, %367
  %369 = add i64 %368, 7
  %370 = inttoptr i64 %369 to i16*
  %371 = load i16, i16* %370, align 2
  %372 = icmp eq i16 %371, 67
  br i1 %372, label %373, label %379

373:                                              ; preds = %362
  %374 = add i64 %359, 23
  %375 = inttoptr i64 %374 to i32*
  %376 = load i32, i32* %375, align 4
  %377 = and i32 %376, -2
  %378 = icmp eq i32 %377, 10
  br i1 %378, label %395, label %379

379:                                              ; preds = %362, %357, %373
  %380 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %349) #8
  br i1 %380, label %381, label %384, !prof !2

381:                                              ; preds = %379
  %382 = bitcast %"class.v8::Value"* %349 to %"class.v8::Boolean"*
  %383 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %382) #8
  br label %386

384:                                              ; preds = %379
  %385 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %349, %"class.v8::Isolate"* %0) #8
  br label %386

386:                                              ; preds = %381, %384
  %387 = phi i1 [ %383, %381 ], [ %385, %384 ]
  %388 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %389 = load i32, i32* %388, align 8
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %1661

391:                                              ; preds = %386
  %392 = zext i1 %387 to i8
  %393 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 34
  store i8 %392, i8* %393, align 1
  %394 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 7
  store i8 1, i8* %394, align 2
  br label %395

395:                                              ; preds = %391, %373
  %396 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 7, i32 0
  %397 = bitcast %"class.v8::Name"** %396 to %"class.v8::Value"**
  %398 = load %"class.v8::Value"*, %"class.v8::Value"** %397, align 8
  %399 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %398) #8
  %400 = icmp eq %"class.v8::Value"* %399, null
  br i1 %400, label %401, label %407

401:                                              ; preds = %395
  %402 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %403 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %404 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %403, align 8
  %405 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %404, i64 5
  %406 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %405, align 8
  call void %406(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %402) #8
  br label %1661

407:                                              ; preds = %395
  %408 = bitcast %"class.v8::Value"* %399 to i64*
  %409 = load i64, i64* %408, align 8
  %410 = and i64 %409, 3
  %411 = icmp eq i64 %410, 1
  br i1 %411, label %412, label %429

412:                                              ; preds = %407
  %413 = add i64 %409, -1
  %414 = inttoptr i64 %413 to i32*
  %415 = load i32, i32* %414, align 4
  %416 = and i64 %409, -4294967296
  %417 = zext i32 %415 to i64
  %418 = or i64 %416, %417
  %419 = add i64 %418, 7
  %420 = inttoptr i64 %419 to i16*
  %421 = load i16, i16* %420, align 2
  %422 = icmp eq i16 %421, 67
  br i1 %422, label %423, label %429

423:                                              ; preds = %412
  %424 = add i64 %409, 23
  %425 = inttoptr i64 %424 to i32*
  %426 = load i32, i32* %425, align 4
  %427 = and i32 %426, -2
  %428 = icmp eq i32 %427, 10
  br i1 %428, label %445, label %429

429:                                              ; preds = %412, %407, %423
  %430 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %399) #8
  br i1 %430, label %431, label %434, !prof !2

431:                                              ; preds = %429
  %432 = bitcast %"class.v8::Value"* %399 to %"class.v8::Boolean"*
  %433 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %432) #8
  br label %436

434:                                              ; preds = %429
  %435 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %399, %"class.v8::Isolate"* %0) #8
  br label %436

436:                                              ; preds = %431, %434
  %437 = phi i1 [ %433, %431 ], [ %435, %434 ]
  %438 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %439 = load i32, i32* %438, align 8
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %441, label %1661

441:                                              ; preds = %436
  %442 = zext i1 %437 to i8
  %443 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 35
  store i8 %442, i8* %443, align 2
  %444 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 8
  store i8 1, i8* %444, align 1
  br label %445

445:                                              ; preds = %441, %423
  %446 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 8, i32 0
  %447 = bitcast %"class.v8::Name"** %446 to %"class.v8::Value"**
  %448 = load %"class.v8::Value"*, %"class.v8::Value"** %447, align 8
  %449 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %448) #8
  %450 = icmp eq %"class.v8::Value"* %449, null
  br i1 %450, label %451, label %457

451:                                              ; preds = %445
  %452 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %453 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %454 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %453, align 8
  %455 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %454, i64 5
  %456 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %455, align 8
  call void %456(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %452) #8
  br label %1661

457:                                              ; preds = %445
  %458 = bitcast %"class.v8::Value"* %449 to i64*
  %459 = load i64, i64* %458, align 8
  %460 = and i64 %459, 3
  %461 = icmp eq i64 %460, 1
  br i1 %461, label %462, label %479

462:                                              ; preds = %457
  %463 = add i64 %459, -1
  %464 = inttoptr i64 %463 to i32*
  %465 = load i32, i32* %464, align 4
  %466 = and i64 %459, -4294967296
  %467 = zext i32 %465 to i64
  %468 = or i64 %466, %467
  %469 = add i64 %468, 7
  %470 = inttoptr i64 %469 to i16*
  %471 = load i16, i16* %470, align 2
  %472 = icmp eq i16 %471, 67
  br i1 %472, label %473, label %479

473:                                              ; preds = %462
  %474 = add i64 %459, 23
  %475 = inttoptr i64 %474 to i32*
  %476 = load i32, i32* %475, align 4
  %477 = and i32 %476, -2
  %478 = icmp eq i32 %477, 10
  br i1 %478, label %495, label %479

479:                                              ; preds = %462, %457, %473
  %480 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %449) #8
  br i1 %480, label %481, label %484, !prof !2

481:                                              ; preds = %479
  %482 = bitcast %"class.v8::Value"* %449 to %"class.v8::Boolean"*
  %483 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %482) #8
  br label %486

484:                                              ; preds = %479
  %485 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %449, %"class.v8::Isolate"* %0) #8
  br label %486

486:                                              ; preds = %481, %484
  %487 = phi i1 [ %483, %481 ], [ %485, %484 ]
  %488 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %489 = load i32, i32* %488, align 8
  %490 = icmp eq i32 %489, 0
  br i1 %490, label %491, label %1661

491:                                              ; preds = %486
  %492 = zext i1 %487 to i8
  %493 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 36
  store i8 %492, i8* %493, align 1
  %494 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 9
  store i8 1, i8* %494, align 8
  br label %495

495:                                              ; preds = %491, %473
  %496 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 9, i32 0
  %497 = bitcast %"class.v8::Name"** %496 to %"class.v8::Value"**
  %498 = load %"class.v8::Value"*, %"class.v8::Value"** %497, align 8
  %499 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %498) #8
  %500 = icmp eq %"class.v8::Value"* %499, null
  br i1 %500, label %501, label %507

501:                                              ; preds = %495
  %502 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %503 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %504 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %503, align 8
  %505 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %504, i64 5
  %506 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %505, align 8
  call void %506(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %502) #8
  br label %1661

507:                                              ; preds = %495
  %508 = bitcast %"class.v8::Value"* %499 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = and i64 %509, 3
  %511 = icmp eq i64 %510, 1
  br i1 %511, label %512, label %529

512:                                              ; preds = %507
  %513 = add i64 %509, -1
  %514 = inttoptr i64 %513 to i32*
  %515 = load i32, i32* %514, align 4
  %516 = and i64 %509, -4294967296
  %517 = zext i32 %515 to i64
  %518 = or i64 %516, %517
  %519 = add i64 %518, 7
  %520 = inttoptr i64 %519 to i16*
  %521 = load i16, i16* %520, align 2
  %522 = icmp eq i16 %521, 67
  br i1 %522, label %523, label %529

523:                                              ; preds = %512
  %524 = add i64 %509, 23
  %525 = inttoptr i64 %524 to i32*
  %526 = load i32, i32* %525, align 4
  %527 = and i32 %526, -2
  %528 = icmp eq i32 %527, 10
  br i1 %528, label %544, label %529

529:                                              ; preds = %512, %507, %523
  %530 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %499) #8
  br i1 %530, label %531, label %534, !prof !2

531:                                              ; preds = %529
  %532 = bitcast %"class.v8::Value"* %499 to %"class.v8::Int32"*
  %533 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %532) #8
  br label %536

534:                                              ; preds = %529
  %535 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %499, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %536

536:                                              ; preds = %531, %534
  %537 = phi i32 [ %533, %531 ], [ %535, %534 ]
  %538 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %539 = load i32, i32* %538, align 8
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %1661

541:                                              ; preds = %536
  %542 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 37
  store i32 %537, i32* %542, align 4
  %543 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 10
  store i8 1, i8* %543, align 1
  br label %544

544:                                              ; preds = %541, %523
  %545 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 10, i32 0
  %546 = bitcast %"class.v8::Name"** %545 to %"class.v8::Value"**
  %547 = load %"class.v8::Value"*, %"class.v8::Value"** %546, align 8
  %548 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %547) #8
  %549 = icmp eq %"class.v8::Value"* %548, null
  br i1 %549, label %550, label %556

550:                                              ; preds = %544
  %551 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %552 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %553 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %552, align 8
  %554 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %553, i64 5
  %555 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %554, align 8
  call void %555(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %551) #8
  br label %1661

556:                                              ; preds = %544
  %557 = bitcast %"class.v8::Value"* %548 to i64*
  %558 = load i64, i64* %557, align 8
  %559 = and i64 %558, 3
  %560 = icmp eq i64 %559, 1
  br i1 %560, label %561, label %578

561:                                              ; preds = %556
  %562 = add i64 %558, -1
  %563 = inttoptr i64 %562 to i32*
  %564 = load i32, i32* %563, align 4
  %565 = and i64 %558, -4294967296
  %566 = zext i32 %564 to i64
  %567 = or i64 %565, %566
  %568 = add i64 %567, 7
  %569 = inttoptr i64 %568 to i16*
  %570 = load i16, i16* %569, align 2
  %571 = icmp eq i16 %570, 67
  br i1 %571, label %572, label %578

572:                                              ; preds = %561
  %573 = add i64 %558, 23
  %574 = inttoptr i64 %573 to i32*
  %575 = load i32, i32* %574, align 4
  %576 = and i32 %575, -2
  %577 = icmp eq i32 %576, 10
  br i1 %577, label %593, label %578

578:                                              ; preds = %561, %556, %572
  %579 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %548) #8
  br i1 %579, label %580, label %583, !prof !2

580:                                              ; preds = %578
  %581 = bitcast %"class.v8::Value"* %548 to %"class.v8::Int32"*
  %582 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %581) #8
  br label %585

583:                                              ; preds = %578
  %584 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %548, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %585

585:                                              ; preds = %580, %583
  %586 = phi i32 [ %582, %580 ], [ %584, %583 ]
  %587 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %588 = load i32, i32* %587, align 8
  %589 = icmp eq i32 %588, 0
  br i1 %589, label %590, label %1661

590:                                              ; preds = %585
  %591 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 38
  store i32 %586, i32* %591, align 8
  %592 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 11
  store i8 1, i8* %592, align 2
  br label %593

593:                                              ; preds = %590, %572
  %594 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 11, i32 0
  %595 = bitcast %"class.v8::Name"** %594 to %"class.v8::Value"**
  %596 = load %"class.v8::Value"*, %"class.v8::Value"** %595, align 8
  %597 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %596) #8
  %598 = icmp eq %"class.v8::Value"* %597, null
  br i1 %598, label %599, label %605

599:                                              ; preds = %593
  %600 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %601 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %602 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %601, align 8
  %603 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %602, i64 5
  %604 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %603, align 8
  call void %604(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %600) #8
  br label %1661

605:                                              ; preds = %593
  %606 = bitcast %"class.v8::Value"* %597 to i64*
  %607 = load i64, i64* %606, align 8
  %608 = and i64 %607, 3
  %609 = icmp eq i64 %608, 1
  br i1 %609, label %610, label %627

610:                                              ; preds = %605
  %611 = add i64 %607, -1
  %612 = inttoptr i64 %611 to i32*
  %613 = load i32, i32* %612, align 4
  %614 = and i64 %607, -4294967296
  %615 = zext i32 %613 to i64
  %616 = or i64 %614, %615
  %617 = add i64 %616, 7
  %618 = inttoptr i64 %617 to i16*
  %619 = load i16, i16* %618, align 2
  %620 = icmp eq i16 %619, 67
  br i1 %620, label %621, label %627

621:                                              ; preds = %610
  %622 = add i64 %607, 23
  %623 = inttoptr i64 %622 to i32*
  %624 = load i32, i32* %623, align 4
  %625 = and i32 %624, -2
  %626 = icmp eq i32 %625, 10
  br i1 %626, label %642, label %627

627:                                              ; preds = %610, %605, %621
  %628 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %597) #8
  br i1 %628, label %629, label %632, !prof !2

629:                                              ; preds = %627
  %630 = bitcast %"class.v8::Value"* %597 to %"class.v8::Int32"*
  %631 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %630) #8
  br label %634

632:                                              ; preds = %627
  %633 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %597, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %634

634:                                              ; preds = %629, %632
  %635 = phi i32 [ %631, %629 ], [ %633, %632 ]
  %636 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %637 = load i32, i32* %636, align 8
  %638 = icmp eq i32 %637, 0
  br i1 %638, label %639, label %1661

639:                                              ; preds = %634
  %640 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 39
  store i32 %635, i32* %640, align 4
  %641 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 12
  store i8 1, i8* %641, align 1
  br label %642

642:                                              ; preds = %639, %621
  %643 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 12, i32 0
  %644 = bitcast %"class.v8::Name"** %643 to %"class.v8::Value"**
  %645 = load %"class.v8::Value"*, %"class.v8::Value"** %644, align 8
  %646 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %645) #8
  %647 = icmp eq %"class.v8::Value"* %646, null
  br i1 %647, label %648, label %654

648:                                              ; preds = %642
  %649 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %650 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %651 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %650, align 8
  %652 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %651, i64 5
  %653 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %652, align 8
  call void %653(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %649) #8
  br label %1661

654:                                              ; preds = %642
  %655 = bitcast %"class.v8::Value"* %646 to i64*
  %656 = load i64, i64* %655, align 8
  %657 = and i64 %656, 3
  %658 = icmp eq i64 %657, 1
  br i1 %658, label %659, label %676

659:                                              ; preds = %654
  %660 = add i64 %656, -1
  %661 = inttoptr i64 %660 to i32*
  %662 = load i32, i32* %661, align 4
  %663 = and i64 %656, -4294967296
  %664 = zext i32 %662 to i64
  %665 = or i64 %663, %664
  %666 = add i64 %665, 7
  %667 = inttoptr i64 %666 to i16*
  %668 = load i16, i16* %667, align 2
  %669 = icmp eq i16 %668, 67
  br i1 %669, label %670, label %676

670:                                              ; preds = %659
  %671 = add i64 %656, 23
  %672 = inttoptr i64 %671 to i32*
  %673 = load i32, i32* %672, align 4
  %674 = and i32 %673, -2
  %675 = icmp eq i32 %674, 10
  br i1 %675, label %691, label %676

676:                                              ; preds = %659, %654, %670
  %677 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %646) #8
  br i1 %677, label %678, label %681, !prof !2

678:                                              ; preds = %676
  %679 = bitcast %"class.v8::Value"* %646 to %"class.v8::Int32"*
  %680 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %679) #8
  br label %683

681:                                              ; preds = %676
  %682 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %646, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %683

683:                                              ; preds = %678, %681
  %684 = phi i32 [ %680, %678 ], [ %682, %681 ]
  %685 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %686 = load i32, i32* %685, align 8
  %687 = icmp eq i32 %686, 0
  br i1 %687, label %688, label %1661

688:                                              ; preds = %683
  %689 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 40
  store i32 %684, i32* %689, align 8
  %690 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 13
  store i8 1, i8* %690, align 4
  br label %691

691:                                              ; preds = %688, %670
  %692 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 13, i32 0
  %693 = bitcast %"class.v8::Name"** %692 to %"class.v8::Value"**
  %694 = load %"class.v8::Value"*, %"class.v8::Value"** %693, align 8
  %695 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %694) #8
  %696 = icmp eq %"class.v8::Value"* %695, null
  br i1 %696, label %697, label %703

697:                                              ; preds = %691
  %698 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %699 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %700 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %699, align 8
  %701 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %700, i64 5
  %702 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %701, align 8
  call void %702(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %698) #8
  br label %1661

703:                                              ; preds = %691
  %704 = bitcast %"class.v8::Value"* %695 to i64*
  %705 = load i64, i64* %704, align 8
  %706 = and i64 %705, 3
  %707 = icmp eq i64 %706, 1
  br i1 %707, label %708, label %725

708:                                              ; preds = %703
  %709 = add i64 %705, -1
  %710 = inttoptr i64 %709 to i32*
  %711 = load i32, i32* %710, align 4
  %712 = and i64 %705, -4294967296
  %713 = zext i32 %711 to i64
  %714 = or i64 %712, %713
  %715 = add i64 %714, 7
  %716 = inttoptr i64 %715 to i16*
  %717 = load i16, i16* %716, align 2
  %718 = icmp eq i16 %717, 67
  br i1 %718, label %719, label %725

719:                                              ; preds = %708
  %720 = add i64 %705, 23
  %721 = inttoptr i64 %720 to i32*
  %722 = load i32, i32* %721, align 4
  %723 = and i32 %722, -2
  %724 = icmp eq i32 %723, 10
  br i1 %724, label %733, label %725

725:                                              ; preds = %708, %703, %719
  %726 = call zeroext i16 @_ZN5blink8ToUInt16EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %695, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %727 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %728 = load i32, i32* %727, align 8
  %729 = icmp eq i32 %728, 0
  br i1 %729, label %730, label %1661

730:                                              ; preds = %725
  %731 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 41
  store i16 %726, i16* %731, align 4
  %732 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 14
  store i8 1, i8* %732, align 1
  br label %733

733:                                              ; preds = %730, %719
  %734 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 14, i32 0
  %735 = bitcast %"class.v8::Name"** %734 to %"class.v8::Value"**
  %736 = load %"class.v8::Value"*, %"class.v8::Value"** %735, align 8
  %737 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %736) #8
  %738 = icmp eq %"class.v8::Value"* %737, null
  br i1 %738, label %739, label %745

739:                                              ; preds = %733
  %740 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %741 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %742 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %741, align 8
  %743 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %742, i64 5
  %744 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %743, align 8
  call void %744(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %740) #8
  br label %1661

745:                                              ; preds = %733
  %746 = bitcast %"class.v8::Value"* %737 to i64*
  %747 = load i64, i64* %746, align 8
  %748 = and i64 %747, 3
  %749 = icmp eq i64 %748, 1
  br i1 %749, label %750, label %767

750:                                              ; preds = %745
  %751 = add i64 %747, -1
  %752 = inttoptr i64 %751 to i32*
  %753 = load i32, i32* %752, align 4
  %754 = and i64 %747, -4294967296
  %755 = zext i32 %753 to i64
  %756 = or i64 %754, %755
  %757 = add i64 %756, 7
  %758 = inttoptr i64 %757 to i16*
  %759 = load i16, i16* %758, align 2
  %760 = icmp eq i16 %759, 67
  br i1 %760, label %761, label %767

761:                                              ; preds = %750
  %762 = add i64 %747, 23
  %763 = inttoptr i64 %762 to i32*
  %764 = load i32, i32* %763, align 4
  %765 = and i32 %764, -2
  %766 = icmp eq i32 %765, 10
  br i1 %766, label %775, label %767

767:                                              ; preds = %750, %745, %761
  %768 = call zeroext i16 @_ZN5blink8ToUInt16EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %737, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %769 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %770 = load i32, i32* %769, align 8
  %771 = icmp eq i32 %770, 0
  br i1 %771, label %772, label %1661

772:                                              ; preds = %767
  %773 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 42
  store i16 %768, i16* %773, align 2
  %774 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 15
  store i8 1, i8* %774, align 2
  br label %775

775:                                              ; preds = %772, %761
  %776 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 15, i32 0
  %777 = bitcast %"class.v8::Name"** %776 to %"class.v8::Value"**
  %778 = load %"class.v8::Value"*, %"class.v8::Value"** %777, align 8
  %779 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %778) #8
  %780 = icmp eq %"class.v8::Value"* %779, null
  br i1 %780, label %781, label %787

781:                                              ; preds = %775
  %782 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %783 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %784 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %783, align 8
  %785 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %784, i64 5
  %786 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %785, align 8
  call void %786(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %782) #8
  br label %1661

787:                                              ; preds = %775
  %788 = bitcast %"class.v8::Value"* %779 to i64*
  %789 = load i64, i64* %788, align 8
  %790 = and i64 %789, 3
  %791 = icmp eq i64 %790, 1
  br i1 %791, label %792, label %809

792:                                              ; preds = %787
  %793 = add i64 %789, -1
  %794 = inttoptr i64 %793 to i32*
  %795 = load i32, i32* %794, align 4
  %796 = and i64 %789, -4294967296
  %797 = zext i32 %795 to i64
  %798 = or i64 %796, %797
  %799 = add i64 %798, 7
  %800 = inttoptr i64 %799 to i16*
  %801 = load i16, i16* %800, align 2
  %802 = icmp eq i16 %801, 67
  br i1 %802, label %803, label %809

803:                                              ; preds = %792
  %804 = add i64 %789, 23
  %805 = inttoptr i64 %804 to i32*
  %806 = load i32, i32* %805, align 4
  %807 = and i32 %806, -2
  %808 = icmp eq i32 %807, 10
  br i1 %808, label %891, label %809

809:                                              ; preds = %792, %787, %803
  %810 = bitcast %"class.WTF::Vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %810) #8
  %811 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %812 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %813 = bitcast %"class.WTF::Vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %813, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector"* nonnull sret %7, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %779, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %814 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %815 = load i32, i32* %814, align 8
  %816 = icmp eq i32 %815, 0
  br i1 %816, label %817, label %854

817:                                              ; preds = %809
  call void @_ZN5blink13HIDReportItem10setStringsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::HIDReportItem"* %2, %"class.WTF::Vector"* nonnull dereferenceable(16) %7) #8
  %818 = load %"class.WTF::String"*, %"class.WTF::String"** %811, align 8
  %819 = icmp eq %"class.WTF::String"* %818, null
  br i1 %819, label %853, label %820, !prof !2

820:                                              ; preds = %817
  %821 = bitcast %"class.WTF::String"* %818 to i8*
  %822 = load i32, i32* %812, align 4
  %823 = icmp eq i32 %822, 0
  br i1 %823, label %851, label %824, !prof !3

824:                                              ; preds = %820
  %825 = zext i32 %822 to i64
  %826 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %818, i64 %825
  br label %827

827:                                              ; preds = %845, %824
  %828 = phi %"class.WTF::String"* [ %846, %845 ], [ %818, %824 ]
  %829 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %828, i64 0, i32 0, i32 0
  %830 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %829, align 8
  %831 = icmp eq %"class.WTF::StringImpl"* %830, null
  br i1 %831, label %845, label %832

832:                                              ; preds = %827
  %833 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %830, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %834 = load atomic i32, i32* %833 monotonic, align 4
  %835 = and i32 %834, 2
  %836 = icmp eq i32 %835, 0
  %837 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %830, i64 0, i32 0
  %838 = load i32, i32* %837, align 4
  br i1 %836, label %839, label %841

839:                                              ; preds = %832
  %840 = add i32 %838, -1
  store i32 %840, i32* %837, align 4
  br label %841

841:                                              ; preds = %839, %832
  %842 = phi i32 [ %840, %839 ], [ %838, %832 ]
  %843 = icmp eq i32 %842, 0
  br i1 %843, label %844, label %845

844:                                              ; preds = %841
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %830) #8
  br label %845

845:                                              ; preds = %844, %841, %827
  %846 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %828, i64 1
  %847 = icmp eq %"class.WTF::String"* %846, %826
  br i1 %847, label %848, label %827

848:                                              ; preds = %845
  store i32 0, i32* %812, align 4
  %849 = bitcast %"class.WTF::Vector"* %7 to i8**
  %850 = load i8*, i8** %849, align 8
  br label %851

851:                                              ; preds = %848, %820
  %852 = phi i8* [ %850, %848 ], [ %821, %820 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %852) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %811, align 8
  br label %853

853:                                              ; preds = %817, %851
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %810) #8
  br label %891

854:                                              ; preds = %809
  %855 = load %"class.WTF::String"*, %"class.WTF::String"** %811, align 8
  %856 = icmp eq %"class.WTF::String"* %855, null
  br i1 %856, label %890, label %857, !prof !2

857:                                              ; preds = %854
  %858 = bitcast %"class.WTF::String"* %855 to i8*
  %859 = load i32, i32* %812, align 4
  %860 = icmp eq i32 %859, 0
  br i1 %860, label %888, label %861, !prof !3

861:                                              ; preds = %857
  %862 = zext i32 %859 to i64
  %863 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %855, i64 %862
  br label %864

864:                                              ; preds = %882, %861
  %865 = phi %"class.WTF::String"* [ %883, %882 ], [ %855, %861 ]
  %866 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %865, i64 0, i32 0, i32 0
  %867 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %866, align 8
  %868 = icmp eq %"class.WTF::StringImpl"* %867, null
  br i1 %868, label %882, label %869

869:                                              ; preds = %864
  %870 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %867, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %871 = load atomic i32, i32* %870 monotonic, align 4
  %872 = and i32 %871, 2
  %873 = icmp eq i32 %872, 0
  %874 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %867, i64 0, i32 0
  %875 = load i32, i32* %874, align 4
  br i1 %873, label %876, label %878

876:                                              ; preds = %869
  %877 = add i32 %875, -1
  store i32 %877, i32* %874, align 4
  br label %878

878:                                              ; preds = %876, %869
  %879 = phi i32 [ %877, %876 ], [ %875, %869 ]
  %880 = icmp eq i32 %879, 0
  br i1 %880, label %881, label %882

881:                                              ; preds = %878
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %867) #8
  br label %882

882:                                              ; preds = %881, %878, %864
  %883 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %865, i64 1
  %884 = icmp eq %"class.WTF::String"* %883, %863
  br i1 %884, label %885, label %864

885:                                              ; preds = %882
  store i32 0, i32* %812, align 4
  %886 = bitcast %"class.WTF::Vector"* %7 to i8**
  %887 = load i8*, i8** %886, align 8
  br label %888

888:                                              ; preds = %885, %857
  %889 = phi i8* [ %887, %885 ], [ %858, %857 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %889) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %811, align 8
  br label %890

890:                                              ; preds = %854, %888
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %810) #8
  br label %1661

891:                                              ; preds = %853, %803
  %892 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 16, i32 0
  %893 = bitcast %"class.v8::Name"** %892 to %"class.v8::Value"**
  %894 = load %"class.v8::Value"*, %"class.v8::Value"** %893, align 8
  %895 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %894) #8
  %896 = icmp eq %"class.v8::Value"* %895, null
  br i1 %896, label %897, label %903

897:                                              ; preds = %891
  %898 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %899 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %900 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %899, align 8
  %901 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %900, i64 5
  %902 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %901, align 8
  call void %902(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %898) #8
  br label %1661

903:                                              ; preds = %891
  %904 = bitcast %"class.v8::Value"* %895 to i64*
  %905 = load i64, i64* %904, align 8
  %906 = and i64 %905, 3
  %907 = icmp eq i64 %906, 1
  br i1 %907, label %908, label %925

908:                                              ; preds = %903
  %909 = add i64 %905, -1
  %910 = inttoptr i64 %909 to i32*
  %911 = load i32, i32* %910, align 4
  %912 = and i64 %905, -4294967296
  %913 = zext i32 %911 to i64
  %914 = or i64 %912, %913
  %915 = add i64 %914, 7
  %916 = inttoptr i64 %915 to i16*
  %917 = load i16, i16* %916, align 2
  %918 = icmp eq i16 %917, 67
  br i1 %918, label %919, label %925

919:                                              ; preds = %908
  %920 = add i64 %905, 23
  %921 = inttoptr i64 %920 to i32*
  %922 = load i32, i32* %921, align 4
  %923 = and i32 %922, -2
  %924 = icmp eq i32 %923, 10
  br i1 %924, label %933, label %925

925:                                              ; preds = %908, %903, %919
  %926 = call signext i8 @_ZN5blink6ToInt8EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %895, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %927 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %928 = load i32, i32* %927, align 8
  %929 = icmp eq i32 %928, 0
  br i1 %929, label %930, label %1661

930:                                              ; preds = %925
  %931 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 44
  store i8 %926, i8* %931, align 8
  %932 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 17
  store i8 1, i8* %932, align 8
  br label %933

933:                                              ; preds = %930, %919
  %934 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 17, i32 0
  %935 = bitcast %"class.v8::Name"** %934 to %"class.v8::Value"**
  %936 = load %"class.v8::Value"*, %"class.v8::Value"** %935, align 8
  %937 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %936) #8
  %938 = icmp eq %"class.v8::Value"* %937, null
  br i1 %938, label %939, label %945

939:                                              ; preds = %933
  %940 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %941 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %942 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %941, align 8
  %943 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %942, i64 5
  %944 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %943, align 8
  call void %944(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %940) #8
  br label %1661

945:                                              ; preds = %933
  %946 = bitcast %"class.v8::Value"* %937 to i64*
  %947 = load i64, i64* %946, align 8
  %948 = and i64 %947, 3
  %949 = icmp eq i64 %948, 1
  br i1 %949, label %950, label %967

950:                                              ; preds = %945
  %951 = add i64 %947, -1
  %952 = inttoptr i64 %951 to i32*
  %953 = load i32, i32* %952, align 4
  %954 = and i64 %947, -4294967296
  %955 = zext i32 %953 to i64
  %956 = or i64 %954, %955
  %957 = add i64 %956, 7
  %958 = inttoptr i64 %957 to i16*
  %959 = load i16, i16* %958, align 2
  %960 = icmp eq i16 %959, 67
  br i1 %960, label %961, label %967

961:                                              ; preds = %950
  %962 = add i64 %947, 23
  %963 = inttoptr i64 %962 to i32*
  %964 = load i32, i32* %963, align 4
  %965 = and i32 %964, -2
  %966 = icmp eq i32 %965, 10
  br i1 %966, label %975, label %967

967:                                              ; preds = %950, %945, %961
  %968 = call signext i8 @_ZN5blink6ToInt8EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %937, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %969 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %970 = load i32, i32* %969, align 8
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %972, label %1661

972:                                              ; preds = %967
  %973 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 45
  store i8 %968, i8* %973, align 1
  %974 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 18
  store i8 1, i8* %974, align 1
  br label %975

975:                                              ; preds = %972, %961
  %976 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 18, i32 0
  %977 = bitcast %"class.v8::Name"** %976 to %"class.v8::Value"**
  %978 = load %"class.v8::Value"*, %"class.v8::Value"** %977, align 8
  %979 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %978) #8
  %980 = icmp eq %"class.v8::Value"* %979, null
  br i1 %980, label %981, label %987

981:                                              ; preds = %975
  %982 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %983 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %984 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %983, align 8
  %985 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %984, i64 5
  %986 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %985, align 8
  call void %986(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %982) #8
  br label %1661

987:                                              ; preds = %975
  %988 = bitcast %"class.v8::Value"* %979 to i64*
  %989 = load i64, i64* %988, align 8
  %990 = and i64 %989, 3
  %991 = icmp eq i64 %990, 1
  br i1 %991, label %992, label %1009

992:                                              ; preds = %987
  %993 = add i64 %989, -1
  %994 = inttoptr i64 %993 to i32*
  %995 = load i32, i32* %994, align 4
  %996 = and i64 %989, -4294967296
  %997 = zext i32 %995 to i64
  %998 = or i64 %996, %997
  %999 = add i64 %998, 7
  %1000 = inttoptr i64 %999 to i16*
  %1001 = load i16, i16* %1000, align 2
  %1002 = icmp eq i16 %1001, 67
  br i1 %1002, label %1003, label %1009

1003:                                             ; preds = %992
  %1004 = add i64 %989, 23
  %1005 = inttoptr i64 %1004 to i32*
  %1006 = load i32, i32* %1005, align 4
  %1007 = and i32 %1006, -2
  %1008 = icmp eq i32 %1007, 10
  br i1 %1008, label %1017, label %1009

1009:                                             ; preds = %992, %987, %1003
  %1010 = call signext i8 @_ZN5blink6ToInt8EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %979, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1011 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1012 = load i32, i32* %1011, align 8
  %1013 = icmp eq i32 %1012, 0
  br i1 %1013, label %1014, label %1661

1014:                                             ; preds = %1009
  %1015 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 46
  store i8 %1010, i8* %1015, align 2
  %1016 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 19
  store i8 1, i8* %1016, align 2
  br label %1017

1017:                                             ; preds = %1014, %1003
  %1018 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 19, i32 0
  %1019 = bitcast %"class.v8::Name"** %1018 to %"class.v8::Value"**
  %1020 = load %"class.v8::Value"*, %"class.v8::Value"** %1019, align 8
  %1021 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %1020) #8
  %1022 = icmp eq %"class.v8::Value"* %1021, null
  br i1 %1022, label %1023, label %1029

1023:                                             ; preds = %1017
  %1024 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %1025 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1026 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1025, align 8
  %1027 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1026, i64 5
  %1028 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1027, align 8
  call void %1028(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1024) #8
  br label %1661

1029:                                             ; preds = %1017
  %1030 = bitcast %"class.v8::Value"* %1021 to i64*
  %1031 = load i64, i64* %1030, align 8
  %1032 = and i64 %1031, 3
  %1033 = icmp eq i64 %1032, 1
  br i1 %1033, label %1034, label %1051

1034:                                             ; preds = %1029
  %1035 = add i64 %1031, -1
  %1036 = inttoptr i64 %1035 to i32*
  %1037 = load i32, i32* %1036, align 4
  %1038 = and i64 %1031, -4294967296
  %1039 = zext i32 %1037 to i64
  %1040 = or i64 %1038, %1039
  %1041 = add i64 %1040, 7
  %1042 = inttoptr i64 %1041 to i16*
  %1043 = load i16, i16* %1042, align 2
  %1044 = icmp eq i16 %1043, 67
  br i1 %1044, label %1045, label %1051

1045:                                             ; preds = %1034
  %1046 = add i64 %1031, 23
  %1047 = inttoptr i64 %1046 to i32*
  %1048 = load i32, i32* %1047, align 4
  %1049 = and i32 %1048, -2
  %1050 = icmp eq i32 %1049, 10
  br i1 %1050, label %1059, label %1051

1051:                                             ; preds = %1034, %1029, %1045
  %1052 = call signext i8 @_ZN5blink6ToInt8EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1021, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1053 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1054 = load i32, i32* %1053, align 8
  %1055 = icmp eq i32 %1054, 0
  br i1 %1055, label %1056, label %1661

1056:                                             ; preds = %1051
  %1057 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 47
  store i8 %1052, i8* %1057, align 1
  %1058 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 20
  store i8 1, i8* %1058, align 1
  br label %1059

1059:                                             ; preds = %1056, %1045
  %1060 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 20, i32 0
  %1061 = bitcast %"class.v8::Name"** %1060 to %"class.v8::Value"**
  %1062 = load %"class.v8::Value"*, %"class.v8::Value"** %1061, align 8
  %1063 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %1062) #8
  %1064 = icmp eq %"class.v8::Value"* %1063, null
  br i1 %1064, label %1065, label %1071

1065:                                             ; preds = %1059
  %1066 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %1067 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1068 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1067, align 8
  %1069 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1068, i64 5
  %1070 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1069, align 8
  call void %1070(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1066) #8
  br label %1661

1071:                                             ; preds = %1059
  %1072 = bitcast %"class.v8::Value"* %1063 to i64*
  %1073 = load i64, i64* %1072, align 8
  %1074 = and i64 %1073, 3
  %1075 = icmp eq i64 %1074, 1
  br i1 %1075, label %1076, label %1093

1076:                                             ; preds = %1071
  %1077 = add i64 %1073, -1
  %1078 = inttoptr i64 %1077 to i32*
  %1079 = load i32, i32* %1078, align 4
  %1080 = and i64 %1073, -4294967296
  %1081 = zext i32 %1079 to i64
  %1082 = or i64 %1080, %1081
  %1083 = add i64 %1082, 7
  %1084 = inttoptr i64 %1083 to i16*
  %1085 = load i16, i16* %1084, align 2
  %1086 = icmp eq i16 %1085, 67
  br i1 %1086, label %1087, label %1093

1087:                                             ; preds = %1076
  %1088 = add i64 %1073, 23
  %1089 = inttoptr i64 %1088 to i32*
  %1090 = load i32, i32* %1089, align 4
  %1091 = and i32 %1090, -2
  %1092 = icmp eq i32 %1091, 10
  br i1 %1092, label %1101, label %1093

1093:                                             ; preds = %1076, %1071, %1087
  %1094 = call signext i8 @_ZN5blink6ToInt8EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1063, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1095 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1096 = load i32, i32* %1095, align 8
  %1097 = icmp eq i32 %1096, 0
  br i1 %1097, label %1098, label %1661

1098:                                             ; preds = %1093
  %1099 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 48
  store i8 %1094, i8* %1099, align 4
  %1100 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 21
  store i8 1, i8* %1100, align 4
  br label %1101

1101:                                             ; preds = %1098, %1087
  %1102 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 21, i32 0
  %1103 = bitcast %"class.v8::Name"** %1102 to %"class.v8::Value"**
  %1104 = load %"class.v8::Value"*, %"class.v8::Value"** %1103, align 8
  %1105 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %1104) #8
  %1106 = icmp eq %"class.v8::Value"* %1105, null
  br i1 %1106, label %1107, label %1113

1107:                                             ; preds = %1101
  %1108 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %1109 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1110 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1109, align 8
  %1111 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1110, i64 5
  %1112 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1111, align 8
  call void %1112(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1108) #8
  br label %1661

1113:                                             ; preds = %1101
  %1114 = bitcast %"class.v8::Value"* %1105 to i64*
  %1115 = load i64, i64* %1114, align 8
  %1116 = and i64 %1115, 3
  %1117 = icmp eq i64 %1116, 1
  br i1 %1117, label %1118, label %1135

1118:                                             ; preds = %1113
  %1119 = add i64 %1115, -1
  %1120 = inttoptr i64 %1119 to i32*
  %1121 = load i32, i32* %1120, align 4
  %1122 = and i64 %1115, -4294967296
  %1123 = zext i32 %1121 to i64
  %1124 = or i64 %1122, %1123
  %1125 = add i64 %1124, 7
  %1126 = inttoptr i64 %1125 to i16*
  %1127 = load i16, i16* %1126, align 2
  %1128 = icmp eq i16 %1127, 67
  br i1 %1128, label %1129, label %1135

1129:                                             ; preds = %1118
  %1130 = add i64 %1115, 23
  %1131 = inttoptr i64 %1130 to i32*
  %1132 = load i32, i32* %1131, align 4
  %1133 = and i32 %1132, -2
  %1134 = icmp eq i32 %1133, 10
  br i1 %1134, label %1143, label %1135

1135:                                             ; preds = %1118, %1113, %1129
  %1136 = call signext i8 @_ZN5blink6ToInt8EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1105, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1137 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1138 = load i32, i32* %1137, align 8
  %1139 = icmp eq i32 %1138, 0
  br i1 %1139, label %1140, label %1661

1140:                                             ; preds = %1135
  %1141 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 49
  store i8 %1136, i8* %1141, align 1
  %1142 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 22
  store i8 1, i8* %1142, align 1
  br label %1143

1143:                                             ; preds = %1140, %1129
  %1144 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 22, i32 0
  %1145 = bitcast %"class.v8::Name"** %1144 to %"class.v8::Value"**
  %1146 = load %"class.v8::Value"*, %"class.v8::Value"** %1145, align 8
  %1147 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %1146) #8
  %1148 = icmp eq %"class.v8::Value"* %1147, null
  br i1 %1148, label %1149, label %1155

1149:                                             ; preds = %1143
  %1150 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %1151 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1152 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1151, align 8
  %1153 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1152, i64 5
  %1154 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1153, align 8
  call void %1154(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1150) #8
  br label %1661

1155:                                             ; preds = %1143
  %1156 = bitcast %"class.v8::Value"* %1147 to i64*
  %1157 = load i64, i64* %1156, align 8
  %1158 = and i64 %1157, 3
  %1159 = icmp eq i64 %1158, 1
  br i1 %1159, label %1160, label %1177

1160:                                             ; preds = %1155
  %1161 = add i64 %1157, -1
  %1162 = inttoptr i64 %1161 to i32*
  %1163 = load i32, i32* %1162, align 4
  %1164 = and i64 %1157, -4294967296
  %1165 = zext i32 %1163 to i64
  %1166 = or i64 %1164, %1165
  %1167 = add i64 %1166, 7
  %1168 = inttoptr i64 %1167 to i16*
  %1169 = load i16, i16* %1168, align 2
  %1170 = icmp eq i16 %1169, 67
  br i1 %1170, label %1171, label %1177

1171:                                             ; preds = %1160
  %1172 = add i64 %1157, 23
  %1173 = inttoptr i64 %1172 to i32*
  %1174 = load i32, i32* %1173, align 4
  %1175 = and i32 %1174, -2
  %1176 = icmp eq i32 %1175, 10
  br i1 %1176, label %1185, label %1177

1177:                                             ; preds = %1160, %1155, %1171
  %1178 = call signext i8 @_ZN5blink6ToInt8EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1147, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1179 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1180 = load i32, i32* %1179, align 8
  %1181 = icmp eq i32 %1180, 0
  br i1 %1181, label %1182, label %1661

1182:                                             ; preds = %1177
  %1183 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 50
  store i8 %1178, i8* %1183, align 2
  %1184 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 23
  store i8 1, i8* %1184, align 2
  br label %1185

1185:                                             ; preds = %1182, %1171
  %1186 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 23, i32 0
  %1187 = bitcast %"class.v8::Name"** %1186 to %"class.v8::Value"**
  %1188 = load %"class.v8::Value"*, %"class.v8::Value"** %1187, align 8
  %1189 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %1188) #8
  %1190 = icmp eq %"class.v8::Value"* %1189, null
  br i1 %1190, label %1191, label %1197

1191:                                             ; preds = %1185
  %1192 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %1193 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1194 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1193, align 8
  %1195 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1194, i64 5
  %1196 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1195, align 8
  call void %1196(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1192) #8
  br label %1661

1197:                                             ; preds = %1185
  %1198 = bitcast %"class.v8::Value"* %1189 to i64*
  %1199 = load i64, i64* %1198, align 8
  %1200 = and i64 %1199, 3
  %1201 = icmp eq i64 %1200, 1
  br i1 %1201, label %1202, label %1219

1202:                                             ; preds = %1197
  %1203 = add i64 %1199, -1
  %1204 = inttoptr i64 %1203 to i32*
  %1205 = load i32, i32* %1204, align 4
  %1206 = and i64 %1199, -4294967296
  %1207 = zext i32 %1205 to i64
  %1208 = or i64 %1206, %1207
  %1209 = add i64 %1208, 7
  %1210 = inttoptr i64 %1209 to i16*
  %1211 = load i16, i16* %1210, align 2
  %1212 = icmp eq i16 %1211, 67
  br i1 %1212, label %1213, label %1219

1213:                                             ; preds = %1202
  %1214 = add i64 %1199, 23
  %1215 = inttoptr i64 %1214 to i32*
  %1216 = load i32, i32* %1215, align 4
  %1217 = and i32 %1216, -2
  %1218 = icmp eq i32 %1217, 10
  br i1 %1218, label %1441, label %1219

1219:                                             ; preds = %1202, %1197, %1213
  %1220 = bitcast %"class.blink::V8StringResource"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1220) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1220, i8 -86, i64 152, i1 false)
  %1221 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1189, %"class.v8::Value"** %1221, align 8
  %1222 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 1
  store i32 0, i32* %1222, align 8
  %1223 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1223, align 8
  %1224 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1
  %1225 = bitcast %"class.std::__1::unique_ptr"* %1224 to i64*
  store i64 0, i64* %1225, align 8
  %1226 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %8) #8
  br i1 %1226, label %1243, label %1227

1227:                                             ; preds = %1219
  %1228 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #8
  %1229 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1229) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1229, i8 -86, i64 48, i1 false) #8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1228) #8
  %1230 = load %"class.v8::Value"*, %"class.v8::Value"** %1221, align 8
  %1231 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1228) #8
  %1232 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %1230, %"class.v8::Context"* %1231) #8
  %1233 = ptrtoint %"class.v8::String"* %1232 to i64
  %1234 = bitcast %"class.blink::V8StringResource"* %8 to i64*
  store i64 %1233, i64* %1234, align 8
  %1235 = icmp eq %"class.v8::String"* %1232, null
  br i1 %1235, label %1237, label %1236

1236:                                             ; preds = %1227
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1229) #8
  br label %1243

1237:                                             ; preds = %1227
  %1238 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1239 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1240 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1239, align 8
  %1241 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1240, i64 5
  %1242 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1241, align 8
  call void %1242(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1238) #8
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1229) #8
  br label %1419

1243:                                             ; preds = %1219, %1236
  %1244 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1244) #8
  %1245 = load %"class.v8::Value"*, %"class.v8::Value"** %1221, align 8
  %1246 = icmp eq %"class.v8::Value"* %1245, null
  br i1 %1246, label %1251, label %1247, !prof !3

1247:                                             ; preds = %1243
  %1248 = bitcast %"class.v8::Value"* %1245 to %"class.v8::String"*
  %1249 = load i32, i32* %1222, align 8
  %1250 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1248, i32 %1249) #8
  br label %1271

1251:                                             ; preds = %1243
  %1252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8
  %1253 = icmp eq %"class.WTF::StringImpl"* %1252, null
  br i1 %1253, label %1271, label %1254

1254:                                             ; preds = %1251
  %1255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1252, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1256 = load atomic i32, i32* %1255 monotonic, align 4
  %1257 = and i32 %1256, 2
  %1258 = icmp eq i32 %1257, 0
  br i1 %1258, label %1259, label %1271

1259:                                             ; preds = %1254
  %1260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1252, i64 0, i32 0
  %1261 = load i32, i32* %1260, align 4
  %1262 = zext i32 %1261 to i33
  %1263 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1262, i33 1) #8
  %1264 = extractvalue { i33, i1 } %1263, 1
  %1265 = extractvalue { i33, i1 } %1263, 0
  %1266 = icmp slt i33 %1265, 0
  %1267 = or i1 %1264, %1266
  br i1 %1267, label %1268, label %1269, !prof !3

1268:                                             ; preds = %1259
  call void @llvm.trap() #8
  unreachable

1269:                                             ; preds = %1259
  %1270 = trunc i33 %1265 to i32
  store i32 %1270, i32* %1260, align 4
  br label %1271

1271:                                             ; preds = %1247, %1251, %1254, %1269
  %1272 = phi %"class.WTF::StringImpl"* [ %1250, %1247 ], [ null, %1251 ], [ %1252, %1254 ], [ %1252, %1269 ]
  %1273 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1272, %"class.WTF::StringImpl"** %1273, align 8
  %1274 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1274) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i64 13) #8
  %1275 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %9, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @_ZZN5blink15V8HIDReportItem6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13HIDReportItemERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 7, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1276 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %1277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1276, align 8
  %1278 = icmp eq %"class.WTF::StringImpl"* %1277, null
  br i1 %1278, label %1292, label %1279

1279:                                             ; preds = %1271
  %1280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1277, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1281 = load atomic i32, i32* %1280 monotonic, align 4
  %1282 = and i32 %1281, 2
  %1283 = icmp eq i32 %1282, 0
  %1284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1277, i64 0, i32 0
  %1285 = load i32, i32* %1284, align 4
  br i1 %1283, label %1286, label %1288

1286:                                             ; preds = %1279
  %1287 = add i32 %1285, -1
  store i32 %1287, i32* %1284, align 4
  br label %1288

1288:                                             ; preds = %1286, %1279
  %1289 = phi i32 [ %1287, %1286 ], [ %1285, %1279 ]
  %1290 = icmp eq i32 %1289, 0
  br i1 %1290, label %1291, label %1292

1291:                                             ; preds = %1288
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1277) #8
  br label %1292

1292:                                             ; preds = %1271, %1288, %1291
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1274) #8
  %1293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1273, align 8
  %1294 = icmp eq %"class.WTF::StringImpl"* %1293, null
  br i1 %1294, label %1308, label %1295

1295:                                             ; preds = %1292
  %1296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1293, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1297 = load atomic i32, i32* %1296 monotonic, align 4
  %1298 = and i32 %1297, 2
  %1299 = icmp eq i32 %1298, 0
  %1300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1293, i64 0, i32 0
  %1301 = load i32, i32* %1300, align 4
  br i1 %1299, label %1302, label %1304

1302:                                             ; preds = %1295
  %1303 = add i32 %1301, -1
  store i32 %1303, i32* %1300, align 4
  br label %1304

1304:                                             ; preds = %1302, %1295
  %1305 = phi i32 [ %1303, %1302 ], [ %1301, %1295 ]
  %1306 = icmp eq i32 %1305, 0
  br i1 %1306, label %1307, label %1308

1307:                                             ; preds = %1304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1293) #8
  br label %1308

1308:                                             ; preds = %1292, %1304, %1307
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1244) #8
  br i1 %1275, label %1309, label %1419

1309:                                             ; preds = %1308
  %1310 = load %"class.v8::Value"*, %"class.v8::Value"** %1221, align 8
  %1311 = icmp eq %"class.v8::Value"* %1310, null
  br i1 %1311, label %1312, label %1336, !prof !3

1312:                                             ; preds = %1309
  %1313 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8
  %1314 = icmp eq %"class.WTF::StringImpl"* %1313, null
  br i1 %1314, label %1315, label %1317

1315:                                             ; preds = %1312
  %1316 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 52
  br label %1361

1317:                                             ; preds = %1312
  %1318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1313, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1319 = load atomic i32, i32* %1318 monotonic, align 4
  %1320 = and i32 %1319, 2
  %1321 = icmp eq i32 %1320, 0
  br i1 %1321, label %1322, label %1334

1322:                                             ; preds = %1317
  %1323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1313, i64 0, i32 0
  %1324 = load i32, i32* %1323, align 4
  %1325 = zext i32 %1324 to i33
  %1326 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1325, i33 1) #8
  %1327 = extractvalue { i33, i1 } %1326, 1
  %1328 = extractvalue { i33, i1 } %1326, 0
  %1329 = icmp slt i33 %1328, 0
  %1330 = or i1 %1327, %1329
  br i1 %1330, label %1331, label %1332, !prof !3

1331:                                             ; preds = %1322
  call void @llvm.trap() #8
  unreachable

1332:                                             ; preds = %1322
  %1333 = trunc i33 %1328 to i32
  store i32 %1333, i32* %1323, align 4
  br label %1334

1334:                                             ; preds = %1317, %1332
  %1335 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 52
  br label %1342

1336:                                             ; preds = %1309
  %1337 = bitcast %"class.v8::Value"* %1310 to %"class.v8::String"*
  %1338 = load i32, i32* %1222, align 8
  %1339 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1337, i32 %1338) #8
  %1340 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 52
  %1341 = icmp eq %"class.WTF::StringImpl"* %1339, null
  br i1 %1341, label %1361, label %1342

1342:                                             ; preds = %1334, %1336
  %1343 = phi %"class.WTF::String"* [ %1335, %1334 ], [ %1340, %1336 ]
  %1344 = phi %"class.WTF::StringImpl"* [ %1313, %1334 ], [ %1339, %1336 ]
  %1345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1344, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1346 = load atomic i32, i32* %1345 monotonic, align 4
  %1347 = and i32 %1346, 2
  %1348 = icmp eq i32 %1347, 0
  br i1 %1348, label %1349, label %1361

1349:                                             ; preds = %1342
  %1350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1344, i64 0, i32 0
  %1351 = load i32, i32* %1350, align 4
  %1352 = zext i32 %1351 to i33
  %1353 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1352, i33 1) #8
  %1354 = extractvalue { i33, i1 } %1353, 1
  %1355 = extractvalue { i33, i1 } %1353, 0
  %1356 = icmp slt i33 %1355, 0
  %1357 = or i1 %1354, %1356
  br i1 %1357, label %1358, label %1359, !prof !3

1358:                                             ; preds = %1349
  call void @llvm.trap() #8
  unreachable

1359:                                             ; preds = %1349
  %1360 = trunc i33 %1355 to i32
  store i32 %1360, i32* %1350, align 4
  br label %1361

1361:                                             ; preds = %1315, %1359, %1342, %1336
  %1362 = phi i1 [ false, %1359 ], [ false, %1342 ], [ true, %1336 ], [ true, %1315 ]
  %1363 = phi %"class.WTF::String"* [ %1343, %1359 ], [ %1343, %1342 ], [ %1340, %1336 ], [ %1316, %1315 ]
  %1364 = phi %"class.WTF::StringImpl"* [ %1344, %1359 ], [ %1344, %1342 ], [ null, %1336 ], [ null, %1315 ]
  %1365 = ptrtoint %"class.WTF::StringImpl"* %1364 to i64
  %1366 = bitcast %"class.WTF::String"* %1363 to i64*
  %1367 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1363, i64 0, i32 0, i32 0
  %1368 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1367, align 8
  store i64 %1365, i64* %1366, align 8
  %1369 = icmp eq %"class.WTF::StringImpl"* %1368, null
  br i1 %1369, label %1383, label %1370

1370:                                             ; preds = %1361
  %1371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1368, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1372 = load atomic i32, i32* %1371 monotonic, align 4
  %1373 = and i32 %1372, 2
  %1374 = icmp eq i32 %1373, 0
  %1375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1368, i64 0, i32 0
  %1376 = load i32, i32* %1375, align 4
  br i1 %1374, label %1377, label %1379

1377:                                             ; preds = %1370
  %1378 = add i32 %1376, -1
  store i32 %1378, i32* %1375, align 4
  br label %1379

1379:                                             ; preds = %1377, %1370
  %1380 = phi i32 [ %1378, %1377 ], [ %1376, %1370 ]
  %1381 = icmp eq i32 %1380, 0
  br i1 %1381, label %1382, label %1383

1382:                                             ; preds = %1379
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1368) #8
  br label %1383

1383:                                             ; preds = %1361, %1379, %1382
  br i1 %1362, label %1397, label %1384

1384:                                             ; preds = %1383
  %1385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1364, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1386 = load atomic i32, i32* %1385 monotonic, align 4
  %1387 = and i32 %1386, 2
  %1388 = icmp eq i32 %1387, 0
  %1389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1364, i64 0, i32 0
  %1390 = load i32, i32* %1389, align 4
  br i1 %1388, label %1391, label %1393

1391:                                             ; preds = %1384
  %1392 = add i32 %1390, -1
  store i32 %1392, i32* %1389, align 4
  br label %1393

1393:                                             ; preds = %1391, %1384
  %1394 = phi i32 [ %1392, %1391 ], [ %1390, %1384 ]
  %1395 = icmp eq i32 %1394, 0
  br i1 %1395, label %1396, label %1397

1396:                                             ; preds = %1393
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1364) #8
  br label %1397

1397:                                             ; preds = %1383, %1393, %1396
  %1398 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1399 = load i8*, i8** %1398, align 8
  store i8* null, i8** %1398, align 8
  %1400 = icmp eq i8* %1399, null
  br i1 %1400, label %1402, label %1401

1401:                                             ; preds = %1397
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1399) #8
  br label %1402

1402:                                             ; preds = %1401, %1397
  %1403 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8
  %1404 = icmp eq %"class.WTF::StringImpl"* %1403, null
  br i1 %1404, label %1418, label %1405

1405:                                             ; preds = %1402
  %1406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1403, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1407 = load atomic i32, i32* %1406 monotonic, align 4
  %1408 = and i32 %1407, 2
  %1409 = icmp eq i32 %1408, 0
  %1410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1403, i64 0, i32 0
  %1411 = load i32, i32* %1410, align 4
  br i1 %1409, label %1412, label %1414

1412:                                             ; preds = %1405
  %1413 = add i32 %1411, -1
  store i32 %1413, i32* %1410, align 4
  br label %1414

1414:                                             ; preds = %1412, %1405
  %1415 = phi i32 [ %1413, %1412 ], [ %1411, %1405 ]
  %1416 = icmp eq i32 %1415, 0
  br i1 %1416, label %1417, label %1418

1417:                                             ; preds = %1414
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1403) #8
  br label %1418

1418:                                             ; preds = %1402, %1414, %1417
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1220) #8
  br label %1441

1419:                                             ; preds = %1237, %1308
  %1420 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1421 = load i8*, i8** %1420, align 8
  store i8* null, i8** %1420, align 8
  %1422 = icmp eq i8* %1421, null
  br i1 %1422, label %1424, label %1423

1423:                                             ; preds = %1419
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1421) #8
  br label %1424

1424:                                             ; preds = %1423, %1419
  %1425 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8
  %1426 = icmp eq %"class.WTF::StringImpl"* %1425, null
  br i1 %1426, label %1440, label %1427

1427:                                             ; preds = %1424
  %1428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1425, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1429 = load atomic i32, i32* %1428 monotonic, align 4
  %1430 = and i32 %1429, 2
  %1431 = icmp eq i32 %1430, 0
  %1432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1425, i64 0, i32 0
  %1433 = load i32, i32* %1432, align 4
  br i1 %1431, label %1434, label %1436

1434:                                             ; preds = %1427
  %1435 = add i32 %1433, -1
  store i32 %1435, i32* %1432, align 4
  br label %1436

1436:                                             ; preds = %1434, %1427
  %1437 = phi i32 [ %1435, %1434 ], [ %1433, %1427 ]
  %1438 = icmp eq i32 %1437, 0
  br i1 %1438, label %1439, label %1440

1439:                                             ; preds = %1436
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1425) #8
  br label %1440

1440:                                             ; preds = %1424, %1436, %1439
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1220) #8
  br label %1661

1441:                                             ; preds = %1418, %1213
  %1442 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 24, i32 0
  %1443 = bitcast %"class.v8::Name"** %1442 to %"class.v8::Value"**
  %1444 = load %"class.v8::Value"*, %"class.v8::Value"** %1443, align 8
  %1445 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %1444) #8
  %1446 = icmp eq %"class.v8::Value"* %1445, null
  br i1 %1446, label %1447, label %1453

1447:                                             ; preds = %1441
  %1448 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %1449 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1450 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1449, align 8
  %1451 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1450, i64 5
  %1452 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1451, align 8
  call void %1452(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1448) #8
  br label %1661

1453:                                             ; preds = %1441
  %1454 = bitcast %"class.v8::Value"* %1445 to i64*
  %1455 = load i64, i64* %1454, align 8
  %1456 = and i64 %1455, 3
  %1457 = icmp eq i64 %1456, 1
  br i1 %1457, label %1458, label %1475

1458:                                             ; preds = %1453
  %1459 = add i64 %1455, -1
  %1460 = inttoptr i64 %1459 to i32*
  %1461 = load i32, i32* %1460, align 4
  %1462 = and i64 %1455, -4294967296
  %1463 = zext i32 %1461 to i64
  %1464 = or i64 %1462, %1463
  %1465 = add i64 %1464, 7
  %1466 = inttoptr i64 %1465 to i16*
  %1467 = load i16, i16* %1466, align 2
  %1468 = icmp eq i16 %1467, 67
  br i1 %1468, label %1469, label %1475

1469:                                             ; preds = %1458
  %1470 = add i64 %1455, 23
  %1471 = inttoptr i64 %1470 to i32*
  %1472 = load i32, i32* %1471, align 4
  %1473 = and i32 %1472, -2
  %1474 = icmp eq i32 %1473, 10
  br i1 %1474, label %1495, label %1475

1475:                                             ; preds = %1458, %1453, %1469
  %1476 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %1445) #8
  br i1 %1476, label %1477, label %1480, !prof !2

1477:                                             ; preds = %1475
  %1478 = bitcast %"class.v8::Value"* %1445 to %"class.v8::Uint32"*
  %1479 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %1478) #8
  br label %1487

1480:                                             ; preds = %1475
  %1481 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %1445) #8
  br i1 %1481, label %1482, label %1485, !prof !2

1482:                                             ; preds = %1480
  %1483 = bitcast %"class.v8::Value"* %1445 to %"class.v8::Int32"*
  %1484 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %1483) #8
  br label %1487

1485:                                             ; preds = %1480
  %1486 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1445, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %1487

1487:                                             ; preds = %1477, %1482, %1485
  %1488 = phi i32 [ %1479, %1477 ], [ %1484, %1482 ], [ %1486, %1485 ]
  %1489 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1490 = load i32, i32* %1489, align 8
  %1491 = icmp eq i32 %1490, 0
  br i1 %1491, label %1492, label %1661

1492:                                             ; preds = %1487
  %1493 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 53
  store i32 %1488, i32* %1493, align 8
  %1494 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 24
  store i8 1, i8* %1494, align 1
  br label %1495

1495:                                             ; preds = %1492, %1469
  %1496 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 25, i32 0
  %1497 = bitcast %"class.v8::Name"** %1496 to %"class.v8::Value"**
  %1498 = load %"class.v8::Value"*, %"class.v8::Value"** %1497, align 8
  %1499 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %1498) #8
  %1500 = icmp eq %"class.v8::Value"* %1499, null
  br i1 %1500, label %1501, label %1507

1501:                                             ; preds = %1495
  %1502 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %1503 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1504 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1503, align 8
  %1505 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1504, i64 5
  %1506 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1505, align 8
  call void %1506(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1502) #8
  br label %1661

1507:                                             ; preds = %1495
  %1508 = bitcast %"class.v8::Value"* %1499 to i64*
  %1509 = load i64, i64* %1508, align 8
  %1510 = and i64 %1509, 3
  %1511 = icmp eq i64 %1510, 1
  br i1 %1511, label %1512, label %1529

1512:                                             ; preds = %1507
  %1513 = add i64 %1509, -1
  %1514 = inttoptr i64 %1513 to i32*
  %1515 = load i32, i32* %1514, align 4
  %1516 = and i64 %1509, -4294967296
  %1517 = zext i32 %1515 to i64
  %1518 = or i64 %1516, %1517
  %1519 = add i64 %1518, 7
  %1520 = inttoptr i64 %1519 to i16*
  %1521 = load i16, i16* %1520, align 2
  %1522 = icmp eq i16 %1521, 67
  br i1 %1522, label %1523, label %1529

1523:                                             ; preds = %1512
  %1524 = add i64 %1509, 23
  %1525 = inttoptr i64 %1524 to i32*
  %1526 = load i32, i32* %1525, align 4
  %1527 = and i32 %1526, -2
  %1528 = icmp eq i32 %1527, 10
  br i1 %1528, label %1549, label %1529

1529:                                             ; preds = %1512, %1507, %1523
  %1530 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %1499) #8
  br i1 %1530, label %1531, label %1534, !prof !2

1531:                                             ; preds = %1529
  %1532 = bitcast %"class.v8::Value"* %1499 to %"class.v8::Uint32"*
  %1533 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %1532) #8
  br label %1541

1534:                                             ; preds = %1529
  %1535 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %1499) #8
  br i1 %1535, label %1536, label %1539, !prof !2

1536:                                             ; preds = %1534
  %1537 = bitcast %"class.v8::Value"* %1499 to %"class.v8::Int32"*
  %1538 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %1537) #8
  br label %1541

1539:                                             ; preds = %1534
  %1540 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1499, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %1541

1541:                                             ; preds = %1531, %1536, %1539
  %1542 = phi i32 [ %1533, %1531 ], [ %1538, %1536 ], [ %1540, %1539 ]
  %1543 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1544 = load i32, i32* %1543, align 8
  %1545 = icmp eq i32 %1544, 0
  br i1 %1545, label %1546, label %1661

1546:                                             ; preds = %1541
  %1547 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 54
  store i32 %1542, i32* %1547, align 4
  %1548 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 25
  store i8 1, i8* %1548, align 8
  br label %1549

1549:                                             ; preds = %1546, %1523
  %1550 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 26, i32 0
  %1551 = bitcast %"class.v8::Name"** %1550 to %"class.v8::Value"**
  %1552 = load %"class.v8::Value"*, %"class.v8::Value"** %1551, align 8
  %1553 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %1552) #8
  %1554 = icmp eq %"class.v8::Value"* %1553, null
  br i1 %1554, label %1555, label %1561

1555:                                             ; preds = %1549
  %1556 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %1557 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1558 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1557, align 8
  %1559 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1558, i64 5
  %1560 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1559, align 8
  call void %1560(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1556) #8
  br label %1661

1561:                                             ; preds = %1549
  %1562 = bitcast %"class.v8::Value"* %1553 to i64*
  %1563 = load i64, i64* %1562, align 8
  %1564 = and i64 %1563, 3
  %1565 = icmp eq i64 %1564, 1
  br i1 %1565, label %1566, label %1583

1566:                                             ; preds = %1561
  %1567 = add i64 %1563, -1
  %1568 = inttoptr i64 %1567 to i32*
  %1569 = load i32, i32* %1568, align 4
  %1570 = and i64 %1563, -4294967296
  %1571 = zext i32 %1569 to i64
  %1572 = or i64 %1570, %1571
  %1573 = add i64 %1572, 7
  %1574 = inttoptr i64 %1573 to i16*
  %1575 = load i16, i16* %1574, align 2
  %1576 = icmp eq i16 %1575, 67
  br i1 %1576, label %1577, label %1583

1577:                                             ; preds = %1566
  %1578 = add i64 %1563, 23
  %1579 = inttoptr i64 %1578 to i32*
  %1580 = load i32, i32* %1579, align 4
  %1581 = and i32 %1580, -2
  %1582 = icmp eq i32 %1581, 10
  br i1 %1582, label %1611, label %1583

1583:                                             ; preds = %1566, %1561, %1577
  %1584 = bitcast %"class.WTF::Vector.1"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1584) #8
  %1585 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %11, i64 0, i32 0, i32 0, i32 0
  %1586 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %11, i64 0, i32 0, i32 0, i32 2
  %1587 = bitcast %"class.WTF::Vector.1"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1587, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18IDLIntegerTypeBaseIjLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1"* nonnull sret %11, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1553, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %1588 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1589 = load i32, i32* %1588, align 8
  %1590 = icmp eq i32 %1589, 0
  br i1 %1590, label %1591, label %1601

1591:                                             ; preds = %1583
  call void @_ZN5blink13HIDReportItem9setUsagesERKN3WTF6VectorIjLj0ENS1_18PartitionAllocatorEEE(%"class.blink::HIDReportItem"* %2, %"class.WTF::Vector.1"* nonnull dereferenceable(16) %11) #8
  %1592 = load i32*, i32** %1585, align 8
  %1593 = icmp eq i32* %1592, null
  %1594 = bitcast i32* %1592 to i8*
  br i1 %1593, label %1600, label %1595, !prof !2

1595:                                             ; preds = %1591
  %1596 = load i32, i32* %1586, align 4
  %1597 = icmp eq i32 %1596, 0
  br i1 %1597, label %1599, label %1598, !prof !3

1598:                                             ; preds = %1595
  store i32 0, i32* %1586, align 4
  br label %1599

1599:                                             ; preds = %1598, %1595
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1594) #8
  store i32* null, i32** %1585, align 8
  br label %1600

1600:                                             ; preds = %1591, %1599
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1584) #8
  br label %1611

1601:                                             ; preds = %1583
  %1602 = load i32*, i32** %1585, align 8
  %1603 = icmp eq i32* %1602, null
  %1604 = bitcast i32* %1602 to i8*
  br i1 %1603, label %1610, label %1605, !prof !2

1605:                                             ; preds = %1601
  %1606 = load i32, i32* %1586, align 4
  %1607 = icmp eq i32 %1606, 0
  br i1 %1607, label %1609, label %1608, !prof !3

1608:                                             ; preds = %1605
  store i32 0, i32* %1586, align 4
  br label %1609

1609:                                             ; preds = %1608, %1605
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1604) #8
  store i32* null, i32** %1585, align 8
  br label %1610

1610:                                             ; preds = %1601, %1609
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1584) #8
  br label %1661

1611:                                             ; preds = %1600, %1577
  %1612 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %44, i64 27, i32 0
  %1613 = bitcast %"class.v8::Name"** %1612 to %"class.v8::Value"**
  %1614 = load %"class.v8::Value"*, %"class.v8::Value"** %1613, align 8
  %1615 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %46, %"class.v8::Value"* %1614) #8
  %1616 = icmp eq %"class.v8::Value"* %1615, null
  br i1 %1616, label %1617, label %1623

1617:                                             ; preds = %1611
  %1618 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %1619 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1620 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1619, align 8
  %1621 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1620, i64 5
  %1622 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1621, align 8
  call void %1622(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1618) #8
  br label %1661

1623:                                             ; preds = %1611
  %1624 = bitcast %"class.v8::Value"* %1615 to i64*
  %1625 = load i64, i64* %1624, align 8
  %1626 = and i64 %1625, 3
  %1627 = icmp eq i64 %1626, 1
  br i1 %1627, label %1628, label %1645

1628:                                             ; preds = %1623
  %1629 = add i64 %1625, -1
  %1630 = inttoptr i64 %1629 to i32*
  %1631 = load i32, i32* %1630, align 4
  %1632 = and i64 %1625, -4294967296
  %1633 = zext i32 %1631 to i64
  %1634 = or i64 %1632, %1633
  %1635 = add i64 %1634, 7
  %1636 = inttoptr i64 %1635 to i16*
  %1637 = load i16, i16* %1636, align 2
  %1638 = icmp eq i16 %1637, 67
  br i1 %1638, label %1639, label %1645

1639:                                             ; preds = %1628
  %1640 = add i64 %1625, 23
  %1641 = inttoptr i64 %1640 to i32*
  %1642 = load i32, i32* %1641, align 4
  %1643 = and i32 %1642, -2
  %1644 = icmp eq i32 %1643, 10
  br i1 %1644, label %1661, label %1645

1645:                                             ; preds = %1628, %1623, %1639
  %1646 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %1615) #8
  br i1 %1646, label %1647, label %1650, !prof !2

1647:                                             ; preds = %1645
  %1648 = bitcast %"class.v8::Value"* %1615 to %"class.v8::Boolean"*
  %1649 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %1648) #8
  br label %1652

1650:                                             ; preds = %1645
  %1651 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %1615, %"class.v8::Isolate"* %0) #8
  br label %1652

1652:                                             ; preds = %1647, %1650
  %1653 = phi i1 [ %1649, %1647 ], [ %1651, %1650 ]
  %1654 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1655 = load i32, i32* %1654, align 8
  %1656 = icmp eq i32 %1655, 0
  br i1 %1656, label %1657, label %1661

1657:                                             ; preds = %1652
  %1658 = zext i1 %1653 to i8
  %1659 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 56
  store i8 %1658, i8* %1659, align 8
  %1660 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %2, i64 0, i32 27
  store i8 1, i8* %1660, align 2
  br label %1661

1661:                                             ; preds = %1652, %1541, %1487, %1177, %1135, %1093, %1051, %1009, %967, %925, %767, %725, %683, %634, %585, %536, %486, %436, %386, %336, %286, %236, %186, %136, %86, %101, %201, %301, %401, %501, %599, %697, %781, %890, %939, %1023, %1107, %1191, %1440, %1501, %1617, %1657, %1639, %1610, %1555, %1447, %1149, %1065, %981, %897, %739, %648, %550, %451, %351, %251, %151, %51
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %45) #8
  br label %1662

1662:                                             ; preds = %29, %29, %4, %1661, %36
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #8
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #8
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.40, i64 0, i64 0)) #8
  %12 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #8
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.41, i64 0, i64 0)) #8
  %26 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #8
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #8
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare void @_ZN5blink13HIDReportItem10setStringsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::HIDReportItem"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18IDLIntegerTypeBaseIjLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #8
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.1"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #8
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.40, i64 0, i64 0)) #8
  %12 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #8
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.41, i64 0, i64 0)) #8
  %26 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #8
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.1"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #8
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare void @_ZN5blink13HIDReportItem9setUsagesERKN3WTF6VectorIjLj0ENS1_18PartitionAllocatorEEE(%"class.blink::HIDReportItem"*, %"class.WTF::Vector.1"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink13HIDReportItem8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::HIDReportItem"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #8
  %5 = tail call zeroext i1 @_ZN5blink17toV8HIDReportItemEPKNS_13HIDReportItemEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::HIDReportItem"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17toV8HIDReportItemEPKNS_13HIDReportItemEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::HIDReportItem"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %7 = add i64 %6, 8
  %8 = inttoptr i64 %7 to %"class.blink::V8PerIsolateData"**
  %9 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %8, align 8
  %10 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %9, i8* bitcast ([28 x i8*]* @_ZZN5blinkL26eternalV8HIDReportItemKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.325"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.325"*)) #8
  %11 = extractvalue { i64, %"class.v8::Eternal"* } %10, 1
  %12 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #8
  %13 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %30, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 28
  %18 = load i8, i8* %17, align 1, !range !4
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, i64 192, i64 184
  %21 = add i64 %20, %6
  %22 = inttoptr i64 %21 to %"class.v8::Value"*
  %23 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 0, i32 0
  %24 = load %"class.v8::Name"*, %"class.v8::Name"** %23, align 8
  %25 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %24, %"class.v8::Value"* %22) #8
  %26 = trunc i16 %25 to i8
  %27 = icmp ne i8 %26, 0
  %28 = icmp ugt i16 %25, 255
  %29 = and i1 %28, %27
  br i1 %29, label %30, label %494

30:                                               ; preds = %4, %16
  %31 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 2
  %32 = load i8, i8* %31, align 1, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 29
  %36 = load i8, i8* %35, align 4, !range !4
  %37 = icmp eq i8 %36, 0
  %38 = select i1 %37, i64 192, i64 184
  %39 = add i64 %38, %6
  %40 = inttoptr i64 %39 to %"class.v8::Value"*
  %41 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 1, i32 0
  %42 = load %"class.v8::Name"*, %"class.v8::Name"** %41, align 8
  %43 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %42, %"class.v8::Value"* %40) #8
  %44 = trunc i16 %43 to i8
  %45 = icmp ne i8 %44, 0
  %46 = icmp ugt i16 %43, 255
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %494

48:                                               ; preds = %30, %34
  %49 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 3
  %50 = load i8, i8* %49, align 2, !range !4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %66, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 30
  %54 = load i8, i8* %53, align 1, !range !4
  %55 = icmp eq i8 %54, 0
  %56 = select i1 %55, i64 192, i64 184
  %57 = add i64 %56, %6
  %58 = inttoptr i64 %57 to %"class.v8::Value"*
  %59 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 2, i32 0
  %60 = load %"class.v8::Name"*, %"class.v8::Name"** %59, align 8
  %61 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %60, %"class.v8::Value"* %58) #8
  %62 = trunc i16 %61 to i8
  %63 = icmp ne i8 %62, 0
  %64 = icmp ugt i16 %61, 255
  %65 = and i1 %64, %63
  br i1 %65, label %66, label %494

66:                                               ; preds = %48, %52
  %67 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 4
  %68 = load i8, i8* %67, align 1, !range !4
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %84, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 31
  %72 = load i8, i8* %71, align 2, !range !4
  %73 = icmp eq i8 %72, 0
  %74 = select i1 %73, i64 192, i64 184
  %75 = add i64 %74, %6
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  %77 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 3, i32 0
  %78 = load %"class.v8::Name"*, %"class.v8::Name"** %77, align 8
  %79 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %78, %"class.v8::Value"* %76) #8
  %80 = trunc i16 %79 to i8
  %81 = icmp ne i8 %80, 0
  %82 = icmp ugt i16 %79, 255
  %83 = and i1 %82, %81
  br i1 %83, label %84, label %494

84:                                               ; preds = %66, %70
  %85 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 5
  %86 = load i8, i8* %85, align 4, !range !4
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %102, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 32
  %90 = load i8, i8* %89, align 1, !range !4
  %91 = icmp eq i8 %90, 0
  %92 = select i1 %91, i64 192, i64 184
  %93 = add i64 %92, %6
  %94 = inttoptr i64 %93 to %"class.v8::Value"*
  %95 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 4, i32 0
  %96 = load %"class.v8::Name"*, %"class.v8::Name"** %95, align 8
  %97 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %96, %"class.v8::Value"* %94) #8
  %98 = trunc i16 %97 to i8
  %99 = icmp ne i8 %98, 0
  %100 = icmp ugt i16 %97, 255
  %101 = and i1 %100, %99
  br i1 %101, label %102, label %494

102:                                              ; preds = %84, %88
  %103 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 6
  %104 = load i8, i8* %103, align 1, !range !4
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %120, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 33
  %108 = load i8, i8* %107, align 8, !range !4
  %109 = icmp eq i8 %108, 0
  %110 = select i1 %109, i64 192, i64 184
  %111 = add i64 %110, %6
  %112 = inttoptr i64 %111 to %"class.v8::Value"*
  %113 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 5, i32 0
  %114 = load %"class.v8::Name"*, %"class.v8::Name"** %113, align 8
  %115 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %114, %"class.v8::Value"* %112) #8
  %116 = trunc i16 %115 to i8
  %117 = icmp ne i8 %116, 0
  %118 = icmp ugt i16 %115, 255
  %119 = and i1 %118, %117
  br i1 %119, label %120, label %494

120:                                              ; preds = %102, %106
  %121 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 7
  %122 = load i8, i8* %121, align 2, !range !4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %138, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 34
  %126 = load i8, i8* %125, align 1, !range !4
  %127 = icmp eq i8 %126, 0
  %128 = select i1 %127, i64 192, i64 184
  %129 = add i64 %128, %6
  %130 = inttoptr i64 %129 to %"class.v8::Value"*
  %131 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 6, i32 0
  %132 = load %"class.v8::Name"*, %"class.v8::Name"** %131, align 8
  %133 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %132, %"class.v8::Value"* %130) #8
  %134 = trunc i16 %133 to i8
  %135 = icmp ne i8 %134, 0
  %136 = icmp ugt i16 %133, 255
  %137 = and i1 %136, %135
  br i1 %137, label %138, label %494

138:                                              ; preds = %120, %124
  %139 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 8
  %140 = load i8, i8* %139, align 1, !range !4
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %156, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 35
  %144 = load i8, i8* %143, align 2, !range !4
  %145 = icmp eq i8 %144, 0
  %146 = select i1 %145, i64 192, i64 184
  %147 = add i64 %146, %6
  %148 = inttoptr i64 %147 to %"class.v8::Value"*
  %149 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 7, i32 0
  %150 = load %"class.v8::Name"*, %"class.v8::Name"** %149, align 8
  %151 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %150, %"class.v8::Value"* %148) #8
  %152 = trunc i16 %151 to i8
  %153 = icmp ne i8 %152, 0
  %154 = icmp ugt i16 %151, 255
  %155 = and i1 %154, %153
  br i1 %155, label %156, label %494

156:                                              ; preds = %138, %142
  %157 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 9
  %158 = load i8, i8* %157, align 8, !range !4
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %174, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 36
  %162 = load i8, i8* %161, align 1, !range !4
  %163 = icmp eq i8 %162, 0
  %164 = select i1 %163, i64 192, i64 184
  %165 = add i64 %164, %6
  %166 = inttoptr i64 %165 to %"class.v8::Value"*
  %167 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 8, i32 0
  %168 = load %"class.v8::Name"*, %"class.v8::Name"** %167, align 8
  %169 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %168, %"class.v8::Value"* %166) #8
  %170 = trunc i16 %169 to i8
  %171 = icmp ne i8 %170, 0
  %172 = icmp ugt i16 %169, 255
  %173 = and i1 %172, %171
  br i1 %173, label %174, label %494

174:                                              ; preds = %156, %160
  %175 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 10
  %176 = load i8, i8* %175, align 1, !range !4
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %190, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 37
  %180 = load i32, i32* %179, align 4
  %181 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %180) #8
  %182 = bitcast %"class.v8::Integer"* %181 to %"class.v8::Value"*
  %183 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 9, i32 0
  %184 = load %"class.v8::Name"*, %"class.v8::Name"** %183, align 8
  %185 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %184, %"class.v8::Value"* %182) #8
  %186 = trunc i16 %185 to i8
  %187 = icmp ne i8 %186, 0
  %188 = icmp ugt i16 %185, 255
  %189 = and i1 %188, %187
  br i1 %189, label %190, label %494

190:                                              ; preds = %174, %178
  %191 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 11
  %192 = load i8, i8* %191, align 2, !range !4
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %206, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 38
  %196 = load i32, i32* %195, align 8
  %197 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %196) #8
  %198 = bitcast %"class.v8::Integer"* %197 to %"class.v8::Value"*
  %199 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 10, i32 0
  %200 = load %"class.v8::Name"*, %"class.v8::Name"** %199, align 8
  %201 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %200, %"class.v8::Value"* %198) #8
  %202 = trunc i16 %201 to i8
  %203 = icmp ne i8 %202, 0
  %204 = icmp ugt i16 %201, 255
  %205 = and i1 %204, %203
  br i1 %205, label %206, label %494

206:                                              ; preds = %190, %194
  %207 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 12
  %208 = load i8, i8* %207, align 1, !range !4
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %222, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 39
  %212 = load i32, i32* %211, align 4
  %213 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %212) #8
  %214 = bitcast %"class.v8::Integer"* %213 to %"class.v8::Value"*
  %215 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 11, i32 0
  %216 = load %"class.v8::Name"*, %"class.v8::Name"** %215, align 8
  %217 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %216, %"class.v8::Value"* %214) #8
  %218 = trunc i16 %217 to i8
  %219 = icmp ne i8 %218, 0
  %220 = icmp ugt i16 %217, 255
  %221 = and i1 %220, %219
  br i1 %221, label %222, label %494

222:                                              ; preds = %206, %210
  %223 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 13
  %224 = load i8, i8* %223, align 4, !range !4
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %238, label %226

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 40
  %228 = load i32, i32* %227, align 8
  %229 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %228) #8
  %230 = bitcast %"class.v8::Integer"* %229 to %"class.v8::Value"*
  %231 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 12, i32 0
  %232 = load %"class.v8::Name"*, %"class.v8::Name"** %231, align 8
  %233 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %232, %"class.v8::Value"* %230) #8
  %234 = trunc i16 %233 to i8
  %235 = icmp ne i8 %234, 0
  %236 = icmp ugt i16 %233, 255
  %237 = and i1 %236, %235
  br i1 %237, label %238, label %494

238:                                              ; preds = %222, %226
  %239 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 14
  %240 = load i8, i8* %239, align 1, !range !4
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %255, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 41
  %244 = load i16, i16* %243, align 4
  %245 = zext i16 %244 to i32
  %246 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %245) #8
  %247 = bitcast %"class.v8::Integer"* %246 to %"class.v8::Value"*
  %248 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 13, i32 0
  %249 = load %"class.v8::Name"*, %"class.v8::Name"** %248, align 8
  %250 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %249, %"class.v8::Value"* %247) #8
  %251 = trunc i16 %250 to i8
  %252 = icmp ne i8 %251, 0
  %253 = icmp ugt i16 %250, 255
  %254 = and i1 %253, %252
  br i1 %254, label %255, label %494

255:                                              ; preds = %238, %242
  %256 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 15
  %257 = load i8, i8* %256, align 2, !range !4
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %272, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 42
  %261 = load i16, i16* %260, align 2
  %262 = zext i16 %261 to i32
  %263 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %262) #8
  %264 = bitcast %"class.v8::Integer"* %263 to %"class.v8::Value"*
  %265 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 14, i32 0
  %266 = load %"class.v8::Name"*, %"class.v8::Name"** %265, align 8
  %267 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %266, %"class.v8::Value"* %264) #8
  %268 = trunc i16 %267 to i8
  %269 = icmp ne i8 %268, 0
  %270 = icmp ugt i16 %267, 255
  %271 = and i1 %270, %269
  br i1 %271, label %272, label %494

272:                                              ; preds = %255, %259
  %273 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 16
  %274 = load i8, i8* %273, align 1, !range !4
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %287, label %276

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 43
  %278 = tail call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.WTF::Vector"* dereferenceable(16) %277, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %279 = bitcast %"class.v8::Array"* %278 to %"class.v8::Value"*
  %280 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 15, i32 0
  %281 = load %"class.v8::Name"*, %"class.v8::Name"** %280, align 8
  %282 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %281, %"class.v8::Value"* %279) #8
  %283 = trunc i16 %282 to i8
  %284 = icmp ne i8 %283, 0
  %285 = icmp ugt i16 %282, 255
  %286 = and i1 %285, %284
  br i1 %286, label %287, label %494

287:                                              ; preds = %272, %276
  %288 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 17
  %289 = load i8, i8* %288, align 8, !range !4
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %304, label %291

291:                                              ; preds = %287
  %292 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 44
  %293 = load i8, i8* %292, align 8
  %294 = sext i8 %293 to i32
  %295 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %294) #8
  %296 = bitcast %"class.v8::Integer"* %295 to %"class.v8::Value"*
  %297 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 16, i32 0
  %298 = load %"class.v8::Name"*, %"class.v8::Name"** %297, align 8
  %299 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %298, %"class.v8::Value"* %296) #8
  %300 = trunc i16 %299 to i8
  %301 = icmp ne i8 %300, 0
  %302 = icmp ugt i16 %299, 255
  %303 = and i1 %302, %301
  br i1 %303, label %304, label %494

304:                                              ; preds = %287, %291
  %305 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 18
  %306 = load i8, i8* %305, align 1, !range !4
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %321, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 45
  %310 = load i8, i8* %309, align 1
  %311 = sext i8 %310 to i32
  %312 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %311) #8
  %313 = bitcast %"class.v8::Integer"* %312 to %"class.v8::Value"*
  %314 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 17, i32 0
  %315 = load %"class.v8::Name"*, %"class.v8::Name"** %314, align 8
  %316 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %315, %"class.v8::Value"* %313) #8
  %317 = trunc i16 %316 to i8
  %318 = icmp ne i8 %317, 0
  %319 = icmp ugt i16 %316, 255
  %320 = and i1 %319, %318
  br i1 %320, label %321, label %494

321:                                              ; preds = %304, %308
  %322 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 19
  %323 = load i8, i8* %322, align 2, !range !4
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %338, label %325

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 46
  %327 = load i8, i8* %326, align 2
  %328 = sext i8 %327 to i32
  %329 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %328) #8
  %330 = bitcast %"class.v8::Integer"* %329 to %"class.v8::Value"*
  %331 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 18, i32 0
  %332 = load %"class.v8::Name"*, %"class.v8::Name"** %331, align 8
  %333 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %332, %"class.v8::Value"* %330) #8
  %334 = trunc i16 %333 to i8
  %335 = icmp ne i8 %334, 0
  %336 = icmp ugt i16 %333, 255
  %337 = and i1 %336, %335
  br i1 %337, label %338, label %494

338:                                              ; preds = %321, %325
  %339 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 20
  %340 = load i8, i8* %339, align 1, !range !4
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %355, label %342

342:                                              ; preds = %338
  %343 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 47
  %344 = load i8, i8* %343, align 1
  %345 = sext i8 %344 to i32
  %346 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %345) #8
  %347 = bitcast %"class.v8::Integer"* %346 to %"class.v8::Value"*
  %348 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 19, i32 0
  %349 = load %"class.v8::Name"*, %"class.v8::Name"** %348, align 8
  %350 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %349, %"class.v8::Value"* %347) #8
  %351 = trunc i16 %350 to i8
  %352 = icmp ne i8 %351, 0
  %353 = icmp ugt i16 %350, 255
  %354 = and i1 %353, %352
  br i1 %354, label %355, label %494

355:                                              ; preds = %338, %342
  %356 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 21
  %357 = load i8, i8* %356, align 4, !range !4
  %358 = icmp eq i8 %357, 0
  br i1 %358, label %372, label %359

359:                                              ; preds = %355
  %360 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 48
  %361 = load i8, i8* %360, align 4
  %362 = sext i8 %361 to i32
  %363 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %362) #8
  %364 = bitcast %"class.v8::Integer"* %363 to %"class.v8::Value"*
  %365 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 20, i32 0
  %366 = load %"class.v8::Name"*, %"class.v8::Name"** %365, align 8
  %367 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %366, %"class.v8::Value"* %364) #8
  %368 = trunc i16 %367 to i8
  %369 = icmp ne i8 %368, 0
  %370 = icmp ugt i16 %367, 255
  %371 = and i1 %370, %369
  br i1 %371, label %372, label %494

372:                                              ; preds = %355, %359
  %373 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 22
  %374 = load i8, i8* %373, align 1, !range !4
  %375 = icmp eq i8 %374, 0
  br i1 %375, label %389, label %376

376:                                              ; preds = %372
  %377 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 49
  %378 = load i8, i8* %377, align 1
  %379 = sext i8 %378 to i32
  %380 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %379) #8
  %381 = bitcast %"class.v8::Integer"* %380 to %"class.v8::Value"*
  %382 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 21, i32 0
  %383 = load %"class.v8::Name"*, %"class.v8::Name"** %382, align 8
  %384 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %383, %"class.v8::Value"* %381) #8
  %385 = trunc i16 %384 to i8
  %386 = icmp ne i8 %385, 0
  %387 = icmp ugt i16 %384, 255
  %388 = and i1 %387, %386
  br i1 %388, label %389, label %494

389:                                              ; preds = %372, %376
  %390 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 23
  %391 = load i8, i8* %390, align 2, !range !4
  %392 = icmp eq i8 %391, 0
  br i1 %392, label %406, label %393

393:                                              ; preds = %389
  %394 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 50
  %395 = load i8, i8* %394, align 2
  %396 = sext i8 %395 to i32
  %397 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %396) #8
  %398 = bitcast %"class.v8::Integer"* %397 to %"class.v8::Value"*
  %399 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 22, i32 0
  %400 = load %"class.v8::Name"*, %"class.v8::Name"** %399, align 8
  %401 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %400, %"class.v8::Value"* %398) #8
  %402 = trunc i16 %401 to i8
  %403 = icmp ne i8 %402, 0
  %404 = icmp ugt i16 %401, 255
  %405 = and i1 %404, %403
  br i1 %405, label %406, label %494

406:                                              ; preds = %389, %393
  %407 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 52, i32 0, i32 0
  %408 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %407, align 8
  %409 = icmp eq %"class.WTF::StringImpl"* %408, null
  br i1 %409, label %428, label %410

410:                                              ; preds = %406
  %411 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %411) #8
  %412 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %408, %"class.WTF::StringImpl"** %412, align 8
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 1
  %414 = load i32, i32* %413, align 4
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 1
  %416 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %417 = bitcast i8** %416 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %415, %"class.WTF::StringImpl"** %417, align 8
  %418 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %414, i32* %418, align 8
  %419 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %411) #8
  %420 = bitcast %"class.v8::String"* %419 to %"class.v8::Value"*
  %421 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 23, i32 0
  %422 = load %"class.v8::Name"*, %"class.v8::Name"** %421, align 8
  %423 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %422, %"class.v8::Value"* %420) #8
  %424 = trunc i16 %423 to i8
  %425 = icmp ne i8 %424, 0
  %426 = icmp ugt i16 %423, 255
  %427 = and i1 %426, %425
  br i1 %427, label %428, label %494

428:                                              ; preds = %406, %410
  %429 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 24
  %430 = load i8, i8* %429, align 1, !range !4
  %431 = icmp eq i8 %430, 0
  br i1 %431, label %444, label %432

432:                                              ; preds = %428
  %433 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 53
  %434 = load i32, i32* %433, align 8
  %435 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %434) #8
  %436 = bitcast %"class.v8::Integer"* %435 to %"class.v8::Value"*
  %437 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 24, i32 0
  %438 = load %"class.v8::Name"*, %"class.v8::Name"** %437, align 8
  %439 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %438, %"class.v8::Value"* %436) #8
  %440 = trunc i16 %439 to i8
  %441 = icmp ne i8 %440, 0
  %442 = icmp ugt i16 %439, 255
  %443 = and i1 %442, %441
  br i1 %443, label %444, label %494

444:                                              ; preds = %428, %432
  %445 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 25
  %446 = load i8, i8* %445, align 8, !range !4
  %447 = icmp eq i8 %446, 0
  br i1 %447, label %460, label %448

448:                                              ; preds = %444
  %449 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 54
  %450 = load i32, i32* %449, align 4
  %451 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %450) #8
  %452 = bitcast %"class.v8::Integer"* %451 to %"class.v8::Value"*
  %453 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 25, i32 0
  %454 = load %"class.v8::Name"*, %"class.v8::Name"** %453, align 8
  %455 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %454, %"class.v8::Value"* %452) #8
  %456 = trunc i16 %455 to i8
  %457 = icmp ne i8 %456, 0
  %458 = icmp ugt i16 %455, 255
  %459 = and i1 %458, %457
  br i1 %459, label %460, label %494

460:                                              ; preds = %444, %448
  %461 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 26
  %462 = load i8, i8* %461, align 1, !range !4
  %463 = icmp eq i8 %462, 0
  br i1 %463, label %475, label %464

464:                                              ; preds = %460
  %465 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 55
  %466 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorIjLj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS5_5ArrayEEERKT_NS6_INS5_6ObjectEEEPNS5_7IsolateE(%"class.WTF::Vector.1"* dereferenceable(16) %465, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %467 = bitcast %"class.v8::Array"* %466 to %"class.v8::Value"*
  %468 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 26, i32 0
  %469 = load %"class.v8::Name"*, %"class.v8::Name"** %468, align 8
  %470 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %469, %"class.v8::Value"* %467) #8
  %471 = trunc i16 %470 to i8
  %472 = icmp ne i8 %471, 0
  %473 = icmp ugt i16 %470, 255
  %474 = and i1 %473, %472
  br i1 %474, label %475, label %494

475:                                              ; preds = %460, %464
  %476 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 27
  %477 = load i8, i8* %476, align 2, !range !4
  %478 = icmp eq i8 %477, 0
  br i1 %478, label %493, label %479

479:                                              ; preds = %475
  %480 = getelementptr inbounds %"class.blink::HIDReportItem", %"class.blink::HIDReportItem"* %0, i64 0, i32 56
  %481 = load i8, i8* %480, align 8, !range !4
  %482 = icmp eq i8 %481, 0
  %483 = select i1 %482, i64 192, i64 184
  %484 = add i64 %483, %6
  %485 = inttoptr i64 %484 to %"class.v8::Value"*
  %486 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 27, i32 0
  %487 = load %"class.v8::Name"*, %"class.v8::Name"** %486, align 8
  %488 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %487, %"class.v8::Value"* %485) #8
  %489 = trunc i16 %488 to i8
  %490 = icmp ne i8 %489, 0
  %491 = icmp ugt i16 %488, 255
  %492 = and i1 %491, %490
  br i1 %492, label %493, label %494

493:                                              ; preds = %475, %479
  br label %494

494:                                              ; preds = %34, %70, %106, %142, %178, %210, %242, %276, %308, %342, %376, %410, %448, %493, %479, %464, %432, %393, %359, %325, %291, %259, %226, %194, %160, %124, %88, %52, %16
  %495 = phi i1 [ false, %16 ], [ false, %34 ], [ false, %52 ], [ false, %70 ], [ false, %88 ], [ false, %106 ], [ false, %124 ], [ false, %142 ], [ false, %160 ], [ false, %178 ], [ false, %194 ], [ false, %210 ], [ false, %226 ], [ false, %242 ], [ false, %259 ], [ false, %276 ], [ false, %291 ], [ false, %308 ], [ false, %325 ], [ false, %342 ], [ false, %359 ], [ false, %376 ], [ false, %393 ], [ false, %410 ], [ false, %432 ], [ false, %448 ], [ false, %464 ], [ true, %493 ], [ false, %479 ]
  ret i1 %495
}

declare %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #8
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #8
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #8
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !3

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #8
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HIDReportItem"* @_ZN5blink17NativeValueTraitsINS_13HIDReportItemEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 128) #8
  %5 = bitcast i8* %4 to %"class.blink::HIDReportItem"*
  tail call void @_ZN5blink13HIDReportItemC1Ev(%"class.blink::HIDReportItem"* %5) #8
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink15V8HIDReportItem6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13HIDReportItemERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::HIDReportItem"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::HIDReportItem"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.325"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN5blink13HIDReportItemC1Ev(%"class.blink::HIDReportItem"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #8
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37, i64 0, i64 0), i8* %40, i8* %41) #8
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.38, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #8
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i16 @_ZN5blink8ToUInt16EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 268173312
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.42, i64 0, i64 0)) #8
  %12 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #8
  br label %145

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #8
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %9) #8
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #8
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector"* %5 to i64*
  %35 = bitcast %"class.WTF::Vector"* %0 to i8*
  br label %99

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %38 = bitcast %"class.WTF::String"* %7 to i8*
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %41 = bitcast %"class.WTF::Vector"* %0 to i8*
  br label %42

42:                                               ; preds = %36, %90
  %43 = phi i32 [ 0, %36 ], [ %91, %90 ]
  %44 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %37, %"class.v8::Context"* %29, i32 %43) #8
  %45 = icmp eq %"class.v8::Value"* %44, null
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %48 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %49 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %49, i64 5
  %51 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %50, align 8
  call void %51(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %47) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #8
  br label %108

52:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #8
  %53 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %44, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %39, align 8
  %54 = load i32, i32* %40, align 8
  %55 = icmp eq i32 %54, 0
  %56 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  br i1 %55, label %58, label %57

57:                                               ; preds = %52
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #8
  br label %71

58:                                               ; preds = %52
  %59 = load i32, i32* %17, align 4
  %60 = load i32, i32* %16, align 8
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %69, label %62, !prof !3

62:                                               ; preds = %58
  %63 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %64 = zext i32 %59 to i64
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 %64
  %66 = bitcast %"class.WTF::String"* %65 to i64*
  store i64 %56, i64* %66, align 8
  %67 = load i32, i32* %17, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %17, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #8
  br label %90

69:                                               ; preds = %58
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %7) #8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  br label %71

71:                                               ; preds = %69, %57
  %72 = phi %"class.WTF::StringImpl"* [ %70, %69 ], [ %53, %57 ]
  %73 = phi i32 [ 0, %69 ], [ 1, %57 ]
  %74 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #8
  br label %88

88:                                               ; preds = %87, %84, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #8
  %89 = icmp eq i32 %73, 0
  br i1 %89, label %90, label %108

90:                                               ; preds = %62, %88
  %91 = add nuw i32 %43, 1
  %92 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %42, label %94

94:                                               ; preds = %90
  %95 = bitcast %"class.WTF::Vector"* %5 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = load i32, i32* %16, align 8
  %98 = load i32, i32* %17, align 4
  br label %99

99:                                               ; preds = %33, %94
  %100 = phi i8* [ %35, %33 ], [ %41, %94 ]
  %101 = phi i64* [ %34, %33 ], [ %95, %94 ]
  %102 = phi i32 [ 0, %33 ], [ %98, %94 ]
  %103 = phi i32 [ %27, %33 ], [ %97, %94 ]
  %104 = phi i64 [ %28, %33 ], [ %96, %94 ]
  %105 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %106 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #8
  %107 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  store atomic i64 %104, i64* %107 monotonic, align 8
  store i32 %103, i32* %105, align 8
  store i32 0, i32* %16, align 8
  store i32 %102, i32* %106, align 4
  store i32 0, i32* %17, align 4
  br label %108

108:                                              ; preds = %88, %46, %99
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #8
  %109 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %110 = icmp eq %"class.WTF::String"* %109, null
  br i1 %110, label %144, label %111, !prof !2

111:                                              ; preds = %108
  %112 = bitcast %"class.WTF::String"* %109 to i8*
  %113 = load i32, i32* %17, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %142, label %115, !prof !3

115:                                              ; preds = %111
  %116 = zext i32 %113 to i64
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %109, i64 %116
  br label %118

118:                                              ; preds = %136, %115
  %119 = phi %"class.WTF::String"* [ %137, %136 ], [ %109, %115 ]
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #8
  br label %136

136:                                              ; preds = %135, %132, %118
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 1
  %138 = icmp eq %"class.WTF::String"* %137, %117
  br i1 %138, label %139, label %118

139:                                              ; preds = %136
  store i32 0, i32* %17, align 4
  %140 = bitcast %"class.WTF::Vector"* %5 to i8**
  %141 = load i8*, i8** %140, align 8
  br label %142

142:                                              ; preds = %139, %111
  %143 = phi i8* [ %141, %139 ], [ %112, %111 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %143) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %144

144:                                              ; preds = %108, %142
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br label %145

145:                                              ; preds = %144, %11
  ret void
}

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #8
  %9 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #8
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %13, label %14, label %74

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.WTF::String"* %6 to i8*
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %19

19:                                               ; preds = %14, %72
  %20 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %21 = icmp eq %"class.v8::Value"* %20, null
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %19
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %23

23:                                               ; preds = %19, %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %24 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %20, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %17, align 8
  %25 = load i32, i32* %18, align 8
  %26 = icmp eq i32 %25, 0
  %27 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  br i1 %26, label %45, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #8
  %30 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #8
  br label %44

44:                                               ; preds = %28, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %89

45:                                               ; preds = %23
  %46 = load i32, i32* %12, align 4
  %47 = load i32, i32* %11, align 8
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %56, label %49, !prof !3

49:                                               ; preds = %45
  %50 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %51 = zext i32 %46 to i64
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 %51
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 %27, i64* %53, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %54 = load i32, i32* %12, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %12, align 4
  br label %72

56:                                               ; preds = %45
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #8
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #8
  br label %72

72:                                               ; preds = %49, %56, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %73 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %73, label %19, label %74

74:                                               ; preds = %72, %4
  %75 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 16, i1 false) #8
  br label %89

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %83 = bitcast %"class.WTF::Vector"* %5 to i64*
  %84 = bitcast %"class.WTF::Vector"* %0 to i64*
  store i64 0, i64* %84, align 8
  %85 = load i64, i64* %83, align 8
  %86 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %83 monotonic, align 8
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load i32, i32* %11, align 8
  store i32 %87, i32* %81, align 8
  store i32 0, i32* %11, align 8
  %88 = load i32, i32* %12, align 4
  store i32 %88, i32* %82, align 4
  store i32 0, i32* %12, align 4
  br label %89

89:                                               ; preds = %44, %80, %78
  %90 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %91 = icmp eq %"class.WTF::String"* %90, null
  br i1 %91, label %125, label %92, !prof !2

92:                                               ; preds = %89
  %93 = bitcast %"class.WTF::String"* %90 to i8*
  %94 = load i32, i32* %12, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %123, label %96, !prof !3

96:                                               ; preds = %92
  %97 = zext i32 %94 to i64
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 %97
  br label %99

99:                                               ; preds = %117, %96
  %100 = phi %"class.WTF::String"* [ %118, %117 ], [ %90, %96 ]
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #8
  br label %117

117:                                              ; preds = %116, %113, %99
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 1
  %119 = icmp eq %"class.WTF::String"* %118, %98
  br i1 %119, label %120, label %99

120:                                              ; preds = %117
  store i32 0, i32* %12, align 4
  %121 = bitcast %"class.WTF::Vector"* %5 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %120, %92
  %124 = phi i8* [ %122, %120 ], [ %93, %92 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %124) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %10, align 8
  br label %125

125:                                              ; preds = %89, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.blink::V8StringResource", align 8
  %6 = bitcast %"class.blink::V8StringResource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 152, i1 false)
  %7 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %5) #8
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false) #8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #8
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %16 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #8
  %17 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %16) #8
  %18 = ptrtoint %"class.v8::String"* %17 to i64
  %19 = bitcast %"class.blink::V8StringResource"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = icmp eq %"class.v8::String"* %17, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #8
  br label %28

22:                                               ; preds = %13
  %23 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #8
  %24 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %25 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %25, i64 5
  %27 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %26, align 8
  call void %27(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %23) #8
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #8
  br label %55

28:                                               ; preds = %3, %21
  %29 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %35, label %31, !prof !3

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %29 to %"class.v8::String"*
  %33 = load i32, i32* %8, align 8
  %34 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %32, i32 %33) #8
  br label %55

35:                                               ; preds = %28
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %35, %31, %22
  %56 = phi %"class.WTF::StringImpl"* [ null, %22 ], [ %34, %31 ], [ null, %35 ], [ %36, %38 ], [ %36, %53 ]
  %57 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  store i8* null, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %55
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %58) #8
  br label %61

61:                                               ; preds = %60, %55
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #8
  br label %77

77:                                               ; preds = %61, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #8
  ret %"class.WTF::StringImpl"* %56
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.43, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.44, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !2

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #8
  br i1 %22, label %23, label %80, !prof !2

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #8
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #8
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #8
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %35
  tail call void @llvm.trap() #8
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #8
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #8
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #2

declare signext i8 @_ZN5blink6ToInt8EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #2

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.1"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.1", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca i32, align 4
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 536346624
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.42, i64 0, i64 0)) #8
  %12 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #8
  br label %107

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #8
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %9) #8
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #8
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.1"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 2
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #8
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector.1"* %5 to i64*
  br label %88

35:                                               ; preds = %26
  %36 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %37 = bitcast i32* %7 to i8*
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %39

39:                                               ; preds = %35, %79
  %40 = phi i32 [ 0, %35 ], [ %80, %79 ]
  %41 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %36, %"class.v8::Context"* %29, i32 %40) #8
  %42 = icmp eq %"class.v8::Value"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %45 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %46, i64 5
  %48 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %47, align 8
  call void %48(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %44) #8
  %49 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #8
  br label %97

50:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #8
  %51 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %41) #8
  br i1 %51, label %52, label %55, !prof !2

52:                                               ; preds = %50
  %53 = bitcast %"class.v8::Value"* %41 to %"class.v8::Uint32"*
  %54 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %53) #8
  br label %62

55:                                               ; preds = %50
  %56 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %41) #8
  br i1 %56, label %57, label %60, !prof !2

57:                                               ; preds = %55
  %58 = bitcast %"class.v8::Value"* %41 to %"class.v8::Int32"*
  %59 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %58) #8
  br label %62

60:                                               ; preds = %55
  %61 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %41, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %62

62:                                               ; preds = %52, %57, %60
  %63 = phi i32 [ %54, %52 ], [ %59, %57 ], [ %61, %60 ]
  store i32 %63, i32* %7, align 4
  %64 = load i32, i32* %38, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %77

66:                                               ; preds = %62
  %67 = load i32, i32* %17, align 4
  %68 = load i32, i32* %16, align 8
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %76, label %70, !prof !3

70:                                               ; preds = %66
  %71 = load i32*, i32** %15, align 8
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds i32, i32* %71, i64 %72
  store i32 %63, i32* %73, align 4
  %74 = load i32, i32* %17, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %17, align 4
  br label %79

76:                                               ; preds = %66
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.1"* nonnull %5, i32* nonnull dereferenceable(4) %7) #8
  br label %79

77:                                               ; preds = %62
  %78 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #8
  br label %97

79:                                               ; preds = %70, %76
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #8
  %80 = add nuw i32 %40, 1
  %81 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %39, label %83

83:                                               ; preds = %79
  %84 = bitcast %"class.WTF::Vector.1"* %5 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = load i32, i32* %16, align 8
  %87 = load i32, i32* %17, align 4
  br label %88

88:                                               ; preds = %33, %83
  %89 = phi i64* [ %34, %33 ], [ %84, %83 ]
  %90 = phi i32 [ 0, %33 ], [ %87, %83 ]
  %91 = phi i32 [ %27, %33 ], [ %86, %83 ]
  %92 = phi i64 [ %28, %33 ], [ %85, %83 ]
  %93 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %95 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store i64 0, i64* %95, align 8
  %96 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 0, i64* %89 monotonic, align 8
  store atomic i64 %92, i64* %96 monotonic, align 8
  store i32 %91, i32* %93, align 8
  store i32 0, i32* %16, align 8
  store i32 %90, i32* %94, align 4
  store i32 0, i32* %17, align 4
  br label %97

97:                                               ; preds = %43, %77, %88
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #8
  %98 = load i32*, i32** %15, align 8
  %99 = icmp eq i32* %98, null
  %100 = bitcast i32* %98 to i8*
  br i1 %99, label %106, label %101, !prof !2

101:                                              ; preds = %97
  %102 = load i32, i32* %17, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %105, label %104, !prof !3

104:                                              ; preds = %101
  store i32 0, i32* %17, align 4
  br label %105

105:                                              ; preds = %104, %101
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %100) #8
  store i32* null, i32** %15, align 8
  br label %106

106:                                              ; preds = %97, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br label %107

107:                                              ; preds = %106, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.1"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.1", align 8
  %6 = alloca i32, align 4
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #8
  %9 = bitcast %"class.WTF::Vector.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #8
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %13, label %14, label %53

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast i32* %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %18

18:                                               ; preds = %14, %51
  %19 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %20 = icmp eq %"class.v8::Value"* %19, null
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %18
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %22

22:                                               ; preds = %18, %21
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #8
  %23 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %19) #8
  br i1 %23, label %24, label %27, !prof !2

24:                                               ; preds = %22
  %25 = bitcast %"class.v8::Value"* %19 to %"class.v8::Uint32"*
  %26 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %25) #8
  br label %34

27:                                               ; preds = %22
  %28 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %19) #8
  br i1 %28, label %29, label %32, !prof !2

29:                                               ; preds = %27
  %30 = bitcast %"class.v8::Value"* %19 to %"class.v8::Int32"*
  %31 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %30) #8
  br label %34

32:                                               ; preds = %27
  %33 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %19, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %34

34:                                               ; preds = %24, %29, %32
  %35 = phi i32 [ %26, %24 ], [ %31, %29 ], [ %33, %32 ]
  store i32 %35, i32* %6, align 4
  %36 = load i32, i32* %17, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  br label %68

40:                                               ; preds = %34
  %41 = load i32, i32* %12, align 4
  %42 = load i32, i32* %11, align 8
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %50, label %44, !prof !3

44:                                               ; preds = %40
  %45 = load i32*, i32** %10, align 8
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds i32, i32* %45, i64 %46
  store i32 %35, i32* %47, align 4
  %48 = load i32, i32* %12, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %12, align 4
  br label %51

50:                                               ; preds = %40
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.1"* nonnull %5, i32* nonnull dereferenceable(4) %6) #8
  br label %51

51:                                               ; preds = %44, %50
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  %52 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %52, label %18, label %53

53:                                               ; preds = %51, %4
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #8
  br label %68

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %62 = bitcast %"class.WTF::Vector.1"* %5 to i64*
  %63 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store i64 0, i64* %63, align 8
  %64 = load i64, i64* %62, align 8
  %65 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 0, i64* %62 monotonic, align 8
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = load i32, i32* %11, align 8
  store i32 %66, i32* %60, align 8
  store i32 0, i32* %11, align 8
  %67 = load i32, i32* %12, align 4
  store i32 %67, i32* %61, align 4
  store i32 0, i32* %12, align 4
  br label %68

68:                                               ; preds = %38, %59, %57
  %69 = load i32*, i32** %10, align 8
  %70 = icmp eq i32* %69, null
  %71 = bitcast i32* %69 to i8*
  br i1 %70, label %77, label %72, !prof !2

72:                                               ; preds = %68
  %73 = load i32, i32* %12, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !3

75:                                               ; preds = %72
  store i32 0, i32* %12, align 4
  br label %76

76:                                               ; preds = %75, %72
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %71) #8
  store i32* null, i32** %10, align 8
  br label %77

77:                                               ; preds = %68, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.43, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.44, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.1"*, i32* dereferenceable(4)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector.1"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector.1"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.WTF::Vector"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.absl::optional", align 8
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #8
  %7 = bitcast %"class.absl::optional"* %5 to i64*
  store i64 -6148914691236517206, i64* %7, align 8
  store i8 0, i8* %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon.362* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #8
  %10 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %26, label %12, !prof !2

12:                                               ; preds = %3
  %13 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #8
  %14 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %13, i64 0, i32 3
  %15 = bitcast %"class.base::TickClock"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %13, %"class.blink::RuntimeCallStats"** %17, align 8
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %21 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #8
  %22 = bitcast %"class.base::TickClock"** %20 to i64*
  store i64 %16, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %13, i64 0, i32 2, i64 5
  %24 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %13, i64 0, i32 0
  %25 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %24, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %18, %"class.blink::RuntimeCallCounter"* %23, %"class.blink::RuntimeCallTimer"* %25) #8
  store %"class.blink::RuntimeCallTimer"* %18, %"class.blink::RuntimeCallTimer"** %24, align 8
  store i8 1, i8* %6, align 8
  br label %26

26:                                               ; preds = %3, %12
  %27 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %27) #8
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %26
  call void @llvm.trap() #8
  unreachable

32:                                               ; preds = %26
  %33 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %29) #8
  %34 = ptrtoint %"class.v8::Array"* %33 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %27) #8
  %35 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #8
  %36 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::String"*, %"class.WTF::String"** %36, align 8
  %38 = load i32, i32* %28, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 %39
  %41 = icmp eq i32 %38, 0
  br i1 %41, label %80, label %42

42:                                               ; preds = %32
  %43 = bitcast %"class.WTF::StringView"* %4 to i8*
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  %47 = bitcast %"class.WTF::StringView"* %4 to i64*
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %49 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %50 = add i64 %49, 160
  %51 = bitcast %"class.v8::Array"* %33 to %"class.v8::Object"*
  br label %52

52:                                               ; preds = %42, %76
  %53 = phi i32 [ 0, %42 ], [ %77, %76 ]
  %54 = phi %"class.WTF::String"* [ %37, %42 ], [ %78, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #8
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  store i8* null, i8** %45, align 8
  %59 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %59, i64* %47, align 8
  br label %64

60:                                               ; preds = %52
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %44, align 8
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 1
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %46, align 8
  br label %64

64:                                               ; preds = %58, %60
  %65 = phi i32 [ %62, %60 ], [ 0, %58 ]
  store i32 %65, i32* %48, align 8
  %66 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #8
  %67 = ptrtoint %"class.v8::String"* %66 to i64
  %68 = icmp eq %"class.v8::String"* %66, null
  %69 = select i1 %68, i64 %50, i64 %67
  %70 = inttoptr i64 %69 to %"class.v8::Value"*
  %71 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %51, %"class.v8::Context"* %35, i32 %53, %"class.v8::Value"* %70) #8
  %72 = trunc i16 %71 to i8
  %73 = icmp eq i8 %72, 0
  %74 = icmp ult i16 %71, 256
  %75 = or i1 %74, %73
  br i1 %75, label %80, label %76, !prof !6

76:                                               ; preds = %64
  %77 = add i32 %53, 1
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %40
  br i1 %79, label %80, label %52

80:                                               ; preds = %76, %64, %32
  %81 = phi i64 [ %34, %32 ], [ 0, %64 ], [ %34, %76 ]
  %82 = load i8, i8* %6, align 8, !range !4
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %90, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %86 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %85, align 8
  %87 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %88 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %87) #8
  %89 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %86, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %88, %"class.blink::RuntimeCallTimer"** %89, align 8
  store i8 0, i8* %6, align 8
  br label %90

90:                                               ; preds = %80, %84
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #8
  %91 = inttoptr i64 %81 to %"class.v8::Array"*
  ret %"class.v8::Array"* %91
}

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorIjLj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS5_5ArrayEEERKT_NS6_INS5_6ObjectEEEPNS5_7IsolateE(%"class.WTF::Vector.1"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #8
  %6 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.362* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #8
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !2

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #8
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #8
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #8
  %27 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !2

30:                                               ; preds = %25
  call void @llvm.trap() #8
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #8
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #8
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #8
  %35 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i32, i32* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %63, label %41

41:                                               ; preds = %31
  %42 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %43 = add i64 %42, 160
  %44 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  br label %45

45:                                               ; preds = %41, %59
  %46 = phi i32 [ 0, %41 ], [ %60, %59 ]
  %47 = phi i32* [ %36, %41 ], [ %61, %59 ]
  %48 = load i32, i32* %47, align 4
  %49 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %2, i32 %48) #8
  %50 = ptrtoint %"class.v8::Integer"* %49 to i64
  %51 = icmp eq %"class.v8::Integer"* %49, null
  %52 = select i1 %51, i64 %43, i64 %50
  %53 = inttoptr i64 %52 to %"class.v8::Value"*
  %54 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %44, %"class.v8::Context"* %34, i32 %46, %"class.v8::Value"* %53) #8
  %55 = trunc i16 %54 to i8
  %56 = icmp eq i8 %55, 0
  %57 = icmp ult i16 %54, 256
  %58 = or i1 %57, %56
  br i1 %58, label %63, label %59, !prof !6

59:                                               ; preds = %45
  %60 = add i32 %46, 1
  %61 = getelementptr inbounds i32, i32* %47, i64 1
  %62 = icmp eq i32* %61, %39
  br i1 %62, label %63, label %45

63:                                               ; preds = %59, %45, %31
  %64 = phi i64 [ %33, %31 ], [ 0, %45 ], [ %33, %59 ]
  %65 = load i8, i8* %5, align 8, !range !4
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %69 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %68, align 8
  %70 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %71 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %70) #8
  %72 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %69, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %71, %"class.blink::RuntimeCallTimer"** %72, align 8
  store i8 0, i8* %5, align 8
  br label %73

73:                                               ; preds = %63, %67
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #8
  %74 = inttoptr i64 %64 to %"class.v8::Array"*
  ret %"class.v8::Array"* %74
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
!6 = !{!"branch_weights", i32 2002, i32 2000}
