; ModuleID = '../../third_party/skia/src/pathops/SkPathOpsOp.cpp'
source_filename = "../../third_party/skia/src/pathops/SkPathOpsOp.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkOpContour = type <{ %class.SkOpGlobalState*, %class.SkOpSegment, %class.SkOpSegment*, %class.SkOpContour*, %struct.SkPathOpsBounds, i32, i32, i32, i8, i8, i8, i8, i8, [7 x i8] }>
%class.SkOpGlobalState = type <{ %class.SkArenaAlloc*, %class.SkOpCoincidence*, %class.SkOpContourHead*, i32, i8, i8, i8, i8 }>
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkOpCoincidence = type <{ %class.SkCoincidentSpans*, %class.SkCoincidentSpans*, %class.SkOpGlobalState*, i8, i8, i8, i8, i8, [3 x i8] }>
%class.SkCoincidentSpans = type { %class.SkCoincidentSpans*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT* }
%class.SkOpPtT = type <{ double, %struct.SkPoint, %class.SkOpSpanBase*, %class.SkOpPtT*, i8, i8, i8, [5 x i8] }>
%struct.SkPoint = type { float, float }
%class.SkOpSpanBase = type <{ %class.SkOpPtT, %class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpAngle*, %class.SkOpSpan*, i32, i8, i8, [2 x i8] }>
%class.SkOpAngle = type <{ %struct.SkDCurve, %class.SkDCurveSweep, double, %class.SkLineParameters, %class.SkOpAngle*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, i32, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%struct.SkDCurve = type { %union.anon }
%union.anon = type { %struct.SkDCubic }
%struct.SkDCubic = type { [4 x %struct.SkDPoint] }
%struct.SkDPoint = type { double, double }
%class.SkDCurveSweep = type <{ %struct.SkDCurve, [2 x %struct.SkDVector], i8, i8, [6 x i8] }>
%struct.SkDVector = type { double, double }
%class.SkLineParameters = type { double, double, double }
%class.SkOpSpan = type <{ %class.SkOpSpanBase.base, [2 x i8], %class.SkOpSpan*, %class.SkOpAngle*, %class.SkOpSpanBase*, i32, i32, i32, i32, i32, i8, i8, [2 x i8] }>
%class.SkOpSpanBase.base = type <{ %class.SkOpPtT, %class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpAngle*, %class.SkOpSpan*, i32, i8, i8 }>
%class.SkOpContourHead = type { %class.SkOpContour.base, [7 x i8] }
%class.SkOpContour.base = type <{ %class.SkOpGlobalState*, %class.SkOpSegment, %class.SkOpSegment*, %class.SkOpContour*, %struct.SkPathOpsBounds, i32, i32, i32, i8, i8, i8, i8, i8 }>
%class.SkOpSegment = type <{ %class.SkOpSpan, %class.SkOpSpanBase, %class.SkOpContour*, %class.SkOpSegment*, %class.SkOpSegment*, %struct.SkPoint*, %struct.SkPathOpsBounds, float, i32, i32, i32, i8, [7 x i8] }>
%struct.SkPathOpsBounds = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%class.SkOpEdgeBuilder = type <{ %class.SkOpGlobalState*, %class.SkPath*, %class.SkTDArray, %class.SkTDArray.2, %class.SkTDArray.1, %class.SkOpContourBuilder, %class.SkOpContourHead*, [2 x i32], i32, i8, i8, i8, i8 }>
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkOpContourBuilder = type <{ %class.SkOpContour*, [2 x %struct.SkPoint], i8, [7 x i8] }>
%class.SkTDArray.14 = type { %class.SkOpSpanBase**, i32, i32 }
%class.SkSTArenaAlloc = type { %"struct.std::__1::array", %class.SkArenaAlloc.base, [4 x i8] }
%"struct.std::__1::array" = type { [4096 x i8] }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.SkPathWriter = type { %class.SkPath, %class.SkTArray, %class.SkTDArray.13, %class.SkPath*, [2 x %class.SkOpPtT*], %class.SkOpPtT* }
%class.SkTArray = type { %class.SkPath*, i64 }
%class.SkTDArray.13 = type { %class.SkOpPtT**, i32, i32 }

@_ZL10gOpInverse = internal unnamed_addr constant [5 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] [i32 2, i32 4]], [2 x [2 x i32]] [[2 x i32] [i32 1, i32 0], [2 x i32] [i32 4, i32 2]], [2 x [2 x i32]] [[2 x i32] [i32 2, i32 4], [2 x i32] [i32 0, i32 1]], [2 x [2 x i32]] [[2 x i32] [i32 3, i32 3], [2 x i32] [i32 3, i32 3]], [2 x [2 x i32]] [[2 x i32] [i32 4, i32 2], [2 x i32] [i32 1, i32 0]]], align 16
@_ZL11gOutInverse = internal unnamed_addr constant [5 x [2 x [2 x i8]]] [[2 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\01\00"], [2 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\00\01"], [2 x [2 x i8]] [[2 x i8] c"\00\01", [2 x i8] c"\01\01"], [2 x [2 x i8]] [[2 x i8] c"\00\01", [2 x i8] c"\01\00"], [2 x [2 x i8]] [[2 x i8] c"\00\01", [2 x i8] zeroinitializer]], align 16
@__const._Z7OpDebugRK6SkPathS1_8SkPathOpPS_.contour = private unnamed_addr constant %class.SkOpContour <{ %class.SkOpGlobalState* inttoptr (i64 -6148914691236517206 to %class.SkOpGlobalState*), %class.SkOpSegment <{ %class.SkOpSpan <{ %class.SkOpSpanBase.base <{ %class.SkOpPtT <{ double 0xFFFFFFFFFFFFFFFF, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.SkOpSpanBase* inttoptr (i64 -6148914691236517206 to %class.SkOpSpanBase*), %class.SkOpPtT* inttoptr (i64 -6148914691236517206 to %class.SkOpPtT*), i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, %class.SkOpSegment* inttoptr (i64 -6148914691236517206 to %class.SkOpSegment*), %class.SkOpSpanBase* inttoptr (i64 -6148914691236517206 to %class.SkOpSpanBase*), %class.SkOpAngle* inttoptr (i64 -6148914691236517206 to %class.SkOpAngle*), %class.SkOpSpan* inttoptr (i64 -6148914691236517206 to %class.SkOpSpan*), i32 -1431655766, i8 -86, i8 -86 }>, [2 x i8] c"\AA\AA", %class.SkOpSpan* inttoptr (i64 -6148914691236517206 to %class.SkOpSpan*), %class.SkOpAngle* inttoptr (i64 -6148914691236517206 to %class.SkOpAngle*), %class.SkOpSpanBase* inttoptr (i64 -6148914691236517206 to %class.SkOpSpanBase*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %class.SkOpSpanBase <{ %class.SkOpPtT <{ double 0xFFFFFFFFFFFFFFFF, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.SkOpSpanBase* inttoptr (i64 -6148914691236517206 to %class.SkOpSpanBase*), %class.SkOpPtT* inttoptr (i64 -6148914691236517206 to %class.SkOpPtT*), i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, %class.SkOpSegment* inttoptr (i64 -6148914691236517206 to %class.SkOpSegment*), %class.SkOpSpanBase* inttoptr (i64 -6148914691236517206 to %class.SkOpSpanBase*), %class.SkOpAngle* inttoptr (i64 -6148914691236517206 to %class.SkOpAngle*), %class.SkOpSpan* inttoptr (i64 -6148914691236517206 to %class.SkOpSpan*), i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %class.SkOpContour* inttoptr (i64 -6148914691236517206 to %class.SkOpContour*), %class.SkOpSegment* inttoptr (i64 -6148914691236517206 to %class.SkOpSegment*), %class.SkOpSegment* inttoptr (i64 -6148914691236517206 to %class.SkOpSegment*), %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), %struct.SkPathOpsBounds { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %class.SkOpSegment* inttoptr (i64 -6148914691236517206 to %class.SkOpSegment*), %class.SkOpContour* inttoptr (i64 -6148914691236517206 to %class.SkOpContour*), %struct.SkPathOpsBounds { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@__const._Z7OpDebugRK6SkPathS1_8SkPathOpPS_.builder = private unnamed_addr constant %class.SkOpEdgeBuilder <{ %class.SkOpGlobalState* inttoptr (i64 -6148914691236517206 to %class.SkOpGlobalState*), %class.SkPath* inttoptr (i64 -6148914691236517206 to %class.SkPath*), %class.SkTDArray { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), i32 -1431655766, i32 -1431655766 }, %class.SkTDArray.2 { float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766 }, %class.SkTDArray.1 { i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %class.SkOpContourBuilder <{ %class.SkOpContour* inttoptr (i64 -6148914691236517206 to %class.SkOpContour*), [2 x %struct.SkPoint] [%struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }], i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %class.SkOpContourHead* inttoptr (i64 -6148914691236517206 to %class.SkOpContourHead*), [2 x i32] [i32 -1431655766, i32 -1431655766], i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86 }>, align 8
@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z7OpDebugRK6SkPathS1_8SkPathOpPS_(%class.SkPath* dereferenceable(16), %class.SkPath* dereferenceable(16), i32, %class.SkPath*) local_unnamed_addr #0 {
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca %class.SkOpSpanBase*, align 8
  %17 = alloca %class.SkOpSpanBase*, align 8
  %18 = alloca %class.SkTDArray.14, align 8
  %19 = alloca %class.SkOpSpanBase*, align 8
  %20 = alloca %class.SkOpSpanBase*, align 8
  %21 = alloca %class.SkOpSpanBase*, align 8
  %22 = alloca %struct.SkRect, align 4
  %23 = alloca %struct.SkRect, align 4
  %24 = alloca %class.SkPath, align 8
  %25 = alloca %class.SkSTArenaAlloc, align 8
  %26 = alloca %class.SkOpContour, align 8
  %27 = alloca %class.SkOpContourHead*, align 8
  %28 = alloca %class.SkOpGlobalState, align 8
  %29 = alloca %class.SkOpCoincidence, align 8
  %30 = alloca %class.SkOpEdgeBuilder, align 8
  %31 = alloca %class.SkPath, align 8
  %32 = alloca %class.SkPathWriter, align 8
  %33 = zext i32 %2 to i64
  %34 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %35 = load i8, i8* %34, align 2
  %36 = lshr i8 %35, 1
  %37 = and i8 %36, 1
  %38 = zext i8 %37 to i64
  %39 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %40 = load i8, i8* %39, align 2
  %41 = lshr i8 %40, 1
  %42 = and i8 %41, 1
  %43 = zext i8 %42 to i64
  %44 = getelementptr inbounds [5 x [2 x [2 x i32]]], [5 x [2 x [2 x i32]]]* @_ZL10gOpInverse, i64 0, i64 %33, i64 %38, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds [5 x [2 x [2 x i8]]], [5 x [2 x [2 x i8]]]* @_ZL11gOutInverse, i64 0, i64 %46, i64 %38, i64 %43
  %48 = load i8, i8* %47, align 1, !range !2
  %49 = icmp eq i8 %48, 0
  %50 = select i1 %49, i32 1, i32 3
  %51 = bitcast %struct.SkRect* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #5
  %52 = bitcast %struct.SkRect* %23 to i8*
  %53 = bitcast %struct.SkRect* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %53, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #5
  %54 = icmp eq i32 %45, 1
  %55 = bitcast %struct.SkRect* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %55, i8 -1, i64 16, i1 false)
  br i1 %54, label %56, label %70

56:                                               ; preds = %4
  %57 = call zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath* %0, %struct.SkRect* nonnull %22, i8* null, i32* null) #5
  br i1 %57, label %58, label %70

58:                                               ; preds = %56
  %59 = call zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath* %1, %struct.SkRect* nonnull %23, i8* null, i32* null) #5
  br i1 %59, label %60, label %70

60:                                               ; preds = %58
  %61 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %3) #5
  %62 = trunc i32 %50 to i8
  %63 = getelementptr inbounds %class.SkPath, %class.SkPath* %3, i64 0, i32 4
  %64 = load i8, i8* %63, align 2
  %65 = and i8 %64, -4
  %66 = or i8 %65, %62
  store i8 %66, i8* %63, align 2
  %67 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %22, %struct.SkRect* nonnull dereferenceable(16) %23) #5
  br i1 %67, label %68, label %631

68:                                               ; preds = %60
  %69 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* %3, %struct.SkRect* nonnull dereferenceable(16) %22, i32 0, i32 0) #5
  br label %631

70:                                               ; preds = %58, %56, %4
  %71 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %72 = load %class.SkPathRef*, %class.SkPathRef** %71, align 8
  %73 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %72, i64 0, i32 4, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %82, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %78 = load %class.SkPathRef*, %class.SkPathRef** %77, align 8
  %79 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %78, i64 0, i32 4, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %117

82:                                               ; preds = %76, %70
  %83 = bitcast %class.SkPath* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #5
  %84 = getelementptr inbounds %class.SkPath, %class.SkPath* %24, i64 0, i32 4
  %85 = bitcast %class.SkPath* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %24) #5
  switch i32 %45, label %108 [
    i32 4, label %100
    i32 2, label %86
    i32 3, label %86
    i32 0, label %93
  ]

86:                                               ; preds = %82, %82
  %87 = load %class.SkPathRef*, %class.SkPathRef** %71, align 8
  %88 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %87, i64 0, i32 4, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  %91 = select i1 %90, %class.SkPath* %1, %class.SkPath* %0
  %92 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* nonnull %24, %class.SkPath* dereferenceable(16) %91) #5
  br label %108

93:                                               ; preds = %82
  %94 = load %class.SkPathRef*, %class.SkPathRef** %71, align 8
  %95 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %94, i64 0, i32 4, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %93
  %99 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* nonnull %24, %class.SkPath* dereferenceable(16) %0) #5
  br label %108

100:                                              ; preds = %82
  %101 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %102 = load %class.SkPathRef*, %class.SkPathRef** %101, align 8
  %103 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %102, i64 0, i32 4, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %100
  %107 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* nonnull %24, %class.SkPath* dereferenceable(16) %1) #5
  br label %108

108:                                              ; preds = %82, %100, %106, %93, %98, %86
  %109 = load i8, i8* %84, align 2
  %110 = lshr i8 %109, 1
  %111 = and i8 %110, 1
  %112 = icmp eq i8 %48, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %108
  %114 = xor i8 %109, 2
  store i8 %114, i8* %84, align 2
  br label %115

115:                                              ; preds = %108, %113
  %116 = call zeroext i1 @_Z8SimplifyRK6SkPathPS_(%class.SkPath* nonnull dereferenceable(16) %24, %class.SkPath* %3) #5
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %24) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #5
  br label %631

117:                                              ; preds = %76
  %118 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %25, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4128, i8* nonnull %118) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 4128, i1 false)
  %119 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %25, i64 0, i32 0, i32 0, i64 4096
  %120 = bitcast i8* %119 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %120, i8* nonnull %118, i64 4096, i64 4096) #5
  %121 = bitcast %class.SkOpContour* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 344, i8* nonnull %121) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %121, i8* align 8 bitcast (%class.SkOpContour* @__const._Z7OpDebugRK6SkPathS1_8SkPathOpPS_.contour to i8*), i64 344, i1 false)
  %122 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %26, i64 0, i32 2
  %123 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %26, i64 0, i32 6
  store i32 0, i32* %123, align 4
  %124 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %26, i64 0, i32 8
  store i8 0, i8* %124, align 4
  %125 = bitcast %class.SkOpSegment** %122 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 16, i1 false) #5
  %126 = bitcast %class.SkOpContourHead** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #5
  %127 = bitcast %class.SkOpContourHead** %27 to %class.SkOpContour**
  store %class.SkOpContour* %26, %class.SkOpContour** %127, align 8
  %128 = bitcast %class.SkOpGlobalState* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %128) #5
  %129 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %28, i64 0, i32 1
  %130 = bitcast %class.SkOpContour* %26 to %class.SkOpContourHead*
  %131 = bitcast %class.SkOpGlobalState* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 -86, i64 32, i1 false)
  call void @_ZN15SkOpGlobalStateC1EP15SkOpContourHeadP12SkArenaAlloc(%class.SkOpGlobalState* nonnull %28, %class.SkOpContourHead* nonnull %130, %class.SkArenaAlloc* %120) #5
  %132 = bitcast %class.SkOpCoincidence* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %132) #5
  %133 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %29, i64 0, i32 2
  %134 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %29, i64 0, i32 3
  %135 = bitcast %class.SkOpCoincidence* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 -86, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 0, i64 16, i1 false) #5
  store %class.SkOpGlobalState* %28, %class.SkOpGlobalState** %133, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 5, i1 false) #5
  store %class.SkOpCoincidence* %29, %class.SkOpCoincidence** %129, align 8
  %136 = ptrtoint %class.SkPath* %0 to i64
  %137 = ptrtoint %class.SkPath* %1 to i64
  %138 = icmp eq i32 %45, 4
  %139 = select i1 %138, i64 %137, i64 %136
  %140 = select i1 %138, i32 0, i32 %45
  %141 = bitcast %class.SkOpEdgeBuilder* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %141) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %141, i8* align 8 bitcast (%class.SkOpEdgeBuilder* @__const._Z7OpDebugRK6SkPathS1_8SkPathOpPS_.builder to i8*), i64 120, i1 false)
  %142 = inttoptr i64 %139 to %class.SkPath*
  %143 = bitcast %class.SkOpContourHead** %27 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %30, i64 0, i32 0
  store %class.SkOpGlobalState* %28, %class.SkOpGlobalState** %145, align 8
  %146 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %30, i64 0, i32 1
  store %class.SkPath* %142, %class.SkPath** %146, align 8
  %147 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %30, i64 0, i32 2
  %148 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %30, i64 0, i32 5
  %149 = bitcast %class.SkTDArray* %147 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 48, i1 false) #5
  %150 = bitcast %class.SkOpContourBuilder* %148 to i64*
  store i64 %144, i64* %150, align 8
  %151 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %30, i64 0, i32 5, i32 2
  store i8 0, i8* %151, align 8
  %152 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %30, i64 0, i32 6
  %153 = bitcast %class.SkOpContourHead** %152 to i64*
  store i64 %144, i64* %153, align 8
  %154 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %30, i64 0, i32 10
  store i8 0, i8* %154, align 1
  call void @_ZN15SkOpEdgeBuilder4initEv(%class.SkOpEdgeBuilder* nonnull %30) #5
  %155 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %30, i64 0, i32 11
  %156 = load i8, i8* %155, align 2, !range !2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %158, label %622

158:                                              ; preds = %117
  %159 = select i1 %138, i64 %136, i64 %137
  %160 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %30, i64 0, i32 9
  %161 = load i8, i8* %160, align 4, !range !2
  %162 = zext i8 %161 to i64
  %163 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %30, i64 0, i32 7, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = inttoptr i64 %159 to %class.SkPath*
  call void @_ZN15SkOpEdgeBuilder10addOperandERK6SkPath(%class.SkOpEdgeBuilder* nonnull %30, %class.SkPath* dereferenceable(16) %165) #5
  %166 = call zeroext i1 @_ZN15SkOpEdgeBuilder6finishEv(%class.SkOpEdgeBuilder* nonnull %30) #5
  br i1 %166, label %167, label %622

167:                                              ; preds = %158
  %168 = load i8, i8* %160, align 4, !range !2
  %169 = zext i8 %168 to i64
  %170 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %30, i64 0, i32 7, i64 %169
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %164, 1
  %173 = icmp eq i32 %171, 1
  %174 = call zeroext i1 @_Z15SortContourListPP15SkOpContourHeadbb(%class.SkOpContourHead** nonnull %27, i1 zeroext %172, i1 zeroext %173) #5
  br i1 %174, label %182, label %175

175:                                              ; preds = %167
  %176 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %3) #5
  %177 = trunc i32 %50 to i8
  %178 = getelementptr inbounds %class.SkPath, %class.SkPath* %3, i64 0, i32 4
  %179 = load i8, i8* %178, align 2
  %180 = and i8 %179, -4
  %181 = or i8 %180, %177
  store i8 %181, i8* %178, align 2
  br label %622

182:                                              ; preds = %167
  %183 = load %class.SkOpContour*, %class.SkOpContour** %127, align 8
  br label %184

184:                                              ; preds = %193, %182
  %185 = phi %class.SkOpContour* [ %183, %182 ], [ %195, %193 ]
  br label %186

186:                                              ; preds = %189, %184
  %187 = phi %class.SkOpContour* [ %185, %184 ], [ %191, %189 ]
  %188 = call zeroext i1 @_Z14AddIntersectTsP11SkOpContourS0_P15SkOpCoincidence(%class.SkOpContour* %185, %class.SkOpContour* %187, %class.SkOpCoincidence* nonnull %29) #5
  br i1 %188, label %189, label %193

189:                                              ; preds = %186
  %190 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %187, i64 0, i32 3
  %191 = load %class.SkOpContour*, %class.SkOpContour** %190, align 8
  %192 = icmp eq %class.SkOpContour* %191, null
  br i1 %192, label %193, label %186

193:                                              ; preds = %189, %186
  %194 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %185, i64 0, i32 3
  %195 = load %class.SkOpContour*, %class.SkOpContour** %194, align 8
  %196 = icmp eq %class.SkOpContour* %195, null
  br i1 %196, label %197, label %184

197:                                              ; preds = %193
  %198 = load %class.SkOpContourHead*, %class.SkOpContourHead** %27, align 8
  %199 = call zeroext i1 @_Z17HandleCoincidenceP15SkOpContourHeadP15SkOpCoincidence(%class.SkOpContourHead* %198, %class.SkOpCoincidence* nonnull %29) #5
  br i1 %199, label %200, label %622

200:                                              ; preds = %197
  %201 = bitcast %class.SkPath* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %201) #5
  %202 = bitcast %class.SkPath* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* nonnull %31, %class.SkPath* dereferenceable(16) %3) #5
  %203 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %3) #5
  %204 = trunc i32 %50 to i8
  %205 = getelementptr inbounds %class.SkPath, %class.SkPath* %3, i64 0, i32 4
  %206 = load i8, i8* %205, align 2
  %207 = and i8 %206, -4
  %208 = or i8 %207, %204
  store i8 %208, i8* %205, align 2
  %209 = bitcast %class.SkPathWriter* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %209) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %209, i8 -86, i64 80, i1 false)
  call void @_ZN12SkPathWriterC1ER6SkPath(%class.SkPathWriter* nonnull %32, %class.SkPath* dereferenceable(16) %3) #5
  %210 = load %class.SkOpContourHead*, %class.SkOpContourHead** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #5
  store i8 0, i8* %14, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #5
  store i8 0, i8* %15, align 1
  %211 = call %class.SkOpSpan* @_Z15FindSortableTopP15SkOpContourHead(%class.SkOpContourHead* %210) #5
  %212 = icmp eq %class.SkOpSpan* %211, null
  br i1 %212, label %591, label %213

213:                                              ; preds = %200
  %214 = bitcast %class.SkOpSpanBase** %16 to i8*
  %215 = bitcast %class.SkOpSpanBase** %16 to i64*
  %216 = bitcast %class.SkOpSpanBase** %17 to i8*
  %217 = bitcast %class.SkOpSpanBase** %17 to %class.SkOpSpan**
  %218 = bitcast %class.SkTDArray.14* %18 to i8*
  %219 = getelementptr inbounds %class.SkTDArray.14, %class.SkTDArray.14* %18, i64 0, i32 0
  %220 = getelementptr inbounds %class.SkTDArray.14, %class.SkTDArray.14* %18, i64 0, i32 1
  %221 = getelementptr inbounds %class.SkTDArray.14, %class.SkTDArray.14* %18, i64 0, i32 2
  %222 = bitcast %class.SkOpSpanBase** %21 to i8*
  %223 = bitcast %class.SkTDArray.14* %18 to i8**
  %224 = bitcast %class.SkOpSpanBase** %19 to i8*
  %225 = bitcast %class.SkOpSpanBase** %19 to i64*
  %226 = bitcast %class.SkOpSpanBase** %20 to i8*
  %227 = bitcast %class.SkOpSpanBase** %17 to i64*
  %228 = bitcast %class.SkOpSpanBase** %20 to i64*
  %229 = getelementptr inbounds %class.SkPathWriter, %class.SkPathWriter* %32, i64 0, i32 5
  %230 = bitcast i32* %6 to i8*
  %231 = bitcast i32* %8 to i8*
  %232 = bitcast i32* %9 to i8*
  %233 = bitcast i32* %10 to i8*
  %234 = bitcast i32* %11 to i8*
  %235 = bitcast i32* %12 to i8*
  %236 = bitcast i32* %13 to i8*
  br label %237

237:                                              ; preds = %584, %213
  %238 = phi %class.SkOpSpan* [ %211, %213 ], [ %586, %584 ]
  %239 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %238, i64 0, i32 0, i32 1
  %240 = load %class.SkOpSegment*, %class.SkOpSegment** %239, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #5
  %241 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %238, i64 0, i32 4
  %242 = bitcast %class.SkOpSpanBase** %241 to i64*
  %243 = load i64, i64* %242, align 8
  store i64 %243, i64* %215, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216) #5
  store %class.SkOpSpan* %238, %class.SkOpSpan** %217, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %218) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %218, i8 0, i64 16, i1 false) #5
  %244 = inttoptr i64 %243 to %class.SkOpSpanBase*
  %245 = bitcast %class.SkOpSpan* %238 to %class.SkOpSpanBase*
  br label %246

246:                                              ; preds = %581, %237
  %247 = phi %class.SkOpSpanBase* [ %245, %237 ], [ %583, %581 ]
  %248 = phi %class.SkOpSpanBase* [ %244, %237 ], [ %582, %581 ]
  %249 = phi %class.SkOpSegment* [ %240, %237 ], [ %579, %581 ]
  %250 = call zeroext i1 @_ZN11SkOpSegment8activeOpEP12SkOpSpanBaseS1_ii8SkPathOp(%class.SkOpSegment* %249, %class.SkOpSpanBase* %248, %class.SkOpSpanBase* %247, i32 %164, i32 %171, i32 %140) #5
  br i1 %250, label %251, label %348

251:                                              ; preds = %246
  %252 = load i8, i8* %14, align 1
  br label %253

253:                                              ; preds = %307, %251
  %254 = phi i8 [ %252, %251 ], [ %308, %307 ]
  %255 = phi %class.SkOpSegment* [ %249, %251 ], [ %267, %307 ]
  %256 = icmp eq i8 %254, 0
  br i1 %256, label %257, label %263

257:                                              ; preds = %253
  %258 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %255, i64 0, i32 9
  %259 = load i32, i32* %258, align 8
  %260 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %255, i64 0, i32 8
  %261 = load i32, i32* %260, align 4
  %262 = icmp eq i32 %259, %261
  br i1 %262, label %322, label %263

263:                                              ; preds = %257, %253
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #5
  %264 = load i64, i64* %215, align 8
  store i64 %264, i64* %225, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226) #5
  %265 = load i64, i64* %227, align 8
  store i64 %265, i64* %228, align 8
  %266 = load i8, i8* %15, align 1, !range !2
  %267 = call %class.SkOpSegment* @_ZN11SkOpSegment10findNextOpEP9SkTDArrayIP12SkOpSpanBaseEPS2_S5_PbS6_8SkPathOpii(%class.SkOpSegment* %255, %class.SkTDArray.14* nonnull %18, %class.SkOpSpanBase** nonnull %19, %class.SkOpSpanBase** nonnull %20, i8* nonnull %14, i8* nonnull %15, i32 %140, i32 %164, i32 %171) #5
  %268 = icmp eq %class.SkOpSegment* %267, null
  br i1 %268, label %269, label %294

269:                                              ; preds = %263
  %270 = icmp eq i8 %266, 0
  %271 = load i8, i8* %14, align 1, !range !2
  %272 = icmp eq i8 %271, 0
  %273 = load %class.SkOpPtT*, %class.SkOpPtT** %229, align 8
  %274 = icmp eq %class.SkOpPtT* %273, null
  %275 = and i1 %272, %274
  br i1 %275, label %276, label %289

276:                                              ; preds = %269
  %277 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %255, i64 0, i32 10
  %278 = load i32, i32* %277, align 4
  %279 = icmp eq i32 %278, 1
  br i1 %279, label %289, label %280

280:                                              ; preds = %276
  %281 = call zeroext i1 @_ZNK12SkPathWriter8isClosedEv(%class.SkPathWriter* nonnull %32) #5
  br i1 %281, label %289, label %282

282:                                              ; preds = %280
  %283 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %16, align 8
  %284 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %17, align 8
  %285 = call zeroext i1 @_ZNK11SkOpSegment10addCurveToEPK12SkOpSpanBaseS2_P12SkPathWriter(%class.SkOpSegment* %255, %class.SkOpSpanBase* %283, %class.SkOpSpanBase* %284, %class.SkPathWriter* nonnull %32) #5
  br i1 %285, label %286, label %298

286:                                              ; preds = %282
  %287 = call zeroext i1 @_ZNK12SkPathWriter8isClosedEv(%class.SkPathWriter* nonnull %32) #5
  br i1 %287, label %299, label %288

288:                                              ; preds = %286
  call void @_ZN14SkPathOpsDebug15ShowActiveSpansEP15SkOpContourHead(%class.SkOpContourHead* %210) #5
  br label %299

289:                                              ; preds = %280, %276, %269
  br i1 %270, label %299, label %290

290:                                              ; preds = %289
  %291 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %16, align 8
  %292 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %17, align 8
  %293 = call zeroext i1 @_ZNK11SkOpSegment10addCurveToEPK12SkOpSpanBaseS2_P12SkPathWriter(%class.SkOpSegment* %255, %class.SkOpSpanBase* %291, %class.SkOpSpanBase* %292, %class.SkPathWriter* nonnull %32) #5
  br i1 %293, label %299, label %298

294:                                              ; preds = %263
  %295 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %16, align 8
  %296 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %17, align 8
  %297 = call zeroext i1 @_ZNK11SkOpSegment10addCurveToEPK12SkOpSpanBaseS2_P12SkPathWriter(%class.SkOpSegment* %255, %class.SkOpSpanBase* %295, %class.SkOpSpanBase* %296, %class.SkPathWriter* nonnull %32) #5
  br i1 %297, label %300, label %298

298:                                              ; preds = %290, %282, %294
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #5
  br label %588

299:                                              ; preds = %290, %289, %288, %286
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #5
  br label %322

300:                                              ; preds = %294
  %301 = load i64, i64* %225, align 8
  store i64 %301, i64* %215, align 8
  %302 = load i64, i64* %228, align 8
  store i64 %302, i64* %227, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #5
  %303 = call zeroext i1 @_ZNK12SkPathWriter8isClosedEv(%class.SkPathWriter* nonnull %32) #5
  br i1 %303, label %322, label %304

304:                                              ; preds = %300
  %305 = load i8, i8* %14, align 1, !range !2
  %306 = icmp eq i8 %305, 0
  br i1 %306, label %307, label %309

307:                                              ; preds = %304, %309
  %308 = phi i8 [ 0, %304 ], [ 1, %309 ]
  br label %253

309:                                              ; preds = %304
  %310 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %16, align 8
  %311 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %17, align 8
  %312 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %310, i64 0, i32 0, i32 0
  %313 = load double, double* %312, align 8
  %314 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %311, i64 0, i32 0, i32 0
  %315 = load double, double* %314, align 8
  %316 = fcmp olt double %313, %315
  %317 = select i1 %316, %class.SkOpSpanBase* %310, %class.SkOpSpanBase* %311
  %318 = bitcast %class.SkOpSpanBase* %317 to %class.SkOpSpan*
  %319 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %318, i64 0, i32 10
  %320 = load i8, i8* %319, align 4, !range !2
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %307, label %322

322:                                              ; preds = %309, %300, %257, %299
  %323 = phi %class.SkOpSegment* [ %255, %299 ], [ %267, %309 ], [ %255, %257 ], [ %267, %300 ]
  %324 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %16, align 8
  %325 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %17, align 8
  %326 = call zeroext i1 @_ZN11SkOpSegment13activeWindingEP12SkOpSpanBaseS1_(%class.SkOpSegment* %323, %class.SkOpSpanBase* %324, %class.SkOpSpanBase* %325) #5
  br i1 %326, label %327, label %345

327:                                              ; preds = %322
  %328 = call zeroext i1 @_ZNK12SkPathWriter8isClosedEv(%class.SkPathWriter* nonnull %32) #5
  br i1 %328, label %345, label %329

329:                                              ; preds = %327
  %330 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %16, align 8
  %331 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %17, align 8
  %332 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %330, i64 0, i32 0, i32 0
  %333 = load double, double* %332, align 8
  %334 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %331, i64 0, i32 0, i32 0
  %335 = load double, double* %334, align 8
  %336 = fcmp olt double %333, %335
  %337 = select i1 %336, %class.SkOpSpanBase* %330, %class.SkOpSpanBase* %331
  %338 = bitcast %class.SkOpSpanBase* %337 to %class.SkOpSpan*
  %339 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %338, i64 0, i32 10
  %340 = load i8, i8* %339, align 4, !range !2
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %342, label %345

342:                                              ; preds = %329
  %343 = call zeroext i1 @_ZNK11SkOpSegment10addCurveToEPK12SkOpSpanBaseS2_P12SkPathWriter(%class.SkOpSegment* %323, %class.SkOpSpanBase* %330, %class.SkOpSpanBase* %331, %class.SkPathWriter* nonnull %32) #5
  br i1 %343, label %344, label %588

344:                                              ; preds = %342
  call void @_ZN11SkOpSegment8markDoneEP8SkOpSpan(%class.SkOpSegment* %323, %class.SkOpSpan* %338) #5
  br label %345

345:                                              ; preds = %344, %329, %327, %322
  call void @_ZN12SkPathWriter13finishContourEv(%class.SkPathWriter* nonnull %32) #5
  br label %346

346:                                              ; preds = %387, %345
  %347 = phi %class.SkOpSegment* [ %249, %387 ], [ %323, %345 ]
  br label %389

348:                                              ; preds = %246
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #5
  store %class.SkOpSpanBase* inttoptr (i64 -6148914691236517206 to %class.SkOpSpanBase*), %class.SkOpSpanBase** %21, align 8
  %349 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %16, align 8
  %350 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %17, align 8
  %351 = call zeroext i1 @_ZN11SkOpSegment16markAndChaseDoneEP12SkOpSpanBaseS1_PS1_(%class.SkOpSegment* %249, %class.SkOpSpanBase* %349, %class.SkOpSpanBase* %350, %class.SkOpSpanBase** nonnull %21) #5
  br i1 %351, label %352, label %388

352:                                              ; preds = %348
  %353 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %21, align 8
  %354 = icmp eq %class.SkOpSpanBase* %353, null
  %355 = ptrtoint %class.SkOpSpanBase* %353 to i64
  br i1 %354, label %387, label %356

356:                                              ; preds = %352
  %357 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %353, i64 0, i32 7
  %358 = load i8, i8* %357, align 1, !range !2
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %360, label %387

360:                                              ; preds = %356
  store i8 1, i8* %357, align 1
  %361 = load i32, i32* %221, align 4
  %362 = add i32 %361, 1
  %363 = icmp sgt i32 %362, -1
  br i1 %363, label %365, label %364

364:                                              ; preds = %360
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #6
  unreachable

365:                                              ; preds = %360
  %366 = load i32, i32* %220, align 8
  %367 = icmp slt i32 %366, %362
  br i1 %367, label %370, label %368

368:                                              ; preds = %365
  %369 = load %class.SkOpSpanBase**, %class.SkOpSpanBase*** %219, align 8
  br label %382

370:                                              ; preds = %365
  %371 = add i32 %361, 5
  %372 = lshr i32 %371, 2
  %373 = add nuw i32 %372, %371
  %374 = icmp sgt i32 %373, -1
  br i1 %374, label %376, label %375

375:                                              ; preds = %370
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #6
  unreachable

376:                                              ; preds = %370
  store i32 %373, i32* %220, align 8
  %377 = load i8*, i8** %223, align 8
  %378 = sext i32 %373 to i64
  %379 = shl nsw i64 %378, 3
  %380 = call i8* @_Z16sk_realloc_throwPvm(i8* %377, i64 %379) #5
  store i8* %380, i8** %223, align 8
  %381 = bitcast i8* %380 to %class.SkOpSpanBase**
  br label %382

382:                                              ; preds = %376, %368
  %383 = phi %class.SkOpSpanBase** [ %369, %368 ], [ %381, %376 ]
  store i32 %362, i32* %221, align 4
  %384 = sext i32 %361 to i64
  %385 = getelementptr inbounds %class.SkOpSpanBase*, %class.SkOpSpanBase** %383, i64 %384
  %386 = bitcast %class.SkOpSpanBase** %385 to i64*
  store i64 %355, i64* %386, align 8
  br label %387

387:                                              ; preds = %382, %356, %352
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #5
  br label %346

388:                                              ; preds = %348
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #5
  br label %588

389:                                              ; preds = %346, %572
  %390 = phi %class.SkOpSegment* [ %573, %572 ], [ %347, %346 ]
  %391 = phi i1 [ %574, %572 ], [ undef, %346 ]
  %392 = load i32, i32* %221, align 4
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %389
  call void @_ZN14SkPathOpsDebug15ShowActiveSpansEP15SkOpContourHead(%class.SkOpContourHead* %210) #5
  br label %584

395:                                              ; preds = %389
  %396 = add nsw i32 %392, -1
  %397 = load %class.SkOpSpanBase**, %class.SkOpSpanBase*** %219, align 8
  %398 = sext i32 %396 to i64
  %399 = getelementptr inbounds %class.SkOpSpanBase*, %class.SkOpSpanBase** %397, i64 %398
  %400 = bitcast %class.SkOpSpanBase** %399 to i64*
  %401 = load i64, i64* %400, align 8
  store i32 %396, i32* %221, align 4
  %402 = inttoptr i64 %401 to %class.SkOpSpanBase*
  %403 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %402, i64 0, i32 0
  %404 = call %class.SkOpPtT* @_ZN7SkOpPtT4prevEv(%class.SkOpPtT* %403) #5
  %405 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %404, i64 0, i32 2
  %406 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %405, align 8
  store %class.SkOpSpanBase* %406, %class.SkOpSpanBase** %16, align 8
  %407 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %406, i64 0, i32 1
  %408 = load %class.SkOpSegment*, %class.SkOpSegment** %407, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #5
  store i8 1, i8* %5, align 1
  store %class.SkOpSpanBase* null, %class.SkOpSpanBase** %17, align 8
  %409 = call %class.SkOpAngle* @_ZN11SkOpSegment11activeAngleEP12SkOpSpanBasePS1_S2_Pb(%class.SkOpSegment* %408, %class.SkOpSpanBase* %406, %class.SkOpSpanBase** nonnull %16, %class.SkOpSpanBase** nonnull %17, i8* nonnull %5) #5
  %410 = icmp eq %class.SkOpAngle* %409, null
  br i1 %410, label %445, label %411

411:                                              ; preds = %395
  %412 = getelementptr inbounds %class.SkOpAngle, %class.SkOpAngle* %409, i64 0, i32 6
  %413 = bitcast %class.SkOpSpanBase** %412 to i64*
  %414 = load i64, i64* %413, align 8
  store i64 %414, i64* %215, align 8
  %415 = getelementptr inbounds %class.SkOpAngle, %class.SkOpAngle* %409, i64 0, i32 7
  %416 = bitcast %class.SkOpSpanBase** %415 to i64*
  %417 = load i64, i64* %416, align 8
  store i64 %417, i64* %227, align 8
  %418 = load i32, i32* %221, align 4
  %419 = add i32 %418, 1
  %420 = icmp sgt i32 %419, -1
  br i1 %420, label %422, label %421

421:                                              ; preds = %411
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #6
  unreachable

422:                                              ; preds = %411
  %423 = load i32, i32* %220, align 8
  %424 = icmp slt i32 %423, %419
  br i1 %424, label %427, label %425

425:                                              ; preds = %422
  %426 = load %class.SkOpSpanBase**, %class.SkOpSpanBase*** %219, align 8
  br label %439

427:                                              ; preds = %422
  %428 = add i32 %418, 5
  %429 = lshr i32 %428, 2
  %430 = add nuw i32 %429, %428
  %431 = icmp sgt i32 %430, -1
  br i1 %431, label %433, label %432

432:                                              ; preds = %427
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #6
  unreachable

433:                                              ; preds = %427
  store i32 %430, i32* %220, align 8
  %434 = load i8*, i8** %223, align 8
  %435 = sext i32 %430 to i64
  %436 = shl nsw i64 %435, 3
  %437 = call i8* @_Z16sk_realloc_throwPvm(i8* %434, i64 %436) #5
  store i8* %437, i8** %223, align 8
  %438 = bitcast i8* %437 to %class.SkOpSpanBase**
  br label %439

439:                                              ; preds = %433, %425
  %440 = phi %class.SkOpSpanBase** [ %426, %425 ], [ %438, %433 ]
  store i32 %419, i32* %221, align 4
  %441 = sext i32 %418 to i64
  %442 = getelementptr inbounds %class.SkOpSpanBase*, %class.SkOpSpanBase** %440, i64 %441
  %443 = bitcast %class.SkOpSpanBase** %442 to i64*
  store i64 %401, i64* %443, align 8
  %444 = call %class.SkOpSegment* @_ZNK9SkOpAngle7segmentEv(%class.SkOpAngle* nonnull %409) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #5
  br label %578

445:                                              ; preds = %395
  %446 = load i8, i8* %5, align 1, !range !2
  %447 = icmp eq i8 %446, 0
  br i1 %447, label %448, label %572

448:                                              ; preds = %445
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %230) #5
  store i32 -1431655766, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #5
  store i8 -86, i8* %7, align 1
  %449 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %16, align 8
  %450 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %17, align 8
  %451 = call %class.SkOpAngle* @_Z12AngleWindingP12SkOpSpanBaseS0_PiPb(%class.SkOpSpanBase* %449, %class.SkOpSpanBase* %450, i32* nonnull %6, i8* nonnull %7) #5
  %452 = icmp eq %class.SkOpAngle* %451, null
  br i1 %452, label %568, label %453

453:                                              ; preds = %448
  %454 = load i32, i32* %6, align 4
  %455 = icmp eq i32 %454, -2147483647
  br i1 %455, label %568, label %456

456:                                              ; preds = %453
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %231) #5
  store i32 -1431655766, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %232) #5
  store i32 -1431655766, i32* %9, align 4
  %457 = load i8, i8* %7, align 1, !range !2
  %458 = icmp eq i8 %457, 0
  br i1 %458, label %471, label %459

459:                                              ; preds = %456
  %460 = call %class.SkOpSegment* @_ZNK9SkOpAngle7segmentEv(%class.SkOpAngle* nonnull %451) #5
  %461 = call i32 @_ZN11SkOpSegment20updateWindingReverseEPK9SkOpAngle(%class.SkOpSegment* %460, %class.SkOpAngle* nonnull %451) #5
  store i32 %461, i32* %8, align 4
  %462 = icmp eq i32 %461, -2147483647
  br i1 %462, label %564, label %463

463:                                              ; preds = %459
  %464 = call i32 @_ZNK11SkOpSegment23updateOppWindingReverseEPK9SkOpAngle(%class.SkOpSegment* %460, %class.SkOpAngle* nonnull %451) #5
  store i32 %464, i32* %9, align 4
  %465 = icmp eq i32 %464, -2147483647
  br i1 %465, label %564, label %466

466:                                              ; preds = %463
  %467 = call zeroext i1 @_ZNK11SkOpSegment7operandEv(%class.SkOpSegment* %460) #5
  br i1 %467, label %468, label %471

468:                                              ; preds = %466
  %469 = load i32, i32* %8, align 4
  %470 = load i32, i32* %9, align 4
  store i32 %470, i32* %8, align 4
  store i32 %469, i32* %9, align 4
  br label %471

471:                                              ; preds = %468, %466, %456
  br label %472

472:                                              ; preds = %471, %531
  %473 = phi i1 [ %532, %531 ], [ %391, %471 ]
  %474 = phi %class.SkOpAngle* [ %477, %531 ], [ %451, %471 ]
  %475 = phi %class.SkOpSegment* [ %534, %531 ], [ null, %471 ]
  %476 = getelementptr inbounds %class.SkOpAngle, %class.SkOpAngle* %474, i64 0, i32 4
  %477 = load %class.SkOpAngle*, %class.SkOpAngle** %476, align 8
  %478 = icmp eq %class.SkOpAngle* %477, %451
  br i1 %478, label %535, label %479

479:                                              ; preds = %472
  %480 = call %class.SkOpSegment* @_ZNK9SkOpAngle7segmentEv(%class.SkOpAngle* %477) #5
  %481 = getelementptr inbounds %class.SkOpAngle, %class.SkOpAngle* %477, i64 0, i32 6
  %482 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %481, align 8
  %483 = getelementptr inbounds %class.SkOpAngle, %class.SkOpAngle* %477, i64 0, i32 7
  %484 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %483, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %233) #5
  store i32 0, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %234) #5
  store i32 0, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %235) #5
  store i32 0, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %236) #5
  store i32 0, i32* %13, align 4
  %485 = load i8, i8* %7, align 1, !range !2
  %486 = icmp eq i8 %485, 0
  br i1 %486, label %490, label %487

487:                                              ; preds = %479
  call void @_ZN11SkOpSegment13setUpWindingsEP12SkOpSpanBaseS1_PiS2_S2_S2_S2_S2_(%class.SkOpSegment* %480, %class.SkOpSpanBase* %482, %class.SkOpSpanBase* %484, i32* nonnull %8, i32* nonnull %9, i32* nonnull %10, i32* nonnull %11, i32* nonnull %12, i32* nonnull %13) #5
  %488 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %481, align 8
  %489 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %483, align 8
  br label %490

490:                                              ; preds = %487, %479
  %491 = phi %class.SkOpSpanBase* [ %484, %479 ], [ %489, %487 ]
  %492 = phi %class.SkOpSpanBase* [ %482, %479 ], [ %488, %487 ]
  %493 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %492, i64 0, i32 0, i32 0
  %494 = load double, double* %493, align 8
  %495 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %491, i64 0, i32 0, i32 0
  %496 = load double, double* %495, align 8
  %497 = fcmp olt double %494, %496
  %498 = select i1 %497, %class.SkOpSpanBase* %492, %class.SkOpSpanBase* %491
  %499 = bitcast %class.SkOpSpanBase* %498 to %class.SkOpSpan*
  %500 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %499, i64 0, i32 10
  %501 = load i8, i8* %500, align 4, !range !2
  %502 = icmp eq i8 %501, 0
  br i1 %502, label %503, label %529

503:                                              ; preds = %490
  %504 = icmp eq %class.SkOpSegment* %475, null
  %505 = load i8, i8* %7, align 1, !range !2
  br i1 %504, label %506, label %520

506:                                              ; preds = %503
  %507 = icmp eq i8 %505, 0
  br i1 %507, label %508, label %519

508:                                              ; preds = %506
  %509 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %482, i64 0, i32 0, i32 0
  %510 = load double, double* %509, align 8
  %511 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %484, i64 0, i32 0, i32 0
  %512 = load double, double* %511, align 8
  %513 = fcmp olt double %510, %512
  %514 = select i1 %513, %class.SkOpSpanBase* %482, %class.SkOpSpanBase* %484
  %515 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %514, i64 1, i32 0, i32 3
  %516 = bitcast %class.SkOpPtT** %515 to i32*
  %517 = load i32, i32* %516, align 8
  %518 = icmp eq i32 %517, -2147483647
  br i1 %518, label %529, label %519

519:                                              ; preds = %508, %506
  store %class.SkOpSpanBase* %482, %class.SkOpSpanBase** %16, align 8
  store %class.SkOpSpanBase* %484, %class.SkOpSpanBase** %17, align 8
  br label %520

520:                                              ; preds = %519, %503
  %521 = phi %class.SkOpSegment* [ %480, %519 ], [ %475, %503 ]
  %522 = icmp eq i8 %505, 0
  br i1 %522, label %529, label %523

523:                                              ; preds = %520
  %524 = load i32, i32* %10, align 4
  %525 = load i32, i32* %11, align 4
  %526 = load i32, i32* %12, align 4
  %527 = load i32, i32* %13, align 4
  %528 = call zeroext i1 @_ZN11SkOpSegment9markAngleEiiiiPK9SkOpAnglePP12SkOpSpanBase(%class.SkOpSegment* %480, i32 %524, i32 %525, i32 %526, i32 %527, %class.SkOpAngle* %477, %class.SkOpSpanBase** null) #5
  br i1 %528, label %529, label %531

529:                                              ; preds = %523, %520, %508, %490
  %530 = phi %class.SkOpSegment* [ %475, %490 ], [ %521, %523 ], [ %521, %520 ], [ null, %508 ]
  br label %531

531:                                              ; preds = %529, %523
  %532 = phi i1 [ %473, %529 ], [ false, %523 ]
  %533 = phi i1 [ true, %529 ], [ false, %523 ]
  %534 = phi %class.SkOpSegment* [ %530, %529 ], [ %521, %523 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %236) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %235) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %234) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %233) #5
  br i1 %533, label %472, label %564

535:                                              ; preds = %472
  %536 = icmp eq %class.SkOpSegment* %475, null
  br i1 %536, label %564, label %537

537:                                              ; preds = %535
  %538 = load i32, i32* %221, align 4
  %539 = add i32 %538, 1
  %540 = icmp sgt i32 %539, -1
  br i1 %540, label %542, label %541

541:                                              ; preds = %537
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #6
  unreachable

542:                                              ; preds = %537
  %543 = load i32, i32* %220, align 8
  %544 = icmp slt i32 %543, %539
  br i1 %544, label %547, label %545

545:                                              ; preds = %542
  %546 = load %class.SkOpSpanBase**, %class.SkOpSpanBase*** %219, align 8
  br label %559

547:                                              ; preds = %542
  %548 = add i32 %538, 5
  %549 = lshr i32 %548, 2
  %550 = add nuw i32 %549, %548
  %551 = icmp sgt i32 %550, -1
  br i1 %551, label %553, label %552

552:                                              ; preds = %547
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #6
  unreachable

553:                                              ; preds = %547
  store i32 %550, i32* %220, align 8
  %554 = load i8*, i8** %223, align 8
  %555 = sext i32 %550 to i64
  %556 = shl nsw i64 %555, 3
  %557 = call i8* @_Z16sk_realloc_throwPvm(i8* %554, i64 %556) #5
  store i8* %557, i8** %223, align 8
  %558 = bitcast i8* %557 to %class.SkOpSpanBase**
  br label %559

559:                                              ; preds = %553, %545
  %560 = phi %class.SkOpSpanBase** [ %546, %545 ], [ %558, %553 ]
  store i32 %539, i32* %221, align 4
  %561 = sext i32 %538 to i64
  %562 = getelementptr inbounds %class.SkOpSpanBase*, %class.SkOpSpanBase** %560, i64 %561
  %563 = bitcast %class.SkOpSpanBase** %562 to i64*
  store i64 %401, i64* %563, align 8
  br label %564

564:                                              ; preds = %531, %559, %535, %463, %459
  %565 = phi %class.SkOpSegment* [ %390, %535 ], [ %475, %559 ], [ null, %459 ], [ null, %463 ], [ %390, %531 ]
  %566 = phi i1 [ %473, %535 ], [ true, %559 ], [ true, %459 ], [ true, %463 ], [ %532, %531 ]
  %567 = phi i32 [ 0, %535 ], [ 1, %559 ], [ 1, %459 ], [ 1, %463 ], [ 1, %531 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %232) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %231) #5
  br label %568

568:                                              ; preds = %564, %453, %448
  %569 = phi %class.SkOpSegment* [ %390, %453 ], [ %565, %564 ], [ null, %448 ]
  %570 = phi i1 [ %391, %453 ], [ %566, %564 ], [ true, %448 ]
  %571 = phi i32 [ 2, %453 ], [ %567, %564 ], [ 1, %448 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %230) #5
  br label %572

572:                                              ; preds = %568, %445
  %573 = phi %class.SkOpSegment* [ %569, %568 ], [ %390, %445 ]
  %574 = phi i1 [ %570, %568 ], [ %391, %445 ]
  %575 = phi i32 [ %571, %568 ], [ 2, %445 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #5
  %576 = icmp eq i32 %575, 1
  br i1 %576, label %577, label %389

577:                                              ; preds = %572
  br i1 %574, label %578, label %588

578:                                              ; preds = %577, %439
  %579 = phi %class.SkOpSegment* [ %573, %577 ], [ %444, %439 ]
  call void @_ZN14SkPathOpsDebug15ShowActiveSpansEP15SkOpContourHead(%class.SkOpContourHead* %210) #5
  %580 = icmp eq %class.SkOpSegment* %579, null
  br i1 %580, label %584, label %581

581:                                              ; preds = %578
  %582 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %16, align 8
  %583 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %17, align 8
  br label %246

584:                                              ; preds = %578, %394
  %585 = load i8*, i8** %223, align 8
  call void @_Z7sk_freePv(i8* %585) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %218) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %216) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #5
  %586 = call %class.SkOpSpan* @_Z15FindSortableTopP15SkOpContourHead(%class.SkOpContourHead* %210) #5
  %587 = icmp eq %class.SkOpSpan* %586, null
  br i1 %587, label %591, label %237

588:                                              ; preds = %577, %342, %388, %298
  %589 = load i8*, i8** %223, align 8
  call void @_Z7sk_freePv(i8* %589) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %218) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %216) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #5
  %590 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %3, %class.SkPath* nonnull dereferenceable(16) %31) #5
  br label %592

591:                                              ; preds = %584, %200
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #5
  call void @_ZN12SkPathWriter8assembleEv(%class.SkPathWriter* nonnull %32) #5
  br label %592

592:                                              ; preds = %591, %588
  %593 = phi i1 [ true, %591 ], [ false, %588 ]
  %594 = getelementptr inbounds %class.SkPathWriter, %class.SkPathWriter* %32, i64 0, i32 2
  %595 = bitcast %class.SkTDArray.13* %594 to i8**
  %596 = load i8*, i8** %595, align 8
  call void @_Z7sk_freePv(i8* %596) #5
  %597 = getelementptr inbounds %class.SkPathWriter, %class.SkPathWriter* %32, i64 0, i32 1
  %598 = getelementptr inbounds %class.SkPathWriter, %class.SkPathWriter* %32, i64 0, i32 1, i32 1
  %599 = load i64, i64* %598, align 8
  %600 = and i64 %599, 4294967294
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %604, label %602

602:                                              ; preds = %592
  %603 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %597, i64 0, i32 0
  br label %608

604:                                              ; preds = %608, %592
  %605 = phi i64 [ %599, %592 ], [ %613, %608 ]
  %606 = and i64 %605, 1
  %607 = icmp eq i64 %606, 0
  br i1 %607, label %620, label %617

608:                                              ; preds = %608, %602
  %609 = phi i64 [ 0, %602 ], [ %612, %608 ]
  %610 = load %class.SkPath*, %class.SkPath** %603, align 8
  %611 = getelementptr inbounds %class.SkPath, %class.SkPath* %610, i64 %609
  call void @_ZN6SkPathD1Ev(%class.SkPath* %611) #5
  %612 = add nuw nsw i64 %609, 1
  %613 = load i64, i64* %598, align 8
  %614 = lshr i64 %613, 1
  %615 = and i64 %614, 2147483647
  %616 = icmp ult i64 %612, %615
  br i1 %616, label %608, label %604

617:                                              ; preds = %604
  %618 = bitcast %class.SkTArray* %597 to i8**
  %619 = load i8*, i8** %618, align 8
  call void @_Z7sk_freePv(i8* %619) #5
  br label %620

620:                                              ; preds = %604, %617
  %621 = getelementptr inbounds %class.SkPathWriter, %class.SkPathWriter* %32, i64 0, i32 0
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %621) #5
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %209) #5
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %31) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %201) #5
  br label %622

622:                                              ; preds = %117, %158, %620, %197, %175
  %623 = phi i1 [ false, %117 ], [ false, %158 ], [ true, %175 ], [ %593, %620 ], [ false, %197 ]
  %624 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %30, i64 0, i32 4, i32 0
  %625 = load i8*, i8** %624, align 8
  call void @_Z7sk_freePv(i8* %625) #5
  %626 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %30, i64 0, i32 3
  %627 = bitcast %class.SkTDArray.2* %626 to i8**
  %628 = load i8*, i8** %627, align 8
  call void @_Z7sk_freePv(i8* %628) #5
  %629 = bitcast %class.SkTDArray* %147 to i8**
  %630 = load i8*, i8** %629, align 8
  call void @_Z7sk_freePv(i8* %630) #5
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %141) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %132) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %128) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #5
  call void @llvm.lifetime.end.p0i8(i64 344, i8* nonnull %121) #5
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %120) #5
  call void @llvm.lifetime.end.p0i8(i64 4128, i8* nonnull %118) #5
  br label %631

631:                                              ; preds = %60, %68, %622, %115
  %632 = phi i1 [ %116, %115 ], [ %623, %622 ], [ true, %68 ], [ true, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #5
  ret i1 %632
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath*, %struct.SkRect*, i8*, i32*) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath*) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_Z8SimplifyRK6SkPathPS_(%class.SkPath* dereferenceable(16), %class.SkPath*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN15SkOpGlobalStateC1EP15SkOpContourHeadP12SkArenaAlloc(%class.SkOpGlobalState*, %class.SkOpContourHead*, %class.SkArenaAlloc*) unnamed_addr #2

declare void @_ZN15SkOpEdgeBuilder10addOperandERK6SkPath(%class.SkOpEdgeBuilder*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN15SkOpEdgeBuilder6finishEv(%class.SkOpEdgeBuilder*) local_unnamed_addr #2

declare zeroext i1 @_Z15SortContourListPP15SkOpContourHeadbb(%class.SkOpContourHead**, i1 zeroext, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_Z14AddIntersectTsP11SkOpContourS0_P15SkOpCoincidence(%class.SkOpContour*, %class.SkOpContour*, %class.SkOpCoincidence*) local_unnamed_addr #2

declare zeroext i1 @_Z17HandleCoincidenceP15SkOpContourHeadP15SkOpCoincidence(%class.SkOpContourHead*, %class.SkOpCoincidence*) local_unnamed_addr #2

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

declare void @_ZN12SkPathWriterC1ER6SkPath(%class.SkPathWriter*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

declare void @_ZN12SkPathWriter8assembleEv(%class.SkPathWriter*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* dereferenceable(16), %class.SkPath* dereferenceable(16), i32, %class.SkPath*) local_unnamed_addr #0 {
  %5 = tail call zeroext i1 @_Z7OpDebugRK6SkPathS1_8SkPathOpPS_(%class.SkPath* dereferenceable(16) %0, %class.SkPath* dereferenceable(16) %1, i32 %2, %class.SkPath* %3)
  ret i1 %5
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #2

declare void @_ZN15SkOpEdgeBuilder4initEv(%class.SkOpEdgeBuilder*) local_unnamed_addr #2

declare %class.SkOpSpan* @_Z15FindSortableTopP15SkOpContourHead(%class.SkOpContourHead*) local_unnamed_addr #2

declare zeroext i1 @_ZN11SkOpSegment8activeOpEP12SkOpSpanBaseS1_ii8SkPathOp(%class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, i32, i32, i32) local_unnamed_addr #2

declare %class.SkOpSegment* @_ZN11SkOpSegment10findNextOpEP9SkTDArrayIP12SkOpSpanBaseEPS2_S5_PbS6_8SkPathOpii(%class.SkOpSegment*, %class.SkTDArray.14*, %class.SkOpSpanBase**, %class.SkOpSpanBase**, i8*, i8*, i32, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK12SkPathWriter8isClosedEv(%class.SkPathWriter*) local_unnamed_addr #2

declare zeroext i1 @_ZNK11SkOpSegment10addCurveToEPK12SkOpSpanBaseS2_P12SkPathWriter(%class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, %class.SkPathWriter*) local_unnamed_addr #2

declare void @_ZN14SkPathOpsDebug15ShowActiveSpansEP15SkOpContourHead(%class.SkOpContourHead*) local_unnamed_addr #2

declare zeroext i1 @_ZN11SkOpSegment13activeWindingEP12SkOpSpanBaseS1_(%class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpSpanBase*) local_unnamed_addr #2

declare void @_ZN11SkOpSegment8markDoneEP8SkOpSpan(%class.SkOpSegment*, %class.SkOpSpan*) local_unnamed_addr #2

declare void @_ZN12SkPathWriter13finishContourEv(%class.SkPathWriter*) local_unnamed_addr #2

declare zeroext i1 @_ZN11SkOpSegment16markAndChaseDoneEP12SkOpSpanBaseS1_PS1_(%class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, %class.SkOpSpanBase**) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #4

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #2

declare %class.SkOpPtT* @_ZN7SkOpPtT4prevEv(%class.SkOpPtT*) local_unnamed_addr #2

declare %class.SkOpAngle* @_ZN11SkOpSegment11activeAngleEP12SkOpSpanBasePS1_S2_Pb(%class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpSpanBase**, %class.SkOpSpanBase**, i8*) local_unnamed_addr #2

declare %class.SkOpSegment* @_ZNK9SkOpAngle7segmentEv(%class.SkOpAngle*) local_unnamed_addr #2

declare %class.SkOpAngle* @_Z12AngleWindingP12SkOpSpanBaseS0_PiPb(%class.SkOpSpanBase*, %class.SkOpSpanBase*, i32*, i8*) local_unnamed_addr #2

declare i32 @_ZN11SkOpSegment20updateWindingReverseEPK9SkOpAngle(%class.SkOpSegment*, %class.SkOpAngle*) local_unnamed_addr #2

declare i32 @_ZNK11SkOpSegment23updateOppWindingReverseEPK9SkOpAngle(%class.SkOpSegment*, %class.SkOpAngle*) local_unnamed_addr #2

declare zeroext i1 @_ZNK11SkOpSegment7operandEv(%class.SkOpSegment*) local_unnamed_addr #2

declare void @_ZN11SkOpSegment13setUpWindingsEP12SkOpSpanBaseS1_PiS2_S2_S2_S2_S2_(%class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, i32*, i32*, i32*, i32*, i32*, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZN11SkOpSegment9markAngleEiiiiPK9SkOpAnglePP12SkOpSpanBase(%class.SkOpSegment*, i32, i32, i32, i32, %class.SkOpAngle*, %class.SkOpSpanBase**) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc*) unnamed_addr #3

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
