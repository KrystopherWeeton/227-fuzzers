; ModuleID = '../../media/formats/mp4/es_descriptor.cc'
source_filename = "../../media/formats/mp4/es_descriptor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::mp4::ESDescriptor" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.media::BitReader" = type { %"class.media::BitReaderCore::ByteStreamProvider", i32, i8*, i32, %"class.media::BitReaderCore" }
%"class.media::BitReaderCore::ByteStreamProvider" = type { i32 (...)** }
%"class.media::BitReaderCore" = type { %"class.media::BitReaderCore::ByteStreamProvider"*, i32, i32, i64, i32, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@_ZN5media3mp412ESDescriptorC1Ev = hidden unnamed_addr alias void (%"class.media::mp4::ESDescriptor"*), void (%"class.media::mp4::ESDescriptor"*)* @_ZN5media3mp412ESDescriptorC2Ev
@_ZN5media3mp412ESDescriptorD1Ev = hidden unnamed_addr alias void (%"class.media::mp4::ESDescriptor"*), void (%"class.media::mp4::ESDescriptor"*)* @_ZN5media3mp412ESDescriptorD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5media3mp412ESDescriptor5IsAACEh(i8 zeroext) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i8 %0, 64
  %3 = icmp eq i8 %0, 103
  %4 = or i1 %2, %3
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media3mp412ESDescriptorC2Ev(%"class.media::mp4::ESDescriptor"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.media::mp4::ESDescriptor", %"class.media::mp4::ESDescriptor"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.media::mp4::ESDescriptor", %"class.media::mp4::ESDescriptor"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media3mp412ESDescriptorD2Ev(%"class.media::mp4::ESDescriptor"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.media::mp4::ESDescriptor", %"class.media::mp4::ESDescriptor"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"class.media::mp4::ESDescriptor", %"class.media::mp4::ESDescriptor"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_ZdlPv(i8* nonnull %3) #10
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media3mp412ESDescriptor5ParseERKNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.media::mp4::ESDescriptor"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.media::BitReader", align 8
  %12 = alloca i32, align 4
  %13 = bitcast %"class.media::BitReader"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 72, i1 false)
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = ptrtoint i8* %15 to i64
  %20 = sub i64 %18, %19
  %21 = trunc i64 %20 to i32
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %11, i8* %15, i32 %21) #9
  %22 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #9
  store i32 -1431655766, i32* %12, align 4
  %23 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %11, i64 0, i32 4
  %24 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  store i64 0, i64* %9, align 8
  %25 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %23, i32 8, i64* nonnull %9) #9
  br i1 %25, label %27, label %26

26:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %71

27:                                               ; preds = %2
  %28 = load i64, i64* %9, align 8
  %29 = trunc i64 %28 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %30 = icmp eq i8 %29, 3
  br i1 %30, label %31, label %71

31:                                               ; preds = %27
  %32 = call fastcc zeroext i1 @_ZL10ReadESSizePN5media9BitReaderEPj(%"class.media::BitReader"* nonnull %11, i32* nonnull %12)
  br i1 %32, label %33, label %71

33:                                               ; preds = %31
  %34 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  store i64 0, i64* %8, align 8
  %35 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %23, i32 16, i64* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br i1 %35, label %36, label %71

36:                                               ; preds = %33
  %37 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  store i64 0, i64* %7, align 8
  %38 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %23, i32 1, i64* nonnull %7) #9
  br i1 %38, label %40, label %39

39:                                               ; preds = %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  br label %71

40:                                               ; preds = %36
  %41 = load i64, i64* %7, align 8
  %42 = trunc i64 %41 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  %43 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #9
  store i64 0, i64* %6, align 8
  %44 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %23, i32 1, i64* nonnull %6) #9
  br i1 %44, label %46, label %45

45:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #9
  br label %71

46:                                               ; preds = %40
  %47 = load i64, i64* %6, align 8
  %48 = trunc i64 %47 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #9
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %71

50:                                               ; preds = %46
  %51 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  store i64 0, i64* %5, align 8
  %52 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %23, i32 1, i64* nonnull %5) #9
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  br label %71

54:                                               ; preds = %50
  %55 = load i64, i64* %5, align 8
  %56 = trunc i64 %55 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  %57 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #9
  store i64 0, i64* %4, align 8
  %58 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %23, i32 5, i64* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #9
  br i1 %58, label %59, label %71

59:                                               ; preds = %54
  %60 = icmp eq i8 %42, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %59
  %62 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #9
  store i64 0, i64* %3, align 8
  %63 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %23, i32 16, i64* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #9
  br i1 %63, label %64, label %71

64:                                               ; preds = %61, %59
  %65 = icmp eq i8 %56, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %64
  %67 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #9
  store i64 0, i64* %10, align 8
  %68 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %23, i32 16, i64* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #9
  br i1 %68, label %69, label %71

69:                                               ; preds = %66, %64
  %70 = call zeroext i1 @_ZN5media3mp412ESDescriptor28ParseDecoderConfigDescriptorEPNS_9BitReaderE(%"class.media::mp4::ESDescriptor"* %0, %"class.media::BitReader"* nonnull %11)
  br label %71

71:                                               ; preds = %66, %61, %54, %33, %53, %45, %39, %26, %69, %46, %31, %27
  %72 = phi i1 [ false, %27 ], [ false, %31 ], [ false, %39 ], [ false, %46 ], [ false, %53 ], [ %70, %69 ], [ false, %26 ], [ false, %45 ], [ false, %33 ], [ false, %54 ], [ false, %61 ], [ false, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #9
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %13) #9
  ret i1 %72
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"*, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL10ReadESSizePN5media9BitReaderEPj(%"class.media::BitReader"*, i32* nocapture) unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i32 0, i32* %1, align 4
  %5 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 4
  %6 = bitcast i64* %4 to i8*
  %7 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  store i64 0, i64* %4, align 8
  %8 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %5, i32 1, i64* nonnull %4) #9
  br i1 %8, label %12, label %11

9:                                                ; preds = %16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  store i64 0, i64* %4, align 8
  %10 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %5, i32 1, i64* nonnull %4) #9
  br i1 %10, label %27, label %11

11:                                               ; preds = %53, %39, %9, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  br label %25

12:                                               ; preds = %2
  %13 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  store i64 0, i64* %3, align 8
  %14 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %5, i32 7, i64* nonnull %3) #9
  br i1 %14, label %16, label %15

15:                                               ; preds = %55, %41, %27, %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  br label %25

16:                                               ; preds = %12
  %17 = trunc i64 %13 to i8
  %18 = load i64, i64* %3, align 8
  %19 = trunc i64 %18 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  %20 = load i32, i32* %1, align 4
  %21 = shl i32 %20, 7
  %22 = and i32 %19, 255
  %23 = add i32 %21, %22
  store i32 %23, i32* %1, align 4
  %24 = icmp eq i8 %17, 0
  br i1 %24, label %25, label %9

25:                                               ; preds = %57, %16, %30, %44, %11, %15
  %26 = phi i1 [ false, %15 ], [ false, %11 ], [ true, %44 ], [ true, %30 ], [ true, %16 ], [ true, %57 ]
  ret i1 %26

27:                                               ; preds = %9
  %28 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  store i64 0, i64* %3, align 8
  %29 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %5, i32 7, i64* nonnull %3) #9
  br i1 %29, label %30, label %15

30:                                               ; preds = %27
  %31 = trunc i64 %28 to i8
  %32 = load i64, i64* %3, align 8
  %33 = trunc i64 %32 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  %34 = load i32, i32* %1, align 4
  %35 = shl i32 %34, 7
  %36 = and i32 %33, 255
  %37 = add i32 %35, %36
  store i32 %37, i32* %1, align 4
  %38 = icmp eq i8 %31, 0
  br i1 %38, label %25, label %39

39:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  store i64 0, i64* %4, align 8
  %40 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %5, i32 1, i64* nonnull %4) #9
  br i1 %40, label %41, label %11

41:                                               ; preds = %39
  %42 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  store i64 0, i64* %3, align 8
  %43 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %5, i32 7, i64* nonnull %3) #9
  br i1 %43, label %44, label %15

44:                                               ; preds = %41
  %45 = trunc i64 %42 to i8
  %46 = load i64, i64* %3, align 8
  %47 = trunc i64 %46 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  %48 = load i32, i32* %1, align 4
  %49 = shl i32 %48, 7
  %50 = and i32 %47, 255
  %51 = add i32 %49, %50
  store i32 %51, i32* %1, align 4
  %52 = icmp eq i8 %45, 0
  br i1 %52, label %25, label %53

53:                                               ; preds = %44
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  store i64 0, i64* %4, align 8
  %54 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %5, i32 1, i64* nonnull %4) #9
  br i1 %54, label %55, label %11

55:                                               ; preds = %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  store i64 0, i64* %3, align 8
  %56 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %5, i32 7, i64* nonnull %3) #9
  br i1 %56, label %57, label %15

57:                                               ; preds = %55
  %58 = load i64, i64* %3, align 8
  %59 = trunc i64 %58 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  %60 = load i32, i32* %1, align 4
  %61 = shl i32 %60, 7
  %62 = and i32 %59, 255
  %63 = add i32 %61, %62
  store i32 %63, i32* %1, align 4
  br label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media3mp412ESDescriptor28ParseDecoderConfigDescriptorEPNS_9BitReaderE(%"class.media::mp4::ESDescriptor"*, %"class.media::BitReader"*) local_unnamed_addr #1 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #9
  store i32 -1431655766, i32* %7, align 4
  %9 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %1, i64 0, i32 4
  %10 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  store i64 0, i64* %6, align 8
  %11 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %9, i32 8, i64* nonnull %6) #9
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  br label %34

13:                                               ; preds = %2
  %14 = load i64, i64* %6, align 8
  %15 = trunc i64 %14 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  %16 = icmp eq i8 %15, 4
  br i1 %16, label %17, label %34

17:                                               ; preds = %13
  %18 = call fastcc zeroext i1 @_ZL10ReadESSizePN5media9BitReaderEPj(%"class.media::BitReader"* %1, i32* nonnull %7)
  br i1 %18, label %19, label %34

19:                                               ; preds = %17
  %20 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  store i64 0, i64* %5, align 8
  %21 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %9, i32 8, i64* nonnull %5) #9
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %34

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.media::mp4::ESDescriptor", %"class.media::mp4::ESDescriptor"* %0, i64 0, i32 0
  %25 = load i64, i64* %5, align 8
  %26 = trunc i64 %25 to i8
  store i8 %26, i8* %24, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  %27 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  store i64 0, i64* %4, align 8
  %28 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %9, i32 64, i64* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br i1 %28, label %29, label %34

29:                                               ; preds = %23
  %30 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  store i64 0, i64* %3, align 8
  %31 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %9, i32 32, i64* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = call zeroext i1 @_ZN5media3mp412ESDescriptor24ParseDecoderSpecificInfoEPNS_9BitReaderE(%"class.media::mp4::ESDescriptor"* %0, %"class.media::BitReader"* %1)
  br label %34

34:                                               ; preds = %22, %12, %32, %29, %23, %17, %13
  %35 = phi i1 [ false, %13 ], [ false, %17 ], [ false, %22 ], [ false, %23 ], [ false, %29 ], [ %33, %32 ], [ false, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #9
  ret i1 %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK5media3mp412ESDescriptor11object_typeEv(%"class.media::mp4::ESDescriptor"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.media::mp4::ESDescriptor", %"class.media::mp4::ESDescriptor"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  ret i8 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZNK5media3mp412ESDescriptor21decoder_specific_infoEv(%"class.media::mp4::ESDescriptor"* readnone) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::mp4::ESDescriptor", %"class.media::mp4::ESDescriptor"* %0, i64 0, i32 1
  ret %"class.std::__1::vector"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media3mp412ESDescriptor24ParseDecoderSpecificInfoEPNS_9BitReaderE(%"class.media::mp4::ESDescriptor"*, %"class.media::BitReader"*) local_unnamed_addr #1 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #9
  store i32 -1431655766, i32* %5, align 4
  %7 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %1, i64 0, i32 4
  %8 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  store i64 0, i64* %4, align 8
  %9 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %7, i32 8, i64* nonnull %4) #9
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  br label %51

11:                                               ; preds = %2
  %12 = load i64, i64* %4, align 8
  %13 = trunc i64 %12 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  %14 = icmp eq i8 %13, 5
  br i1 %14, label %15, label %51

15:                                               ; preds = %11
  %16 = call fastcc zeroext i1 @_ZL10ReadESSizePN5media9BitReaderEPj(%"class.media::BitReader"* %1, i32* nonnull %5)
  br i1 %16, label %17, label %51

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.media::mp4::ESDescriptor", %"class.media::mp4::ESDescriptor"* %0, i64 0, i32 1
  %19 = load i32, i32* %5, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.media::mp4::ESDescriptor", %"class.media::mp4::ESDescriptor"* %0, i64 0, i32 1, i32 0, i32 1
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %18 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = icmp ult i64 %26, %20
  %28 = inttoptr i64 %25 to i8*
  br i1 %27, label %29, label %31

29:                                               ; preds = %17
  %30 = sub i64 %20, %26
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %18, i64 %30) #9
  br label %35

31:                                               ; preds = %17
  %32 = icmp ugt i64 %26, %20
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = getelementptr inbounds i8, i8* %28, i64 %20
  store i8* %34, i8** %21, align 8
  br label %35

35:                                               ; preds = %29, %31, %33
  %36 = icmp eq i32 %19, 0
  br i1 %36, label %51, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %39 = bitcast i64* %3 to i8*
  br label %40

40:                                               ; preds = %44, %37
  %41 = phi i64 [ 0, %37 ], [ %48, %44 ]
  %42 = load i8*, i8** %38, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  store i64 0, i64* %3, align 8
  %43 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %7, i32 8, i64* nonnull %3) #9
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = getelementptr inbounds i8, i8* %42, i64 %41
  %46 = load i64, i64* %3, align 8
  %47 = trunc i64 %46 to i8
  store i8 %47, i8* %45, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  %48 = add nuw nsw i64 %41, 1
  %49 = icmp eq i64 %48, %20
  br i1 %49, label %51, label %40

50:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  br label %51

51:                                               ; preds = %44, %35, %50, %10, %15, %11
  %52 = phi i1 [ false, %11 ], [ false, %15 ], [ false, %10 ], [ false, %50 ], [ true, %35 ], [ true, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #9
  ret i1 %52
}

declare zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"*, i32, i64*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #9
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #11
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #10
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #9
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #9
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #10
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
