; ModuleID = '../../third_party/blink/renderer/core/css/css_image_set_value.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_image_set_value.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.url::Component" = type { i32, i32 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.base::TimeDelta" = type { i64 }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.648 }
%union.anon.648 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%union.anon.674 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.675 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.863", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.670", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.675 }
%"class.WTF::RefCounted.863" = type { %"class.base::RefCounted.864" }
%"class.base::RefCounted.864" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.670" = type { %"class.absl::optional_internal::optional_data.671" }
%"class.absl::optional_internal::optional_data.671" = type { %"class.absl::optional_internal::optional_data_base.672" }
%"class.absl::optional_internal::optional_data_base.672" = type { %"class.absl::optional_internal::optional_data_dtor_base.673" }
%"class.absl::optional_internal::optional_data_dtor_base.673" = type { i8, %union.anon.674 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.676" }
%"class.WTF::HashMap.676" = type { %"class.WTF::HashTable.677" }
%"class.WTF::HashTable.677" = type <{ %"struct.WTF::KeyValuePair.680"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.680" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.681 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.682", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.691, i8, %"class.url::Origin" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.683" }
%"class.std::__1::vector.683" = type { %"class.std::__1::__vector_base.684" }
%"class.std::__1::__vector_base.684" = type { %"class.std::__1::unique_ptr.685"*, %"class.std::__1::unique_ptr.685"*, %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::unique_ptr.685" = type { %"class.std::__1::__compressed_pair.1110" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"class.std::__1::unique_ptr.685"* }
%class.scoped_refptr.691 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.692", [4 x i8] }>
%"class.base::RefCountedThreadSafe.692" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.94" }
%"struct.std::__1::atomic.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__cxx_atomic_impl.97" }
%"struct.std::__1::__cxx_atomic_impl.97" = type { %"struct.std::__1::__cxx_atomic_base_impl.98" }
%"struct.std::__1::__cxx_atomic_base_impl.98" = type { i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.670" }
%"class.WTF::Vector.703" = type { %"class.WTF::VectorBuffer.704" }
%"class.WTF::VectorBuffer.704" = type { %"class.WTF::VectorBufferBase.705" }
%"class.WTF::VectorBufferBase.705" = type { %class.scoped_refptr.675*, i32, i32 }
%"class.WTF::Vector.662" = type { %"class.WTF::VectorBuffer.663" }
%"class.WTF::VectorBuffer.663" = type { %"class.WTF::VectorBufferBase.664" }
%"class.WTF::VectorBufferBase.664" = type { %"class.WTF::String"*, i32, i32 }
%union.anon.717 = type { %"class.base::TimeDelta" }
%"class.WTF::String" = type { %class.scoped_refptr }
%union.anon.712 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%union.anon.722 = type { %"class.base::UnguessableToken" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.728 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1115", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.1115" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1116" }
%"class.std::__1::vector.1116" = type { %"class.std::__1::__vector_base.1117" }
%"class.std::__1::__vector_base.1117" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1118" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.1119" }
%"struct.std::__1::__compressed_pair_elem.1119" = type { i32* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.1072, %"class.mojo::PendingRemote.1073" }
%class.scoped_refptr.1072 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.1073" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.776" = type { %"class.WTF::HashTable.777" }
%"class.WTF::HashTable.777" = type <{ %"struct.std::__1::pair.780"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.780" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.128 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.129", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.129" = type { %"class.base::RefCounted.130" }
%"class.base::RefCounted.130" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.133" }
%"class.blink::HeapHashMap.133" = type { %"class.WTF::HashMap.136" }
%"class.WTF::HashMap.136" = type { %"class.WTF::HashTable.137" }
%"class.WTF::HashTable.137" = type <{ %"struct.WTF::KeyValuePair.139"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.139" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.140" }
%"class.blink::MemberBase.140" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.141", i32, [4 x i8], %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.277", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.293", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.311", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.318", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.257", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.177" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__cxx_atomic_impl.180" }
%"struct.std::__1::__cxx_atomic_impl.180" = type { %"struct.std::__1::__cxx_atomic_base_impl.181" }
%"struct.std::__1::__cxx_atomic_base_impl.181" = type { i64 }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::Worklist.188"* }
%"class.blink::Worklist.188" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.177" }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::Worklist.195"* }
%"class.blink::Worklist.195" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.177" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::Worklist.202"* }
%"class.blink::Worklist.202" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.177" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::Worklist.209"* }
%"class.blink::Worklist.209" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.177" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::Worklist.216"* }
%"class.blink::Worklist.216" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.177" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::Worklist.223"* }
%"class.blink::Worklist.223" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.177" }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::Worklist.230"* }
%"class.blink::Worklist.230" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.177" }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.237", %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.249", %"class.std::__1::__compressed_pair.251", [4 x i8] }>
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239", %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { i64 }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { float }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.260", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.269" }
%"class.WTF::Vector.269" = type { %"class.WTF::VectorBuffer.270" }
%"class.WTF::VectorBuffer.270" = type { %"class.WTF::VectorBufferBase.271" }
%"class.WTF::VectorBufferBase.271" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.299" }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.188"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.195"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.202"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.209"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.216"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.549" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.317 }
%class.scoped_refptr.317 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.318" = type { %"struct.std::__1::__atomic_base.319" }
%"struct.std::__1::__atomic_base.319" = type { %"struct.std::__1::__cxx_atomic_impl.320" }
%"struct.std::__1::__cxx_atomic_impl.320" = type { %"struct.std::__1::__cxx_atomic_base_impl.321" }
%"struct.std::__1::__cxx_atomic_base_impl.321" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.781 = type { %"class.base::RefCountedData.782"* }
%"class.base::RefCountedData.782" = type opaque
%class.scoped_refptr.783 = type { %"class.base::RefCountedData.784"* }
%"class.base::RefCountedData.784" = type opaque
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.94" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::CSSImageSetValue" = type { %"class.blink::CSSValueList", %"class.blink::Member.2", float, %"class.WTF::Vector.6" }
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector" }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { %"struct.blink::CSSImageSetValue::ImageWithScale"*, i32, i32 }
%"struct.blink::CSSImageSetValue::ImageWithScale" = type { i32, float }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.90", %"class.WTF::Vector.90", i8, i32, %"class.blink::Member.101", %"class.blink::Member.103", %"class.blink::Member.105", %"class.blink::Member.107", %"class.blink::Member.109", %"class.blink::Member.111", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.114", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.120", %"class.blink::Member.122", %"class.blink::Member.80", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.125", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.56", %"class.blink::Member.37", %"class.blink::Member.334", %"class.blink::Member.37", %"class.blink::Member.37", %"class.blink::Member.37", %"class.blink::UserActionElementSet", %"class.blink::Member.343", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.350", i16, i8, %"class.blink::Member.357", %"class.blink::Member.359", %"class.blink::Member.361", %"class.blink::Member.363", %"class.blink::TextLinkColors", %"class.blink::Member.365", i8, [7 x i8], %"class.blink::HeapHashMap.367", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.37", %"class.WTF::Vector.374", %"class.blink::Member.379", %"class.blink::Member.381", i8, %"class.blink::Member.37", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.383", %"class.blink::HeapVector.385", %"class.std::__1::unique_ptr.393", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.399", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.412", %"class.WTF::Vector.414", i8, i8, %"class.std::__1::unique_ptr.419", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.56", %"class.blink::HeapVector.425", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.433", i8, i32, %"class.blink::Member.435", %"class.blink::Member.437", %"class.blink::Member.439", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.441", %"class.WTF::HashMap.443", %"class.blink::Member.448", %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::Member.454", %"class.blink::Member.23", %"class.blink::Member.23", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.456", i8, i32, %"class.blink::Member.463", %"class.blink::Member.465", i32, %"class.blink::Member.467", %"class.blink::Member.469", %"class.blink::Member.471", %"class.std::__1::unique_ptr.473", i64, %"class.std::__1::unique_ptr.479", i32, i32, %"class.blink::Member.485", %"class.blink::Member.487", %"class.blink::Member.489", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.491", %"class.WTF::Vector.493", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.498", %"class.blink::Member.505", %"class.std::__1::unique_ptr.507", %"class.blink::Member.513", i8, i8, %"class.WTF::String", %"class.blink::Member.515", i8, [7 x i8], %"class.blink::HeapHashMap.517", %"class.blink::HeapObserverSet", %"class.blink::Member.531", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.533", i32, i8, i8, %"class.blink::WeakMember.535", %"class.blink::Member.536" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.13", %"class.blink::Member.13" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.13", %"class.blink::Member.15", %"class.blink::Member.13", %"class.blink::Member.13", %"class.blink::Member.17" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.15" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.21", %"class.blink::Member.23", %"class.blink::Member.15", %"class.blink::Member.25", %"class.blink::Member.25", %"class.blink::Member.63", %"class.blink::Member.65", %"class.blink::Member.67", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.72", %"class.blink::HeapVector.74" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.33" }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.37", i32, %"class.blink::HeapVector.56" }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.69" }
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::HeapHashMap.71"* }
%"class.blink::HeapHashMap.71" = type opaque
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.74" = type { %"class.WTF::Vector.77" }
%"class.WTF::Vector.77" = type { %"class.WTF::VectorBuffer.78" }
%"class.WTF::VectorBuffer.78" = type { %"class.WTF::VectorBufferBase.79" }
%"class.WTF::VectorBufferBase.79" = type { %"class.blink::Member.80"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.83" }
%"class.blink::HeapHashMap.83" = type { %"class.WTF::HashMap.86" }
%"class.WTF::HashMap.86" = type { %"class.WTF::HashTable.87" }
%"class.WTF::HashTable.87" = type <{ %"struct.WTF::KeyValuePair.89"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.89" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.90" = type { %"class.WTF::VectorBuffer.91" }
%"class.WTF::VectorBuffer.91" = type { %"class.WTF::VectorBufferBase.92" }
%"class.WTF::VectorBufferBase.92" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.93 }
%class.scoped_refptr.93 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.865", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.927", i32, i8, [3 x i8], %"class.blink::HeapVector.929", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.948", %"class.blink::Member.1067", %"class.blink::Member.1069", i8, [7 x i8] }>
%"class.blink::Supplementable.865" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.866" }
%"class.blink::HeapHashMap.866" = type { %"class.WTF::HashMap.869" }
%"class.WTF::HashMap.869" = type { %"class.WTF::HashTable.870" }
%"class.WTF::HashTable.870" = type <{ %"struct.WTF::KeyValuePair.872"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.872" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.881" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.873" }
%"class.blink::HeapObserverSet.873" = type { i32, [4 x i8], %"class.blink::HeapHashSet.874" }
%"class.blink::HeapHashSet.874" = type { %"class.WTF::HashSet.877" }
%"class.WTF::HashSet.877" = type { %"class.WTF::HashTable.878" }
%"class.WTF::HashTable.878" = type <{ %"class.blink::WeakMember.880"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.880" = type opaque
%"class.blink::Supplementable.881" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.882" }
%"class.blink::HeapHashMap.882" = type { %"class.WTF::HashMap.885" }
%"class.WTF::HashMap.885" = type { %"class.WTF::HashTable.886" }
%"class.WTF::HashTable.886" = type <{ %"struct.WTF::KeyValuePair.888"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.888" = type { i8*, %"class.blink::Member.1123" }
%"class.blink::Member.1123" = type { %"class.blink::MemberBase.1124" }
%"class.blink::MemberBase.1124" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1125" }
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.889, %"class.std::__1::unique_ptr.890", %"class.std::__1::unique_ptr.890", %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917", %"class.blink::Member.103", i32, [4 x i8], %"class.WTF::HashSet.923", i32, i32 }
%class.scoped_refptr.889 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.890" = type { %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.893", %"class.std::__1::map.904", %"class.std::__1::map.913"* }
%"class.std::__1::map.893" = type { %"class.std::__1::__tree.894" }
%"class.std::__1::__tree.894" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.895", %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"class.std::__1::map.904" = type { %"class.std::__1::__tree.905" }
%"class.std::__1::__tree.905" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.906", %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"class.std::__1::map.913" = type opaque
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.923" = type { %"class.WTF::HashTable.924" }
%"class.WTF::HashTable.924" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.927" = type { %"class.blink::MemberBase.928" }
%"class.blink::MemberBase.928" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.929" = type { %"class.WTF::Vector.932" }
%"class.WTF::Vector.932" = type { %"class.WTF::VectorBuffer.933" }
%"class.WTF::VectorBuffer.933" = type { %"class.WTF::VectorBufferBase.934" }
%"class.WTF::VectorBufferBase.934" = type { %"class.blink::Member.935"*, i32, i32 }
%"class.blink::Member.935" = type opaque
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.941", i32, i32 }
%"class.blink::HeapHashMap.941" = type { %"class.WTF::HashMap.944" }
%"class.WTF::HashMap.944" = type { %"class.WTF::HashTable.945" }
%"class.WTF::HashTable.945" = type <{ %"struct.WTF::KeyValuePair.947"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.947" = type opaque
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.951" }
%"class.std::__1::unique_ptr.951" = type { %"class.std::__1::__compressed_pair.952" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.953" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.954" }
%"class.WTF::Vector.954" = type { %"class.WTF::VectorBuffer.955" }
%"class.WTF::VectorBuffer.955" = type { %"class.WTF::VectorBufferBase.956" }
%"class.WTF::VectorBufferBase.956" = type { %"class.mojo::StructPtr.957"*, i32, i32 }
%"class.mojo::StructPtr.957" = type { %"class.std::__1::unique_ptr.958" }
%"class.std::__1::unique_ptr.958" = type { %"class.std::__1::__compressed_pair.959" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.961", %"class.WTF::HashMap.968", %"class.WTF::HashMap.973", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.978", i8, %"class.WTF::Vector.662", i32, %"class.mojo::StructPtr.979", %"class.WTF::Vector.662" }
%"class.mojo::StructPtr.961" = type { %"class.std::__1::unique_ptr.962" }
%"class.std::__1::unique_ptr.962" = type { %"class.std::__1::__compressed_pair.963" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.968" = type { %"class.WTF::HashTable.969" }
%"class.WTF::HashTable.969" = type <{ %"struct.WTF::KeyValuePair.972"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.972" = type opaque
%"class.WTF::HashMap.973" = type { %"class.WTF::HashTable.974" }
%"class.WTF::HashTable.974" = type <{ %"struct.WTF::KeyValuePair.977"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.977" = type opaque
%"class.mojo::InlinedStructPtr.978" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.979" = type { %"class.std::__1::unique_ptr.980" }
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.662", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1058" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.994", i32 }>
%"class.std::__1::unique_ptr.994" = type { %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.997", %"class.absl::optional.713", %"class.absl::optional.998", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1011", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1033", %"class.std::__1::map.1044", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1053", i8, %class.scoped_refptr.1003, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1054" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.997" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.713" = type { %"class.absl::optional_internal::optional_data.714" }
%"class.absl::optional_internal::optional_data.714" = type { %"class.absl::optional_internal::optional_data_base.715" }
%"class.absl::optional_internal::optional_data_base.715" = type { %"class.absl::optional_internal::optional_data_dtor_base.716" }
%"class.absl::optional_internal::optional_data_dtor_base.716" = type { i8, %union.anon.717 }
%"class.absl::optional.998" = type { %"class.absl::optional_internal::optional_data.999" }
%"class.absl::optional_internal::optional_data.999" = type { %"class.absl::optional_internal::optional_data_base.1000" }
%"class.absl::optional_internal::optional_data_base.1000" = type { %"class.absl::optional_internal::optional_data_dtor_base.1001" }
%"class.absl::optional_internal::optional_data_dtor_base.1001" = type { i8, %union.anon.1002 }
%union.anon.1002 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1003, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1004" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1004" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.326 }
%class.scoped_refptr.326 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.327", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.327" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.328" }
%"struct.std::__1::atomic.328" = type { %"struct.std::__1::__atomic_base.329" }
%"struct.std::__1::__atomic_base.329" = type { %"struct.std::__1::__atomic_base.330" }
%"struct.std::__1::__atomic_base.330" = type { %"struct.std::__1::__cxx_atomic_impl.331" }
%"struct.std::__1::__cxx_atomic_impl.331" = type { %"struct.std::__1::__cxx_atomic_base_impl.332" }
%"struct.std::__1::__cxx_atomic_base_impl.332" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1009 }
%class.scoped_refptr.1009 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1071", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1003, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1071" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1010 }
%class.scoped_refptr.1010 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1011" = type { %"class.std::__1::__compressed_pair.1012" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1014", %class.scoped_refptr.1015 }
%"class.base::RepeatingCallback.1014" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1015 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1016", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1016" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1020", %"class.std::__1::unique_ptr.1026", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1032" }
%"class.std::__1::unique_ptr.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1026" = type { %"class.std::__1::__compressed_pair.1027" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1032" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1033" = type { %"class.std::__1::__tree.1034" }
%"class.std::__1::__tree.1034" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1035", %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"class.std::__1::map.1044" = type { %"class.std::__1::__tree.1045" }
%"class.std::__1::__tree.1045" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1046", %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"class.base::OnceCallback.1053" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1003 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.325" }>
%"class.base::RefCountedThreadSafe.325" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1054" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.556", %"class.blink::Member.558", %"class.blink::Member.560", %class.scoped_refptr.324, %class.scoped_refptr.324, %"class.blink::Member.562", %"class.blink::Member.564", %"class.blink::Member.570", %"class.blink::Member.574", %"class.blink::Member.622", %"class.blink::HeapHashMap.624", %"class.blink::HeapHashSet.631", %"class.blink::HeapHashSet.631", %"class.blink::HeapHashMap.810", %"class.blink::HeapVector.817", %"class.blink::Member.825", %"class.blink::HeapTaskRunnerTimer.827", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.829", %"class.WTF::Vector.836", %"class.blink::HeapHashSet.842", %"class.blink::HeapHashSet.842", %"class.std::__1::unique_ptr.848", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.860", i8, i8, %"class.base::WeakPtrFactory.862" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.324 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.562" = type { %"class.blink::MemberBase.563" }
%"class.blink::MemberBase.563" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.568" }
%"class.blink::Member.568" = type { %"class.blink::MemberBase.569" }
%"class.blink::MemberBase.569" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.578", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.580", %"class.WTF::HashSet.585", i8, [3 x i8], i32, %"class.blink::HeapHashMap.589", %"class.std::__1::map", %"class.std::__1::map.604", %"class.std::__1::unique_ptr.613", %"class.blink::Member.564", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.620", %"class.mojo::InlinedStructPtr", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.580" = type { %"class.WTF::HashTable.581" }
%"class.WTF::HashTable.581" = type <{ %"struct.WTF::KeyValuePair.584"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.584" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.585" = type { %"class.WTF::HashTable.586" }
%"class.WTF::HashTable.586" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.589" = type { %"class.WTF::HashMap.592" }
%"class.WTF::HashMap.592" = type { %"class.WTF::HashTable.593" }
%"class.WTF::HashTable.593" = type <{ %"struct.WTF::KeyValuePair.595"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.595" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.596", %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"class.std::__1::map.604" = type { %"class.std::__1::__tree.605" }
%"class.std::__1::__tree.605" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.606", %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.624" = type { %"class.WTF::HashMap.627" }
%"class.WTF::HashMap.627" = type { %"class.WTF::HashTable.628" }
%"class.WTF::HashTable.628" = type <{ %"struct.WTF::KeyValuePair.630"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.630" = type opaque
%"class.blink::HeapHashSet.631" = type { %"class.WTF::HashSet.634" }
%"class.WTF::HashSet.634" = type { %"class.WTF::HashTable.635" }
%"class.WTF::HashTable.635" = type <{ %"class.blink::WeakMember.637"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.667", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.769", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.785", %"class.blink::ResourceResponse", %class.scoped_refptr.787, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.641", i8, %"class.absl::optional.652", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.641" = type { %"class.absl::optional_internal::optional_data.642" }
%"class.absl::optional_internal::optional_data.642" = type { %"class.absl::optional_internal::optional_data_base.643" }
%"class.absl::optional_internal::optional_data_base.643" = type { %"class.absl::optional_internal::optional_data_dtor_base.644" }
%"class.absl::optional_internal::optional_data_dtor_base.644" = type { i8, [7 x i8], %union.anon.645 }
%union.anon.645 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.652" = type { %"class.absl::optional_internal::optional_data.653" }
%"class.absl::optional_internal::optional_data.653" = type { %"class.absl::optional_internal::optional_data_base.654" }
%"class.absl::optional_internal::optional_data_base.654" = type { %"class.absl::optional_internal::optional_data_dtor_base.655" }
%"class.absl::optional_internal::optional_data_dtor_base.655" = type { i8, %union.anon.656 }
%union.anon.656 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.657", %"class.WTF::Vector.662" }
%"class.WTF::Vector.657" = type { %"class.WTF::VectorBuffer.658" }
%"class.WTF::VectorBuffer.658" = type { %"class.WTF::VectorBufferBase.659" }
%"class.WTF::VectorBufferBase.659" = type { i32*, i32, i32 }
%"class.WTF::Vector.667" = type { %"class.WTF::VectorBuffer.668" }
%"class.WTF::VectorBuffer.668" = type { %"class.WTF::VectorBufferBase.669" }
%"class.WTF::VectorBufferBase.669" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.765" }
%"class.WTF::HashMap.765" = type { %"class.WTF::HashTable.766" }
%"class.WTF::HashTable.766" = type <{ %"struct.WTF::KeyValuePair.768"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.768" = type <{ %"class.blink::WeakMember.1127", i32, [4 x i8] }>
%"class.blink::WeakMember.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type opaque
%"class.blink::HeapHashSet.769" = type { %"class.WTF::HashSet.772" }
%"class.WTF::HashSet.772" = type { %"class.WTF::HashTable.773" }
%"class.WTF::HashTable.773" = type <{ %"class.blink::WeakMember.775"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.775" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.776", i8, i8, %class.scoped_refptr.128, %class.scoped_refptr.781, %class.scoped_refptr.783 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.729" }
%"class.base::time_internal::TimeBase.729" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.675, %class.scoped_refptr.675, %class.scoped_refptr.675, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.681, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.693", %"class.absl::optional.698", %"class.absl::optional.708", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.718", %"class.absl::optional.708", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.708", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.718", %"class.absl::optional.723", i8, %class.scoped_refptr.728 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.absl::optional.693" = type { %"class.absl::optional_internal::optional_data.694" }
%"class.absl::optional_internal::optional_data.694" = type { %"class.absl::optional_internal::optional_data_base.695" }
%"class.absl::optional_internal::optional_data_base.695" = type { %"class.absl::optional_internal::optional_data_dtor_base.696" }
%"class.absl::optional_internal::optional_data_dtor_base.696" = type { i8, %union.anon.697 }
%union.anon.697 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.698" = type { %"class.absl::optional_internal::optional_data.699" }
%"class.absl::optional_internal::optional_data.699" = type { %"class.absl::optional_internal::optional_data_base.700" }
%"class.absl::optional_internal::optional_data_base.700" = type { %"class.absl::optional_internal::optional_data_dtor_base.701" }
%"class.absl::optional_internal::optional_data_dtor_base.701" = type { i8, %union.anon.702 }
%union.anon.702 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.703", %"class.WTF::Vector.662", %"class.WTF::String" }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.713", %"class.absl::optional.713" }
%"class.absl::optional.708" = type { %"class.absl::optional_internal::optional_data.709" }
%"class.absl::optional_internal::optional_data.709" = type { %"class.absl::optional_internal::optional_data_base.710" }
%"class.absl::optional_internal::optional_data_base.710" = type { %"class.absl::optional_internal::optional_data_dtor_base.711" }
%"class.absl::optional_internal::optional_data_dtor_base.711" = type { i8, %union.anon.712 }
%"class.absl::optional.718" = type { %"class.absl::optional_internal::optional_data.719" }
%"class.absl::optional_internal::optional_data.719" = type { %"class.absl::optional_internal::optional_data_base.720" }
%"class.absl::optional_internal::optional_data_base.720" = type { %"class.absl::optional_internal::optional_data_dtor_base.721" }
%"class.absl::optional_internal::optional_data_dtor_base.721" = type { i8, %union.anon.722 }
%"class.absl::optional.723" = type { %"class.absl::optional_internal::optional_data.724" }
%"class.absl::optional_internal::optional_data.724" = type { %"class.absl::optional_internal::optional_data_base.725" }
%"class.absl::optional_internal::optional_data_base.725" = type { %"class.absl::optional_internal::optional_data_dtor_base.726" }
%"class.absl::optional_internal::optional_data_dtor_base.726" = type { i8, %union.anon.727 }
%union.anon.727 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.730", %class.scoped_refptr.744, %class.scoped_refptr.745, %"struct.blink::CacheControlHeader", %"class.absl::optional.713", %"class.absl::optional.746", %"class.absl::optional.746", %"class.absl::optional.746", i64, %"class.blink::KURL", %"class.WTF::Vector.751", %"class.WTF::String", %"class.WTF::Vector.662", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.718", %"class.WTF::Vector.662", %"class.blink::KURL", %"class.absl::optional.756" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.730" = type { %"class.absl::optional_internal::optional_data.731" }
%"class.absl::optional_internal::optional_data.731" = type { %"class.absl::optional_internal::optional_data_base.732" }
%"class.absl::optional_internal::optional_data_base.732" = type { %"class.absl::optional_internal::optional_data_dtor_base.733" }
%"class.absl::optional_internal::optional_data_dtor_base.733" = type { i8, %union.anon.734 }
%union.anon.734 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.662", %"class.WTF::String", i64, i64, %"class.WTF::Vector.735", %"class.WTF::Vector.739" }
%"class.WTF::Vector.735" = type { %"class.WTF::VectorBuffer.736" }
%"class.WTF::VectorBuffer.736" = type { %"class.WTF::VectorBufferBase.53" }
%"class.WTF::VectorBufferBase.53" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.740" }
%"class.WTF::VectorBuffer.740" = type { %"class.WTF::VectorBufferBase.741" }
%"class.WTF::VectorBufferBase.741" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.744 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.745 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.746" = type { %"class.absl::optional_internal::optional_data.747" }
%"class.absl::optional_internal::optional_data.747" = type { %"class.absl::optional_internal::optional_data_base.748" }
%"class.absl::optional_internal::optional_data_base.748" = type { %"class.absl::optional_internal::optional_data_dtor_base.749" }
%"class.absl::optional_internal::optional_data_dtor_base.749" = type { i8, %union.anon.750 }
%union.anon.750 = type { %"class.base::Time" }
%"class.WTF::Vector.751" = type { %"class.WTF::VectorBuffer.752" }
%"class.WTF::VectorBuffer.752" = type { %"class.WTF::VectorBufferBase.753" }
%"class.WTF::VectorBufferBase.753" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.756" = type { %"class.absl::optional_internal::optional_data.757" }
%"class.absl::optional_internal::optional_data.757" = type { %"class.absl::optional_internal::optional_data_base.758" }
%"class.absl::optional_internal::optional_data_base.758" = type { %"class.absl::optional_internal::optional_data_dtor_base.759" }
%"class.absl::optional_internal::optional_data_dtor_base.759" = type { i8, %union.anon.760 }
%union.anon.760 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.787 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.788", i64, %"class.WTF::Vector.790", %"class.WTF::Vector.795" }
%"class.WTF::RefCounted.788" = type { %"class.base::RefCounted.789" }
%"class.base::RefCounted.789" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.790" = type { %"class.WTF::VectorBuffer.791" }
%"class.WTF::VectorBuffer.791" = type { %"class.WTF::VectorBufferBase.792" }
%"class.WTF::VectorBufferBase.792" = type { i8*, i32, i32 }
%"class.WTF::Vector.795" = type { %"class.WTF::VectorBuffer.796" }
%"class.WTF::VectorBuffer.796" = type { %"class.WTF::VectorBufferBase.797" }
%"class.WTF::VectorBufferBase.797" = type { %"class.std::__1::unique_ptr.798"*, i32, i32 }
%"class.std::__1::unique_ptr.798" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.801" }
%"class.std::__1::__tree.801" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.802", %"class.std::__1::__compressed_pair.806" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"class.blink::HeapHashMap.810" = type { %"class.WTF::HashMap.813" }
%"class.WTF::HashMap.813" = type { %"class.WTF::HashTable.814" }
%"class.WTF::HashTable.814" = type <{ %"struct.WTF::KeyValuePair.816"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.816" = type opaque
%"class.blink::HeapVector.817" = type { %"class.WTF::Vector.820" }
%"class.WTF::Vector.820" = type { %"class.WTF::VectorBuffer.821" }
%"class.WTF::VectorBuffer.821" = type { %"class.WTF::VectorBufferBase.822" }
%"class.WTF::VectorBufferBase.822" = type { %"class.blink::Member.823"*, i32, i32 }
%"class.blink::Member.823" = type { %"class.blink::MemberBase.638" }
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.827" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.828", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.324, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.828" = type { %"class.blink::MemberBase.106" }
%"class.blink::HeapHashMap.829" = type { %"class.WTF::HashMap.832" }
%"class.WTF::HashMap.832" = type { %"class.WTF::HashTable.833" }
%"class.WTF::HashTable.833" = type <{ %"struct.WTF::KeyValuePair.835"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.835" = type opaque
%"class.WTF::Vector.836" = type { %"class.WTF::VectorBuffer.837" }
%"class.WTF::VectorBuffer.837" = type { %"class.WTF::VectorBufferBase.838" }
%"class.WTF::VectorBufferBase.838" = type { %class.scoped_refptr.839*, i32, i32 }
%class.scoped_refptr.839 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.842" = type { %"class.WTF::HashSet.845" }
%"class.WTF::HashSet.845" = type { %"class.WTF::HashTable.846" }
%"class.WTF::HashTable.846" = type <{ %"class.blink::Member.785"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.848" = type { %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"class.WTF::HashSet.851"* }
%"class.WTF::HashSet.851" = type { %"class.WTF::HashTable.852" }
%"class.WTF::HashTable.852" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.616 }
%class.scoped_refptr.616 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.858" }
%"class.blink::Member.858" = type { %"class.blink::MemberBase.859" }
%"class.blink::MemberBase.859" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.860" = type { %"class.blink::MemberBase.861" }
%"class.blink::MemberBase.861" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.862" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.107" = type { %"class.blink::MemberBase.108" }
%"class.blink::MemberBase.108" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.109" = type { %"class.blink::MemberBase.110" }
%"class.blink::MemberBase.110" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.120" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.122" = type { %"class.blink::MemberBase.123" }
%"class.blink::MemberBase.123" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.124 }
%class.scoped_refptr.124 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.125" = type { %"class.WTF::VectorBuffer.126" }
%"class.WTF::VectorBuffer.126" = type { %"class.WTF::VectorBufferBase.127" }
%"class.WTF::VectorBufferBase.127" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.128 }
%"class.blink::Member.334" = type { %"class.blink::MemberBase.335" }
%"class.blink::MemberBase.335" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.336" }
%"class.blink::HeapHashMap.336" = type { %"class.WTF::HashMap.339" }
%"class.WTF::HashMap.339" = type { %"class.WTF::HashTable.340" }
%"class.WTF::HashTable.340" = type <{ %"struct.WTF::KeyValuePair.342"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.342" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.347" }
%"class.WTF::HashTable.347" = type <{ %"class.blink::WeakMember.349"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.349" = type opaque
%"class.blink::HeapHashSet.350" = type { %"class.WTF::HashSet.353" }
%"class.WTF::HashSet.353" = type { %"class.WTF::HashTable.354" }
%"class.WTF::HashTable.354" = type <{ %"class.blink::WeakMember.356"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.356" = type opaque
%"class.blink::Member.357" = type { %"class.blink::MemberBase.358" }
%"class.blink::MemberBase.358" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.359" = type { %"class.blink::MemberBase.360" }
%"class.blink::MemberBase.360" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.361" = type { %"class.blink::MemberBase.362" }
%"class.blink::MemberBase.362" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.363" = type { %"class.blink::MemberBase.364" }
%"class.blink::MemberBase.364" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.365" = type { %"class.blink::MemberBase.366" }
%"class.blink::MemberBase.366" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.367" = type { %"class.WTF::HashMap.370" }
%"class.WTF::HashMap.370" = type { %"class.WTF::HashTable.371" }
%"class.WTF::HashTable.371" = type <{ %"struct.WTF::KeyValuePair.373"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.373" = type opaque
%"class.WTF::Vector.374" = type { %"class.WTF::VectorBuffer.375" }
%"class.WTF::VectorBuffer.375" = type { %"class.WTF::VectorBufferBase.376" }
%"class.WTF::VectorBufferBase.376" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.40" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.39 }
%class.scoped_refptr.39 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.40" = type { %"class.blink::MemberBase.41" }
%"class.blink::MemberBase.41" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.44", %"class.blink::Member.46", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.44" = type { %"class.WTF::SingleThreadedBitField.45" }
%"class.WTF::SingleThreadedBitField.45" = type { i32 }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.48 }
%class.scoped_refptr.48 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.49", %"class.WTF::AtomicString", %"class.WTF::Vector.51" }
%"class.WTF::RefCounted.49" = type { %"class.base::RefCounted.50" }
%"class.base::RefCounted.50" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.51" = type { %"class.WTF::VectorBuffer.52" }
%"class.WTF::VectorBuffer.52" = type { %"class.WTF::VectorBufferBase.53", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.385" = type { %"class.WTF::Vector.388" }
%"class.WTF::Vector.388" = type { %"class.WTF::VectorBuffer.389" }
%"class.WTF::VectorBuffer.389" = type { %"class.WTF::VectorBufferBase.390" }
%"class.WTF::VectorBufferBase.390" = type { %"class.blink::Member.391"*, i32, i32 }
%"class.blink::Member.391" = type opaque
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.399" = type { %"class.WTF::HashSet.402" }
%"class.WTF::HashSet.402" = type { %"class.WTF::HashTable.403" }
%"class.WTF::HashTable.403" = type <{ %"class.blink::WeakMember.405"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.405" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.406", i32, [4 x i8] }>
%"class.WTF::Vector.406" = type { %"class.WTF::VectorBuffer.407" }
%"class.WTF::VectorBuffer.407" = type { %"class.WTF::VectorBufferBase.408" }
%"class.WTF::VectorBufferBase.408" = type { %"struct.std::__1::pair.409"*, i32, i32 }
%"struct.std::__1::pair.409" = type opaque
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.414" = type { %"class.WTF::VectorBuffer.415" }
%"class.WTF::VectorBuffer.415" = type { %"class.WTF::VectorBufferBase.416" }
%"class.WTF::VectorBufferBase.416" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.56" = type { %"class.WTF::Vector.59" }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { %"class.blink::Member.37"*, i32, i32 }
%"class.blink::HeapVector.425" = type { %"class.WTF::Vector.428" }
%"class.WTF::Vector.428" = type { %"class.WTF::VectorBuffer.429" }
%"class.WTF::VectorBuffer.429" = type { %"class.WTF::VectorBufferBase.430" }
%"class.WTF::VectorBufferBase.430" = type { %"class.blink::Member.431"*, i32, i32 }
%"class.blink::Member.431" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.23" }
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.443" = type { %"class.WTF::HashTable.444" }
%"class.WTF::HashTable.444" = type <{ %"struct.WTF::KeyValuePair.447"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.447" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.333", { i64, i64 } }
%"class.blink::WeakMember.333" = type { %"class.blink::MemberBase.24" }
%"class.blink::HeapHashSet.456" = type { %"class.WTF::HashSet.459" }
%"class.WTF::HashSet.459" = type { %"class.WTF::HashTable.460" }
%"class.WTF::HashTable.460" = type <{ %"class.blink::Member.462"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.462" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.493" = type { %"class.WTF::VectorBuffer.494" }
%"class.WTF::VectorBuffer.494" = type { %"class.WTF::VectorBufferBase.495" }
%"class.WTF::VectorBufferBase.495" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.498" = type { %"class.WTF::HashMap.501" }
%"class.WTF::HashMap.501" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ %"struct.WTF::KeyValuePair.504"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.504" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.507" = type { %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.517" = type { %"class.WTF::HashMap.520" }
%"class.WTF::HashMap.520" = type { %"class.WTF::HashTable.521" }
%"class.WTF::HashTable.521" = type <{ %"struct.WTF::KeyValuePair.523"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.523" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.524" }
%"class.blink::HeapHashSet.524" = type { %"class.WTF::HashSet.527" }
%"class.WTF::HashSet.527" = type { %"class.WTF::HashTable.528" }
%"class.WTF::HashTable.528" = type <{ %"class.blink::WeakMember.530"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.530" = type opaque
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.23", %"class.blink::HeapHashSet.540", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.547", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.540" = type { %"class.WTF::HashSet.543" }
%"class.WTF::HashSet.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"class.blink::Member.546"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.546" = type opaque
%"class.blink::HeapTaskRunnerTimer.547" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.548", { i64, i64 } }
%"class.blink::WeakMember.548" = type { %"class.blink::MemberBase.534" }
%"class.blink::WeakMember.535" = type { %"class.blink::MemberBase.14" }
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::FetchParameters" = type <{ %"class.blink::ResourceRequest", %"class.blink::TextResourceDecoderOptions", %"struct.blink::ResourceLoaderOptions", i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.blink::CSSImageValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", %"struct.blink::Referrer", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.2", i32, i8, [3 x i8] }>
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.1079", float, i8, %class.scoped_refptr.1081, %"class.WTF::HashCountedSet.1091", %"class.WTF::HashCountedSet.1091" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type opaque
%class.scoped_refptr.1081 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.787, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.1085" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1082" }
%"class.base::RefCountedThreadSafe.1082" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.1083" }
%"class.blink::PersistentBase.1083" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr.1084" }
%"class.blink::PersistentNodePtr.1084" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.1085" = type { %"class.std::__1::__compressed_pair.1086" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet.1091" = type { %"class.WTF::HashMap.1092" }
%"class.WTF::HashMap.1092" = type { %"class.WTF::HashTable.1093" }
%"class.WTF::HashTable.1093" = type <{ %"struct.WTF::KeyValuePair.1096"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1096" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::StyleFetchedImageSet" = type { %"class.blink::StyleImage.base", %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1074", %"class.blink::Member.1075", float, %"class.blink::Member.1097", %"class.blink::KURL" }
%"class.blink::StyleImage.base" = type <{ i32 (...)**, i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.1074" = type { i8 }
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::Member.1097" = type { %"class.blink::MemberBase.1098" }
%"class.blink::MemberBase.1098" = type { %"class.blink::CSSImageSetValue"* }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1099, i32, i8, i8, [2 x i8] }>
%union.anon.1099 = type { %"class.WTF::Vector.1100" }
%"class.WTF::Vector.1100" = type { %"class.WTF::VectorBuffer.1101" }
%"class.WTF::VectorBuffer.1101" = type { %"class.WTF::VectorBufferBase.1102", [16 x i8] }
%"class.WTF::VectorBufferBase.1102" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::Vector.1105" = type { %"class.WTF::VectorBuffer.1106" }
%"class.WTF::VectorBuffer.1106" = type { %"class.WTF::VectorBufferBase.1107", [16 x i8] }
%"class.WTF::VectorBufferBase.1107" = type { i16*, i32, i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink16CSSImageSetValue20CompareByScaleFactorENS0_14ImageWithScaleES1_ = comdat any

$_ZN3WTF6VectorIN5blink16CSSImageSetValue14ImageWithScaleELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK5blink13CSSImageValue24ValueWithURLMadeAbsoluteEv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_13CSSImageValueEEEPvm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink16CSSImageSetValue14ImageWithScaleELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16CSSImageSetValue14ImageWithScaleEEEmm = comdat any

$_ZNSt3__16__sortIRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEvT0_S8_T_ = comdat any

$_ZNSt3__17__sort3IRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEjT0_S8_S8_T_ = comdat any

$_ZNSt3__17__sort5IRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEjT0_S8_S8_S8_S8_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEbT0_S8_T_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10StyleImageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_10StyleImageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_10StyleImageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_10StyleImageEE7GetNameEPKv = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_16CSSImageSetValueEEEPvm = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10StyleImageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10StyleImageEE5IndexEvE13gc_info_index = comdat any

@__const._ZN5blink16CSSImageSetValue10CacheImageERKNS_8DocumentEfNS_15FetchParameters20ImageRequestBehaviorENS_25CrossOriginAttributeValueE.params = private unnamed_addr constant <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.674 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.675, %class.scoped_refptr.675, %class.scoped_refptr.675, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.681, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.703", %"class.WTF::Vector.662", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.712 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.717 } } } }, { { { { i8, [7 x i8], %union.anon.717 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.722 } } } }, { { { { i8, [7 x i8], %union.anon.712 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.712 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.722 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.728 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.776", i8, i8, [6 x i8], %class.scoped_refptr.128, %class.scoped_refptr.781, %class.scoped_refptr.783 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }> <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.674 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.675, %class.scoped_refptr.675, %class.scoped_refptr.675, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.681, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.703", %"class.WTF::Vector.662", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.712 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.717 } } } }, { { { { i8, [7 x i8], %union.anon.717 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.722 } } } }, { { { { i8, [7 x i8], %union.anon.712 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.712 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.722 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.728 }, %"class.blink::ResourceRequestBody" } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.674 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.675, %class.scoped_refptr.675, %class.scoped_refptr.675, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.681, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.703", %"class.WTF::Vector.662", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.712 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.717 } } } }, { { { { i8, [7 x i8], %union.anon.717 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.722 } } } }, { { { { i8, [7 x i8], %union.anon.712 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.712 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.722 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.728 } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.674 } } } } } }, i8, [7 x i8] }> <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.674 } } } } } } { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.674 } } } } } { %"class.url::SchemeHostPort" <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.646" { %"struct.std::__1::__compressed_pair_elem.647" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.648 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.646" { %"struct.std::__1::__compressed_pair_elem.647" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.648 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon.674 } } } } { { { { i8, [7 x i8], %union.anon.674 } } } { { { i8, [7 x i8], %union.anon.674 } } { { i8, [7 x i8], %union.anon.674 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.674 { %"class.url::Origin::Nonce" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %class.scoped_refptr.675 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.675 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.675 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.blink::HTTPHeaderMap" { %"class.WTF::HashMap.676" { %"class.WTF::HashTable.677" <{ %"struct.WTF::KeyValuePair.680"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.680"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, i16 -21846, [2 x i8] c"\AA\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, %class.scoped_refptr.681 { %"class.blink::WebURLRequestExtraData"* inttoptr (i64 -6148914691236517206 to %"class.blink::WebURLRequestExtraData"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.703", %"class.WTF::Vector.662", %"class.WTF::String" } } } } } } { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.703", %"class.WTF::Vector.662", %"class.WTF::String" } } } } } { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.703", %"class.WTF::Vector.662", %"class.WTF::String" } } } } { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.703", %"class.WTF::Vector.662", %"class.WTF::String" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.703", %"class.WTF::Vector.662", %"class.WTF::String" } } { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.703", %"class.WTF::Vector.662", %"class.WTF::String" } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.WTF::Vector.703" { %"class.WTF::VectorBuffer.704" { %"class.WTF::VectorBufferBase.705" { %class.scoped_refptr.675* inttoptr (i64 -6148914691236517206 to %class.scoped_refptr.675*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.662" { %"class.WTF::VectorBuffer.663" { %"class.WTF::VectorBufferBase.664" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } } }, { { { { i8, [7 x i8], %union.anon.712 } } } } { { { { i8, [7 x i8], %union.anon.712 } } } { { { i8, [7 x i8], %union.anon.712 } } { { i8, [7 x i8], %union.anon.712 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.712 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.717 } } } }, { { { { i8, [7 x i8], %union.anon.717 } } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.717 } } } } { { { { i8, [7 x i8], %union.anon.717 } } } { { { i8, [7 x i8], %union.anon.717 } } { { i8, [7 x i8], %union.anon.717 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.717 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } }, { { { { i8, [7 x i8], %union.anon.717 } } } } { { { { i8, [7 x i8], %union.anon.717 } } } { { { i8, [7 x i8], %union.anon.717 } } { { i8, [7 x i8], %union.anon.717 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.717 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } } }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.722 } } } } { { { { i8, [7 x i8], %union.anon.722 } } } { { { i8, [7 x i8], %union.anon.722 } } { { i8, [7 x i8], %union.anon.722 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.722 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], %union.anon.712 } } } } { { { { i8, [7 x i8], %union.anon.712 } } } { { { i8, [7 x i8], %union.anon.712 } } { { i8, [7 x i8], %union.anon.712 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.712 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { { { { i8, [7 x i8], %union.anon.712 } } } } { { { { i8, [7 x i8], %union.anon.712 } } } { { { i8, [7 x i8], %union.anon.712 } } { { i8, [7 x i8], %union.anon.712 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.712 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, i64 -6148914691236517206, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [2 x i8] c"\AA\AA", { { { { i8, [7 x i8], %union.anon.722 } } } } { { { { i8, [7 x i8], %union.anon.722 } } } { { { i8, [7 x i8], %union.anon.722 } } { { i8, [7 x i8], %union.anon.722 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.722 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, %"class.mojo::PendingRemote" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.728 { %"class.base::RefCountedData"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData"*) } }, %"class.blink::ResourceRequestBody" { %class.scoped_refptr.1072 { %"class.blink::EncodedFormData"* inttoptr (i64 -6148914691236517206 to %"class.blink::EncodedFormData"*) }, %"class.mojo::PendingRemote.1073" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }> <{ i32 -1431655766, i32 -1431655766, %"class.WTF::TextEncoding" { i8* inttoptr (i64 -6148914691236517206 to i8*) }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, [3 x i8] c"\AA\AA\AA", [5 x i8] c"\AA\AA\AA\AA\AA" }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.776", i8, i8, [6 x i8], %class.scoped_refptr.128, %class.scoped_refptr.781, %class.scoped_refptr.783 } { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" } { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.WTF::TextPosition" { %"class.WTF::OrdinalNumber" { i32 -1431655766 }, %"class.WTF::OrdinalNumber" { i32 -1431655766 } }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, %"class.base::StrongAlias" { i8 -86 }, [5 x i8] c"\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::HashSet.776" { %"class.WTF::HashTable.777" <{ %"struct.std::__1::pair.780"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.780"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.128 { %"class.blink::DOMWrapperWorld"* inttoptr (i64 -6148914691236517206 to %"class.blink::DOMWrapperWorld"*) }, %class.scoped_refptr.781 { %"class.base::RefCountedData.782"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.782"*) }, %class.scoped_refptr.783 { %"class.base::RefCountedData.784"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.784"*) } }, i32 -1431655766, i32 -1431655766, %"struct.blink::FetchParameters::ResourceWidth" <{ float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::ClientHintsPreferences" { %"struct.blink::WebEnabledClientHints" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, align 8
@.str = private unnamed_addr constant [19 x i8] c"-webkit-image-set(\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.4 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.8 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.13 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<const blink::CSSValue>, WTF::VectorTraits<blink::Member<const blink::CSSValue> > >]\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"blink::CSSValue\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSImageSetValue14ImageWithScaleEEEPKcv = private unnamed_addr constant [87 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSImageSetValue::ImageWithScale]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10StyleImageEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::StyleImage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_10StyleImageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10StyleImageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_10StyleImageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10StyleImageEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10StyleImageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink16CSSImageSetValueC1Ev = hidden unnamed_addr alias void (%"class.blink::CSSImageSetValue"*), void (%"class.blink::CSSImageSetValue"*)* @_ZN5blink16CSSImageSetValueC2Ev
@_ZN5blink16CSSImageSetValueD1Ev = hidden unnamed_addr alias void (%"class.blink::CSSImageSetValue"*), void (%"class.blink::CSSImageSetValue"*)* @_ZN5blink16CSSImageSetValueD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16CSSImageSetValueC2Ev(%"class.blink::CSSImageSetValue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 0
  tail call void @_ZN5blink12CSSValueListC2ENS_8CSSValue9ClassTypeENS1_18ValueListSeparatorE(%"class.blink::CSSValueList"* %2, i32 54, i32 1) #9
  %3 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::StyleImage"* null, %"class.blink::StyleImage"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 2
  store float 1.000000e+00, float* %4, align 8
  %5 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 3
  %6 = bitcast %"class.WTF::Vector.6"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #9
  ret void
}

declare void @_ZN5blink12CSSValueListC2ENS_8CSSValue9ClassTypeENS1_18ValueListSeparatorE(%"class.blink::CSSValueList"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16CSSImageSetValueD2Ev(%"class.blink::CSSImageSetValue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::CSSImageSetValue::ImageWithScale"*, %"struct.blink::CSSImageSetValue::ImageWithScale"** %2, align 8
  %4 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %3, null
  %5 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %3 to i8*
  br i1 %4, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #9
  store %"struct.blink::CSSImageSetValue::ImageWithScale"* null, %"struct.blink::CSSImageSetValue::ImageWithScale"** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Member"*, %"class.blink::Member"** %17, align 8
  br i1 %16, label %26, label %19, !prof !3

19:                                               ; preds = %12
  %20 = icmp ne %"class.blink::Member"* %18, null
  %21 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %22 = bitcast i8* %21 to %"class.blink::Member"*
  %23 = icmp ne %"class.blink::Member"* %18, %22
  %24 = and i1 %20, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %19
  store i32 0, i32* %14, align 4
  br label %26

26:                                               ; preds = %12, %25, %19
  %27 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %28 = bitcast i8* %27 to %"class.blink::Member"*
  %29 = icmp eq %"class.blink::Member"* %18, %28
  br i1 %29, label %32, label %30, !prof !2

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %13, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer"* %31, %"class.blink::Member"* %18) #9
  br label %32

32:                                               ; preds = %26, %30
  store %"class.blink::Member"* null, %"class.blink::Member"** %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16CSSImageSetValue12FillImageSetEv(%"class.blink::CSSImageSetValue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i1 (i64, i64)*, align 8
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"struct.blink::CSSImageSetValue::ImageWithScale"*
  %5 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %46, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 3
  %11 = bitcast i64* %3 to i8*
  %12 = bitcast i64* %3 to i32*
  %13 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %4, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %10, i64 0, i32 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %8, %43
  %18 = phi i32 [ 0, %8 ], [ %44, %43 ]
  %19 = or i32 %18, 1
  %20 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %9, i32 %19) #9
  %21 = bitcast %"class.blink::Member"* %20 to %"class.blink::CSSPrimitiveValue"**
  %22 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  store i32 %18, i32* %12, align 8
  %23 = call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %22) #9
  %24 = fcmp ult double %23, 0x47EFFFFFE0000000
  br i1 %24, label %25, label %29

25:                                               ; preds = %17
  %26 = fcmp ole double %23, 0xC7EFFFFFE0000000
  %27 = select i1 %26, double 0xC7EFFFFFE0000000, double %23
  %28 = fptrunc double %27 to float
  br label %29

29:                                               ; preds = %17, %25
  %30 = phi float [ %28, %25 ], [ 0x47EFFFFFE0000000, %17 ]
  store float %30, float* %13, align 4
  %31 = load i32, i32* %14, align 4
  %32 = load i32, i32* %15, align 8
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %42, label %34, !prof !3

34:                                               ; preds = %29
  %35 = load %"struct.blink::CSSImageSetValue::ImageWithScale"*, %"struct.blink::CSSImageSetValue::ImageWithScale"** %16, align 8
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %35, i64 %36
  %38 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %37 to i64*
  %39 = load i64, i64* %3, align 8
  store i64 %39, i64* %38, align 4
  %40 = load i32, i32* %14, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* %14, align 4
  br label %43

42:                                               ; preds = %29
  call void @_ZN3WTF6VectorIN5blink16CSSImageSetValue14ImageWithScaleELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.6"* %10, %"struct.blink::CSSImageSetValue::ImageWithScale"* nonnull dereferenceable(8) %4) #9
  br label %43

43:                                               ; preds = %34, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  %44 = add i32 %18, 2
  %45 = icmp ult i32 %44, %6
  br i1 %45, label %17, label %46

46:                                               ; preds = %43, %1
  %47 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::CSSImageSetValue::ImageWithScale"*, %"struct.blink::CSSImageSetValue::ImageWithScale"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %48, i64 %51
  %53 = bitcast i1 (i64, i64)** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53)
  store i1 (i64, i64)* @_ZN5blink16CSSImageSetValue20CompareByScaleFactorENS0_14ImageWithScaleES1_, i1 (i64, i64)** %2, align 8
  call void @_ZNSt3__16__sortIRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEvT0_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %48, %"struct.blink::CSSImageSetValue::ImageWithScale"* %52, i1 (i64, i64)** nonnull dereferenceable(8) %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16CSSImageSetValue20CompareByScaleFactorENS0_14ImageWithScaleES1_(i64, i64) #3 comdat align 2 {
  %3 = lshr i64 %0, 32
  %4 = trunc i64 %3 to i32
  %5 = bitcast i32 %4 to float
  %6 = lshr i64 %1, 32
  %7 = trunc i64 %6 to i32
  %8 = bitcast i32 %7 to float
  %9 = fcmp olt float %5, %8
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink16CSSImageSetValue23BestImageForScaleFactorEf(%"class.blink::CSSImageSetValue"*, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %13, %7 ], [ 0, %2 ]
  %9 = tail call dereferenceable(8) %"struct.blink::CSSImageSetValue::ImageWithScale"* @_ZN3WTF6VectorIN5blink16CSSImageSetValue14ImageWithScaleELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %3, i32 %8)
  %10 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %9, i64 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = fcmp ult float %11, %1
  %13 = add nuw i32 %8, 1
  %14 = icmp ult i32 %13, %5
  %15 = and i1 %12, %14
  br i1 %15, label %7, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = bitcast float %11 to i32
  %20 = zext i32 %19 to i64
  %21 = shl nuw i64 %20, 32
  %22 = zext i32 %18 to i64
  br label %23

23:                                               ; preds = %16, %2
  %24 = phi i64 [ 2863311530, %2 ], [ %22, %16 ]
  %25 = phi i64 [ -4294967296, %2 ], [ %21, %16 ]
  %26 = or i64 %25, %24
  ret i64 %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"struct.blink::CSSImageSetValue::ImageWithScale"* @_ZN3WTF6VectorIN5blink16CSSImageSetValue14ImageWithScaleELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::CSSImageSetValue::ImageWithScale"*, %"struct.blink::CSSImageSetValue::ImageWithScale"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %24, i64 %25
  ret %"struct.blink::CSSImageSetValue::ImageWithScale"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16CSSImageSetValue14IsCachePendingEf(%"class.blink::CSSImageSetValue"* nocapture readonly, float) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %3, align 8
  %5 = icmp eq %"class.blink::StyleImage"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 2
  %8 = load float, float* %7, align 8
  %9 = fcmp une float %8, %1
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i1 [ true, %2 ], [ %9, %6 ]
  ret i1 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::StyleImage"* @_ZNK5blink16CSSImageSetValue11CachedImageEf(%"class.blink::CSSImageSetValue"* nocapture readonly, float) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %3, align 8
  ret %"class.blink::StyleImage"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleImage"* @_ZN5blink16CSSImageSetValue10CacheImageERKNS_8DocumentEfNS_15FetchParameters20ImageRequestBehaviorENS_25CrossOriginAttributeValueE(%"class.blink::CSSImageSetValue"*, %"class.blink::Document"* dereferenceable(2848), float, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::FetchParameters", align 8
  %7 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %5
  tail call void @_ZN5blink16CSSImageSetValue12FillImageSetEv(%"class.blink::CSSImageSetValue"* %0)
  br label %12

12:                                               ; preds = %5, %11
  %13 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %13, align 8
  %15 = icmp eq %"class.blink::StyleImage"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 2
  %18 = load float, float* %17, align 8
  %19 = fcmp une float %18, %2
  br i1 %19, label %20, label %64

20:                                               ; preds = %12, %16
  %21 = load i32, i32* %8, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %35, label %23

23:                                               ; preds = %20, %23
  %24 = phi i32 [ %29, %23 ], [ 0, %20 ]
  %25 = tail call dereferenceable(8) %"struct.blink::CSSImageSetValue::ImageWithScale"* @_ZN3WTF6VectorIN5blink16CSSImageSetValue14ImageWithScaleELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %7, i32 %24) #9
  %26 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %25, i64 0, i32 1
  %27 = load float, float* %26, align 4
  %28 = fcmp ult float %27, %2
  %29 = add nuw i32 %24, 1
  %30 = icmp ult i32 %29, %21
  %31 = and i1 %30, %28
  br i1 %31, label %23, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %25, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br label %35

35:                                               ; preds = %20, %32
  %36 = phi i32 [ -1431655766, %20 ], [ %34, %32 ]
  %37 = phi float [ 0xFFFFFFFFE0000000, %20 ], [ %27, %32 ]
  %38 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 0, i32 1, i32 0
  %39 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %38, i32 %36) #9
  %40 = bitcast %"class.blink::Member"* %39 to %"class.blink::CSSImageValue"**
  %41 = load %"class.blink::CSSImageValue"*, %"class.blink::CSSImageValue"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %42) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* align 8 getelementptr inbounds (<{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.674 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.675, %class.scoped_refptr.675, %class.scoped_refptr.675, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.681, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.703", %"class.WTF::Vector.662", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.712 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.717 } } } }, { { { { i8, [7 x i8], %union.anon.717 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.722 } } } }, { { { { i8, [7 x i8], %union.anon.712 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.712 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.722 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.728 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.776", i8, i8, [6 x i8], %class.scoped_refptr.128, %class.scoped_refptr.781, %class.scoped_refptr.783 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>, <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.674 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.675, %class.scoped_refptr.675, %class.scoped_refptr.675, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.681, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.703", %"class.WTF::Vector.662", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.712 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.717 } } } }, { { { { i8, [7 x i8], %union.anon.717 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.722 } } } }, { { { { i8, [7 x i8], %union.anon.712 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.712 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.722 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.728 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.776", i8, i8, [6 x i8], %class.scoped_refptr.128, %class.scoped_refptr.781, %class.scoped_refptr.783 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>* @__const._ZN5blink16CSSImageSetValue10CacheImageERKNS_8DocumentEfNS_15FetchParameters20ImageRequestBehaviorENS_25CrossOriginAttributeValueE.params, i64 0, i32 0, i32 0, i32 0, i32 0), i64 1344, i1 false)
  call void @_ZNK5blink13CSSImageValue12PrepareFetchERKNS_8DocumentENS_15FetchParameters20ImageRequestBehaviorENS_25CrossOriginAttributeValueE(%"class.blink::FetchParameters"* nonnull sret %6, %"class.blink::CSSImageValue"* %41, %"class.blink::Document"* dereferenceable(2848) %1, i32 0, i32 %4) #9
  %43 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 14, i32 0, i32 0
  %44 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %43, align 8
  %45 = call %"class.blink::ImageResourceContent"* @_ZN5blink20ImageResourceContent5FetchERNS_15FetchParametersEPNS_15ResourceFetcherE(%"class.blink::FetchParameters"* nonnull dereferenceable(1344) %6, %"class.blink::ResourceFetcher"* %44) #9
  %46 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %6, i64 0, i32 0, i32 0
  %47 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* nonnull %46) #9
  %48 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_10StyleImageEEEPhm(i64 168) #9
  %49 = bitcast i8* %48 to %"class.blink::StyleFetchedImageSet"*
  call void @_ZN5blink20StyleFetchedImageSetC1EPNS_20ImageResourceContentEfPNS_16CSSImageSetValueERKNS_4KURLE(%"class.blink::StyleFetchedImageSet"* %49, %"class.blink::ImageResourceContent"* %45, float %37, %"class.blink::CSSImageSetValue"* %0, %"class.blink::KURL"* dereferenceable(112) %47) #9
  %50 = getelementptr inbounds i8, i8* %48, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  %54 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 1
  %55 = ptrtoint i8* %48 to i64
  %56 = bitcast %"class.blink::Member.2"* %54 to i64*
  store atomic i64 %55, i64* %56 monotonic, align 8
  %57 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %35
  %60 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %61

61:                                               ; preds = %35, %59
  %62 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 2
  store float %2, float* %62, align 8
  call void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %42) #9
  %63 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %13, align 8
  br label %64

64:                                               ; preds = %61, %16
  %65 = phi %"class.blink::StyleImage"* [ %63, %61 ], [ %14, %16 ]
  ret %"class.blink::StyleImage"* %65
}

declare void @_ZNK5blink13CSSImageValue12PrepareFetchERKNS_8DocumentENS_15FetchParameters20ImageRequestBehaviorENS_25CrossOriginAttributeValueE(%"class.blink::FetchParameters"* sret, %"class.blink::CSSImageValue"*, %"class.blink::Document"* dereferenceable(2848), i32, i32) local_unnamed_addr #1

declare %"class.blink::ImageResourceContent"* @_ZN5blink20ImageResourceContent5FetchERNS_15FetchParametersEPNS_15ResourceFetcherE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16CSSImageSetValue13CustomCSSTextEv(%"class.blink::CSSImageSetValue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %10 = bitcast %union.anon.1099* %9 to i8*
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %12, align 4
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %13, align 1
  %14 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %16 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 18, i32* %18, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  %19 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %97, label %22

22:                                               ; preds = %1
  %23 = bitcast %"class.WTF::StringView"* %4 to i8*
  %24 = bitcast %"class.WTF::StringView"* %4 to i64*
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %27 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 0, i32 1, i32 0
  %28 = bitcast %"class.WTF::StringView"* %5 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %31 = bitcast i8** %30 to %"class.WTF::StringImpl"**
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %33 = bitcast %"class.WTF::StringView"* %5 to i64*
  %34 = bitcast %"class.WTF::StringView"* %6 to i8*
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %37 = bitcast i8** %36 to %"class.WTF::StringImpl"**
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %39 = bitcast %"class.WTF::StringView"* %6 to i64*
  br label %40

40:                                               ; preds = %22, %94
  %41 = phi i32 [ 0, %22 ], [ %95, %94 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #9
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %44, i64* %24, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %25, align 8
  store i32 2, i32* %26, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #9
  br label %45

45:                                               ; preds = %40, %43
  %46 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 %41) #9
  %47 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %47, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #9
  %49 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %48) #9
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %45
  store i8* null, i8** %30, align 8
  %52 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %52, i64* %33, align 8
  store i32 0, i32* %32, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  br label %69

53:                                               ; preds = %45
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %29, align 8
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 1
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %31, align 8
  store i32 %55, i32* %32, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %53
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %53
  %66 = phi i32 [ %64, %63 ], [ %62, %53 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #9
  br label %69

69:                                               ; preds = %51, %65, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #9
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 32) #9
  %70 = or i32 %41, 1
  %71 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 %70) #9
  %72 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %72, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #9
  %74 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %73) #9
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %76, label %78

76:                                               ; preds = %69
  store i8* null, i8** %36, align 8
  %77 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %77, i64* %39, align 8
  store i32 0, i32* %38, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  br label %94

78:                                               ; preds = %69
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %35, align 8
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 1
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %37, align 8
  store i32 %80, i32* %38, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %78
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %78
  %91 = phi i32 [ %89, %88 ], [ %87, %78 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %94

94:                                               ; preds = %76, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #9
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 120) #9
  %95 = add i32 %41, 2
  %96 = icmp ult i32 %95, %20
  br i1 %96, label %40, label %97

97:                                               ; preds = %94, %1
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 41) #9
  %98 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #9
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #9
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #9
  br label %114

114:                                              ; preds = %97, %110, %113
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #9
  ret %"class.WTF::StringImpl"* %98
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !4
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #9
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #9
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #9
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #9
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #9
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16CSSImageSetValue31HasFailedOrCanceledSubresourcesEv(%"class.blink::CSSImageSetValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %2, align 8
  %4 = icmp eq %"class.blink::StyleImage"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::StyleImage"* %3 to %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)***
  %7 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)**, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %7, i64 15
  %9 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %8, align 8
  %10 = tail call %"class.blink::ImageResourceContent"* %9(%"class.blink::StyleImage"* nonnull %3) #9
  %11 = icmp eq %"class.blink::ImageResourceContent"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %5
  %13 = tail call zeroext i1 @_ZNK5blink20ImageResourceContent20LoadFailedOrCanceledEv(%"class.blink::ImageResourceContent"* nonnull %10) #9
  br label %14

14:                                               ; preds = %1, %5, %12
  %15 = phi i1 [ %13, %12 ], [ true, %5 ], [ false, %1 ]
  ret i1 %15
}

declare zeroext i1 @_ZNK5blink20ImageResourceContent20LoadFailedOrCanceledEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16CSSImageSetValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSImageSetValue"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.2"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10StyleImageEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 0
  tail call void @_ZNK5blink12CSSValueList18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSValueList"* %14, %"class.blink::Visitor"* %1) #9
  ret void
}

declare void @_ZNK5blink12CSSValueList18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSValueList"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSImageSetValue"* @_ZN5blink16CSSImageSetValue25ValueWithURLsMadeAbsoluteEv(%"class.blink::CSSImageSetValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_16CSSImageSetValueEEEPvm(i64 88) #9
  %3 = bitcast i8* %2 to %"class.blink::CSSImageSetValue"*
  %4 = bitcast i8* %2 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC2ENS_8CSSValue9ClassTypeENS1_18ValueListSeparatorE(%"class.blink::CSSValueList"* %4, i32 54, i32 1) #9
  %5 = getelementptr inbounds i8, i8* %2, i64 56
  %6 = bitcast i8* %5 to %"class.blink::StyleImage"**
  store %"class.blink::StyleImage"* null, %"class.blink::StyleImage"** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 64
  %8 = bitcast i8* %7 to float*
  store float 1.000000e+00, float* %8, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #9
  %10 = getelementptr inbounds i8, i8* %2, i64 -4
  %11 = bitcast i8* %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member"*, %"class.blink::Member"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::CSSImageSetValue", %"class.blink::CSSImageSetValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 %18
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = getelementptr inbounds i8, i8* %2, i64 20
  %24 = bitcast i8* %23 to i32*
  %25 = getelementptr inbounds i8, i8* %2, i64 16
  %26 = bitcast i8* %25 to i32*
  %27 = bitcast i8* %22 to %"class.blink::Member"**
  %28 = bitcast i8* %22 to %"class.WTF::Vector"*
  br label %30

29:                                               ; preds = %80, %1
  ret %"class.blink::CSSImageSetValue"* %3

30:                                               ; preds = %21, %80
  %31 = phi %"class.blink::Member"* [ %15, %21 ], [ %81, %80 ]
  %32 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %32, align 8
  %34 = icmp eq %"class.blink::CSSValue"* %33, null
  br i1 %34, label %61, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %33, i64 0, i32 2
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 17
  br i1 %38, label %39, label %61

39:                                               ; preds = %35
  %40 = bitcast %"class.blink::CSSValue"* %33 to %"class.blink::CSSImageValue"*
  %41 = tail call %"class.blink::CSSImageValue"* @_ZNK5blink13CSSImageValue24ValueWithURLMadeAbsoluteEv(%"class.blink::CSSImageValue"* nonnull %40)
  %42 = load i32, i32* %24, align 4
  %43 = load i32, i32* %26, align 8
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %59, label %45, !prof !3

45:                                               ; preds = %39
  %46 = load %"class.blink::Member"*, %"class.blink::Member"** %27, align 8
  %47 = zext i32 %42 to i64
  %48 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %46, i64 %47
  %49 = ptrtoint %"class.blink::CSSImageValue"* %41 to i64
  %50 = bitcast %"class.blink::Member"* %48 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %41, i64 0, i32 0, i32 0
  %55 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #9
  br label %56

56:                                               ; preds = %53, %45
  %57 = load i32, i32* %24, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %24, align 4
  br label %80

59:                                               ; preds = %39
  %60 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %41, i64 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector"* %28, %"class.blink::CSSValue"* dereferenceable(3) %60) #9
  br label %80

61:                                               ; preds = %30, %35
  %62 = load i32, i32* %24, align 4
  %63 = load i32, i32* %26, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %79, label %65, !prof !3

65:                                               ; preds = %61
  %66 = load %"class.blink::Member"*, %"class.blink::Member"** %27, align 8
  %67 = zext i32 %62 to i64
  %68 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %66, i64 %67
  %69 = ptrtoint %"class.blink::CSSValue"* %33 to i64
  %70 = bitcast %"class.blink::Member"* %68 to i64*
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %33, i64 0, i32 0
  %75 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #9
  br label %76

76:                                               ; preds = %73, %65
  %77 = load i32, i32* %24, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %24, align 4
  br label %80

79:                                               ; preds = %61
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector"* %28, %"class.blink::CSSValue"* dereferenceable(3) %33) #9
  br label %80

80:                                               ; preds = %79, %76, %59, %56
  %81 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %31, i64 1
  %82 = icmp eq %"class.blink::Member"* %81, %19
  br i1 %82, label %29, label %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSImageValue"* @_ZNK5blink13CSSImageValue24ValueWithURLMadeAbsoluteEv(%"class.blink::CSSImageValue"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = alloca %"struct.blink::Referrer", align 8
  %4 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %2, %"class.WTF::String"* dereferenceable(8) %6) #9
  %7 = bitcast %"struct.blink::Referrer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %3, i64 0, i32 1
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %0, i64 0, i32 7
  %11 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %0, i64 0, i32 8
  %12 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %0, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %12, align 8
  %14 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_13CSSImageValueEEEPvm(i64 64) #9
  %15 = bitcast i8* %14 to %"class.blink::CSSImageValue"*
  %16 = load i32, i32* %10, align 4
  %17 = load i8, i8* %11, align 1, !range !4
  %18 = icmp ne i8 %17, 0
  call void @_ZN5blink13CSSImageValueC1ERKN3WTF12AtomicStringERKNS_4KURLERKNS_8ReferrerENS_11OriginCleanEbPNS_10StyleImageE(%"class.blink::CSSImageValue"* %15, %"class.WTF::AtomicString"* dereferenceable(8) %4, %"class.blink::KURL"* nonnull dereferenceable(112) %2, %"struct.blink::Referrer"* nonnull dereferenceable(16) %3, i32 %16, i1 zeroext %18, %"class.blink::StyleImage"* %13) #9
  %19 = getelementptr inbounds i8, i8* %14, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #9
  br label %38

38:                                               ; preds = %1, %34, %37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %5) #9
  ret %"class.blink::CSSImageValue"* %15
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer"*, %"class.blink::Member"*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"class.blink::Member"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #9
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon.1099* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.1099* %16 to %"class.WTF::Vector.1105"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1105"* %30, i16* nonnull dereferenceable(2) %3) #9
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #9
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1100"* %41, i8* nonnull dereferenceable(1) %4) #9
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1105"*, i16* dereferenceable(2)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1105"* %0, i32 %5) #9
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1105"* %0, i32 %5) #9
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1105"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1105"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1105"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1105"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1105"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1105"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1105"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #9
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1106"* %19, i16* nonnull %6) #9
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #9
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #9
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #9
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1106"* %53, i16* %48) #9
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1105"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1105", %"class.WTF::Vector.1105"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1106"*, i16*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1100"*, i8* dereferenceable(1)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1100"* %0, i32 %5) #9
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1100"* %0, i32 %5) #9
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1100"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1100"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.1100"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1100"* %0, i32 %27) #9
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1100"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.1100"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.1100"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #9
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1101"* %18, i8* nonnull %6) #9
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #9
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !2

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #9
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !2

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1101"* %46, i8* %42) #9
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.1100"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.1100", %"class.WTF::Vector.1100"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #9
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1101"*, i8*) local_unnamed_addr #6 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #9
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #9
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 %9
  %11 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %12 = bitcast %"class.blink::Member"* %10 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #9
  br label %18

18:                                               ; preds = %2, %15
  %19 = load i32, i32* %3, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 4
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #9
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 4, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member"*
  %33 = icmp eq %"class.blink::Member"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 5
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %37) #9
  %39 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %40 = icmp eq %"class.blink::Member"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 32, %34 ]
  %43 = phi %"class.blink::Member"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #9
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #9
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !3

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #9
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !4
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #9
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #9
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  %7 = icmp eq %"class.blink::Member"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member"*
  %10 = icmp eq %"class.blink::Member"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !3

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #9
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #9
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #9
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer"* %20, %"class.blink::Member"* %6) #9
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %44) #9
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %46) #9
  %48 = ptrtoint %"class.blink::HeapVectorBacking"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member"*, %"class.blink::Member"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking"* %47, null
  %53 = icmp ne %"class.blink::Member"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !2

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member"*
  %58 = icmp ne %"class.blink::Member"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #9
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking"* %47 to %"class.blink::Member"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #9
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #9
  %87 = load %"class.blink::Member"*, %"class.blink::Member"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member"*
  %90 = icmp eq %"class.blink::Member"* %87, %89
  br i1 %90, label %93, label %91, !prof !2

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer"* %92, %"class.blink::Member"* %87) #9
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #9
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::CSSValue"*
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %34, i64 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_13CSSImageValueEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0))
  ret i8* %21
}

declare void @_ZN5blink13CSSImageValueC1ERKN3WTF12AtomicStringERKNS_4KURLERKNS_8ReferrerENS_11OriginCleanEbPNS_10StyleImageE(%"class.blink::CSSImageValue"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), %"struct.blink::Referrer"* dereferenceable(16), i32, i1 zeroext, %"class.blink::StyleImage"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSImageSetValue14ImageWithScaleELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.6"*, %"struct.blink::CSSImageSetValue::ImageWithScale"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::CSSImageSetValue::ImageWithScale"*, %"struct.blink::CSSImageSetValue::ImageWithScale"** %6, align 8
  %8 = icmp ugt %"struct.blink::CSSImageSetValue::ImageWithScale"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::CSSImageSetValue::ImageWithScale"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16CSSImageSetValue14ImageWithScaleEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSImageSetValue14ImageWithScaleEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::CSSImageSetValue::ImageWithScale"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::CSSImageSetValue::ImageWithScale"*, %"struct.blink::CSSImageSetValue::ImageWithScale"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::CSSImageSetValue::ImageWithScale"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.6"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::CSSImageSetValue::ImageWithScale"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::CSSImageSetValue::ImageWithScale"* %1 to i64
  %56 = ptrtoint %"struct.blink::CSSImageSetValue::ImageWithScale"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16CSSImageSetValue14ImageWithScaleEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSImageSetValue14ImageWithScaleEEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::CSSImageSetValue::ImageWithScale"*, %"struct.blink::CSSImageSetValue::ImageWithScale"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::CSSImageSetValue::ImageWithScale"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector.6"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::CSSImageSetValue::ImageWithScale"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %100, i64 %103
  %105 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %101 to i64*
  %106 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16CSSImageSetValue14ImageWithScaleEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEvT0_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"*, %"struct.blink::CSSImageSetValue::ImageWithScale"*, i1 (i64, i64)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %324, %3
  %5 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %1, %3 ], [ %294, %324 ]
  %6 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %0, %3 ], [ %17, %324 ]
  %7 = ptrtoint %"struct.blink::CSSImageSetValue::ImageWithScale"* %5 to i64
  %8 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %5, i64 -1
  %9 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %8 to i64*
  %10 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %8, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %5, i64 -1, i32 1
  %12 = bitcast float* %11 to i32*
  %13 = ptrtoint %"struct.blink::CSSImageSetValue::ImageWithScale"* %5 to i64
  br label %14

14:                                               ; preds = %333, %4
  %15 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %6, %4 ], [ %334, %333 ]
  br label %16

16:                                               ; preds = %215, %14
  %17 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %15, %14 ], [ %198, %215 ]
  %18 = ptrtoint %"struct.blink::CSSImageSetValue::ImageWithScale"* %17 to i64
  %19 = sub i64 %7, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %93 [
    i64 0, label %337
    i64 1, label %337
    i64 2, label %21
    i64 3, label %39
    i64 4, label %43
    i64 5, label %87
  ]

21:                                               ; preds = %16
  %22 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %23 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %5, i64 -1
  %24 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %23 to i64*
  %25 = load i64, i64* %24, align 4
  %26 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %17 to i64*
  %27 = load i64, i64* %26, align 4
  %28 = tail call zeroext i1 %22(i64 %25, i64 %27) #9
  br i1 %28, label %29, label %337

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 0, i32 1
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = load i64, i64* %24, align 4
  store i64 %35, i64* %26, align 4
  %36 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %23, i64 0, i32 0
  store i32 %31, i32* %36, align 4
  %37 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %5, i64 -1, i32 1
  %38 = bitcast float* %37 to i32*
  store i32 %34, i32* %38, align 4
  br label %337

39:                                               ; preds = %16
  %40 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 1
  %41 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %5, i64 -1
  %42 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEjT0_S8_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %17, %"struct.blink::CSSImageSetValue::ImageWithScale"* %40, %"struct.blink::CSSImageSetValue::ImageWithScale"* %41, i1 (i64, i64)** dereferenceable(8) %2)
  br label %337

43:                                               ; preds = %16
  %44 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 1
  %45 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 2
  %46 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %5, i64 -1
  %47 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEjT0_S8_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %17, %"struct.blink::CSSImageSetValue::ImageWithScale"* %44, %"struct.blink::CSSImageSetValue::ImageWithScale"* %45, i1 (i64, i64)** dereferenceable(8) %2) #9
  %48 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %49 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %46 to i64*
  %50 = load i64, i64* %49, align 4
  %51 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %45 to i64*
  %52 = load i64, i64* %51, align 4
  %53 = tail call zeroext i1 %48(i64 %50, i64 %52) #9
  br i1 %53, label %54, label %337

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %45, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 2, i32 1
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = load i64, i64* %49, align 4
  store i64 %60, i64* %51, align 4
  %61 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %46, i64 0, i32 0
  store i32 %56, i32* %61, align 4
  %62 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %5, i64 -1, i32 1
  %63 = bitcast float* %62 to i32*
  store i32 %59, i32* %63, align 4
  %64 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %65 = load i64, i64* %51, align 4
  %66 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %44 to i64*
  %67 = load i64, i64* %66, align 4
  %68 = tail call zeroext i1 %64(i64 %65, i64 %67) #9
  br i1 %68, label %69, label %337

69:                                               ; preds = %54
  %70 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %44, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 1, i32 1
  %73 = bitcast float* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = load i64, i64* %51, align 4
  store i64 %75, i64* %66, align 4
  store i32 %71, i32* %55, align 4
  store i32 %74, i32* %58, align 4
  %76 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %77 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %17 to i64*
  %78 = load i64, i64* %77, align 4
  %79 = tail call zeroext i1 %76(i64 %75, i64 %78) #9
  br i1 %79, label %80, label %337

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 0, i32 1
  %84 = bitcast float* %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = load i64, i64* %66, align 4
  store i64 %86, i64* %77, align 4
  store i32 %82, i32* %70, align 4
  store i32 %85, i32* %73, align 4
  br label %337

87:                                               ; preds = %16
  %88 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 1
  %89 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 2
  %90 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 3
  %91 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %5, i64 -1
  %92 = tail call i32 @_ZNSt3__17__sort5IRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEjT0_S8_S8_S8_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %17, %"struct.blink::CSSImageSetValue::ImageWithScale"* %88, %"struct.blink::CSSImageSetValue::ImageWithScale"* %89, %"struct.blink::CSSImageSetValue::ImageWithScale"* %90, %"struct.blink::CSSImageSetValue::ImageWithScale"* %91, i1 (i64, i64)** dereferenceable(8) %2)
  br label %337

93:                                               ; preds = %16
  %94 = icmp slt i64 %19, 248
  br i1 %94, label %95, label %141

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 2
  %97 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 1
  %98 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEjT0_S8_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %17, %"struct.blink::CSSImageSetValue::ImageWithScale"* %97, %"struct.blink::CSSImageSetValue::ImageWithScale"* %96, i1 (i64, i64)** dereferenceable(8) %2) #9
  %99 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 3
  %100 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %99, %5
  br i1 %100, label %337, label %101

101:                                              ; preds = %95, %138
  %102 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %103, %138 ], [ %96, %95 ]
  %103 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %139, %138 ], [ %99, %95 ]
  %104 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %105 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %103 to i64*
  %106 = load i64, i64* %105, align 4
  %107 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %102 to i64*
  %108 = load i64, i64* %107, align 4
  %109 = tail call zeroext i1 %104(i64 %106, i64 %108) #9
  br i1 %109, label %110, label %138

110:                                              ; preds = %101
  %111 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %103, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %103, i64 0, i32 1
  %114 = bitcast float* %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i64
  %117 = shl nuw i64 %116, 32
  %118 = zext i32 %112 to i64
  %119 = or i64 %117, %118
  br label %120

120:                                              ; preds = %127, %110
  %121 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %102, %110 ], [ %129, %127 ]
  %122 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %103, %110 ], [ %121, %127 ]
  %123 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %121 to i64*
  %124 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %122 to i64*
  %125 = load i64, i64* %123, align 4
  store i64 %125, i64* %124, align 4
  %126 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %121, %17
  br i1 %126, label %133, label %127

127:                                              ; preds = %120
  %128 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %129 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %121, i64 -1
  %130 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %129 to i64*
  %131 = load i64, i64* %130, align 4
  %132 = tail call zeroext i1 %128(i64 %119, i64 %131) #9
  br i1 %132, label %120, label %133

133:                                              ; preds = %127, %120
  %134 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %17, %120 ], [ %121, %127 ]
  %135 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %134, i64 0, i32 0
  store i32 %112, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %134, i64 0, i32 1
  %137 = bitcast float* %136 to i32*
  store i32 %115, i32* %137, align 4
  br label %138

138:                                              ; preds = %133, %101
  %139 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %103, i64 1
  %140 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %139, %5
  br i1 %140, label %337, label %101

141:                                              ; preds = %93
  %142 = icmp sgt i64 %19, 7992
  %143 = sdiv i64 %20, 2
  %144 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 %143
  br i1 %142, label %145, label %150

145:                                              ; preds = %141
  %146 = sdiv i64 %20, 4
  %147 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 %146
  %148 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %144, i64 %146
  %149 = tail call i32 @_ZNSt3__17__sort5IRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEjT0_S8_S8_S8_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %17, %"struct.blink::CSSImageSetValue::ImageWithScale"* %147, %"struct.blink::CSSImageSetValue::ImageWithScale"* %144, %"struct.blink::CSSImageSetValue::ImageWithScale"* %148, %"struct.blink::CSSImageSetValue::ImageWithScale"* %8, i1 (i64, i64)** dereferenceable(8) %2)
  br label %152

150:                                              ; preds = %141
  %151 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEjT0_S8_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %17, %"struct.blink::CSSImageSetValue::ImageWithScale"* %144, %"struct.blink::CSSImageSetValue::ImageWithScale"* %8, i1 (i64, i64)** dereferenceable(8) %2)
  br label %152

152:                                              ; preds = %150, %145
  %153 = phi i32 [ %149, %145 ], [ %151, %150 ]
  %154 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %155 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %17 to i64*
  %156 = load i64, i64* %155, align 4
  %157 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %144 to i64*
  %158 = load i64, i64* %157, align 4
  %159 = tail call zeroext i1 %154(i64 %156, i64 %158) #9
  br i1 %159, label %247, label %160

160:                                              ; preds = %152, %228
  %161 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %162, %228 ], [ %8, %152 ]
  %162 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %161, i64 -1
  %163 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, %162
  br i1 %163, label %164, label %228

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 1
  %166 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %167 = load i64, i64* %155, align 4
  %168 = load i64, i64* %9, align 4
  %169 = tail call zeroext i1 %166(i64 %167, i64 %168) #9
  br i1 %169, label %191, label %170

170:                                              ; preds = %164
  %171 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %165, %8
  br i1 %171, label %337, label %172

172:                                              ; preds = %170, %188
  %173 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %189, %188 ], [ %165, %170 ]
  %174 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %175 = load i64, i64* %155, align 4
  %176 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %173 to i64*
  %177 = load i64, i64* %176, align 4
  %178 = tail call zeroext i1 %174(i64 %175, i64 %177) #9
  br i1 %178, label %179, label %188

179:                                              ; preds = %172
  %180 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %173 to i64*
  %181 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %173, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %173, i64 0, i32 1
  %184 = bitcast float* %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = load i64, i64* %9, align 4
  store i64 %186, i64* %180, align 4
  store i32 %182, i32* %10, align 4
  store i32 %185, i32* %12, align 4
  %187 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %173, i64 1
  br label %191

188:                                              ; preds = %172
  %189 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %173, i64 1
  %190 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %189, %8
  br i1 %190, label %337, label %172

191:                                              ; preds = %179, %164
  %192 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %165, %164 ], [ %187, %179 ]
  %193 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %192, %8
  br i1 %193, label %337, label %194

194:                                              ; preds = %191, %217
  %195 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %211, %217 ], [ %8, %191 ]
  %196 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %204, %217 ], [ %192, %191 ]
  br label %197

197:                                              ; preds = %197, %194
  %198 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %196, %194 ], [ %204, %197 ]
  %199 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %200 = load i64, i64* %155, align 4
  %201 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %198 to i64*
  %202 = load i64, i64* %201, align 4
  %203 = tail call zeroext i1 %199(i64 %200, i64 %202) #9
  %204 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %198, i64 1
  br i1 %203, label %205, label %197

205:                                              ; preds = %197
  %206 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %198 to i64*
  br label %207

207:                                              ; preds = %205, %207
  %208 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %211, %207 ], [ %195, %205 ]
  %209 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %210 = load i64, i64* %155, align 4
  %211 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %208, i64 -1
  %212 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %211 to i64*
  %213 = load i64, i64* %212, align 4
  %214 = tail call zeroext i1 %209(i64 %210, i64 %213) #9
  br i1 %214, label %207, label %215

215:                                              ; preds = %207
  %216 = icmp ult %"struct.blink::CSSImageSetValue::ImageWithScale"* %198, %211
  br i1 %216, label %217, label %16

217:                                              ; preds = %215
  %218 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %211 to i64*
  %219 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %198, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %198, i64 0, i32 1
  %222 = bitcast float* %221 to i32*
  %223 = load i32, i32* %222, align 4
  %224 = load i64, i64* %218, align 4
  store i64 %224, i64* %206, align 4
  %225 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %211, i64 0, i32 0
  store i32 %220, i32* %225, align 4
  %226 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %208, i64 -1, i32 1
  %227 = bitcast float* %226 to i32*
  store i32 %223, i32* %227, align 4
  br label %194

228:                                              ; preds = %160
  %229 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %230 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %162 to i64*
  %231 = load i64, i64* %230, align 4
  %232 = load i64, i64* %157, align 4
  %233 = tail call zeroext i1 %229(i64 %231, i64 %232) #9
  br i1 %233, label %234, label %160

234:                                              ; preds = %228
  %235 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %17 to i64*
  %236 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %162 to i64*
  %237 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 0, i32 1
  %240 = bitcast float* %239 to i32*
  %241 = load i32, i32* %240, align 4
  %242 = load i64, i64* %236, align 4
  store i64 %242, i64* %235, align 4
  %243 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %162, i64 0, i32 0
  store i32 %238, i32* %243, align 4
  %244 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %161, i64 -1, i32 1
  %245 = bitcast float* %244 to i32*
  store i32 %241, i32* %245, align 4
  %246 = add i32 %153, 1
  br label %247

247:                                              ; preds = %152, %234
  %248 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %162, %234 ], [ %8, %152 ]
  %249 = phi i32 [ %246, %234 ], [ %153, %152 ]
  %250 = ptrtoint %"struct.blink::CSSImageSetValue::ImageWithScale"* %17 to i64
  %251 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %17, i64 1
  %252 = icmp ult %"struct.blink::CSSImageSetValue::ImageWithScale"* %251, %248
  br i1 %252, label %253, label %293

253:                                              ; preds = %247, %279
  %254 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %272, %279 ], [ %248, %247 ]
  %255 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %266, %279 ], [ %251, %247 ]
  %256 = phi i32 [ %290, %279 ], [ %249, %247 ]
  %257 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %292, %279 ], [ %144, %247 ]
  %258 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %257 to i64*
  br label %259

259:                                              ; preds = %259, %253
  %260 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %255, %253 ], [ %266, %259 ]
  %261 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %262 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %260 to i64*
  %263 = load i64, i64* %262, align 4
  %264 = load i64, i64* %258, align 4
  %265 = tail call zeroext i1 %261(i64 %263, i64 %264) #9
  %266 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %260, i64 1
  br i1 %265, label %259, label %267

267:                                              ; preds = %259
  %268 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %260 to i64*
  br label %269

269:                                              ; preds = %267, %269
  %270 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %272, %269 ], [ %254, %267 ]
  %271 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %272 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %270, i64 -1
  %273 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %272 to i64*
  %274 = load i64, i64* %273, align 4
  %275 = load i64, i64* %258, align 4
  %276 = tail call zeroext i1 %271(i64 %274, i64 %275) #9
  br i1 %276, label %277, label %269

277:                                              ; preds = %269
  %278 = icmp ugt %"struct.blink::CSSImageSetValue::ImageWithScale"* %260, %272
  br i1 %278, label %293, label %279

279:                                              ; preds = %277
  %280 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %272 to i64*
  %281 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %260, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %260, i64 0, i32 1
  %284 = bitcast float* %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = load i64, i64* %280, align 4
  store i64 %286, i64* %268, align 4
  %287 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %272, i64 0, i32 0
  store i32 %282, i32* %287, align 4
  %288 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %270, i64 -1, i32 1
  %289 = bitcast float* %288 to i32*
  store i32 %285, i32* %289, align 4
  %290 = add i32 %256, 1
  %291 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %257, %260
  %292 = select i1 %291, %"struct.blink::CSSImageSetValue::ImageWithScale"* %272, %"struct.blink::CSSImageSetValue::ImageWithScale"* %257
  br label %253

293:                                              ; preds = %277, %247
  %294 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %251, %247 ], [ %260, %277 ]
  %295 = phi i32 [ %249, %247 ], [ %256, %277 ]
  %296 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %144, %247 ], [ %257, %277 ]
  %297 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %294, %296
  br i1 %297, label %316, label %298

298:                                              ; preds = %293
  %299 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %300 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %296 to i64*
  %301 = load i64, i64* %300, align 4
  %302 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %294 to i64*
  %303 = load i64, i64* %302, align 4
  %304 = tail call zeroext i1 %299(i64 %301, i64 %303) #9
  br i1 %304, label %305, label %316

305:                                              ; preds = %298
  %306 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %294, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  %308 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %294, i64 0, i32 1
  %309 = bitcast float* %308 to i32*
  %310 = load i32, i32* %309, align 4
  %311 = load i64, i64* %300, align 4
  store i64 %311, i64* %302, align 4
  %312 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %296, i64 0, i32 0
  store i32 %307, i32* %312, align 4
  %313 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %296, i64 0, i32 1
  %314 = bitcast float* %313 to i32*
  store i32 %310, i32* %314, align 4
  %315 = add i32 %295, 1
  br label %316

316:                                              ; preds = %293, %305, %298
  %317 = phi i32 [ %315, %305 ], [ %295, %298 ], [ %295, %293 ]
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %326

319:                                              ; preds = %316
  %320 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEbT0_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %17, %"struct.blink::CSSImageSetValue::ImageWithScale"* %294, i1 (i64, i64)** dereferenceable(8) %2)
  %321 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %294, i64 1
  %322 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEbT0_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %321, %"struct.blink::CSSImageSetValue::ImageWithScale"* %5, i1 (i64, i64)** dereferenceable(8) %2)
  br i1 %322, label %323, label %325

323:                                              ; preds = %319
  br i1 %320, label %337, label %324

324:                                              ; preds = %323, %335
  br label %4

325:                                              ; preds = %319
  br i1 %320, label %333, label %326

326:                                              ; preds = %325, %316
  %327 = ptrtoint %"struct.blink::CSSImageSetValue::ImageWithScale"* %294 to i64
  %328 = sub i64 %327, %250
  %329 = sub i64 %13, %327
  %330 = icmp slt i64 %328, %329
  br i1 %330, label %331, label %335

331:                                              ; preds = %326
  tail call void @_ZNSt3__16__sortIRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEvT0_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %17, %"struct.blink::CSSImageSetValue::ImageWithScale"* %294, i1 (i64, i64)** dereferenceable(8) %2)
  %332 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %294, i64 1
  br label %333

333:                                              ; preds = %331, %325
  %334 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %321, %325 ], [ %332, %331 ]
  br label %14

335:                                              ; preds = %326
  %336 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %294, i64 1
  tail call void @_ZNSt3__16__sortIRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEvT0_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %336, %"struct.blink::CSSImageSetValue::ImageWithScale"* %5, i1 (i64, i64)** dereferenceable(8) %2)
  br label %324

337:                                              ; preds = %323, %191, %16, %16, %170, %188, %138, %95, %80, %69, %54, %43, %21, %29, %39, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEjT0_S8_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"*, %"struct.blink::CSSImageSetValue::ImageWithScale"*, %"struct.blink::CSSImageSetValue::ImageWithScale"*, i1 (i64, i64)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = load i1 (i64, i64)*, i1 (i64, i64)** %3, align 8
  %6 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %1 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %0 to i64*
  %9 = load i64, i64* %8, align 4
  %10 = tail call zeroext i1 %5(i64 %7, i64 %9) #9
  %11 = load i1 (i64, i64)*, i1 (i64, i64)** %3, align 8
  %12 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %2 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = load i64, i64* %6, align 4
  %15 = tail call zeroext i1 %11(i64 %13, i64 %14) #9
  br i1 %10, label %38, label %16

16:                                               ; preds = %4
  br i1 %15, label %17, label %65

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %1, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %1, i64 0, i32 1
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = load i64, i64* %12, align 4
  store i64 %23, i64* %6, align 4
  %24 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %2, i64 0, i32 0
  store i32 %19, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %2, i64 0, i32 1
  %26 = bitcast float* %25 to i32*
  store i32 %22, i32* %26, align 4
  %27 = load i1 (i64, i64)*, i1 (i64, i64)** %3, align 8
  %28 = load i64, i64* %6, align 4
  %29 = load i64, i64* %8, align 4
  %30 = tail call zeroext i1 %27(i64 %28, i64 %29) #9
  br i1 %30, label %31, label %65

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 0, i32 1
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = load i64, i64* %6, align 4
  store i64 %37, i64* %8, align 4
  store i32 %33, i32* %18, align 4
  store i32 %36, i32* %21, align 4
  br label %65

38:                                               ; preds = %4
  %39 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 0, i32 1
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 4
  br i1 %15, label %44, label %49

44:                                               ; preds = %38
  %45 = load i64, i64* %12, align 4
  store i64 %45, i64* %8, align 4
  %46 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %2, i64 0, i32 0
  store i32 %40, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %2, i64 0, i32 1
  %48 = bitcast float* %47 to i32*
  store i32 %43, i32* %48, align 4
  br label %65

49:                                               ; preds = %38
  %50 = load i64, i64* %6, align 4
  store i64 %50, i64* %8, align 4
  %51 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %1, i64 0, i32 0
  store i32 %40, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %1, i64 0, i32 1
  %53 = bitcast float* %52 to i32*
  store i32 %43, i32* %53, align 4
  %54 = load i1 (i64, i64)*, i1 (i64, i64)** %3, align 8
  %55 = load i64, i64* %12, align 4
  %56 = load i64, i64* %6, align 4
  %57 = tail call zeroext i1 %54(i64 %55, i64 %56) #9
  br i1 %57, label %58, label %65

58:                                               ; preds = %49
  %59 = load i32, i32* %51, align 4
  %60 = load i32, i32* %53, align 4
  %61 = load i64, i64* %12, align 4
  store i64 %61, i64* %6, align 4
  %62 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %2, i64 0, i32 0
  store i32 %59, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %2, i64 0, i32 1
  %64 = bitcast float* %63 to i32*
  store i32 %60, i32* %64, align 4
  br label %65

65:                                               ; preds = %49, %58, %17, %31, %16, %44
  %66 = phi i32 [ 1, %44 ], [ 0, %16 ], [ 2, %31 ], [ 1, %17 ], [ 2, %58 ], [ 1, %49 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEjT0_S8_S8_S8_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"*, %"struct.blink::CSSImageSetValue::ImageWithScale"*, %"struct.blink::CSSImageSetValue::ImageWithScale"*, %"struct.blink::CSSImageSetValue::ImageWithScale"*, %"struct.blink::CSSImageSetValue::ImageWithScale"*, i1 (i64, i64)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEjT0_S8_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %0, %"struct.blink::CSSImageSetValue::ImageWithScale"* %1, %"struct.blink::CSSImageSetValue::ImageWithScale"* %2, i1 (i64, i64)** dereferenceable(8) %5) #9
  %8 = load i1 (i64, i64)*, i1 (i64, i64)** %5, align 8
  %9 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %3 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %2 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = tail call zeroext i1 %8(i64 %10, i64 %12) #9
  br i1 %13, label %14, label %51

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %2, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %2, i64 0, i32 1
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = load i64, i64* %9, align 4
  store i64 %20, i64* %11, align 4
  %21 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %3, i64 0, i32 0
  store i32 %16, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %3, i64 0, i32 1
  %23 = bitcast float* %22 to i32*
  store i32 %19, i32* %23, align 4
  %24 = add i32 %7, 1
  %25 = load i1 (i64, i64)*, i1 (i64, i64)** %5, align 8
  %26 = load i64, i64* %11, align 4
  %27 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %1 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = tail call zeroext i1 %25(i64 %26, i64 %28) #9
  br i1 %29, label %30, label %51

30:                                               ; preds = %14
  %31 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %1, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %1, i64 0, i32 1
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = load i64, i64* %11, align 4
  store i64 %36, i64* %27, align 4
  store i32 %32, i32* %15, align 4
  store i32 %35, i32* %18, align 4
  %37 = add i32 %7, 2
  %38 = load i1 (i64, i64)*, i1 (i64, i64)** %5, align 8
  %39 = load i64, i64* %27, align 4
  %40 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %0 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = tail call zeroext i1 %38(i64 %39, i64 %41) #9
  br i1 %42, label %43, label %51

43:                                               ; preds = %30
  %44 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 0, i32 1
  %47 = bitcast float* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = load i64, i64* %27, align 4
  store i64 %49, i64* %40, align 4
  store i32 %45, i32* %31, align 4
  store i32 %48, i32* %34, align 4
  %50 = add i32 %7, 3
  br label %51

51:                                               ; preds = %6, %14, %30, %43
  %52 = phi i32 [ %50, %43 ], [ %37, %30 ], [ %24, %14 ], [ %7, %6 ]
  %53 = load i1 (i64, i64)*, i1 (i64, i64)** %5, align 8
  %54 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %4 to i64*
  %55 = load i64, i64* %54, align 4
  %56 = load i64, i64* %9, align 4
  %57 = tail call zeroext i1 %53(i64 %55, i64 %56) #9
  br i1 %57, label %58, label %107

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %3, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %3, i64 0, i32 1
  %62 = bitcast float* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = load i64, i64* %54, align 4
  store i64 %64, i64* %9, align 4
  %65 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %4, i64 0, i32 0
  store i32 %60, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %4, i64 0, i32 1
  %67 = bitcast float* %66 to i32*
  store i32 %63, i32* %67, align 4
  %68 = add i32 %52, 1
  %69 = load i1 (i64, i64)*, i1 (i64, i64)** %5, align 8
  %70 = load i64, i64* %9, align 4
  %71 = load i64, i64* %11, align 4
  %72 = tail call zeroext i1 %69(i64 %70, i64 %71) #9
  br i1 %72, label %73, label %107

73:                                               ; preds = %58
  %74 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %2, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %2, i64 0, i32 1
  %77 = bitcast float* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = load i64, i64* %9, align 4
  store i64 %79, i64* %11, align 4
  store i32 %75, i32* %59, align 4
  store i32 %78, i32* %62, align 4
  %80 = add i32 %52, 2
  %81 = load i1 (i64, i64)*, i1 (i64, i64)** %5, align 8
  %82 = load i64, i64* %11, align 4
  %83 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %1 to i64*
  %84 = load i64, i64* %83, align 4
  %85 = tail call zeroext i1 %81(i64 %82, i64 %84) #9
  br i1 %85, label %86, label %107

86:                                               ; preds = %73
  %87 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %1, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %1, i64 0, i32 1
  %90 = bitcast float* %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = load i64, i64* %11, align 4
  store i64 %92, i64* %83, align 4
  store i32 %88, i32* %74, align 4
  store i32 %91, i32* %77, align 4
  %93 = add i32 %52, 3
  %94 = load i1 (i64, i64)*, i1 (i64, i64)** %5, align 8
  %95 = load i64, i64* %83, align 4
  %96 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %0 to i64*
  %97 = load i64, i64* %96, align 4
  %98 = tail call zeroext i1 %94(i64 %95, i64 %97) #9
  br i1 %98, label %99, label %107

99:                                               ; preds = %86
  %100 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 0, i32 1
  %103 = bitcast float* %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = load i64, i64* %83, align 4
  store i64 %105, i64* %96, align 4
  store i32 %101, i32* %87, align 4
  store i32 %104, i32* %90, align 4
  %106 = add i32 %52, 4
  br label %107

107:                                              ; preds = %58, %86, %99, %73, %51
  %108 = phi i32 [ %106, %99 ], [ %93, %86 ], [ %80, %73 ], [ %68, %58 ], [ %52, %51 ]
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEbT0_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"*, %"struct.blink::CSSImageSetValue::ImageWithScale"*, i1 (i64, i64)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"struct.blink::CSSImageSetValue::ImageWithScale"* %1 to i64
  %5 = ptrtoint %"struct.blink::CSSImageSetValue::ImageWithScale"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %80 [
    i64 0, label %133
    i64 1, label %133
    i64 2, label %8
    i64 3, label %26
    i64 4, label %30
    i64 5, label %74
  ]

8:                                                ; preds = %3
  %9 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %10 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %1, i64 -1
  %11 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %10 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %0 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = tail call zeroext i1 %9(i64 %12, i64 %14) #9
  br i1 %15, label %16, label %133

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 0, i32 1
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = load i64, i64* %11, align 4
  store i64 %22, i64* %13, align 4
  %23 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %10, i64 0, i32 0
  store i32 %18, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %1, i64 -1, i32 1
  %25 = bitcast float* %24 to i32*
  store i32 %21, i32* %25, align 4
  br label %133

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 1
  %28 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %1, i64 -1
  %29 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEjT0_S8_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %0, %"struct.blink::CSSImageSetValue::ImageWithScale"* %27, %"struct.blink::CSSImageSetValue::ImageWithScale"* %28, i1 (i64, i64)** dereferenceable(8) %2)
  br label %133

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 1
  %32 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 2
  %33 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %1, i64 -1
  %34 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEjT0_S8_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %0, %"struct.blink::CSSImageSetValue::ImageWithScale"* %31, %"struct.blink::CSSImageSetValue::ImageWithScale"* %32, i1 (i64, i64)** dereferenceable(8) %2) #9
  %35 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %36 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %33 to i64*
  %37 = load i64, i64* %36, align 4
  %38 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %32 to i64*
  %39 = load i64, i64* %38, align 4
  %40 = tail call zeroext i1 %35(i64 %37, i64 %39) #9
  br i1 %40, label %41, label %133

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %32, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 2, i32 1
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = load i64, i64* %36, align 4
  store i64 %47, i64* %38, align 4
  %48 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %33, i64 0, i32 0
  store i32 %43, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %1, i64 -1, i32 1
  %50 = bitcast float* %49 to i32*
  store i32 %46, i32* %50, align 4
  %51 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %52 = load i64, i64* %38, align 4
  %53 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %31 to i64*
  %54 = load i64, i64* %53, align 4
  %55 = tail call zeroext i1 %51(i64 %52, i64 %54) #9
  br i1 %55, label %56, label %133

56:                                               ; preds = %41
  %57 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %31, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 1, i32 1
  %60 = bitcast float* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = load i64, i64* %38, align 4
  store i64 %62, i64* %53, align 4
  store i32 %58, i32* %42, align 4
  store i32 %61, i32* %45, align 4
  %63 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %64 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %0 to i64*
  %65 = load i64, i64* %64, align 4
  %66 = tail call zeroext i1 %63(i64 %62, i64 %65) #9
  br i1 %66, label %67, label %133

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 0, i32 1
  %71 = bitcast float* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = load i64, i64* %53, align 4
  store i64 %73, i64* %64, align 4
  store i32 %69, i32* %57, align 4
  store i32 %72, i32* %60, align 4
  br label %133

74:                                               ; preds = %3
  %75 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 1
  %76 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 2
  %77 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 3
  %78 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %1, i64 -1
  %79 = tail call i32 @_ZNSt3__17__sort5IRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEjT0_S8_S8_S8_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %0, %"struct.blink::CSSImageSetValue::ImageWithScale"* %75, %"struct.blink::CSSImageSetValue::ImageWithScale"* %76, %"struct.blink::CSSImageSetValue::ImageWithScale"* %77, %"struct.blink::CSSImageSetValue::ImageWithScale"* %78, i1 (i64, i64)** dereferenceable(8) %2)
  br label %133

80:                                               ; preds = %3
  %81 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 2
  %82 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 1
  %83 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16CSSImageSetValue14ImageWithScaleES3_EPS3_EEjT0_S8_S8_T_(%"struct.blink::CSSImageSetValue::ImageWithScale"* %0, %"struct.blink::CSSImageSetValue::ImageWithScale"* %82, %"struct.blink::CSSImageSetValue::ImageWithScale"* %81, i1 (i64, i64)** dereferenceable(8) %2)
  %84 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %0, i64 3
  %85 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %84, %1
  br i1 %85, label %133, label %86

86:                                               ; preds = %80, %126
  %87 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %89, %126 ], [ %81, %80 ]
  %88 = phi i32 [ %127, %126 ], [ 0, %80 ]
  %89 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %128, %126 ], [ %84, %80 ]
  %90 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %91 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %89 to i64*
  %92 = load i64, i64* %91, align 4
  %93 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %87 to i64*
  %94 = load i64, i64* %93, align 4
  %95 = tail call zeroext i1 %90(i64 %92, i64 %94) #9
  br i1 %95, label %96, label %126

96:                                               ; preds = %86
  %97 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %89, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %89, i64 0, i32 1
  %100 = bitcast float* %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i64
  %103 = shl nuw i64 %102, 32
  %104 = zext i32 %98 to i64
  %105 = or i64 %103, %104
  br label %106

106:                                              ; preds = %113, %96
  %107 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %89, %96 ], [ %108, %113 ]
  %108 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %87, %96 ], [ %115, %113 ]
  %109 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %108 to i64*
  %110 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %107 to i64*
  %111 = load i64, i64* %109, align 4
  store i64 %111, i64* %110, align 4
  %112 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %108, %0
  br i1 %112, label %119, label %113

113:                                              ; preds = %106
  %114 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %115 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %108, i64 -1
  %116 = bitcast %"struct.blink::CSSImageSetValue::ImageWithScale"* %115 to i64*
  %117 = load i64, i64* %116, align 4
  %118 = tail call zeroext i1 %114(i64 %105, i64 %117) #9
  br i1 %118, label %106, label %119

119:                                              ; preds = %106, %113
  %120 = phi %"struct.blink::CSSImageSetValue::ImageWithScale"* [ %0, %106 ], [ %108, %113 ]
  %121 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %120, i64 0, i32 0
  store i32 %98, i32* %121, align 4
  %122 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %120, i64 0, i32 1
  %123 = bitcast float* %122 to i32*
  store i32 %101, i32* %123, align 4
  %124 = add i32 %88, 1
  %125 = icmp eq i32 %124, 8
  br i1 %125, label %130, label %126

126:                                              ; preds = %119, %86
  %127 = phi i32 [ %124, %119 ], [ %88, %86 ]
  %128 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %89, i64 1
  %129 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %128, %1
  br i1 %129, label %133, label %86

130:                                              ; preds = %119
  %131 = getelementptr inbounds %"struct.blink::CSSImageSetValue::ImageWithScale", %"struct.blink::CSSImageSetValue::ImageWithScale"* %89, i64 1
  %132 = icmp eq %"struct.blink::CSSImageSetValue::ImageWithScale"* %131, %1
  br label %133

133:                                              ; preds = %126, %130, %80, %67, %56, %41, %30, %8, %16, %3, %3, %74, %26
  %134 = phi i1 [ true, %74 ], [ true, %26 ], [ true, %3 ], [ true, %3 ], [ true, %16 ], [ true, %8 ], [ true, %30 ], [ true, %41 ], [ true, %56 ], [ true, %67 ], [ true, %80 ], [ %132, %130 ], [ true, %126 ]
  ret i1 %134
}

declare void @_ZN5blink20StyleFetchedImageSetC1EPNS_20ImageResourceContentEfPNS_16CSSImageSetValueERKNS_4KURLE(%"class.blink::StyleFetchedImageSet"*, %"class.blink::ImageResourceContent"*, float, %"class.blink::CSSImageSetValue"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10StyleImageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10StyleImageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10StyleImageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10StyleImageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10StyleImageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10StyleImageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleImage"*
  %4 = bitcast i8* %1 to void (%"class.blink::StyleImage"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::StyleImage"*, %"class.blink::Visitor"*)**, void (%"class.blink::StyleImage"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::StyleImage"*, %"class.blink::Visitor"*)*, void (%"class.blink::StyleImage"*, %"class.blink::Visitor"*)** %5, i64 17
  %7 = load void (%"class.blink::StyleImage"*, %"class.blink::Visitor"*)*, void (%"class.blink::StyleImage"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::StyleImage"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_10StyleImageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::StyleImage"*
  %3 = bitcast i8* %0 to void (%"class.blink::StyleImage"*)***
  %4 = load void (%"class.blink::StyleImage"*)**, void (%"class.blink::StyleImage"*)*** %3, align 8
  %5 = load void (%"class.blink::StyleImage"*)*, void (%"class.blink::StyleImage"*)** %4, align 8
  tail call void %5(%"class.blink::StyleImage"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10StyleImageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_16CSSImageSetValueEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0))
  ret i8* %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
