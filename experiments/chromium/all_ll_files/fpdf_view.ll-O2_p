; ModuleID = '../../third_party/pdfium/fpdfsdk/fpdf_view.cpp'
source_filename = "../../third_party/pdfium/fpdfsdk/fpdf_view.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon.491 = type { %class.CFX_PTemplate }
%class.CFX_PTemplate = type { float, float }
%"class.pdfium::base::NoDestructor" = type { [8 x i8] }
%struct.FPDF_LIBRARY_CONFIG_ = type { i32, i8**, i8*, i32, i8* }
%struct.fpdf_document_t__ = type opaque
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%class.CPDF_DocRenderData = type { %"class.CPDF_Document::RenderDataIface", %"class.std::__1::map.748", %"class.std::__1::map.759" }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr.132" }
%"class.fxcrt::UnownedPtr.132" = type { %class.CPDF_Document* }
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.22", %"class.fxcrt::RetainPtr.55", %"class.fxcrt::RetainPtr.55", %"class.std::__1::vector.122", i8, i8, i32, i32, %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::vector.37", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.155" }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.7" }
%"class.std::__1::__tree.7" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.16" }
%"class.fxcrt::RetainPtr.16" = type { %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.542" }
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.545", %"class.std::__1::__compressed_pair.553", %"class.std::__1::__compressed_pair.558", %"class.std::__1::__compressed_pair.560", [4 x i8] }>
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547", %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.561" = type { float }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.45", %"class.fxcrt::UnownedPtr.51", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.52", i64, %"class.fxcrt::RetainPtr.84", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.96", %"class.std::__1::map.102", %"class.std::__1::set.111", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type { %"class.fxcrt::RetainPtr.28", i64, i64, i64, %"class.fxcrt::WeakPtr", %"class.std::__1::vector", i64, i32, [257 x i8], i32, %"class.fxcrt::UnownedPtr" }
%"class.fxcrt::RetainPtr.28" = type { %"class.std::__1::unique_ptr.29" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.CPDF_ReadValidator* }
%class.CPDF_ReadValidator = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i8* }
%"class.fxcrt::UnownedPtr" = type { %"class.std::__1::vector.37"* }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.fxcrt::UnownedPtr.51" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr.55", %"class.std::__1::map.72" }
%"class.std::__1::map.72" = type { %"class.std::__1::__tree.73" }
%"class.std::__1::__tree.73" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.fxcrt::RetainPtr.84" = type { %"class.std::__1::unique_ptr.85" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.90" }
%"class.fxcrt::RetainPtr.90" = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.102" = type { %"class.std::__1::__tree.103" }
%"class.std::__1::__tree.103" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::set.111" = type { %"class.std::__1::__tree.112" }
%"class.std::__1::__tree.112" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.fxcrt::RetainPtr.55" = type { %"class.std::__1::unique_ptr.56" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map.59" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.std::__1::map.59" = type { %"class.std::__1::__tree.60" }
%"class.std::__1::__tree.60" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.124" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr.132" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { i32*, i32*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i32* }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.154" }
%"class.fxcrt::UnownedPtr.154" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%"class.std::__1::map.748" = type { %"class.std::__1::__tree.749" }
%"class.std::__1::__tree.749" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.750", %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.759" = type { %"class.std::__1::__tree.760" }
%"class.std::__1::__tree.760" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.761", %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%class.CPDF_DocPageData = type { %"class.CPDF_Document::PageDataIface", %"class.CPDF_Font::FormFactoryIface", i8, %"class.std::__1::map.776", %"class.std::__1::map.785", %"class.std::__1::map.794", %"class.std::__1::map.805", %"class.std::__1::map.814", %"class.std::__1::map.823", %"class.std::__1::map.832" }
%"class.CPDF_Font::FormFactoryIface" = type { i32 (...)** }
%"class.std::__1::map.776" = type { %"class.std::__1::__tree.777" }
%"class.std::__1::__tree.777" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.778", %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.785" = type { %"class.std::__1::__tree.786" }
%"class.std::__1::__tree.786" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.787", %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.794" = type { %"class.std::__1::__tree.795" }
%"class.std::__1::__tree.795" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.796", %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.805" = type { %"class.std::__1::__tree.806" }
%"class.std::__1::__tree.806" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.807", %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.814" = type { %"class.std::__1::__tree.815" }
%"class.std::__1::__tree.815" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.816", %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.823" = type { %"class.std::__1::__tree.824" }
%"class.std::__1::__tree.824" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.825", %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.832" = type { %"class.std::__1::__tree.833" }
%"class.std::__1::__tree.833" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.834", %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%class.CPDFXFA_Context = type { %"class.CPDF_Document::Extension", %class.IXFA_AppProvider, i32, i32, i32, %"class.fxcrt::UnownedPtr.132", %"class.std::__1::unique_ptr.161", %"class.fxcrt::ObservedPtr", %"class.std::__1::vector.236", %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.250", %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent.254", %"class.cppgc::internal::BasicPersistent.255" }
%class.IXFA_AppProvider = type { i32 (...)** }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %class.CFX_XMLDocument* }
%class.CFX_XMLDocument = type opaque
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %class.CPDFSDK_FormFillEnvironment* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%class.CPDFSDK_FormFillEnvironment = type { %"class.CFX_Timer::HandlerIface", %class.IPWL_SystemHandler, %"class.fxcrt::UnownedPtr.167", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.174", %"class.std::__1::map.180", %"class.std::__1::unique_ptr.191", %"class.fxcrt::ObservedPtr.197", %"class.fxcrt::UnownedPtr.132", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.223", i8, i8, %"class.std::__1::vector.229" }
%"class.CFX_Timer::HandlerIface" = type { i32 (...)**, %"class.fxcrt::Observable" }
%class.IPWL_SystemHandler = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.167" = type { %struct._FPDF_FORMFILLINFO* }
%struct._FPDF_FORMFILLINFO = type { i32, void (%struct._FPDF_FORMFILLINFO*)*, void (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_page_t__*, double, double, double, double)*, void (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_page_t__*, double, double, double, double)*, void (%struct._FPDF_FORMFILLINFO*, i32)*, i32 (%struct._FPDF_FORMFILLINFO*, i32, void (i32)*)*, void (%struct._FPDF_FORMFILLINFO*, i32)*, { i64, i64 } (%struct._FPDF_FORMFILLINFO*)*, void (%struct._FPDF_FORMFILLINFO*)*, %struct.fpdf_page_t__* (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_document_t__*, i32)*, %struct.fpdf_page_t__* (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_document_t__*)*, i32 (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_page_t__*)*, void (%struct._FPDF_FORMFILLINFO*, i8*)*, void (%struct._FPDF_FORMFILLINFO*, i16*, i64, i32)*, void (%struct._FPDF_FORMFILLINFO*, i8*)*, void (%struct._FPDF_FORMFILLINFO*, i32, i32, float*, i32)*, %struct._IPDF_JsPlatform*, i32, void (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_page_t__*, i32, double, double, double, double)*, i32 (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_document_t__*)*, void (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_document_t__*, i32)*, void (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_document_t__*, i16*)*, void (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_page_t__*, double*, double*, double*, double*)*, void (%struct._FPDF_FORMFILLINFO*, i32, i64)*, i32 (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_page_t__*, %struct.fpdf_widget_t__*, i32, float, float)*, %struct.FPDF_FILEHANDLER_* (%struct._FPDF_FORMFILLINFO*, i32, i16*, i8*)*, void (%struct._FPDF_FORMFILLINFO*, %struct.FPDF_FILEHANDLER_*, i16*, i16*, i16*, i16*, i16*)*, void (%struct._FPDF_FORMFILLINFO*, %struct.FPDF_FILEHANDLER_*, i32, i16*)*, i32 (%struct._FPDF_FORMFILLINFO*, i8*, i32)*, i32 (%struct._FPDF_FORMFILLINFO*, i8*, i32)*, %struct.FPDF_FILEHANDLER_* (%struct._FPDF_FORMFILLINFO*, i16*)*, i32 (%struct._FPDF_FORMFILLINFO*, i16*, i16*, i16*, i16*, i16*, %struct.FPDF_BSTR_*)*, i32 (%struct._FPDF_FORMFILLINFO*, i16*, i16*, i16*)*, void (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_annotation_t__*, i32)*, void (%struct._FPDF_FORMFILLINFO*, i8*, i32)* }
%struct.fpdf_page_t__ = type opaque
%struct._IPDF_JsPlatform = type { i32, i32 (%struct._IPDF_JsPlatform*, i16*, i16*, i32, i32)*, void (%struct._IPDF_JsPlatform*, i32)*, i32 (%struct._IPDF_JsPlatform*, i16*, i16*, i16*, i16*, i32, i8*, i32)*, i32 (%struct._IPDF_JsPlatform*, i8*, i32)*, void (%struct._IPDF_JsPlatform*, i8*, i32, i32, i16*, i16*, i16*, i16*, i16*)*, void (%struct._IPDF_JsPlatform*, i32, i32, i32, i32, i32, i32, i32, i32)*, void (%struct._IPDF_JsPlatform*, i8*, i32, i16*)*, void (%struct._IPDF_JsPlatform*, i32)*, i32 (%struct._IPDF_JsPlatform*, i8*, i32)*, i8*, i8*, i32 }
%struct.fpdf_widget_t__ = type opaque
%struct.FPDF_FILEHANDLER_ = type { i8*, void (i8*)*, i64 (i8*)*, i32 (i8*, i64, i8*, i64)*, i32 (i8*, i64, i8*, i64)*, i32 (i8*)*, i32 (i8*, i64)* }
%struct.FPDF_BSTR_ = type { i8*, i32 }
%struct.fpdf_annotation_t__ = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %class.CPDFSDK_ActionHandler* }
%class.CPDFSDK_ActionHandler = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %class.IJS_Runtime* }
%class.IJS_Runtime = type { i32 (...)** }
%"class.std::__1::map.180" = type { %"class.std::__1::__tree.181" }
%"class.std::__1::__tree.181" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %class.CPDFSDK_InteractiveForm* }
%class.CPDFSDK_InteractiveForm = type opaque
%"class.fxcrt::ObservedPtr.197" = type { %"class.fxcrt::Observable::ObserverIface", %class.CPDFSDK_Annot* }
%class.CPDFSDK_Annot = type { i32 (...)**, %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.198" }
%"class.fxcrt::UnownedPtr.198" = type { %class.CPDFSDK_PageView* }
%class.CPDFSDK_PageView = type <{ %"class.CPDF_Page::View", %class.CFX_Matrix, %"class.fxcrt::UnownedPtr.256", %"class.std::__1::unique_ptr.257", %"class.std::__1::vector.263", %"class.fxcrt::UnownedPtr.270", %"class.fxcrt::ObservedPtr.197", %"class.fxcrt::RetainPtr.271", i8, i8, i8, i8, [4 x i8] }>
%"class.CPDF_Page::View" = type { %"class.fxcrt::Observable" }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.fxcrt::UnownedPtr.256" = type { %class.IPDF_Page* }
%class.IPDF_Page = type { %"class.fxcrt::Retainable" }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %class.CPDF_AnnotList* }
%class.CPDF_AnnotList = type opaque
%"class.std::__1::vector.263" = type { %"class.std::__1::__vector_base.264" }
%"class.std::__1::__vector_base.264" = type { %class.CPDFSDK_Annot**, %class.CPDFSDK_Annot**, %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %class.CPDFSDK_Annot** }
%"class.fxcrt::UnownedPtr.270" = type { %class.CPDFSDK_FormFillEnvironment* }
%"class.fxcrt::RetainPtr.271" = type { %"class.std::__1::unique_ptr.272" }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %class.CPDF_Page* }
%class.CPDF_Page = type { %class.IPDF_Page, %class.CPDF_PageObjectHolder, %class.CFX_STemplate, %class.CFX_Matrix, %"class.fxcrt::UnownedPtr.132", %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.336", %"class.fxcrt::ObservedPtr.342" }
%class.CPDF_PageObjectHolder = type { i32 (...)**, %"class.fxcrt::RetainPtr.55", %"class.fxcrt::RetainPtr.55", %"class.std::__1::map.275", %"class.std::__1::map.286", %class.CFX_FloatRect, %class.CPDF_Transparency, i8, i8, %"class.fxcrt::RetainPtr.55", %"class.fxcrt::UnownedPtr.132", %"class.std::__1::vector.297", %"class.std::__1::unique_ptr.304", %"class.std::__1::deque", %class.CFX_Matrix, %"class.std::__1::set.320" }
%"class.std::__1::map.275" = type { %"class.std::__1::__tree.276" }
%"class.std::__1::__tree.276" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.277", %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.286" = type { %"class.std::__1::__tree.287" }
%"class.std::__1::__tree.287" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_Transparency = type { i8, i8 }
%"class.std::__1::vector.297" = type { %"class.std::__1::__vector_base.298" }
%"class.std::__1::__vector_base.298" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %class.CFX_FloatRect* }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %class.CPDF_ContentParser* }
%class.CPDF_ContentParser = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.316" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.310"**, %"class.std::__1::unique_ptr.310"**, %"class.std::__1::unique_ptr.310"**, %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr.568" }
%"class.fxcrt::RetainPtr.568" = type { %"class.std::__1::unique_ptr.569" }
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.572", %"class.std::__1::vector.580" }
%"class.std::__1::vector.572" = type { %"class.std::__1::__vector_base.573" }
%"class.std::__1::__vector_base.573" = type { %"struct.std::__1::pair.574"*, %"struct.std::__1::pair.574"*, %"class.std::__1::__compressed_pair.575" }
%"struct.std::__1::pair.574" = type opaque
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"struct.std::__1::pair.574"* }
%"class.std::__1::vector.580" = type { %"class.std::__1::__vector_base.581" }
%"class.std::__1::__vector_base.581" = type { %"class.std::__1::unique_ptr.582"*, %"class.std::__1::unique_ptr.582"*, %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::unique_ptr.582" = type opaque
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.std::__1::unique_ptr.582"* }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.590" }
%"class.fxcrt::SharedCopyOnWrite.590" = type { %"class.fxcrt::RetainPtr.591" }
%"class.fxcrt::RetainPtr.591" = type { %"class.std::__1::unique_ptr.592" }
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.595" }
%"class.std::__1::vector.595" = type { %"class.std::__1::__vector_base.596" }
%"class.std::__1::__vector_base.596" = type { float*, float*, %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.604" }
%"class.fxcrt::SharedCopyOnWrite.604" = type { %"class.fxcrt::RetainPtr.605" }
%"class.fxcrt::RetainPtr.605" = type { %"class.std::__1::unique_ptr.606" }
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.595", %"class.std::__1::unique_ptr.609", %"class.fxcrt::RetainPtr.621" }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %class.PatternValue* }
%class.PatternValue = type { %"class.fxcrt::RetainPtr.612", %"struct.std::__1::array" }
%"class.fxcrt::RetainPtr.612" = type { %"class.std::__1::unique_ptr.613" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %class.CPDF_Pattern* }
%class.CPDF_Pattern = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.132", %"class.fxcrt::RetainPtr.495", %class.CFX_Matrix, %class.CFX_Matrix }
%"class.fxcrt::RetainPtr.495" = type { %"class.std::__1::unique_ptr.496" }
%"class.std::__1::unique_ptr.496" = type { %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %class.CPDF_Object* }
%"struct.std::__1::array" = type { [16 x float] }
%"class.fxcrt::RetainPtr.621" = type { %"class.std::__1::unique_ptr.622" }
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.492", %"class.fxcrt::RetainPtr.625", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.492" = type { %class.CPDF_Document* }
%"class.fxcrt::RetainPtr.625" = type { %"class.std::__1::unique_ptr.626" }
%"class.std::__1::unique_ptr.626" = type { %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %class.CPDF_Array* }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.493", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector.493" = type { %"class.std::__1::__vector_base.494" }
%"class.std::__1::__vector_base.494" = type { %"class.fxcrt::RetainPtr.495"*, %"class.fxcrt::RetainPtr.495"*, %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.fxcrt::RetainPtr.495"* }
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.635" }
%"class.fxcrt::SharedCopyOnWrite.635" = type { %"class.fxcrt::RetainPtr.636" }
%"class.fxcrt::RetainPtr.636" = type { %"class.std::__1::unique_ptr.637" }
%"class.std::__1::unique_ptr.637" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.640", %"class.fxcrt::UnownedPtr.492", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.640" = type { %"class.std::__1::unique_ptr.641" }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %class.CPDF_Font* }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.132", %class.CFX_Font, %"class.std::__1::vector.679", %"class.fxcrt::RetainPtr.687", %"class.fxcrt::RetainPtr.55", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.699", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.644", %"class.fxcrt::RetainPtr.650", %"class.fxcrt::RetainPtr.666", %"class.std::__1::unique_ptr.672", %"class.std::__1::unique_ptr.349", %"class.std::__1::vector", %"class.pdfium::span.678", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.650" = type { %"class.std::__1::unique_ptr.651" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.654", %"class.fxcrt::RetainPtr.658" }
%"class.std::__1::unique_ptr.654" = type { %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.658" = type { %"class.std::__1::unique_ptr.659" }
%"class.std::__1::unique_ptr.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.666" = type { %"class.std::__1::unique_ptr.667" }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.672" = type { %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.pdfium::span.678" = type { %"class.fxcrt::UnownedPtr.472", i64 }
%"class.fxcrt::UnownedPtr.472" = type { i8* }
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.std::__1::unique_ptr.681"*, %"class.std::__1::unique_ptr.681"*, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::unique_ptr.681" = type opaque
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.std::__1::unique_ptr.681"* }
%"class.fxcrt::RetainPtr.687" = type { %"class.std::__1::unique_ptr.688" }
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned.471", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.528", %"class.fxcrt::RetainPtr.691" }
%"class.fxcrt::MaybeOwned.471" = type { %"class.std::__1::unique_ptr.349", %"class.fxcrt::UnownedPtr.472" }
%"class.fxcrt::RetainPtr.528" = type { %"class.std::__1::unique_ptr.529" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.691" = type { %"class.std::__1::unique_ptr.692" }
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr.55", %"class.std::__1::unique_ptr.349", %"class.fxcrt::RetainPtr" }
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.709" }
%"class.fxcrt::SharedCopyOnWrite.709" = type { %"class.fxcrt::RetainPtr.710" }
%"class.fxcrt::RetainPtr.710" = type { %"class.std::__1::unique_ptr.711" }
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.495", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.714", %"class.fxcrt::RetainPtr.720", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.714", %"class.fxcrt::RetainPtr.714", %"class.fxcrt::RetainPtr.714", float, float }
%"class.fxcrt::RetainPtr.720" = type { %"class.std::__1::unique_ptr.721" }
%"class.std::__1::unique_ptr.721" = type { %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%"class.fxcrt::RetainPtr.714" = type { %"class.std::__1::unique_ptr.715" }
%"class.std::__1::unique_ptr.715" = type { %"class.std::__1::__compressed_pair.716" }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %class.CPDF_Object* }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.728" }
%"class.fxcrt::RetainPtr.728" = type { %"class.std::__1::unique_ptr.729" }
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.732" }
%"class.std::__1::vector.732" = type { %"class.std::__1::__vector_base.733" }
%"class.std::__1::__vector_base.733" = type { %"class.fxcrt::RetainPtr.734"*, %"class.fxcrt::RetainPtr.734"*, %"class.std::__1::__compressed_pair.735" }
%"class.fxcrt::RetainPtr.734" = type opaque
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.fxcrt::RetainPtr.734"* }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.std::__1::unique_ptr.310"** }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::set.320" = type { %"class.std::__1::__tree.321" }
%"class.std::__1::__tree.321" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%class.CFX_STemplate = type { float, float }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.CPDF_Page::RenderCacheIface"* }
%"class.CPDF_Page::RenderCacheIface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.CPDF_Page::RenderContextIface"* }
%"class.CPDF_Page::RenderContextIface" = type { i32 (...)** }
%"class.fxcrt::ObservedPtr.342" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPDF_Page::View"* }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %class.CPDFSDK_AnnotHandlerMgr* }
%class.CPDFSDK_AnnotHandlerMgr = type { %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.214" }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %class.CPDFSDK_BAAnnotHandler* }
%class.CPDFSDK_BAAnnotHandler = type opaque
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %class.CPDFSDK_WidgetHandler* }
%class.CPDFSDK_WidgetHandler = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %class.IPDFSDK_AnnotHandler* }
%class.IPDFSDK_AnnotHandler = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %class.CFFL_InteractiveFormFiller* }
%class.CFFL_InteractiveFormFiller = type opaque
%"class.std::__1::vector.229" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { i32*, i32*, %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { i32* }
%"class.std::__1::vector.236" = type { %"class.std::__1::__vector_base.237" }
%"class.std::__1::__vector_base.237" = type { %"class.fxcrt::RetainPtr.238"*, %"class.fxcrt::RetainPtr.238"*, %"class.std::__1::__compressed_pair.239" }
%"class.fxcrt::RetainPtr.238" = type { %"class.std::__1::unique_ptr.361" }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %class.CPDFXFA_Page* }
%class.CPDFXFA_Page = type <{ %class.IPDF_Page, %"class.fxcrt::RetainPtr.271", %"class.fxcrt::UnownedPtr.132", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.fxcrt::RetainPtr.238"* }
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %class.CPDFXFA_DocEnvironment* }
%class.CPDFXFA_DocEnvironment = type opaque
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.cppgc::Heap"* }
%"class.cppgc::Heap" = type { i32 (...)** }
%"class.cppgc::internal::BasicPersistent" = type { %"class.cppgc::internal::PersistentBase" }
%"class.cppgc::internal::PersistentBase" = type { i8*, %"class.cppgc::internal::PersistentNode"* }
%"class.cppgc::internal::PersistentNode" = type { %union.anon, void (%"class.cppgc::Visitor"*, i8*)* }
%union.anon = type { i8* }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"class.cppgc::internal::BasicPersistent.254" = type { %"class.cppgc::internal::PersistentBase" }
%"class.cppgc::internal::BasicPersistent.255" = type { %"class.cppgc::internal::PersistentBase" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.352", i64 }
%"class.fxcrt::UnownedPtr.352" = type { i8* }
%class.CFX_ReadOnlyMemoryStream = type { %class.IFX_SeekableReadStream.base, %"class.std::__1::unique_ptr.349", %"class.pdfium::span", %"class.fxcrt::Retainable" }
%class.IFX_SeekableReadStream.base = type { %class.IFX_StreamWithSize }
%struct.FPDF_FILEACCESS = type { i64, i32 (i8*, i64, i8*, i64)*, i8* }
%class.CPDFSDK_CustomAccess = type { %class.IFX_SeekableReadStream.base, %struct.FPDF_FILEACCESS, %"class.fxcrt::Retainable" }
%class.CPDF_PageRenderCache = type <{ %"class.CPDF_Page::RenderCacheIface", %"class.fxcrt::UnownedPtr.369", %"class.std::__1::map.370", %"class.fxcrt::MaybeOwned", i32, i32, i8, [7 x i8] }>
%"class.fxcrt::UnownedPtr.369" = type { %class.CPDF_Page* }
%"class.std::__1::map.370" = type { %"class.std::__1::__tree.371" }
%"class.std::__1::__tree.371" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.381", %"class.fxcrt::UnownedPtr.387" }
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %class.CPDF_ImageCacheEntry* }
%class.CPDF_ImageCacheEntry = type opaque
%"class.fxcrt::UnownedPtr.387" = type { %class.CPDF_ImageCacheEntry* }
%struct._FS_RECTF_ = type { float, float, float, float }
%struct.fpdf_bitmap_t__ = type opaque
%"class.CPDF_Page::RenderContextClearer" = type { %"class.fxcrt::UnownedPtr.369" }
%"class.fxcrt::RetainPtr.426" = type { %"class.std::__1::unique_ptr.427" }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned.471" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr.426", %"class.std::__1::vector.465" }
%"class.std::__1::vector.465" = type { %"class.std::__1::__vector_base.466" }
%"class.std::__1::__vector_base.466" = type { i32*, i32*, %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%class.CPDF_PageRenderContext = type { %"class.CPDF_Page::RenderContextIface", %"class.std::__1::unique_ptr.394", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.423", %"class.std::__1::unique_ptr.441", %"class.std::__1::unique_ptr.456" }
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.CPDF_PageRenderContext::AnnotListIface"* }
%"class.CPDF_PageRenderContext::AnnotListIface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %class.CPDF_RenderOptions* }
%class.CPDF_RenderOptions = type { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", %"class.fxcrt::RetainPtr.403" }
%"struct.CPDF_RenderOptions::Options" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.CPDF_RenderOptions::ColorScheme" = type { i32, i32, i32, i32 }
%"class.fxcrt::RetainPtr.403" = type { %"class.std::__1::unique_ptr.404" }
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %class.CPDF_OCContext* }
%class.CPDF_OCContext = type { %"class.fxcrt::Retainable", %"class.fxcrt::UnownedPtr.132", i32, %"class.std::__1::map.407" }
%"class.std::__1::map.407" = type { %"class.std::__1::__tree.408" }
%"class.std::__1::__tree.408" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.409", %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr.426", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.432" }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %class.CPDF_RenderContext* }
%class.CPDF_RenderContext = type { %"class.fxcrt::UnownedPtr.132", %"class.fxcrt::RetainPtr.55", %"class.fxcrt::UnownedPtr.444", %"class.std::__1::vector.445" }
%"class.fxcrt::UnownedPtr.444" = type { %class.CPDF_PageRenderCache* }
%"class.std::__1::vector.445" = type { %"class.std::__1::__vector_base.446" }
%"class.std::__1::__vector_base.446" = type { %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"*, %"class.std::__1::__compressed_pair.448" }
%"class.CPDF_RenderContext::Layer" = type { %"class.fxcrt::UnownedPtr.447", %class.CFX_Matrix }
%"class.fxcrt::UnownedPtr.447" = type { %class.CPDF_PageObjectHolder* }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.CPDF_RenderContext::Layer"* }
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %class.CPDF_ProgressiveRenderer* }
%class.CPDF_ProgressiveRenderer = type opaque
%class.CFX_DefaultRenderDevice = type { %class.CFX_RenderDevice }
%struct.FPDF_COLORSCHEME_ = type { i64, i64, i64, i64 }
%class.CPDFSDK_PauseAdapter = type opaque
%struct._FS_MATRIX_ = type { float, float, float, float, float, float }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon.491 }
%struct.FS_SIZEF_ = type { float, float }
%class.CPDF_ViewerPreferences = type { %"class.fxcrt::UnownedPtr.492" }
%struct.fpdf_pagerange_t__ = type opaque
%"class.pdfium::Optional.506" = type { %"class.pdfium::internal::OptionalBase.507" }
%"class.pdfium::internal::OptionalBase.507" = type { %"struct.pdfium::internal::OptionalStorage.508" }
%"struct.pdfium::internal::OptionalStorage.508" = type { %"struct.pdfium::internal::OptionalStorageBase.509" }
%"struct.pdfium::internal::OptionalStorageBase.509" = type { i8, %union.anon.510 }
%union.anon.510 = type { %"class.fxcrt::ByteString" }
%class.CPDF_NameTree = type { %"class.fxcrt::RetainPtr.55" }
%struct.fpdf_dest_t__ = type opaque
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.517" }
%"class.fxcrt::RetainPtr.517" = type { %"class.std::__1::unique_ptr.518" }
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.fxcrt::StringDataTemplate.521"* }
%"class.fxcrt::StringDataTemplate.521" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CPDF_DictionaryLocker = type { %"class.fxcrt::RetainPtr.528" }
%"class.std::__1::vector.535" = type { %"class.std::__1::__vector_base.536" }
%"class.std::__1::__vector_base.536" = type { %"struct.(anonymous namespace)::XFAPacket"*, %"struct.(anonymous namespace)::XFAPacket"*, %"class.std::__1::__compressed_pair.537" }
%"struct.(anonymous namespace)::XFAPacket" = type { %"class.fxcrt::ByteString", %class.CPDF_Stream* }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"struct.(anonymous namespace)::XFAPacket"* }
%class.CPDF_String = type <{ %class.CPDF_Object, %"class.fxcrt::ByteString", i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN12_GLOBAL__N_121g_bLibraryInitializedE = internal unnamed_addr global i1 false, align 1
@.str = private unnamed_addr constant [9 x i8] c"AcroForm\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"XFA\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"NeedsRendering\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@__const.FPDF_PageToDevice.pos = private unnamed_addr constant { { { { i8, [3 x i8], %union.anon.491 } } } } { { { { i8, [3 x i8], %union.anon.491 } } } { { { i8, [3 x i8], %union.anon.491 } } { { i8, [3 x i8], %union.anon.491 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.491 { %class.CFX_PTemplate { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } } } } } }, align 4
@.str.4 = private unnamed_addr constant [8 x i8] c"Simplex\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"DuplexFlipShortEdge\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"DuplexFlipLongEdge\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"Dests\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"--no-expose-wasm --jitless\00", align 1
@_ZZ42FPDF_GetArrayBufferAllocatorSharedInstanceE9allocator = internal global %"class.pdfium::base::NoDestructor" zeroinitializer, align 8
@_ZGVZ42FPDF_GetArrayBufferAllocatorSharedInstanceE9allocator = internal global i64 0, align 8
@.str.9 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"obj\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"endobj\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"trailer\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"startxref\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"xref\00", align 1
@.str.15 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTV26CFX_V8ArrayBufferAllocator = external unnamed_addr constant { [8 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @FPDF_InitLibrary() local_unnamed_addr #0 {
  %1 = load i1, i1* @_ZN12_GLOBAL__N_121g_bLibraryInitializedE, align 1
  br i1 %1, label %3, label %2

2:                                                ; preds = %0
  tail call void @_Z30FXMEM_InitializePartitionAllocv() #17
  tail call void @_ZN12CFX_GEModule6CreateEPPKc(i8** null) #17
  tail call void @_ZN15CPDF_PageModule6CreateEv() #17
  tail call void @_Z18CPDFXFA_ModuleInitv() #17
  store i1 true, i1* @_ZN12_GLOBAL__N_121g_bLibraryInitializedE, align 1
  br label %3

3:                                                ; preds = %0, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FPDF_InitLibraryWithConfig(%struct.FPDF_LIBRARY_CONFIG_* readonly) local_unnamed_addr #0 {
  %2 = load i1, i1* @_ZN12_GLOBAL__N_121g_bLibraryInitializedE, align 1
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  tail call void @_Z30FXMEM_InitializePartitionAllocv() #17
  %4 = icmp eq %struct.FPDF_LIBRARY_CONFIG_* %0, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.FPDF_LIBRARY_CONFIG_, %struct.FPDF_LIBRARY_CONFIG_* %0, i64 0, i32 1
  %7 = load i8**, i8*** %6, align 8
  tail call void @_ZN12CFX_GEModule6CreateEPPKc(i8** %7) #17
  tail call void @_ZN15CPDF_PageModule6CreateEv() #17
  tail call void @_Z18CPDFXFA_ModuleInitv() #17
  %8 = getelementptr inbounds %struct.FPDF_LIBRARY_CONFIG_, %struct.FPDF_LIBRARY_CONFIG_* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 1
  br i1 %10, label %11, label %23

11:                                               ; preds = %5
  %12 = icmp eq i32 %9, 2
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.FPDF_LIBRARY_CONFIG_, %struct.FPDF_LIBRARY_CONFIG_* %0, i64 0, i32 4
  %15 = load i8*, i8** %14, align 8
  br label %16

16:                                               ; preds = %11, %13
  %17 = phi i8* [ %15, %13 ], [ null, %11 ]
  %18 = getelementptr inbounds %struct.FPDF_LIBRARY_CONFIG_, %struct.FPDF_LIBRARY_CONFIG_* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %struct.FPDF_LIBRARY_CONFIG_, %struct.FPDF_LIBRARY_CONFIG_* %0, i64 0, i32 2
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZN11IJS_Runtime10InitializeEjPvS0_(i32 %19, i8* %21, i8* %17) #17
  br label %23

22:                                               ; preds = %3
  tail call void @_ZN12CFX_GEModule6CreateEPPKc(i8** null) #17
  tail call void @_ZN15CPDF_PageModule6CreateEv() #17
  tail call void @_Z18CPDFXFA_ModuleInitv() #17
  br label %23

23:                                               ; preds = %22, %16, %5
  store i1 true, i1* @_ZN12_GLOBAL__N_121g_bLibraryInitializedE, align 1
  br label %24

24:                                               ; preds = %1, %23
  ret void
}

declare void @_Z30FXMEM_InitializePartitionAllocv() local_unnamed_addr #1

declare void @_ZN12CFX_GEModule6CreateEPPKc(i8**) local_unnamed_addr #1

declare void @_ZN15CPDF_PageModule6CreateEv() local_unnamed_addr #1

declare void @_Z18CPDFXFA_ModuleInitv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN11IJS_Runtime10InitializeEjPvS0_(i32, i8*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @FPDF_DestroyLibrary() local_unnamed_addr #0 {
  %1 = load i1, i1* @_ZN12_GLOBAL__N_121g_bLibraryInitializedE, align 1
  br i1 %1, label %2, label %3

2:                                                ; preds = %0
  tail call void @_Z21CPDFXFA_ModuleDestroyv() #17
  tail call void @_ZN15CPDF_PageModule7DestroyEv() #17
  tail call void @_ZN12CFX_GEModule7DestroyEv() #17
  tail call void @_ZN11IJS_Runtime7DestroyEv() #17
  store i1 false, i1* @_ZN12_GLOBAL__N_121g_bLibraryInitializedE, align 1
  br label %3

3:                                                ; preds = %0, %2
  ret void
}

declare void @_Z21CPDFXFA_ModuleDestroyv() local_unnamed_addr #1

declare void @_ZN15CPDF_PageModule7DestroyEv() local_unnamed_addr #1

declare void @_ZN12CFX_GEModule7DestroyEv() local_unnamed_addr #1

declare void @_ZN11IJS_Runtime7DestroyEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @FPDF_SetSandBoxPolicy(i64, i32) local_unnamed_addr #0 {
  tail call void @_Z19SetPDFSandboxPolicymi(i64 %0, i32 %1) #17
  ret void
}

declare void @_Z19SetPDFSandboxPolicymi(i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_document_t__* @FPDF_LoadDocument(i8*, i8*) local_unnamed_addr #0 {
  %3 = alloca %"class.fxcrt::RetainPtr", align 8
  %4 = bitcast %"class.fxcrt::RetainPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #17
  call void @_ZN22IFX_SeekableReadStream18CreateFromFilenameEPKc(%"class.fxcrt::RetainPtr"* nonnull sret %3, i8* %0) #17
  %5 = call fastcc %struct.fpdf_document_t__* @_ZN12_GLOBAL__N_116LoadDocumentImplERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEEPKc(%"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %3, i8* %1)
  %6 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %6, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %6, align 8
  %8 = icmp eq %class.IFX_SeekableReadStream* %7, null
  br i1 %8, label %30, label %9

9:                                                ; preds = %2
  %10 = bitcast %class.IFX_SeekableReadStream* %7 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -32
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %class.IFX_SeekableReadStream* %7 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i64 %19, -1
  store i64 %20, i64* %18, align 8
  %21 = icmp ne i64 %20, 0
  %22 = icmp eq i8* %16, null
  %23 = or i1 %22, %21
  br i1 %23, label %30, label %24

24:                                               ; preds = %9
  %25 = bitcast i8* %16 to %"class.fxcrt::Retainable"*
  %26 = bitcast i8* %16 to void (%"class.fxcrt::Retainable"*)***
  %27 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %27, i64 1
  %29 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %28, align 8
  call void %29(%"class.fxcrt::Retainable"* nonnull %25) #17
  br label %30

30:                                               ; preds = %2, %9, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #17
  ret %struct.fpdf_document_t__* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.fpdf_document_t__* @_ZN12_GLOBAL__N_116LoadDocumentImplERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEEPKc(%"class.fxcrt::RetainPtr"* dereferenceable(8), i8*) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %3, align 8
  %5 = icmp eq %class.IFX_SeekableReadStream* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_Z17ProcessParseErrorN11CPDF_Parser5ErrorE(i32 1) #17
  br label %25

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 64) #18
  %9 = bitcast i8* %8 to %class.CPDF_DocRenderData*
  tail call void @_ZN18CPDF_DocRenderDataC1Ev(%class.CPDF_DocRenderData* nonnull %9) #17
  %10 = tail call i8* @_Znwm(i64 200) #18
  %11 = bitcast i8* %10 to %class.CPDF_DocPageData*
  tail call void @_ZN16CPDF_DocPageDataC1Ev(%class.CPDF_DocPageData* nonnull %11) #17
  %12 = tail call i8* @_Znwm(i64 208) #18
  %13 = bitcast i8* %12 to %class.CPDF_Document*
  %14 = bitcast i8* %8 to %"class.CPDF_Document::RenderDataIface"*
  %15 = bitcast i8* %10 to %"class.CPDF_Document::PageDataIface"*
  tail call void @_ZN13CPDF_DocumentC1ENSt3__110unique_ptrINS_15RenderDataIfaceENS0_14default_deleteIS2_EEEENS1_INS_13PageDataIfaceENS3_IS6_EEEE(%class.CPDF_Document* nonnull %13, %"class.CPDF_Document::RenderDataIface"* nonnull %14, %"class.CPDF_Document::PageDataIface"* nonnull %15) #17
  %16 = tail call i32 @_ZN13CPDF_Document7LoadDocERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEEPKc(%class.CPDF_Document* nonnull %13, %"class.fxcrt::RetainPtr"* dereferenceable(8) %0, i8* %1) #17
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %7
  tail call void @_Z25ReportUnsupportedFeaturesPK13CPDF_Document(%class.CPDF_Document* nonnull %13) #17
  %19 = tail call %struct.fpdf_document_t__* @_Z28FPDFDocumentFromCPDFDocumentP13CPDF_Document(%class.CPDF_Document* nonnull %13) #17
  br label %25

20:                                               ; preds = %7
  tail call void @_Z17ProcessParseErrorN11CPDF_Parser5ErrorE(i32 %16) #17
  %21 = bitcast i8* %12 to void (%class.CPDF_Document*)***
  %22 = load void (%class.CPDF_Document*)**, void (%class.CPDF_Document*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.CPDF_Document*)*, void (%class.CPDF_Document*)** %22, i64 1
  %24 = load void (%class.CPDF_Document*)*, void (%class.CPDF_Document*)** %23, align 8
  tail call void %24(%class.CPDF_Document* nonnull %13) #17
  br label %25

25:                                               ; preds = %20, %18, %6
  %26 = phi %struct.fpdf_document_t__* [ null, %6 ], [ %19, %18 ], [ null, %20 ]
  ret %struct.fpdf_document_t__* %26
}

declare void @_ZN22IFX_SeekableReadStream18CreateFromFilenameEPKc(%"class.fxcrt::RetainPtr"* sret, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_GetFormType(%struct.fpdf_document_t__*) local_unnamed_addr #0 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %6 = icmp eq %class.CPDF_Document* %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %5, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %8, align 8
  %10 = icmp eq %class.CPDF_Dictionary* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #17
  %13 = call %class.CPDF_Dictionary* @_ZNK15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %9, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  %14 = icmp eq %class.CPDF_Dictionary* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)) #17
  %17 = call %class.CPDF_Object* @_ZNK15CPDF_Dictionary12GetObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %13, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  %18 = icmp eq %class.CPDF_Object* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #17
  %21 = call zeroext i1 @_ZNK15CPDF_Dictionary13GetBooleanForERKN5fxcrt10ByteStringEb(%class.CPDF_Dictionary* nonnull %9, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4, i1 zeroext false) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  %22 = select i1 %21, i32 2, i32 3
  br label %23

23:                                               ; preds = %7, %19, %15, %11, %1
  %24 = phi i32 [ 0, %1 ], [ 0, %7 ], [ 0, %11 ], [ %22, %19 ], [ 1, %15 ]
  ret i32 %24
}

declare %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__*) local_unnamed_addr #1

declare %class.CPDF_Dictionary* @_ZNK15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

declare %class.CPDF_Object* @_ZNK15CPDF_Dictionary12GetObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_Dictionary13GetBooleanForERKN5fxcrt10ByteStringEb(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_LoadXFA(%struct.fpdf_document_t__*) local_unnamed_addr #0 {
  %2 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %3 = icmp eq %class.CPDF_Document* %2, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %2, i64 0, i32 16, i32 0, i32 0, i32 0
  %6 = load %"class.CPDF_Document::Extension"*, %"class.CPDF_Document::Extension"** %5, align 8
  %7 = icmp eq %"class.CPDF_Document::Extension"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.CPDF_Document::Extension"* %6 to %class.CPDFXFA_Context*
  %10 = tail call zeroext i1 @_ZN15CPDFXFA_Context10LoadXFADocEv(%class.CPDFXFA_Context* nonnull %9) #17
  %11 = zext i1 %10 to i32
  br label %12

12:                                               ; preds = %8, %4, %1
  %13 = phi i32 [ 0, %1 ], [ %11, %8 ], [ 0, %4 ]
  ret i32 %13
}

declare zeroext i1 @_ZN15CPDFXFA_Context10LoadXFADocEv(%class.CPDFXFA_Context*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_document_t__* @FPDF_LoadMemDocument(i8*, i32, i8*) local_unnamed_addr #0 {
  %4 = alloca %"class.pdfium::span", align 8
  %5 = alloca %"class.fxcrt::RetainPtr", align 8
  %6 = bitcast %"class.fxcrt::RetainPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = sext i32 %1 to i64
  %8 = bitcast %"class.pdfium::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8)
  %9 = tail call i8* @_Znwm(i64 48) #18, !noalias !2
  %10 = bitcast i8* %9 to %class.CFX_ReadOnlyMemoryStream*
  %11 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %4, i64 0, i32 0, i32 0
  store i8* %0, i8** %11, align 8, !noalias !2
  %12 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %4, i64 0, i32 1
  store i64 %7, i64* %12, align 8, !noalias !2
  call void @_ZN24CFX_ReadOnlyMemoryStreamC1EN6pdfium4spanIKhEE(%class.CFX_ReadOnlyMemoryStream* nonnull %10, %"class.pdfium::span"* nonnull %4) #17, !noalias !2
  %13 = ptrtoint i8* %9 to i64
  %14 = getelementptr inbounds i8, i8* %9, i64 40
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !2
  %17 = add nsw i64 %16, 1
  store i64 %17, i64* %15, align 8, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8)
  %18 = bitcast %"class.fxcrt::RetainPtr"* %5 to i64*
  store i64 %13, i64* %18, align 8
  %19 = bitcast i8* %9 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr i8, i8* %20, i64 -32
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds i8, i8* %9, i64 %23
  %25 = getelementptr inbounds i8, i8* %24, i64 8
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = add nsw i64 %27, 1
  store i64 %28, i64* %26, align 8
  %29 = call fastcc %struct.fpdf_document_t__* @_ZN12_GLOBAL__N_116LoadDocumentImplERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEEPKc(%"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %5, i8* %2)
  %30 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %30, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %30, align 8
  %32 = icmp eq %class.IFX_SeekableReadStream* %31, null
  br i1 %32, label %54, label %33

33:                                               ; preds = %3
  %34 = bitcast %class.IFX_SeekableReadStream* %31 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr i8, i8* %35, i64 -32
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %class.IFX_SeekableReadStream* %31 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 %38
  %41 = getelementptr inbounds i8, i8* %40, i64 8
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %43, -1
  store i64 %44, i64* %42, align 8
  %45 = icmp ne i64 %44, 0
  %46 = icmp eq i8* %40, null
  %47 = or i1 %46, %45
  br i1 %47, label %54, label %48

48:                                               ; preds = %33
  %49 = bitcast i8* %40 to %"class.fxcrt::Retainable"*
  %50 = bitcast i8* %40 to void (%"class.fxcrt::Retainable"*)***
  %51 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, i64 1
  %53 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %52, align 8
  call void %53(%"class.fxcrt::Retainable"* nonnull %49) #17
  br label %54

54:                                               ; preds = %48, %33, %3
  %55 = getelementptr inbounds i8, i8* %9, i64 32
  %56 = load i64, i64* %15, align 8
  %57 = add nsw i64 %56, -1
  store i64 %57, i64* %15, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %65

59:                                               ; preds = %54
  %60 = bitcast i8* %55 to %"class.fxcrt::Retainable"*
  %61 = bitcast i8* %55 to void (%"class.fxcrt::Retainable"*)***
  %62 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %62, i64 1
  %64 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %63, align 8
  call void %64(%"class.fxcrt::Retainable"* nonnull %60) #17
  br label %65

65:                                               ; preds = %54, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  ret %struct.fpdf_document_t__* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_document_t__* @FPDF_LoadMemDocument64(i8*, i64, i8*) local_unnamed_addr #0 {
  %4 = alloca %"class.pdfium::span", align 8
  %5 = alloca %"class.fxcrt::RetainPtr", align 8
  %6 = bitcast %"class.fxcrt::RetainPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = bitcast %"class.pdfium::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %8 = tail call i8* @_Znwm(i64 48) #18, !noalias !5
  %9 = bitcast i8* %8 to %class.CFX_ReadOnlyMemoryStream*
  %10 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %4, i64 0, i32 0, i32 0
  store i8* %0, i8** %10, align 8, !noalias !5
  %11 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %4, i64 0, i32 1
  store i64 %1, i64* %11, align 8, !noalias !5
  call void @_ZN24CFX_ReadOnlyMemoryStreamC1EN6pdfium4spanIKhEE(%class.CFX_ReadOnlyMemoryStream* nonnull %9, %"class.pdfium::span"* nonnull %4) #17, !noalias !5
  %12 = ptrtoint i8* %8 to i64
  %13 = getelementptr inbounds i8, i8* %8, i64 40
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !5
  %16 = add nsw i64 %15, 1
  store i64 %16, i64* %14, align 8, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  %17 = bitcast %"class.fxcrt::RetainPtr"* %5 to i64*
  store i64 %12, i64* %17, align 8
  %18 = bitcast i8* %8 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr i8, i8* %19, i64 -32
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %8, i64 %22
  %24 = getelementptr inbounds i8, i8* %23, i64 8
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = add nsw i64 %26, 1
  store i64 %27, i64* %25, align 8
  %28 = call fastcc %struct.fpdf_document_t__* @_ZN12_GLOBAL__N_116LoadDocumentImplERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEEPKc(%"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %5, i8* %2)
  %29 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %29, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %29, align 8
  %31 = icmp eq %class.IFX_SeekableReadStream* %30, null
  br i1 %31, label %53, label %32

32:                                               ; preds = %3
  %33 = bitcast %class.IFX_SeekableReadStream* %30 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr i8, i8* %34, i64 -32
  %36 = bitcast i8* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %class.IFX_SeekableReadStream* %30 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 %37
  %40 = getelementptr inbounds i8, i8* %39, i64 8
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = icmp ne i64 %43, 0
  %45 = icmp eq i8* %39, null
  %46 = or i1 %45, %44
  br i1 %46, label %53, label %47

47:                                               ; preds = %32
  %48 = bitcast i8* %39 to %"class.fxcrt::Retainable"*
  %49 = bitcast i8* %39 to void (%"class.fxcrt::Retainable"*)***
  %50 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, i64 1
  %52 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, align 8
  call void %52(%"class.fxcrt::Retainable"* nonnull %48) #17
  br label %53

53:                                               ; preds = %47, %32, %3
  %54 = getelementptr inbounds i8, i8* %8, i64 32
  %55 = load i64, i64* %14, align 8
  %56 = add nsw i64 %55, -1
  store i64 %56, i64* %14, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %53
  %59 = bitcast i8* %54 to %"class.fxcrt::Retainable"*
  %60 = bitcast i8* %54 to void (%"class.fxcrt::Retainable"*)***
  %61 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %61, i64 1
  %63 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %62, align 8
  call void %63(%"class.fxcrt::Retainable"* nonnull %59) #17
  br label %64

64:                                               ; preds = %53, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  ret %struct.fpdf_document_t__* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_document_t__* @FPDF_LoadCustomDocument(%struct.FPDF_FILEACCESS*, i8*) local_unnamed_addr #0 {
  %3 = alloca %"class.fxcrt::RetainPtr", align 8
  %4 = icmp eq %struct.FPDF_FILEACCESS* %0, null
  br i1 %4, label %62, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.fxcrt::RetainPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = tail call i8* @_Znwm(i64 48) #18, !noalias !8
  %8 = bitcast i8* %7 to %class.CPDFSDK_CustomAccess*
  tail call void @_ZN20CPDFSDK_CustomAccessC1EP15FPDF_FILEACCESS(%class.CPDFSDK_CustomAccess* nonnull %8, %struct.FPDF_FILEACCESS* nonnull %0) #17, !noalias !8
  %9 = ptrtoint i8* %7 to i64
  %10 = getelementptr inbounds i8, i8* %7, i64 40
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !8
  %13 = add nsw i64 %12, 1
  store i64 %13, i64* %11, align 8, !noalias !8
  %14 = bitcast %"class.fxcrt::RetainPtr"* %3 to i64*
  store i64 %9, i64* %14, align 8
  %15 = bitcast i8* %7 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr i8, i8* %16, i64 -32
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %7, i64 %19
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = add nsw i64 %23, 1
  store i64 %24, i64* %22, align 8
  %25 = call fastcc %struct.fpdf_document_t__* @_ZN12_GLOBAL__N_116LoadDocumentImplERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEEPKc(%"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %3, i8* %1)
  %26 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %26, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %26, align 8
  %28 = icmp eq %class.IFX_SeekableReadStream* %27, null
  br i1 %28, label %50, label %29

29:                                               ; preds = %5
  %30 = bitcast %class.IFX_SeekableReadStream* %27 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr i8, i8* %31, i64 -32
  %33 = bitcast i8* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %class.IFX_SeekableReadStream* %27 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 %34
  %37 = getelementptr inbounds i8, i8* %36, i64 8
  %38 = bitcast i8* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = add nsw i64 %39, -1
  store i64 %40, i64* %38, align 8
  %41 = icmp ne i64 %40, 0
  %42 = icmp eq i8* %36, null
  %43 = or i1 %42, %41
  br i1 %43, label %50, label %44

44:                                               ; preds = %29
  %45 = bitcast i8* %36 to %"class.fxcrt::Retainable"*
  %46 = bitcast i8* %36 to void (%"class.fxcrt::Retainable"*)***
  %47 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %47, i64 1
  %49 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, align 8
  call void %49(%"class.fxcrt::Retainable"* nonnull %45) #17
  br label %50

50:                                               ; preds = %44, %29, %5
  %51 = getelementptr inbounds i8, i8* %7, i64 32
  %52 = load i64, i64* %11, align 8
  %53 = add nsw i64 %52, -1
  store i64 %53, i64* %11, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %50
  %56 = bitcast i8* %51 to %"class.fxcrt::Retainable"*
  %57 = bitcast i8* %51 to void (%"class.fxcrt::Retainable"*)***
  %58 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %58, i64 1
  %60 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %59, align 8
  call void %60(%"class.fxcrt::Retainable"* nonnull %56) #17
  br label %61

61:                                               ; preds = %50, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  br label %62

62:                                               ; preds = %2, %61
  %63 = phi %struct.fpdf_document_t__* [ %25, %61 ], [ null, %2 ]
  ret %struct.fpdf_document_t__* %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_GetFileVersion(%struct.fpdf_document_t__*, i32*) local_unnamed_addr #0 {
  %3 = icmp eq i32* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  store i32 0, i32* %1, align 4
  %5 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %6 = icmp eq %class.CPDF_Document* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %class.CPDF_Parser*, %class.CPDF_Parser** %8, align 8
  %10 = icmp eq %class.CPDF_Parser* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.CPDF_Parser, %class.CPDF_Parser* %9, i64 0, i32 7
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %1, align 4
  br label %14

14:                                               ; preds = %4, %7, %11, %2
  %15 = phi i32 [ 0, %2 ], [ 0, %4 ], [ 1, %11 ], [ 0, %7 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_DocumentHasValidCrossReferenceTable(%struct.fpdf_document_t__*) local_unnamed_addr #0 {
  %2 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %3 = icmp eq %class.CPDF_Document* %2, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %2, i64 0, i32 6
  %6 = load i8, i8* %5, align 8, !range !11
  %7 = zext i8 %6 to i32
  br label %8

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %1 ], [ %7, %4 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FPDF_GetDocPermissions(%struct.fpdf_document_t__*) local_unnamed_addr #0 {
  %2 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %3 = icmp eq %class.CPDF_Document* %2, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @_ZNK13CPDF_Document18GetUserPermissionsEv(%class.CPDF_Document* nonnull %2) #17
  %6 = zext i32 %5 to i64
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi i64 [ %6, %4 ], [ 0, %1 ]
  ret i64 %8
}

declare i32 @_ZNK13CPDF_Document18GetUserPermissionsEv(%class.CPDF_Document*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_GetSecurityHandlerRevision(%struct.fpdf_document_t__*) local_unnamed_addr #0 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %4 = icmp eq %class.CPDF_Document* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %class.CPDF_Parser*, %class.CPDF_Parser** %6, align 8
  %8 = icmp eq %class.CPDF_Parser* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = tail call %class.CPDF_Dictionary* @_ZNK11CPDF_Parser14GetEncryptDictEv(%class.CPDF_Parser* nonnull %7) #17
  %11 = icmp eq %class.CPDF_Dictionary* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #17
  %14 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %10, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  br label %15

15:                                               ; preds = %9, %12, %1, %5
  %16 = phi i32 [ -1, %5 ], [ -1, %1 ], [ %14, %12 ], [ -1, %9 ]
  ret i32 %16
}

declare %class.CPDF_Dictionary* @_ZNK11CPDF_Parser14GetEncryptDictEv(%class.CPDF_Parser*) local_unnamed_addr #1

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_GetPageCount(%struct.fpdf_document_t__*) local_unnamed_addr #0 {
  %2 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %3 = icmp eq %class.CPDF_Document* %2, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %2, i64 0, i32 16, i32 0, i32 0, i32 0
  %6 = load %"class.CPDF_Document::Extension"*, %"class.CPDF_Document::Extension"** %5, align 8
  %7 = icmp eq %"class.CPDF_Document::Extension"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.CPDF_Document::Extension"* %6 to i32 (%"class.CPDF_Document::Extension"*)***
  %10 = load i32 (%"class.CPDF_Document::Extension"*)**, i32 (%"class.CPDF_Document::Extension"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.CPDF_Document::Extension"*)*, i32 (%"class.CPDF_Document::Extension"*)** %10, i64 3
  %12 = load i32 (%"class.CPDF_Document::Extension"*)*, i32 (%"class.CPDF_Document::Extension"*)** %11, align 8
  %13 = tail call i32 %12(%"class.CPDF_Document::Extension"* nonnull %6) #17
  br label %16

14:                                               ; preds = %4
  %15 = tail call i32 @_ZNK13CPDF_Document12GetPageCountEv(%class.CPDF_Document* nonnull %2) #17
  br label %16

16:                                               ; preds = %8, %14, %1
  %17 = phi i32 [ 0, %1 ], [ %13, %8 ], [ %15, %14 ]
  ret i32 %17
}

declare i32 @_ZNK13CPDF_Document12GetPageCountEv(%class.CPDF_Document*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_page_t__* @FPDF_LoadPage(%struct.fpdf_document_t__*, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.fxcrt::RetainPtr.238", align 8
  %4 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %5 = icmp eq %class.CPDF_Document* %4, null
  %6 = icmp slt i32 %1, 0
  %7 = or i1 %6, %5
  br i1 %7, label %77, label %8

8:                                                ; preds = %2
  %9 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %10 = icmp eq %class.CPDF_Document* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %9, i64 0, i32 16, i32 0, i32 0, i32 0
  %13 = load %"class.CPDF_Document::Extension"*, %"class.CPDF_Document::Extension"** %12, align 8
  %14 = icmp eq %"class.CPDF_Document::Extension"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.CPDF_Document::Extension"* %13 to i32 (%"class.CPDF_Document::Extension"*)***
  %17 = load i32 (%"class.CPDF_Document::Extension"*)**, i32 (%"class.CPDF_Document::Extension"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.CPDF_Document::Extension"*)*, i32 (%"class.CPDF_Document::Extension"*)** %17, i64 3
  %19 = load i32 (%"class.CPDF_Document::Extension"*)*, i32 (%"class.CPDF_Document::Extension"*)** %18, align 8
  %20 = tail call i32 %19(%"class.CPDF_Document::Extension"* nonnull %13) #17
  br label %23

21:                                               ; preds = %11
  %22 = tail call i32 @_ZNK13CPDF_Document12GetPageCountEv(%class.CPDF_Document* nonnull %9) #17
  br label %23

23:                                               ; preds = %8, %15, %21
  %24 = phi i32 [ 0, %8 ], [ %20, %15 ], [ %22, %21 ]
  %25 = icmp sgt i32 %24, %1
  br i1 %25, label %26, label %77

26:                                               ; preds = %23
  %27 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %4, i64 0, i32 16, i32 0, i32 0, i32 0
  %28 = load %"class.CPDF_Document::Extension"*, %"class.CPDF_Document::Extension"** %27, align 8
  %29 = icmp eq %"class.CPDF_Document::Extension"* %28, null
  br i1 %29, label %51, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.CPDF_Document::Extension"* %28 to %class.CPDFXFA_Context*
  %32 = bitcast %"class.fxcrt::RetainPtr.238"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #17
  call void @_ZN15CPDFXFA_Context18GetOrCreateXFAPageEi(%"class.fxcrt::RetainPtr.238"* nonnull sret %3, %class.CPDFXFA_Context* nonnull %31, i32 %1) #17
  %33 = getelementptr inbounds %"class.fxcrt::RetainPtr.238", %"class.fxcrt::RetainPtr.238"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %class.CPDFXFA_Page*, %class.CPDFXFA_Page** %33, align 8
  store %class.CPDFXFA_Page* null, %class.CPDFXFA_Page** %33, align 8
  %35 = getelementptr inbounds %class.CPDFXFA_Page, %class.CPDFXFA_Page* %34, i64 0, i32 0
  %36 = call %struct.fpdf_page_t__* @_Z20FPDFPageFromIPDFPageP9IPDF_Page(%class.IPDF_Page* %35) #17
  %37 = load %class.CPDFXFA_Page*, %class.CPDFXFA_Page** %33, align 8
  store %class.CPDFXFA_Page* null, %class.CPDFXFA_Page** %33, align 8
  %38 = icmp eq %class.CPDFXFA_Page* %37, null
  br i1 %38, label %50, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %class.CPDFXFA_Page, %class.CPDFXFA_Page* %37, i64 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = add nsw i64 %41, -1
  store i64 %42, i64* %40, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %39
  %45 = getelementptr inbounds %class.CPDFXFA_Page, %class.CPDFXFA_Page* %37, i64 0, i32 0, i32 0
  %46 = bitcast %class.CPDFXFA_Page* %37 to void (%"class.fxcrt::Retainable"*)***
  %47 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %47, i64 1
  %49 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, align 8
  call void %49(%"class.fxcrt::Retainable"* nonnull %45) #17
  br label %50

50:                                               ; preds = %30, %39, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #17
  br label %77

51:                                               ; preds = %26
  %52 = tail call %class.CPDF_Dictionary* @_ZN13CPDF_Document17GetPageDictionaryEi(%class.CPDF_Document* nonnull %4, i32 %1) #17
  %53 = icmp eq %class.CPDF_Dictionary* %52, null
  br i1 %53, label %77, label %54

54:                                               ; preds = %51
  %55 = tail call i8* @_Znwm(i64 328) #18, !noalias !12
  %56 = bitcast i8* %55 to %class.CPDF_Page*
  tail call void @_ZN9CPDF_PageC1EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_Page* nonnull %56, %class.CPDF_Document* nonnull %4, %class.CPDF_Dictionary* nonnull %52) #17, !noalias !12
  %57 = getelementptr inbounds i8, i8* %55, i64 8
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %58, align 8, !noalias !12
  %60 = add nsw i64 %59, 1
  store i64 %60, i64* %58, align 8, !noalias !12
  %61 = tail call i8* @_Znwm(i64 72) #18
  %62 = bitcast i8* %61 to %class.CPDF_PageRenderCache*
  tail call void @_ZN20CPDF_PageRenderCacheC1EP9CPDF_Page(%class.CPDF_PageRenderCache* nonnull %62, %class.CPDF_Page* nonnull %56) #17
  %63 = ptrtoint i8* %61 to i64
  %64 = getelementptr inbounds i8, i8* %55, i64 296
  %65 = bitcast i8* %64 to %"class.CPDF_Page::RenderCacheIface"**
  %66 = load %"class.CPDF_Page::RenderCacheIface"*, %"class.CPDF_Page::RenderCacheIface"** %65, align 8
  %67 = bitcast i8* %64 to i64*
  store i64 %63, i64* %67, align 8
  %68 = icmp eq %"class.CPDF_Page::RenderCacheIface"* %66, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %54
  %70 = bitcast %"class.CPDF_Page::RenderCacheIface"* %66 to void (%"class.CPDF_Page::RenderCacheIface"*)***
  %71 = load void (%"class.CPDF_Page::RenderCacheIface"*)**, void (%"class.CPDF_Page::RenderCacheIface"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.CPDF_Page::RenderCacheIface"*)*, void (%"class.CPDF_Page::RenderCacheIface"*)** %71, i64 1
  %73 = load void (%"class.CPDF_Page::RenderCacheIface"*)*, void (%"class.CPDF_Page::RenderCacheIface"*)** %72, align 8
  tail call void %73(%"class.CPDF_Page::RenderCacheIface"* nonnull %66) #17
  br label %74

74:                                               ; preds = %54, %69
  tail call void @_ZN9CPDF_Page12ParseContentEv(%class.CPDF_Page* nonnull %56) #17
  %75 = bitcast i8* %55 to %class.IPDF_Page*
  %76 = tail call %struct.fpdf_page_t__* @_Z20FPDFPageFromIPDFPageP9IPDF_Page(%class.IPDF_Page* nonnull %75) #17
  br label %77

77:                                               ; preds = %74, %51, %50, %23, %2
  %78 = phi %struct.fpdf_page_t__* [ null, %2 ], [ null, %23 ], [ %36, %50 ], [ %76, %74 ], [ null, %51 ]
  ret %struct.fpdf_page_t__* %78
}

declare %struct.fpdf_page_t__* @_Z20FPDFPageFromIPDFPageP9IPDF_Page(%class.IPDF_Page*) local_unnamed_addr #1

declare void @_ZN15CPDFXFA_Context18GetOrCreateXFAPageEi(%"class.fxcrt::RetainPtr.238"* sret, %class.CPDFXFA_Context*, i32) local_unnamed_addr #1

declare %class.CPDF_Dictionary* @_ZN13CPDF_Document17GetPageDictionaryEi(%class.CPDF_Document*, i32) local_unnamed_addr #1

declare void @_ZN9CPDF_Page12ParseContentEv(%class.CPDF_Page*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @FPDF_GetPageWidthF(%struct.fpdf_page_t__*) local_unnamed_addr #0 {
  %2 = tail call %class.IPDF_Page* @_Z20IPDFPageFromFPDFPageP13fpdf_page_t__(%struct.fpdf_page_t__* %0) #17
  %3 = icmp eq %class.IPDF_Page* %2, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = bitcast %class.IPDF_Page* %2 to float (%class.IPDF_Page*)***
  %6 = load float (%class.IPDF_Page*)**, float (%class.IPDF_Page*)*** %5, align 8
  %7 = getelementptr inbounds float (%class.IPDF_Page*)*, float (%class.IPDF_Page*)** %6, i64 5
  %8 = load float (%class.IPDF_Page*)*, float (%class.IPDF_Page*)** %7, align 8
  %9 = tail call float %8(%class.IPDF_Page* nonnull %2) #17
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi float [ %9, %4 ], [ 0.000000e+00, %1 ]
  ret float %11
}

declare %class.IPDF_Page* @_Z20IPDFPageFromFPDFPageP13fpdf_page_t__(%struct.fpdf_page_t__*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @FPDF_GetPageWidth(%struct.fpdf_page_t__*) local_unnamed_addr #0 {
  %2 = tail call %class.IPDF_Page* @_Z20IPDFPageFromFPDFPageP13fpdf_page_t__(%struct.fpdf_page_t__* %0) #17
  %3 = icmp eq %class.IPDF_Page* %2, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %1
  %5 = bitcast %class.IPDF_Page* %2 to float (%class.IPDF_Page*)***
  %6 = load float (%class.IPDF_Page*)**, float (%class.IPDF_Page*)*** %5, align 8
  %7 = getelementptr inbounds float (%class.IPDF_Page*)*, float (%class.IPDF_Page*)** %6, i64 5
  %8 = load float (%class.IPDF_Page*)*, float (%class.IPDF_Page*)** %7, align 8
  %9 = tail call float %8(%class.IPDF_Page* nonnull %2) #17
  %10 = fpext float %9 to double
  br label %11

11:                                               ; preds = %1, %4
  %12 = phi double [ %10, %4 ], [ 0.000000e+00, %1 ]
  ret double %12
}

; Function Attrs: nounwind ssp uwtable
define hidden float @FPDF_GetPageHeightF(%struct.fpdf_page_t__*) local_unnamed_addr #0 {
  %2 = tail call %class.IPDF_Page* @_Z20IPDFPageFromFPDFPageP13fpdf_page_t__(%struct.fpdf_page_t__* %0) #17
  %3 = icmp eq %class.IPDF_Page* %2, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = bitcast %class.IPDF_Page* %2 to float (%class.IPDF_Page*)***
  %6 = load float (%class.IPDF_Page*)**, float (%class.IPDF_Page*)*** %5, align 8
  %7 = getelementptr inbounds float (%class.IPDF_Page*)*, float (%class.IPDF_Page*)** %6, i64 6
  %8 = load float (%class.IPDF_Page*)*, float (%class.IPDF_Page*)** %7, align 8
  %9 = tail call float %8(%class.IPDF_Page* nonnull %2) #17
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi float [ %9, %4 ], [ 0.000000e+00, %1 ]
  ret float %11
}

; Function Attrs: nounwind ssp uwtable
define hidden double @FPDF_GetPageHeight(%struct.fpdf_page_t__*) local_unnamed_addr #0 {
  %2 = tail call %class.IPDF_Page* @_Z20IPDFPageFromFPDFPageP13fpdf_page_t__(%struct.fpdf_page_t__* %0) #17
  %3 = icmp eq %class.IPDF_Page* %2, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %1
  %5 = bitcast %class.IPDF_Page* %2 to float (%class.IPDF_Page*)***
  %6 = load float (%class.IPDF_Page*)**, float (%class.IPDF_Page*)*** %5, align 8
  %7 = getelementptr inbounds float (%class.IPDF_Page*)*, float (%class.IPDF_Page*)** %6, i64 6
  %8 = load float (%class.IPDF_Page*)*, float (%class.IPDF_Page*)** %7, align 8
  %9 = tail call float %8(%class.IPDF_Page* nonnull %2) #17
  %10 = fpext float %9 to double
  br label %11

11:                                               ; preds = %1, %4
  %12 = phi double [ %10, %4 ], [ 0.000000e+00, %1 ]
  ret double %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_GetPageBoundingBox(%struct.fpdf_page_t__*, %struct._FS_RECTF_*) local_unnamed_addr #0 {
  %3 = icmp eq %struct._FS_RECTF_* %1, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = tail call %class.CPDF_Page* @_Z20CPDFPageFromFPDFPageP13fpdf_page_t__(%struct.fpdf_page_t__* %0) #17
  %6 = icmp eq %class.CPDF_Page* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %5, i64 0, i32 1, i32 5
  %9 = tail call { <2 x float>, <2 x float> } @_Z23FSRectFFromCFXFloatRectRK13CFX_FloatRect(%class.CFX_FloatRect* dereferenceable(16) %8) #17
  %10 = extractvalue { <2 x float>, <2 x float> } %9, 0
  %11 = extractvalue { <2 x float>, <2 x float> } %9, 1
  %12 = bitcast %struct._FS_RECTF_* %1 to <2 x float>*
  store <2 x float> %10, <2 x float>* %12, align 4
  %13 = getelementptr inbounds %struct._FS_RECTF_, %struct._FS_RECTF_* %1, i64 0, i32 2
  %14 = bitcast float* %13 to <2 x float>*
  store <2 x float> %11, <2 x float>* %14, align 4
  br label %15

15:                                               ; preds = %7, %4, %2
  %16 = phi i32 [ 0, %2 ], [ 1, %7 ], [ 0, %4 ]
  ret i32 %16
}

declare %class.CPDF_Page* @_Z20CPDFPageFromFPDFPageP13fpdf_page_t__(%struct.fpdf_page_t__*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_Z23FSRectFFromCFXFloatRectRK13CFX_FloatRect(%class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @FPDF_RenderPageBitmap(%struct.fpdf_bitmap_t__*, %struct.fpdf_page_t__*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %9 = alloca %"class.CPDF_Page::RenderContextClearer", align 8
  %10 = alloca %"class.fxcrt::RetainPtr.426", align 8
  %11 = alloca %"class.fxcrt::RetainPtr.426", align 8
  %12 = icmp eq %struct.fpdf_bitmap_t__* %0, null
  br i1 %12, label %88, label %13

13:                                               ; preds = %8
  %14 = tail call %class.CPDF_Page* @_Z20CPDFPageFromFPDFPageP13fpdf_page_t__(%struct.fpdf_page_t__* %1) #17
  %15 = icmp eq %class.CPDF_Page* %14, null
  br i1 %15, label %88, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 48) #18
  %18 = bitcast i8* %17 to %class.CPDF_PageRenderContext*
  tail call void @_ZN22CPDF_PageRenderContextC1Ev(%class.CPDF_PageRenderContext* nonnull %18) #17
  %19 = ptrtoint i8* %17 to i64
  %20 = bitcast %"class.CPDF_Page::RenderContextClearer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  %21 = getelementptr inbounds %"class.CPDF_Page::RenderContextClearer", %"class.CPDF_Page::RenderContextClearer"* %9, i64 0, i32 0, i32 0
  store %class.CPDF_Page* inttoptr (i64 -6148914691236517206 to %class.CPDF_Page*), %class.CPDF_Page** %21, align 8
  call void @_ZN9CPDF_Page20RenderContextClearerC1EPS_(%"class.CPDF_Page::RenderContextClearer"* nonnull %9, %class.CPDF_Page* nonnull %14) #17
  %22 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %14, i64 0, i32 6
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.CPDF_Page::RenderContextIface"*, %"class.CPDF_Page::RenderContextIface"** %23, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.336"* %22 to i64*
  store i64 %19, i64* %25, align 8
  %26 = icmp eq %"class.CPDF_Page::RenderContextIface"* %24, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %16
  %28 = bitcast %"class.CPDF_Page::RenderContextIface"* %24 to void (%"class.CPDF_Page::RenderContextIface"*)***
  %29 = load void (%"class.CPDF_Page::RenderContextIface"*)**, void (%"class.CPDF_Page::RenderContextIface"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.CPDF_Page::RenderContextIface"*)*, void (%"class.CPDF_Page::RenderContextIface"*)** %29, i64 1
  %31 = load void (%"class.CPDF_Page::RenderContextIface"*)*, void (%"class.CPDF_Page::RenderContextIface"*)** %30, align 8
  call void %31(%"class.CPDF_Page::RenderContextIface"* nonnull %24) #17
  br label %32

32:                                               ; preds = %16, %27
  %33 = call i8* @_Znwm(i64 64) #18
  %34 = bitcast i8* %33 to %class.CFX_DefaultRenderDevice*
  call void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice* nonnull %34) #17
  %35 = getelementptr inbounds i8, i8* %17, i64 24
  %36 = bitcast i8* %35 to %class.CFX_RenderDevice**
  %37 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %36, align 8
  %38 = bitcast i8* %35 to i8**
  store i8* %33, i8** %38, align 8
  %39 = icmp eq %class.CFX_RenderDevice* %37, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %32
  %41 = bitcast %class.CFX_RenderDevice* %37 to void (%class.CFX_RenderDevice*)***
  %42 = load void (%class.CFX_RenderDevice*)**, void (%class.CFX_RenderDevice*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.CFX_RenderDevice*)*, void (%class.CFX_RenderDevice*)** %42, i64 1
  %44 = load void (%class.CFX_RenderDevice*)*, void (%class.CFX_RenderDevice*)** %43, align 8
  call void %44(%class.CFX_RenderDevice* nonnull %37) #17
  br label %45

45:                                               ; preds = %32, %40
  %46 = bitcast %"class.fxcrt::RetainPtr.426"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #17
  %47 = getelementptr inbounds %"class.fxcrt::RetainPtr.426", %"class.fxcrt::RetainPtr.426"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %struct.fpdf_bitmap_t__* %0 to %class.CFX_DIBitmap*
  %49 = ptrtoint %struct.fpdf_bitmap_t__* %0 to i64
  %50 = bitcast %"class.fxcrt::RetainPtr.426"* %10 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %48, i64 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = add nsw i64 %52, 1
  store i64 %53, i64* %51, align 8
  %54 = and i32 %7, 16
  %55 = icmp ne i32 %54, 0
  %56 = bitcast %"class.fxcrt::RetainPtr.426"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #17
  %57 = bitcast %"class.fxcrt::RetainPtr.426"* %11 to i64*
  store i64 0, i64* %57, align 8
  %58 = call zeroext i1 @_ZN23CFX_DefaultRenderDevice6AttachERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS5_b(%class.CFX_DefaultRenderDevice* nonnull %34, %"class.fxcrt::RetainPtr.426"* nonnull dereferenceable(8) %10, i1 zeroext %55, %"class.fxcrt::RetainPtr.426"* nonnull dereferenceable(8) %11, i1 zeroext false) #17
  %59 = getelementptr inbounds %"class.fxcrt::RetainPtr.426", %"class.fxcrt::RetainPtr.426"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %59, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %59, align 8
  %61 = icmp eq %class.CFX_DIBitmap* %60, null
  br i1 %61, label %73, label %62

62:                                               ; preds = %45
  %63 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %60, i64 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = add nsw i64 %64, -1
  store i64 %65, i64* %63, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %62
  %68 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %60, i64 0, i32 0, i32 0
  %69 = bitcast %class.CFX_DIBitmap* %60 to void (%"class.fxcrt::Retainable"*)***
  %70 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %70, i64 1
  %72 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %71, align 8
  call void %72(%"class.fxcrt::Retainable"* nonnull %68) #17
  br label %73

73:                                               ; preds = %45, %62, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #17
  call void @_Z29CPDFSDK_RenderPageWithContextP22CPDF_PageRenderContextP9CPDF_PageiiiiiiPK17FPDF_COLORSCHEME_bP20CPDFSDK_PauseAdapter(%class.CPDF_PageRenderContext* nonnull %18, %class.CPDF_Page* nonnull %14, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, %struct.FPDF_COLORSCHEME_* null, i1 zeroext true, %class.CPDFSDK_PauseAdapter* null) #17
  %74 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %47, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %47, align 8
  %75 = icmp eq %class.CFX_DIBitmap* %74, null
  br i1 %75, label %87, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %74, i64 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %78, -1
  store i64 %79, i64* %77, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %76
  %82 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %74, i64 0, i32 0, i32 0
  %83 = bitcast %class.CFX_DIBitmap* %74 to void (%"class.fxcrt::Retainable"*)***
  %84 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %84, i64 1
  %86 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %85, align 8
  call void %86(%"class.fxcrt::Retainable"* nonnull %82) #17
  br label %87

87:                                               ; preds = %73, %76, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #17
  call void @_ZN9CPDF_Page20RenderContextClearerD1Ev(%"class.CPDF_Page::RenderContextClearer"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %88

88:                                               ; preds = %87, %13, %8
  ret void
}

declare void @_ZN9CPDF_Page20RenderContextClearerC1EPS_(%"class.CPDF_Page::RenderContextClearer"*, %class.CPDF_Page*) unnamed_addr #1

declare zeroext i1 @_ZN23CFX_DefaultRenderDevice6AttachERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS5_b(%class.CFX_DefaultRenderDevice*, %"class.fxcrt::RetainPtr.426"* dereferenceable(8), i1 zeroext, %"class.fxcrt::RetainPtr.426"* dereferenceable(8), i1 zeroext) local_unnamed_addr #1

declare void @_Z29CPDFSDK_RenderPageWithContextP22CPDF_PageRenderContextP9CPDF_PageiiiiiiPK17FPDF_COLORSCHEME_bP20CPDFSDK_PauseAdapter(%class.CPDF_PageRenderContext*, %class.CPDF_Page*, i32, i32, i32, i32, i32, i32, %struct.FPDF_COLORSCHEME_*, i1 zeroext, %class.CPDFSDK_PauseAdapter*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9CPDF_Page20RenderContextClearerD1Ev(%"class.CPDF_Page::RenderContextClearer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @FPDF_RenderPageBitmapWithMatrix(%struct.fpdf_bitmap_t__*, %struct.fpdf_page_t__*, %struct._FS_MATRIX_*, %struct._FS_RECTF_*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.CPDF_Page::RenderContextClearer", align 8
  %7 = alloca %"class.fxcrt::RetainPtr.426", align 8
  %8 = alloca %"class.fxcrt::RetainPtr.426", align 8
  %9 = alloca %class.CFX_FloatRect, align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %struct.FX_RECT*
  %12 = alloca %struct.FX_RECT, align 4
  %13 = alloca %class.CFX_Matrix, align 16
  %14 = alloca %class.CFX_Matrix, align 8
  %15 = icmp eq %struct.fpdf_bitmap_t__* %0, null
  br i1 %15, label %175, label %16

16:                                               ; preds = %5
  %17 = tail call %class.CPDF_Page* @_Z20CPDFPageFromFPDFPageP13fpdf_page_t__(%struct.fpdf_page_t__* %1) #17
  %18 = icmp eq %class.CPDF_Page* %17, null
  br i1 %18, label %175, label %19

19:                                               ; preds = %16
  %20 = tail call i8* @_Znwm(i64 48) #18
  %21 = bitcast i8* %20 to %class.CPDF_PageRenderContext*
  tail call void @_ZN22CPDF_PageRenderContextC1Ev(%class.CPDF_PageRenderContext* nonnull %21) #17
  %22 = ptrtoint i8* %20 to i64
  %23 = bitcast %"class.CPDF_Page::RenderContextClearer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #17
  %24 = getelementptr inbounds %"class.CPDF_Page::RenderContextClearer", %"class.CPDF_Page::RenderContextClearer"* %6, i64 0, i32 0, i32 0
  store %class.CPDF_Page* inttoptr (i64 -6148914691236517206 to %class.CPDF_Page*), %class.CPDF_Page** %24, align 8
  call void @_ZN9CPDF_Page20RenderContextClearerC1EPS_(%"class.CPDF_Page::RenderContextClearer"* nonnull %6, %class.CPDF_Page* nonnull %17) #17
  %25 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %17, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.CPDF_Page::RenderContextIface"*, %"class.CPDF_Page::RenderContextIface"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.336"* %25 to i64*
  store i64 %22, i64* %28, align 8
  %29 = icmp eq %"class.CPDF_Page::RenderContextIface"* %27, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %19
  %31 = bitcast %"class.CPDF_Page::RenderContextIface"* %27 to void (%"class.CPDF_Page::RenderContextIface"*)***
  %32 = load void (%"class.CPDF_Page::RenderContextIface"*)**, void (%"class.CPDF_Page::RenderContextIface"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.CPDF_Page::RenderContextIface"*)*, void (%"class.CPDF_Page::RenderContextIface"*)** %32, i64 1
  %34 = load void (%"class.CPDF_Page::RenderContextIface"*)*, void (%"class.CPDF_Page::RenderContextIface"*)** %33, align 8
  call void %34(%"class.CPDF_Page::RenderContextIface"* nonnull %27) #17
  br label %35

35:                                               ; preds = %19, %30
  %36 = call i8* @_Znwm(i64 64) #18
  %37 = bitcast i8* %36 to %class.CFX_DefaultRenderDevice*
  call void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice* nonnull %37) #17
  %38 = getelementptr inbounds i8, i8* %20, i64 24
  %39 = bitcast i8* %38 to %class.CFX_RenderDevice**
  %40 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %39, align 8
  %41 = bitcast i8* %38 to i8**
  store i8* %36, i8** %41, align 8
  %42 = icmp eq %class.CFX_RenderDevice* %40, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %35
  %44 = bitcast %class.CFX_RenderDevice* %40 to void (%class.CFX_RenderDevice*)***
  %45 = load void (%class.CFX_RenderDevice*)**, void (%class.CFX_RenderDevice*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.CFX_RenderDevice*)*, void (%class.CFX_RenderDevice*)** %45, i64 1
  %47 = load void (%class.CFX_RenderDevice*)*, void (%class.CFX_RenderDevice*)** %46, align 8
  call void %47(%class.CFX_RenderDevice* nonnull %40) #17
  br label %48

48:                                               ; preds = %35, %43
  %49 = bitcast %"class.fxcrt::RetainPtr.426"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #17
  %50 = getelementptr inbounds %"class.fxcrt::RetainPtr.426", %"class.fxcrt::RetainPtr.426"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %struct.fpdf_bitmap_t__* %0 to %class.CFX_DIBitmap*
  %52 = ptrtoint %struct.fpdf_bitmap_t__* %0 to i64
  %53 = bitcast %"class.fxcrt::RetainPtr.426"* %7 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %51, i64 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = add nsw i64 %55, 1
  store i64 %56, i64* %54, align 8
  %57 = and i32 %4, 16
  %58 = icmp ne i32 %57, 0
  %59 = bitcast %"class.fxcrt::RetainPtr.426"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #17
  %60 = bitcast %"class.fxcrt::RetainPtr.426"* %8 to i64*
  store i64 0, i64* %60, align 8
  %61 = call zeroext i1 @_ZN23CFX_DefaultRenderDevice6AttachERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS5_b(%class.CFX_DefaultRenderDevice* nonnull %37, %"class.fxcrt::RetainPtr.426"* nonnull dereferenceable(8) %7, i1 zeroext %58, %"class.fxcrt::RetainPtr.426"* nonnull dereferenceable(8) %8, i1 zeroext false) #17
  %62 = getelementptr inbounds %"class.fxcrt::RetainPtr.426", %"class.fxcrt::RetainPtr.426"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %62, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %62, align 8
  %64 = icmp eq %class.CFX_DIBitmap* %63, null
  br i1 %64, label %76, label %65

65:                                               ; preds = %48
  %66 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %63, i64 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = add nsw i64 %67, -1
  store i64 %68, i64* %66, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %65
  %71 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %63, i64 0, i32 0, i32 0
  %72 = bitcast %class.CFX_DIBitmap* %63 to void (%"class.fxcrt::Retainable"*)***
  %73 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %73, i64 1
  %75 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %74, align 8
  call void %75(%"class.fxcrt::Retainable"* nonnull %71) #17
  br label %76

76:                                               ; preds = %48, %65, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #17
  %77 = bitcast %class.CFX_FloatRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 16, i1 false) #17
  %78 = icmp eq %struct._FS_RECTF_* %3, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %9, i64 0, i32 2
  %81 = call { <2 x float>, <2 x float> } @_Z23CFXFloatRectFromFSRectFRK10_FS_RECTF_(%struct._FS_RECTF_* nonnull dereferenceable(16) %3) #17
  %82 = extractvalue { <2 x float>, <2 x float> } %81, 0
  %83 = extractvalue { <2 x float>, <2 x float> } %81, 1
  %84 = bitcast %class.CFX_FloatRect* %9 to <2 x float>*
  store <2 x float> %82, <2 x float>* %84, align 8
  %85 = bitcast float* %80 to <2 x float>*
  store <2 x float> %83, <2 x float>* %85, align 8
  br label %86

86:                                               ; preds = %76, %79
  %87 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #17
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %89 = call { i64, i64 } @_ZNK13CFX_FloatRect8ToFxRectEv(%class.CFX_FloatRect* nonnull %9) #17
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %91 = extractvalue { i64, i64 } %89, 0
  store i64 %91, i64* %90, align 8
  %92 = extractvalue { i64, i64 } %89, 1
  store i64 %92, i64* %88, align 8
  %93 = bitcast %struct.FX_RECT* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #17
  %94 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %12, i64 0, i32 0
  %95 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %12, i64 0, i32 1
  %96 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %12, i64 0, i32 2
  %97 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %12, i64 0, i32 3
  %98 = call float @_ZNK9CPDF_Page12GetPageWidthEv(%class.CPDF_Page* nonnull %17) #17
  %99 = fptosi float %98 to i32
  %100 = call float @_ZNK9CPDF_Page13GetPageHeightEv(%class.CPDF_Page* nonnull %17) #17
  %101 = fptosi float %100 to i32
  store i32 0, i32* %94, align 4
  store i32 0, i32* %95, align 4
  store i32 %99, i32* %96, align 4
  store i32 %101, i32* %97, align 4
  %102 = bitcast %class.CFX_Matrix* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #17
  %103 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 4
  %104 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 5
  %105 = bitcast %class.CFX_Matrix* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %105, i8 -1, i64 24, i1 false)
  call void @_ZNK9CPDF_Page16GetDisplayMatrixERK7FX_RECTi(%class.CFX_Matrix* nonnull sret %13, %class.CPDF_Page* nonnull %17, %struct.FX_RECT* nonnull dereferenceable(16) %12, i32 0) #17
  %106 = icmp eq %struct._FS_MATRIX_* %2, null
  br i1 %106, label %160, label %107

107:                                              ; preds = %86
  %108 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 0
  %109 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 3
  %110 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 2
  %111 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 1
  %112 = bitcast %class.CFX_Matrix* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #17
  call void @_Z21CFXMatrixFromFSMatrixRK11_FS_MATRIX_(%class.CFX_Matrix* nonnull sret %14, %struct._FS_MATRIX_* nonnull dereferenceable(24) %2) #17
  %113 = load float, float* %108, align 16, !noalias !15
  %114 = load float, float* %111, align 4, !noalias !15
  %115 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %14, i64 0, i32 2
  %116 = bitcast %class.CFX_Matrix* %14 to <2 x float>*
  %117 = load <2 x float>, <2 x float>* %116, align 8, !noalias !15
  %118 = shufflevector <2 x float> %117, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %119 = bitcast float* %115 to <2 x float>*
  %120 = load <2 x float>, <2 x float>* %119, align 8, !noalias !15
  %121 = shufflevector <2 x float> %120, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %122 = load float, float* %110, align 8, !noalias !15
  %123 = load float, float* %109, align 4, !noalias !15
  %124 = insertelement <4 x float> undef, float %113, i32 0
  %125 = shufflevector <4 x float> %124, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %126 = extractelement <2 x float> %117, i32 0
  %127 = extractelement <2 x float> %117, i32 1
  %128 = shufflevector <4 x float> %125, <4 x float> %118, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %129 = insertelement <4 x float> undef, float %126, i32 0
  %130 = insertelement <4 x float> %129, float %127, i32 1
  %131 = insertelement <4 x float> %130, float %122, i32 2
  %132 = insertelement <4 x float> %131, float %122, i32 3
  %133 = fmul <4 x float> %128, %132
  %134 = insertelement <4 x float> undef, float %114, i32 0
  %135 = shufflevector <4 x float> %134, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %136 = extractelement <2 x float> %120, i32 0
  %137 = extractelement <2 x float> %120, i32 1
  %138 = shufflevector <4 x float> %135, <4 x float> %121, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %139 = insertelement <4 x float> undef, float %136, i32 0
  %140 = insertelement <4 x float> %139, float %137, i32 1
  %141 = insertelement <4 x float> %140, float %123, i32 2
  %142 = insertelement <4 x float> %141, float %123, i32 3
  %143 = fmul <4 x float> %138, %142
  %144 = fadd <4 x float> %133, %143
  %145 = load float, float* %103, align 16, !noalias !15
  %146 = fmul float %126, %145
  %147 = load float, float* %104, align 4, !noalias !15
  %148 = fmul float %136, %147
  %149 = fadd float %146, %148
  %150 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %14, i64 0, i32 4
  %151 = load float, float* %150, align 8, !noalias !15
  %152 = fadd float %151, %149
  %153 = fmul float %127, %145
  %154 = fmul float %137, %147
  %155 = fadd float %153, %154
  %156 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %14, i64 0, i32 5
  %157 = load float, float* %156, align 4, !noalias !15
  %158 = fadd float %155, %157
  %159 = bitcast %class.CFX_Matrix* %13 to <4 x float>*
  store <4 x float> %144, <4 x float>* %159, align 16
  store float %152, float* %103, align 16
  store float %158, float* %104, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #17
  br label %160

160:                                              ; preds = %86, %107
  call void @_Z18CPDFSDK_RenderPageP22CPDF_PageRenderContextP9CPDF_PageRK10CFX_MatrixRK7FX_RECTiPK17FPDF_COLORSCHEME_(%class.CPDF_PageRenderContext* nonnull %21, %class.CPDF_Page* nonnull %17, %class.CFX_Matrix* nonnull dereferenceable(24) %13, %struct.FX_RECT* nonnull dereferenceable(16) %11, i32 %4, %struct.FPDF_COLORSCHEME_* null) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #17
  %161 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %50, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %50, align 8
  %162 = icmp eq %class.CFX_DIBitmap* %161, null
  br i1 %162, label %174, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %161, i64 0, i32 0, i32 0, i32 1
  %165 = load i64, i64* %164, align 8
  %166 = add nsw i64 %165, -1
  store i64 %166, i64* %164, align 8
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %174

168:                                              ; preds = %163
  %169 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %161, i64 0, i32 0, i32 0
  %170 = bitcast %class.CFX_DIBitmap* %161 to void (%"class.fxcrt::Retainable"*)***
  %171 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %170, align 8
  %172 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %171, i64 1
  %173 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %172, align 8
  call void %173(%"class.fxcrt::Retainable"* nonnull %169) #17
  br label %174

174:                                              ; preds = %160, %163, %168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #17
  call void @_ZN9CPDF_Page20RenderContextClearerD1Ev(%"class.CPDF_Page::RenderContextClearer"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #17
  br label %175

175:                                              ; preds = %174, %16, %5
  ret void
}

declare { <2 x float>, <2 x float> } @_Z23CFXFloatRectFromFSRectFRK10_FS_RECTF_(%struct._FS_RECTF_* dereferenceable(16)) local_unnamed_addr #1

declare { i64, i64 } @_ZNK13CFX_FloatRect8ToFxRectEv(%class.CFX_FloatRect*) local_unnamed_addr #1

declare float @_ZNK9CPDF_Page12GetPageWidthEv(%class.CPDF_Page*) unnamed_addr #1

declare float @_ZNK9CPDF_Page13GetPageHeightEv(%class.CPDF_Page*) unnamed_addr #1

declare void @_ZNK9CPDF_Page16GetDisplayMatrixERK7FX_RECTi(%class.CFX_Matrix* sret, %class.CPDF_Page*, %struct.FX_RECT* dereferenceable(16), i32) unnamed_addr #1

declare void @_Z21CFXMatrixFromFSMatrixRK11_FS_MATRIX_(%class.CFX_Matrix* sret, %struct._FS_MATRIX_* dereferenceable(24)) local_unnamed_addr #1

declare void @_Z18CPDFSDK_RenderPageP22CPDF_PageRenderContextP9CPDF_PageRK10CFX_MatrixRK7FX_RECTiPK17FPDF_COLORSCHEME_(%class.CPDF_PageRenderContext*, %class.CPDF_Page*, %class.CFX_Matrix* dereferenceable(24), %struct.FX_RECT* dereferenceable(16), i32, %struct.FPDF_COLORSCHEME_*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @FPDF_ClosePage(%struct.fpdf_page_t__*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.fpdf_page_t__* %0, null
  br i1 %2, label %79, label %3

3:                                                ; preds = %1
  %4 = tail call %class.IPDF_Page* @_Z20IPDFPageFromFPDFPageP13fpdf_page_t__(%struct.fpdf_page_t__* nonnull %0) #17
  %5 = bitcast %class.IPDF_Page* %4 to %class.CPDFXFA_Page* (%class.IPDF_Page*)***
  %6 = load %class.CPDFXFA_Page* (%class.IPDF_Page*)**, %class.CPDFXFA_Page* (%class.IPDF_Page*)*** %5, align 8
  %7 = getelementptr inbounds %class.CPDFXFA_Page* (%class.IPDF_Page*)*, %class.CPDFXFA_Page* (%class.IPDF_Page*)** %6, i64 3
  %8 = load %class.CPDFXFA_Page* (%class.IPDF_Page*)*, %class.CPDFXFA_Page* (%class.IPDF_Page*)** %7, align 8
  %9 = tail call %class.CPDFXFA_Page* %8(%class.IPDF_Page* %4) #17
  %10 = icmp eq %class.CPDFXFA_Page* %9, null
  br i1 %10, label %11, label %66

11:                                               ; preds = %3
  %12 = bitcast %class.IPDF_Page* %4 to %class.CPDF_Page* (%class.IPDF_Page*)***
  %13 = load %class.CPDF_Page* (%class.IPDF_Page*)**, %class.CPDF_Page* (%class.IPDF_Page*)*** %12, align 8
  %14 = getelementptr inbounds %class.CPDF_Page* (%class.IPDF_Page*)*, %class.CPDF_Page* (%class.IPDF_Page*)** %13, i64 2
  %15 = load %class.CPDF_Page* (%class.IPDF_Page*)*, %class.CPDF_Page* (%class.IPDF_Page*)** %14, align 8
  %16 = tail call %class.CPDF_Page* %15(%class.IPDF_Page* %4) #17
  %17 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %16, i64 0, i32 7, i32 1
  %18 = load %"class.CPDF_Page::View"*, %"class.CPDF_Page::View"** %17, align 8
  %19 = bitcast %"class.CPDF_Page::View"* %18 to %class.CPDFSDK_PageView*
  %20 = icmp eq %"class.CPDF_Page::View"* %18, null
  br i1 %20, label %66, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %class.CPDFSDK_PageView, %class.CPDFSDK_PageView* %19, i64 0, i32 11
  %23 = load i8, i8* %22, align 1, !range !11
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %66

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CPDFSDK_PageView, %class.CPDFSDK_PageView* %19, i64 0, i32 10
  %27 = load i8, i8* %26, align 2, !range !11
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %62, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.CPDF_Page::View", %"class.CPDF_Page::View"* %18, i64 2
  %31 = bitcast %"class.CPDF_Page::View"* %30 to %class.IPDF_Page**
  %32 = load %class.IPDF_Page*, %class.IPDF_Page** %31, align 8
  %33 = icmp eq %class.IPDF_Page* %32, null
  br i1 %33, label %45, label %34

34:                                               ; preds = %29
  %35 = bitcast %class.IPDF_Page* %32 to %class.CPDF_Page* (%class.IPDF_Page*)***
  %36 = load %class.CPDF_Page* (%class.IPDF_Page*)**, %class.CPDF_Page* (%class.IPDF_Page*)*** %35, align 8
  %37 = getelementptr inbounds %class.CPDF_Page* (%class.IPDF_Page*)*, %class.CPDF_Page* (%class.IPDF_Page*)** %36, i64 2
  %38 = load %class.CPDF_Page* (%class.IPDF_Page*)*, %class.CPDF_Page* (%class.IPDF_Page*)** %37, align 8
  %39 = tail call %class.CPDF_Page* %38(%class.IPDF_Page* nonnull %32) #17
  %40 = icmp eq %class.CPDF_Page* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %39, i64 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %43, 1
  store i64 %44, i64* %42, align 8
  br label %45

45:                                               ; preds = %41, %34, %29
  %46 = phi %class.CPDF_Page* [ %39, %41 ], [ null, %34 ], [ null, %29 ]
  %47 = getelementptr inbounds %"class.CPDF_Page::View", %"class.CPDF_Page::View"* %18, i64 4, i32 0, i32 0, i32 0, i32 2
  %48 = bitcast %"class.std::__1::__compressed_pair.4"* %47 to %class.CPDF_Page**
  %49 = load %class.CPDF_Page*, %class.CPDF_Page** %48, align 8
  store %class.CPDF_Page* %46, %class.CPDF_Page** %48, align 8
  %50 = icmp eq %class.CPDF_Page* %49, null
  br i1 %50, label %66, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %49, i64 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = add nsw i64 %53, -1
  store i64 %54, i64* %52, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %66

56:                                               ; preds = %51
  %57 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %49, i64 0, i32 0, i32 0
  %58 = bitcast %class.CPDF_Page* %49 to void (%"class.fxcrt::Retainable"*)***
  %59 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %59, i64 1
  %61 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %60, align 8
  tail call void %61(%"class.fxcrt::Retainable"* nonnull %57) #17
  br label %66

62:                                               ; preds = %25
  %63 = getelementptr inbounds %"class.CPDF_Page::View", %"class.CPDF_Page::View"* %18, i64 3, i32 0, i32 0, i32 0, i32 2
  %64 = bitcast %"class.std::__1::__compressed_pair.4"* %63 to %class.CPDFSDK_FormFillEnvironment**
  %65 = load %class.CPDFSDK_FormFillEnvironment*, %class.CPDFSDK_FormFillEnvironment** %64, align 8
  tail call void @_ZN27CPDFSDK_FormFillEnvironment14RemovePageViewEP9IPDF_Page(%class.CPDFSDK_FormFillEnvironment* %65, %class.IPDF_Page* %4) #17
  br label %66

66:                                               ; preds = %21, %56, %51, %45, %62, %11, %3
  %67 = icmp eq %class.IPDF_Page* %4, null
  br i1 %67, label %79, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %class.IPDF_Page, %class.IPDF_Page* %4, i64 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = add nsw i64 %70, -1
  store i64 %71, i64* %69, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %79

73:                                               ; preds = %68
  %74 = getelementptr inbounds %class.IPDF_Page, %class.IPDF_Page* %4, i64 0, i32 0
  %75 = bitcast %class.IPDF_Page* %4 to void (%"class.fxcrt::Retainable"*)***
  %76 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %76, i64 1
  %78 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %77, align 8
  tail call void %78(%"class.fxcrt::Retainable"* nonnull %74) #17
  br label %79

79:                                               ; preds = %73, %68, %66, %1
  ret void
}

declare void @_ZN27CPDFSDK_FormFillEnvironment14RemovePageViewEP9IPDF_Page(%class.CPDFSDK_FormFillEnvironment*, %class.IPDF_Page*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @FPDF_CloseDocument(%struct.fpdf_document_t__*) local_unnamed_addr #0 {
  %2 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %3 = icmp eq %class.CPDF_Document* %2, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = bitcast %class.CPDF_Document* %2 to void (%class.CPDF_Document*)***
  %6 = load void (%class.CPDF_Document*)**, void (%class.CPDF_Document*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.CPDF_Document*)*, void (%class.CPDF_Document*)** %6, i64 1
  %8 = load void (%class.CPDF_Document*)*, void (%class.CPDF_Document*)** %7, align 8
  tail call void %8(%class.CPDF_Document* nonnull %2) #17
  br label %9

9:                                                ; preds = %1, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FPDF_GetLastError() local_unnamed_addr #0 {
  %1 = tail call i32 @FXSYS_GetLastError() #17
  %2 = zext i32 %1 to i64
  ret i64 %2
}

declare i32 @FXSYS_GetLastError() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_DeviceToPage(%struct.fpdf_page_t__*, i32, i32, i32, i32, i32, i32, i32, double*, double*) local_unnamed_addr #0 {
  %11 = alloca %struct.FX_RECT, align 4
  %12 = alloca %"class.pdfium::Optional", align 4
  %13 = alloca %class.CFX_PTemplate, align 4
  %14 = icmp ne %struct.fpdf_page_t__* %0, null
  %15 = icmp ne double* %8, null
  %16 = and i1 %14, %15
  %17 = icmp ne double* %9, null
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %49

19:                                               ; preds = %10
  %20 = tail call %class.IPDF_Page* @_Z20IPDFPageFromFPDFPageP13fpdf_page_t__(%struct.fpdf_page_t__* nonnull %0) #17
  %21 = bitcast %struct.FX_RECT* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #17
  %22 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 0
  %23 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 1
  %24 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 2
  %25 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 3
  %26 = add nsw i32 %3, %1
  %27 = add nsw i32 %4, %2
  store i32 %1, i32* %22, align 4
  store i32 %2, i32* %23, align 4
  store i32 %26, i32* %24, align 4
  store i32 %27, i32* %25, align 4
  %28 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %28) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* align 4 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon.491 } } } }, { { { { i8, [3 x i8], %union.anon.491 } } } }* @__const.FPDF_PageToDevice.pos, i64 0, i32 0, i32 0, i32 0, i32 0), i64 12, i1 false)
  %29 = bitcast %class.CFX_PTemplate* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  %30 = sitofp i32 %6 to float
  %31 = sitofp i32 %7 to float
  %32 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %13, i64 0, i32 0
  store float %30, float* %32, align 4
  %33 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %13, i64 0, i32 1
  store float %31, float* %33, align 4
  %34 = bitcast %class.IPDF_Page* %20 to void (%"class.pdfium::Optional"*, %class.IPDF_Page*, %struct.FX_RECT*, i32, %class.CFX_PTemplate*)***
  %35 = load void (%"class.pdfium::Optional"*, %class.IPDF_Page*, %struct.FX_RECT*, i32, %class.CFX_PTemplate*)**, void (%"class.pdfium::Optional"*, %class.IPDF_Page*, %struct.FX_RECT*, i32, %class.CFX_PTemplate*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.pdfium::Optional"*, %class.IPDF_Page*, %struct.FX_RECT*, i32, %class.CFX_PTemplate*)*, void (%"class.pdfium::Optional"*, %class.IPDF_Page*, %struct.FX_RECT*, i32, %class.CFX_PTemplate*)** %35, i64 8
  %37 = load void (%"class.pdfium::Optional"*, %class.IPDF_Page*, %struct.FX_RECT*, i32, %class.CFX_PTemplate*)*, void (%"class.pdfium::Optional"*, %class.IPDF_Page*, %struct.FX_RECT*, i32, %class.CFX_PTemplate*)** %36, align 8
  call void %37(%"class.pdfium::Optional"* nonnull sret %12, %class.IPDF_Page* %20, %struct.FX_RECT* nonnull dereferenceable(16) %11, i32 %5, %class.CFX_PTemplate* nonnull dereferenceable(8) %13) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  %38 = load i8, i8* %28, align 4, !range !11
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %19
  %41 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %42 = load float, float* %41, align 4
  %43 = fpext float %42 to double
  store double %43, double* %8, align 8
  %44 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %45 = load float, float* %44, align 4
  %46 = fpext float %45 to double
  store double %46, double* %9, align 8
  br label %47

47:                                               ; preds = %19, %40
  %48 = phi i32 [ 1, %40 ], [ 0, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %28) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #17
  br label %49

49:                                               ; preds = %10, %47
  %50 = phi i32 [ %48, %47 ], [ 0, %10 ]
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_PageToDevice(%struct.fpdf_page_t__*, i32, i32, i32, i32, i32, double, double, i32*, i32*) local_unnamed_addr #0 {
  %11 = alloca %struct.FX_RECT, align 4
  %12 = alloca %class.CFX_PTemplate, align 4
  %13 = alloca %"class.pdfium::Optional", align 4
  %14 = icmp ne %struct.fpdf_page_t__* %0, null
  %15 = icmp ne i32* %8, null
  %16 = and i1 %14, %15
  %17 = icmp ne i32* %9, null
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %53

19:                                               ; preds = %10
  %20 = tail call %class.IPDF_Page* @_Z20IPDFPageFromFPDFPageP13fpdf_page_t__(%struct.fpdf_page_t__* nonnull %0) #17
  %21 = bitcast %struct.FX_RECT* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #17
  %22 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 0
  %23 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 1
  %24 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 2
  %25 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 3
  %26 = add nsw i32 %3, %1
  %27 = add nsw i32 %4, %2
  store i32 %1, i32* %22, align 4
  store i32 %2, i32* %23, align 4
  store i32 %26, i32* %24, align 4
  store i32 %27, i32* %25, align 4
  %28 = bitcast %class.CFX_PTemplate* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  %29 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %12, i64 0, i32 0
  %30 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %12, i64 0, i32 1
  %31 = fptrunc double %6 to float
  %32 = fptrunc double %7 to float
  store float %31, float* %29, align 4
  store float %32, float* %30, align 4
  %33 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %33) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon.491 } } } }, { { { { i8, [3 x i8], %union.anon.491 } } } }* @__const.FPDF_PageToDevice.pos, i64 0, i32 0, i32 0, i32 0, i32 0), i64 12, i1 false)
  %34 = bitcast %class.IPDF_Page* %20 to void (%"class.pdfium::Optional"*, %class.IPDF_Page*, %struct.FX_RECT*, i32, %class.CFX_PTemplate*)***
  %35 = load void (%"class.pdfium::Optional"*, %class.IPDF_Page*, %struct.FX_RECT*, i32, %class.CFX_PTemplate*)**, void (%"class.pdfium::Optional"*, %class.IPDF_Page*, %struct.FX_RECT*, i32, %class.CFX_PTemplate*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.pdfium::Optional"*, %class.IPDF_Page*, %struct.FX_RECT*, i32, %class.CFX_PTemplate*)*, void (%"class.pdfium::Optional"*, %class.IPDF_Page*, %struct.FX_RECT*, i32, %class.CFX_PTemplate*)** %35, i64 9
  %37 = load void (%"class.pdfium::Optional"*, %class.IPDF_Page*, %struct.FX_RECT*, i32, %class.CFX_PTemplate*)*, void (%"class.pdfium::Optional"*, %class.IPDF_Page*, %struct.FX_RECT*, i32, %class.CFX_PTemplate*)** %36, align 8
  call void %37(%"class.pdfium::Optional"* nonnull sret %13, %class.IPDF_Page* %20, %struct.FX_RECT* nonnull dereferenceable(16) %11, i32 %5, %class.CFX_PTemplate* nonnull dereferenceable(8) %12) #17
  %38 = load i8, i8* %33, align 4, !range !11
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %51, label %40

40:                                               ; preds = %19
  %41 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %42 = load float, float* %41, align 4
  %43 = call i32 @FXSYS_roundf(float %42) #17
  store i32 %43, i32* %8, align 4
  %44 = load i8, i8* %33, align 4, !range !11
  %45 = icmp eq i8 %44, 1
  br i1 %45, label %47, label %46, !prof !18

46:                                               ; preds = %40
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !19
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !20
  unreachable

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %49 = load float, float* %48, align 4
  %50 = call i32 @FXSYS_roundf(float %49) #17
  store i32 %50, i32* %9, align 4
  br label %51

51:                                               ; preds = %19, %47
  %52 = phi i32 [ 1, %47 ], [ 0, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %33) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #17
  br label %53

53:                                               ; preds = %10, %51
  %54 = phi i32 [ %52, %51 ], [ 0, %10 ]
  ret i32 %54
}

declare i32 @FXSYS_roundf(float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_bitmap_t__* @FPDFBitmap_Create(i32, i32, i32) local_unnamed_addr #0 {
  %4 = tail call i8* @_Znwm(i64 80) #18, !noalias !21
  %5 = bitcast i8* %4 to %class.CFX_DIBitmap*
  tail call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %5) #17, !noalias !21
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8, !noalias !21
  %9 = add nsw i64 %8, 1
  store i64 %9, i64* %7, align 8, !noalias !21
  %10 = icmp eq i32 %2, 0
  %11 = select i1 %10, i16 32, i16 544
  %12 = tail call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %5, i32 %0, i32 %1, i16 zeroext %11) #17
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast i8* %4 to %struct.fpdf_bitmap_t__*
  br label %25

15:                                               ; preds = %3
  %16 = load i64, i64* %7, align 8
  %17 = add nsw i64 %16, -1
  store i64 %17, i64* %7, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast i8* %4 to %"class.fxcrt::Retainable"*
  %21 = bitcast i8* %4 to void (%"class.fxcrt::Retainable"*)***
  %22 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %22, i64 1
  %24 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %23, align 8
  tail call void %24(%"class.fxcrt::Retainable"* nonnull %20) #17
  br label %25

25:                                               ; preds = %13, %15, %19
  %26 = phi %struct.fpdf_bitmap_t__* [ %14, %13 ], [ null, %15 ], [ null, %19 ]
  ret %struct.fpdf_bitmap_t__* %26
}

declare zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap*, i32, i32, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_bitmap_t__* @FPDFBitmap_CreateEx(i32, i32, i32, i8*, i32) local_unnamed_addr #0 {
  %6 = add i32 %2, -1
  %7 = icmp ult i32 %6, 4
  br i1 %7, label %8, label %32

8:                                                ; preds = %5
  %9 = zext i32 %6 to i64
  %10 = shl nuw nsw i64 %9, 4
  %11 = lshr i64 153122524771123208, %10
  %12 = trunc i64 %11 to i16
  %13 = tail call i8* @_Znwm(i64 80) #18, !noalias !24
  %14 = bitcast i8* %13 to %class.CFX_DIBitmap*
  tail call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %14) #17, !noalias !24
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !24
  %18 = add nsw i64 %17, 1
  store i64 %18, i64* %16, align 8, !noalias !24
  %19 = tail call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_FormatPhj(%class.CFX_DIBitmap* nonnull %14, i32 %0, i32 %1, i16 zeroext %12, i8* %3, i32 %4) #17
  br i1 %19, label %20, label %22

20:                                               ; preds = %8
  %21 = bitcast i8* %13 to %struct.fpdf_bitmap_t__*
  br label %32

22:                                               ; preds = %8
  %23 = load i64, i64* %16, align 8
  %24 = add nsw i64 %23, -1
  store i64 %24, i64* %16, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = bitcast i8* %13 to %"class.fxcrt::Retainable"*
  %28 = bitcast i8* %13 to void (%"class.fxcrt::Retainable"*)***
  %29 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %29, i64 1
  %31 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %30, align 8
  tail call void %31(%"class.fxcrt::Retainable"* nonnull %27) #17
  br label %32

32:                                               ; preds = %5, %26, %22, %20
  %33 = phi %struct.fpdf_bitmap_t__* [ null, %5 ], [ %21, %20 ], [ null, %22 ], [ null, %26 ]
  ret %struct.fpdf_bitmap_t__* %33
}

declare zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_FormatPhj(%class.CFX_DIBitmap*, i32, i32, i16 zeroext, i8*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @FPDFBitmap_GetFormat(%struct.fpdf_bitmap_t__* readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.fpdf_bitmap_t__* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.fpdf_bitmap_t__* %0 to %class.CFX_DIBBase*
  %5 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %4, i64 0, i32 1
  %6 = load i16, i16* %5, align 8
  switch i16 %6, label %10 [
    i16 8, label %11
    i16 264, label %11
    i16 24, label %7
    i16 32, label %8
    i16 544, label %9
  ]

7:                                                ; preds = %3
  br label %11

8:                                                ; preds = %3
  br label %11

9:                                                ; preds = %3
  br label %11

10:                                               ; preds = %3
  br label %11

11:                                               ; preds = %7, %8, %9, %10, %3, %3, %1
  %12 = phi i32 [ 0, %1 ], [ 0, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %3 ], [ 1, %3 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FPDFBitmap_FillRect(%struct.fpdf_bitmap_t__*, i32, i32, i32, i32, i64) local_unnamed_addr #0 {
  %7 = alloca %class.CFX_DefaultRenderDevice, align 8
  %8 = alloca %"class.fxcrt::RetainPtr.426", align 8
  %9 = alloca %"class.fxcrt::RetainPtr.426", align 8
  %10 = alloca %struct.FX_RECT, align 4
  %11 = icmp eq %struct.fpdf_bitmap_t__* %0, null
  br i1 %11, label %71, label %12

12:                                               ; preds = %6
  %13 = bitcast %class.CFX_DefaultRenderDevice* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 64, i1 false)
  call void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice* nonnull %7) #17
  %14 = bitcast %"class.fxcrt::RetainPtr.426"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.fxcrt::RetainPtr.426", %"class.fxcrt::RetainPtr.426"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %struct.fpdf_bitmap_t__* %0 to %class.CFX_DIBitmap*
  %17 = ptrtoint %struct.fpdf_bitmap_t__* %0 to i64
  %18 = bitcast %"class.fxcrt::RetainPtr.426"* %8 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %16, i64 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = bitcast %"class.fxcrt::RetainPtr.426"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  %23 = bitcast %"class.fxcrt::RetainPtr.426"* %9 to i64*
  store i64 0, i64* %23, align 8
  %24 = call zeroext i1 @_ZN23CFX_DefaultRenderDevice6AttachERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS5_b(%class.CFX_DefaultRenderDevice* nonnull %7, %"class.fxcrt::RetainPtr.426"* nonnull dereferenceable(8) %8, i1 zeroext false, %"class.fxcrt::RetainPtr.426"* nonnull dereferenceable(8) %9, i1 zeroext false) #17
  %25 = getelementptr inbounds %"class.fxcrt::RetainPtr.426", %"class.fxcrt::RetainPtr.426"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %25, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %25, align 8
  %27 = icmp eq %class.CFX_DIBitmap* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %12
  %29 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %26, i64 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i64 %30, -1
  store i64 %31, i64* %29, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %26, i64 0, i32 0, i32 0
  %35 = bitcast %class.CFX_DIBitmap* %26 to void (%"class.fxcrt::Retainable"*)***
  %36 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %36, i64 1
  %38 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %37, align 8
  call void %38(%"class.fxcrt::Retainable"* nonnull %34) #17
  br label %39

39:                                               ; preds = %12, %28, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #17
  %40 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %15, align 8
  %41 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %40, i64 0, i32 0, i32 1
  %42 = load i16, i16* %41, align 8
  %43 = and i16 %42, 512
  %44 = icmp eq i16 %43, 0
  %45 = or i64 %5, 4278190080
  %46 = select i1 %44, i64 %45, i64 %5
  %47 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %7, i64 0, i32 0
  %48 = bitcast %struct.FX_RECT* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #17
  %49 = add nsw i32 %3, %1
  %50 = add nsw i32 %4, %2
  %51 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %10, i64 0, i32 0
  store i32 %1, i32* %51, align 4
  %52 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %10, i64 0, i32 1
  store i32 %2, i32* %52, align 4
  %53 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %10, i64 0, i32 2
  store i32 %49, i32* %53, align 4
  %54 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %10, i64 0, i32 3
  store i32 %50, i32* %54, align 4
  %55 = trunc i64 %46 to i32
  %56 = call zeroext i1 @_ZN16CFX_RenderDevice17FillRectWithBlendERK7FX_RECTj9BlendMode(%class.CFX_RenderDevice* nonnull %47, %struct.FX_RECT* nonnull dereferenceable(16) %10, i32 %55, i32 0) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #17
  %57 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %15, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %15, align 8
  %58 = icmp eq %class.CFX_DIBitmap* %57, null
  br i1 %58, label %70, label %59

59:                                               ; preds = %39
  %60 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %57, i64 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = add nsw i64 %61, -1
  store i64 %62, i64* %60, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %59
  %65 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %57, i64 0, i32 0, i32 0
  %66 = bitcast %class.CFX_DIBitmap* %57 to void (%"class.fxcrt::Retainable"*)***
  %67 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %67, i64 1
  %69 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %68, align 8
  call void %69(%"class.fxcrt::Retainable"* nonnull %65) #17
  br label %70

70:                                               ; preds = %39, %59, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  call void @_ZN23CFX_DefaultRenderDeviceD1Ev(%class.CFX_DefaultRenderDevice* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #17
  br label %71

71:                                               ; preds = %6, %70
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN23CFX_DefaultRenderDeviceD1Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @FPDFBitmap_GetBuffer(%struct.fpdf_bitmap_t__*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.fpdf_bitmap_t__* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.fpdf_bitmap_t__* %0 to %class.CFX_DIBitmap*
  %5 = bitcast %struct.fpdf_bitmap_t__* %0 to i8* (%class.CFX_DIBitmap*)***
  %6 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %5, align 8
  %7 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %6, i64 2
  %8 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %7, align 8
  %9 = tail call i8* %8(%class.CFX_DIBitmap* nonnull %4) #17
  br label %10

10:                                               ; preds = %1, %3
  %11 = phi i8* [ %9, %3 ], [ null, %1 ]
  ret i8* %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @FPDFBitmap_GetWidth(%struct.fpdf_bitmap_t__* readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.fpdf_bitmap_t__* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.fpdf_bitmap_t__* %0 to %class.CFX_DIBBase*
  %5 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 0, %1 ]
  ret i32 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @FPDFBitmap_GetHeight(%struct.fpdf_bitmap_t__* readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.fpdf_bitmap_t__* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.fpdf_bitmap_t__* %0 to %class.CFX_DIBBase*
  %5 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 0, %1 ]
  ret i32 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @FPDFBitmap_GetStride(%struct.fpdf_bitmap_t__* readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.fpdf_bitmap_t__* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.fpdf_bitmap_t__* %0 to %class.CFX_DIBBase*
  %5 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %4, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 0, %1 ]
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FPDFBitmap_Destroy(%struct.fpdf_bitmap_t__*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.fpdf_bitmap_t__* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.fpdf_bitmap_t__* %0 to %class.CFX_DIBitmap*
  %5 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %4, i64 0, i32 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = add nsw i64 %6, -1
  store i64 %7, i64* %5, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  %10 = bitcast %struct.fpdf_bitmap_t__* %0 to %"class.fxcrt::Retainable"*
  %11 = bitcast %struct.fpdf_bitmap_t__* %0 to void (%"class.fxcrt::Retainable"*)***
  %12 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %12, i64 1
  %14 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, align 8
  tail call void %14(%"class.fxcrt::Retainable"* nonnull %10) #17
  br label %15

15:                                               ; preds = %1, %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_GetPageSizeByIndexF(%struct.fpdf_document_t__*, i32, %struct.FS_SIZEF_*) local_unnamed_addr #0 {
  %4 = alloca %"class.fxcrt::RetainPtr.238", align 8
  %5 = icmp eq %struct.FS_SIZEF_* %2, null
  br i1 %5, label %98, label %6

6:                                                ; preds = %3
  %7 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %8 = icmp eq %class.CPDF_Document* %7, null
  %9 = icmp slt i32 %1, 0
  %10 = or i1 %9, %8
  br i1 %10, label %98, label %11

11:                                               ; preds = %6
  %12 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %13 = icmp eq %class.CPDF_Document* %12, null
  br i1 %13, label %26, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %12, i64 0, i32 16, i32 0, i32 0, i32 0
  %16 = load %"class.CPDF_Document::Extension"*, %"class.CPDF_Document::Extension"** %15, align 8
  %17 = icmp eq %"class.CPDF_Document::Extension"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.CPDF_Document::Extension"* %16 to i32 (%"class.CPDF_Document::Extension"*)***
  %20 = load i32 (%"class.CPDF_Document::Extension"*)**, i32 (%"class.CPDF_Document::Extension"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.CPDF_Document::Extension"*)*, i32 (%"class.CPDF_Document::Extension"*)** %20, i64 3
  %22 = load i32 (%"class.CPDF_Document::Extension"*)*, i32 (%"class.CPDF_Document::Extension"*)** %21, align 8
  %23 = tail call i32 %22(%"class.CPDF_Document::Extension"* nonnull %16) #17
  br label %26

24:                                               ; preds = %14
  %25 = tail call i32 @_ZNK13CPDF_Document12GetPageCountEv(%class.CPDF_Document* nonnull %12) #17
  br label %26

26:                                               ; preds = %11, %18, %24
  %27 = phi i32 [ 0, %11 ], [ %23, %18 ], [ %25, %24 ]
  %28 = icmp sgt i32 %27, %1
  br i1 %28, label %29, label %98

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %7, i64 0, i32 16, i32 0, i32 0, i32 0
  %31 = load %"class.CPDF_Document::Extension"*, %"class.CPDF_Document::Extension"** %30, align 8
  %32 = icmp eq %"class.CPDF_Document::Extension"* %31, null
  br i1 %32, label %61, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.CPDF_Document::Extension"* %31 to %class.CPDFXFA_Context*
  %35 = bitcast %"class.fxcrt::RetainPtr.238"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #17
  %36 = getelementptr inbounds %"class.fxcrt::RetainPtr.238", %"class.fxcrt::RetainPtr.238"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDFXFA_Page* inttoptr (i64 -6148914691236517206 to %class.CPDFXFA_Page*), %class.CPDFXFA_Page** %36, align 8
  call void @_ZN15CPDFXFA_Context18GetOrCreateXFAPageEi(%"class.fxcrt::RetainPtr.238"* nonnull sret %4, %class.CPDFXFA_Context* nonnull %34, i32 %1) #17
  %37 = load %class.CPDFXFA_Page*, %class.CPDFXFA_Page** %36, align 8
  %38 = icmp eq %class.CPDFXFA_Page* %37, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %33
  store %class.CPDFXFA_Page* null, %class.CPDFXFA_Page** %36, align 8
  br label %59

40:                                               ; preds = %33
  %41 = call float @_ZNK12CPDFXFA_Page12GetPageWidthEv(%class.CPDFXFA_Page* nonnull %37) #17
  %42 = getelementptr inbounds %struct.FS_SIZEF_, %struct.FS_SIZEF_* %2, i64 0, i32 0
  store float %41, float* %42, align 4
  %43 = load %class.CPDFXFA_Page*, %class.CPDFXFA_Page** %36, align 8
  %44 = call float @_ZNK12CPDFXFA_Page13GetPageHeightEv(%class.CPDFXFA_Page* %43) #17
  %45 = getelementptr inbounds %struct.FS_SIZEF_, %struct.FS_SIZEF_* %2, i64 0, i32 1
  store float %44, float* %45, align 4
  %46 = load %class.CPDFXFA_Page*, %class.CPDFXFA_Page** %36, align 8
  store %class.CPDFXFA_Page* null, %class.CPDFXFA_Page** %36, align 8
  %47 = icmp eq %class.CPDFXFA_Page* %46, null
  br i1 %47, label %59, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %class.CPDFXFA_Page, %class.CPDFXFA_Page* %46, i64 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = add nsw i64 %50, -1
  store i64 %51, i64* %49, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %48
  %54 = getelementptr inbounds %class.CPDFXFA_Page, %class.CPDFXFA_Page* %46, i64 0, i32 0, i32 0
  %55 = bitcast %class.CPDFXFA_Page* %46 to void (%"class.fxcrt::Retainable"*)***
  %56 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %56, i64 1
  %58 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %57, align 8
  call void %58(%"class.fxcrt::Retainable"* nonnull %54) #17
  br label %59

59:                                               ; preds = %39, %40, %48, %53
  %60 = phi i32 [ 0, %39 ], [ 1, %40 ], [ 1, %48 ], [ 1, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #17
  br label %98

61:                                               ; preds = %29
  %62 = tail call %class.CPDF_Dictionary* @_ZN13CPDF_Document17GetPageDictionaryEi(%class.CPDF_Document* nonnull %7, i32 %1) #17
  %63 = icmp eq %class.CPDF_Dictionary* %62, null
  br i1 %63, label %98, label %64

64:                                               ; preds = %61
  %65 = tail call i8* @_Znwm(i64 328) #18, !noalias !27
  %66 = bitcast i8* %65 to %class.CPDF_Page*
  tail call void @_ZN9CPDF_PageC1EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_Page* nonnull %66, %class.CPDF_Document* nonnull %7, %class.CPDF_Dictionary* nonnull %62) #17, !noalias !27
  %67 = getelementptr inbounds i8, i8* %65, i64 8
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8, !noalias !27
  %70 = add nsw i64 %69, 1
  store i64 %70, i64* %68, align 8, !noalias !27
  %71 = tail call i8* @_Znwm(i64 72) #18
  %72 = bitcast i8* %71 to %class.CPDF_PageRenderCache*
  tail call void @_ZN20CPDF_PageRenderCacheC1EP9CPDF_Page(%class.CPDF_PageRenderCache* nonnull %72, %class.CPDF_Page* nonnull %66) #17
  %73 = ptrtoint i8* %71 to i64
  %74 = getelementptr inbounds i8, i8* %65, i64 296
  %75 = bitcast i8* %74 to %"class.CPDF_Page::RenderCacheIface"**
  %76 = load %"class.CPDF_Page::RenderCacheIface"*, %"class.CPDF_Page::RenderCacheIface"** %75, align 8
  %77 = bitcast i8* %74 to i64*
  store i64 %73, i64* %77, align 8
  %78 = icmp eq %"class.CPDF_Page::RenderCacheIface"* %76, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %64
  %80 = bitcast %"class.CPDF_Page::RenderCacheIface"* %76 to void (%"class.CPDF_Page::RenderCacheIface"*)***
  %81 = load void (%"class.CPDF_Page::RenderCacheIface"*)**, void (%"class.CPDF_Page::RenderCacheIface"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.CPDF_Page::RenderCacheIface"*)*, void (%"class.CPDF_Page::RenderCacheIface"*)** %81, i64 1
  %83 = load void (%"class.CPDF_Page::RenderCacheIface"*)*, void (%"class.CPDF_Page::RenderCacheIface"*)** %82, align 8
  tail call void %83(%"class.CPDF_Page::RenderCacheIface"* nonnull %76) #17
  br label %84

84:                                               ; preds = %64, %79
  %85 = tail call float @_ZNK9CPDF_Page12GetPageWidthEv(%class.CPDF_Page* nonnull %66) #17
  %86 = getelementptr inbounds %struct.FS_SIZEF_, %struct.FS_SIZEF_* %2, i64 0, i32 0
  store float %85, float* %86, align 4
  %87 = tail call float @_ZNK9CPDF_Page13GetPageHeightEv(%class.CPDF_Page* nonnull %66) #17
  %88 = getelementptr inbounds %struct.FS_SIZEF_, %struct.FS_SIZEF_* %2, i64 0, i32 1
  store float %87, float* %88, align 4
  %89 = load i64, i64* %68, align 8
  %90 = add nsw i64 %89, -1
  store i64 %90, i64* %68, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %98

92:                                               ; preds = %84
  %93 = bitcast i8* %65 to %"class.fxcrt::Retainable"*
  %94 = bitcast i8* %65 to void (%"class.fxcrt::Retainable"*)***
  %95 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %95, i64 1
  %97 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %96, align 8
  tail call void %97(%"class.fxcrt::Retainable"* nonnull %93) #17
  br label %98

98:                                               ; preds = %6, %26, %59, %92, %84, %61, %3
  %99 = phi i32 [ 0, %3 ], [ 0, %6 ], [ 0, %26 ], [ %60, %59 ], [ 0, %61 ], [ 1, %84 ], [ 1, %92 ]
  ret i32 %99
}

declare float @_ZNK12CPDFXFA_Page12GetPageWidthEv(%class.CPDFXFA_Page*) unnamed_addr #1

declare float @_ZNK12CPDFXFA_Page13GetPageHeightEv(%class.CPDFXFA_Page*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_GetPageSizeByIndex(%struct.fpdf_document_t__*, i32, double*, double*) local_unnamed_addr #0 {
  %5 = alloca %struct.FS_SIZEF_, align 4
  %6 = icmp ne double* %2, null
  %7 = icmp ne double* %3, null
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %22

9:                                                ; preds = %4
  %10 = bitcast %struct.FS_SIZEF_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  %11 = getelementptr inbounds %struct.FS_SIZEF_, %struct.FS_SIZEF_* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  %12 = getelementptr inbounds %struct.FS_SIZEF_, %struct.FS_SIZEF_* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %12, align 4
  %13 = call i32 @FPDF_GetPageSizeByIndexF(%struct.fpdf_document_t__* %0, i32 %1, %struct.FS_SIZEF_* nonnull %5)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  %16 = load float, float* %11, align 4
  %17 = fpext float %16 to double
  store double %17, double* %2, align 8
  %18 = load float, float* %12, align 4
  %19 = fpext float %18 to double
  store double %19, double* %3, align 8
  br label %20

20:                                               ; preds = %9, %15
  %21 = phi i32 [ 1, %15 ], [ 0, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  br label %22

22:                                               ; preds = %4, %20
  %23 = phi i32 [ %21, %20 ], [ 0, %4 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_VIEWERREF_GetPrintScaling(%struct.fpdf_document_t__*) local_unnamed_addr #0 {
  %2 = alloca %class.CPDF_ViewerPreferences, align 8
  %3 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %4 = icmp eq %class.CPDF_Document* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.CPDF_ViewerPreferences* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %class.CPDF_ViewerPreferences, %class.CPDF_ViewerPreferences* %2, i64 0, i32 0, i32 0
  store %class.CPDF_Document* inttoptr (i64 -6148914691236517206 to %class.CPDF_Document*), %class.CPDF_Document** %7, align 8
  call void @_ZN22CPDF_ViewerPreferencesC1EPK13CPDF_Document(%class.CPDF_ViewerPreferences* nonnull %2, %class.CPDF_Document* nonnull %3) #17
  %8 = call zeroext i1 @_ZNK22CPDF_ViewerPreferences12PrintScalingEv(%class.CPDF_ViewerPreferences* nonnull %2) #17
  %9 = zext i1 %8 to i32
  call void @_ZN22CPDF_ViewerPreferencesD1Ev(%class.CPDF_ViewerPreferences* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i32 [ %9, %5 ], [ 1, %1 ]
  ret i32 %11
}

declare void @_ZN22CPDF_ViewerPreferencesC1EPK13CPDF_Document(%class.CPDF_ViewerPreferences*, %class.CPDF_Document*) unnamed_addr #1

declare zeroext i1 @_ZNK22CPDF_ViewerPreferences12PrintScalingEv(%class.CPDF_ViewerPreferences*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN22CPDF_ViewerPreferencesD1Ev(%class.CPDF_ViewerPreferences*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_VIEWERREF_GetNumCopies(%struct.fpdf_document_t__*) local_unnamed_addr #0 {
  %2 = alloca %class.CPDF_ViewerPreferences, align 8
  %3 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %4 = icmp eq %class.CPDF_Document* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.CPDF_ViewerPreferences* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %class.CPDF_ViewerPreferences, %class.CPDF_ViewerPreferences* %2, i64 0, i32 0, i32 0
  store %class.CPDF_Document* inttoptr (i64 -6148914691236517206 to %class.CPDF_Document*), %class.CPDF_Document** %7, align 8
  call void @_ZN22CPDF_ViewerPreferencesC1EPK13CPDF_Document(%class.CPDF_ViewerPreferences* nonnull %2, %class.CPDF_Document* nonnull %3) #17
  %8 = call i32 @_ZNK22CPDF_ViewerPreferences9NumCopiesEv(%class.CPDF_ViewerPreferences* nonnull %2) #17
  call void @_ZN22CPDF_ViewerPreferencesD1Ev(%class.CPDF_ViewerPreferences* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i32 [ %8, %5 ], [ 1, %1 ]
  ret i32 %10
}

declare i32 @_ZNK22CPDF_ViewerPreferences9NumCopiesEv(%class.CPDF_ViewerPreferences*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_pagerange_t__* @FPDF_VIEWERREF_GetPrintPageRange(%struct.fpdf_document_t__*) local_unnamed_addr #0 {
  %2 = alloca %class.CPDF_ViewerPreferences, align 8
  %3 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %4 = icmp eq %class.CPDF_Document* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.CPDF_ViewerPreferences* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %class.CPDF_ViewerPreferences, %class.CPDF_ViewerPreferences* %2, i64 0, i32 0, i32 0
  store %class.CPDF_Document* inttoptr (i64 -6148914691236517206 to %class.CPDF_Document*), %class.CPDF_Document** %7, align 8
  call void @_ZN22CPDF_ViewerPreferencesC1EPK13CPDF_Document(%class.CPDF_ViewerPreferences* nonnull %2, %class.CPDF_Document* nonnull %3) #17
  %8 = call %class.CPDF_Array* @_ZNK22CPDF_ViewerPreferences14PrintPageRangeEv(%class.CPDF_ViewerPreferences* nonnull %2) #17
  %9 = bitcast %class.CPDF_Array* %8 to %struct.fpdf_pagerange_t__*
  call void @_ZN22CPDF_ViewerPreferencesD1Ev(%class.CPDF_ViewerPreferences* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.fpdf_pagerange_t__* [ %9, %5 ], [ null, %1 ]
  ret %struct.fpdf_pagerange_t__* %11
}

declare %class.CPDF_Array* @_ZNK22CPDF_ViewerPreferences14PrintPageRangeEv(%class.CPDF_ViewerPreferences*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @FPDF_VIEWERREF_GetPrintPageRangeCount(%struct.fpdf_pagerange_t__* readonly) local_unnamed_addr #4 {
  %2 = bitcast %struct.fpdf_pagerange_t__* %0 to %class.CPDF_Array*
  %3 = icmp eq %struct.fpdf_pagerange_t__* %0, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %2, i64 0, i32 1
  %6 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %2, i64 0, i32 1, i32 0, i32 1
  %7 = bitcast %"class.fxcrt::RetainPtr.495"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.493"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  br label %13

13:                                               ; preds = %1, %4
  %14 = phi i64 [ %12, %4 ], [ 0, %1 ]
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_VIEWERREF_GetPrintPageRangeElement(%struct.fpdf_pagerange_t__*, i64) local_unnamed_addr #0 {
  %3 = bitcast %struct.fpdf_pagerange_t__* %0 to %class.CPDF_Array*
  %4 = icmp eq %struct.fpdf_pagerange_t__* %0, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %3, i64 0, i32 1
  %7 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %3, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.fxcrt::RetainPtr.495"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.493"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ugt i64 %13, %1
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = tail call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %3, i64 %1) #17
  br label %17

17:                                               ; preds = %2, %5, %15
  %18 = phi i32 [ %16, %15 ], [ -1, %5 ], [ -1, %2 ]
  ret i32 %18
}

declare i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_VIEWERREF_GetDuplex(%struct.fpdf_document_t__*) local_unnamed_addr #0 {
  %2 = alloca %class.CPDF_ViewerPreferences, align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %5 = icmp eq %class.CPDF_Document* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.CPDF_ViewerPreferences* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  %8 = getelementptr inbounds %class.CPDF_ViewerPreferences, %class.CPDF_ViewerPreferences* %2, i64 0, i32 0, i32 0
  store %class.CPDF_Document* inttoptr (i64 -6148914691236517206 to %class.CPDF_Document*), %class.CPDF_Document** %8, align 8
  call void @_ZN22CPDF_ViewerPreferencesC1EPK13CPDF_Document(%class.CPDF_ViewerPreferences* nonnull %2, %class.CPDF_Document* nonnull %4) #17
  %9 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %10, align 8
  call void @_ZNK22CPDF_ViewerPreferences6DuplexEv(%"class.fxcrt::ByteString"* nonnull sret %3, %class.CPDF_ViewerPreferences* nonnull %2) #17
  %11 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)) #17
  br i1 %11, label %17, label %12

12:                                               ; preds = %6
  %13 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0)) #17
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #17
  %16 = select i1 %15, i32 3, i32 0
  br label %17

17:                                               ; preds = %14, %12, %6
  %18 = phi i32 [ 1, %6 ], [ 2, %12 ], [ %16, %14 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  call void @_ZN22CPDF_ViewerPreferencesD1Ev(%class.CPDF_ViewerPreferences* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  br label %19

19:                                               ; preds = %1, %17
  %20 = phi i32 [ %18, %17 ], [ 0, %1 ]
  ret i32 %20
}

declare void @_ZNK22CPDF_ViewerPreferences6DuplexEv(%"class.fxcrt::ByteString"* sret, %class.CPDF_ViewerPreferences*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FPDF_VIEWERREF_GetName(%struct.fpdf_document_t__*, i8*, i8*, i64) local_unnamed_addr #0 {
  %5 = alloca %class.CPDF_ViewerPreferences, align 8
  %6 = alloca %"class.pdfium::Optional.506", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %9 = icmp eq %class.CPDF_Document* %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %4
  %11 = bitcast %class.CPDF_ViewerPreferences* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %12 = getelementptr inbounds %class.CPDF_ViewerPreferences, %class.CPDF_ViewerPreferences* %5, i64 0, i32 0, i32 0
  store %class.CPDF_Document* inttoptr (i64 -6148914691236517206 to %class.CPDF_Document*), %class.CPDF_Document** %12, align 8
  call void @_ZN22CPDF_ViewerPreferencesC1EPK13CPDF_Document(%class.CPDF_ViewerPreferences* nonnull %5, %class.CPDF_Document* nonnull %8) #17
  %13 = getelementptr inbounds %"class.pdfium::Optional.506", %"class.pdfium::Optional.506"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* %1) #17
  call void @_ZNK22CPDF_ViewerPreferences11GenericNameERKN5fxcrt10ByteStringE(%"class.pdfium::Optional.506"* nonnull sret %6, %class.CPDF_ViewerPreferences* nonnull %5, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %15 = load i8, i8* %13, align 8, !range !11
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.pdfium::Optional.506", %"class.pdfium::Optional.506"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = call i64 @_Z36NulTerminateMaybeCopyAndReturnLengthRKN5fxcrt10ByteStringEPvm(%"class.fxcrt::ByteString"* dereferenceable(8) %18, i8* %2, i64 %3) #17
  %20 = load i8, i8* %13, align 8, !range !11
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.pdfium::Optional.506", %"class.pdfium::Optional.506"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %23) #17
  br label %24

24:                                               ; preds = %10, %17, %22
  %25 = phi i64 [ %19, %17 ], [ %19, %22 ], [ 0, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #17
  call void @_ZN22CPDF_ViewerPreferencesD1Ev(%class.CPDF_ViewerPreferences* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  br label %26

26:                                               ; preds = %4, %24
  %27 = phi i64 [ %25, %24 ], [ 0, %4 ]
  ret i64 %27
}

declare void @_ZNK22CPDF_ViewerPreferences11GenericNameERKN5fxcrt10ByteStringE(%"class.pdfium::Optional.506"* sret, %class.CPDF_ViewerPreferences*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare i64 @_Z36NulTerminateMaybeCopyAndReturnLengthRKN5fxcrt10ByteStringEPvm(%"class.fxcrt::ByteString"* dereferenceable(8), i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FPDF_CountNamedDests(%struct.fpdf_document_t__*) local_unnamed_addr #0 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %5 = icmp eq %class.CPDF_Document* %4, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %7, align 8
  %9 = icmp eq %class.CPDF_Dictionary* %8, null
  br i1 %9, label %44, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)) #17
  %12 = call %class.CPDF_NameTree* @_ZN13CPDF_NameTree6CreateEP13CPDF_DocumentRKN5fxcrt10ByteStringE(%class.CPDF_Document* nonnull %4, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  %13 = icmp eq %class.CPDF_NameTree* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = call i64 @_ZNK13CPDF_NameTree8GetCountEv(%class.CPDF_NameTree* nonnull %12) #17
  br label %16

16:                                               ; preds = %10, %14
  %17 = phi i64 [ %15, %14 ], [ 0, %10 ]
  %18 = icmp ult i64 %17, 4294967296
  %19 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)) #17
  %20 = call %class.CPDF_Dictionary* @_ZNK15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %8, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  %21 = icmp eq %class.CPDF_Dictionary* %20, null
  %22 = xor i1 %18, true
  %23 = or i1 %21, %22
  %24 = select i1 %21, i64 %17, i64 0
  %25 = and i1 %21, %18
  br i1 %23, label %37, label %26

26:                                               ; preds = %16
  %27 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %20, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %17, 4294967295
  %30 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %29, i64 %28) #17
  %31 = extractvalue { i64, i1 } %30, 1
  %32 = extractvalue { i64, i1 } %30, 0
  %33 = icmp ugt i64 %32, 4294967295
  %34 = or i1 %31, %33
  %35 = xor i1 %34, true
  %36 = and i64 %32, 4294967295
  br label %37

37:                                               ; preds = %16, %26
  %38 = phi i64 [ %24, %16 ], [ %36, %26 ]
  %39 = phi i1 [ %25, %16 ], [ %35, %26 ]
  %40 = and i64 %38, 4294967295
  %41 = select i1 %39, i64 %40, i64 0, !prof !18
  br i1 %13, label %44, label %42

42:                                               ; preds = %37
  call void @_ZN13CPDF_NameTreeD1Ev(%class.CPDF_NameTree* nonnull %12) #17
  %43 = bitcast %class.CPDF_NameTree* %12 to i8*
  call void @_ZdlPv(i8* %43) #18
  br label %44

44:                                               ; preds = %42, %37, %6, %1
  %45 = phi i64 [ 0, %1 ], [ 0, %6 ], [ %41, %37 ], [ %41, %42 ]
  ret i64 %45
}

declare %class.CPDF_NameTree* @_ZN13CPDF_NameTree6CreateEP13CPDF_DocumentRKN5fxcrt10ByteStringE(%class.CPDF_Document*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare i64 @_ZNK13CPDF_NameTree8GetCountEv(%class.CPDF_NameTree*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_dest_t__* @FPDF_GetNamedDestByName(%struct.fpdf_document_t__*, i8*) local_unnamed_addr #0 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = icmp eq i8* %1, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = load i8, i8* %1, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %5
  %9 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %10 = icmp eq %class.CPDF_Document* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %13, align 8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* nonnull %1) #17
  %14 = call %class.CPDF_Array* @_ZN13CPDF_NameTree15LookupNamedDestEP13CPDF_DocumentRKN5fxcrt10ByteStringE(%class.CPDF_Document* nonnull %9, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #17
  %15 = bitcast %class.CPDF_Array* %14 to %struct.fpdf_dest_t__*
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  br label %16

16:                                               ; preds = %11, %8, %5, %2
  %17 = phi %struct.fpdf_dest_t__* [ null, %2 ], [ null, %5 ], [ %15, %11 ], [ null, %8 ]
  ret %struct.fpdf_dest_t__* %17
}

declare %class.CPDF_Array* @_ZN13CPDF_NameTree15LookupNamedDestEP13CPDF_DocumentRKN5fxcrt10ByteStringE(%class.CPDF_Document*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @FPDF_GetRecommendedV8Flags() local_unnamed_addr #5 {
  ret i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @FPDF_GetArrayBufferAllocatorSharedInstance() local_unnamed_addr #6 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZ42FPDF_GetArrayBufferAllocatorSharedInstanceE9allocator to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !30

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ42FPDF_GetArrayBufferAllocatorSharedInstanceE9allocator) #17
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV26CFX_V8ArrayBufferAllocator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (%"class.pdfium::base::NoDestructor"* @_ZZ42FPDF_GetArrayBufferAllocatorSharedInstanceE9allocator to i32 (...)***), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ42FPDF_GetArrayBufferAllocatorSharedInstanceE9allocator) #17
  br label %7

7:                                                ; preds = %3, %6, %0
  ret i8* getelementptr inbounds (%"class.pdfium::base::NoDestructor", %"class.pdfium::base::NoDestructor"* @_ZZ42FPDF_GetArrayBufferAllocatorSharedInstanceE9allocator, i64 0, i32 0, i64 0)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @FPDF_BStr_Init(%struct.FPDF_BSTR_*) local_unnamed_addr #8 {
  %2 = icmp eq %struct.FPDF_BSTR_* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FPDF_BSTR_, %struct.FPDF_BSTR_* %0, i64 0, i32 0
  store i8* null, i8** %4, align 8
  %5 = getelementptr inbounds %struct.FPDF_BSTR_, %struct.FPDF_BSTR_* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ 0, %3 ], [ -1, %1 ]
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_BStr_Set(%struct.FPDF_BSTR_*, i8* readonly, i32) local_unnamed_addr #0 {
  %4 = icmp ne %struct.FPDF_BSTR_* %0, null
  %5 = icmp ne i8* %1, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %43

7:                                                ; preds = %3
  %8 = icmp eq i32 %2, -1
  br i1 %8, label %9, label %12

9:                                                ; preds = %7
  %10 = tail call i64 @strlen(i8* nonnull %1) #19
  %11 = trunc i64 %10 to i32
  br label %12

12:                                               ; preds = %9, %7
  %13 = phi i32 [ %11, %9 ], [ %2, %7 ]
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %struct.FPDF_BSTR_, %struct.FPDF_BSTR_* %0, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %14, label %18, label %20

18:                                               ; preds = %12
  br i1 %17, label %40, label %19

19:                                               ; preds = %18
  tail call void @_Z7FX_FreePv(i8* nonnull %16) #17
  store i8* null, i8** %15, align 8
  br label %40

20:                                               ; preds = %12
  br i1 %17, label %29, label %21

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.FPDF_BSTR_, %struct.FPDF_BSTR_* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, %13
  br i1 %24, label %25, label %35

25:                                               ; preds = %21
  %26 = add nsw i32 %13, 1
  %27 = sext i32 %26 to i64
  %28 = tail call i8* @_ZN6pdfium8internal12ReallocOrDieEPvmm(i8* nonnull %16, i64 %27, i64 1) #17
  br label %33

29:                                               ; preds = %20
  %30 = add nsw i32 %13, 1
  %31 = sext i32 %30 to i64
  %32 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %31, i64 1) #17
  br label %33

33:                                               ; preds = %25, %29
  %34 = phi i8* [ %32, %29 ], [ %28, %25 ]
  store i8* %34, i8** %15, align 8
  br label %35

35:                                               ; preds = %33, %21
  %36 = phi i8* [ %16, %21 ], [ %34, %33 ]
  %37 = sext i32 %13 to i64
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  store i8 0, i8* %38, align 1
  %39 = load i8*, i8** %15, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* nonnull align 1 %1, i64 %37, i1 false)
  br label %40

40:                                               ; preds = %19, %18, %35
  %41 = phi i32 [ %13, %35 ], [ 0, %18 ], [ 0, %19 ]
  %42 = getelementptr inbounds %struct.FPDF_BSTR_, %struct.FPDF_BSTR_* %0, i64 0, i32 1
  store i32 %41, i32* %42, align 8
  br label %43

43:                                               ; preds = %40, %3
  %44 = phi i32 [ -1, %3 ], [ 0, %40 ]
  ret i32 %44
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_BStr_Clear(%struct.FPDF_BSTR_*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FPDF_BSTR_* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FPDF_BSTR_, %struct.FPDF_BSTR_* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_Z7FX_FreePv(i8* nonnull %5) #17
  store i8* null, i8** %4, align 8
  br label %8

8:                                                ; preds = %3, %7
  %9 = getelementptr inbounds %struct.FPDF_BSTR_, %struct.FPDF_BSTR_* %0, i64 0, i32 1
  store i32 0, i32* %9, align 8
  br label %10

10:                                               ; preds = %1, %8
  %11 = phi i32 [ 0, %8 ], [ -1, %1 ]
  ret i32 %11
}

declare i8* @_ZN6pdfium8internal12ReallocOrDieEPvmm(i8*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64, i64) local_unnamed_addr #1

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_dest_t__* @FPDF_GetNamedDest(%struct.fpdf_document_t__*, i32, i8*, i64* nocapture) local_unnamed_addr #0 {
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %class.CPDF_DictionaryLocker, align 8
  %9 = alloca %"class.fxcrt::WideString", align 8
  %10 = alloca %"class.pdfium::span", align 8
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = icmp ne i8* %2, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  store i64 0, i64* %3, align 8
  br label %15

15:                                               ; preds = %14, %4
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %191, label %17

17:                                               ; preds = %15
  %18 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %19 = icmp eq %class.CPDF_Document* %18, null
  br i1 %19, label %191, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %18, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %22 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %21, align 8
  %23 = icmp eq %class.CPDF_Dictionary* %22, null
  br i1 %23, label %191, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)) #17
  %26 = call %class.CPDF_NameTree* @_ZN13CPDF_NameTree6CreateEP13CPDF_DocumentRKN5fxcrt10ByteStringE(%class.CPDF_Document* nonnull %18, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  %27 = icmp eq %class.CPDF_NameTree* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = call i64 @_ZNK13CPDF_NameTree8GetCountEv(%class.CPDF_NameTree* nonnull %26) #17
  br label %30

30:                                               ; preds = %24, %28
  %31 = phi i64 [ %29, %28 ], [ 0, %24 ]
  %32 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #17
  %33 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.521"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.521"*), %"class.fxcrt::StringDataTemplate.521"** %33, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %6) #17
  %34 = sext i32 %1 to i64
  %35 = icmp ugt i64 %31, %34
  br i1 %35, label %136, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)) #17
  %38 = call %class.CPDF_Dictionary* @_ZNK15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %22, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #17
  %39 = icmp eq %class.CPDF_Dictionary* %38, null
  br i1 %39, label %187, label %40

40:                                               ; preds = %36
  %41 = icmp ugt i64 %31, 2147483647
  %42 = trunc i64 %31 to i32
  br i1 %41, label %187, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %38, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = sext i32 %42 to i65
  %47 = zext i64 %45 to i65
  %48 = call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %46, i65 %47) #17
  %49 = extractvalue { i65, i1 } %48, 1
  %50 = extractvalue { i65, i1 } %48, 0
  %51 = add i65 %50, 2147483648
  %52 = icmp ugt i65 %51, 4294967295
  %53 = or i1 %49, %52
  %54 = trunc i65 %50 to i32
  %55 = icmp sle i32 %54, %1
  %56 = or i1 %53, %55
  br i1 %56, label %187, label %57

57:                                               ; preds = %43
  %58 = sub i32 %1, %42
  %59 = bitcast %class.CPDF_DictionaryLocker* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #17
  %60 = getelementptr inbounds %class.CPDF_DictionaryLocker, %class.CPDF_DictionaryLocker* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Dictionary* inttoptr (i64 -6148914691236517206 to %class.CPDF_Dictionary*), %class.CPDF_Dictionary** %60, align 8
  call void @_ZN21CPDF_DictionaryLockerC1EPK15CPDF_Dictionary(%class.CPDF_DictionaryLocker* nonnull %8, %class.CPDF_Dictionary* nonnull %38) #17
  %61 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %60, align 8
  %62 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66, !prof !31

65:                                               ; preds = %57
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !32
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !33
  unreachable

66:                                               ; preds = %57
  %67 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %61, i64 0, i32 3, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %61, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %70 = icmp eq %"class.std::__1::__tree_end_node"* %68, %69
  br i1 %70, label %128, label %71

71:                                               ; preds = %66, %119
  %72 = phi i32 [ %91, %119 ], [ 0, %66 ]
  %73 = phi %"class.std::__1::__tree_end_node"* [ %120, %119 ], [ %68, %66 ]
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 4
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.fxcrt::StringDataTemplate"**
  %76 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %75, align 8, !noalias !34
  %77 = icmp eq %"class.fxcrt::StringDataTemplate"* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %76, i64 0, i32 1
  %80 = load i64, i64* %79, align 8, !noalias !34
  br label %81

81:                                               ; preds = %71, %78
  %82 = phi i64 [ %80, %78 ], [ 0, %71 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 5
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to %class.CPDF_Object**
  %85 = load %class.CPDF_Object*, %class.CPDF_Object** %84, align 8
  %86 = icmp eq %class.CPDF_Object* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %81
  %88 = icmp eq i32 %72, %58
  %89 = add nsw i32 %72, 1
  br i1 %88, label %125, label %90

90:                                               ; preds = %81, %87
  %91 = phi i32 [ %89, %87 ], [ %72, %81 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 1, i32 0
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  %94 = icmp eq %"class.std::__1::__tree_node_base"* %93, null
  br i1 %94, label %95, label %103

95:                                               ; preds = %90
  %96 = bitcast %"class.std::__1::__tree_end_node"* %73 to %"class.std::__1::__tree_node_base"*
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 2
  %98 = bitcast %"class.std::__1::__tree_end_node"* %97 to %"class.std::__1::__tree_end_node"**
  %99 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %99, i64 0, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, %96
  br i1 %102, label %119, label %110

103:                                              ; preds = %90, %103
  %104 = phi %"class.std::__1::__tree_node_base"* [ %106, %103 ], [ %93, %90 ]
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node_base"* %106, null
  br i1 %107, label %108, label %103

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %104, i64 0, i32 0
  br label %119

110:                                              ; preds = %95, %110
  %111 = phi %"class.std::__1::__tree_end_node"** [ %114, %110 ], [ %98, %95 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %111 to %"class.std::__1::__tree_node_base"**
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %115 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %115, i64 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, %113
  br i1 %118, label %119, label %110

119:                                              ; preds = %110, %95, %108
  %120 = phi %"class.std::__1::__tree_end_node"* [ %109, %108 ], [ %99, %95 ], [ %115, %110 ]
  %121 = icmp eq %"class.std::__1::__tree_end_node"* %120, %69
  br i1 %121, label %122, label %71

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %76, i64 0, i32 3, i64 0
  %124 = select i1 %77, i8* null, i8* %123
  br label %128

125:                                              ; preds = %87
  %126 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %76, i64 0, i32 3, i64 0
  %127 = select i1 %77, i8* null, i8* %126
  br label %128

128:                                              ; preds = %125, %122, %66
  %129 = phi i8* [ %124, %122 ], [ %127, %125 ], [ null, %66 ]
  %130 = phi i64 [ %82, %122 ], [ %82, %125 ], [ 0, %66 ]
  %131 = phi %class.CPDF_Object* [ %85, %122 ], [ %85, %125 ], [ null, %66 ]
  %132 = bitcast %"class.fxcrt::WideString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #17
  %133 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %10, i64 0, i32 0, i32 0
  store i8* %129, i8** %133, align 8
  %134 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %10, i64 0, i32 1
  store i64 %130, i64* %134, align 8
  call void @_Z14PDF_DecodeTextN6pdfium4spanIKhEE(%"class.fxcrt::WideString"* nonnull sret %9, %"class.pdfium::span"* nonnull %10) #17
  %135 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* nonnull %6, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %9) #17
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #17
  call void @_ZN21CPDF_DictionaryLockerD1Ev(%class.CPDF_DictionaryLocker* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #17
  br label %138

136:                                              ; preds = %30
  %137 = call %class.CPDF_Object* @_ZNK13CPDF_NameTree18LookupValueAndNameEiPN5fxcrt10WideStringE(%class.CPDF_NameTree* %26, i32 %1, %"class.fxcrt::WideString"* nonnull %6) #17
  br label %138

138:                                              ; preds = %128, %136
  %139 = phi %class.CPDF_Object* [ %131, %128 ], [ %137, %136 ]
  %140 = icmp eq %class.CPDF_Object* %139, null
  br i1 %140, label %187, label %141

141:                                              ; preds = %138
  %142 = bitcast %class.CPDF_Object* %139 to %class.CPDF_Dictionary* (%class.CPDF_Object*)***
  %143 = load %class.CPDF_Dictionary* (%class.CPDF_Object*)**, %class.CPDF_Dictionary* (%class.CPDF_Object*)*** %142, align 8
  %144 = getelementptr inbounds %class.CPDF_Dictionary* (%class.CPDF_Object*)*, %class.CPDF_Dictionary* (%class.CPDF_Object*)** %143, i64 27
  %145 = load %class.CPDF_Dictionary* (%class.CPDF_Object*)*, %class.CPDF_Dictionary* (%class.CPDF_Object*)** %144, align 8
  %146 = call %class.CPDF_Dictionary* %145(%class.CPDF_Object* nonnull %139) #17
  %147 = icmp eq %class.CPDF_Dictionary* %146, null
  br i1 %147, label %153, label %148

148:                                              ; preds = %141
  %149 = bitcast %"class.fxcrt::ByteString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #17
  %150 = call %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %146, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %11) #17
  %151 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %150, i64 0, i32 0
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #17
  %152 = icmp eq %class.CPDF_Array* %150, null
  br i1 %152, label %187, label %153

153:                                              ; preds = %141, %148
  %154 = phi %class.CPDF_Object* [ %151, %148 ], [ %139, %141 ]
  %155 = bitcast %class.CPDF_Object* %154 to i1 (%class.CPDF_Object*)***
  %156 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %155, align 8
  %157 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %156, i64 14
  %158 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %157, align 8
  %159 = call zeroext i1 %158(%class.CPDF_Object* %154) #17
  br i1 %159, label %160, label %187

160:                                              ; preds = %153
  %161 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #17
  %162 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %162, align 8
  call void @_ZNK5fxcrt10WideString9ToUTF16LEEv(%"class.fxcrt::ByteString"* nonnull sret %12, %"class.fxcrt::WideString"* nonnull %6) #17
  %163 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %162, align 8
  %164 = icmp eq %"class.fxcrt::StringDataTemplate"* %163, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %163, i64 0, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = shl i64 %167, 32
  %169 = ashr exact i64 %168, 32
  br label %170

170:                                              ; preds = %160, %165
  %171 = phi i64 [ %169, %165 ], [ 0, %160 ]
  br i1 %13, label %172, label %179

172:                                              ; preds = %170
  %173 = load i64, i64* %3, align 8
  %174 = icmp sgt i64 %171, %173
  br i1 %174, label %179, label %175

175:                                              ; preds = %172
  %176 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %163, i64 0, i32 3
  %177 = select i1 %164, [1 x i8]* @.str.15, [1 x i8]* %176
  %178 = getelementptr inbounds [1 x i8], [1 x i8]* %177, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2, i8* align 1 %178, i64 %171, i1 false)
  br label %179

179:                                              ; preds = %172, %170, %175
  %180 = phi i64 [ %171, %175 ], [ %171, %170 ], [ -1, %172 ]
  store i64 %180, i64* %3, align 8
  %181 = bitcast %class.CPDF_Object* %154 to %class.CPDF_Array* (%class.CPDF_Object*)***
  %182 = load %class.CPDF_Array* (%class.CPDF_Object*)**, %class.CPDF_Array* (%class.CPDF_Object*)*** %181, align 8
  %183 = getelementptr inbounds %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %182, i64 23
  %184 = load %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %183, align 8
  %185 = call %class.CPDF_Array* %184(%class.CPDF_Object* %154) #17
  %186 = bitcast %class.CPDF_Array* %185 to %struct.fpdf_dest_t__*
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #17
  br label %187

187:                                              ; preds = %40, %43, %36, %148, %153, %138, %179
  %188 = phi %struct.fpdf_dest_t__* [ %186, %179 ], [ null, %138 ], [ null, %153 ], [ null, %148 ], [ null, %36 ], [ null, %43 ], [ null, %40 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #17
  br i1 %27, label %191, label %189

189:                                              ; preds = %187
  call void @_ZN13CPDF_NameTreeD1Ev(%class.CPDF_NameTree* nonnull %26) #17
  %190 = bitcast %class.CPDF_NameTree* %26 to i8*
  call void @_ZdlPv(i8* %190) #18
  br label %191

191:                                              ; preds = %189, %187, %17, %20, %15
  %192 = phi %struct.fpdf_dest_t__* [ null, %15 ], [ null, %17 ], [ null, %20 ], [ %188, %187 ], [ %188, %189 ]
  ret %struct.fpdf_dest_t__* %192
}

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #1

declare void @_ZN21CPDF_DictionaryLockerC1EPK15CPDF_Dictionary(%class.CPDF_DictionaryLocker*, %class.CPDF_Dictionary*) unnamed_addr #1

declare void @_Z14PDF_DecodeTextN6pdfium4spanIKhEE(%"class.fxcrt::WideString"* sret, %"class.pdfium::span"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN21CPDF_DictionaryLockerD1Ev(%class.CPDF_DictionaryLocker*) unnamed_addr #3

declare %class.CPDF_Object* @_ZNK13CPDF_NameTree18LookupValueAndNameEiPN5fxcrt10WideStringE(%class.CPDF_NameTree*, i32, %"class.fxcrt::WideString"*) local_unnamed_addr #1

declare %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK5fxcrt10WideString9ToUTF16LEEv(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::WideString"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_GetXFAPacketCount(%struct.fpdf_document_t__*) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::vector.535", align 8
  %3 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %4 = icmp eq %class.CPDF_Document* %3, null
  br i1 %4, label %36, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.std::__1::vector.535"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = tail call fastcc %class.CPDF_Object* @_ZN12_GLOBAL__N_123GetXFAEntryFromDocumentEPK13CPDF_Document(%class.CPDF_Document* nonnull %3)
  call fastcc void @_ZN12_GLOBAL__N_113GetXFAPacketsEPK11CPDF_Object(%"class.std::__1::vector.535"* nonnull sret %2, %class.CPDF_Object* %7)
  %8 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %2, i64 0, i32 0, i32 1
  %9 = bitcast %"struct.(anonymous namespace)::XFAPacket"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.535"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ult i64 %14, 2147483648
  %16 = inttoptr i64 %12 to %"struct.(anonymous namespace)::XFAPacket"*
  %17 = inttoptr i64 %10 to %"struct.(anonymous namespace)::XFAPacket"*
  br i1 %15, label %19, label %18, !prof !18

18:                                               ; preds = %5
  call void @llvm.trap() #17
  unreachable

19:                                               ; preds = %5
  %20 = trunc i64 %14 to i32
  %21 = icmp eq i64 %12, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %19
  %23 = inttoptr i64 %12 to i8*
  %24 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %17, %16
  br i1 %24, label %33, label %25

25:                                               ; preds = %22, %25
  %26 = phi %"struct.(anonymous namespace)::XFAPacket"* [ %27, %25 ], [ %17, %22 ]
  %27 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %26, i64 -1
  %28 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %27, i64 0, i32 0
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %28) #17
  %29 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %27, %16
  br i1 %29, label %30, label %25

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::vector.535"* %2 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %22
  %34 = phi i8* [ %32, %30 ], [ %23, %22 ]
  store %"struct.(anonymous namespace)::XFAPacket"* %16, %"struct.(anonymous namespace)::XFAPacket"** %8, align 8
  call void @_ZdlPv(i8* %34) #18
  br label %35

35:                                               ; preds = %19, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  br label %36

36:                                               ; preds = %1, %35
  %37 = phi i32 [ %20, %35 ], [ -1, %1 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_113GetXFAPacketsEPK11CPDF_Object(%"class.std::__1::vector.535"* noalias sret, %class.CPDF_Object*) unnamed_addr #0 {
  %3 = alloca %"struct.(anonymous namespace)::XFAPacket", align 8
  %4 = alloca %"struct.(anonymous namespace)::XFAPacket", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector.535"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #17
  %8 = icmp eq %class.CPDF_Object* %1, null
  br i1 %8, label %142, label %9

9:                                                ; preds = %2
  %10 = bitcast %class.CPDF_Object* %1 to %class.CPDF_Object* (%class.CPDF_Object*)***
  %11 = load %class.CPDF_Object* (%class.CPDF_Object*)**, %class.CPDF_Object* (%class.CPDF_Object*)*** %10, align 8
  %12 = getelementptr inbounds %class.CPDF_Object* (%class.CPDF_Object*)*, %class.CPDF_Object* (%class.CPDF_Object*)** %11, i64 6
  %13 = load %class.CPDF_Object* (%class.CPDF_Object*)*, %class.CPDF_Object* (%class.CPDF_Object*)** %12, align 8
  %14 = tail call %class.CPDF_Object* %13(%class.CPDF_Object* nonnull %1) #17
  %15 = icmp eq %class.CPDF_Object* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %9
  %17 = bitcast %class.CPDF_Object* %14 to %class.CPDF_Stream* (%class.CPDF_Object*)***
  %18 = load %class.CPDF_Stream* (%class.CPDF_Object*)**, %class.CPDF_Stream* (%class.CPDF_Object*)*** %17, align 8
  %19 = getelementptr inbounds %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %18, i64 36
  %20 = load %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %19, align 8
  %21 = tail call %class.CPDF_Stream* %20(%class.CPDF_Object* nonnull %14) #17
  %22 = icmp eq %class.CPDF_Stream* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = bitcast %"struct.(anonymous namespace)::XFAPacket"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #17
  %25 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %3, i64 0, i32 0
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0)) #17
  %26 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %3, i64 0, i32 1
  store %class.CPDF_Stream* %21, %class.CPDF_Stream** %26, align 8
  call fastcc void @_ZNSt3__16vectorIN12_GLOBAL__N_19XFAPacketENS_9allocatorIS2_EEE9push_backEOS2_(%"class.std::__1::vector.535"* %0, %"struct.(anonymous namespace)::XFAPacket"* nonnull dereferenceable(16) %3)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %25) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #17
  br label %142

27:                                               ; preds = %9, %16
  %28 = load %class.CPDF_Object* (%class.CPDF_Object*)**, %class.CPDF_Object* (%class.CPDF_Object*)*** %10, align 8
  %29 = getelementptr inbounds %class.CPDF_Object* (%class.CPDF_Object*)*, %class.CPDF_Object* (%class.CPDF_Object*)** %28, i64 6
  %30 = load %class.CPDF_Object* (%class.CPDF_Object*)*, %class.CPDF_Object* (%class.CPDF_Object*)** %29, align 8
  %31 = tail call %class.CPDF_Object* %30(%class.CPDF_Object* nonnull %1) #17
  %32 = icmp eq %class.CPDF_Object* %31, null
  br i1 %32, label %142, label %33

33:                                               ; preds = %27
  %34 = bitcast %class.CPDF_Object* %31 to %class.CPDF_Array* (%class.CPDF_Object*)***
  %35 = load %class.CPDF_Array* (%class.CPDF_Object*)**, %class.CPDF_Array* (%class.CPDF_Object*)*** %34, align 8
  %36 = getelementptr inbounds %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %35, i64 24
  %37 = load %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %36, align 8
  %38 = tail call %class.CPDF_Array* %37(%class.CPDF_Object* nonnull %31) #17
  %39 = icmp eq %class.CPDF_Array* %38, null
  br i1 %39, label %142, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %38, i64 0, i32 1
  %42 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %38, i64 0, i32 1, i32 0, i32 1
  %43 = bitcast %"class.fxcrt::RetainPtr.495"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector.493"* %41 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = ashr exact i64 %47, 3
  %49 = lshr i64 %48, 1
  %50 = add nuw i64 %49, 1
  %51 = bitcast %"struct.(anonymous namespace)::XFAPacket"** %6 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector.535"* %0 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = ashr exact i64 %55, 4
  %57 = icmp ugt i64 %56, %49
  %58 = inttoptr i64 %54 to %"struct.(anonymous namespace)::XFAPacket"*
  br i1 %57, label %106, label %59

59:                                               ; preds = %40
  %60 = bitcast %"struct.(anonymous namespace)::XFAPacket"** %5 to i64*
  %61 = icmp ugt i64 %48, 2305843009213693949
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @abort() #20
  unreachable

63:                                               ; preds = %59
  %64 = load i64, i64* %60, align 8
  %65 = sub i64 %64, %54
  %66 = ashr exact i64 %65, 4
  %67 = shl i64 %50, 4
  %68 = tail call i8* @_Znwm(i64 %67) #18
  %69 = bitcast i8* %68 to %"struct.(anonymous namespace)::XFAPacket"*
  %70 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %69, i64 %66
  %71 = ptrtoint %"struct.(anonymous namespace)::XFAPacket"* %70 to i64
  %72 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %69, i64 %50
  %73 = ptrtoint %"struct.(anonymous namespace)::XFAPacket"* %72 to i64
  %74 = inttoptr i64 %64 to %"struct.(anonymous namespace)::XFAPacket"*
  %75 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %74, %58
  br i1 %75, label %76, label %77

76:                                               ; preds = %63
  store i64 %71, i64* %53, align 8
  store i64 %71, i64* %60, align 8
  store i64 %73, i64* %51, align 8
  br label %101

77:                                               ; preds = %63, %77
  %78 = phi %"struct.(anonymous namespace)::XFAPacket"* [ %88, %77 ], [ %70, %63 ]
  %79 = phi %"struct.(anonymous namespace)::XFAPacket"* [ %80, %77 ], [ %74, %63 ]
  %80 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %79, i64 -1
  %81 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %78, i64 -1, i32 0
  %82 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %80, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %81, %"class.fxcrt::ByteString"* dereferenceable(8) %82) #17
  %83 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %78, i64 -1, i32 1
  %84 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %79, i64 -1, i32 1
  %85 = bitcast %class.CPDF_Stream** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %class.CPDF_Stream** %83 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %78, i64 -1
  %89 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %80, %58
  br i1 %89, label %90, label %77

90:                                               ; preds = %77
  %91 = ptrtoint %"struct.(anonymous namespace)::XFAPacket"* %88 to i64
  %92 = load i64, i64* %53, align 8
  %93 = load %"struct.(anonymous namespace)::XFAPacket"*, %"struct.(anonymous namespace)::XFAPacket"** %5, align 8
  %94 = inttoptr i64 %92 to %"struct.(anonymous namespace)::XFAPacket"*
  store i64 %91, i64* %53, align 8
  store i64 %71, i64* %60, align 8
  store i64 %73, i64* %51, align 8
  %95 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %93, %94
  br i1 %95, label %101, label %96

96:                                               ; preds = %90, %96
  %97 = phi %"struct.(anonymous namespace)::XFAPacket"* [ %98, %96 ], [ %93, %90 ]
  %98 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %97, i64 -1
  %99 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %98, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %99) #17
  %100 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %98, %94
  br i1 %100, label %101, label %96

101:                                              ; preds = %96, %76, %90
  %102 = phi i64 [ %64, %76 ], [ %92, %90 ], [ %92, %96 ]
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = inttoptr i64 %102 to i8*
  tail call void @_ZdlPv(i8* %105) #18
  br label %106

106:                                              ; preds = %40, %101, %104
  %107 = load i64, i64* %43, align 8
  %108 = load i64, i64* %45, align 8
  %109 = sub i64 %107, %108
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %142, label %111

111:                                              ; preds = %106
  %112 = ashr exact i64 %109, 3
  %113 = bitcast %"struct.(anonymous namespace)::XFAPacket"* %4 to i8*
  %114 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %4, i64 0, i32 0
  %115 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %4, i64 0, i32 1
  br label %116

116:                                              ; preds = %111, %135
  %117 = phi i64 [ %112, %111 ], [ %140, %135 ]
  %118 = phi i64 [ 0, %111 ], [ %136, %135 ]
  %119 = or i64 %118, 1
  %120 = icmp eq i64 %119, %117
  br i1 %120, label %142, label %121

121:                                              ; preds = %116
  %122 = call %class.CPDF_Object* @_ZNK10CPDF_Array11GetObjectAtEm(%class.CPDF_Array* nonnull %38, i64 %118) #17
  %123 = icmp eq %class.CPDF_Object* %122, null
  br i1 %123, label %135, label %124

124:                                              ; preds = %121
  %125 = bitcast %class.CPDF_Object* %122 to %class.CPDF_String* (%class.CPDF_Object*)***
  %126 = load %class.CPDF_String* (%class.CPDF_Object*)**, %class.CPDF_String* (%class.CPDF_Object*)*** %125, align 8
  %127 = getelementptr inbounds %class.CPDF_String* (%class.CPDF_Object*)*, %class.CPDF_String* (%class.CPDF_Object*)** %126, i64 38
  %128 = load %class.CPDF_String* (%class.CPDF_Object*)*, %class.CPDF_String* (%class.CPDF_Object*)** %127, align 8
  %129 = call %class.CPDF_String* %128(%class.CPDF_Object* nonnull %122) #17
  %130 = icmp eq %class.CPDF_String* %129, null
  br i1 %130, label %135, label %131

131:                                              ; preds = %124
  %132 = call %class.CPDF_Stream* @_ZNK10CPDF_Array11GetStreamAtEm(%class.CPDF_Array* nonnull %38, i64 %119) #17
  %133 = icmp eq %class.CPDF_Stream* %132, null
  br i1 %133, label %135, label %134

134:                                              ; preds = %131
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #17
  call void @_ZNK11CPDF_String9GetStringEv(%"class.fxcrt::ByteString"* nonnull sret %114, %class.CPDF_String* nonnull %129) #17
  store %class.CPDF_Stream* %132, %class.CPDF_Stream** %115, align 8
  call fastcc void @_ZNSt3__16vectorIN12_GLOBAL__N_19XFAPacketENS_9allocatorIS2_EEE9push_backEOS2_(%"class.std::__1::vector.535"* %0, %"struct.(anonymous namespace)::XFAPacket"* nonnull dereferenceable(16) %4)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %114) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #17
  br label %135

135:                                              ; preds = %121, %134, %131, %124
  %136 = add i64 %118, 2
  %137 = load i64, i64* %43, align 8
  %138 = load i64, i64* %45, align 8
  %139 = sub i64 %137, %138
  %140 = ashr exact i64 %139, 3
  %141 = icmp ult i64 %136, %140
  br i1 %141, label %116, label %142

142:                                              ; preds = %135, %116, %106, %27, %2, %33, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %class.CPDF_Object* @_ZN12_GLOBAL__N_123GetXFAEntryFromDocumentEPK13CPDF_Document(%class.CPDF_Document* nocapture readonly) unnamed_addr #0 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %4, align 8
  %6 = icmp eq %class.CPDF_Dictionary* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #17
  %9 = call %class.CPDF_Dictionary* @_ZNK15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %5, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  %10 = icmp eq %class.CPDF_Dictionary* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)) #17
  %13 = call %class.CPDF_Object* @_ZNK15CPDF_Dictionary12GetObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %9, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  br label %14

14:                                               ; preds = %7, %11, %1
  %15 = phi %class.CPDF_Object* [ null, %1 ], [ %13, %11 ], [ null, %7 ]
  ret %class.CPDF_Object* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FPDF_GetXFAPacketName(%struct.fpdf_document_t__*, i32, i8*, i64) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::vector.535", align 8
  %6 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %7 = icmp eq %class.CPDF_Document* %6, null
  %8 = icmp slt i32 %1, 0
  %9 = or i1 %8, %7
  br i1 %9, label %48, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.std::__1::vector.535"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %5, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::vector.535"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = tail call fastcc %class.CPDF_Object* @_ZN12_GLOBAL__N_123GetXFAEntryFromDocumentEPK13CPDF_Document(%class.CPDF_Document* nonnull %6)
  call fastcc void @_ZN12_GLOBAL__N_113GetXFAPacketsEPK11CPDF_Object(%"class.std::__1::vector.535"* nonnull sret %5, %class.CPDF_Object* %14)
  %15 = sext i32 %1 to i64
  %16 = bitcast %"struct.(anonymous namespace)::XFAPacket"** %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.535"* %5 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 4
  %22 = icmp ugt i64 %21, %15
  %23 = inttoptr i64 %19 to %"struct.(anonymous namespace)::XFAPacket"*
  br i1 %22, label %24, label %29

24:                                               ; preds = %10
  %25 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %5, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %23, i64 %15, i32 0
  %27 = call i64 @_Z36NulTerminateMaybeCopyAndReturnLengthRKN5fxcrt10ByteStringEPvm(%"class.fxcrt::ByteString"* dereferenceable(8) %26, i8* %2, i64 %3) #17
  %28 = load %"struct.(anonymous namespace)::XFAPacket"*, %"struct.(anonymous namespace)::XFAPacket"** %25, align 8
  br label %29

29:                                               ; preds = %10, %24
  %30 = phi %"struct.(anonymous namespace)::XFAPacket"* [ %23, %10 ], [ %28, %24 ]
  %31 = phi i64 [ 0, %10 ], [ %27, %24 ]
  %32 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %30, null
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.(anonymous namespace)::XFAPacket"* %30 to i8*
  %35 = load %"struct.(anonymous namespace)::XFAPacket"*, %"struct.(anonymous namespace)::XFAPacket"** %12, align 8
  %36 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %35, %30
  br i1 %36, label %45, label %37

37:                                               ; preds = %33, %37
  %38 = phi %"struct.(anonymous namespace)::XFAPacket"* [ %39, %37 ], [ %35, %33 ]
  %39 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %38, i64 -1
  %40 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %39, i64 0, i32 0
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %40) #17
  %41 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %39, %30
  br i1 %41, label %42, label %37

42:                                               ; preds = %37
  %43 = bitcast %"class.std::__1::vector.535"* %5 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %33
  %46 = phi i8* [ %44, %42 ], [ %34, %33 ]
  store %"struct.(anonymous namespace)::XFAPacket"* %30, %"struct.(anonymous namespace)::XFAPacket"** %12, align 8
  call void @_ZdlPv(i8* %46) #18
  br label %47

47:                                               ; preds = %29, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #17
  br label %48

48:                                               ; preds = %4, %47
  %49 = phi i64 [ %31, %47 ], [ 0, %4 ]
  ret i64 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDF_GetXFAPacketContent(%struct.fpdf_document_t__*, i32, i8*, i64, i64*) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::vector.535", align 8
  %7 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %8 = icmp ne %class.CPDF_Document* %7, null
  %9 = icmp sgt i32 %1, -1
  %10 = and i1 %9, %8
  %11 = icmp ne i64* %4, null
  %12 = and i1 %11, %10
  br i1 %12, label %13, label %52

13:                                               ; preds = %5
  %14 = bitcast %"class.std::__1::vector.535"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %6, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::vector.535"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %17 = tail call fastcc %class.CPDF_Object* @_ZN12_GLOBAL__N_123GetXFAEntryFromDocumentEPK13CPDF_Document(%class.CPDF_Document* nonnull %7)
  call fastcc void @_ZN12_GLOBAL__N_113GetXFAPacketsEPK11CPDF_Object(%"class.std::__1::vector.535"* nonnull sret %6, %class.CPDF_Object* %17)
  %18 = sext i32 %1 to i64
  %19 = bitcast %"struct.(anonymous namespace)::XFAPacket"** %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.535"* %6 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = ashr exact i64 %23, 4
  %25 = icmp ugt i64 %24, %18
  %26 = inttoptr i64 %22 to %"struct.(anonymous namespace)::XFAPacket"*
  br i1 %25, label %27, label %33

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %6, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %26, i64 %18, i32 1
  %30 = load %class.CPDF_Stream*, %class.CPDF_Stream** %29, align 8
  %31 = call i64 @_Z36DecodeStreamMaybeCopyAndReturnLengthPK11CPDF_StreamPvm(%class.CPDF_Stream* %30, i8* %2, i64 %3) #17
  store i64 %31, i64* %4, align 8
  %32 = load %"struct.(anonymous namespace)::XFAPacket"*, %"struct.(anonymous namespace)::XFAPacket"** %28, align 8
  br label %33

33:                                               ; preds = %13, %27
  %34 = phi %"struct.(anonymous namespace)::XFAPacket"* [ %26, %13 ], [ %32, %27 ]
  %35 = phi i32 [ 0, %13 ], [ 1, %27 ]
  %36 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %34, null
  br i1 %36, label %51, label %37

37:                                               ; preds = %33
  %38 = bitcast %"struct.(anonymous namespace)::XFAPacket"* %34 to i8*
  %39 = load %"struct.(anonymous namespace)::XFAPacket"*, %"struct.(anonymous namespace)::XFAPacket"** %15, align 8
  %40 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %39, %34
  br i1 %40, label %49, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.(anonymous namespace)::XFAPacket"* [ %43, %41 ], [ %39, %37 ]
  %43 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %42, i64 -1
  %44 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %43, i64 0, i32 0
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %44) #17
  %45 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %43, %34
  br i1 %45, label %46, label %41

46:                                               ; preds = %41
  %47 = bitcast %"class.std::__1::vector.535"* %6 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %37
  %50 = phi i8* [ %48, %46 ], [ %38, %37 ]
  store %"struct.(anonymous namespace)::XFAPacket"* %34, %"struct.(anonymous namespace)::XFAPacket"** %15, align 8
  call void @_ZdlPv(i8* %50) #18
  br label %51

51:                                               ; preds = %33, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #17
  br label %52

52:                                               ; preds = %5, %51
  %53 = phi i32 [ %35, %51 ], [ 0, %5 ]
  ret i32 %53
}

declare i64 @_Z36DecodeStreamMaybeCopyAndReturnLengthPK11CPDF_StreamPvm(%class.CPDF_Stream*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FPDF_GetTrailerEnds(%struct.fpdf_document_t__*, i32*, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector.37", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::RetainPtr.495", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = alloca %"class.fxcrt::RetainPtr.495", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = alloca %"class.fxcrt::ByteString", align 8
  %14 = alloca %"class.fxcrt::ByteString", align 8
  %15 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #17
  %16 = icmp eq %class.CPDF_Document* %15, null
  br i1 %16, label %213, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = load %class.CPDF_Parser*, %class.CPDF_Parser** %18, align 8
  %20 = getelementptr inbounds %class.CPDF_Parser, %class.CPDF_Parser* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %class.CPDF_SyntaxParser*, %class.CPDF_SyntaxParser** %20, align 8
  %22 = bitcast %"class.std::__1::vector.37"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #17
  %23 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #17
  %24 = getelementptr inbounds %class.CPDF_SyntaxParser, %class.CPDF_SyntaxParser* %21, i64 0, i32 10, i32 0
  store %"class.std::__1::vector.37"* %4, %"class.std::__1::vector.37"** %24, align 8
  call void @_ZN17CPDF_SyntaxParser6SetPosEl(%class.CPDF_SyntaxParser* %21, i64 0) #17
  %25 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  %26 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  %27 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  %29 = getelementptr inbounds %"class.fxcrt::RetainPtr.495", %"class.fxcrt::RetainPtr.495"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  %31 = bitcast %"class.fxcrt::ByteString"* %13 to i8*
  %32 = getelementptr inbounds %"class.fxcrt::RetainPtr.495", %"class.fxcrt::RetainPtr.495"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %92, %17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #17
  store i8 -86, i8* %5, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #17
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %27, align 8
  call void @_ZN17CPDF_SyntaxParser11GetNextWordEPb(%"class.fxcrt::ByteString"* nonnull sret %6, %class.CPDF_SyntaxParser* %21, i8* nonnull %5) #17
  %34 = load i8, i8* %5, align 1, !range !11
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %60, label %36

36:                                               ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  call void @_ZN17CPDF_SyntaxParser11GetNextWordEPb(%"class.fxcrt::ByteString"* nonnull sret %7, %class.CPDF_SyntaxParser* %21, i8* nonnull %5) #17
  %37 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %6, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  %38 = load i8, i8* %5, align 1, !range !11
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %93, label %40

40:                                               ; preds = %36
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN17CPDF_SyntaxParser11GetNextWordEPb(%"class.fxcrt::ByteString"* nonnull sret %8, %class.CPDF_SyntaxParser* %21, i8* null) #17
  %41 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %6, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  %42 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0)) #17
  br i1 %42, label %43, label %93

43:                                               ; preds = %40
  call void @_ZN17CPDF_SyntaxParser13GetObjectBodyEP25CPDF_IndirectObjectHolder(%"class.fxcrt::RetainPtr.495"* nonnull sret %9, %class.CPDF_SyntaxParser* %21, %class.CPDF_IndirectObjectHolder* null) #17
  %44 = load %class.CPDF_Object*, %class.CPDF_Object** %29, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %29, align 8
  %45 = icmp eq %class.CPDF_Object* %44, null
  br i1 %45, label %57, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %44, i64 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = add nsw i64 %48, -1
  store i64 %49, i64* %47, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %46
  %52 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %44, i64 0, i32 0
  %53 = bitcast %class.CPDF_Object* %44 to void (%"class.fxcrt::Retainable"*)***
  %54 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %54, i64 1
  %56 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %55, align 8
  call void %56(%"class.fxcrt::Retainable"* nonnull %52) #17
  br label %57

57:                                               ; preds = %43, %46, %51
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #17
  call void @_ZN17CPDF_SyntaxParser11GetNextWordEPb(%"class.fxcrt::ByteString"* nonnull sret %10, %class.CPDF_SyntaxParser* %21, i8* null) #17
  %58 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %6, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #17
  %59 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0)) #17
  br i1 %59, label %92, label %93

60:                                               ; preds = %33
  %61 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0)) #17
  br i1 %61, label %62, label %76

62:                                               ; preds = %60
  call void @_ZN17CPDF_SyntaxParser13GetObjectBodyEP25CPDF_IndirectObjectHolder(%"class.fxcrt::RetainPtr.495"* nonnull sret %11, %class.CPDF_SyntaxParser* %21, %class.CPDF_IndirectObjectHolder* null) #17
  %63 = load %class.CPDF_Object*, %class.CPDF_Object** %32, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %32, align 8
  %64 = icmp eq %class.CPDF_Object* %63, null
  br i1 %64, label %92, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %63, i64 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = add nsw i64 %67, -1
  store i64 %68, i64* %66, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %92

70:                                               ; preds = %65
  %71 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %63, i64 0, i32 0
  %72 = bitcast %class.CPDF_Object* %63 to void (%"class.fxcrt::Retainable"*)***
  %73 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %73, i64 1
  %75 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %74, align 8
  call void %75(%"class.fxcrt::Retainable"* nonnull %71) #17
  br label %92

76:                                               ; preds = %60
  %77 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)) #17
  br i1 %77, label %78, label %79

78:                                               ; preds = %76
  call void @_ZN17CPDF_SyntaxParser11GetNextWordEPb(%"class.fxcrt::ByteString"* nonnull sret %12, %class.CPDF_SyntaxParser* %21, i8* null) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #17
  br label %92

79:                                               ; preds = %76
  %80 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)) #17
  br i1 %80, label %81, label %93

81:                                               ; preds = %79, %89
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #17
  call void @_ZN17CPDF_SyntaxParser11GetNextWordEPb(%"class.fxcrt::ByteString"* nonnull sret %13, %class.CPDF_SyntaxParser* %21, i8* null) #17
  %82 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %6, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %13) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %13) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #17
  %83 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %27, align 8
  %84 = icmp eq %"class.fxcrt::StringDataTemplate"* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %83, i64 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  %90 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)) #17
  br i1 %90, label %91, label %81

91:                                               ; preds = %81, %85, %89
  call void @_ZN17CPDF_SyntaxParser11GetNextWordEPb(%"class.fxcrt::ByteString"* nonnull sret %14, %class.CPDF_SyntaxParser* %21, i8* null) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %14) #17
  br label %92

92:                                               ; preds = %57, %70, %65, %62, %91, %78
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #17
  br label %33

93:                                               ; preds = %57, %40, %79, %36
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #17
  store %"class.std::__1::vector.37"* null, %"class.std::__1::vector.37"** %24, align 8
  %94 = bitcast i32** %23 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.std::__1::vector.37"* %4 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %95, %97
  %99 = ashr exact i64 %98, 2
  %100 = icmp ne i32* %1, null
  %101 = icmp ule i64 %99, %2
  %102 = and i1 %101, %100
  %103 = icmp ne i64 %98, 0
  %104 = and i1 %102, %103
  %105 = inttoptr i64 %97 to i32*
  %106 = inttoptr i64 %97 to i8*
  br i1 %104, label %107, label %208

107:                                              ; preds = %93
  %108 = icmp ugt i64 %99, 1
  %109 = select i1 %108, i64 %99, i64 1
  %110 = icmp ult i64 %109, 8
  br i1 %110, label %199, label %111

111:                                              ; preds = %107
  %112 = icmp ugt i64 %99, 1
  %113 = select i1 %112, i64 %99, i64 1
  %114 = getelementptr i32, i32* %1, i64 %113
  %115 = bitcast i32* %114 to i8*
  %116 = getelementptr i32, i32* %105, i64 %113
  %117 = icmp ugt i32* %116, %1
  %118 = icmp ult i8* %106, %115
  %119 = and i1 %117, %118
  br i1 %119, label %199, label %120

120:                                              ; preds = %111
  %121 = and i64 %109, -8
  %122 = add nsw i64 %121, -8
  %123 = lshr exact i64 %122, 3
  %124 = add nuw nsw i64 %123, 1
  %125 = and i64 %124, 3
  %126 = icmp ult i64 %122, 24
  br i1 %126, label %178, label %127

127:                                              ; preds = %120
  %128 = sub nsw i64 %124, %125
  br label %129

129:                                              ; preds = %129, %127
  %130 = phi i64 [ 0, %127 ], [ %175, %129 ]
  %131 = phi i64 [ %128, %127 ], [ %176, %129 ]
  %132 = getelementptr inbounds i32, i32* %105, i64 %130
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !37
  %135 = getelementptr inbounds i32, i32* %132, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4, !alias.scope !37
  %138 = getelementptr inbounds i32, i32* %1, i64 %130
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %139, align 4, !alias.scope !40, !noalias !37
  %140 = getelementptr inbounds i32, i32* %138, i64 4
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %141, align 4, !alias.scope !40, !noalias !37
  %142 = or i64 %130, 8
  %143 = getelementptr inbounds i32, i32* %105, i64 %142
  %144 = bitcast i32* %143 to <4 x i32>*
  %145 = load <4 x i32>, <4 x i32>* %144, align 4, !alias.scope !37
  %146 = getelementptr inbounds i32, i32* %143, i64 4
  %147 = bitcast i32* %146 to <4 x i32>*
  %148 = load <4 x i32>, <4 x i32>* %147, align 4, !alias.scope !37
  %149 = getelementptr inbounds i32, i32* %1, i64 %142
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> %145, <4 x i32>* %150, align 4, !alias.scope !40, !noalias !37
  %151 = getelementptr inbounds i32, i32* %149, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %148, <4 x i32>* %152, align 4, !alias.scope !40, !noalias !37
  %153 = or i64 %130, 16
  %154 = getelementptr inbounds i32, i32* %105, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !37
  %157 = getelementptr inbounds i32, i32* %154, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4, !alias.scope !37
  %160 = getelementptr inbounds i32, i32* %1, i64 %153
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %161, align 4, !alias.scope !40, !noalias !37
  %162 = getelementptr inbounds i32, i32* %160, i64 4
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %159, <4 x i32>* %163, align 4, !alias.scope !40, !noalias !37
  %164 = or i64 %130, 24
  %165 = getelementptr inbounds i32, i32* %105, i64 %164
  %166 = bitcast i32* %165 to <4 x i32>*
  %167 = load <4 x i32>, <4 x i32>* %166, align 4, !alias.scope !37
  %168 = getelementptr inbounds i32, i32* %165, i64 4
  %169 = bitcast i32* %168 to <4 x i32>*
  %170 = load <4 x i32>, <4 x i32>* %169, align 4, !alias.scope !37
  %171 = getelementptr inbounds i32, i32* %1, i64 %164
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> %167, <4 x i32>* %172, align 4, !alias.scope !40, !noalias !37
  %173 = getelementptr inbounds i32, i32* %171, i64 4
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %174, align 4, !alias.scope !40, !noalias !37
  %175 = add i64 %130, 32
  %176 = add i64 %131, -4
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %129, !llvm.loop !42

178:                                              ; preds = %129, %120
  %179 = phi i64 [ 0, %120 ], [ %175, %129 ]
  %180 = icmp eq i64 %125, 0
  br i1 %180, label %197, label %181

181:                                              ; preds = %178, %181
  %182 = phi i64 [ %194, %181 ], [ %179, %178 ]
  %183 = phi i64 [ %195, %181 ], [ %125, %178 ]
  %184 = getelementptr inbounds i32, i32* %105, i64 %182
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4, !alias.scope !37
  %187 = getelementptr inbounds i32, i32* %184, i64 4
  %188 = bitcast i32* %187 to <4 x i32>*
  %189 = load <4 x i32>, <4 x i32>* %188, align 4, !alias.scope !37
  %190 = getelementptr inbounds i32, i32* %1, i64 %182
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> %186, <4 x i32>* %191, align 4, !alias.scope !40, !noalias !37
  %192 = getelementptr inbounds i32, i32* %190, i64 4
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> %189, <4 x i32>* %193, align 4, !alias.scope !40, !noalias !37
  %194 = add i64 %182, 8
  %195 = add i64 %183, -1
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %181, !llvm.loop !44

197:                                              ; preds = %181, %178
  %198 = icmp eq i64 %109, %121
  br i1 %198, label %208, label %199

199:                                              ; preds = %197, %111, %107
  %200 = phi i64 [ 0, %111 ], [ 0, %107 ], [ %121, %197 ]
  br label %201

201:                                              ; preds = %199, %201
  %202 = phi i64 [ %206, %201 ], [ %200, %199 ]
  %203 = getelementptr inbounds i32, i32* %105, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds i32, i32* %1, i64 %202
  store i32 %204, i32* %205, align 4
  %206 = add nuw i64 %202, 1
  %207 = icmp ult i64 %206, %99
  br i1 %207, label %201, label %208, !llvm.loop !46

208:                                              ; preds = %201, %197, %93
  %209 = icmp eq i64 %97, 0
  br i1 %209, label %212, label %210

210:                                              ; preds = %208
  store i64 %97, i64* %94, align 8
  %211 = inttoptr i64 %97 to i8*
  call void @_ZdlPv(i8* %211) #18
  br label %212

212:                                              ; preds = %208, %210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #17
  br label %213

213:                                              ; preds = %3, %212
  %214 = phi i64 [ %99, %212 ], [ 0, %3 ]
  ret i64 %214
}

declare void @_ZN17CPDF_SyntaxParser6SetPosEl(%class.CPDF_SyntaxParser*, i64) local_unnamed_addr #1

declare void @_ZN17CPDF_SyntaxParser11GetNextWordEPb(%"class.fxcrt::ByteString"* sret, %class.CPDF_SyntaxParser*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN17CPDF_SyntaxParser13GetObjectBodyEP25CPDF_IndirectObjectHolder(%"class.fxcrt::RetainPtr.495"* sret, %class.CPDF_SyntaxParser*, %class.CPDF_IndirectObjectHolder*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #1

declare void @_Z17ProcessParseErrorN11CPDF_Parser5ErrorE(i32) local_unnamed_addr #1

declare i32 @_ZN13CPDF_Document7LoadDocERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEEPKc(%class.CPDF_Document*, %"class.fxcrt::RetainPtr"* dereferenceable(8), i8*) local_unnamed_addr #1

declare void @_Z25ReportUnsupportedFeaturesPK13CPDF_Document(%class.CPDF_Document*) local_unnamed_addr #1

declare %struct.fpdf_document_t__* @_Z28FPDFDocumentFromCPDFDocumentP13CPDF_Document(%class.CPDF_Document*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN13CPDF_DocumentC1ENSt3__110unique_ptrINS_15RenderDataIfaceENS0_14default_deleteIS2_EEEENS1_INS_13PageDataIfaceENS3_IS6_EEEE(%class.CPDF_Document*, %"class.CPDF_Document::RenderDataIface"*, %"class.CPDF_Document::PageDataIface"*) unnamed_addr #1

declare void @_ZN18CPDF_DocRenderDataC1Ev(%class.CPDF_DocRenderData*) unnamed_addr #1

declare void @_ZN16CPDF_DocPageDataC1Ev(%class.CPDF_DocPageData*) unnamed_addr #1

declare zeroext i1 @_ZN16CFX_RenderDevice17FillRectWithBlendERK7FX_RECTj9BlendMode(%class.CFX_RenderDevice*, %struct.FX_RECT* dereferenceable(16), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #11

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: nounwind readnone speculatable
declare { i65, i1 } @llvm.sadd.with.overflow.i65(i65, i65) #11

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16vectorIN12_GLOBAL__N_19XFAPacketENS_9allocatorIS2_EEE9push_backEOS2_(%"class.std::__1::vector.535"*, %"struct.(anonymous namespace)::XFAPacket"* dereferenceable(16)) unnamed_addr #13 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %0, i64 0, i32 0, i32 1
  %4 = load %"struct.(anonymous namespace)::XFAPacket"*, %"struct.(anonymous namespace)::XFAPacket"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"struct.(anonymous namespace)::XFAPacket"*, %"struct.(anonymous namespace)::XFAPacket"** %5, align 8
  %7 = icmp ult %"struct.(anonymous namespace)::XFAPacket"* %4, %6
  %8 = ptrtoint %"struct.(anonymous namespace)::XFAPacket"* %6 to i64
  br i1 %7, label %9, label %20

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %1, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %10, %"class.fxcrt::ByteString"* dereferenceable(8) %11) #17
  %12 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %1, i64 0, i32 1
  %14 = bitcast %class.CPDF_Stream** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %class.CPDF_Stream** %12 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %4, i64 1
  %18 = ptrtoint %"struct.(anonymous namespace)::XFAPacket"* %17 to i64
  %19 = bitcast %"struct.(anonymous namespace)::XFAPacket"** %3 to i64*
  store i64 %18, i64* %19, align 8
  br label %102

20:                                               ; preds = %2
  %21 = ptrtoint %"struct.(anonymous namespace)::XFAPacket"* %4 to i64
  %22 = bitcast %"struct.(anonymous namespace)::XFAPacket"** %3 to i64*
  %23 = bitcast %"class.std::__1::vector.535"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 4
  %27 = add nsw i64 %26, 1
  %28 = icmp ugt i64 %27, 1152921504606846975
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = bitcast %"class.std::__1::vector.535"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #20
  unreachable

31:                                               ; preds = %20
  %32 = bitcast %"struct.(anonymous namespace)::XFAPacket"** %5 to i64*
  %33 = sub i64 %8, %24
  %34 = ashr exact i64 %33, 4
  %35 = icmp ult i64 %34, 576460752303423487
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = ashr exact i64 %33, 3
  %38 = icmp ult i64 %37, %27
  %39 = select i1 %38, i64 %27, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %36
  %42 = icmp ugt i64 %39, 1152921504606846975
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #20
  unreachable

44:                                               ; preds = %41, %31
  %45 = phi i64 [ %39, %41 ], [ 1152921504606846975, %31 ]
  %46 = shl i64 %45, 4
  %47 = tail call i8* @_Znwm(i64 %46) #18
  %48 = bitcast i8* %47 to %"struct.(anonymous namespace)::XFAPacket"*
  br label %49

49:                                               ; preds = %44, %36
  %50 = phi i64 [ %45, %44 ], [ 0, %36 ]
  %51 = phi %"struct.(anonymous namespace)::XFAPacket"* [ %48, %44 ], [ null, %36 ]
  %52 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %51, i64 %26
  %53 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %51, i64 %50
  %54 = ptrtoint %"struct.(anonymous namespace)::XFAPacket"* %53 to i64
  %55 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %52, i64 0, i32 0
  %56 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %1, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %55, %"class.fxcrt::ByteString"* dereferenceable(8) %56) #17
  %57 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %51, i64 %26, i32 1
  %58 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %1, i64 0, i32 1
  %59 = bitcast %class.CPDF_Stream** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %class.CPDF_Stream** %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %52, i64 1
  %63 = ptrtoint %"struct.(anonymous namespace)::XFAPacket"* %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %0, i64 0, i32 0, i32 0
  %65 = load %"struct.(anonymous namespace)::XFAPacket"*, %"struct.(anonymous namespace)::XFAPacket"** %64, align 8
  %66 = load %"struct.(anonymous namespace)::XFAPacket"*, %"struct.(anonymous namespace)::XFAPacket"** %3, align 8
  %67 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %66, %65
  br i1 %67, label %68, label %70

68:                                               ; preds = %49
  %69 = ptrtoint %"struct.(anonymous namespace)::XFAPacket"* %65 to i64
  br label %86

70:                                               ; preds = %49, %70
  %71 = phi %"struct.(anonymous namespace)::XFAPacket"* [ %81, %70 ], [ %52, %49 ]
  %72 = phi %"struct.(anonymous namespace)::XFAPacket"* [ %73, %70 ], [ %66, %49 ]
  %73 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %72, i64 -1
  %74 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %71, i64 -1, i32 0
  %75 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %73, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %74, %"class.fxcrt::ByteString"* dereferenceable(8) %75) #17
  %76 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %71, i64 -1, i32 1
  %77 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %72, i64 -1, i32 1
  %78 = bitcast %class.CPDF_Stream** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %class.CPDF_Stream** %76 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %71, i64 -1
  %82 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %73, %65
  br i1 %82, label %83, label %70

83:                                               ; preds = %70
  %84 = load i64, i64* %23, align 8
  %85 = load %"struct.(anonymous namespace)::XFAPacket"*, %"struct.(anonymous namespace)::XFAPacket"** %3, align 8
  br label %86

86:                                               ; preds = %83, %68
  %87 = phi %"struct.(anonymous namespace)::XFAPacket"* [ %65, %68 ], [ %85, %83 ]
  %88 = phi %"struct.(anonymous namespace)::XFAPacket"* [ %52, %68 ], [ %81, %83 ]
  %89 = phi i64 [ %69, %68 ], [ %84, %83 ]
  %90 = ptrtoint %"struct.(anonymous namespace)::XFAPacket"* %88 to i64
  store i64 %90, i64* %23, align 8
  store i64 %63, i64* %22, align 8
  store i64 %54, i64* %32, align 8
  %91 = inttoptr i64 %89 to %"struct.(anonymous namespace)::XFAPacket"*
  %92 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %87, %91
  br i1 %92, label %98, label %93

93:                                               ; preds = %86, %93
  %94 = phi %"struct.(anonymous namespace)::XFAPacket"* [ %95, %93 ], [ %87, %86 ]
  %95 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %94, i64 -1
  %96 = getelementptr inbounds %"struct.(anonymous namespace)::XFAPacket", %"struct.(anonymous namespace)::XFAPacket"* %95, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %96) #17
  %97 = icmp eq %"struct.(anonymous namespace)::XFAPacket"* %95, %91
  br i1 %97, label %98, label %93

98:                                               ; preds = %93, %86
  %99 = icmp eq i64 %89, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = inttoptr i64 %89 to i8*
  tail call void @_ZdlPv(i8* %101) #18
  br label %102

102:                                              ; preds = %100, %98, %9
  ret void
}

declare %class.CPDF_Object* @_ZNK10CPDF_Array11GetObjectAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

declare %class.CPDF_Stream* @_ZNK10CPDF_Array11GetStreamAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

declare void @_ZNK11CPDF_String9GetStringEv(%"class.fxcrt::ByteString"* sret, %class.CPDF_String*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #15

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #16

declare void @_ZN24CFX_ReadOnlyMemoryStreamC1EN6pdfium4spanIKhEE(%class.CFX_ReadOnlyMemoryStream*, %"class.pdfium::span"*) unnamed_addr #1

declare void @_ZN20CPDFSDK_CustomAccessC1EP15FPDF_FILEACCESS(%class.CPDFSDK_CustomAccess*, %struct.FPDF_FILEACCESS*) unnamed_addr #1

declare void @_ZN9CPDF_PageC1EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_Page*, %class.CPDF_Document*, %class.CPDF_Dictionary*) unnamed_addr #1

declare void @_ZN20CPDF_PageRenderCacheC1EP9CPDF_Page(%class.CPDF_PageRenderCache*, %class.CPDF_Page*) unnamed_addr #1

declare void @_ZN22CPDF_PageRenderContextC1Ev(%class.CPDF_PageRenderContext*) unnamed_addr #1

declare void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13CPDF_NameTreeD1Ev(%class.CPDF_NameTree*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { nounwind readonly }
attributes #20 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainI24CFX_ReadOnlyMemoryStreamJNS_4spanIKhEEEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainI24CFX_ReadOnlyMemoryStreamJNS_4spanIKhEEEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6pdfium10MakeRetainI24CFX_ReadOnlyMemoryStreamJNS_4spanIKhEEEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZN6pdfium10MakeRetainI24CFX_ReadOnlyMemoryStreamJNS_4spanIKhEEEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6pdfium10MakeRetainI20CPDFSDK_CustomAccessJRP15FPDF_FILEACCESSEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZN6pdfium10MakeRetainI20CPDFSDK_CustomAccessJRP15FPDF_FILEACCESSEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN6pdfium10MakeRetainI9CPDF_PageJRP13CPDF_DocumentRP15CPDF_DictionaryEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZN6pdfium10MakeRetainI9CPDF_PageJRP13CPDF_DocumentRP15CPDF_DictionaryEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!17 = distinct !{!17, !"_ZNK10CFX_MatrixmlERKS_"}
!18 = !{!"branch_weights", i32 2000, i32 1}
!19 = !{i32 -2143318382}
!20 = !{i32 -2143318361}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!23 = distinct !{!23, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN6pdfium10MakeRetainI9CPDF_PageJRP13CPDF_DocumentRP15CPDF_DictionaryEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!29 = distinct !{!29, !"_ZN6pdfium10MakeRetainI9CPDF_PageJRP13CPDF_DocumentRP15CPDF_DictionaryEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!30 = !{!"branch_weights", i32 1, i32 1048575}
!31 = !{!"branch_weights", i32 1, i32 2000}
!32 = !{i32 -2143003658}
!33 = !{i32 -2143003637}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!36 = distinct !{!36, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !43}
!43 = !{!"llvm.loop.isvectorized", i32 1}
!44 = distinct !{!44, !45}
!45 = !{!"llvm.loop.unroll.disable"}
!46 = distinct !{!46, !43}
