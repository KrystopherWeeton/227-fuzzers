; ModuleID = '../../cc/paint/image_provider.cc'
source_filename = "../../cc/paint/image_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::ImageProvider::ScopedResult" = type { %"class.cc::DecodedDrawImage", %class.sk_sp.8, %"class.base::OnceCallback" }
%"class.cc::DecodedDrawImage" = type <{ %class.sk_sp, %"struct.gpu::Mailbox", %"class.absl::optional", %class.sk_sp.7, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%class.sk_sp.7 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%struct.SkSize = type { float, float }
%class.sk_sp.8 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

@_ZN2cc13ImageProvider12ScopedResultC1Ev = hidden unnamed_addr alias void (%"class.cc::ImageProvider::ScopedResult"*), void (%"class.cc::ImageProvider::ScopedResult"*)* @_ZN2cc13ImageProvider12ScopedResultC2Ev
@_ZN2cc13ImageProvider12ScopedResultC1ENS_16DecodedDrawImageE = hidden unnamed_addr alias void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodedDrawImage"*), void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodedDrawImage"*)* @_ZN2cc13ImageProvider12ScopedResultC2ENS_16DecodedDrawImageE
@_ZN2cc13ImageProvider12ScopedResultC1E5sk_spINS_13PaintOpBufferEE = hidden unnamed_addr alias void (%"class.cc::ImageProvider::ScopedResult"*, %class.sk_sp.8*), void (%"class.cc::ImageProvider::ScopedResult"*, %class.sk_sp.8*)* @_ZN2cc13ImageProvider12ScopedResultC2E5sk_spINS_13PaintOpBufferEE
@_ZN2cc13ImageProvider12ScopedResultC1ENS_16DecodedDrawImageEN4base12OnceCallbackIFvvEEE = hidden unnamed_addr alias void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodedDrawImage"*, %"class.base::OnceCallback"*), void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodedDrawImage"*, %"class.base::OnceCallback"*)* @_ZN2cc13ImageProvider12ScopedResultC2ENS_16DecodedDrawImageEN4base12OnceCallbackIFvvEEE
@_ZN2cc13ImageProvider12ScopedResultC1EOS1_ = hidden unnamed_addr alias void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"*), void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"*)* @_ZN2cc13ImageProvider12ScopedResultC2EOS1_
@_ZN2cc13ImageProvider12ScopedResultD1Ev = hidden unnamed_addr alias void (%"class.cc::ImageProvider::ScopedResult"*), void (%"class.cc::ImageProvider::ScopedResult"*)* @_ZN2cc13ImageProvider12ScopedResultD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13ImageProvider12ScopedResultC2Ev(%"class.cc::ImageProvider::ScopedResult"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 0
  tail call void @_ZN2cc16DecodedDrawImageC1Ev(%"class.cc::DecodedDrawImage"* %2) #4
  %3 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 1, i32 0
  %4 = bitcast %"class.cc::PaintOpBuffer"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN2cc16DecodedDrawImageC1Ev(%"class.cc::DecodedDrawImage"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13ImageProvider12ScopedResultC2ENS_16DecodedDrawImageE(%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodedDrawImage"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 0
  tail call void @_ZN2cc16DecodedDrawImageC1EOS0_(%"class.cc::DecodedDrawImage"* %3, %"class.cc::DecodedDrawImage"* dereferenceable(64) %1) #4
  %4 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 1, i32 0
  %5 = bitcast %"class.cc::PaintOpBuffer"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN2cc16DecodedDrawImageC1EOS0_(%"class.cc::DecodedDrawImage"*, %"class.cc::DecodedDrawImage"* dereferenceable(64)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13ImageProvider12ScopedResultC2E5sk_spINS_13PaintOpBufferEE(%"class.cc::ImageProvider::ScopedResult"*, %class.sk_sp.8* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 0
  tail call void @_ZN2cc16DecodedDrawImageC1Ev(%"class.cc::DecodedDrawImage"* %3) #4
  %4 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %1, i64 0, i32 0
  %6 = bitcast %class.sk_sp.8* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %5, align 8
  %8 = bitcast %class.sk_sp.8* %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13ImageProvider12ScopedResultC2ENS_16DecodedDrawImageEN4base12OnceCallbackIFvvEEE(%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodedDrawImage"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 0
  tail call void @_ZN2cc16DecodedDrawImageC1EOS0_(%"class.cc::DecodedDrawImage"* %4, %"class.cc::DecodedDrawImage"* dereferenceable(64) %1) #4
  %5 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 1, i32 0
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %5, align 8
  %6 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13ImageProvider12ScopedResultC2EOS1_(%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %1, i64 0, i32 0
  tail call void @_ZN2cc16DecodedDrawImageC1EOS0_(%"class.cc::DecodedDrawImage"* %3, %"class.cc::DecodedDrawImage"* dereferenceable(64) %4) #4
  %5 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %6, i64 0, i32 0
  %8 = bitcast %class.sk_sp.8* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %7, align 8
  %10 = bitcast %class.sk_sp.8* %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %1, i64 0, i32 2
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback"* %11 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.cc::ImageProvider::ScopedResult"* @_ZN2cc13ImageProvider12ScopedResultaSEOS1_(%"class.cc::ImageProvider::ScopedResult"* returned, %"class.cc::ImageProvider::ScopedResult"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = icmp eq %"class.base::internal::BindStateBase"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = ptrtoint %"class.base::internal::BindStateBase"* %5 to i64
  %9 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %8, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %4, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %5, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*)**
  %14 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* nonnull %5) #4
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  br label %15

15:                                               ; preds = %2, %7
  %16 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %1, i64 0, i32 0
  %17 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 0
  %18 = call dereferenceable(64) %"class.cc::DecodedDrawImage"* @_ZN2cc16DecodedDrawImageaSEOS0_(%"class.cc::DecodedDrawImage"* %17, %"class.cc::DecodedDrawImage"* dereferenceable(64) %16) #4
  %19 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %19, i64 0, i32 0
  %22 = bitcast %class.sk_sp.8* %19 to i64*
  %23 = load i64, i64* %22, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %21, align 8
  %24 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %20, i64 0, i32 0
  %25 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %24, align 8
  %26 = bitcast %class.sk_sp.8* %20 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %"class.cc::PaintOpBuffer"* %25, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %25, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = bitcast %"class.cc::PaintOpBuffer"* %25 to %class.SkRefCntBase*
  %34 = bitcast %"class.cc::PaintOpBuffer"* %25 to void (%class.SkRefCntBase*)***
  %35 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, i64 2
  %37 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, align 8
  call void %37(%class.SkRefCntBase* nonnull %33) #4
  br label %38

38:                                               ; preds = %15, %28, %32
  %39 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 2, i32 0
  %40 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %1, i64 0, i32 2, i32 0
  %41 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %39, %"class.base::internal::CallbackBase"* dereferenceable(8) %40) #4
  ret %"class.cc::ImageProvider::ScopedResult"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13ImageProvider12ScopedResult13DestroyDecodeEv(%"class.cc::ImageProvider::ScopedResult"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.base::internal::BindStateBase"* %4 to i64
  %8 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #4
  %9 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %7, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %3, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %4, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*)**
  %13 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* nonnull %4) #4
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #4
  br label %14

14:                                               ; preds = %6, %1
  ret void
}

declare dereferenceable(64) %"class.cc::DecodedDrawImage"* @_ZN2cc16DecodedDrawImageaSEOS0_(%"class.cc::DecodedDrawImage"*, %"class.cc::DecodedDrawImage"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13ImageProvider12ScopedResultD2Ev(%"class.cc::ImageProvider::ScopedResult"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.base::internal::BindStateBase"* %4 to i64
  %8 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #4
  %9 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %7, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %3, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %4, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*)**
  %13 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* nonnull %4) #4
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #4
  br label %14

14:                                               ; preds = %1, %6
  %15 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 2, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %15) #4
  %16 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 1, i32 0
  %17 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %16, align 8
  %18 = icmp eq %"class.cc::PaintOpBuffer"* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = bitcast %"class.cc::PaintOpBuffer"* %17 to %class.SkRefCntBase*
  %25 = bitcast %"class.cc::PaintOpBuffer"* %17 to void (%class.SkRefCntBase*)***
  %26 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, i64 2
  %28 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, align 8
  call void %28(%class.SkRefCntBase* nonnull %24) #4
  br label %29

29:                                               ; preds = %14, %19, %23
  %30 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %0, i64 0, i32 0
  call void @_ZN2cc16DecodedDrawImageD1Ev(%"class.cc::DecodedDrawImage"* %30) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc16DecodedDrawImageD1Ev(%"class.cc::DecodedDrawImage"*) unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
