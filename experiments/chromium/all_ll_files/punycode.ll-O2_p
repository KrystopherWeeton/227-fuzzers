; ModuleID = '../../third_party/icu/source/common/punycode.cpp'
source_filename = "../../third_party/icu/source/common/punycode.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind ssp uwtable
define hidden i32 @u_strToPunycode_69(i16* readonly, i32, i16*, i32, i8* readonly, i32*) local_unnamed_addr #0 {
  %7 = alloca [1000 x i32], align 16
  %8 = bitcast [1000 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4000, i8* nonnull %8) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 4000, i1 false)
  %9 = icmp eq i32* %5, null
  br i1 %9, label %384, label %10

10:                                               ; preds = %6
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %384

13:                                               ; preds = %10
  %14 = icmp eq i16* %0, null
  %15 = icmp slt i32 %1, -1
  %16 = or i1 %14, %15
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = icmp eq i16* %2, null
  %19 = icmp ne i32 %3, 0
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %17, %13
  store i32 1, i32* %5, align 4
  br label %384

22:                                               ; preds = %17
  %23 = icmp sgt i32 %1, 1000
  br i1 %23, label %24, label %25

24:                                               ; preds = %22
  store i32 31, i32* %5, align 4
  br label %384

25:                                               ; preds = %22
  %26 = icmp eq i32 %1, -1
  br i1 %26, label %31, label %27

27:                                               ; preds = %25
  %28 = icmp sgt i32 %1, 0
  br i1 %28, label %29, label %381

29:                                               ; preds = %27
  %30 = icmp eq i8* %4, null
  br label %115

31:                                               ; preds = %25
  %32 = load i16, i16* %0, align 2
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %381, label %34

34:                                               ; preds = %31
  %35 = icmp eq i8* %4, null
  br label %36

36:                                               ; preds = %34, %106
  %37 = phi i64 [ 0, %34 ], [ %109, %106 ]
  %38 = phi i16 [ %32, %34 ], [ %113, %106 ]
  %39 = phi i64 [ 0, %34 ], [ %111, %106 ]
  %40 = phi i32 [ 0, %34 ], [ %110, %106 ]
  %41 = phi i32 [ 0, %34 ], [ %107, %106 ]
  %42 = zext i16 %38 to i32
  %43 = icmp sgt i32 %40, 999
  br i1 %43, label %44, label %45

44:                                               ; preds = %36
  store i32 31, i32* %5, align 4
  br label %384

45:                                               ; preds = %36
  %46 = icmp ult i16 %38, 128
  br i1 %46, label %47, label %74

47:                                               ; preds = %45
  %48 = getelementptr inbounds [1000 x i32], [1000 x i32]* %7, i64 0, i64 %37
  store i32 0, i32* %48, align 4
  %49 = icmp slt i32 %41, %3
  br i1 %49, label %50, label %72

50:                                               ; preds = %47
  %51 = trunc i16 %38 to i8
  br i1 %35, label %66, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %4, i64 %39
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = add nsw i8 %51, -97
  %58 = icmp ult i8 %57, 26
  %59 = add nsw i16 %38, -32
  %60 = select i1 %58, i16 %59, i16 %38
  br label %66

61:                                               ; preds = %52
  %62 = add nsw i8 %51, -65
  %63 = icmp ult i8 %62, 26
  %64 = add nuw nsw i16 %38, 32
  %65 = select i1 %63, i16 %64, i16 %38
  br label %66

66:                                               ; preds = %56, %61, %50
  %67 = phi i16 [ %38, %50 ], [ %60, %56 ], [ %65, %61 ]
  %68 = shl i16 %67, 8
  %69 = ashr exact i16 %68, 8
  %70 = sext i32 %41 to i64
  %71 = getelementptr inbounds i16, i16* %2, i64 %70
  store i16 %69, i16* %71, align 2
  br label %72

72:                                               ; preds = %66, %47
  %73 = add nsw i32 %41, 1
  br label %106

74:                                               ; preds = %45
  br i1 %35, label %79, label %75

75:                                               ; preds = %74
  %76 = getelementptr inbounds i8, i8* %4, i64 %39
  %77 = load i8, i8* %76, align 1
  %78 = icmp ne i8 %77, 0
  br label %79

79:                                               ; preds = %74, %75
  %80 = phi i1 [ false, %74 ], [ %78, %75 ]
  %81 = zext i1 %80 to i32
  %82 = shl nuw i32 %81, 31
  %83 = and i32 %42, 63488
  %84 = icmp eq i32 %83, 55296
  br i1 %84, label %85, label %101

85:                                               ; preds = %79
  %86 = and i32 %42, 64512
  %87 = icmp eq i32 %86, 55296
  br i1 %87, label %88, label %100

88:                                               ; preds = %85
  %89 = add nsw i32 %40, 1
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i16, i16* %0, i64 %90
  %92 = load i16, i16* %91, align 2
  %93 = zext i16 %92 to i32
  %94 = and i32 %93, 64512
  %95 = icmp eq i32 %94, 56320
  br i1 %95, label %96, label %100

96:                                               ; preds = %88
  %97 = shl nuw nsw i32 %42, 10
  %98 = add nsw i32 %97, -56613888
  %99 = add nsw i32 %98, %93
  br label %101

100:                                              ; preds = %88, %85
  store i32 10, i32* %5, align 4
  br label %384

101:                                              ; preds = %79, %96
  %102 = phi i32 [ %99, %96 ], [ %42, %79 ]
  %103 = phi i32 [ %89, %96 ], [ %40, %79 ]
  %104 = or i32 %102, %82
  %105 = getelementptr inbounds [1000 x i32], [1000 x i32]* %7, i64 0, i64 %37
  store i32 %104, i32* %105, align 4
  br label %106

106:                                              ; preds = %72, %101
  %107 = phi i32 [ %73, %72 ], [ %41, %101 ]
  %108 = phi i32 [ %40, %72 ], [ %103, %101 ]
  %109 = add nuw i64 %37, 1
  %110 = add nsw i32 %108, 1
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i16, i16* %0, i64 %111
  %113 = load i16, i16* %112, align 2
  %114 = icmp eq i16 %113, 0
  br i1 %114, label %191, label %36

115:                                              ; preds = %29, %185
  %116 = phi i64 [ 0, %29 ], [ %188, %185 ]
  %117 = phi i32 [ 0, %29 ], [ %189, %185 ]
  %118 = phi i32 [ 0, %29 ], [ %186, %185 ]
  %119 = sext i32 %117 to i64
  %120 = getelementptr inbounds i16, i16* %0, i64 %119
  %121 = load i16, i16* %120, align 2
  %122 = zext i16 %121 to i32
  %123 = icmp ult i16 %121, 128
  br i1 %123, label %124, label %151

124:                                              ; preds = %115
  %125 = getelementptr inbounds [1000 x i32], [1000 x i32]* %7, i64 0, i64 %116
  store i32 0, i32* %125, align 4
  %126 = icmp slt i32 %118, %3
  br i1 %126, label %127, label %149

127:                                              ; preds = %124
  %128 = trunc i16 %121 to i8
  br i1 %30, label %143, label %129

129:                                              ; preds = %127
  %130 = getelementptr inbounds i8, i8* %4, i64 %119
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %138, label %133

133:                                              ; preds = %129
  %134 = add nsw i8 %128, -97
  %135 = icmp ult i8 %134, 26
  %136 = add nsw i16 %121, -32
  %137 = select i1 %135, i16 %136, i16 %121
  br label %143

138:                                              ; preds = %129
  %139 = add nsw i8 %128, -65
  %140 = icmp ult i8 %139, 26
  %141 = add nuw nsw i16 %121, 32
  %142 = select i1 %140, i16 %141, i16 %121
  br label %143

143:                                              ; preds = %133, %138, %127
  %144 = phi i16 [ %121, %127 ], [ %137, %133 ], [ %142, %138 ]
  %145 = shl i16 %144, 8
  %146 = ashr exact i16 %145, 8
  %147 = sext i32 %118 to i64
  %148 = getelementptr inbounds i16, i16* %2, i64 %147
  store i16 %146, i16* %148, align 2
  br label %149

149:                                              ; preds = %143, %124
  %150 = add nsw i32 %118, 1
  br label %185

151:                                              ; preds = %115
  br i1 %30, label %156, label %152

152:                                              ; preds = %151
  %153 = getelementptr inbounds i8, i8* %4, i64 %119
  %154 = load i8, i8* %153, align 1
  %155 = icmp ne i8 %154, 0
  br label %156

156:                                              ; preds = %151, %152
  %157 = phi i1 [ false, %151 ], [ %155, %152 ]
  %158 = zext i1 %157 to i32
  %159 = shl nuw i32 %158, 31
  %160 = and i32 %122, 63488
  %161 = icmp eq i32 %160, 55296
  br i1 %161, label %162, label %180

162:                                              ; preds = %156
  %163 = and i32 %122, 64512
  %164 = icmp eq i32 %163, 55296
  br i1 %164, label %165, label %179

165:                                              ; preds = %162
  %166 = add nsw i32 %117, 1
  %167 = icmp slt i32 %166, %1
  br i1 %167, label %168, label %179

168:                                              ; preds = %165
  %169 = sext i32 %166 to i64
  %170 = getelementptr inbounds i16, i16* %0, i64 %169
  %171 = load i16, i16* %170, align 2
  %172 = zext i16 %171 to i32
  %173 = and i32 %172, 64512
  %174 = icmp eq i32 %173, 56320
  br i1 %174, label %175, label %179

175:                                              ; preds = %168
  %176 = shl nuw nsw i32 %122, 10
  %177 = add nsw i32 %176, -56613888
  %178 = add nsw i32 %177, %172
  br label %180

179:                                              ; preds = %168, %165, %162
  store i32 10, i32* %5, align 4
  br label %384

180:                                              ; preds = %156, %175
  %181 = phi i32 [ %178, %175 ], [ %122, %156 ]
  %182 = phi i32 [ %166, %175 ], [ %117, %156 ]
  %183 = or i32 %181, %159
  %184 = getelementptr inbounds [1000 x i32], [1000 x i32]* %7, i64 0, i64 %116
  store i32 %183, i32* %184, align 4
  br label %185

185:                                              ; preds = %149, %180
  %186 = phi i32 [ %150, %149 ], [ %118, %180 ]
  %187 = phi i32 [ %117, %149 ], [ %182, %180 ]
  %188 = add nuw i64 %116, 1
  %189 = add nsw i32 %187, 1
  %190 = icmp slt i32 %189, %1
  br i1 %190, label %115, label %191

191:                                              ; preds = %185, %106
  %192 = phi i32 [ %107, %106 ], [ %186, %185 ]
  %193 = phi i64 [ %109, %106 ], [ %188, %185 ]
  %194 = trunc i64 %193 to i32
  %195 = icmp sgt i32 %192, 0
  br i1 %195, label %196, label %203

196:                                              ; preds = %191
  %197 = icmp slt i32 %192, %3
  br i1 %197, label %198, label %201

198:                                              ; preds = %196
  %199 = sext i32 %192 to i64
  %200 = getelementptr inbounds i16, i16* %2, i64 %199
  store i16 45, i16* %200, align 2
  br label %201

201:                                              ; preds = %198, %196
  %202 = add nuw nsw i32 %192, 1
  br label %203

203:                                              ; preds = %201, %191
  %204 = phi i32 [ %202, %201 ], [ %192, %191 ]
  %205 = icmp slt i32 %192, %194
  br i1 %205, label %206, label %381

206:                                              ; preds = %203
  %207 = icmp eq i32 %194, 0
  %208 = sext i32 %3 to i64
  %209 = and i64 %193, 4294967295
  %210 = and i64 %193, 4294967295
  %211 = and i64 %193, 1
  %212 = icmp eq i64 %209, 1
  %213 = sub nsw i64 %209, %211
  %214 = icmp eq i64 %211, 0
  br label %215

215:                                              ; preds = %206, %373
  %216 = phi i32 [ 72, %206 ], [ %377, %373 ]
  %217 = phi i32 [ %204, %206 ], [ %376, %373 ]
  %218 = phi i32 [ %192, %206 ], [ %375, %373 ]
  %219 = phi i32 [ 0, %206 ], [ %378, %373 ]
  %220 = phi i32 [ 128, %206 ], [ %379, %373 ]
  br i1 %207, label %256, label %221

221:                                              ; preds = %215
  br i1 %212, label %244, label %222

222:                                              ; preds = %221, %222
  %223 = phi i64 [ %241, %222 ], [ 0, %221 ]
  %224 = phi i32 [ %240, %222 ], [ 2147483647, %221 ]
  %225 = phi i64 [ %242, %222 ], [ %213, %221 ]
  %226 = getelementptr inbounds [1000 x i32], [1000 x i32]* %7, i64 0, i64 %223
  %227 = load i32, i32* %226, align 8
  %228 = and i32 %227, 2147483647
  %229 = icmp sle i32 %220, %228
  %230 = icmp slt i32 %228, %224
  %231 = and i1 %229, %230
  %232 = select i1 %231, i32 %228, i32 %224
  %233 = or i64 %223, 1
  %234 = getelementptr inbounds [1000 x i32], [1000 x i32]* %7, i64 0, i64 %233
  %235 = load i32, i32* %234, align 4
  %236 = and i32 %235, 2147483647
  %237 = icmp sle i32 %220, %236
  %238 = icmp slt i32 %236, %232
  %239 = and i1 %237, %238
  %240 = select i1 %239, i32 %236, i32 %232
  %241 = add nuw nsw i64 %223, 2
  %242 = add i64 %225, -2
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %222

244:                                              ; preds = %222, %221
  %245 = phi i32 [ undef, %221 ], [ %240, %222 ]
  %246 = phi i64 [ 0, %221 ], [ %241, %222 ]
  %247 = phi i32 [ 2147483647, %221 ], [ %240, %222 ]
  br i1 %214, label %256, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds [1000 x i32], [1000 x i32]* %7, i64 0, i64 %246
  %250 = load i32, i32* %249, align 4
  %251 = and i32 %250, 2147483647
  %252 = icmp sle i32 %220, %251
  %253 = icmp slt i32 %251, %247
  %254 = and i1 %252, %253
  %255 = select i1 %254, i32 %251, i32 %247
  br label %256

256:                                              ; preds = %248, %244, %215
  %257 = phi i32 [ 2147483647, %215 ], [ %245, %244 ], [ %255, %248 ]
  %258 = sub nsw i32 %257, %220
  %259 = sub i32 2147483647, %219
  %260 = sub i32 %259, %218
  %261 = add nsw i32 %218, 1
  %262 = sdiv i32 %260, %261
  %263 = icmp sgt i32 %258, %262
  br i1 %263, label %264, label %265

264:                                              ; preds = %256
  store i32 5, i32* %5, align 4
  br label %384

265:                                              ; preds = %256
  %266 = mul nsw i32 %258, %261
  %267 = add nsw i32 %266, %219
  br i1 %207, label %373, label %268

268:                                              ; preds = %265, %366
  %269 = phi i64 [ %371, %366 ], [ 0, %265 ]
  %270 = phi i32 [ %370, %366 ], [ %216, %265 ]
  %271 = phi i32 [ %369, %366 ], [ %217, %265 ]
  %272 = phi i32 [ %368, %366 ], [ %218, %265 ]
  %273 = phi i32 [ %367, %366 ], [ %267, %265 ]
  %274 = getelementptr inbounds [1000 x i32], [1000 x i32]* %7, i64 0, i64 %269
  %275 = load i32, i32* %274, align 4
  %276 = and i32 %275, 2147483647
  %277 = icmp slt i32 %276, %257
  br i1 %277, label %278, label %280

278:                                              ; preds = %268
  %279 = add nsw i32 %273, 1
  br label %366

280:                                              ; preds = %268
  %281 = icmp eq i32 %276, %257
  br i1 %281, label %282, label %366

282:                                              ; preds = %280
  %283 = add nsw i32 %270, 26
  %284 = sext i32 %271 to i64
  %285 = sub nsw i32 36, %270
  %286 = icmp sgt i32 %270, 35
  %287 = icmp sgt i32 %283, 36
  %288 = select i1 %287, i32 %285, i32 26
  %289 = select i1 %286, i32 1, i32 %288
  %290 = icmp slt i32 %273, %289
  %291 = icmp slt i32 %271, %3
  br i1 %290, label %321, label %292

292:                                              ; preds = %282, %310
  %293 = phi i1 [ %320, %310 ], [ %291, %282 ]
  %294 = phi i32 [ %318, %310 ], [ %289, %282 ]
  %295 = phi i32 [ %313, %310 ], [ 36, %282 ]
  %296 = phi i32 [ %312, %310 ], [ %273, %282 ]
  %297 = phi i64 [ %311, %310 ], [ %284, %282 ]
  %298 = sub nsw i32 %296, %294
  %299 = sub nsw i32 36, %294
  br i1 %293, label %300, label %310

300:                                              ; preds = %292
  %301 = srem i32 %298, %299
  %302 = add nsw i32 %301, %294
  %303 = icmp slt i32 %302, 26
  %304 = trunc i32 %302 to i16
  %305 = select i1 %303, i16 97, i16 22
  %306 = add i16 %305, %304
  %307 = shl i16 %306, 8
  %308 = ashr exact i16 %307, 8
  %309 = getelementptr inbounds i16, i16* %2, i64 %297
  store i16 %308, i16* %309, align 2
  br label %310

310:                                              ; preds = %292, %300
  %311 = add i64 %297, 1
  %312 = sdiv i32 %298, %299
  %313 = add nuw nsw i32 %295, 36
  %314 = sub nsw i32 %313, %270
  %315 = icmp slt i32 %314, 1
  %316 = icmp slt i32 %313, %283
  %317 = select i1 %316, i32 %314, i32 26
  %318 = select i1 %315, i32 1, i32 %317
  %319 = icmp slt i32 %312, %318
  %320 = icmp slt i64 %311, %208
  br i1 %319, label %321, label %292

321:                                              ; preds = %310, %282
  %322 = phi i64 [ %284, %282 ], [ %311, %310 ]
  %323 = phi i32 [ %273, %282 ], [ %312, %310 ]
  %324 = phi i1 [ %291, %282 ], [ %320, %310 ]
  %325 = trunc i64 %322 to i32
  br i1 %324, label %326, label %344

326:                                              ; preds = %321
  %327 = icmp slt i32 %323, 26
  br i1 %327, label %328, label %335

328:                                              ; preds = %326
  %329 = icmp sgt i32 %275, -1
  %330 = trunc i32 %323 to i8
  br i1 %329, label %333, label %331

331:                                              ; preds = %328
  %332 = add i8 %330, 65
  br label %338

333:                                              ; preds = %328
  %334 = add i8 %330, 97
  br label %338

335:                                              ; preds = %326
  %336 = trunc i32 %323 to i8
  %337 = add i8 %336, 22
  br label %338

338:                                              ; preds = %331, %333, %335
  %339 = phi i8 [ %332, %331 ], [ %334, %333 ], [ %337, %335 ]
  %340 = sext i8 %339 to i16
  %341 = shl i64 %322, 32
  %342 = ashr exact i64 %341, 32
  %343 = getelementptr inbounds i16, i16* %2, i64 %342
  store i16 %340, i16* %343, align 2
  br label %344

344:                                              ; preds = %338, %321
  %345 = add nsw i32 %325, 1
  %346 = add nsw i32 %272, 1
  %347 = icmp eq i32 %272, %192
  %348 = select i1 %347, i32 700, i32 2
  %349 = sdiv i32 %273, %348
  %350 = sdiv i32 %349, %346
  %351 = add nsw i32 %350, %349
  %352 = icmp sgt i32 %351, 455
  br i1 %352, label %353, label %359

353:                                              ; preds = %344, %353
  %354 = phi i32 [ %357, %353 ], [ 0, %344 ]
  %355 = phi i32 [ %356, %353 ], [ %351, %344 ]
  %356 = udiv i32 %355, 35
  %357 = add nuw nsw i32 %354, 36
  %358 = icmp sgt i32 %356, 455
  br i1 %358, label %353, label %359

359:                                              ; preds = %353, %344
  %360 = phi i32 [ %351, %344 ], [ %356, %353 ]
  %361 = phi i32 [ 0, %344 ], [ %357, %353 ]
  %362 = mul nsw i32 %360, 36
  %363 = add nsw i32 %360, 38
  %364 = sdiv i32 %362, %363
  %365 = add nsw i32 %364, %361
  br label %366

366:                                              ; preds = %278, %359, %280
  %367 = phi i32 [ %279, %278 ], [ 0, %359 ], [ %273, %280 ]
  %368 = phi i32 [ %272, %278 ], [ %346, %359 ], [ %272, %280 ]
  %369 = phi i32 [ %271, %278 ], [ %345, %359 ], [ %271, %280 ]
  %370 = phi i32 [ %270, %278 ], [ %365, %359 ], [ %270, %280 ]
  %371 = add nuw nsw i64 %269, 1
  %372 = icmp eq i64 %371, %210
  br i1 %372, label %373, label %268

373:                                              ; preds = %366, %265
  %374 = phi i32 [ %267, %265 ], [ %367, %366 ]
  %375 = phi i32 [ %218, %265 ], [ %368, %366 ]
  %376 = phi i32 [ %217, %265 ], [ %369, %366 ]
  %377 = phi i32 [ %216, %265 ], [ %370, %366 ]
  %378 = add nsw i32 %374, 1
  %379 = add nsw i32 %257, 1
  %380 = icmp slt i32 %375, %194
  br i1 %380, label %215, label %381

381:                                              ; preds = %373, %31, %27, %203
  %382 = phi i32 [ %204, %203 ], [ 0, %27 ], [ 0, %31 ], [ %376, %373 ]
  %383 = tail call i32 @u_terminateUChars_69(i16* %2, i32 %3, i32 %382, i32* nonnull %5) #3
  br label %384

384:                                              ; preds = %6, %10, %381, %264, %179, %100, %44, %24, %21
  %385 = phi i32 [ 0, %21 ], [ 0, %24 ], [ 0, %264 ], [ %383, %381 ], [ 0, %44 ], [ 0, %100 ], [ 0, %179 ], [ 0, %10 ], [ 0, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 4000, i8* nonnull %8) #3
  ret i32 %385
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @u_terminateUChars_69(i16*, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @u_strFromPunycode_69(i16*, i32, i16*, i32, i8*, i32*) local_unnamed_addr #0 {
  %7 = icmp eq i32* %5, null
  br i1 %7, label %273, label %8

8:                                                ; preds = %6
  %9 = load i32, i32* %5, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %273

11:                                               ; preds = %8
  %12 = icmp eq i16* %0, null
  %13 = icmp slt i32 %1, -1
  %14 = or i1 %12, %13
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = icmp eq i16* %2, null
  %17 = icmp ne i32 %3, 0
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %15, %11
  store i32 1, i32* %5, align 4
  br label %273

20:                                               ; preds = %15
  %21 = icmp eq i32 %1, -1
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = tail call i32 @u_strlen_69(i16* nonnull %0) #3
  br label %24

24:                                               ; preds = %22, %20
  %25 = phi i32 [ %23, %22 ], [ %1, %20 ]
  %26 = icmp sgt i32 %25, 2000
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  %28 = sext i32 %25 to i64
  br label %30

29:                                               ; preds = %24
  store i32 31, i32* %5, align 4
  br label %273

30:                                               ; preds = %27, %34
  %31 = phi i64 [ %28, %27 ], [ %35, %34 ]
  %32 = phi i32 [ %25, %27 ], [ %36, %34 ]
  %33 = icmp sgt i64 %31, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = add nsw i64 %31, -1
  %36 = add nsw i32 %32, -1
  %37 = getelementptr inbounds i16, i16* %0, i64 %35
  %38 = load i16, i16* %37, align 2
  %39 = icmp eq i16 %38, 45
  br i1 %39, label %42, label %30

40:                                               ; preds = %30
  %41 = trunc i64 %31 to i32
  br label %42

42:                                               ; preds = %34, %40
  %43 = phi i32 [ %41, %40 ], [ %36, %34 ]
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %67

45:                                               ; preds = %42
  %46 = icmp eq i8* %4, null
  %47 = sext i32 %43 to i64
  %48 = sext i32 %3 to i64
  br label %49

49:                                               ; preds = %45, %65
  %50 = phi i64 [ %47, %45 ], [ %51, %65 ]
  %51 = add nsw i64 %50, -1
  %52 = getelementptr inbounds i16, i16* %0, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = icmp ult i16 %53, 128
  br i1 %54, label %56, label %55

55:                                               ; preds = %49
  store i32 10, i32* %5, align 4
  br label %273

56:                                               ; preds = %49
  %57 = icmp sgt i64 %50, %48
  br i1 %57, label %65, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds i16, i16* %2, i64 %51
  store i16 %53, i16* %59, align 2
  br i1 %46, label %65, label %60

60:                                               ; preds = %58
  %61 = add nsw i16 %53, -65
  %62 = icmp ult i16 %61, 26
  %63 = zext i1 %62 to i8
  %64 = getelementptr inbounds i8, i8* %4, i64 %51
  store i8 %63, i8* %64, align 1
  br label %65

65:                                               ; preds = %58, %56, %60
  %66 = icmp sgt i64 %51, 0
  br i1 %66, label %49, label %67

67:                                               ; preds = %65, %42
  %68 = add nsw i32 %43, 1
  %69 = select i1 %44, i32 %68, i32 0
  %70 = icmp slt i32 %69, %25
  br i1 %70, label %71, label %270

71:                                               ; preds = %67
  %72 = icmp eq i8* %4, null
  br label %73

73:                                               ; preds = %71, %266
  %74 = phi i32 [ 1000000000, %71 ], [ %267, %266 ]
  %75 = phi i32 [ %43, %71 ], [ %137, %266 ]
  %76 = phi i32 [ %69, %71 ], [ %136, %266 ]
  %77 = phi i32 [ 72, %71 ], [ %157, %266 ]
  %78 = phi i32 [ 0, %71 ], [ %268, %266 ]
  %79 = phi i32 [ %43, %71 ], [ %173, %266 ]
  %80 = phi i32 [ 128, %71 ], [ %164, %266 ]
  %81 = icmp slt i32 %76, %25
  br i1 %81, label %82, label %85

82:                                               ; preds = %73
  %83 = add nsw i32 %77, 26
  %84 = sext i32 %76 to i64
  br label %86

85:                                               ; preds = %73, %129
  store i32 12, i32* %5, align 4
  br label %273

86:                                               ; preds = %129, %82
  %87 = phi i64 [ %84, %82 ], [ %91, %129 ]
  %88 = phi i32 [ 36, %82 ], [ %131, %129 ]
  %89 = phi i32 [ 1, %82 ], [ %130, %129 ]
  %90 = phi i32 [ %78, %82 ], [ %117, %129 ]
  %91 = add nsw i64 %87, 1
  %92 = getelementptr inbounds i16, i16* %0, i64 %87
  %93 = load i16, i16* %92, align 2
  %94 = zext i16 %93 to i32
  %95 = icmp ult i16 %93, 91
  br i1 %95, label %96, label %103

96:                                               ; preds = %86
  %97 = icmp ult i16 %93, 58
  br i1 %97, label %98, label %101

98:                                               ; preds = %96
  %99 = icmp ult i16 %93, 48
  %100 = add nsw i32 %94, -22
  br i1 %99, label %109, label %106

101:                                              ; preds = %96
  %102 = add nsw i32 %94, -65
  br label %106

103:                                              ; preds = %86
  %104 = icmp ult i16 %93, 123
  %105 = add nsw i32 %94, -97
  br i1 %104, label %106, label %109

106:                                              ; preds = %103, %98, %101
  %107 = phi i32 [ %100, %98 ], [ %102, %101 ], [ %105, %103 ]
  %108 = icmp slt i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %98, %103, %106
  store i32 10, i32* %5, align 4
  br label %273

110:                                              ; preds = %106
  %111 = sub nsw i32 2147483647, %90
  %112 = sdiv i32 %111, %89
  %113 = icmp sgt i32 %107, %112
  br i1 %113, label %114, label %115

114:                                              ; preds = %110
  store i32 12, i32* %5, align 4
  br label %273

115:                                              ; preds = %110
  %116 = mul nsw i32 %107, %89
  %117 = add nsw i32 %116, %90
  %118 = sub nsw i32 %88, %77
  %119 = icmp slt i32 %118, 1
  %120 = icmp slt i32 %88, %83
  %121 = select i1 %120, i32 %118, i32 26
  %122 = select i1 %119, i32 1, i32 %121
  %123 = icmp slt i32 %107, %122
  br i1 %123, label %134, label %124

124:                                              ; preds = %115
  %125 = sub nsw i32 36, %122
  %126 = sdiv i32 2147483647, %125
  %127 = icmp sgt i32 %89, %126
  br i1 %127, label %128, label %129

128:                                              ; preds = %124
  store i32 12, i32* %5, align 4
  br label %273

129:                                              ; preds = %124
  %130 = mul nsw i32 %125, %89
  %131 = add nuw nsw i32 %88, 36
  %132 = trunc i64 %91 to i32
  %133 = icmp eq i32 %25, %132
  br i1 %133, label %85, label %86

134:                                              ; preds = %115
  %135 = getelementptr inbounds i16, i16* %0, i64 %87
  %136 = trunc i64 %91 to i32
  %137 = add nsw i32 %75, 1
  %138 = sub nsw i32 %117, %78
  %139 = icmp eq i32 %78, 0
  %140 = select i1 %139, i32 700, i32 2
  %141 = sdiv i32 %138, %140
  %142 = sdiv i32 %141, %137
  %143 = add nsw i32 %142, %141
  %144 = icmp sgt i32 %143, 455
  br i1 %144, label %145, label %151

145:                                              ; preds = %134, %145
  %146 = phi i32 [ %149, %145 ], [ 0, %134 ]
  %147 = phi i32 [ %148, %145 ], [ %143, %134 ]
  %148 = udiv i32 %147, 35
  %149 = add nuw nsw i32 %146, 36
  %150 = icmp sgt i32 %148, 455
  br i1 %150, label %145, label %151

151:                                              ; preds = %145, %134
  %152 = phi i32 [ %143, %134 ], [ %148, %145 ]
  %153 = phi i32 [ 0, %134 ], [ %149, %145 ]
  %154 = mul nsw i32 %152, 36
  %155 = add nsw i32 %152, 38
  %156 = sdiv i32 %154, %155
  %157 = add nsw i32 %156, %153
  %158 = sdiv i32 %117, %137
  %159 = srem i32 %117, %137
  %160 = sub nsw i32 2147483647, %80
  %161 = icmp sgt i32 %158, %160
  br i1 %161, label %162, label %163

162:                                              ; preds = %151
  store i32 12, i32* %5, align 4
  br label %273

163:                                              ; preds = %151
  %164 = add nsw i32 %158, %80
  %165 = icmp sgt i32 %164, 1114111
  %166 = and i32 %164, -2048
  %167 = icmp eq i32 %166, 55296
  %168 = or i1 %165, %167
  br i1 %168, label %169, label %170

169:                                              ; preds = %163
  store i32 12, i32* %5, align 4
  br label %273

170:                                              ; preds = %163
  %171 = icmp ult i32 %164, 65536
  %172 = select i1 %171, i32 1, i32 2
  %173 = add nsw i32 %172, %79
  %174 = icmp sgt i32 %173, %3
  %175 = or i1 %16, %174
  br i1 %175, label %266, label %176

176:                                              ; preds = %170
  %177 = icmp sgt i32 %159, %74
  br i1 %177, label %181, label %178

178:                                              ; preds = %176
  %179 = add nsw i32 %74, 1
  %180 = select i1 %171, i32 %179, i32 %159
  br label %219

181:                                              ; preds = %176
  %182 = sub nsw i32 %159, %74
  %183 = icmp sgt i32 %182, 0
  br i1 %183, label %184, label %219

184:                                              ; preds = %181
  %185 = icmp slt i32 %79, 0
  br label %186

186:                                              ; preds = %184, %215
  %187 = phi i32 [ %182, %184 ], [ %217, %215 ]
  %188 = phi i32 [ %74, %184 ], [ %216, %215 ]
  %189 = icmp slt i32 %188, %79
  br i1 %189, label %190, label %194

190:                                              ; preds = %186
  %191 = sext i32 %188 to i64
  %192 = getelementptr inbounds i16, i16* %2, i64 %191
  %193 = load i16, i16* %192, align 2
  br label %200

194:                                              ; preds = %186
  br i1 %185, label %195, label %219

195:                                              ; preds = %194
  %196 = sext i32 %188 to i64
  %197 = getelementptr inbounds i16, i16* %2, i64 %196
  %198 = load i16, i16* %197, align 2
  %199 = icmp eq i16 %198, 0
  br i1 %199, label %219, label %200

200:                                              ; preds = %190, %195
  %201 = phi i16 [ %193, %190 ], [ %198, %195 ]
  %202 = add nsw i32 %188, 1
  %203 = and i16 %201, -1024
  %204 = icmp ne i16 %203, -10240
  %205 = icmp eq i32 %202, %79
  %206 = or i1 %205, %204
  br i1 %206, label %215, label %207

207:                                              ; preds = %200
  %208 = sext i32 %202 to i64
  %209 = getelementptr inbounds i16, i16* %2, i64 %208
  %210 = load i16, i16* %209, align 2
  %211 = and i16 %210, -1024
  %212 = icmp eq i16 %211, -9216
  %213 = add nsw i32 %188, 2
  %214 = select i1 %212, i32 %213, i32 %202
  br label %215

215:                                              ; preds = %207, %200
  %216 = phi i32 [ %202, %200 ], [ %214, %207 ]
  %217 = add nsw i32 %187, -1
  %218 = icmp sgt i32 %217, 0
  br i1 %218, label %186, label %219

219:                                              ; preds = %195, %194, %215, %181, %178
  %220 = phi i32 [ %180, %178 ], [ %74, %181 ], [ %74, %215 ], [ %74, %194 ], [ %74, %195 ]
  %221 = phi i32 [ %159, %178 ], [ %74, %181 ], [ %188, %195 ], [ %188, %194 ], [ %216, %215 ]
  %222 = icmp sgt i32 %79, %221
  br i1 %222, label %223, label %237

223:                                              ; preds = %219
  %224 = sext i32 %221 to i64
  %225 = getelementptr inbounds i16, i16* %2, i64 %224
  %226 = zext i32 %172 to i64
  %227 = getelementptr inbounds i16, i16* %225, i64 %226
  %228 = bitcast i16* %227 to i8*
  %229 = bitcast i16* %225 to i8*
  %230 = sub nsw i32 %79, %221
  %231 = shl nsw i32 %230, 1
  %232 = sext i32 %231 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %228, i8* align 2 %229, i64 %232, i1 false)
  br i1 %72, label %237, label %233

233:                                              ; preds = %223
  %234 = getelementptr inbounds i8, i8* %4, i64 %224
  %235 = getelementptr inbounds i8, i8* %234, i64 %226
  %236 = sext i32 %230 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %235, i8* align 1 %234, i64 %236, i1 false)
  br label %237

237:                                              ; preds = %223, %233, %219
  br i1 %171, label %238, label %240

238:                                              ; preds = %237
  %239 = trunc i32 %164 to i16
  br label %250

240:                                              ; preds = %237
  %241 = lshr i32 %164, 10
  %242 = trunc i32 %241 to i16
  %243 = add i16 %242, -10304
  %244 = sext i32 %221 to i64
  %245 = getelementptr inbounds i16, i16* %2, i64 %244
  store i16 %243, i16* %245, align 2
  %246 = trunc i32 %164 to i16
  %247 = and i16 %246, 1023
  %248 = or i16 %247, -9216
  %249 = add nsw i32 %221, 1
  br label %250

250:                                              ; preds = %240, %238
  %251 = phi i32 [ %249, %240 ], [ %221, %238 ]
  %252 = phi i16 [ %248, %240 ], [ %239, %238 ]
  %253 = sext i32 %251 to i64
  %254 = getelementptr inbounds i16, i16* %2, i64 %253
  store i16 %252, i16* %254, align 2
  br i1 %72, label %266, label %255

255:                                              ; preds = %250
  %256 = load i16, i16* %135, align 2
  %257 = add i16 %256, -65
  %258 = icmp ult i16 %257, 26
  %259 = zext i1 %258 to i8
  %260 = sext i32 %221 to i64
  %261 = getelementptr inbounds i8, i8* %4, i64 %260
  store i8 %259, i8* %261, align 1
  br i1 %171, label %266, label %262

262:                                              ; preds = %255
  %263 = add nsw i32 %221, 1
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds i8, i8* %4, i64 %264
  store i8 0, i8* %265, align 1
  br label %266

266:                                              ; preds = %262, %250, %255, %170
  %267 = phi i32 [ %74, %170 ], [ %220, %255 ], [ %220, %250 ], [ %220, %262 ]
  %268 = add nsw i32 %159, 1
  %269 = icmp sgt i32 %25, %136
  br i1 %269, label %73, label %270

270:                                              ; preds = %266, %67
  %271 = phi i32 [ %43, %67 ], [ %173, %266 ]
  %272 = tail call i32 @u_terminateUChars_69(i16* %2, i32 %3, i32 %271, i32* nonnull %5) #3
  br label %273

273:                                              ; preds = %6, %8, %270, %169, %162, %128, %114, %109, %85, %55, %29, %19
  %274 = phi i32 [ 0, %19 ], [ 0, %29 ], [ 0, %55 ], [ 0, %85 ], [ 0, %109 ], [ 0, %114 ], [ 0, %162 ], [ 0, %169 ], [ 0, %128 ], [ %272, %270 ], [ 0, %8 ], [ 0, %6 ]
  ret i32 %274
}

declare i32 @u_strlen_69(i16*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
