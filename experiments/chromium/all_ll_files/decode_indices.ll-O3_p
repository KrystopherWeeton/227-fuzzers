; ModuleID = '../../third_party/opus/src/silk/decode_indices.c'
source_filename = "../../third_party/opus/src/silk/decode_indices.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.silk_decoder_state = type { i32, [320 x i32], [16 x i32], [480 x i16], i32, i8, i32, i32, i32, i32, i32, i32, i32, [16 x i16], i32, i8*, i8*, i32, i32, i32, i16, [3 x i32], i32, [3 x i32], %struct._silk_resampler_state_struct, %struct.silk_NLSF_CB_struct*, %struct.SideInfoIndices, %struct.silk_CNG_struct, i32, i32, i32, %struct.silk_PLC_struct }
%struct._silk_resampler_state_struct = type { [6 x i32], %union.anon, [48 x i16], i32, i32, i32, i32, i32, i32, i32, i32, i16* }
%union.anon = type { [36 x i32] }
%struct.silk_NLSF_CB_struct = type { i16, i16, i16, i16, i8*, i16*, i8*, i8*, i8*, i8*, i8*, i16* }
%struct.SideInfoIndices = type { [4 x i8], [4 x i8], [17 x i8], i16, i8, i8, i8, i8, i8, i8, i8 }
%struct.silk_CNG_struct = type { [320 x i32], [16 x i16], [16 x i32], i32, i32, i32 }
%struct.silk_PLC_struct = type { i32, [5 x i16], [16 x i16], i32, i32, i16, i32, i32, i16, [2 x i32], i32, i32, i32 }
%struct.ec_ctx = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@silk_type_offset_VAD_iCDF = external constant [4 x i8], align 1
@silk_type_offset_no_VAD_iCDF = external constant [2 x i8], align 1
@silk_delta_gain_iCDF = external constant [41 x i8], align 16
@silk_gain_iCDF = external constant [3 x [8 x i8]], align 16
@silk_uniform8_iCDF = external constant [8 x i8], align 1
@.str = private unnamed_addr constant [62 x i8] c"assertion failed: psDec->psNLSF_CB->order == psDec->LPC_order\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"../../third_party/opus/src/silk/decode_indices.c\00", align 1
@silk_NLSF_EXT_iCDF = external constant [7 x i8], align 1
@silk_NLSF_interpolation_factor_iCDF = external constant [5 x i8], align 1
@silk_pitch_delta_iCDF = external constant [21 x i8], align 16
@silk_pitch_lag_iCDF = external constant [32 x i8], align 16
@silk_LTP_per_index_iCDF = external constant [3 x i8], align 1
@silk_LTP_gain_iCDF_ptrs = external local_unnamed_addr constant [3 x i8*], align 16
@silk_LTPscale_iCDF = external constant [3 x i8], align 1
@silk_uniform4_iCDF = external constant [4 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @silk_decode_indices(%struct.silk_decoder_state*, %struct.ec_ctx*, i32, i32, i32) local_unnamed_addr #0 {
  %6 = alloca [16 x i16], align 16
  %7 = alloca [16 x i8], align 16
  %8 = bitcast [16 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #4
  %9 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i64 0, i64 0
  %11 = bitcast [16 x i16]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #4
  %12 = icmp eq i32 %3, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 16, i1 false)
  br i1 %12, label %13, label %18

13:                                               ; preds = %5
  %14 = sext i32 %2 to i64
  %15 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 21, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %13, %5
  %19 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @silk_type_offset_VAD_iCDF, i64 0, i64 0), i32 8) #4
  %20 = add nsw i32 %19, 2
  br label %23

21:                                               ; preds = %13
  %22 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_type_offset_no_VAD_iCDF, i64 0, i64 0), i32 8) #4
  br label %23

23:                                               ; preds = %21, %18
  %24 = phi i32 [ %20, %18 ], [ %22, %21 ]
  %25 = lshr i32 %24, 1
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26
  %28 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 5
  store i8 %26, i8* %28, align 1
  %29 = trunc i32 %24 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 6
  store i8 %30, i8* %31, align 2
  %32 = icmp eq i32 %4, 2
  br i1 %32, label %33, label %37

33:                                               ; preds = %23
  %34 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @silk_delta_gain_iCDF, i64 0, i64 0), i32 8) #4
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %27, i64 0, i32 0, i64 0
  store i8 %35, i8* %36, align 8
  br label %48

37:                                               ; preds = %23
  %38 = sext i8 %26 to i64
  %39 = getelementptr inbounds [3 x [8 x i8]], [3 x [8 x i8]]* @silk_gain_iCDF, i64 0, i64 %38, i64 0
  %40 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* %39, i32 8) #4
  %41 = trunc i32 %40 to i8
  %42 = shl i8 %41, 3
  %43 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %27, i64 0, i32 0, i64 0
  store i8 %42, i8* %43, align 8
  %44 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @silk_uniform8_iCDF, i64 0, i64 0), i32 8) #4
  %45 = load i8, i8* %43, align 8
  %46 = trunc i32 %44 to i8
  %47 = add i8 %45, %46
  store i8 %47, i8* %43, align 8
  br label %48

48:                                               ; preds = %37, %33
  %49 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 8
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %50, 1
  br i1 %51, label %52, label %61

52:                                               ; preds = %48, %52
  %53 = phi i64 [ %57, %52 ], [ 1, %48 ]
  %54 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @silk_delta_gain_iCDF, i64 0, i64 0), i32 8) #4
  %55 = trunc i32 %54 to i8
  %56 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 0, i64 %53
  store i8 %55, i8* %56, align 1
  %57 = add nuw nsw i64 %53, 1
  %58 = load i32, i32* %49, align 4
  %59 = sext i32 %58 to i64
  %60 = icmp slt i64 %57, %59
  br i1 %60, label %52, label %61

61:                                               ; preds = %52, %48
  %62 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 25
  %63 = load %struct.silk_NLSF_CB_struct*, %struct.silk_NLSF_CB_struct** %62, align 8
  %64 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %63, i64 0, i32 6
  %65 = load i8*, i8** %64, align 8
  %66 = load i8, i8* %28, align 1
  %67 = ashr i8 %66, 1
  %68 = sext i8 %67 to i64
  %69 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %63, i64 0, i32 0
  %70 = load i16, i16* %69, align 8
  %71 = sext i16 %70 to i64
  %72 = mul nsw i64 %68, %71
  %73 = getelementptr inbounds i8, i8* %65, i64 %72
  %74 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* %73, i32 8) #4
  %75 = trunc i32 %74 to i8
  %76 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 2, i64 0
  store i8 %75, i8* %76, align 8
  %77 = load %struct.silk_NLSF_CB_struct*, %struct.silk_NLSF_CB_struct** %62, align 8
  %78 = shl i32 %74, 24
  %79 = ashr exact i32 %78, 24
  call void @silk_NLSF_unpack(i16* nonnull %9, i8* nonnull %10, %struct.silk_NLSF_CB_struct* %77, i32 %79) #4
  %80 = load %struct.silk_NLSF_CB_struct*, %struct.silk_NLSF_CB_struct** %62, align 8
  %81 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %80, i64 0, i32 1
  %82 = load i16, i16* %81, align 2
  %83 = sext i16 %82 to i32
  %84 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 12
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, %83
  br i1 %86, label %87, label %89

87:                                               ; preds = %61
  %88 = icmp sgt i16 %82, 0
  br i1 %88, label %90, label %117

89:                                               ; preds = %61
  call void @celt_fatal(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 82) #5
  unreachable

90:                                               ; preds = %87, %106
  %91 = phi i64 [ %110, %106 ], [ 0, %87 ]
  %92 = phi %struct.silk_NLSF_CB_struct* [ %112, %106 ], [ %80, %87 ]
  %93 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %92, i64 0, i32 9
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 %91
  %96 = load i16, i16* %95, align 2
  %97 = sext i16 %96 to i64
  %98 = getelementptr inbounds i8, i8* %94, i64 %97
  %99 = call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* %98, i32 8) #4
  switch i32 %99, label %106 [
    i32 0, label %100
    i32 8, label %103
  ]

100:                                              ; preds = %90
  %101 = call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @silk_NLSF_EXT_iCDF, i64 0, i64 0), i32 8) #4
  %102 = sub nsw i32 0, %101
  br label %106

103:                                              ; preds = %90
  %104 = call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @silk_NLSF_EXT_iCDF, i64 0, i64 0), i32 8) #4
  %105 = add nsw i32 %104, 8
  br label %106

106:                                              ; preds = %90, %103, %100
  %107 = phi i32 [ %102, %100 ], [ %105, %103 ], [ %99, %90 ]
  %108 = trunc i32 %107 to i8
  %109 = add i8 %108, -4
  %110 = add nuw nsw i64 %91, 1
  %111 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 2, i64 %110
  store i8 %109, i8* %111, align 1
  %112 = load %struct.silk_NLSF_CB_struct*, %struct.silk_NLSF_CB_struct** %62, align 8
  %113 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %112, i64 0, i32 1
  %114 = load i16, i16* %113, align 2
  %115 = sext i16 %114 to i64
  %116 = icmp slt i64 %110, %115
  br i1 %116, label %90, label %117

117:                                              ; preds = %106, %87
  %118 = load i32, i32* %49, align 4
  %119 = icmp eq i32 %118, 4
  br i1 %119, label %120, label %123

120:                                              ; preds = %117
  %121 = call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @silk_NLSF_interpolation_factor_iCDF, i64 0, i64 0), i32 8) #4
  %122 = trunc i32 %121 to i8
  br label %123

123:                                              ; preds = %117, %120
  %124 = phi i8 [ %122, %120 ], [ 4, %117 ]
  %125 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 7
  store i8 %124, i8* %125, align 1
  %126 = load i8, i8* %28, align 1
  %127 = icmp eq i8 %126, 2
  br i1 %127, label %128, label %202

128:                                              ; preds = %123
  br i1 %32, label %129, label %143

129:                                              ; preds = %128
  %130 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 19
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 2
  br i1 %132, label %133, label %143

133:                                              ; preds = %129
  %134 = call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @silk_pitch_delta_iCDF, i64 0, i64 0), i32 8) #4
  %135 = trunc i32 %134 to i16
  %136 = icmp sgt i16 %135, 0
  br i1 %136, label %137, label %143

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 20
  %139 = load i16, i16* %138, align 4
  %140 = add nsw i16 %135, -9
  %141 = add i16 %140, %139
  %142 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 3
  store i16 %141, i16* %142, align 2
  br label %159

143:                                              ; preds = %128, %129, %133
  %144 = call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @silk_pitch_lag_iCDF, i64 0, i64 0), i32 8) #4
  %145 = shl i32 %144, 16
  %146 = ashr exact i32 %145, 16
  %147 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 6
  %148 = load i32, i32* %147, align 4
  %149 = ashr i32 %148, 1
  %150 = mul nsw i32 %146, %149
  %151 = trunc i32 %150 to i16
  %152 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 3
  store i16 %151, i16* %152, align 2
  %153 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 15
  %154 = load i8*, i8** %153, align 8
  %155 = call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* %154, i32 8) #4
  %156 = load i16, i16* %152, align 2
  %157 = trunc i32 %155 to i16
  %158 = add i16 %156, %157
  store i16 %158, i16* %152, align 2
  br label %159

159:                                              ; preds = %137, %143
  %160 = phi i16 [ %141, %137 ], [ %158, %143 ]
  %161 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 20
  store i16 %160, i16* %161, align 4
  %162 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 16
  %163 = load i8*, i8** %162, align 8
  %164 = call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* %163, i32 8) #4
  %165 = trunc i32 %164 to i8
  %166 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 4
  store i8 %165, i8* %166, align 4
  %167 = call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @silk_LTP_per_index_iCDF, i64 0, i64 0), i32 8) #4
  %168 = trunc i32 %167 to i8
  %169 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 8
  store i8 %168, i8* %169, align 8
  %170 = load i32, i32* %49, align 4
  %171 = icmp sgt i32 %170, 0
  br i1 %171, label %172, label %194

172:                                              ; preds = %159
  %173 = sext i8 %168 to i64
  %174 = getelementptr inbounds [3 x i8*], [3 x i8*]* @silk_LTP_gain_iCDF_ptrs, i64 0, i64 %173
  %175 = load i8*, i8** %174, align 8
  %176 = call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* %175, i32 8) #4
  %177 = trunc i32 %176 to i8
  %178 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 1, i64 0
  store i8 %177, i8* %178, align 1
  %179 = load i32, i32* %49, align 4
  %180 = icmp sgt i32 %179, 1
  br i1 %180, label %181, label %194

181:                                              ; preds = %172, %181
  %182 = phi i64 [ %190, %181 ], [ 1, %172 ]
  %183 = load i8, i8* %169, align 8
  %184 = sext i8 %183 to i64
  %185 = getelementptr inbounds [3 x i8*], [3 x i8*]* @silk_LTP_gain_iCDF_ptrs, i64 0, i64 %184
  %186 = load i8*, i8** %185, align 8
  %187 = call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* %186, i32 8) #4
  %188 = trunc i32 %187 to i8
  %189 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 1, i64 %182
  store i8 %188, i8* %189, align 1
  %190 = add nuw nsw i64 %182, 1
  %191 = load i32, i32* %49, align 4
  %192 = sext i32 %191 to i64
  %193 = icmp slt i64 %190, %192
  br i1 %193, label %181, label %194

194:                                              ; preds = %181, %172, %159
  %195 = icmp eq i32 %4, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %194
  %197 = call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @silk_LTPscale_iCDF, i64 0, i64 0), i32 8) #4
  %198 = trunc i32 %197 to i8
  br label %199

199:                                              ; preds = %194, %196
  %200 = phi i8 [ %198, %196 ], [ 0, %194 ]
  %201 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 9
  store i8 %200, i8* %201, align 1
  br label %202

202:                                              ; preds = %199, %123
  %203 = load i8, i8* %28, align 1
  %204 = sext i8 %203 to i32
  %205 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 19
  store i32 %204, i32* %205, align 8
  %206 = call i32 @ec_dec_icdf(%struct.ec_ctx* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @silk_uniform4_iCDF, i64 0, i64 0), i32 8) #4
  %207 = trunc i32 %206 to i8
  %208 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 10
  store i8 %207, i8* %208, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @ec_dec_icdf(%struct.ec_ctx*, i8*, i32) local_unnamed_addr #2

declare void @silk_NLSF_unpack(i16*, i8*, %struct.silk_NLSF_CB_struct*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
