; ModuleID = '../../third_party/swiftshader/src/Renderer/Sampler.cpp'
source_filename = "../../third_party/swiftshader/src/Renderer/Sampler.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.sw::Sampler::State" = type { [6 x i8], [2 x i8] }
%"class.sw::Sampler" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.sw::Texture", float, [12 x i8] }>
%"struct.sw::Texture" = type { [14 x %"struct.sw::Mipmap"], float, [12 x i8], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", [4 x [4 x i16]], [4 x %"struct.sw::float4"], float, i32, i32, float, float, [12 x i8] }
%"struct.sw::Mipmap" = type { [6 x i8*], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [8 x i8], %"struct.sw::int4", %"struct.sw::int4" }
%"struct.sw::int4" = type { i32, i32, i32, i32 }
%"struct.sw::float4" = type { float, float, float, float }
%"class.sw::Surface" = type <{ i32 (...)**, %"class.sw::Resource"*, %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", i8, i8, i8, i8, i32, i8, i8, [6 x i8] }>
%"class.sw::Resource" = type { i64, %"class.sw::MutexLock", %"class.sw::Event", i32, i32, i32, i8, i8* }
%"class.sw::MutexLock" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.sw::Event" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%"struct.sw::Surface::Buffer" = type <{ i8*, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, %"class.sw::AtomicInt", i8, [3 x i8] }>
%"class.sw::AtomicInt" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.sw::Color" = type { float, float, float, float }

@_ZN2sw7Sampler27maximumTextureFilterQualityE = hidden local_unnamed_addr global i32 4, align 4
@_ZN2sw7Sampler26maximumMipmapFilterQualityE = hidden local_unnamed_addr global i32 1, align 4
@_ZZN2sw7SamplerC1EvE4zero = internal constant i32 16711935, align 4

@_ZN2sw7Sampler5StateC1Ev = hidden unnamed_addr alias void (%"struct.sw::Sampler::State"*), void (%"struct.sw::Sampler::State"*)* @_ZN2sw7Sampler5StateC2Ev
@_ZN2sw7SamplerC1Ev = hidden unnamed_addr alias void (%"class.sw::Sampler"*), void (%"class.sw::Sampler"*)* @_ZN2sw7SamplerC2Ev
@_ZN2sw7SamplerD1Ev = hidden unnamed_addr alias void (%"class.sw::Sampler"*), void (%"class.sw::Sampler"*)* @_ZN2sw7SamplerD2Ev

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler5StateC2Ev(%"struct.sw::Sampler::State"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.sw::Sampler::State"* %0 to i64*
  store i64 0, i64* %2, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw7SamplerC2Ev(%"class.sw::Sampler"*) unnamed_addr #2 align 2 {
  br label %16

2:                                                ; preds = %26
  %3 = bitcast %"class.sw::Sampler"* %0 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 4>, <4 x i32>* %3, align 16
  %4 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 12
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 13
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 14
  %8 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %8, i8 0, i64 19, i1 false)
  %9 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 1, i32 2, i32 3, i32 0>, <4 x i32>* %9, align 4
  %10 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 1
  store float 0.000000e+00, float* %10, align 16
  %11 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 20
  store float 1.000000e+00, float* %11, align 16
  %12 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 10
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 11
  store i32 1000, i32* %13, align 8
  %14 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 13
  store float 1.200000e+01, float* %14, align 16
  %15 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 12
  store float 0.000000e+00, float* %15, align 4
  ret void

16:                                               ; preds = %26, %1
  %17 = phi i64 [ 0, %1 ], [ %27, %26 ]
  %18 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %17
  %19 = bitcast %"struct.sw::Mipmap"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %19, i8 0, i64 192, i1 false)
  br label %20

20:                                               ; preds = %20, %16
  %21 = phi i64 [ 0, %16 ], [ %24, %20 ]
  %22 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %17, i32 0, i64 %21
  %23 = bitcast i8** %22 to <2 x i8*>*
  store <2 x i8*> <i8* bitcast (i32* @_ZZN2sw7SamplerC1EvE4zero to i8*), i8* bitcast (i32* @_ZZN2sw7SamplerC1EvE4zero to i8*)>, <2 x i8*>* %23, align 8
  %24 = add i64 %21, 2
  %25 = icmp eq i64 %24, 6
  br i1 %25, label %26, label %20, !llvm.loop !2

26:                                               ; preds = %20
  %27 = add nuw nsw i64 %17, 1
  %28 = icmp eq i64 %27, 14
  br i1 %28, label %2, label %16
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN2sw7SamplerD2Ev(%"class.sw::Sampler"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK2sw7Sampler12samplerStateEv(%"class.sw::Sampler"* readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %136, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = shl i32 %7, 3
  %9 = and i32 %3, 7
  %10 = and i32 %8, 768
  %11 = tail call i32 @_ZNK2sw7Sampler16getTextureFilterEv(%"class.sw::Sampler"* %0) #10
  %12 = and i32 %8, 248
  %13 = shl i32 %11, 10
  %14 = and i32 %13, 7168
  %15 = load i32, i32* %2, align 8
  %16 = icmp eq i32 %15, 3
  br i1 %16, label %17, label %24

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 12
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i32 8192, i32 40960
  %22 = icmp eq i32 %19, 0
  %23 = select i1 %22, i32 65536, i32 327680
  br label %38

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 4
  %26 = load i32, i32* %25, align 16
  %27 = shl i32 %26, 13
  %28 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 5
  %29 = load i32, i32* %28, align 4
  %30 = shl i32 %29, 16
  %31 = and i32 %30, 458752
  switch i32 %15, label %32 [
    i32 5, label %38
    i32 1, label %38
    i32 2, label %38
  ]

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 6
  %34 = load i32, i32* %33, align 8
  %35 = shl i32 %34, 19
  %36 = and i32 %35, 3670016
  %37 = zext i32 %36 to i48
  br label %38

38:                                               ; preds = %24, %17, %24, %24, %32
  %39 = phi i32 [ %31, %32 ], [ %31, %24 ], [ %31, %24 ], [ %31, %24 ], [ %23, %17 ]
  %40 = phi i32 [ %27, %32 ], [ %27, %24 ], [ %27, %24 ], [ %27, %24 ], [ %21, %17 ]
  %41 = phi i48 [ %37, %32 ], [ 3145728, %24 ], [ 3145728, %24 ], [ 3145728, %24 ], [ 3145728, %17 ]
  %42 = and i32 %40, 57344
  %43 = or i32 %12, %9
  %44 = or i32 %43, %10
  %45 = or i32 %44, %14
  %46 = or i32 %45, %42
  %47 = or i32 %46, %39
  %48 = zext i32 %47 to i48
  %49 = or i48 %41, %48
  %50 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 7
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %64, label %53

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 0, i32 0, i64 0
  %55 = load i8*, i8** %54, align 16
  br label %58

56:                                               ; preds = %58
  %57 = icmp eq i64 %63, 14
  br i1 %57, label %64, label %58

58:                                               ; preds = %56, %53
  %59 = phi i64 [ 1, %53 ], [ %63, %56 ]
  %60 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %59, i32 0, i64 0
  %61 = load i8*, i8** %60, align 16
  %62 = icmp eq i8* %55, %61
  %63 = add nuw nsw i64 %59, 1
  br i1 %62, label %56, label %64

64:                                               ; preds = %56, %58, %38
  %65 = phi i32 [ 0, %38 ], [ %51, %58 ], [ 0, %56 ]
  %66 = shl i32 %65, 22
  %67 = and i32 %66, 29360128
  %68 = zext i32 %67 to i48
  %69 = and i48 %49, 4128768
  %70 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 8
  %71 = load i8, i8* %70, align 16, !range !4
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 0
  %75 = load i32, i32* %74, align 16
  %76 = tail call zeroext i1 @_ZN2sw7Surface14isSRGBreadableENS_6FormatE(i32 %75) #11
  br i1 %76, label %82, label %77

77:                                               ; preds = %64, %73
  %78 = load i32, i32* %6, align 4
  %79 = tail call zeroext i1 @_ZN2sw7Surface12isSRGBformatENS_6FormatE(i32 %78) #11
  %80 = zext i1 %79 to i48
  %81 = shl nuw nsw i48 %80, 25
  br label %82

82:                                               ; preds = %77, %73
  %83 = phi i48 [ 33554432, %73 ], [ %81, %77 ]
  %84 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 13
  %85 = load i32, i32* %84, align 8
  %86 = shl i32 %85, 26
  %87 = zext i32 %86 to i48
  %88 = or i48 %83, %68
  %89 = or i48 %88, %87
  %90 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 14
  %91 = load i32, i32* %90, align 4
  %92 = shl i32 %91, 29
  %93 = zext i32 %92 to i48
  %94 = and i48 %89, 520093696
  %95 = or i48 %94, %93
  %96 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 15
  %97 = load i32, i32* %96, align 16
  %98 = and i32 %97, 7
  %99 = zext i32 %98 to i48
  %100 = shl nuw nsw i48 %99, 32
  %101 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 16
  %102 = load i32, i32* %101, align 4
  %103 = and i32 %102, 7
  %104 = zext i32 %103 to i48
  %105 = shl nuw nsw i48 %104, 35
  %106 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 10
  %107 = load i8, i8* %106, align 2, !range !4
  %108 = zext i8 %107 to i48
  %109 = shl nuw nsw i48 %108, 38
  %110 = and i48 %83, -8796093022208
  %111 = tail call i32 @_ZNK2sw7Sampler16getTextureFilterEv(%"class.sw::Sampler"* %0) #11
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %122, label %113

113:                                              ; preds = %82
  %114 = load i32, i32* %6, align 4
  %115 = icmp eq i32 %114, 114
  br i1 %115, label %122, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 17
  %118 = load i32, i32* %117, align 8
  %119 = and i32 %118, 15
  %120 = zext i32 %119 to i48
  %121 = shl nuw nsw i48 %120, 39
  br label %122

122:                                              ; preds = %82, %113, %116
  %123 = phi i48 [ %121, %116 ], [ 0, %82 ], [ 549755813888, %113 ]
  %124 = and i48 %68, 12582912
  %125 = or i48 %69, %124
  %126 = and i48 %49, 65280
  %127 = or i48 %125, %110
  %128 = or i48 %127, %100
  %129 = or i48 %128, %105
  %130 = or i48 %129, %109
  %131 = or i48 %130, %95
  %132 = or i48 %123, %131
  %133 = and i48 %132, -1099511627776
  %134 = and i48 %132, 1095216660480
  %135 = and i48 %49, 255
  br label %136

136:                                              ; preds = %1, %122
  %137 = phi i48 [ 0, %1 ], [ %133, %122 ]
  %138 = phi i48 [ 0, %1 ], [ %134, %122 ]
  %139 = phi i48 [ 0, %1 ], [ %95, %122 ]
  %140 = phi i48 [ 0, %1 ], [ %125, %122 ]
  %141 = phi i48 [ 0, %1 ], [ %126, %122 ]
  %142 = phi i48 [ 0, %1 ], [ %135, %122 ]
  %143 = or i48 %138, %137
  %144 = or i48 %143, %139
  %145 = or i48 %144, %140
  %146 = or i48 %145, %141
  %147 = or i48 %146, %142
  %148 = zext i48 %147 to i64
  ret i64 %148
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2sw7Sampler16getTextureFilterEv(%"class.sw::Sampler"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 0, i32 7, i64 0
  %3 = load i16, i16* %2, align 8
  %4 = icmp eq i16 %3, 1
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 0, i32 8, i64 0
  %7 = load i16, i16* %6, align 16
  %8 = icmp eq i16 %7, 1
  br i1 %8, label %9, label %28

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 0, i32 9, i64 0
  %11 = load i16, i16* %10, align 8
  %12 = icmp eq i16 %11, 1
  br i1 %12, label %13, label %28

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 7
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %52, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 0, i32 0, i64 0
  %19 = load i8*, i8** %18, align 16
  br label %22

20:                                               ; preds = %22
  %21 = icmp eq i64 %27, 14
  br i1 %21, label %52, label %22

22:                                               ; preds = %20, %17
  %23 = phi i64 [ 1, %17 ], [ %27, %20 ]
  %24 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %23, i32 0, i64 0
  %25 = load i8*, i8** %24, align 16
  %26 = icmp eq i8* %19, %25
  %27 = add nuw nsw i64 %23, 1
  br i1 %26, label %20, label %28

28:                                               ; preds = %22, %9, %5, %1
  %29 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 9
  %32 = load i8, i8* %31, align 1, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = tail call i32 @_ZN2sw7Surface14componentCountENS_6FormatE(i32 %36) #11
  %38 = icmp eq i32 %37, 1
  %39 = select i1 %38, i32 1, i32 %30
  br label %40

40:                                               ; preds = %34, %28
  %41 = phi i32 [ %30, %28 ], [ %39, %34 ]
  %42 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %49

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 9
  %47 = load float, float* %46, align 16
  %48 = fcmp oeq float %47, 1.000000e+00
  br i1 %48, label %49, label %52

49:                                               ; preds = %40, %45
  %50 = icmp ult i32 %41, 4
  %51 = select i1 %50, i32 %41, i32 4
  br label %52

52:                                               ; preds = %20, %13, %49, %45
  %53 = phi i32 [ %51, %49 ], [ %41, %45 ], [ 0, %13 ], [ 0, %20 ]
  ret i32 %53
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK2sw7Sampler18getAddressingModeUEv(%"class.sw::Sampler"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 3
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 12
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = select i1 %8, i32 1, i32 5
  br label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 16
  br label %13

13:                                               ; preds = %10, %5
  %14 = phi i32 [ %9, %5 ], [ %12, %10 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK2sw7Sampler18getAddressingModeVEv(%"class.sw::Sampler"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 3
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 12
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = select i1 %8, i32 1, i32 5
  br label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %10, %5
  %14 = phi i32 [ %9, %5 ], [ %12, %10 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK2sw7Sampler18getAddressingModeWEv(%"class.sw::Sampler"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 5
  br i1 %5, label %9, label %6

6:                                                ; preds = %9, %1
  %7 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  ret i32 %8

9:                                                ; preds = %1
  %10 = trunc i32 %4 to i8
  %11 = lshr i8 23, %10
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %6, label %14

14:                                               ; preds = %9
  ret i32 6
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK2sw7Sampler12mipmapFilterEv(%"class.sw::Sampler"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 0, i32 0, i64 0
  %7 = load i8*, i8** %6, align 16
  br label %10

8:                                                ; preds = %10
  %9 = icmp eq i64 %15, 14
  br i1 %9, label %16, label %10

10:                                               ; preds = %8, %5
  %11 = phi i64 [ 1, %5 ], [ %15, %8 ]
  %12 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %11, i32 0, i64 0
  %13 = load i8*, i8** %12, align 16
  %14 = icmp eq i8* %7, %13
  %15 = add nuw nsw i64 %11, 1
  br i1 %14, label %8, label %16

16:                                               ; preds = %10, %8, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %8 ], [ %3, %10 ]
  ret i32 %17
}

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw7Surface14isSRGBreadableENS_6FormatE(i32) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw7Surface12isSRGBformatENS_6FormatE(i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2sw7Sampler14getCompareFuncEv(%"class.sw::Sampler"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = tail call i32 @_ZNK2sw7Sampler16getTextureFilterEv(%"class.sw::Sampler"* %0) #10
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %11, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 114
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 17
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %4, %1, %8
  %12 = phi i32 [ %10, %8 ], [ 0, %1 ], [ 1, %4 ]
  ret i32 %12
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw7Sampler15setTextureLevelEiiPNS_7SurfaceENS_11TextureTypeE(%"class.sw::Sampler"*, i32, i32, %"class.sw::Surface"*, i32) local_unnamed_addr #2 align 2 {
  %6 = icmp eq %"class.sw::Surface"* %3, null
  br i1 %6, label %158, label %7

7:                                                ; preds = %5
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %3, i64 0, i32 3, i32 4
  %10 = load i16, i16* %9, align 4
  %11 = sext i16 %10 to i32
  %12 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 12
  store i32 %11, i32* %12, align 4
  %13 = sub nsw i32 0, %11
  %14 = bitcast %"class.sw::Surface"* %3 to i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)***
  %15 = load i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)**, i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)*** %14, align 8
  %16 = getelementptr inbounds i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)*, i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)** %15, i64 2
  %17 = load i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)*, i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)** %16, align 8
  %18 = tail call i8* %17(%"class.sw::Surface"* nonnull %3, i32 %13, i32 %13, i32 0, i32 0, i32 1) #11
  %19 = sext i32 %1 to i64
  %20 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 0, i64 %19
  store i8* %18, i8** %20, align 8
  %21 = icmp eq i32 %1, 0
  br i1 %21, label %22, label %158

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %3, i64 0, i32 2, i32 11
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 0
  store i32 %24, i32* %25, align 16
  %26 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %3, i64 0, i32 3, i32 11
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 1
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %3, i64 0, i32 2, i32 1
  %30 = bitcast i32* %29 to <2 x i32>*
  %31 = load <2 x i32>, <2 x i32>* %30, align 8
  %32 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %3, i64 0, i32 2, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %3, i64 0, i32 3, i32 8
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %3, i64 0, i32 3, i32 10
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %2, 0
  br i1 %38, label %39, label %66

39:                                               ; preds = %22
  %40 = extractelement <2 x i32> %31, i32 0
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 20
  %43 = load float, float* %42, align 16
  %44 = fmul float %43, %41
  %45 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 3, i32 0
  store float %44, float* %45, align 4
  %46 = getelementptr inbounds float, float* %45, i64 1
  store float %44, float* %46, align 4
  %47 = extractelement <2 x i32> %31, i32 1
  %48 = sitofp i32 %47 to float
  %49 = fmul float %43, %48
  %50 = getelementptr inbounds float, float* %45, i64 2
  store float %49, float* %50, align 4
  %51 = getelementptr inbounds float, float* %45, i64 3
  store float %49, float* %51, align 4
  %52 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 4, i32 0
  %53 = insertelement <4 x float> undef, float %44, i32 0
  %54 = shufflevector <4 x float> %53, <4 x float> undef, <4 x i32> zeroinitializer
  %55 = bitcast float* %52 to <4 x float>*
  store <4 x float> %54, <4 x float>* %55, align 4
  %56 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 5, i32 0
  %57 = insertelement <4 x float> undef, float %49, i32 0
  %58 = shufflevector <4 x float> %57, <4 x float> undef, <4 x i32> zeroinitializer
  %59 = bitcast float* %56 to <4 x float>*
  store <4 x float> %58, <4 x float>* %59, align 4
  %60 = sitofp i32 %33 to float
  %61 = fmul float %43, %60
  %62 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 6, i32 0
  %63 = insertelement <4 x float> undef, float %61, i32 0
  %64 = shufflevector <4 x float> %63, <4 x float> undef, <4 x i32> zeroinitializer
  %65 = bitcast float* %62 to <4 x float>*
  store <4 x float> %64, <4 x float>* %65, align 4
  br label %66

66:                                               ; preds = %39, %22
  %67 = tail call zeroext i1 @_ZN2sw7Surface13isFloatFormatENS_6FormatE(i32 %27) #11
  br i1 %67, label %68, label %89

68:                                               ; preds = %66
  %69 = extractelement <2 x i32> %31, i32 0
  %70 = sitofp i32 %69 to float
  %71 = fmul float %70, 0x3EF0000000000000
  %72 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 1, i32 0
  %73 = insertelement <4 x float> undef, float %71, i32 0
  %74 = shufflevector <4 x float> %73, <4 x float> undef, <4 x i32> zeroinitializer
  %75 = bitcast float* %72 to <4 x float>*
  store <4 x float> %74, <4 x float>* %75, align 4
  %76 = extractelement <2 x i32> %31, i32 1
  %77 = sitofp i32 %76 to float
  %78 = fmul float %77, 0x3EF0000000000000
  %79 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 2, i32 0
  %80 = insertelement <4 x float> undef, float %78, i32 0
  %81 = shufflevector <4 x float> %80, <4 x float> undef, <4 x i32> zeroinitializer
  %82 = bitcast float* %79 to <4 x float>*
  store <4 x float> %81, <4 x float>* %82, align 4
  %83 = sitofp i32 %33 to float
  %84 = fmul float %83, 0x3EF0000000000000
  %85 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 3, i32 0
  %86 = insertelement <4 x float> undef, float %84, i32 0
  %87 = shufflevector <4 x float> %86, <4 x float> undef, <4 x i32> zeroinitializer
  %88 = bitcast float* %85 to <4 x float>*
  store <4 x float> %87, <4 x float>* %88, align 4
  br label %89

89:                                               ; preds = %68, %66
  %90 = extractelement <2 x i32> %31, i32 0
  %91 = sdiv i32 32768, %90
  %92 = trunc i32 %91 to i16
  %93 = extractelement <2 x i32> %31, i32 1
  %94 = sdiv i32 32768, %93
  %95 = trunc i32 %94 to i16
  %96 = sdiv i32 32768, %33
  %97 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 4, i64 0
  store i16 %92, i16* %97, align 16
  %98 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 4, i64 1
  store i16 %92, i16* %98, align 2
  %99 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 4, i64 2
  store i16 %92, i16* %99, align 4
  %100 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 4, i64 3
  store i16 %92, i16* %100, align 2
  %101 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 5, i64 0
  store i16 %95, i16* %101, align 8
  %102 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 5, i64 1
  store i16 %95, i16* %102, align 2
  %103 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 5, i64 2
  store i16 %95, i16* %103, align 4
  %104 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 5, i64 3
  store i16 %95, i16* %104, align 2
  %105 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 6, i64 0
  %106 = insertelement <2 x i32> undef, i32 %96, i32 0
  %107 = shufflevector <2 x i32> %106, <2 x i32> %31, <2 x i32> <i32 0, i32 2>
  %108 = trunc <2 x i32> %107 to <2 x i16>
  %109 = shufflevector <2 x i16> %108, <2 x i16> undef, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1>
  %110 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %110, align 16
  %111 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 8, i64 0
  %112 = insertelement <2 x i32> undef, i32 %93, i32 0
  %113 = insertelement <2 x i32> %112, i32 %33, i32 1
  %114 = trunc <2 x i32> %113 to <2 x i16>
  %115 = shufflevector <2 x i16> %114, <2 x i16> undef, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1>
  %116 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %116, align 16
  %117 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 10, i64 0
  store i16 1, i16* %117, align 16
  %118 = trunc i32 %35 to i16
  %119 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 10, i64 1
  store i16 %118, i16* %119, align 2
  %120 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 10, i64 2
  store i16 1, i16* %120, align 4
  %121 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 10, i64 3
  store i16 %118, i16* %121, align 2
  %122 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 12, i32 0
  %123 = insertelement <4 x i32> undef, i32 %35, i32 0
  %124 = shufflevector <4 x i32> %123, <4 x i32> undef, <4 x i32> zeroinitializer
  %125 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %125, align 4
  %126 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 13, i32 0
  %127 = insertelement <4 x i32> undef, i32 %37, i32 0
  %128 = shufflevector <4 x i32> %127, <4 x i32> undef, <4 x i32> zeroinitializer
  %129 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %128, <4 x i32>* %129, align 4
  %130 = load i32, i32* %28, align 4
  %131 = add i32 %130, -121
  %132 = icmp ult i32 %131, 3
  br i1 %132, label %133, label %158

133:                                              ; preds = %89
  %134 = mul i32 %35, %93
  %135 = lshr i32 %35, 1
  %136 = add nuw i32 %135, 15
  %137 = and i32 %136, -16
  %138 = mul i32 %137, %93
  %139 = lshr exact i32 %138, 1
  %140 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 0, i64 0
  %141 = load i8*, i8** %140, align 16
  %142 = zext i32 %134 to i64
  %143 = getelementptr inbounds i8, i8* %141, i64 %142
  %144 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 0, i64 1
  store i8* %143, i8** %144, align 8
  %145 = zext i32 %139 to i64
  %146 = getelementptr inbounds i8, i8* %143, i64 %145
  %147 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 %8, i32 0, i64 2
  store i8* %146, i8** %147, align 16
  %148 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 1, i32 7, i64 0
  %149 = sdiv <2 x i32> %31, <i32 2, i32 2>
  %150 = trunc <2 x i32> %149 to <2 x i16>
  %151 = shufflevector <2 x i16> %150, <2 x i16> undef, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1>
  %152 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %151, <8 x i16>* %152, align 8
  %153 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 1, i32 10, i64 0
  store i16 1, i16* %153, align 16
  %154 = trunc i32 %137 to i16
  %155 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 1, i32 10, i64 1
  store i16 %154, i16* %155, align 2
  %156 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 1, i32 10, i64 2
  store i16 1, i16* %156, align 4
  %157 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 0, i64 1, i32 10, i64 3
  store i16 %154, i16* %157, align 2
  br label %158

158:                                              ; preds = %89, %7, %133, %5
  %159 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 2
  store i32 %4, i32* %159, align 8
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw7Surface13isFloatFormatENS_6FormatE(i32) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw7Sampler16setTextureFilterENS_10FilterTypeE(%"class.sw::Sampler"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = load i32, i32* @_ZN2sw7Sampler27maximumTextureFilterQualityE, align 4
  %4 = icmp ugt i32 %3, %1
  %5 = select i1 %4, i32 %1, i32 %3
  %6 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 3
  store i32 %5, i32* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw7Sampler15setMipmapFilterENS_10MipmapTypeE(%"class.sw::Sampler"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = load i32, i32* @_ZN2sw7Sampler26maximumMipmapFilterQualityE, align 4
  %4 = icmp ugt i32 %3, %1
  %5 = select i1 %4, i32 %1, i32 %3
  %6 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 7
  store i32 %5, i32* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler15setGatherEnableEb(%"class.sw::Sampler"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 9
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler18setAddressingModeUENS_14AddressingModeE(%"class.sw::Sampler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 4
  store i32 %1, i32* %3, align 16
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler18setAddressingModeVENS_14AddressingModeE(%"class.sw::Sampler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 5
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler18setAddressingModeWENS_14AddressingModeE(%"class.sw::Sampler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 6
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler11setReadSRGBEb(%"class.sw::Sampler"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 8
  store i8 %3, i8* %4, align 16
  ret void
}

; Function Attrs: nofree nounwind optsize ssp uwtable
define hidden void @_ZN2sw7Sampler14setBorderColorERKNS_5ColorIfEE(%"class.sw::Sampler"* nocapture, %"struct.sw::Color"* nocapture readonly dereferenceable(16)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"struct.sw::Color", %"struct.sw::Color"* %1, i64 0, i32 1
  %4 = bitcast %"struct.sw::Color"* %1 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 4
  %6 = fmul <2 x float> %5, <float 6.553500e+04, float 6.553500e+04>
  %7 = fadd <2 x float> %6, <float 5.000000e-01, float 5.000000e-01>
  %8 = call <2 x float> @llvm.floor.v2f32(<2 x float> %7)
  %9 = fptosi <2 x float> %8 to <2 x i32>
  %10 = trunc <2 x i32> %9 to <2 x i16>
  %11 = shufflevector <2 x i16> %10, <2 x i16> undef, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1>
  %12 = getelementptr inbounds %"struct.sw::Color", %"struct.sw::Color"* %1, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.sw::Color", %"struct.sw::Color"* %1, i64 0, i32 3
  %14 = bitcast float* %12 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  %16 = fmul <2 x float> %15, <float 6.553500e+04, float 6.553500e+04>
  %17 = fadd <2 x float> %16, <float 5.000000e-01, float 5.000000e-01>
  %18 = call <2 x float> @llvm.floor.v2f32(<2 x float> %17)
  %19 = fptosi <2 x float> %18 to <2 x i32>
  %20 = trunc <2 x i32> %19 to <2 x i16>
  %21 = shufflevector <2 x i16> %20, <2 x i16> undef, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1>
  %22 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 7, i64 0, i64 0
  %23 = bitcast i16* %22 to <8 x i16>*
  store <8 x i16> %11, <8 x i16>* %23, align 16
  %24 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 7, i64 2, i64 0
  %25 = bitcast i16* %24 to <8 x i16>*
  store <8 x i16> %21, <8 x i16>* %25, align 16
  %26 = bitcast %"struct.sw::Color"* %1 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 8, i64 0, i32 0
  %29 = insertelement <4 x i32> undef, i32 %27, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = bitcast float* %28 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %31, align 4
  %32 = bitcast float* %3 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 8, i64 1, i32 0
  %35 = insertelement <4 x i32> undef, i32 %33, i32 0
  %36 = shufflevector <4 x i32> %35, <4 x i32> undef, <4 x i32> zeroinitializer
  %37 = bitcast float* %34 to <4 x i32>*
  store <4 x i32> %36, <4 x i32>* %37, align 4
  %38 = bitcast float* %12 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 8, i64 2, i32 0
  %41 = insertelement <4 x i32> undef, i32 %39, i32 0
  %42 = shufflevector <4 x i32> %41, <4 x i32> undef, <4 x i32> zeroinitializer
  %43 = bitcast float* %40 to <4 x i32>*
  store <4 x i32> %42, <4 x i32>* %43, align 4
  %44 = bitcast float* %13 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 8, i64 3, i32 0
  %47 = insertelement <4 x i32> undef, i32 %45, i32 0
  %48 = shufflevector <4 x i32> %47, <4 x i32> undef, <4 x i32> zeroinitializer
  %49 = bitcast float* %46 to <4 x i32>*
  store <4 x i32> %48, <4 x i32>* %49, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler16setMaxAnisotropyEf(%"class.sw::Sampler"* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 9
  store float %1, float* %3, align 16
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler25setHighPrecisionFilteringEb(%"class.sw::Sampler"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 10
  store i8 %3, i8* %4, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler11setSwizzleRENS_11SwizzleTypeE(%"class.sw::Sampler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 13
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler11setSwizzleGENS_11SwizzleTypeE(%"class.sw::Sampler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 14
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler11setSwizzleBENS_11SwizzleTypeE(%"class.sw::Sampler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 15
  store i32 %1, i32* %3, align 16
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler11setSwizzleAENS_11SwizzleTypeE(%"class.sw::Sampler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 16
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler14setCompareFuncENS_11CompareFuncE(%"class.sw::Sampler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 17
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler12setBaseLevelEi(%"class.sw::Sampler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 10
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler11setMaxLevelEi(%"class.sw::Sampler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 11
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler9setMinLodEf(%"class.sw::Sampler"* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = fcmp olt float %1, 0.000000e+00
  %4 = select i1 %3, float 0.000000e+00, float %1
  %5 = fcmp ogt float %4, 1.200000e+01
  %6 = select i1 %5, float 1.200000e+01, float %4
  %7 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 12
  store float %6, float* %7, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler9setMaxLodEf(%"class.sw::Sampler"* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = fcmp olt float %1, 0.000000e+00
  %4 = select i1 %3, float 0.000000e+00, float %1
  %5 = fcmp ogt float %4, 1.200000e+01
  %6 = select i1 %5, float 1.200000e+01, float %4
  %7 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 13
  store float %6, float* %7, align 16
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler16setFilterQualityENS_10FilterTypeE(i32) local_unnamed_addr #0 align 2 {
  store i32 %0, i32* @_ZN2sw7Sampler27maximumTextureFilterQualityE, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler16setMipmapQualityENS_10MipmapTypeE(i32) local_unnamed_addr #0 align 2 {
  store i32 %0, i32* @_ZN2sw7Sampler26maximumMipmapFilterQualityE, align 4
  ret void
}

; Function Attrs: nofree nounwind optsize ssp uwtable
define hidden void @_ZN2sw7Sampler12setMipmapLODEf(%"class.sw::Sampler"* nocapture, float) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19, i32 1
  store float %1, float* %3, align 16
  %4 = tail call float @exp2f(float %1) #11
  %5 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 20
  store float %4, float* %5, align 16
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2sw7Sampler10hasTextureEv(%"class.sw::Sampler"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK2sw7Sampler18hasUnsignedTextureEv(%"class.sw::Sampler"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2sw7Surface19isUnsignedComponentENS_6FormatEi(i32 %3, i32 0) #11
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = tail call zeroext i1 @_ZN2sw7Surface19isUnsignedComponentENS_6FormatEi(i32 %6, i32 1) #11
  br i1 %7, label %8, label %14

8:                                                ; preds = %5
  %9 = load i32, i32* %2, align 4
  %10 = tail call zeroext i1 @_ZN2sw7Surface19isUnsignedComponentENS_6FormatEi(i32 %9, i32 2) #11
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = load i32, i32* %2, align 4
  %13 = tail call zeroext i1 @_ZN2sw7Surface19isUnsignedComponentENS_6FormatEi(i32 %12, i32 3) #11
  br label %14

14:                                               ; preds = %11, %8, %5, %1
  %15 = phi i1 [ false, %8 ], [ false, %5 ], [ false, %1 ], [ %13, %11 ]
  ret i1 %15
}

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw7Surface19isUnsignedComponentENS_6FormatEi(i32, i32) local_unnamed_addr #5

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2sw7Sampler14hasCubeTextureEv(%"class.sw::Sampler"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 3
  ret i1 %4
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2sw7Sampler16hasVolumeTextureEv(%"class.sw::Sampler"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = or i32 %3, 1
  %5 = icmp eq i32 %4, 5
  ret i1 %5
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw7Sampler15setSyncRequiredEb(%"class.sw::Sampler"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 11
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2sw7Sampler12requiresSyncEv(%"class.sw::Sampler"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden dereferenceable(2896) %"struct.sw::Texture"* @_ZN2sw7Sampler14getTextureDataEv(%"class.sw::Sampler"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 19
  ret %"struct.sw::Texture"* %2
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK2sw7Sampler14getTextureTypeEv(%"class.sw::Sampler"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sw::Sampler", %"class.sw::Sampler"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: optsize
declare i32 @_ZN2sw7Surface14componentCountENS_6FormatE(i32) local_unnamed_addr #5

; Function Attrs: nofree nounwind optsize
declare float @exp2f(float) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.floor.v2f32(<2 x float>) #9

attributes #0 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { optsize }
attributes #11 = { nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = !{i8 0, i8 2}
