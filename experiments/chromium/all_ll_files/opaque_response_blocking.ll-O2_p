; ModuleID = '../../services/network/public/cpp/opaque_response_blocking.cc'
source_filename = "../../services/network/public/cpp/opaque_response_blocking.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.5" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.30", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.36", %"class.std::__1::vector.43", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.78", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.83", %"class.absl::optional.182", %"class.absl::optional.193", %"class.std::__1::vector.43", %class.GURL, i8, [7 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::vector", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.11" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.20", %"class.std::__1::vector.20", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"*, %"class.std::__1::__compressed_pair.22" }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.mojo::InlinedStructPtr"* }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, [7 x i8], %union.anon.40 }
%union.anon.40 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.41, %class.scoped_refptr.41, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.61", %"class.std::__1::basic_string", %"class.std::__1::vector.69", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.41 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.42", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.50", %"class.std::__1::vector.54" }
%"class.base::RefCountedThreadSafe.42" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.43", %"class.std::__1::vector.43", %"class.std::__1::vector.43", %"class.std::__1::vector.43" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.std::__1::unique_ptr.50"*, %"class.std::__1::unique_ptr.50"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::unique_ptr.50"* }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.64" }
%"class.net::HashValue" = type { i32, %union.anon.63 }
%union.anon.63 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.73" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.71, i32, [4 x i8] }>
%class.scoped_refptr.71 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.72", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.72" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.absl::optional.78" = type { %"class.absl::optional_internal::optional_data.79" }
%"class.absl::optional_internal::optional_data.79" = type { %"class.absl::optional_internal::optional_data_base.80" }
%"class.absl::optional_internal::optional_data_base.80" = type { %"class.absl::optional_internal::optional_data_dtor_base.81" }
%"class.absl::optional_internal::optional_data_dtor_base.81" = type { i8, %union.anon.82 }
%union.anon.82 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.16" }
%"class.base::time_internal::TimeBase.16" = type { i64 }
%"class.mojo::StructPtr.83" = type { %"class.std::__1::unique_ptr.84" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.87", %"class.mojo::StructPtr.134", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.146", %"class.base::TimeDelta", %"class.absl::optional.146", i32, [4 x i8], %"class.std::__1::vector.158", %"class.mojo::StructPtr.172", i8, [7 x i8] }>
%"class.std::__1::vector.87" = type { %"class.std::__1::__vector_base.88" }
%"class.std::__1::__vector_base.88" = type { %"class.mojo::StructPtr.89"*, %"class.mojo::StructPtr.89"*, %"class.std::__1::__compressed_pair.129" }
%"class.mojo::StructPtr.89" = type { %"class.std::__1::unique_ptr.90" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.93", %"class.base::flat_map", %"class.base::flat_map.107", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.117", i8, %"class.std::__1::vector.43", i32, %"class.mojo::StructPtr.119", %"class.std::__1::vector.43" }
%"class.mojo::StructPtr.93" = type { %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.100" }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.102" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.107" = type { %"class.base::internal::flat_tree.108" }
%"class.base::internal::flat_tree.108" = type { %"class.std::__1::vector.109" }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"struct.std::__1::pair.111"*, %"struct.std::__1::pair.111"*, %"class.std::__1::__compressed_pair.112" }
%"struct.std::__1::pair.111" = type opaque
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::pair.111"* }
%"class.mojo::InlinedStructPtr.117" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.119" = type { %"class.std::__1::unique_ptr.120" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.43", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.mojo::StructPtr.89"* }
%"class.mojo::StructPtr.134" = type { %"class.std::__1::unique_ptr.135" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.141", i32, %"class.absl::optional.141" }
%"class.absl::optional.141" = type { %"class.absl::optional_internal::optional_data.142" }
%"class.absl::optional_internal::optional_data.142" = type { %"class.absl::optional_internal::optional_data_base.143" }
%"class.absl::optional_internal::optional_data_base.143" = type { %"class.absl::optional_internal::optional_data_dtor_base.144" }
%"class.absl::optional_internal::optional_data_dtor_base.144" = type { i8, %union.anon.145 }
%union.anon.145 = type { %"class.std::__1::basic_string" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.141", i32, %"class.absl::optional.141" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.146" = type { %"class.absl::optional_internal::optional_data.147" }
%"class.absl::optional_internal::optional_data.147" = type { %"class.absl::optional_internal::optional_data_base.148" }
%"class.absl::optional_internal::optional_data_base.148" = type { %"class.absl::optional_internal::optional_data_dtor_base.149" }
%"class.absl::optional_internal::optional_data_dtor_base.149" = type { i8, %union.anon.150 }
%union.anon.150 = type { %"class.std::__1::vector.151" }
%"class.std::__1::vector.151" = type { %"class.std::__1::__vector_base.152" }
%"class.std::__1::__vector_base.152" = type { i32*, i32*, %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { i32* }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"class.mojo::StructPtr.160"*, %"class.mojo::StructPtr.160"*, %"class.std::__1::__compressed_pair.167" }
%"class.mojo::StructPtr.160" = type { %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.141" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.mojo::StructPtr.160"* }
%"class.mojo::StructPtr.172" = type { %"class.std::__1::unique_ptr.173" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.43"* }
%"class.absl::optional.182" = type { %"class.absl::optional_internal::optional_data.183" }
%"class.absl::optional_internal::optional_data.183" = type { %"class.absl::optional_internal::optional_data_base.184" }
%"class.absl::optional_internal::optional_data_base.184" = type { %"class.absl::optional_internal::optional_data_dtor_base.185" }
%"class.absl::optional_internal::optional_data_dtor_base.185" = type { i8, %union.anon.186 }
%union.anon.186 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.187" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.43", %"class.absl::optional.141", %"class.std::__1::vector.43", %"class.std::__1::vector.43" }
%"class.absl::optional.193" = type { %"class.absl::optional_internal::optional_data.194" }
%"class.absl::optional_internal::optional_data.194" = type { %"class.absl::optional_internal::optional_data_base.195" }
%"class.absl::optional_internal::optional_data_base.195" = type { %"class.absl::optional_internal::optional_data_dtor_base.196" }
%"class.absl::optional_internal::optional_data_dtor_base.196" = type { i8, %union.anon.197 }
%union.anon.197 = type { %"class.base::UnguessableToken" }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [52 x i8] c"SiteIsolation.ORB.ResponseHeadersHeuristic.Decision\00", align 1
@.str.1 = private unnamed_addr constant [67 x i8] c"SiteIsolation.ORB.ResponseHeadersHeuristic.ProcessedBasedOnHeaders\00", align 1
@.str.2 = private unnamed_addr constant [69 x i8] c"SiteIsolation.ORB.ResponseHeadersHeuristic.RequiresJavascriptParsing\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"audio/\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"image/\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"video/\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"image/svg+xml\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"text/css\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"application/dash+xml\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"application/ogg\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network31LogUmaForOpaqueResponseBlockingERK4GURLRKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeENSA_18RequestDestinationERKNSA_15URLResponseHeadE(%class.GURL* dereferenceable(120), %"class.absl::optional"* dereferenceable(88), i32, i32, %"class.network::mojom::URLResponseHead"* dereferenceable(1320)) local_unnamed_addr #0 {
  %6 = alloca %"class.url::Origin", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq i32 %2, 1
  br i1 %8, label %9, label %122

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %122, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.network::mojom::URLResponseHead", %"class.network::mojom::URLResponseHead"* %4, i64 0, i32 27
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.network::mojom::URLResponseHead", %"class.network::mojom::URLResponseHead"* %4, i64 0, i32 31
  %19 = load i32, i32* %18, align 8
  %20 = icmp ult i32 %19, 4
  br i1 %20, label %122, label %21

21:                                               ; preds = %17, %13
  %22 = bitcast %"class.url::Origin"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 80, i1 false) #6
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %6, %class.GURL* dereferenceable(120) %0) #6
  %23 = load i8, i8* %10, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %21
  call void @llvm.trap() #6
  unreachable

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %28 = call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* %27, %"class.url::Origin"* nonnull dereferenceable(80) %6) #6
  br i1 %28, label %123, label %29

29:                                               ; preds = %26
  %30 = call zeroext i1 @_ZN7network23CrossOriginReadBlocking16ResponseAnalyzer10HasNoSniffERKNS_5mojom15URLResponseHeadE(%"class.network::mojom::URLResponseHead"* dereferenceable(1320) %4) #6
  br i1 %30, label %123, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #6
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 24, i1 false) #6
  %35 = getelementptr inbounds %"class.network::mojom::URLResponseHead", %"class.network::mojom::URLResponseHead"* %4, i64 0, i32 2, i32 0
  %36 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %35, align 8
  %37 = icmp eq %"class.net::HttpResponseHeaders"* %36, null
  br i1 %37, label %114, label %38

38:                                               ; preds = %31
  %39 = call zeroext i1 @_ZNK3net19HttpResponseHeaders11GetMimeTypeEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %36, %"class.std::__1::basic_string"* nonnull %7) #6
  br i1 %39, label %40, label %114

40:                                               ; preds = %38
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = load i8*, i8** %33, align 8
  %46 = select i1 %44, i8* %45, i8* %32
  %47 = load i64, i64* %34, align 8
  %48 = zext i8 %43 to i64
  %49 = select i1 %44, i64 %47, i64 %48
  %50 = call i32 @_ZN7network23CrossOriginReadBlocking20GetCanonicalMimeTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %46, i64 %49) #6
  %51 = icmp eq i32 %50, 5
  br i1 %51, label %114, label %52

52:                                               ; preds = %40
  %53 = load i8, i8* %42, align 1
  %54 = icmp slt i8 %53, 0
  %55 = load i8*, i8** %33, align 8
  %56 = select i1 %54, i8* %55, i8* %32
  %57 = load i64, i64* %34, align 8
  %58 = zext i8 %53 to i64
  %59 = select i1 %54, i64 %57, i64 %58
  %60 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %56, i64 %59, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i64 13) #6
  br i1 %60, label %114, label %61

61:                                               ; preds = %52
  %62 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %56, i64 %59, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i64 8) #6
  br i1 %62, label %114, label %63

63:                                               ; preds = %61
  %64 = call zeroext i1 @_ZN7network23CrossOriginReadBlocking20IsJavascriptMimeTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %56, i64 %59) #6
  br i1 %64, label %114, label %65

65:                                               ; preds = %63
  %66 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %56, i64 %59, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i64 20) #6
  br i1 %66, label %114, label %67

67:                                               ; preds = %65
  %68 = load i8, i8* %42, align 1
  %69 = icmp slt i8 %68, 0
  %70 = load i8*, i8** %33, align 8
  %71 = select i1 %69, i8* %70, i8* %32
  %72 = load i64, i64* %34, align 8
  %73 = zext i8 %68 to i64
  %74 = select i1 %69, i64 %72, i64 %73
  %75 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %71, i64 %74, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i64 15) #6
  br i1 %75, label %114, label %76

76:                                               ; preds = %67
  %77 = load i8, i8* %42, align 1
  %78 = icmp slt i8 %77, 0
  %79 = load i8*, i8** %33, align 8
  %80 = select i1 %78, i8* %79, i8* %32
  %81 = load i64, i64* %34, align 8
  %82 = zext i8 %77 to i64
  %83 = select i1 %78, i64 %81, i64 %82
  %84 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %80, i64 %83, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i64 6, i32 1) #6
  br i1 %84, label %114, label %85

85:                                               ; preds = %76
  %86 = load i8, i8* %42, align 1
  %87 = icmp slt i8 %86, 0
  %88 = load i8*, i8** %33, align 8
  %89 = select i1 %87, i8* %88, i8* %32
  %90 = load i64, i64* %34, align 8
  %91 = zext i8 %86 to i64
  %92 = select i1 %87, i64 %90, i64 %91
  %93 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %89, i64 %92, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6, i32 1) #6
  br i1 %93, label %114, label %94

94:                                               ; preds = %85
  %95 = load i8, i8* %42, align 1
  %96 = icmp slt i8 %95, 0
  %97 = load i8*, i8** %33, align 8
  %98 = select i1 %96, i8* %97, i8* %32
  %99 = load i64, i64* %34, align 8
  %100 = zext i8 %95 to i64
  %101 = select i1 %96, i64 %99, i64 %100
  %102 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %98, i64 %101, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i64 6, i32 1) #6
  br i1 %102, label %114, label %103

103:                                              ; preds = %94
  %104 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %35, align 8
  %105 = icmp eq %"class.net::HttpResponseHeaders"* %104, null
  br i1 %105, label %114, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %104, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, -200
  %110 = icmp ult i32 %109, 100
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  %112 = icmp eq i32 %108, 206
  %113 = select i1 %112, i32 1, i32 2
  br label %114

114:                                              ; preds = %111, %106, %103, %94, %85, %76, %67, %65, %63, %61, %52, %40, %38, %31
  %115 = phi i32 [ 1, %38 ], [ 1, %31 ], [ 1, %40 ], [ 1, %65 ], [ 1, %67 ], [ 1, %76 ], [ 1, %85 ], [ 1, %94 ], [ 1, %106 ], [ %113, %111 ], [ 1, %52 ], [ 1, %61 ], [ 1, %63 ], [ 1, %103 ]
  %116 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %124

120:                                              ; preds = %114
  %121 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %121) #7
  br label %124

122:                                              ; preds = %5, %9, %17
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 0, i32 3) #6
  br label %127

123:                                              ; preds = %26, %29
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #6
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 1, i32 3) #6
  br label %125

124:                                              ; preds = %114, %120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #6
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #6
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 %115, i32 3) #6
  switch i32 %115, label %127 [
    i32 2, label %126
    i32 1, label %125
  ]

125:                                              ; preds = %123, %124
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 %3, i32 22) #6
  br label %127

126:                                              ; preds = %124
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.2, i64 0, i64 0), i32 %3, i32 22) #6
  br label %127

127:                                              ; preds = %122, %124, %126, %125
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

declare zeroext i1 @_ZN7network23CrossOriginReadBlocking16ResponseAnalyzer10HasNoSniffERKNS_5mojom15URLResponseHeadE(%"class.network::mojom::URLResponseHead"* dereferenceable(1320)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net19HttpResponseHeaders11GetMimeTypeEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare i32 @_ZN7network23CrossOriginReadBlocking20GetCanonicalMimeTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN7network23CrossOriginReadBlocking20IsJavascriptMimeTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
