; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/serialization/v8_script_value_serializer.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/serialization/v8_script_value_serializer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.527", i32, [4 x i8], %"class.std::__1::unique_ptr.665", %"class.std::__1::unique_ptr.665", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.671", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.677", %"class.std::__1::unique_ptr.683", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.695", %"class.std::__1::unique_ptr.701", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.177", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.530", %"class.std::__1::unique_ptr.536", %"class.std::__1::unique_ptr.542", %"class.std::__1::unique_ptr.548", %"class.std::__1::unique_ptr.554", %"class.std::__1::unique_ptr.560", %"class.std::__1::unique_ptr.571", %"class.std::__1::unique_ptr.578", %"class.std::__1::unique_ptr.578", %"class.std::__1::unique_ptr.585", %"class.std::__1::unique_ptr.592", %"class.std::__1::unique_ptr.599", %"class.std::__1::unique_ptr.599", %"class.std::__1::unique_ptr.606", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.620", %"class.std::__1::unique_ptr.645", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.563" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.563" = type { %"struct.std::__1::__atomic_base.564" }
%"struct.std::__1::__atomic_base.564" = type { %"struct.std::__1::__atomic_base.565" }
%"struct.std::__1::__atomic_base.565" = type { %"struct.std::__1::__cxx_atomic_impl.566" }
%"struct.std::__1::__cxx_atomic_impl.566" = type { %"struct.std::__1::__cxx_atomic_base_impl.567" }
%"struct.std::__1::__cxx_atomic_base_impl.567" = type { i64 }
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"class.blink::Worklist.574"* }
%"class.blink::Worklist.574" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.563" }
%"class.std::__1::unique_ptr.578" = type { %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.blink::Worklist.581"* }
%"class.blink::Worklist.581" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.563" }
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.blink::Worklist.588"* }
%"class.blink::Worklist.588" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.563" }
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::Worklist.595"* }
%"class.blink::Worklist.595" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.563" }
%"class.std::__1::unique_ptr.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.blink::Worklist.602"* }
%"class.blink::Worklist.602" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.563" }
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.blink::Worklist.609"* }
%"class.blink::Worklist.609" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.563" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::Worklist.616"* }
%"class.blink::Worklist.616" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.563" }
%"class.std::__1::unique_ptr.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.623", %"class.std::__1::__compressed_pair.631", %"class.std::__1::__compressed_pair.636", %"class.std::__1::__compressed_pair.638", [4 x i8] }>
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625", %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { i64 }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { float }
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.648", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.657" }
%"class.WTF::Vector.657" = type { %"class.WTF::VectorBuffer.658" }
%"class.WTF::VectorBuffer.658" = type { %"class.WTF::VectorBufferBase.659" }
%"class.WTF::VectorBufferBase.659" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.671" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.674" }
%"class.WTF::VectorBuffer.674" = type { %"class.WTF::VectorBufferBase.675" }
%"class.WTF::VectorBufferBase.675" = type { %"struct.std::__1::pair.676"*, i32, i32 }
%"struct.std::__1::pair.676" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.677" = type { %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.683" = type { %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.689" }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.574"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.581"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.588"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.595"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.602"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.714", i64 }
%"class.std::__1::vector.714" = type { %"class.std::__1::__vector_base.715" }
%"class.std::__1::__vector_base.715" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.716" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.37" }
%"struct.std::__1::atomic.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__cxx_atomic_impl.40" }
%"struct.std::__1::__cxx_atomic_impl.40" = type { %"struct.std::__1::__cxx_atomic_base_impl.41" }
%"struct.std::__1::__cxx_atomic_base_impl.41" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.726", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.726" = type { %"class.base::RefCounted.727" }
%"class.base::RefCounted.727" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.728" }
%"class.blink::PersistentBase.728" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.740" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.731" }
%"class.blink::HeapHashMap.731" = type { %"class.WTF::HashMap.734" }
%"class.WTF::HashMap.734" = type { %"class.WTF::HashTable.735" }
%"class.WTF::HashTable.735" = type <{ %"struct.WTF::KeyValuePair.737"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.737" = type { %"class.blink::WeakMember.738", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.738" = type { %"class.blink::MemberBase.739" }
%"class.blink::MemberBase.739" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.740" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::V8ScriptValueSerializer" = type <{ %"class.v8::ValueSerializer::Delegate", %"class.blink::ScriptState"*, %class.scoped_refptr.746, %"class.v8::ValueSerializer", %"class.blink::Transferables"*, %"class.blink::ExceptionState"*, %"class.WTF::Vector.795"*, %"class.blink::HeapVector.806", i32, i8, [3 x i8] }>
%"class.v8::ValueSerializer::Delegate" = type { i32 (...)** }
%class.scoped_refptr.746 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.747", [4 x i8], %"class.std::__1::unique_ptr.749", i64, %"class.WTF::Vector.753", %"class.WTF::Vector.758", %"class.WTF::Vector.763", %"class.WTF::Vector.769", %class.scoped_refptr.443, %"class.WTF::HashMap.775", %"class.WTF::Vector.780", %"class.WTF::Vector.753", %"class.WTF::Vector.785", %"class.WTF::HashMap.790", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.747" = type { %"class.base::RefCountedThreadSafe.748" }
%"class.base::RefCountedThreadSafe.748" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.37" }
%"class.std::__1::unique_ptr.749" = type { %"class.std::__1::__compressed_pair.750" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.751" = type { i8* }
%"class.WTF::Vector.758" = type { %"class.WTF::VectorBuffer.759" }
%"class.WTF::VectorBuffer.759" = type { %"class.WTF::VectorBufferBase.760", [8 x i8] }
%"class.WTF::VectorBufferBase.760" = type { %class.scoped_refptr.510*, i32, i32 }
%class.scoped_refptr.510 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.511", i8, %class.scoped_refptr.513, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.708" }
%"class.WTF::ThreadSafeRefCounted.511" = type { %"class.base::RefCountedThreadSafe.512" }
%"class.base::RefCountedThreadSafe.512" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.513 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.514", i64, %"class.WTF::Vector.516", %"class.WTF::Vector.521" }
%"class.WTF::RefCounted.514" = type { %"class.base::RefCounted.515" }
%"class.base::RefCounted.515" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.516" = type { %"class.WTF::VectorBuffer.517" }
%"class.WTF::VectorBuffer.517" = type { %"class.WTF::VectorBufferBase.518" }
%"class.WTF::VectorBufferBase.518" = type { i8*, i32, i32 }
%"class.WTF::Vector.521" = type { %"class.WTF::VectorBuffer.522" }
%"class.WTF::VectorBuffer.522" = type { %"class.WTF::VectorBufferBase.523" }
%"class.WTF::VectorBufferBase.523" = type { %"class.std::__1::unique_ptr.524"*, i32, i32 }
%"class.std::__1::unique_ptr.524" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%"class.WTF::Vector.763" = type { %"class.WTF::VectorBuffer.764" }
%"class.WTF::VectorBuffer.764" = type { %"class.WTF::VectorBufferBase.765" }
%"class.WTF::VectorBufferBase.765" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.371", %"class.std::__1::unique_ptr.399" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.766 }
%class.scoped_refptr.766 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.769" = type { %"class.WTF::VectorBuffer.770" }
%"class.WTF::VectorBuffer.770" = type { %"class.WTF::VectorBufferBase.771" }
%"class.WTF::VectorBufferBase.771" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.772", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.772" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.144 }
%union.anon.144 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.443 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.445", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.450 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.444" }
%"class.base::RefCounted.444" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.445" = type { %"class.absl::optional_internal::optional_data.446" }
%"class.absl::optional_internal::optional_data.446" = type { %"class.absl::optional_internal::optional_data_base.447" }
%"class.absl::optional_internal::optional_data_base.447" = type { %"class.absl::optional_internal::optional_data_dtor_base.448" }
%"class.absl::optional_internal::optional_data_dtor_base.448" = type { i8, %union.anon.449 }
%union.anon.449 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.450 = type { %"class.blink::SecurityOrigin"* }
%"class.WTF::HashMap.775" = type { %"class.WTF::HashTable.776" }
%"class.WTF::HashTable.776" = type <{ %"struct.WTF::KeyValuePair.779"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.779" = type { %"class.WTF::String", %class.scoped_refptr.818 }
%class.scoped_refptr.818 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.819", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.821", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.819" = type { %"class.base::RefCountedThreadSafe.820" }
%"class.base::RefCountedThreadSafe.820" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.821" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.780" = type { %"class.WTF::VectorBuffer.781" }
%"class.WTF::VectorBuffer.781" = type { %"class.WTF::VectorBufferBase.782" }
%"class.WTF::VectorBufferBase.782" = type { %"class.mojo::ScopedHandleBase.509"*, i32, i32 }
%"class.mojo::ScopedHandleBase.509" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.753" = type { %"class.WTF::VectorBuffer.754" }
%"class.WTF::VectorBuffer.754" = type { %"class.WTF::VectorBufferBase.755", [16 x i8] }
%"class.WTF::VectorBufferBase.755" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.785" = type { %"class.WTF::VectorBuffer.786" }
%"class.WTF::VectorBuffer.786" = type { %"class.WTF::VectorBufferBase.787" }
%"class.WTF::VectorBufferBase.787" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.790" = type { %"class.WTF::HashTable.791" }
%"class.WTF::HashTable.791" = type <{ %"struct.WTF::KeyValuePair.794"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.794" = type { i8**, %"class.std::__1::unique_ptr.873" }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.v8::ValueSerializer" = type { %"struct.v8::ValueSerializer::PrivateData"* }
%"struct.v8::ValueSerializer::PrivateData" = type opaque
%"class.blink::Transferables" = type { %"class.blink::HeapVector", %"class.blink::HeapVector.2", %"class.blink::HeapVector.10", %"class.blink::HeapVector.339", %"class.blink::HeapVector.347", %"class.blink::HeapVector.355", %"class.blink::HeapVector.378", %"class.blink::HeapVector.406", %"class.blink::HeapHashMap" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::HeapVector.2" = type { %"class.WTF::Vector.5" }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { %"class.blink::Member.8"*, i32, i32 }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.882" }
%"class.blink::MemberBase.882" = type { %"class.blink::ImageBitmap"* }
%"class.blink::ImageBitmap" = type { %"class.blink::ScriptWrappable", %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", %class.scoped_refptr.510, i8, i32 }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::HeapVector.10" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::Member.16"*, i32, i32 }
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::OffscreenCanvas"* }
%"class.blink::OffscreenCanvas" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ImageBitmapSource", %"class.blink::CanvasRenderingContextHost", %"class.blink::CanvasResourceDispatcherClient", %"class.blink::ThreadState::PrefinalizerRegistration", [3 x i8], i32, %"class.blink::Member.130", %"class.blink::WeakMember", i32, %"class.blink::IntSize", i8, i8, i8, i8, %"class.std::__1::unique_ptr.136", %struct.SkIRect, i8, i8, i8, i8, i32, i32, [4 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.20" }
%"class.blink::HeapVector.20" = type { %"class.WTF::Vector.23" }
%"class.WTF::Vector.23" = type { %"class.WTF::VectorBuffer.24" }
%"class.WTF::VectorBuffer.24" = type { %"class.WTF::VectorBufferBase.25", [32 x i8] }
%"class.WTF::VectorBufferBase.25" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.27" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::HeapVector.29"* }
%"class.blink::HeapVector.29" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.31"* }
%"class.WTF::Vector.31" = type opaque
%"class.blink::CanvasRenderingContextHost" = type { %"class.blink::CanvasResourceHost.base", %"class.blink::CanvasImageSource", %"class.blink::GarbageCollectedMixin", i8, i8, i32 }
%"class.blink::CanvasResourceHost.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.33", i32 }>
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.48", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.84", i8, i32, i32, i32, %"class.WTF::Vector.99", i8, i8, i64, i64, %"class.base::RepeatingCallback.109", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.126" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.42" }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i8 }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.37" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.47 }
%class.scoped_refptr.47 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr.48" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.75", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.58, [384 x i64], %class.sk_sp.59, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.60", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.66" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.58 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.59 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.72, %class.SkPixmap, %class.sk_sp.74 }
%class.sk_sp.72 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.73, i32, i32 }
%class.sk_sp.73 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.37" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.42" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.74 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.87, %"class.std::__1::unique_ptr.88" }
%class.scoped_refptr.87 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional", %struct.SkRect }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.94 }
%class.scoped_refptr.94 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.95", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.95" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.99" = type { %"class.WTF::VectorBuffer.100" }
%"class.WTF::VectorBuffer.100" = type { %"class.WTF::VectorBufferBase.101" }
%"class.WTF::VectorBufferBase.101" = type { %class.scoped_refptr.102*, i32, i32 }
%class.scoped_refptr.102 = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", %"class.base::PlatformThreadRef", %class.scoped_refptr.104, %"struct.gpu::SyncToken", %"class.base::WeakPtr.106", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.103" }
%"class.base::RefCountedThreadSafe.103" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::PlatformThreadRef" = type { i64 }
%class.scoped_refptr.104 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.105" }>
%"class.base::RefCountedThreadSafe.105" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.base::WeakPtr.106" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.109" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.110" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.122"*, %"struct.std::__1::pair.122"*, %"class.std::__1::__compressed_pair.123" }
%"struct.std::__1::pair.122" = type { i32, i32 }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124", %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::pair.122"* }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.73, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.126" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasResourceDispatcherClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::CanvasRenderingContext"* }
%"class.blink::CanvasRenderingContext" = type <{ %"class.blink::ScriptWrappable", %"class.base::TaskObserver", %"class.blink::ThreadState::PrefinalizerRegistration.132", [7 x i8], %"class.blink::Member.133", %"class.blink::CanvasColorParams", [4 x i8], %"class.blink::CanvasContextCreationAttributesCore", i8, [7 x i8] }>
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.132" = type { i8 }
%"class.blink::Member.133" = type { %"class.blink::MemberBase.134" }
%"class.blink::MemberBase.134" = type { %"class.blink::CanvasRenderingContextHost"* }
%"class.blink::CanvasColorParams" = type { i32, i32, i32 }
%"class.blink::CanvasContextCreationAttributesCore" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8], %"class.WTF::String", i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.468", i32, i8, [3 x i8], %"class.blink::HeapVector.470", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.478", %"class.blink::Member.480", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.489", %"class.blink::Member.495", %"class.blink::Member.497", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.423" }
%"class.blink::HeapHashMap.423" = type { %"class.WTF::HashMap.426" }
%"class.WTF::HashMap.426" = type { %"class.WTF::HashTable.427" }
%"class.WTF::HashTable.427" = type <{ %"struct.WTF::KeyValuePair.429"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.429" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.435" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.432" }
%"class.WTF::HashTable.432" = type <{ %"class.blink::WeakMember.434"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.434" = type opaque
%"class.blink::Supplementable.435" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.436" }
%"class.blink::HeapHashMap.436" = type { %"class.WTF::HashMap.439" }
%"class.WTF::HashMap.439" = type { %"class.WTF::HashTable.440" }
%"class.WTF::HashTable.440" = type <{ %"struct.WTF::KeyValuePair.442"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.442" = type { i8*, %"class.blink::Member.869" }
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.871" }
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.443, %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.457", %"class.blink::Member.463", i32, [4 x i8], %"class.WTF::HashSet.464", i32, i32 }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.135" }
%"class.WTF::HashSet.464" = type { %"class.WTF::HashTable.465" }
%"class.WTF::HashTable.465" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.470" = type { %"class.WTF::Vector.473" }
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { %"class.blink::Member.476"*, i32, i32 }
%"class.blink::Member.476" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.482", i32, i32 }
%"class.blink::HeapHashMap.482" = type { %"class.WTF::HashMap.485" }
%"class.WTF::HashMap.485" = type { %"class.WTF::HashTable.486" }
%"class.WTF::HashTable.486" = type <{ %"struct.WTF::KeyValuePair.488"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.488" = type opaque
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::CanvasResourceDispatcher"* }
%"class.blink::CanvasResourceDispatcher" = type { %"class.viz::mojom::blink::CompositorFrameSinkClient", %"class.viz::ParentLocalSurfaceIdAllocator", %"class.viz::FrameSinkId", %"class.blink::IntSize", i8, i8, i8, i32, %"class.mojo::Remote", %"class.mojo::Remote.315", %"class.mojo::Receiver", i32, %"class.viz::ResourceIdGenerator", [4 x i8], %"class.WTF::HashMap", %"class.viz::FrameTokenGenerator", %class.scoped_refptr.102, %"class.util::IdType.326", i32, %"struct.viz::BeginFrameAck", %"class.blink::CanvasResourceDispatcherClient"*, %"class.std::__1::unique_ptr.328", %"class.base::WeakPtrFactory.334" }
%"class.viz::mojom::blink::CompositorFrameSinkClient" = type { i32 (...)** }
%"class.viz::ParentLocalSurfaceIdAllocator" = type <{ %"class.viz::LocalSurfaceId", i8, i8, [6 x i8] }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.309" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.139, %"class.std::__1::unique_ptr.260", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.141, i32 }>
%class.scoped_refptr.139 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.141, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.222", %"class.absl::optional.227", %"class.absl::optional.181", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.251", i8, [7 x i8], %class.scoped_refptr.141, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.140" }>
%"class.base::RefCountedThreadSafe.140" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.160" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.160" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.141, %"class.std::__1::unique_ptr.161", %"class.absl::optional.171", %"struct.std::__1::atomic.177", i8, i8, i8, i8, i32, i32, %"class.absl::optional.181", %"class.std::__1::unique_ptr.186", i8, i64, %class.scoped_refptr.218, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.220", %"class.base::WeakPtrFactory.221" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.141, i8, %"class.mojo::ScopedHandleBase.164", %class.scoped_refptr.165, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.166", i8*, %"class.base::WeakPtrFactory.167" }
%"class.mojo::ScopedHandleBase.164" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.165 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.166" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.167" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.171" = type { %"class.absl::optional_internal::optional_data.172" }
%"class.absl::optional_internal::optional_data.172" = type { %"class.absl::optional_internal::optional_data_base.173" }
%"class.absl::optional_internal::optional_data_base.173" = type { %"class.absl::optional_internal::optional_data_dtor_base.174" }
%"class.absl::optional_internal::optional_data_dtor_base.174" = type { i8, %union.anon.175 }
%union.anon.175 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.176", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.176" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.189", i8, i64, %class.scoped_refptr.190, %class.scoped_refptr.214 }
%"class.base::RepeatingCallback.189" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.190 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.192", %"class.std::__1::map.203", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.191 }
%class.scoped_refptr.191 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.192" = type { %"class.std::__1::__tree.193" }
%"class.std::__1::__tree.193" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.194", %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.std::__1::map.203" = type { %"class.std::__1::__tree.204" }
%"class.std::__1::__tree.204" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.205", %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%class.scoped_refptr.214 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.218 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.219 }
%class.scoped_refptr.219 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.422", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.141, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.422" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.220" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.221" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.222" = type { %"class.absl::optional_internal::optional_data.223" }
%"class.absl::optional_internal::optional_data.223" = type { %"class.absl::optional_internal::optional_data_base.224" }
%"class.absl::optional_internal::optional_data_base.224" = type { %"class.absl::optional_internal::optional_data_dtor_base.225" }
%"class.absl::optional_internal::optional_data_dtor_base.225" = type { i8, %union.anon.226 }
%union.anon.226 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.227" = type { %"class.absl::optional_internal::optional_data.228" }
%"class.absl::optional_internal::optional_data.228" = type { %"class.absl::optional_internal::optional_data_base.229" }
%"class.absl::optional_internal::optional_data_base.229" = type { %"class.absl::optional_internal::optional_data_dtor_base.230" }
%"class.absl::optional_internal::optional_data_dtor_base.230" = type { i8, [7 x i8], %union.anon.231 }
%union.anon.231 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.181" = type { %"class.absl::optional_internal::optional_data.182" }
%"class.absl::optional_internal::optional_data.182" = type { %"class.absl::optional_internal::optional_data_base.183" }
%"class.absl::optional_internal::optional_data_base.183" = type { %"class.absl::optional_internal::optional_data_dtor_base.184" }
%"class.absl::optional_internal::optional_data_dtor_base.184" = type { i8, %union.anon.185 }
%union.anon.185 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.236 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.236 = type { %"class.std::__1::map.239" }
%"class.std::__1::map.239" = type { %"class.std::__1::__tree.240" }
%"class.std::__1::__tree.240" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.250"*, i64 }
%"class.std::__1::unique_ptr.250" = type opaque
%"class.std::__1::map.251" = type { %"class.std::__1::__tree.252" }
%"class.std::__1::__tree.252" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.263", %"class.absl::optional.264", %"class.absl::optional.269", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.276", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.284", %"class.std::__1::map.295", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.304", i8, %class.scoped_refptr.141, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.305" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.263" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.264" = type { %"class.absl::optional_internal::optional_data.265" }
%"class.absl::optional_internal::optional_data.265" = type { %"class.absl::optional_internal::optional_data_base.266" }
%"class.absl::optional_internal::optional_data_base.266" = type { %"class.absl::optional_internal::optional_data_dtor_base.267" }
%"class.absl::optional_internal::optional_data_dtor_base.267" = type { i8, %union.anon.268 }
%union.anon.268 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.269" = type { %"class.absl::optional_internal::optional_data.270" }
%"class.absl::optional_internal::optional_data.270" = type { %"class.absl::optional_internal::optional_data_base.271" }
%"class.absl::optional_internal::optional_data_base.271" = type { %"class.absl::optional_internal::optional_data_dtor_base.272" }
%"class.absl::optional_internal::optional_data_dtor_base.272" = type { i8, %union.anon.273 }
%union.anon.273 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.141, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.274" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.274" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.275 }
%class.scoped_refptr.275 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.279", %class.scoped_refptr.280 }
%"class.base::RepeatingCallback.279" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.280 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.140", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.284" = type { %"class.std::__1::__tree.285" }
%"class.std::__1::__tree.285" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.286", %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.std::__1::map.295" = type { %"class.std::__1::__tree.296" }
%"class.std::__1::__tree.296" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.base::OnceCallback.304" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.305" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.141 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.viz::mojom::blink::CompositorFrameSinkProxy"* }
%"class.viz::mojom::blink::CompositorFrameSinkProxy" = type { %"class.viz::mojom::blink::CompositorFrameSink", %"class.mojo::MessageReceiverWithResponder"* }
%"class.viz::mojom::blink::CompositorFrameSink" = type { i32 (...)** }
%"class.mojo::Remote.315" = type { %"class.mojo::internal::InterfacePtrState.316" }
%"class.mojo::internal::InterfacePtrState.316" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.317" }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.blink::mojom::blink::SurfaceEmbedderProxy"* }
%"class.blink::mojom::blink::SurfaceEmbedderProxy" = type { %"class.blink::mojom::blink::SurfaceEmbedder", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::SurfaceEmbedder" = type { i32 (...)** }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.viz::mojom::blink::CompositorFrameSinkClientStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.139, %"class.std::__1::unique_ptr.260", %"class.base::WeakPtrFactory.323" }
%"class.base::WeakPtrFactory.323" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.viz::mojom::blink::CompositorFrameSinkClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.viz::mojom::blink::CompositorFrameSinkClient"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.util::IdType.326" = type { %"class.base::StrongAlias.327" }
%"class.base::StrongAlias.327" = type { i32 }
%"struct.viz::BeginFrameAck" = type <{ %"struct.viz::BeginFrameId", i64, i8, [7 x i8] }>
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.power_scheduler::PowerModeVoter"* }
%"class.power_scheduler::PowerModeVoter" = type { %"class.power_scheduler::PowerModeVoter::Delegate"* }
%"class.power_scheduler::PowerModeVoter::Delegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory.334" = type { %"class.base::internal::WeakPtrFactoryBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.blink::HeapVector.339" = type { %"class.WTF::Vector.342" }
%"class.WTF::Vector.342" = type { %"class.WTF::VectorBuffer.343" }
%"class.WTF::VectorBuffer.343" = type { %"class.WTF::VectorBufferBase.344" }
%"class.WTF::VectorBufferBase.344" = type { %"class.blink::Member.345"*, i32, i32 }
%"class.blink::Member.345" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::MessagePort"* }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.501", i8, i8, %class.scoped_refptr.104, %"class.blink::MessagePortDescriptor" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.499" }
%"class.blink::WeakMember.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.mojo::Connector"* }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.blink::HeapVector.347" = type { %"class.WTF::Vector.350" }
%"class.WTF::Vector.350" = type { %"class.WTF::VectorBuffer.351" }
%"class.WTF::VectorBuffer.351" = type { %"class.WTF::VectorBufferBase.352" }
%"class.WTF::VectorBufferBase.352" = type { %"class.blink::Member.353"*, i32, i32 }
%"class.blink::Member.353" = type { %"class.blink::MemberBase.881" }
%"class.blink::MemberBase.881" = type { %"class.blink::MojoHandle"* }
%"class.blink::MojoHandle" = type <{ %"class.blink::ScriptWrappable", %"class.mojo::ScopedHandleBase.509", [4 x i8] }>
%"class.blink::HeapVector.355" = type { %"class.WTF::Vector.358" }
%"class.WTF::Vector.358" = type { %"class.WTF::VectorBuffer.359" }
%"class.WTF::VectorBuffer.359" = type { %"class.WTF::VectorBufferBase.360" }
%"class.WTF::VectorBufferBase.360" = type { %"class.blink::Member.361"*, i32, i32 }
%"class.blink::Member.361" = type { %"class.blink::MemberBase.362" }
%"class.blink::MemberBase.362" = type { %"class.blink::ReadableStream"* }
%"class.blink::ReadableStream" = type { %"class.blink::ScriptWrappable", i8, %"class.base::StrongAlias.363", i8, %"class.blink::Member.364", %"class.blink::Member.366", %"class.blink::TraceWrapperV8Reference.368", %"class.std::__1::unique_ptr.371" }
%"class.base::StrongAlias.363" = type { i8 }
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::ReadableStreamController"* }
%"class.blink::ReadableStreamController" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::ReadableStreamGenericReader"* }
%"class.blink::ReadableStreamGenericReader" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.386", %"class.blink::Member.361" }
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::StreamPromiseResolver"* }
%"class.blink::StreamPromiseResolver" = type opaque
%"class.blink::TraceWrapperV8Reference.368" = type { %"class.v8::TracedReference.369" }
%"class.v8::TracedReference.369" = type { %"class.v8::BasicTracedReference.370" }
%"class.v8::BasicTracedReference.370" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::HeapVector.378" = type { %"class.WTF::Vector.381" }
%"class.WTF::Vector.381" = type { %"class.WTF::VectorBuffer.382" }
%"class.WTF::VectorBuffer.382" = type { %"class.WTF::VectorBufferBase.383" }
%"class.WTF::VectorBufferBase.383" = type { %"class.blink::Member.384"*, i32, i32 }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::WritableStream"* }
%"class.blink::WritableStream" = type { %"class.blink::ScriptWrappable", i8, i8, %"class.blink::Member.386", %"class.blink::Member.386", %"class.blink::Member.386", %"class.blink::Member.388", %"class.blink::TraceWrapperV8Reference.368", %"class.blink::Member.390", %"class.blink::Member.392", %"class.blink::HeapDeque", %"class.std::__1::unique_ptr.399" }
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::WritableStream::PendingAbortRequest"* }
%"class.blink::WritableStream::PendingAbortRequest" = type opaque
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::WritableStreamDefaultController"* }
%"class.blink::WritableStreamDefaultController" = type opaque
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::WritableStreamDefaultWriter"* }
%"class.blink::WritableStreamDefaultWriter" = type opaque
%"class.blink::HeapDeque" = type { %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::Member<blink::StreamPromiseResolver>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::StreamPromiseResolver>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.blink::Member.386"*, i32, i32 }
%"class.blink::HeapVector.406" = type { %"class.WTF::Vector.409" }
%"class.WTF::Vector.409" = type { %"class.WTF::VectorBuffer.410" }
%"class.WTF::VectorBuffer.410" = type { %"class.WTF::VectorBufferBase.411" }
%"class.WTF::VectorBufferBase.411" = type { %"class.blink::Member.412"*, i32, i32 }
%"class.blink::Member.412" = type { %"class.blink::MemberBase.883" }
%"class.blink::MemberBase.883" = type { %"class.blink::TransformStream"* }
%"class.blink::TransformStream" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.386", %"class.blink::Member.361", %"class.blink::Member.721", %"class.blink::Member.384" }
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::TransformStreamDefaultController"* }
%"class.blink::TransformStreamDefaultController" = type opaque
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.416" }
%"class.WTF::HashMap.416" = type { %"class.WTF::HashTable.417" }
%"class.WTF::HashTable.417" = type <{ %"struct.WTF::KeyValuePair.419"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.419" = type { i8**, %"class.blink::Member.420" }
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::Transferables::TransferList"* }
%"class.blink::Transferables::TransferList" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.368" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::Vector.795" = type { %"class.WTF::VectorBuffer.796" }
%"class.WTF::VectorBuffer.796" = type { %"class.WTF::VectorBufferBase.797" }
%"class.WTF::VectorBufferBase.797" = type { %"class.blink::WebBlobInfo"*, i32, i32 }
%"class.blink::WebBlobInfo" = type { i8, %"class.blink::WebString", %"class.blink::WebString", i64, %"class.blink::WebPrivatePtr", %"class.blink::WebString", %"class.absl::optional.798" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.803" }
%"class.base::time_internal::TimeBase.803" = type { i64 }
%"class.blink::HeapVector.806" = type { %"class.WTF::Vector.809" }
%"class.WTF::Vector.809" = type { %"class.WTF::VectorBuffer.810" }
%"class.WTF::VectorBuffer.810" = type { %"class.WTF::VectorBufferBase.811" }
%"class.WTF::VectorBufferBase.811" = type { %"class.blink::Member.812"*, i32, i32 }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.884" }
%"class.blink::MemberBase.884" = type { %"class.blink::DOMSharedArrayBuffer"* }
%"class.blink::DOMSharedArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.725, %"class.blink::Member.741", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.725 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.743" }
%"class.blink::Persistent.743" = type { %"class.blink::PersistentBase.744" }
%"class.blink::PersistentBase.744" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.740" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.745" }
%"class.base::StrongAlias.745" = type { %"class.base::UnguessableToken" }
%"struct.blink::SerializedScriptValue::SerializeOptions" = type { %"class.blink::Transferables"*, %"class.WTF::Vector.795"*, i32, i32 }
%"class.v8::Value" = type { i8 }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.508", i8* }
%"class.WTF::StringAppend.508" = type { i8*, %"class.WTF::String" }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.942", %"class.WTF::HashMap.942", %"class.WTF::HashMap.947", %"class.std::__1::unique_ptr.952", %"class.std::__1::unique_ptr.994", %"class.blink::Persistent.743", i8, i8, i8, %"class.WTF::Vector.1008", %"class.std::__1::unique_ptr.1013", %"class.blink::Persistent.1019", %"class.blink::Persistent.1023", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.924", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.930", %"class.std::__1::unique_ptr.936", i32, i32 }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.942" = type { %"class.WTF::HashTable.943" }
%"class.WTF::HashTable.943" = type <{ %"struct.WTF::KeyValuePair.946"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.946" = type opaque
%"class.WTF::HashMap.947" = type { %"class.WTF::HashTable.948" }
%"class.WTF::HashTable.948" = type <{ %"struct.WTF::KeyValuePair.951"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.951" = type opaque
%"class.std::__1::unique_ptr.952" = type { %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.960", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.955", i8* }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.959"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.959" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.960" = type { %"class.v8::PersistentValueMapBase.961" }
%"class.v8::PersistentValueMapBase.961" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.962", i8* }
%"class.WTF::HashMap.962" = type { %"class.WTF::HashTable.963" }
%"class.WTF::HashTable.963" = type <{ %"struct.WTF::KeyValuePair.966"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.966" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.967", %"class.WTF::String", %"class.std::__1::unique_ptr.969" }
%"class.WTF::RefCounted.967" = type { %"class.base::RefCounted.968" }
%"class.base::RefCounted.968" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.969" = type { %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.972", %"class.std::__1::unique_ptr.978", %"class.WTF::Vector.984", i8, i32 }
%"class.std::__1::unique_ptr.972" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.WTF::Vector.841"* }
%"class.WTF::Vector.841" = type { %"class.WTF::VectorBuffer.842" }
%"class.WTF::VectorBuffer.842" = type { %"class.WTF::VectorBufferBase.843" }
%"class.WTF::VectorBufferBase.843" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.984" = type { %"class.WTF::VectorBuffer.985" }
%"class.WTF::VectorBuffer.985" = type { %"class.WTF::VectorBufferBase.843", [32 x i8] }
%"class.std::__1::unique_ptr.994" = type { %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent.997", %"class.WTF::HashMap.1000" }
%"class.blink::ScopedPersistent.997" = type { %"class.v8::Persistent.998" }
%"class.v8::Persistent.998" = type { %"class.v8::PersistentBase.999" }
%"class.v8::PersistentBase.999" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.1000" = type { %"class.WTF::HashTable.1001" }
%"class.WTF::HashTable.1001" = type <{ %"struct.WTF::KeyValuePair.1004"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1004" = type opaque
%"class.WTF::Vector.1008" = type { %"class.WTF::VectorBuffer.1009" }
%"class.WTF::VectorBuffer.1009" = type { %"class.WTF::VectorBufferBase.1010" }
%"class.WTF::VectorBufferBase.1010" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.std::__1::unique_ptr.1013" = type { %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.1019" = type { %"class.blink::PersistentBase.1020" }
%"class.blink::PersistentBase.1020" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr.740" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.1023" = type { %"class.blink::PersistentBase.1024" }
%"class.blink::PersistentBase.1024" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr.740" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.1027", i64 }
%"class.blink::HeapVector.1027" = type { %"class.WTF::Vector.1030" }
%"class.WTF::Vector.1030" = type { %"class.WTF::VectorBuffer.1031" }
%"class.WTF::VectorBuffer.1031" = type { %"class.WTF::VectorBufferBase.1032" }
%"class.WTF::VectorBufferBase.1032" = type { %"struct.std::__1::pair.1033"*, i32, i32 }
%"struct.std::__1::pair.1033" = type { %"class.blink::UntracedMember", %"class.blink::Member.1035" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1034" }
%"class.blink::MemberBase.1034" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::Member.1035" = type { %"class.blink::MemberBase.1036" }
%"class.blink::MemberBase.1036" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.WTF::StringTypeAdapter.1038" = type <{ i8*, i32, [4 x i8] }>
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::ArrayBuffer" = type { i8 }
%"class.WTF::StringUTF8Adaptor" = type <{ %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::SerializedImageBitmapSettings" = type <{ i32, i32, i32, i8, [3 x i8] }>
%"class.blink::SerializedImageDataSettings" = type { i32, i32 }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.818 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::File" = type { %"class.blink::Blob", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.absl::optional.828", %"class.absl::optional.798", %"class.WTF::String" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.822" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"class.blink::KURL"* }
%"class.absl::optional.828" = type { %"class.absl::optional_internal::optional_data.829" }
%"class.absl::optional_internal::optional_data.829" = type { %"class.absl::optional_internal::optional_data_base.830" }
%"class.absl::optional_internal::optional_data_base.830" = type { %"class.absl::optional_internal::optional_data_dtor_base.831" }
%"class.absl::optional_internal::optional_data_dtor_base.831" = type { i8, %union.anon.832 }
%union.anon.832 = type { i64 }
%"class.blink::FileList" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector.833" }
%"class.blink::HeapVector.833" = type { %"class.WTF::Vector.836" }
%"class.WTF::Vector.836" = type { %"class.WTF::VectorBuffer.837" }
%"class.WTF::VectorBuffer.837" = type { %"class.WTF::VectorBufferBase.838" }
%"class.WTF::VectorBufferBase.838" = type { %"class.blink::Member.839"*, i32, i32 }
%"class.blink::Member.839" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::File"* }
%"class.blink::ImageData" = type { %"class.blink::ScriptWrappable", %"class.blink::ImageBitmapSource", %"class.blink::IntSize", %"class.blink::Member.846", %"class.blink::Member.850", %"class.blink::NotShared", %"class.blink::NotShared.854", %"class.blink::NotShared.858", i32, i32 }
%"class.blink::Member.846" = type { %"class.blink::MemberBase.847" }
%"class.blink::MemberBase.847" = type { %"class.blink::ImageDataSettings"* }
%"class.blink::ImageDataSettings" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Member.850" = type { %"class.blink::MemberBase.851" }
%"class.blink::MemberBase.851" = type { %"class.blink::V8UnionFloat32ArrayOrUint16ArrayOrUint8ClampedArray"* }
%"class.blink::V8UnionFloat32ArrayOrUint16ArrayOrUint8ClampedArray" = type opaque
%"class.blink::NotShared" = type { %"class.blink::Member.852" }
%"class.blink::Member.852" = type { %"class.blink::MemberBase.853" }
%"class.blink::MemberBase.853" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member" }
%"class.blink::NotShared.854" = type { %"class.blink::Member.855" }
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::DOMTypedArray.857"* }
%"class.blink::DOMTypedArray.857" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::NotShared.858" = type { %"class.blink::Member.859" }
%"class.blink::Member.859" = type { %"class.blink::MemberBase.860" }
%"class.blink::MemberBase.860" = type { %"class.blink::DOMTypedArray.861"* }
%"class.blink::DOMTypedArray.861" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMPointReadOnly" = type { %"class.blink::ScriptWrappable", double, double, double, double }
%"class.blink::DOMMatrixReadOnly" = type <{ %"class.blink::ScriptWrappable", %"class.blink::TransformationMatrix", i8, [7 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.v8::String" = type { i8 }
%"class.WTF::StringAppend.865" = type { %"class.WTF::StringView", i8* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.1040" = type { %"class.WTF::StringView" }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::WasmModuleObject" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking.920" = type { i8 }
%"class.WTF::StringTypeAdapter.1039" = type { %"class.WTF::StringTypeAdapter.1040" }
%"class.blink::HeapVectorBacking.1049" = type { i8 }
%"class.blink::HeapVectorBacking.1061" = type { i8 }
%"class.blink::HeapVectorBacking.1073" = type { i8 }
%"class.blink::HeapVectorBacking.1085" = type { i8 }
%"class.blink::HeapVectorBacking.1097" = type { i8 }
%"class.blink::HeapVectorBacking.1109" = type { i8 }
%"class.blink::HeapVectorBacking.1139" = type { i8 }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS_10StringViewEPKcEcvNS_6StringEEv = comdat any

$_ZN5blink23V8ScriptValueSerializerD2Ev = comdat any

$_ZN5blink23V8ScriptValueSerializerD0Ev = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18DOMArrayBufferBaseEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15OffscreenCanvasEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_15OffscreenCanvasEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11MessagePortEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_11MessagePortEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10MojoHandleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10MojoHandleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10MojoHandleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10MojoHandleEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_10MojoHandleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_14DOMArrayBufferEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_20DOMSharedArrayBufferEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11ImageBitmapEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11ImageBitmapEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11ImageBitmapEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11ImageBitmapEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_11ImageBitmapEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14ReadableStreamEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14ReadableStreamEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14ReadableStreamEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ReadableStreamEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_14ReadableStreamEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14WritableStreamEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14WritableStreamEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14WritableStreamEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14WritableStreamEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_14WritableStreamEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15TransformStreamEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15TransformStreamEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15TransformStreamEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15TransformStreamEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_15TransformStreamEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_S6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS7_j = comdat any

$_ZN3WTF6VectorIN5blink11WebBlobInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11WebBlobInfoEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo16ScopedHandleBaseINS1_6HandleEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo16ScopedHandleBaseINS1_6HandleEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16ScopedHandleBaseINS2_6HandleEEEEEmm = comdat any

$_ZNK3WTF12StringAppendINS_10StringViewEPKcE6lengthEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_20DOMSharedArrayBufferEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_20DOMSharedArrayBufferEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_20DOMSharedArrayBufferEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_20DOMSharedArrayBufferEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_20DOMSharedArrayBufferEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN2v818CompiledWasmModuleELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN2v818CompiledWasmModuleELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN2v818CompiledWasmModuleEEEmm = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [23 x i8] c"Message port at index \00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c" is a duplicate of an earlier port.\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"Mojo handle at index \00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c" is a duplicate of an earlier handle.\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"ArrayBuffer at index \00", align 1
@.str.5 = private unnamed_addr constant [43 x i8] c" is a duplicate of an earlier ArrayBuffer.\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"SharedArrayBuffer at index \00", align 1
@.str.7 = private unnamed_addr constant [49 x i8] c" is a duplicate of an earlier SharedArrayBuffer.\00", align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"ImageBitmap at index \00", align 1
@.str.9 = private unnamed_addr constant [43 x i8] c" is a duplicate of an earlier ImageBitmap.\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"OffscreenCanvas at index \00", align 1
@.str.11 = private unnamed_addr constant [47 x i8] c" is a duplicate of an earlier OffscreenCanvas.\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"ReadableStream at index \00", align 1
@.str.13 = private unnamed_addr constant [46 x i8] c" is a duplicate of an earlier ReadableStream.\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"WritableStream at index \00", align 1
@.str.15 = private unnamed_addr constant [46 x i8] c" is a duplicate of an earlier WritableStream.\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"TransformStream at index \00", align 1
@.str.17 = private unnamed_addr constant [47 x i8] c" is a duplicate of an earlier TransformStream.\00", align 1
@_ZTVN5blink23V8ScriptValueSerializerE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::V8ScriptValueSerializer"*)* @_ZN5blink23V8ScriptValueSerializerD2Ev to i8*), i8* bitcast (void (%"class.blink::V8ScriptValueSerializer"*)* @_ZN5blink23V8ScriptValueSerializerD0Ev to i8*), i8* bitcast (void (%"class.blink::V8ScriptValueSerializer"*, %"class.v8::String"*)* @_ZN5blink23V8ScriptValueSerializer19ThrowDataCloneErrorEN2v85LocalINS1_6StringEEE to i8*), i8* bitcast (i16 (%"class.blink::V8ScriptValueSerializer"*, %"class.v8::Isolate"*, %"class.v8::Object"*)* @_ZN5blink23V8ScriptValueSerializer15WriteHostObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i64 (%"class.blink::V8ScriptValueSerializer"*, %"class.v8::Isolate"*, %"class.v8::SharedArrayBuffer"*)* @_ZN5blink23V8ScriptValueSerializer22GetSharedArrayBufferIdEPN2v87IsolateENS1_5LocalINS1_17SharedArrayBufferEEE to i8*), i8* bitcast (i64 (%"class.blink::V8ScriptValueSerializer"*, %"class.v8::Isolate"*, %"class.v8::WasmModuleObject"*)* @_ZN5blink23V8ScriptValueSerializer23GetWasmModuleTransferIdEPN2v87IsolateENS1_5LocalINS1_16WasmModuleObjectEEE to i8*), i8* bitcast (i8* (%"class.blink::V8ScriptValueSerializer"*, i8*, i64, i64*)* @_ZN5blink23V8ScriptValueSerializer22ReallocateBufferMemoryEPvmPm to i8*), i8* bitcast (void (%"class.blink::V8ScriptValueSerializer"*, i8*)* @_ZN5blink23V8ScriptValueSerializer16FreeBufferMemoryEPv to i8*), i8* bitcast (i1 (%"class.blink::V8ScriptValueSerializer"*, %"class.blink::ScriptWrappable"*, %"class.blink::ExceptionState"*)* @_ZN5blink23V8ScriptValueSerializer14WriteDOMObjectEPNS_15ScriptWrappableERNS_14ExceptionStateE to i8*)] }, align 8
@.str.18 = private unnamed_addr constant [62 x i8] c"SharedArrayBuffer transfer requires self.crossOriginIsolated.\00", align 1
@.str.19 = private unnamed_addr constant [47 x i8] c"SharedArrayBuffer can not be in transfer list.\00", align 1
@.str.20 = private unnamed_addr constant [52 x i8] c"An ImageBitmap is detached and could not be cloned.\00", align 1
@.str.21 = private unnamed_addr constant [52 x i8] c"Non-origin-clean ImageBitmap cannot be transferred.\00", align 1
@.str.22 = private unnamed_addr constant [47 x i8] c"Non-origin-clean ImageBitmap cannot be cloned.\00", align 1
@.str.23 = private unnamed_addr constant [47 x i8] c"An ImageBitmap could not be read successfully.\00", align 1
@.str.24 = private unnamed_addr constant [66 x i8] c"A MessagePort could not be cloned because it was not transferred.\00", align 1
@.str.25 = private unnamed_addr constant [65 x i8] c"A MojoHandle could not be cloned because it was not transferred.\00", align 1
@.str.26 = private unnamed_addr constant [71 x i8] c"An OffscreenCanvas could not be cloned because it was not transferred.\00", align 1
@.str.27 = private unnamed_addr constant [64 x i8] c"An OffscreenCanvas could not be cloned because it was detached.\00", align 1
@.str.28 = private unnamed_addr constant [75 x i8] c"An OffscreenCanvas could not be cloned because it had a rendering context.\00", align 1
@.str.29 = private unnamed_addr constant [69 x i8] c"A ReadableStream could not be cloned because it was not transferred.\00", align 1
@.str.30 = private unnamed_addr constant [59 x i8] c"A ReadableStream could not be cloned because it was locked\00", align 1
@.str.31 = private unnamed_addr constant [69 x i8] c"A WritableStream could not be cloned because it was not transferred.\00", align 1
@.str.32 = private unnamed_addr constant [59 x i8] c"A WritableStream could not be cloned because it was locked\00", align 1
@.str.33 = private unnamed_addr constant [70 x i8] c"A TransformStream could not be cloned because it was not transferred.\00", align 1
@.str.34 = private unnamed_addr constant [60 x i8] c"A TransformStream could not be cloned because it was locked\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.35 = private unnamed_addr constant [31 x i8] c"An object could not be cloned.\00", align 1
@.str.36 = private unnamed_addr constant [29 x i8] c" object could not be cloned.\00", align 1
@.str.37 = private unnamed_addr constant [55 x i8] c"A SharedArrayBuffer can not be serialized for storage.\00", align 1
@.str.38 = private unnamed_addr constant [56 x i8] c"A WebAssembly.Module can not be serialized for storage.\00", align 1
@.str.39 = private unnamed_addr constant [71 x i8] c"Serializing WebAssembly modules in non-secure contexts is not allowed.\00", align 1
@.str.40 = private unnamed_addr constant [29 x i8] c"SerializedScriptValue buffer\00", align 1
@.str.41 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.42 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.43 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.44 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.45 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.46 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.47 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18DOMArrayBufferBaseEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [177 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::DOMArrayBufferBase>, WTF::VectorTraits<blink::Member<blink::DOMArrayBufferBase> > >]\00", align 1
@_ZN5blink6V8Blob18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@.str.48 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.49 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZN5blink6V8File18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink10V8FileList18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink13V8ImageBitmap18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink11V8ImageData18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink10V8DOMPoint18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink18V8DOMPointReadOnly18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink9V8DOMRect18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink17V8DOMRectReadOnly18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink9V8DOMQuad18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink11V8DOMMatrix18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink19V8DOMMatrixReadOnly18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink13V8MessagePort18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink12V8MojoHandle18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink26RuntimeEnabledFeaturesBase19is_mojo_js_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink17V8OffscreenCanvas18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink16V8ReadableStream18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink16V8WritableStream18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink17V8TransformStream18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink14V8DOMException18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.50 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.51 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15OffscreenCanvasEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [171 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::OffscreenCanvas>, WTF::VectorTraits<blink::Member<blink::OffscreenCanvas> > >]\00", align 1
@.str.52 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.53 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.54 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11MessagePortEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [163 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::MessagePort>, WTF::VectorTraits<blink::Member<blink::MessagePort> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_10MojoHandleEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [161 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::MojoHandle>, WTF::VectorTraits<blink::Member<blink::MojoHandle> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11ImageBitmapEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [163 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::ImageBitmap>, WTF::VectorTraits<blink::Member<blink::ImageBitmap> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14ReadableStreamEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::ReadableStream>, WTF::VectorTraits<blink::Member<blink::ReadableStream> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14WritableStreamEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::WritableStream>, WTF::VectorTraits<blink::Member<blink::WritableStream> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15TransformStreamEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [171 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::TransformStream>, WTF::VectorTraits<blink::Member<blink::TransformStream> > >]\00", align 1
@.str.55 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.56 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.58 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.59 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.60 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.61 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringE13scoped_refptrIN5blink14BlobDataHandleEEEEEEPKcv = private unnamed_addr constant [117 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, scoped_refptr<blink::BlobDataHandle> >]\00", align 1
@.str.62 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11WebBlobInfoEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::WebBlobInfo]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16ScopedHandleBaseINS1_6HandleEEEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::ScopedHandleBase<mojo::Handle>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_20DOMSharedArrayBufferEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [181 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::DOMSharedArrayBuffer>, WTF::VectorTraits<blink::Member<blink::DOMSharedArrayBuffer> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2v818CompiledWasmModuleEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = v8::CompiledWasmModule]\00", align 1

@_ZN5blink23V8ScriptValueSerializerC1EPNS_11ScriptStateERKNS_21SerializedScriptValue16SerializeOptionsE = hidden unnamed_addr alias void (%"class.blink::V8ScriptValueSerializer"*, %"class.blink::ScriptState"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*), void (%"class.blink::V8ScriptValueSerializer"*, %"class.blink::ScriptState"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*)* @_ZN5blink23V8ScriptValueSerializerC2EPNS_11ScriptStateERKNS_21SerializedScriptValue16SerializeOptionsE

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23V8ScriptValueSerializer19ExtractTransferableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEjRNS_13TransferablesERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::Transferables"* dereferenceable(152), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %9 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %10 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %11 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %12 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %13 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %14 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %15 = alloca %"class.blink::MessagePort"*, align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::StringAppend", align 8
  %18 = alloca %"class.blink::MojoHandle"*, align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::StringAppend", align 8
  %21 = alloca %"class.blink::DOMArrayBuffer"*, align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::StringAppend", align 8
  %24 = alloca %"class.blink::DOMSharedArrayBuffer"*, align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.WTF::StringAppend", align 8
  %27 = alloca %"class.blink::ImageBitmap"*, align 8
  %28 = alloca %"class.WTF::String", align 8
  %29 = alloca %"class.WTF::StringAppend", align 8
  %30 = alloca %"class.blink::OffscreenCanvas"*, align 8
  %31 = alloca %"class.WTF::String", align 8
  %32 = alloca %"class.WTF::StringAppend", align 8
  %33 = alloca %"class.blink::ReadableStream"*, align 8
  %34 = alloca %"class.WTF::String", align 8
  %35 = alloca %"class.WTF::StringAppend", align 8
  %36 = alloca %"class.blink::WritableStream"*, align 8
  %37 = alloca %"class.WTF::String", align 8
  %38 = alloca %"class.WTF::StringAppend", align 8
  %39 = alloca %"class.blink::TransformStream"*, align 8
  %40 = alloca %"class.WTF::String", align 8
  %41 = alloca %"class.WTF::StringAppend", align 8
  %42 = tail call %"class.blink::ExecutionContext"* @_ZN5blink23CurrentExecutionContextEPN2v87IsolateE(%"class.v8::Isolate"* %0) #10
  %43 = icmp eq %"class.blink::ExecutionContext"* %42, null
  %44 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %42, i64 0, i32 4
  %45 = select i1 %43, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %44
  %46 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase26TransferableStreamsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %45) #10
  %47 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %48 = add i64 %47, 8
  %49 = inttoptr i64 %48 to %"class.blink::V8PerIsolateData"**
  %50 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %49, align 8
  %51 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %50, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8MessagePort18wrapper_type_info_E, %"class.v8::Value"* %1) #10
  br i1 %51, label %52, label %322

52:                                               ; preds = %5
  %53 = bitcast %"class.blink::MessagePort"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  store %"class.blink::MessagePort"* inttoptr (i64 -6148914691236517206 to %"class.blink::MessagePort"*), %"class.blink::MessagePort"** %15, align 8
  %54 = bitcast %"class.v8::Value"* %1 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, -1
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = and i64 %55, -4294967296
  %60 = zext i32 %58 to i64
  %61 = or i64 %59, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load i16, i16* %63, align 2
  switch i16 %64, label %69 [
    i16 1057, label %65
    i16 1056, label %65
    i16 1040, label %65
  ]

65:                                               ; preds = %52, %52, %52
  %66 = add i64 %55, 19
  %67 = inttoptr i64 %66 to i8**
  %68 = load i8*, i8** %67, align 1
  br label %72

69:                                               ; preds = %52
  %70 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %71 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %70, i32 1) #10
  br label %72

72:                                               ; preds = %65, %69
  %73 = phi i8* [ %68, %65 ], [ %71, %69 ]
  %74 = bitcast i8* %73 to %"class.blink::MessagePort"*
  %75 = bitcast %"class.blink::MessagePort"** %15 to i8**
  store i8* %73, i8** %75, align 8
  %76 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 3, i32 0
  %77 = getelementptr inbounds %"class.WTF::Vector.342", %"class.WTF::Vector.342"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.blink::Member.345"*, %"class.blink::Member.345"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"class.blink::Member.345", %"class.blink::Member.345"* %78, i64 %81
  %83 = icmp eq i32 %80, 0
  %84 = ptrtoint i8* %73 to i64
  br i1 %83, label %306, label %85

85:                                               ; preds = %72, %90
  %86 = phi %"class.blink::Member.345"* [ %91, %90 ], [ %78, %72 ]
  %87 = getelementptr inbounds %"class.blink::Member.345", %"class.blink::Member.345"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.blink::MessagePort"*, %"class.blink::MessagePort"** %87, align 8
  %89 = icmp eq %"class.blink::MessagePort"* %88, %74
  br i1 %89, label %93, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::Member.345", %"class.blink::Member.345"* %86, i64 1
  %92 = icmp ult %"class.blink::Member.345"* %91, %82
  br i1 %92, label %85, label %306

93:                                               ; preds = %85
  %94 = ptrtoint %"class.blink::Member.345"* %86 to i64
  %95 = ptrtoint %"class.blink::Member.345"* %78 to i64
  %96 = sub i64 %94, %95
  %97 = lshr exact i64 %96, 3
  %98 = trunc i64 %97 to i32
  %99 = icmp eq i32 %98, -1
  br i1 %99, label %306, label %100

100:                                              ; preds = %93
  %101 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #10
  %102 = bitcast %"class.WTF::StringAppend"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #10
  %103 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %14, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %103) #10
  %104 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %14, i64 0, i32 0, i64 11
  %105 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %14, i64 0, i32 2
  %106 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %14, i64 0, i32 3
  %107 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %14, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 32, i1 false) #10
  store i8* %104, i8** %105, align 8
  %108 = urem i32 %2, 10
  %109 = trunc i32 %108 to i8
  %110 = or i8 %109, 48
  store i8 %110, i8* %104, align 1
  %111 = icmp ugt i32 %2, 9
  br i1 %111, label %112, label %128

112:                                              ; preds = %100
  %113 = udiv i32 %2, 10
  %114 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %14, i64 0, i32 0, i64 10
  store i8* %114, i8** %105, align 8
  %115 = urem i32 %113, 10
  %116 = trunc i32 %115 to i8
  %117 = or i8 %116, 48
  store i8 %117, i8* %114, align 2
  %118 = icmp ugt i32 %2, 99
  br i1 %118, label %119, label %126

119:                                              ; preds = %112
  %120 = udiv i32 %2, 100
  %121 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %14, i64 0, i32 0, i64 9
  store i8* %121, i8** %105, align 8
  %122 = urem i32 %120, 10
  %123 = trunc i32 %122 to i8
  %124 = or i8 %123, 48
  store i8 %124, i8* %121, align 1
  %125 = icmp ugt i32 %2, 999
  br i1 %125, label %130, label %139

126:                                              ; preds = %112
  %127 = ptrtoint i8* %114 to i64
  br label %142

128:                                              ; preds = %100
  %129 = ptrtoint i8* %104 to i64
  br label %142

130:                                              ; preds = %119, %130
  %131 = phi i32 [ %133, %130 ], [ %120, %119 ]
  %132 = load i8*, i8** %105, align 8
  %133 = udiv i32 %131, 10
  %134 = getelementptr inbounds i8, i8* %132, i64 -1
  store i8* %134, i8** %105, align 8
  %135 = urem i32 %133, 10
  %136 = trunc i32 %135 to i8
  %137 = or i8 %136, 48
  store i8 %137, i8* %134, align 1
  %138 = icmp ugt i32 %131, 99
  br i1 %138, label %130, label %139

139:                                              ; preds = %130, %119
  %140 = bitcast i8** %105 to i64*
  %141 = load i64, i64* %140, align 8
  br label %142

142:                                              ; preds = %139, %126, %128
  %143 = phi i64 [ %129, %128 ], [ %141, %139 ], [ %127, %126 ]
  %144 = ptrtoint i8* %107 to i64
  %145 = sub i64 %144, %143
  %146 = trunc i64 %145 to i32
  store i32 %146, i32* %106, align 8
  %147 = inttoptr i64 %143 to i8*
  %148 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %147, i32 %146) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %103) #10
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %225, label %150

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #10
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !2

164:                                              ; preds = %157
  call void @llvm.trap() #10
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %165, %150
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = load atomic i32, i32* %151 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %182

172:                                              ; preds = %167
  %173 = zext i32 %168 to i33
  %174 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %173, i33 1) #10
  %175 = extractvalue { i33, i1 } %174, 1
  %176 = extractvalue { i33, i1 } %174, 0
  %177 = icmp slt i33 %176, 0
  %178 = or i1 %175, %177
  br i1 %178, label %179, label %180, !prof !2

179:                                              ; preds = %172
  call void @llvm.trap() #10
  unreachable

180:                                              ; preds = %172
  %181 = trunc i33 %176 to i32
  store i32 %181, i32* %155, align 4
  br label %182

182:                                              ; preds = %180, %167
  %183 = phi i32 [ %181, %180 ], [ %168, %167 ]
  %184 = load atomic i32, i32* %151 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %182
  %188 = add i32 %183, -1
  store i32 %188, i32* %155, align 4
  br label %189

189:                                              ; preds = %187, %182
  %190 = phi i32 [ %188, %187 ], [ %183, %182 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #10
  br label %193

193:                                              ; preds = %189, %192
  %194 = load atomic i32, i32* %151 monotonic, align 4, !noalias !3
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = load i32, i32* %155, align 4
  br i1 %196, label %198, label %208

198:                                              ; preds = %193
  %199 = zext i32 %197 to i33
  %200 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %199, i33 1) #10
  %201 = extractvalue { i33, i1 } %200, 1
  %202 = extractvalue { i33, i1 } %200, 0
  %203 = icmp slt i33 %202, 0
  %204 = or i1 %201, %203
  br i1 %204, label %205, label %206, !prof !2

205:                                              ; preds = %198
  call void @llvm.trap() #10, !noalias !3
  unreachable

206:                                              ; preds = %198
  %207 = trunc i33 %202 to i32
  store i32 %207, i32* %155, align 4, !noalias !3
  br label %208

208:                                              ; preds = %193, %206
  %209 = phi i32 [ %207, %206 ], [ %197, %193 ]
  %210 = bitcast %"class.WTF::StringAppend"* %17 to i64*
  store i64 ptrtoint ([23 x i8]* @.str to i64), i64* %210, align 8, !alias.scope !3
  %211 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %148, %"class.WTF::StringImpl"** %211, align 8, !alias.scope !3
  %212 = load atomic i32, i32* %151 monotonic, align 4, !noalias !3
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %229

215:                                              ; preds = %208
  %216 = zext i32 %209 to i33
  %217 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %216, i33 1) #10
  %218 = extractvalue { i33, i1 } %217, 1
  %219 = extractvalue { i33, i1 } %217, 0
  %220 = icmp slt i33 %219, 0
  %221 = or i1 %218, %220
  br i1 %221, label %222, label %223, !prof !2

222:                                              ; preds = %215
  call void @llvm.trap() #10, !noalias !3
  unreachable

223:                                              ; preds = %215
  %224 = trunc i33 %219 to i32
  store i32 %224, i32* %155, align 4, !noalias !3
  br label %229

225:                                              ; preds = %142
  %226 = bitcast %"class.WTF::StringAppend"* %17 to i64*
  store i64 ptrtoint ([23 x i8]* @.str to i64), i64* %226, align 8, !alias.scope !3
  %227 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %227, align 8, !alias.scope !3
  %228 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i8** %228, align 8, !alias.scope !3
  br label %241

229:                                              ; preds = %223, %208
  %230 = phi i32 [ %224, %223 ], [ %209, %208 ]
  %231 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i8** %231, align 8, !alias.scope !3
  %232 = load atomic i32, i32* %151 monotonic, align 4, !noalias !3
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %237

235:                                              ; preds = %229
  %236 = add i32 %230, -1
  store i32 %236, i32* %155, align 4, !noalias !3
  br label %237

237:                                              ; preds = %235, %229
  %238 = phi i32 [ %236, %235 ], [ %230, %229 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #10, !noalias !3
  br label %241

241:                                              ; preds = %225, %237, %240
  %242 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %17)
  %243 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %242, %"class.WTF::StringImpl"** %243, align 8
  %244 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %245 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %244, align 8
  %246 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %245, align 8
  call void %246(%"class.blink::ExceptionState"* %4, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %16) #10
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %262, label %249

249:                                              ; preds = %241
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  br i1 %253, label %256, label %258

256:                                              ; preds = %249
  %257 = add i32 %255, -1
  store i32 %257, i32* %254, align 4
  br label %258

258:                                              ; preds = %256, %249
  %259 = phi i32 [ %257, %256 ], [ %255, %249 ]
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %258
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %247) #10
  br label %262

262:                                              ; preds = %241, %258, %261
  %263 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %263, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %265, label %279, label %266

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 0
  %272 = load i32, i32* %271, align 4
  br i1 %270, label %273, label %275

273:                                              ; preds = %266
  %274 = add i32 %272, -1
  store i32 %274, i32* %271, align 4
  br label %275

275:                                              ; preds = %273, %266
  %276 = phi i32 [ %274, %273 ], [ %272, %266 ]
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %275
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %264) #10
  br label %279

279:                                              ; preds = %262, %275, %278
  br i1 %149, label %305, label %280

280:                                              ; preds = %279
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %294

292:                                              ; preds = %289
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #10
  %293 = load i32, i32* %285, align 4
  br label %294

294:                                              ; preds = %289, %292
  %295 = phi i32 [ %290, %289 ], [ %293, %292 ]
  %296 = load atomic i32, i32* %281 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %301

299:                                              ; preds = %294
  %300 = add i32 %295, -1
  store i32 %300, i32* %285, align 4
  br label %301

301:                                              ; preds = %299, %294
  %302 = phi i32 [ %300, %299 ], [ %295, %294 ]
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #10
  br label %305

305:                                              ; preds = %279, %301, %304
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #10
  br label %320

306:                                              ; preds = %90, %93, %72
  %307 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %308 = load i32, i32* %307, align 8
  %309 = icmp eq i32 %80, %308
  br i1 %309, label %319, label %310, !prof !2

310:                                              ; preds = %306
  %311 = bitcast %"class.blink::Member.345"* %82 to i64*
  store atomic i64 %84, i64* %311 monotonic, align 8
  %312 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %316, label %314

314:                                              ; preds = %310
  %315 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #10
  br label %316

316:                                              ; preds = %314, %310
  %317 = load i32, i32* %79, align 4
  %318 = add i32 %317, 1
  store i32 %318, i32* %79, align 4
  br label %320

319:                                              ; preds = %306
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.342"* %76, %"class.blink::MessagePort"** nonnull dereferenceable(8) %15) #10
  br label %320

320:                                              ; preds = %319, %316, %305
  %321 = phi i1 [ false, %305 ], [ true, %316 ], [ true, %319 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  br label %2469

322:                                              ; preds = %5
  %323 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %49, align 8
  %324 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %323, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink12V8MojoHandle18wrapper_type_info_E, %"class.v8::Value"* %1) #10
  br i1 %324, label %325, label %595

325:                                              ; preds = %322
  %326 = bitcast %"class.blink::MojoHandle"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %326) #10
  store %"class.blink::MojoHandle"* inttoptr (i64 -6148914691236517206 to %"class.blink::MojoHandle"*), %"class.blink::MojoHandle"** %18, align 8
  %327 = bitcast %"class.v8::Value"* %1 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = add i64 %328, -1
  %330 = inttoptr i64 %329 to i32*
  %331 = load i32, i32* %330, align 4
  %332 = and i64 %328, -4294967296
  %333 = zext i32 %331 to i64
  %334 = or i64 %332, %333
  %335 = add i64 %334, 7
  %336 = inttoptr i64 %335 to i16*
  %337 = load i16, i16* %336, align 2
  switch i16 %337, label %342 [
    i16 1057, label %338
    i16 1056, label %338
    i16 1040, label %338
  ]

338:                                              ; preds = %325, %325, %325
  %339 = add i64 %328, 19
  %340 = inttoptr i64 %339 to i8**
  %341 = load i8*, i8** %340, align 1
  br label %345

342:                                              ; preds = %325
  %343 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %344 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %343, i32 1) #10
  br label %345

345:                                              ; preds = %338, %342
  %346 = phi i8* [ %341, %338 ], [ %344, %342 ]
  %347 = bitcast i8* %346 to %"class.blink::MojoHandle"*
  %348 = bitcast %"class.blink::MojoHandle"** %18 to i8**
  store i8* %346, i8** %348, align 8
  %349 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 4, i32 0
  %350 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %349, i64 0, i32 0, i32 0, i32 0
  %351 = load %"class.blink::Member.353"*, %"class.blink::Member.353"** %350, align 8
  %352 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %353 = load i32, i32* %352, align 4
  %354 = zext i32 %353 to i64
  %355 = getelementptr inbounds %"class.blink::Member.353", %"class.blink::Member.353"* %351, i64 %354
  %356 = icmp eq i32 %353, 0
  %357 = ptrtoint i8* %346 to i64
  br i1 %356, label %579, label %358

358:                                              ; preds = %345, %363
  %359 = phi %"class.blink::Member.353"* [ %364, %363 ], [ %351, %345 ]
  %360 = getelementptr inbounds %"class.blink::Member.353", %"class.blink::Member.353"* %359, i64 0, i32 0, i32 0
  %361 = load %"class.blink::MojoHandle"*, %"class.blink::MojoHandle"** %360, align 8
  %362 = icmp eq %"class.blink::MojoHandle"* %361, %347
  br i1 %362, label %366, label %363

363:                                              ; preds = %358
  %364 = getelementptr inbounds %"class.blink::Member.353", %"class.blink::Member.353"* %359, i64 1
  %365 = icmp ult %"class.blink::Member.353"* %364, %355
  br i1 %365, label %358, label %579

366:                                              ; preds = %358
  %367 = ptrtoint %"class.blink::Member.353"* %359 to i64
  %368 = ptrtoint %"class.blink::Member.353"* %351 to i64
  %369 = sub i64 %367, %368
  %370 = lshr exact i64 %369, 3
  %371 = trunc i64 %370 to i32
  %372 = icmp eq i32 %371, -1
  br i1 %372, label %579, label %373

373:                                              ; preds = %366
  %374 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %374) #10
  %375 = bitcast %"class.WTF::StringAppend"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %375) #10
  %376 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %376) #10
  %377 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 11
  %378 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 2
  %379 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 3
  %380 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %376, i8 -86, i64 32, i1 false) #10
  store i8* %377, i8** %378, align 8
  %381 = urem i32 %2, 10
  %382 = trunc i32 %381 to i8
  %383 = or i8 %382, 48
  store i8 %383, i8* %377, align 1
  %384 = icmp ugt i32 %2, 9
  br i1 %384, label %385, label %401

385:                                              ; preds = %373
  %386 = udiv i32 %2, 10
  %387 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 10
  store i8* %387, i8** %378, align 8
  %388 = urem i32 %386, 10
  %389 = trunc i32 %388 to i8
  %390 = or i8 %389, 48
  store i8 %390, i8* %387, align 2
  %391 = icmp ugt i32 %2, 99
  br i1 %391, label %392, label %399

392:                                              ; preds = %385
  %393 = udiv i32 %2, 100
  %394 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 9
  store i8* %394, i8** %378, align 8
  %395 = urem i32 %393, 10
  %396 = trunc i32 %395 to i8
  %397 = or i8 %396, 48
  store i8 %397, i8* %394, align 1
  %398 = icmp ugt i32 %2, 999
  br i1 %398, label %403, label %412

399:                                              ; preds = %385
  %400 = ptrtoint i8* %387 to i64
  br label %415

401:                                              ; preds = %373
  %402 = ptrtoint i8* %377 to i64
  br label %415

403:                                              ; preds = %392, %403
  %404 = phi i32 [ %406, %403 ], [ %393, %392 ]
  %405 = load i8*, i8** %378, align 8
  %406 = udiv i32 %404, 10
  %407 = getelementptr inbounds i8, i8* %405, i64 -1
  store i8* %407, i8** %378, align 8
  %408 = urem i32 %406, 10
  %409 = trunc i32 %408 to i8
  %410 = or i8 %409, 48
  store i8 %410, i8* %407, align 1
  %411 = icmp ugt i32 %404, 99
  br i1 %411, label %403, label %412

412:                                              ; preds = %403, %392
  %413 = bitcast i8** %378 to i64*
  %414 = load i64, i64* %413, align 8
  br label %415

415:                                              ; preds = %412, %399, %401
  %416 = phi i64 [ %402, %401 ], [ %414, %412 ], [ %400, %399 ]
  %417 = ptrtoint i8* %380 to i64
  %418 = sub i64 %417, %416
  %419 = trunc i64 %418 to i32
  store i32 %419, i32* %379, align 8
  %420 = inttoptr i64 %416 to i8*
  %421 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %420, i32 %419) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %376) #10
  %422 = icmp eq %"class.WTF::StringImpl"* %421, null
  br i1 %422, label %498, label %423

423:                                              ; preds = %415
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = load atomic i32, i32* %424 monotonic, align 4
  %426 = and i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 0
  %429 = load i32, i32* %428, align 4
  br i1 %427, label %430, label %440

430:                                              ; preds = %423
  %431 = zext i32 %429 to i33
  %432 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %431, i33 1) #10
  %433 = extractvalue { i33, i1 } %432, 1
  %434 = extractvalue { i33, i1 } %432, 0
  %435 = icmp slt i33 %434, 0
  %436 = or i1 %433, %435
  br i1 %436, label %437, label %438, !prof !2

437:                                              ; preds = %430
  call void @llvm.trap() #10
  unreachable

438:                                              ; preds = %430
  %439 = trunc i33 %434 to i32
  store i32 %439, i32* %428, align 4
  br label %440

440:                                              ; preds = %438, %423
  %441 = phi i32 [ %439, %438 ], [ %429, %423 ]
  %442 = load atomic i32, i32* %424 monotonic, align 4
  %443 = and i32 %442, 2
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %455

445:                                              ; preds = %440
  %446 = zext i32 %441 to i33
  %447 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %446, i33 1) #10
  %448 = extractvalue { i33, i1 } %447, 1
  %449 = extractvalue { i33, i1 } %447, 0
  %450 = icmp slt i33 %449, 0
  %451 = or i1 %448, %450
  br i1 %451, label %452, label %453, !prof !2

452:                                              ; preds = %445
  call void @llvm.trap() #10
  unreachable

453:                                              ; preds = %445
  %454 = trunc i33 %449 to i32
  store i32 %454, i32* %428, align 4
  br label %455

455:                                              ; preds = %453, %440
  %456 = phi i32 [ %454, %453 ], [ %441, %440 ]
  %457 = load atomic i32, i32* %424 monotonic, align 4
  %458 = and i32 %457, 2
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %460, label %462

460:                                              ; preds = %455
  %461 = add i32 %456, -1
  store i32 %461, i32* %428, align 4
  br label %462

462:                                              ; preds = %460, %455
  %463 = phi i32 [ %461, %460 ], [ %456, %455 ]
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %465, label %466

465:                                              ; preds = %462
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %421) #10
  br label %466

466:                                              ; preds = %462, %465
  %467 = load atomic i32, i32* %424 monotonic, align 4, !noalias !6
  %468 = and i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = load i32, i32* %428, align 4
  br i1 %469, label %471, label %481

471:                                              ; preds = %466
  %472 = zext i32 %470 to i33
  %473 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %472, i33 1) #10
  %474 = extractvalue { i33, i1 } %473, 1
  %475 = extractvalue { i33, i1 } %473, 0
  %476 = icmp slt i33 %475, 0
  %477 = or i1 %474, %476
  br i1 %477, label %478, label %479, !prof !2

478:                                              ; preds = %471
  call void @llvm.trap() #10, !noalias !6
  unreachable

479:                                              ; preds = %471
  %480 = trunc i33 %475 to i32
  store i32 %480, i32* %428, align 4, !noalias !6
  br label %481

481:                                              ; preds = %466, %479
  %482 = phi i32 [ %480, %479 ], [ %470, %466 ]
  %483 = bitcast %"class.WTF::StringAppend"* %20 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.2 to i64), i64* %483, align 8, !alias.scope !6
  %484 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %20, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %421, %"class.WTF::StringImpl"** %484, align 8, !alias.scope !6
  %485 = load atomic i32, i32* %424 monotonic, align 4, !noalias !6
  %486 = and i32 %485, 2
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %502

488:                                              ; preds = %481
  %489 = zext i32 %482 to i33
  %490 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %489, i33 1) #10
  %491 = extractvalue { i33, i1 } %490, 1
  %492 = extractvalue { i33, i1 } %490, 0
  %493 = icmp slt i33 %492, 0
  %494 = or i1 %491, %493
  br i1 %494, label %495, label %496, !prof !2

495:                                              ; preds = %488
  call void @llvm.trap() #10, !noalias !6
  unreachable

496:                                              ; preds = %488
  %497 = trunc i33 %492 to i32
  store i32 %497, i32* %428, align 4, !noalias !6
  br label %502

498:                                              ; preds = %415
  %499 = bitcast %"class.WTF::StringAppend"* %20 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.2 to i64), i64* %499, align 8, !alias.scope !6
  %500 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %20, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %500, align 8, !alias.scope !6
  %501 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i8** %501, align 8, !alias.scope !6
  br label %514

502:                                              ; preds = %496, %481
  %503 = phi i32 [ %497, %496 ], [ %482, %481 ]
  %504 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i8** %504, align 8, !alias.scope !6
  %505 = load atomic i32, i32* %424 monotonic, align 4, !noalias !6
  %506 = and i32 %505, 2
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %508, label %510

508:                                              ; preds = %502
  %509 = add i32 %503, -1
  store i32 %509, i32* %428, align 4, !noalias !6
  br label %510

510:                                              ; preds = %508, %502
  %511 = phi i32 [ %509, %508 ], [ %503, %502 ]
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %513, label %514

513:                                              ; preds = %510
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %421) #10, !noalias !6
  br label %514

514:                                              ; preds = %498, %510, %513
  %515 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %20)
  %516 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %515, %"class.WTF::StringImpl"** %516, align 8
  %517 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %518 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %517, align 8
  %519 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %518, align 8
  call void %519(%"class.blink::ExceptionState"* %4, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %19) #10
  %520 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %516, align 8
  %521 = icmp eq %"class.WTF::StringImpl"* %520, null
  br i1 %521, label %535, label %522

522:                                              ; preds = %514
  %523 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %520, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %524 = load atomic i32, i32* %523 monotonic, align 4
  %525 = and i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %520, i64 0, i32 0
  %528 = load i32, i32* %527, align 4
  br i1 %526, label %529, label %531

529:                                              ; preds = %522
  %530 = add i32 %528, -1
  store i32 %530, i32* %527, align 4
  br label %531

531:                                              ; preds = %529, %522
  %532 = phi i32 [ %530, %529 ], [ %528, %522 ]
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %534, label %535

534:                                              ; preds = %531
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %520) #10
  br label %535

535:                                              ; preds = %514, %531, %534
  %536 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %20, i64 0, i32 0, i32 1, i32 0, i32 0
  %537 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %536, align 8
  %538 = icmp eq %"class.WTF::StringImpl"* %537, null
  br i1 %538, label %552, label %539

539:                                              ; preds = %535
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %541 = load atomic i32, i32* %540 monotonic, align 4
  %542 = and i32 %541, 2
  %543 = icmp eq i32 %542, 0
  %544 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 0
  %545 = load i32, i32* %544, align 4
  br i1 %543, label %546, label %548

546:                                              ; preds = %539
  %547 = add i32 %545, -1
  store i32 %547, i32* %544, align 4
  br label %548

548:                                              ; preds = %546, %539
  %549 = phi i32 [ %547, %546 ], [ %545, %539 ]
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %551, label %552

551:                                              ; preds = %548
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %537) #10
  br label %552

552:                                              ; preds = %535, %548, %551
  br i1 %422, label %578, label %553

553:                                              ; preds = %552
  %554 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %555 = load atomic i32, i32* %554 monotonic, align 4
  %556 = and i32 %555, 2
  %557 = icmp eq i32 %556, 0
  %558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 0
  %559 = load i32, i32* %558, align 4
  br i1 %557, label %560, label %562

560:                                              ; preds = %553
  %561 = add i32 %559, -1
  store i32 %561, i32* %558, align 4
  br label %562

562:                                              ; preds = %560, %553
  %563 = phi i32 [ %561, %560 ], [ %559, %553 ]
  %564 = icmp eq i32 %563, 0
  br i1 %564, label %565, label %567

565:                                              ; preds = %562
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %421) #10
  %566 = load i32, i32* %558, align 4
  br label %567

567:                                              ; preds = %562, %565
  %568 = phi i32 [ %563, %562 ], [ %566, %565 ]
  %569 = load atomic i32, i32* %554 monotonic, align 4
  %570 = and i32 %569, 2
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %572, label %574

572:                                              ; preds = %567
  %573 = add i32 %568, -1
  store i32 %573, i32* %558, align 4
  br label %574

574:                                              ; preds = %572, %567
  %575 = phi i32 [ %573, %572 ], [ %568, %567 ]
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %577, label %578

577:                                              ; preds = %574
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %421) #10
  br label %578

578:                                              ; preds = %552, %574, %577
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %375) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %374) #10
  br label %593

579:                                              ; preds = %363, %366, %345
  %580 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %581 = load i32, i32* %580, align 8
  %582 = icmp eq i32 %353, %581
  br i1 %582, label %592, label %583, !prof !2

583:                                              ; preds = %579
  %584 = bitcast %"class.blink::Member.353"* %355 to i64*
  store atomic i64 %357, i64* %584 monotonic, align 8
  %585 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %589, label %587

587:                                              ; preds = %583
  %588 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %346) #10
  br label %589

589:                                              ; preds = %587, %583
  %590 = load i32, i32* %352, align 4
  %591 = add i32 %590, 1
  store i32 %591, i32* %352, align 4
  br label %593

592:                                              ; preds = %579
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_10MojoHandleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.350"* %349, %"class.blink::MojoHandle"** nonnull dereferenceable(8) %18) #10
  br label %593

593:                                              ; preds = %592, %589, %578
  %594 = phi i1 [ false, %578 ], [ true, %589 ], [ true, %592 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %326) #10
  br label %2469

595:                                              ; preds = %322
  %596 = tail call zeroext i1 @_ZNK2v85Value13IsArrayBufferEv(%"class.v8::Value"* %1) #10
  br i1 %596, label %597, label %849

597:                                              ; preds = %595
  %598 = bitcast %"class.blink::DOMArrayBuffer"** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %598) #10
  %599 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %600 = tail call %"class.blink::DOMArrayBuffer"* @_ZN5blink13V8ArrayBuffer6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %599) #10
  store %"class.blink::DOMArrayBuffer"* %600, %"class.blink::DOMArrayBuffer"** %21, align 8
  %601 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 0, i32 0
  %602 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %603 = load %"class.blink::Member"*, %"class.blink::Member"** %602, align 8
  %604 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %605 = load i32, i32* %604, align 4
  %606 = zext i32 %605 to i64
  %607 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %603, i64 %606
  %608 = icmp eq i32 %605, 0
  %609 = bitcast %"class.blink::DOMArrayBuffer"* %600 to %"class.blink::DOMArrayBufferBase"*
  %610 = ptrtoint %"class.blink::DOMArrayBuffer"* %600 to i64
  br i1 %608, label %832, label %611

611:                                              ; preds = %597, %616
  %612 = phi %"class.blink::Member"* [ %617, %616 ], [ %603, %597 ]
  %613 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %612, i64 0, i32 0, i32 0
  %614 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %613, align 8
  %615 = icmp eq %"class.blink::DOMArrayBufferBase"* %614, %609
  br i1 %615, label %619, label %616

616:                                              ; preds = %611
  %617 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %612, i64 1
  %618 = icmp ult %"class.blink::Member"* %617, %607
  br i1 %618, label %611, label %832

619:                                              ; preds = %611
  %620 = ptrtoint %"class.blink::Member"* %612 to i64
  %621 = ptrtoint %"class.blink::Member"* %603 to i64
  %622 = sub i64 %620, %621
  %623 = lshr exact i64 %622, 3
  %624 = trunc i64 %623 to i32
  %625 = icmp eq i32 %624, -1
  br i1 %625, label %832, label %626

626:                                              ; preds = %619
  %627 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %627) #10
  %628 = bitcast %"class.WTF::StringAppend"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %628) #10
  %629 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %629) #10
  %630 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 11
  %631 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 2
  %632 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 3
  %633 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %629, i8 -86, i64 32, i1 false) #10
  store i8* %630, i8** %631, align 8
  %634 = urem i32 %2, 10
  %635 = trunc i32 %634 to i8
  %636 = or i8 %635, 48
  store i8 %636, i8* %630, align 1
  %637 = icmp ugt i32 %2, 9
  br i1 %637, label %638, label %654

638:                                              ; preds = %626
  %639 = udiv i32 %2, 10
  %640 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 10
  store i8* %640, i8** %631, align 8
  %641 = urem i32 %639, 10
  %642 = trunc i32 %641 to i8
  %643 = or i8 %642, 48
  store i8 %643, i8* %640, align 2
  %644 = icmp ugt i32 %2, 99
  br i1 %644, label %645, label %652

645:                                              ; preds = %638
  %646 = udiv i32 %2, 100
  %647 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 9
  store i8* %647, i8** %631, align 8
  %648 = urem i32 %646, 10
  %649 = trunc i32 %648 to i8
  %650 = or i8 %649, 48
  store i8 %650, i8* %647, align 1
  %651 = icmp ugt i32 %2, 999
  br i1 %651, label %656, label %665

652:                                              ; preds = %638
  %653 = ptrtoint i8* %640 to i64
  br label %668

654:                                              ; preds = %626
  %655 = ptrtoint i8* %630 to i64
  br label %668

656:                                              ; preds = %645, %656
  %657 = phi i32 [ %659, %656 ], [ %646, %645 ]
  %658 = load i8*, i8** %631, align 8
  %659 = udiv i32 %657, 10
  %660 = getelementptr inbounds i8, i8* %658, i64 -1
  store i8* %660, i8** %631, align 8
  %661 = urem i32 %659, 10
  %662 = trunc i32 %661 to i8
  %663 = or i8 %662, 48
  store i8 %663, i8* %660, align 1
  %664 = icmp ugt i32 %657, 99
  br i1 %664, label %656, label %665

665:                                              ; preds = %656, %645
  %666 = bitcast i8** %631 to i64*
  %667 = load i64, i64* %666, align 8
  br label %668

668:                                              ; preds = %665, %652, %654
  %669 = phi i64 [ %655, %654 ], [ %667, %665 ], [ %653, %652 ]
  %670 = ptrtoint i8* %633 to i64
  %671 = sub i64 %670, %669
  %672 = trunc i64 %671 to i32
  store i32 %672, i32* %632, align 8
  %673 = inttoptr i64 %669 to i8*
  %674 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %673, i32 %672) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %629) #10
  %675 = icmp eq %"class.WTF::StringImpl"* %674, null
  br i1 %675, label %751, label %676

676:                                              ; preds = %668
  %677 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %678 = load atomic i32, i32* %677 monotonic, align 4
  %679 = and i32 %678, 2
  %680 = icmp eq i32 %679, 0
  %681 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 0
  %682 = load i32, i32* %681, align 4
  br i1 %680, label %683, label %693

683:                                              ; preds = %676
  %684 = zext i32 %682 to i33
  %685 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %684, i33 1) #10
  %686 = extractvalue { i33, i1 } %685, 1
  %687 = extractvalue { i33, i1 } %685, 0
  %688 = icmp slt i33 %687, 0
  %689 = or i1 %686, %688
  br i1 %689, label %690, label %691, !prof !2

690:                                              ; preds = %683
  call void @llvm.trap() #10
  unreachable

691:                                              ; preds = %683
  %692 = trunc i33 %687 to i32
  store i32 %692, i32* %681, align 4
  br label %693

693:                                              ; preds = %691, %676
  %694 = phi i32 [ %692, %691 ], [ %682, %676 ]
  %695 = load atomic i32, i32* %677 monotonic, align 4
  %696 = and i32 %695, 2
  %697 = icmp eq i32 %696, 0
  br i1 %697, label %698, label %708

698:                                              ; preds = %693
  %699 = zext i32 %694 to i33
  %700 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %699, i33 1) #10
  %701 = extractvalue { i33, i1 } %700, 1
  %702 = extractvalue { i33, i1 } %700, 0
  %703 = icmp slt i33 %702, 0
  %704 = or i1 %701, %703
  br i1 %704, label %705, label %706, !prof !2

705:                                              ; preds = %698
  call void @llvm.trap() #10
  unreachable

706:                                              ; preds = %698
  %707 = trunc i33 %702 to i32
  store i32 %707, i32* %681, align 4
  br label %708

708:                                              ; preds = %706, %693
  %709 = phi i32 [ %707, %706 ], [ %694, %693 ]
  %710 = load atomic i32, i32* %677 monotonic, align 4
  %711 = and i32 %710, 2
  %712 = icmp eq i32 %711, 0
  br i1 %712, label %713, label %715

713:                                              ; preds = %708
  %714 = add i32 %709, -1
  store i32 %714, i32* %681, align 4
  br label %715

715:                                              ; preds = %713, %708
  %716 = phi i32 [ %714, %713 ], [ %709, %708 ]
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %718, label %719

718:                                              ; preds = %715
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %674) #10
  br label %719

719:                                              ; preds = %715, %718
  %720 = load atomic i32, i32* %677 monotonic, align 4, !noalias !9
  %721 = and i32 %720, 2
  %722 = icmp eq i32 %721, 0
  %723 = load i32, i32* %681, align 4
  br i1 %722, label %724, label %734

724:                                              ; preds = %719
  %725 = zext i32 %723 to i33
  %726 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %725, i33 1) #10
  %727 = extractvalue { i33, i1 } %726, 1
  %728 = extractvalue { i33, i1 } %726, 0
  %729 = icmp slt i33 %728, 0
  %730 = or i1 %727, %729
  br i1 %730, label %731, label %732, !prof !2

731:                                              ; preds = %724
  call void @llvm.trap() #10, !noalias !9
  unreachable

732:                                              ; preds = %724
  %733 = trunc i33 %728 to i32
  store i32 %733, i32* %681, align 4, !noalias !9
  br label %734

734:                                              ; preds = %719, %732
  %735 = phi i32 [ %733, %732 ], [ %723, %719 ]
  %736 = bitcast %"class.WTF::StringAppend"* %23 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.4 to i64), i64* %736, align 8, !alias.scope !9
  %737 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %674, %"class.WTF::StringImpl"** %737, align 8, !alias.scope !9
  %738 = load atomic i32, i32* %677 monotonic, align 4, !noalias !9
  %739 = and i32 %738, 2
  %740 = icmp eq i32 %739, 0
  br i1 %740, label %741, label %755

741:                                              ; preds = %734
  %742 = zext i32 %735 to i33
  %743 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %742, i33 1) #10
  %744 = extractvalue { i33, i1 } %743, 1
  %745 = extractvalue { i33, i1 } %743, 0
  %746 = icmp slt i33 %745, 0
  %747 = or i1 %744, %746
  br i1 %747, label %748, label %749, !prof !2

748:                                              ; preds = %741
  call void @llvm.trap() #10, !noalias !9
  unreachable

749:                                              ; preds = %741
  %750 = trunc i33 %745 to i32
  store i32 %750, i32* %681, align 4, !noalias !9
  br label %755

751:                                              ; preds = %668
  %752 = bitcast %"class.WTF::StringAppend"* %23 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.4 to i64), i64* %752, align 8, !alias.scope !9
  %753 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %753, align 8, !alias.scope !9
  %754 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.5, i64 0, i64 0), i8** %754, align 8, !alias.scope !9
  br label %767

755:                                              ; preds = %749, %734
  %756 = phi i32 [ %750, %749 ], [ %735, %734 ]
  %757 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.5, i64 0, i64 0), i8** %757, align 8, !alias.scope !9
  %758 = load atomic i32, i32* %677 monotonic, align 4, !noalias !9
  %759 = and i32 %758, 2
  %760 = icmp eq i32 %759, 0
  br i1 %760, label %761, label %763

761:                                              ; preds = %755
  %762 = add i32 %756, -1
  store i32 %762, i32* %681, align 4, !noalias !9
  br label %763

763:                                              ; preds = %761, %755
  %764 = phi i32 [ %762, %761 ], [ %756, %755 ]
  %765 = icmp eq i32 %764, 0
  br i1 %765, label %766, label %767

766:                                              ; preds = %763
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %674) #10, !noalias !9
  br label %767

767:                                              ; preds = %751, %763, %766
  %768 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %23)
  %769 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %768, %"class.WTF::StringImpl"** %769, align 8
  %770 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %771 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %770, align 8
  %772 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %771, align 8
  call void %772(%"class.blink::ExceptionState"* %4, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %22) #10
  %773 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %769, align 8
  %774 = icmp eq %"class.WTF::StringImpl"* %773, null
  br i1 %774, label %788, label %775

775:                                              ; preds = %767
  %776 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %773, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %777 = load atomic i32, i32* %776 monotonic, align 4
  %778 = and i32 %777, 2
  %779 = icmp eq i32 %778, 0
  %780 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %773, i64 0, i32 0
  %781 = load i32, i32* %780, align 4
  br i1 %779, label %782, label %784

782:                                              ; preds = %775
  %783 = add i32 %781, -1
  store i32 %783, i32* %780, align 4
  br label %784

784:                                              ; preds = %782, %775
  %785 = phi i32 [ %783, %782 ], [ %781, %775 ]
  %786 = icmp eq i32 %785, 0
  br i1 %786, label %787, label %788

787:                                              ; preds = %784
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %773) #10
  br label %788

788:                                              ; preds = %767, %784, %787
  %789 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  %790 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %789, align 8
  %791 = icmp eq %"class.WTF::StringImpl"* %790, null
  br i1 %791, label %805, label %792

792:                                              ; preds = %788
  %793 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %790, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %794 = load atomic i32, i32* %793 monotonic, align 4
  %795 = and i32 %794, 2
  %796 = icmp eq i32 %795, 0
  %797 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %790, i64 0, i32 0
  %798 = load i32, i32* %797, align 4
  br i1 %796, label %799, label %801

799:                                              ; preds = %792
  %800 = add i32 %798, -1
  store i32 %800, i32* %797, align 4
  br label %801

801:                                              ; preds = %799, %792
  %802 = phi i32 [ %800, %799 ], [ %798, %792 ]
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %804, label %805

804:                                              ; preds = %801
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %790) #10
  br label %805

805:                                              ; preds = %788, %801, %804
  br i1 %675, label %831, label %806

806:                                              ; preds = %805
  %807 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %808 = load atomic i32, i32* %807 monotonic, align 4
  %809 = and i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 0
  %812 = load i32, i32* %811, align 4
  br i1 %810, label %813, label %815

813:                                              ; preds = %806
  %814 = add i32 %812, -1
  store i32 %814, i32* %811, align 4
  br label %815

815:                                              ; preds = %813, %806
  %816 = phi i32 [ %814, %813 ], [ %812, %806 ]
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %818, label %820

818:                                              ; preds = %815
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %674) #10
  %819 = load i32, i32* %811, align 4
  br label %820

820:                                              ; preds = %815, %818
  %821 = phi i32 [ %816, %815 ], [ %819, %818 ]
  %822 = load atomic i32, i32* %807 monotonic, align 4
  %823 = and i32 %822, 2
  %824 = icmp eq i32 %823, 0
  br i1 %824, label %825, label %827

825:                                              ; preds = %820
  %826 = add i32 %821, -1
  store i32 %826, i32* %811, align 4
  br label %827

827:                                              ; preds = %825, %820
  %828 = phi i32 [ %826, %825 ], [ %821, %820 ]
  %829 = icmp eq i32 %828, 0
  br i1 %829, label %830, label %831

830:                                              ; preds = %827
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %674) #10
  br label %831

831:                                              ; preds = %805, %827, %830
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %628) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %627) #10
  br label %847

832:                                              ; preds = %616, %619, %597
  %833 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %834 = load i32, i32* %833, align 8
  %835 = icmp eq i32 %605, %834
  br i1 %835, label %846, label %836, !prof !2

836:                                              ; preds = %832
  %837 = bitcast %"class.blink::Member"* %607 to i64*
  store atomic i64 %610, i64* %837 monotonic, align 8
  %838 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %839 = icmp eq i32 %838, 0
  br i1 %839, label %843, label %840

840:                                              ; preds = %836
  %841 = bitcast %"class.blink::DOMArrayBuffer"* %600 to i8*
  %842 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %841) #10
  br label %843

843:                                              ; preds = %840, %836
  %844 = load i32, i32* %604, align 4
  %845 = add i32 %844, 1
  store i32 %845, i32* %604, align 4
  br label %847

846:                                              ; preds = %832
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_14DOMArrayBufferEEEvOT_(%"class.WTF::Vector"* %601, %"class.blink::DOMArrayBuffer"** nonnull dereferenceable(8) %21) #10
  br label %847

847:                                              ; preds = %846, %843, %831
  %848 = phi i1 [ false, %831 ], [ true, %843 ], [ true, %846 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %598) #10
  br label %2469

849:                                              ; preds = %595
  %850 = tail call zeroext i1 @_ZNK2v85Value19IsSharedArrayBufferEv(%"class.v8::Value"* %1) #10
  br i1 %850, label %851, label %1103

851:                                              ; preds = %849
  %852 = bitcast %"class.blink::DOMSharedArrayBuffer"** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %852) #10
  %853 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %854 = tail call %"class.blink::DOMSharedArrayBuffer"* @_ZN5blink19V8SharedArrayBuffer6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %853) #10
  store %"class.blink::DOMSharedArrayBuffer"* %854, %"class.blink::DOMSharedArrayBuffer"** %24, align 8
  %855 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 0, i32 0
  %856 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %857 = load %"class.blink::Member"*, %"class.blink::Member"** %856, align 8
  %858 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %859 = load i32, i32* %858, align 4
  %860 = zext i32 %859 to i64
  %861 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %857, i64 %860
  %862 = icmp eq i32 %859, 0
  %863 = bitcast %"class.blink::DOMSharedArrayBuffer"* %854 to %"class.blink::DOMArrayBufferBase"*
  %864 = ptrtoint %"class.blink::DOMSharedArrayBuffer"* %854 to i64
  br i1 %862, label %1086, label %865

865:                                              ; preds = %851, %870
  %866 = phi %"class.blink::Member"* [ %871, %870 ], [ %857, %851 ]
  %867 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %866, i64 0, i32 0, i32 0
  %868 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %867, align 8
  %869 = icmp eq %"class.blink::DOMArrayBufferBase"* %868, %863
  br i1 %869, label %873, label %870

870:                                              ; preds = %865
  %871 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %866, i64 1
  %872 = icmp ult %"class.blink::Member"* %871, %861
  br i1 %872, label %865, label %1086

873:                                              ; preds = %865
  %874 = ptrtoint %"class.blink::Member"* %866 to i64
  %875 = ptrtoint %"class.blink::Member"* %857 to i64
  %876 = sub i64 %874, %875
  %877 = lshr exact i64 %876, 3
  %878 = trunc i64 %877 to i32
  %879 = icmp eq i32 %878, -1
  br i1 %879, label %1086, label %880

880:                                              ; preds = %873
  %881 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %881) #10
  %882 = bitcast %"class.WTF::StringAppend"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %882) #10
  %883 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %883) #10
  %884 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 11
  %885 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 2
  %886 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 3
  %887 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %883, i8 -86, i64 32, i1 false) #10
  store i8* %884, i8** %885, align 8
  %888 = urem i32 %2, 10
  %889 = trunc i32 %888 to i8
  %890 = or i8 %889, 48
  store i8 %890, i8* %884, align 1
  %891 = icmp ugt i32 %2, 9
  br i1 %891, label %892, label %908

892:                                              ; preds = %880
  %893 = udiv i32 %2, 10
  %894 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 10
  store i8* %894, i8** %885, align 8
  %895 = urem i32 %893, 10
  %896 = trunc i32 %895 to i8
  %897 = or i8 %896, 48
  store i8 %897, i8* %894, align 2
  %898 = icmp ugt i32 %2, 99
  br i1 %898, label %899, label %906

899:                                              ; preds = %892
  %900 = udiv i32 %2, 100
  %901 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 9
  store i8* %901, i8** %885, align 8
  %902 = urem i32 %900, 10
  %903 = trunc i32 %902 to i8
  %904 = or i8 %903, 48
  store i8 %904, i8* %901, align 1
  %905 = icmp ugt i32 %2, 999
  br i1 %905, label %910, label %919

906:                                              ; preds = %892
  %907 = ptrtoint i8* %894 to i64
  br label %922

908:                                              ; preds = %880
  %909 = ptrtoint i8* %884 to i64
  br label %922

910:                                              ; preds = %899, %910
  %911 = phi i32 [ %913, %910 ], [ %900, %899 ]
  %912 = load i8*, i8** %885, align 8
  %913 = udiv i32 %911, 10
  %914 = getelementptr inbounds i8, i8* %912, i64 -1
  store i8* %914, i8** %885, align 8
  %915 = urem i32 %913, 10
  %916 = trunc i32 %915 to i8
  %917 = or i8 %916, 48
  store i8 %917, i8* %914, align 1
  %918 = icmp ugt i32 %911, 99
  br i1 %918, label %910, label %919

919:                                              ; preds = %910, %899
  %920 = bitcast i8** %885 to i64*
  %921 = load i64, i64* %920, align 8
  br label %922

922:                                              ; preds = %919, %906, %908
  %923 = phi i64 [ %909, %908 ], [ %921, %919 ], [ %907, %906 ]
  %924 = ptrtoint i8* %887 to i64
  %925 = sub i64 %924, %923
  %926 = trunc i64 %925 to i32
  store i32 %926, i32* %886, align 8
  %927 = inttoptr i64 %923 to i8*
  %928 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %927, i32 %926) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %883) #10
  %929 = icmp eq %"class.WTF::StringImpl"* %928, null
  br i1 %929, label %1005, label %930

930:                                              ; preds = %922
  %931 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %932 = load atomic i32, i32* %931 monotonic, align 4
  %933 = and i32 %932, 2
  %934 = icmp eq i32 %933, 0
  %935 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 0
  %936 = load i32, i32* %935, align 4
  br i1 %934, label %937, label %947

937:                                              ; preds = %930
  %938 = zext i32 %936 to i33
  %939 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %938, i33 1) #10
  %940 = extractvalue { i33, i1 } %939, 1
  %941 = extractvalue { i33, i1 } %939, 0
  %942 = icmp slt i33 %941, 0
  %943 = or i1 %940, %942
  br i1 %943, label %944, label %945, !prof !2

944:                                              ; preds = %937
  call void @llvm.trap() #10
  unreachable

945:                                              ; preds = %937
  %946 = trunc i33 %941 to i32
  store i32 %946, i32* %935, align 4
  br label %947

947:                                              ; preds = %945, %930
  %948 = phi i32 [ %946, %945 ], [ %936, %930 ]
  %949 = load atomic i32, i32* %931 monotonic, align 4
  %950 = and i32 %949, 2
  %951 = icmp eq i32 %950, 0
  br i1 %951, label %952, label %962

952:                                              ; preds = %947
  %953 = zext i32 %948 to i33
  %954 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %953, i33 1) #10
  %955 = extractvalue { i33, i1 } %954, 1
  %956 = extractvalue { i33, i1 } %954, 0
  %957 = icmp slt i33 %956, 0
  %958 = or i1 %955, %957
  br i1 %958, label %959, label %960, !prof !2

959:                                              ; preds = %952
  call void @llvm.trap() #10
  unreachable

960:                                              ; preds = %952
  %961 = trunc i33 %956 to i32
  store i32 %961, i32* %935, align 4
  br label %962

962:                                              ; preds = %960, %947
  %963 = phi i32 [ %961, %960 ], [ %948, %947 ]
  %964 = load atomic i32, i32* %931 monotonic, align 4
  %965 = and i32 %964, 2
  %966 = icmp eq i32 %965, 0
  br i1 %966, label %967, label %969

967:                                              ; preds = %962
  %968 = add i32 %963, -1
  store i32 %968, i32* %935, align 4
  br label %969

969:                                              ; preds = %967, %962
  %970 = phi i32 [ %968, %967 ], [ %963, %962 ]
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %972, label %973

972:                                              ; preds = %969
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %928) #10
  br label %973

973:                                              ; preds = %969, %972
  %974 = load atomic i32, i32* %931 monotonic, align 4, !noalias !12
  %975 = and i32 %974, 2
  %976 = icmp eq i32 %975, 0
  %977 = load i32, i32* %935, align 4
  br i1 %976, label %978, label %988

978:                                              ; preds = %973
  %979 = zext i32 %977 to i33
  %980 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %979, i33 1) #10
  %981 = extractvalue { i33, i1 } %980, 1
  %982 = extractvalue { i33, i1 } %980, 0
  %983 = icmp slt i33 %982, 0
  %984 = or i1 %981, %983
  br i1 %984, label %985, label %986, !prof !2

985:                                              ; preds = %978
  call void @llvm.trap() #10, !noalias !12
  unreachable

986:                                              ; preds = %978
  %987 = trunc i33 %982 to i32
  store i32 %987, i32* %935, align 4, !noalias !12
  br label %988

988:                                              ; preds = %973, %986
  %989 = phi i32 [ %987, %986 ], [ %977, %973 ]
  %990 = bitcast %"class.WTF::StringAppend"* %26 to i64*
  store i64 ptrtoint ([28 x i8]* @.str.6 to i64), i64* %990, align 8, !alias.scope !12
  %991 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %26, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %928, %"class.WTF::StringImpl"** %991, align 8, !alias.scope !12
  %992 = load atomic i32, i32* %931 monotonic, align 4, !noalias !12
  %993 = and i32 %992, 2
  %994 = icmp eq i32 %993, 0
  br i1 %994, label %995, label %1009

995:                                              ; preds = %988
  %996 = zext i32 %989 to i33
  %997 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %996, i33 1) #10
  %998 = extractvalue { i33, i1 } %997, 1
  %999 = extractvalue { i33, i1 } %997, 0
  %1000 = icmp slt i33 %999, 0
  %1001 = or i1 %998, %1000
  br i1 %1001, label %1002, label %1003, !prof !2

1002:                                             ; preds = %995
  call void @llvm.trap() #10, !noalias !12
  unreachable

1003:                                             ; preds = %995
  %1004 = trunc i33 %999 to i32
  store i32 %1004, i32* %935, align 4, !noalias !12
  br label %1009

1005:                                             ; preds = %922
  %1006 = bitcast %"class.WTF::StringAppend"* %26 to i64*
  store i64 ptrtoint ([28 x i8]* @.str.6 to i64), i64* %1006, align 8, !alias.scope !12
  %1007 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %26, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1007, align 8, !alias.scope !12
  %1008 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %26, i64 0, i32 1
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i64 0, i64 0), i8** %1008, align 8, !alias.scope !12
  br label %1021

1009:                                             ; preds = %1003, %988
  %1010 = phi i32 [ %1004, %1003 ], [ %989, %988 ]
  %1011 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %26, i64 0, i32 1
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i64 0, i64 0), i8** %1011, align 8, !alias.scope !12
  %1012 = load atomic i32, i32* %931 monotonic, align 4, !noalias !12
  %1013 = and i32 %1012, 2
  %1014 = icmp eq i32 %1013, 0
  br i1 %1014, label %1015, label %1017

1015:                                             ; preds = %1009
  %1016 = add i32 %1010, -1
  store i32 %1016, i32* %935, align 4, !noalias !12
  br label %1017

1017:                                             ; preds = %1015, %1009
  %1018 = phi i32 [ %1016, %1015 ], [ %1010, %1009 ]
  %1019 = icmp eq i32 %1018, 0
  br i1 %1019, label %1020, label %1021

1020:                                             ; preds = %1017
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %928) #10, !noalias !12
  br label %1021

1021:                                             ; preds = %1005, %1017, %1020
  %1022 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %26)
  %1023 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1022, %"class.WTF::StringImpl"** %1023, align 8
  %1024 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %1025 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %1024, align 8
  %1026 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %1025, align 8
  call void %1026(%"class.blink::ExceptionState"* %4, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %25) #10
  %1027 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1023, align 8
  %1028 = icmp eq %"class.WTF::StringImpl"* %1027, null
  br i1 %1028, label %1042, label %1029

1029:                                             ; preds = %1021
  %1030 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1027, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1031 = load atomic i32, i32* %1030 monotonic, align 4
  %1032 = and i32 %1031, 2
  %1033 = icmp eq i32 %1032, 0
  %1034 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1027, i64 0, i32 0
  %1035 = load i32, i32* %1034, align 4
  br i1 %1033, label %1036, label %1038

1036:                                             ; preds = %1029
  %1037 = add i32 %1035, -1
  store i32 %1037, i32* %1034, align 4
  br label %1038

1038:                                             ; preds = %1036, %1029
  %1039 = phi i32 [ %1037, %1036 ], [ %1035, %1029 ]
  %1040 = icmp eq i32 %1039, 0
  br i1 %1040, label %1041, label %1042

1041:                                             ; preds = %1038
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1027) #10
  br label %1042

1042:                                             ; preds = %1021, %1038, %1041
  %1043 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %26, i64 0, i32 0, i32 1, i32 0, i32 0
  %1044 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1043, align 8
  %1045 = icmp eq %"class.WTF::StringImpl"* %1044, null
  br i1 %1045, label %1059, label %1046

1046:                                             ; preds = %1042
  %1047 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1044, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1048 = load atomic i32, i32* %1047 monotonic, align 4
  %1049 = and i32 %1048, 2
  %1050 = icmp eq i32 %1049, 0
  %1051 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1044, i64 0, i32 0
  %1052 = load i32, i32* %1051, align 4
  br i1 %1050, label %1053, label %1055

1053:                                             ; preds = %1046
  %1054 = add i32 %1052, -1
  store i32 %1054, i32* %1051, align 4
  br label %1055

1055:                                             ; preds = %1053, %1046
  %1056 = phi i32 [ %1054, %1053 ], [ %1052, %1046 ]
  %1057 = icmp eq i32 %1056, 0
  br i1 %1057, label %1058, label %1059

1058:                                             ; preds = %1055
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1044) #10
  br label %1059

1059:                                             ; preds = %1042, %1055, %1058
  br i1 %929, label %1085, label %1060

1060:                                             ; preds = %1059
  %1061 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1062 = load atomic i32, i32* %1061 monotonic, align 4
  %1063 = and i32 %1062, 2
  %1064 = icmp eq i32 %1063, 0
  %1065 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 0
  %1066 = load i32, i32* %1065, align 4
  br i1 %1064, label %1067, label %1069

1067:                                             ; preds = %1060
  %1068 = add i32 %1066, -1
  store i32 %1068, i32* %1065, align 4
  br label %1069

1069:                                             ; preds = %1067, %1060
  %1070 = phi i32 [ %1068, %1067 ], [ %1066, %1060 ]
  %1071 = icmp eq i32 %1070, 0
  br i1 %1071, label %1072, label %1074

1072:                                             ; preds = %1069
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %928) #10
  %1073 = load i32, i32* %1065, align 4
  br label %1074

1074:                                             ; preds = %1069, %1072
  %1075 = phi i32 [ %1070, %1069 ], [ %1073, %1072 ]
  %1076 = load atomic i32, i32* %1061 monotonic, align 4
  %1077 = and i32 %1076, 2
  %1078 = icmp eq i32 %1077, 0
  br i1 %1078, label %1079, label %1081

1079:                                             ; preds = %1074
  %1080 = add i32 %1075, -1
  store i32 %1080, i32* %1065, align 4
  br label %1081

1081:                                             ; preds = %1079, %1074
  %1082 = phi i32 [ %1080, %1079 ], [ %1075, %1074 ]
  %1083 = icmp eq i32 %1082, 0
  br i1 %1083, label %1084, label %1085

1084:                                             ; preds = %1081
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %928) #10
  br label %1085

1085:                                             ; preds = %1059, %1081, %1084
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %882) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %881) #10
  br label %1101

1086:                                             ; preds = %870, %873, %851
  %1087 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1088 = load i32, i32* %1087, align 8
  %1089 = icmp eq i32 %859, %1088
  br i1 %1089, label %1100, label %1090, !prof !2

1090:                                             ; preds = %1086
  %1091 = bitcast %"class.blink::Member"* %861 to i64*
  store atomic i64 %864, i64* %1091 monotonic, align 8
  %1092 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1093 = icmp eq i32 %1092, 0
  br i1 %1093, label %1097, label %1094

1094:                                             ; preds = %1090
  %1095 = bitcast %"class.blink::DOMSharedArrayBuffer"* %854 to i8*
  %1096 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1095) #10
  br label %1097

1097:                                             ; preds = %1094, %1090
  %1098 = load i32, i32* %858, align 4
  %1099 = add i32 %1098, 1
  store i32 %1099, i32* %858, align 4
  br label %1101

1100:                                             ; preds = %1086
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_20DOMSharedArrayBufferEEEvOT_(%"class.WTF::Vector"* %855, %"class.blink::DOMSharedArrayBuffer"** nonnull dereferenceable(8) %24) #10
  br label %1101

1101:                                             ; preds = %1100, %1097, %1085
  %1102 = phi i1 [ false, %1085 ], [ true, %1097 ], [ true, %1100 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %852) #10
  br label %2469

1103:                                             ; preds = %849
  %1104 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %49, align 8
  %1105 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1104, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8ImageBitmap18wrapper_type_info_E, %"class.v8::Value"* %1) #10
  br i1 %1105, label %1106, label %1376

1106:                                             ; preds = %1103
  %1107 = bitcast %"class.blink::ImageBitmap"** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1107) #10
  store %"class.blink::ImageBitmap"* inttoptr (i64 -6148914691236517206 to %"class.blink::ImageBitmap"*), %"class.blink::ImageBitmap"** %27, align 8
  %1108 = bitcast %"class.v8::Value"* %1 to i64*
  %1109 = load i64, i64* %1108, align 8
  %1110 = add i64 %1109, -1
  %1111 = inttoptr i64 %1110 to i32*
  %1112 = load i32, i32* %1111, align 4
  %1113 = and i64 %1109, -4294967296
  %1114 = zext i32 %1112 to i64
  %1115 = or i64 %1113, %1114
  %1116 = add i64 %1115, 7
  %1117 = inttoptr i64 %1116 to i16*
  %1118 = load i16, i16* %1117, align 2
  switch i16 %1118, label %1123 [
    i16 1057, label %1119
    i16 1056, label %1119
    i16 1040, label %1119
  ]

1119:                                             ; preds = %1106, %1106, %1106
  %1120 = add i64 %1109, 19
  %1121 = inttoptr i64 %1120 to i8**
  %1122 = load i8*, i8** %1121, align 1
  br label %1126

1123:                                             ; preds = %1106
  %1124 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %1125 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1124, i32 1) #10
  br label %1126

1126:                                             ; preds = %1119, %1123
  %1127 = phi i8* [ %1122, %1119 ], [ %1125, %1123 ]
  %1128 = bitcast i8* %1127 to %"class.blink::ImageBitmap"*
  %1129 = bitcast %"class.blink::ImageBitmap"** %27 to i8**
  store i8* %1127, i8** %1129, align 8
  %1130 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 1, i32 0
  %1131 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %1130, i64 0, i32 0, i32 0, i32 0
  %1132 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %1131, align 8
  %1133 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %1134 = load i32, i32* %1133, align 4
  %1135 = zext i32 %1134 to i64
  %1136 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %1132, i64 %1135
  %1137 = icmp eq i32 %1134, 0
  %1138 = ptrtoint i8* %1127 to i64
  br i1 %1137, label %1360, label %1139

1139:                                             ; preds = %1126, %1144
  %1140 = phi %"class.blink::Member.8"* [ %1145, %1144 ], [ %1132, %1126 ]
  %1141 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %1140, i64 0, i32 0, i32 0
  %1142 = load %"class.blink::ImageBitmap"*, %"class.blink::ImageBitmap"** %1141, align 8
  %1143 = icmp eq %"class.blink::ImageBitmap"* %1142, %1128
  br i1 %1143, label %1147, label %1144

1144:                                             ; preds = %1139
  %1145 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %1140, i64 1
  %1146 = icmp ult %"class.blink::Member.8"* %1145, %1136
  br i1 %1146, label %1139, label %1360

1147:                                             ; preds = %1139
  %1148 = ptrtoint %"class.blink::Member.8"* %1140 to i64
  %1149 = ptrtoint %"class.blink::Member.8"* %1132 to i64
  %1150 = sub i64 %1148, %1149
  %1151 = lshr exact i64 %1150, 3
  %1152 = trunc i64 %1151 to i32
  %1153 = icmp eq i32 %1152, -1
  br i1 %1153, label %1360, label %1154

1154:                                             ; preds = %1147
  %1155 = bitcast %"class.WTF::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1155) #10
  %1156 = bitcast %"class.WTF::StringAppend"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1156) #10
  %1157 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %10, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1157) #10
  %1158 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %10, i64 0, i32 0, i64 11
  %1159 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %10, i64 0, i32 2
  %1160 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %10, i64 0, i32 3
  %1161 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %10, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1157, i8 -86, i64 32, i1 false) #10
  store i8* %1158, i8** %1159, align 8
  %1162 = urem i32 %2, 10
  %1163 = trunc i32 %1162 to i8
  %1164 = or i8 %1163, 48
  store i8 %1164, i8* %1158, align 1
  %1165 = icmp ugt i32 %2, 9
  br i1 %1165, label %1166, label %1182

1166:                                             ; preds = %1154
  %1167 = udiv i32 %2, 10
  %1168 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %10, i64 0, i32 0, i64 10
  store i8* %1168, i8** %1159, align 8
  %1169 = urem i32 %1167, 10
  %1170 = trunc i32 %1169 to i8
  %1171 = or i8 %1170, 48
  store i8 %1171, i8* %1168, align 2
  %1172 = icmp ugt i32 %2, 99
  br i1 %1172, label %1173, label %1180

1173:                                             ; preds = %1166
  %1174 = udiv i32 %2, 100
  %1175 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %10, i64 0, i32 0, i64 9
  store i8* %1175, i8** %1159, align 8
  %1176 = urem i32 %1174, 10
  %1177 = trunc i32 %1176 to i8
  %1178 = or i8 %1177, 48
  store i8 %1178, i8* %1175, align 1
  %1179 = icmp ugt i32 %2, 999
  br i1 %1179, label %1184, label %1193

1180:                                             ; preds = %1166
  %1181 = ptrtoint i8* %1168 to i64
  br label %1196

1182:                                             ; preds = %1154
  %1183 = ptrtoint i8* %1158 to i64
  br label %1196

1184:                                             ; preds = %1173, %1184
  %1185 = phi i32 [ %1187, %1184 ], [ %1174, %1173 ]
  %1186 = load i8*, i8** %1159, align 8
  %1187 = udiv i32 %1185, 10
  %1188 = getelementptr inbounds i8, i8* %1186, i64 -1
  store i8* %1188, i8** %1159, align 8
  %1189 = urem i32 %1187, 10
  %1190 = trunc i32 %1189 to i8
  %1191 = or i8 %1190, 48
  store i8 %1191, i8* %1188, align 1
  %1192 = icmp ugt i32 %1185, 99
  br i1 %1192, label %1184, label %1193

1193:                                             ; preds = %1184, %1173
  %1194 = bitcast i8** %1159 to i64*
  %1195 = load i64, i64* %1194, align 8
  br label %1196

1196:                                             ; preds = %1193, %1180, %1182
  %1197 = phi i64 [ %1183, %1182 ], [ %1195, %1193 ], [ %1181, %1180 ]
  %1198 = ptrtoint i8* %1161 to i64
  %1199 = sub i64 %1198, %1197
  %1200 = trunc i64 %1199 to i32
  store i32 %1200, i32* %1160, align 8
  %1201 = inttoptr i64 %1197 to i8*
  %1202 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %1201, i32 %1200) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1157) #10
  %1203 = icmp eq %"class.WTF::StringImpl"* %1202, null
  br i1 %1203, label %1279, label %1204

1204:                                             ; preds = %1196
  %1205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1206 = load atomic i32, i32* %1205 monotonic, align 4
  %1207 = and i32 %1206, 2
  %1208 = icmp eq i32 %1207, 0
  %1209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1202, i64 0, i32 0
  %1210 = load i32, i32* %1209, align 4
  br i1 %1208, label %1211, label %1221

1211:                                             ; preds = %1204
  %1212 = zext i32 %1210 to i33
  %1213 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1212, i33 1) #10
  %1214 = extractvalue { i33, i1 } %1213, 1
  %1215 = extractvalue { i33, i1 } %1213, 0
  %1216 = icmp slt i33 %1215, 0
  %1217 = or i1 %1214, %1216
  br i1 %1217, label %1218, label %1219, !prof !2

1218:                                             ; preds = %1211
  call void @llvm.trap() #10
  unreachable

1219:                                             ; preds = %1211
  %1220 = trunc i33 %1215 to i32
  store i32 %1220, i32* %1209, align 4
  br label %1221

1221:                                             ; preds = %1219, %1204
  %1222 = phi i32 [ %1220, %1219 ], [ %1210, %1204 ]
  %1223 = load atomic i32, i32* %1205 monotonic, align 4
  %1224 = and i32 %1223, 2
  %1225 = icmp eq i32 %1224, 0
  br i1 %1225, label %1226, label %1236

1226:                                             ; preds = %1221
  %1227 = zext i32 %1222 to i33
  %1228 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1227, i33 1) #10
  %1229 = extractvalue { i33, i1 } %1228, 1
  %1230 = extractvalue { i33, i1 } %1228, 0
  %1231 = icmp slt i33 %1230, 0
  %1232 = or i1 %1229, %1231
  br i1 %1232, label %1233, label %1234, !prof !2

1233:                                             ; preds = %1226
  call void @llvm.trap() #10
  unreachable

1234:                                             ; preds = %1226
  %1235 = trunc i33 %1230 to i32
  store i32 %1235, i32* %1209, align 4
  br label %1236

1236:                                             ; preds = %1234, %1221
  %1237 = phi i32 [ %1235, %1234 ], [ %1222, %1221 ]
  %1238 = load atomic i32, i32* %1205 monotonic, align 4
  %1239 = and i32 %1238, 2
  %1240 = icmp eq i32 %1239, 0
  br i1 %1240, label %1241, label %1243

1241:                                             ; preds = %1236
  %1242 = add i32 %1237, -1
  store i32 %1242, i32* %1209, align 4
  br label %1243

1243:                                             ; preds = %1241, %1236
  %1244 = phi i32 [ %1242, %1241 ], [ %1237, %1236 ]
  %1245 = icmp eq i32 %1244, 0
  br i1 %1245, label %1246, label %1247

1246:                                             ; preds = %1243
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1202) #10
  br label %1247

1247:                                             ; preds = %1243, %1246
  %1248 = load atomic i32, i32* %1205 monotonic, align 4, !noalias !15
  %1249 = and i32 %1248, 2
  %1250 = icmp eq i32 %1249, 0
  %1251 = load i32, i32* %1209, align 4
  br i1 %1250, label %1252, label %1262

1252:                                             ; preds = %1247
  %1253 = zext i32 %1251 to i33
  %1254 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1253, i33 1) #10
  %1255 = extractvalue { i33, i1 } %1254, 1
  %1256 = extractvalue { i33, i1 } %1254, 0
  %1257 = icmp slt i33 %1256, 0
  %1258 = or i1 %1255, %1257
  br i1 %1258, label %1259, label %1260, !prof !2

1259:                                             ; preds = %1252
  call void @llvm.trap() #10, !noalias !15
  unreachable

1260:                                             ; preds = %1252
  %1261 = trunc i33 %1256 to i32
  store i32 %1261, i32* %1209, align 4, !noalias !15
  br label %1262

1262:                                             ; preds = %1247, %1260
  %1263 = phi i32 [ %1261, %1260 ], [ %1251, %1247 ]
  %1264 = bitcast %"class.WTF::StringAppend"* %29 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.8 to i64), i64* %1264, align 8, !alias.scope !15
  %1265 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %29, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1202, %"class.WTF::StringImpl"** %1265, align 8, !alias.scope !15
  %1266 = load atomic i32, i32* %1205 monotonic, align 4, !noalias !15
  %1267 = and i32 %1266, 2
  %1268 = icmp eq i32 %1267, 0
  br i1 %1268, label %1269, label %1283

1269:                                             ; preds = %1262
  %1270 = zext i32 %1263 to i33
  %1271 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1270, i33 1) #10
  %1272 = extractvalue { i33, i1 } %1271, 1
  %1273 = extractvalue { i33, i1 } %1271, 0
  %1274 = icmp slt i33 %1273, 0
  %1275 = or i1 %1272, %1274
  br i1 %1275, label %1276, label %1277, !prof !2

1276:                                             ; preds = %1269
  call void @llvm.trap() #10, !noalias !15
  unreachable

1277:                                             ; preds = %1269
  %1278 = trunc i33 %1273 to i32
  store i32 %1278, i32* %1209, align 4, !noalias !15
  br label %1283

1279:                                             ; preds = %1196
  %1280 = bitcast %"class.WTF::StringAppend"* %29 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.8 to i64), i64* %1280, align 8, !alias.scope !15
  %1281 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %29, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1281, align 8, !alias.scope !15
  %1282 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %29, i64 0, i32 1
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i64 0, i64 0), i8** %1282, align 8, !alias.scope !15
  br label %1295

1283:                                             ; preds = %1277, %1262
  %1284 = phi i32 [ %1278, %1277 ], [ %1263, %1262 ]
  %1285 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %29, i64 0, i32 1
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i64 0, i64 0), i8** %1285, align 8, !alias.scope !15
  %1286 = load atomic i32, i32* %1205 monotonic, align 4, !noalias !15
  %1287 = and i32 %1286, 2
  %1288 = icmp eq i32 %1287, 0
  br i1 %1288, label %1289, label %1291

1289:                                             ; preds = %1283
  %1290 = add i32 %1284, -1
  store i32 %1290, i32* %1209, align 4, !noalias !15
  br label %1291

1291:                                             ; preds = %1289, %1283
  %1292 = phi i32 [ %1290, %1289 ], [ %1284, %1283 ]
  %1293 = icmp eq i32 %1292, 0
  br i1 %1293, label %1294, label %1295

1294:                                             ; preds = %1291
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1202) #10, !noalias !15
  br label %1295

1295:                                             ; preds = %1279, %1291, %1294
  %1296 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %29)
  %1297 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1296, %"class.WTF::StringImpl"** %1297, align 8
  %1298 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %1299 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %1298, align 8
  %1300 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %1299, align 8
  call void %1300(%"class.blink::ExceptionState"* %4, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %28) #10
  %1301 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1297, align 8
  %1302 = icmp eq %"class.WTF::StringImpl"* %1301, null
  br i1 %1302, label %1316, label %1303

1303:                                             ; preds = %1295
  %1304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1301, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1305 = load atomic i32, i32* %1304 monotonic, align 4
  %1306 = and i32 %1305, 2
  %1307 = icmp eq i32 %1306, 0
  %1308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1301, i64 0, i32 0
  %1309 = load i32, i32* %1308, align 4
  br i1 %1307, label %1310, label %1312

1310:                                             ; preds = %1303
  %1311 = add i32 %1309, -1
  store i32 %1311, i32* %1308, align 4
  br label %1312

1312:                                             ; preds = %1310, %1303
  %1313 = phi i32 [ %1311, %1310 ], [ %1309, %1303 ]
  %1314 = icmp eq i32 %1313, 0
  br i1 %1314, label %1315, label %1316

1315:                                             ; preds = %1312
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1301) #10
  br label %1316

1316:                                             ; preds = %1295, %1312, %1315
  %1317 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %29, i64 0, i32 0, i32 1, i32 0, i32 0
  %1318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1317, align 8
  %1319 = icmp eq %"class.WTF::StringImpl"* %1318, null
  br i1 %1319, label %1333, label %1320

1320:                                             ; preds = %1316
  %1321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1322 = load atomic i32, i32* %1321 monotonic, align 4
  %1323 = and i32 %1322, 2
  %1324 = icmp eq i32 %1323, 0
  %1325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1318, i64 0, i32 0
  %1326 = load i32, i32* %1325, align 4
  br i1 %1324, label %1327, label %1329

1327:                                             ; preds = %1320
  %1328 = add i32 %1326, -1
  store i32 %1328, i32* %1325, align 4
  br label %1329

1329:                                             ; preds = %1327, %1320
  %1330 = phi i32 [ %1328, %1327 ], [ %1326, %1320 ]
  %1331 = icmp eq i32 %1330, 0
  br i1 %1331, label %1332, label %1333

1332:                                             ; preds = %1329
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1318) #10
  br label %1333

1333:                                             ; preds = %1316, %1329, %1332
  br i1 %1203, label %1359, label %1334

1334:                                             ; preds = %1333
  %1335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1336 = load atomic i32, i32* %1335 monotonic, align 4
  %1337 = and i32 %1336, 2
  %1338 = icmp eq i32 %1337, 0
  %1339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1202, i64 0, i32 0
  %1340 = load i32, i32* %1339, align 4
  br i1 %1338, label %1341, label %1343

1341:                                             ; preds = %1334
  %1342 = add i32 %1340, -1
  store i32 %1342, i32* %1339, align 4
  br label %1343

1343:                                             ; preds = %1341, %1334
  %1344 = phi i32 [ %1342, %1341 ], [ %1340, %1334 ]
  %1345 = icmp eq i32 %1344, 0
  br i1 %1345, label %1346, label %1348

1346:                                             ; preds = %1343
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1202) #10
  %1347 = load i32, i32* %1339, align 4
  br label %1348

1348:                                             ; preds = %1343, %1346
  %1349 = phi i32 [ %1344, %1343 ], [ %1347, %1346 ]
  %1350 = load atomic i32, i32* %1335 monotonic, align 4
  %1351 = and i32 %1350, 2
  %1352 = icmp eq i32 %1351, 0
  br i1 %1352, label %1353, label %1355

1353:                                             ; preds = %1348
  %1354 = add i32 %1349, -1
  store i32 %1354, i32* %1339, align 4
  br label %1355

1355:                                             ; preds = %1353, %1348
  %1356 = phi i32 [ %1354, %1353 ], [ %1349, %1348 ]
  %1357 = icmp eq i32 %1356, 0
  br i1 %1357, label %1358, label %1359

1358:                                             ; preds = %1355
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1202) #10
  br label %1359

1359:                                             ; preds = %1333, %1355, %1358
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1156) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1155) #10
  br label %1374

1360:                                             ; preds = %1144, %1147, %1126
  %1361 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1362 = load i32, i32* %1361, align 8
  %1363 = icmp eq i32 %1134, %1362
  br i1 %1363, label %1373, label %1364, !prof !2

1364:                                             ; preds = %1360
  %1365 = bitcast %"class.blink::Member.8"* %1136 to i64*
  store atomic i64 %1138, i64* %1365 monotonic, align 8
  %1366 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1367 = icmp eq i32 %1366, 0
  br i1 %1367, label %1370, label %1368

1368:                                             ; preds = %1364
  %1369 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1127) #10
  br label %1370

1370:                                             ; preds = %1368, %1364
  %1371 = load i32, i32* %1133, align 4
  %1372 = add i32 %1371, 1
  store i32 %1372, i32* %1133, align 4
  br label %1374

1373:                                             ; preds = %1360
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11ImageBitmapEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.5"* %1130, %"class.blink::ImageBitmap"** nonnull dereferenceable(8) %27) #10
  br label %1374

1374:                                             ; preds = %1373, %1370, %1359
  %1375 = phi i1 [ false, %1359 ], [ true, %1370 ], [ true, %1373 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1107) #10
  br label %2469

1376:                                             ; preds = %1103
  %1377 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %49, align 8
  %1378 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1377, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink17V8OffscreenCanvas18wrapper_type_info_E, %"class.v8::Value"* %1) #10
  br i1 %1378, label %1379, label %1649

1379:                                             ; preds = %1376
  %1380 = bitcast %"class.blink::OffscreenCanvas"** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1380) #10
  store %"class.blink::OffscreenCanvas"* inttoptr (i64 -6148914691236517206 to %"class.blink::OffscreenCanvas"*), %"class.blink::OffscreenCanvas"** %30, align 8
  %1381 = bitcast %"class.v8::Value"* %1 to i64*
  %1382 = load i64, i64* %1381, align 8
  %1383 = add i64 %1382, -1
  %1384 = inttoptr i64 %1383 to i32*
  %1385 = load i32, i32* %1384, align 4
  %1386 = and i64 %1382, -4294967296
  %1387 = zext i32 %1385 to i64
  %1388 = or i64 %1386, %1387
  %1389 = add i64 %1388, 7
  %1390 = inttoptr i64 %1389 to i16*
  %1391 = load i16, i16* %1390, align 2
  switch i16 %1391, label %1396 [
    i16 1057, label %1392
    i16 1056, label %1392
    i16 1040, label %1392
  ]

1392:                                             ; preds = %1379, %1379, %1379
  %1393 = add i64 %1382, 19
  %1394 = inttoptr i64 %1393 to i8**
  %1395 = load i8*, i8** %1394, align 1
  br label %1399

1396:                                             ; preds = %1379
  %1397 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %1398 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1397, i32 1) #10
  br label %1399

1399:                                             ; preds = %1392, %1396
  %1400 = phi i8* [ %1395, %1392 ], [ %1398, %1396 ]
  %1401 = bitcast i8* %1400 to %"class.blink::OffscreenCanvas"*
  %1402 = bitcast %"class.blink::OffscreenCanvas"** %30 to i8**
  store i8* %1400, i8** %1402, align 8
  %1403 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 2, i32 0
  %1404 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %1403, i64 0, i32 0, i32 0, i32 0
  %1405 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %1404, align 8
  %1406 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %1407 = load i32, i32* %1406, align 4
  %1408 = zext i32 %1407 to i64
  %1409 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %1405, i64 %1408
  %1410 = icmp eq i32 %1407, 0
  %1411 = ptrtoint i8* %1400 to i64
  br i1 %1410, label %1633, label %1412

1412:                                             ; preds = %1399, %1417
  %1413 = phi %"class.blink::Member.16"* [ %1418, %1417 ], [ %1405, %1399 ]
  %1414 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %1413, i64 0, i32 0, i32 0
  %1415 = load %"class.blink::OffscreenCanvas"*, %"class.blink::OffscreenCanvas"** %1414, align 8
  %1416 = icmp eq %"class.blink::OffscreenCanvas"* %1415, %1401
  br i1 %1416, label %1420, label %1417

1417:                                             ; preds = %1412
  %1418 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %1413, i64 1
  %1419 = icmp ult %"class.blink::Member.16"* %1418, %1409
  br i1 %1419, label %1412, label %1633

1420:                                             ; preds = %1412
  %1421 = ptrtoint %"class.blink::Member.16"* %1413 to i64
  %1422 = ptrtoint %"class.blink::Member.16"* %1405 to i64
  %1423 = sub i64 %1421, %1422
  %1424 = lshr exact i64 %1423, 3
  %1425 = trunc i64 %1424 to i32
  %1426 = icmp eq i32 %1425, -1
  br i1 %1426, label %1633, label %1427

1427:                                             ; preds = %1420
  %1428 = bitcast %"class.WTF::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1428) #10
  %1429 = bitcast %"class.WTF::StringAppend"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1429) #10
  %1430 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1430) #10
  %1431 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 11
  %1432 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 2
  %1433 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 3
  %1434 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1430, i8 -86, i64 32, i1 false) #10
  store i8* %1431, i8** %1432, align 8
  %1435 = urem i32 %2, 10
  %1436 = trunc i32 %1435 to i8
  %1437 = or i8 %1436, 48
  store i8 %1437, i8* %1431, align 1
  %1438 = icmp ugt i32 %2, 9
  br i1 %1438, label %1439, label %1455

1439:                                             ; preds = %1427
  %1440 = udiv i32 %2, 10
  %1441 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 10
  store i8* %1441, i8** %1432, align 8
  %1442 = urem i32 %1440, 10
  %1443 = trunc i32 %1442 to i8
  %1444 = or i8 %1443, 48
  store i8 %1444, i8* %1441, align 2
  %1445 = icmp ugt i32 %2, 99
  br i1 %1445, label %1446, label %1453

1446:                                             ; preds = %1439
  %1447 = udiv i32 %2, 100
  %1448 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 9
  store i8* %1448, i8** %1432, align 8
  %1449 = urem i32 %1447, 10
  %1450 = trunc i32 %1449 to i8
  %1451 = or i8 %1450, 48
  store i8 %1451, i8* %1448, align 1
  %1452 = icmp ugt i32 %2, 999
  br i1 %1452, label %1457, label %1466

1453:                                             ; preds = %1439
  %1454 = ptrtoint i8* %1441 to i64
  br label %1469

1455:                                             ; preds = %1427
  %1456 = ptrtoint i8* %1431 to i64
  br label %1469

1457:                                             ; preds = %1446, %1457
  %1458 = phi i32 [ %1460, %1457 ], [ %1447, %1446 ]
  %1459 = load i8*, i8** %1432, align 8
  %1460 = udiv i32 %1458, 10
  %1461 = getelementptr inbounds i8, i8* %1459, i64 -1
  store i8* %1461, i8** %1432, align 8
  %1462 = urem i32 %1460, 10
  %1463 = trunc i32 %1462 to i8
  %1464 = or i8 %1463, 48
  store i8 %1464, i8* %1461, align 1
  %1465 = icmp ugt i32 %1458, 99
  br i1 %1465, label %1457, label %1466

1466:                                             ; preds = %1457, %1446
  %1467 = bitcast i8** %1432 to i64*
  %1468 = load i64, i64* %1467, align 8
  br label %1469

1469:                                             ; preds = %1466, %1453, %1455
  %1470 = phi i64 [ %1456, %1455 ], [ %1468, %1466 ], [ %1454, %1453 ]
  %1471 = ptrtoint i8* %1434 to i64
  %1472 = sub i64 %1471, %1470
  %1473 = trunc i64 %1472 to i32
  store i32 %1473, i32* %1433, align 8
  %1474 = inttoptr i64 %1470 to i8*
  %1475 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %1474, i32 %1473) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1430) #10
  %1476 = icmp eq %"class.WTF::StringImpl"* %1475, null
  br i1 %1476, label %1552, label %1477

1477:                                             ; preds = %1469
  %1478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1475, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1479 = load atomic i32, i32* %1478 monotonic, align 4
  %1480 = and i32 %1479, 2
  %1481 = icmp eq i32 %1480, 0
  %1482 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1475, i64 0, i32 0
  %1483 = load i32, i32* %1482, align 4
  br i1 %1481, label %1484, label %1494

1484:                                             ; preds = %1477
  %1485 = zext i32 %1483 to i33
  %1486 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1485, i33 1) #10
  %1487 = extractvalue { i33, i1 } %1486, 1
  %1488 = extractvalue { i33, i1 } %1486, 0
  %1489 = icmp slt i33 %1488, 0
  %1490 = or i1 %1487, %1489
  br i1 %1490, label %1491, label %1492, !prof !2

1491:                                             ; preds = %1484
  call void @llvm.trap() #10
  unreachable

1492:                                             ; preds = %1484
  %1493 = trunc i33 %1488 to i32
  store i32 %1493, i32* %1482, align 4
  br label %1494

1494:                                             ; preds = %1492, %1477
  %1495 = phi i32 [ %1493, %1492 ], [ %1483, %1477 ]
  %1496 = load atomic i32, i32* %1478 monotonic, align 4
  %1497 = and i32 %1496, 2
  %1498 = icmp eq i32 %1497, 0
  br i1 %1498, label %1499, label %1509

1499:                                             ; preds = %1494
  %1500 = zext i32 %1495 to i33
  %1501 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1500, i33 1) #10
  %1502 = extractvalue { i33, i1 } %1501, 1
  %1503 = extractvalue { i33, i1 } %1501, 0
  %1504 = icmp slt i33 %1503, 0
  %1505 = or i1 %1502, %1504
  br i1 %1505, label %1506, label %1507, !prof !2

1506:                                             ; preds = %1499
  call void @llvm.trap() #10
  unreachable

1507:                                             ; preds = %1499
  %1508 = trunc i33 %1503 to i32
  store i32 %1508, i32* %1482, align 4
  br label %1509

1509:                                             ; preds = %1507, %1494
  %1510 = phi i32 [ %1508, %1507 ], [ %1495, %1494 ]
  %1511 = load atomic i32, i32* %1478 monotonic, align 4
  %1512 = and i32 %1511, 2
  %1513 = icmp eq i32 %1512, 0
  br i1 %1513, label %1514, label %1516

1514:                                             ; preds = %1509
  %1515 = add i32 %1510, -1
  store i32 %1515, i32* %1482, align 4
  br label %1516

1516:                                             ; preds = %1514, %1509
  %1517 = phi i32 [ %1515, %1514 ], [ %1510, %1509 ]
  %1518 = icmp eq i32 %1517, 0
  br i1 %1518, label %1519, label %1520

1519:                                             ; preds = %1516
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1475) #10
  br label %1520

1520:                                             ; preds = %1516, %1519
  %1521 = load atomic i32, i32* %1478 monotonic, align 4, !noalias !18
  %1522 = and i32 %1521, 2
  %1523 = icmp eq i32 %1522, 0
  %1524 = load i32, i32* %1482, align 4
  br i1 %1523, label %1525, label %1535

1525:                                             ; preds = %1520
  %1526 = zext i32 %1524 to i33
  %1527 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1526, i33 1) #10
  %1528 = extractvalue { i33, i1 } %1527, 1
  %1529 = extractvalue { i33, i1 } %1527, 0
  %1530 = icmp slt i33 %1529, 0
  %1531 = or i1 %1528, %1530
  br i1 %1531, label %1532, label %1533, !prof !2

1532:                                             ; preds = %1525
  call void @llvm.trap() #10, !noalias !18
  unreachable

1533:                                             ; preds = %1525
  %1534 = trunc i33 %1529 to i32
  store i32 %1534, i32* %1482, align 4, !noalias !18
  br label %1535

1535:                                             ; preds = %1520, %1533
  %1536 = phi i32 [ %1534, %1533 ], [ %1524, %1520 ]
  %1537 = bitcast %"class.WTF::StringAppend"* %32 to i64*
  store i64 ptrtoint ([26 x i8]* @.str.10 to i64), i64* %1537, align 8, !alias.scope !18
  %1538 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %32, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1475, %"class.WTF::StringImpl"** %1538, align 8, !alias.scope !18
  %1539 = load atomic i32, i32* %1478 monotonic, align 4, !noalias !18
  %1540 = and i32 %1539, 2
  %1541 = icmp eq i32 %1540, 0
  br i1 %1541, label %1542, label %1556

1542:                                             ; preds = %1535
  %1543 = zext i32 %1536 to i33
  %1544 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1543, i33 1) #10
  %1545 = extractvalue { i33, i1 } %1544, 1
  %1546 = extractvalue { i33, i1 } %1544, 0
  %1547 = icmp slt i33 %1546, 0
  %1548 = or i1 %1545, %1547
  br i1 %1548, label %1549, label %1550, !prof !2

1549:                                             ; preds = %1542
  call void @llvm.trap() #10, !noalias !18
  unreachable

1550:                                             ; preds = %1542
  %1551 = trunc i33 %1546 to i32
  store i32 %1551, i32* %1482, align 4, !noalias !18
  br label %1556

1552:                                             ; preds = %1469
  %1553 = bitcast %"class.WTF::StringAppend"* %32 to i64*
  store i64 ptrtoint ([26 x i8]* @.str.10 to i64), i64* %1553, align 8, !alias.scope !18
  %1554 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %32, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1554, align 8, !alias.scope !18
  %1555 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %32, i64 0, i32 1
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11, i64 0, i64 0), i8** %1555, align 8, !alias.scope !18
  br label %1568

1556:                                             ; preds = %1550, %1535
  %1557 = phi i32 [ %1551, %1550 ], [ %1536, %1535 ]
  %1558 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %32, i64 0, i32 1
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11, i64 0, i64 0), i8** %1558, align 8, !alias.scope !18
  %1559 = load atomic i32, i32* %1478 monotonic, align 4, !noalias !18
  %1560 = and i32 %1559, 2
  %1561 = icmp eq i32 %1560, 0
  br i1 %1561, label %1562, label %1564

1562:                                             ; preds = %1556
  %1563 = add i32 %1557, -1
  store i32 %1563, i32* %1482, align 4, !noalias !18
  br label %1564

1564:                                             ; preds = %1562, %1556
  %1565 = phi i32 [ %1563, %1562 ], [ %1557, %1556 ]
  %1566 = icmp eq i32 %1565, 0
  br i1 %1566, label %1567, label %1568

1567:                                             ; preds = %1564
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1475) #10, !noalias !18
  br label %1568

1568:                                             ; preds = %1552, %1564, %1567
  %1569 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %32)
  %1570 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1569, %"class.WTF::StringImpl"** %1570, align 8
  %1571 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %1572 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %1571, align 8
  %1573 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %1572, align 8
  call void %1573(%"class.blink::ExceptionState"* %4, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %31) #10
  %1574 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1570, align 8
  %1575 = icmp eq %"class.WTF::StringImpl"* %1574, null
  br i1 %1575, label %1589, label %1576

1576:                                             ; preds = %1568
  %1577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1574, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1578 = load atomic i32, i32* %1577 monotonic, align 4
  %1579 = and i32 %1578, 2
  %1580 = icmp eq i32 %1579, 0
  %1581 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1574, i64 0, i32 0
  %1582 = load i32, i32* %1581, align 4
  br i1 %1580, label %1583, label %1585

1583:                                             ; preds = %1576
  %1584 = add i32 %1582, -1
  store i32 %1584, i32* %1581, align 4
  br label %1585

1585:                                             ; preds = %1583, %1576
  %1586 = phi i32 [ %1584, %1583 ], [ %1582, %1576 ]
  %1587 = icmp eq i32 %1586, 0
  br i1 %1587, label %1588, label %1589

1588:                                             ; preds = %1585
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1574) #10
  br label %1589

1589:                                             ; preds = %1568, %1585, %1588
  %1590 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %32, i64 0, i32 0, i32 1, i32 0, i32 0
  %1591 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1590, align 8
  %1592 = icmp eq %"class.WTF::StringImpl"* %1591, null
  br i1 %1592, label %1606, label %1593

1593:                                             ; preds = %1589
  %1594 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1591, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1595 = load atomic i32, i32* %1594 monotonic, align 4
  %1596 = and i32 %1595, 2
  %1597 = icmp eq i32 %1596, 0
  %1598 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1591, i64 0, i32 0
  %1599 = load i32, i32* %1598, align 4
  br i1 %1597, label %1600, label %1602

1600:                                             ; preds = %1593
  %1601 = add i32 %1599, -1
  store i32 %1601, i32* %1598, align 4
  br label %1602

1602:                                             ; preds = %1600, %1593
  %1603 = phi i32 [ %1601, %1600 ], [ %1599, %1593 ]
  %1604 = icmp eq i32 %1603, 0
  br i1 %1604, label %1605, label %1606

1605:                                             ; preds = %1602
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1591) #10
  br label %1606

1606:                                             ; preds = %1589, %1602, %1605
  br i1 %1476, label %1632, label %1607

1607:                                             ; preds = %1606
  %1608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1475, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1609 = load atomic i32, i32* %1608 monotonic, align 4
  %1610 = and i32 %1609, 2
  %1611 = icmp eq i32 %1610, 0
  %1612 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1475, i64 0, i32 0
  %1613 = load i32, i32* %1612, align 4
  br i1 %1611, label %1614, label %1616

1614:                                             ; preds = %1607
  %1615 = add i32 %1613, -1
  store i32 %1615, i32* %1612, align 4
  br label %1616

1616:                                             ; preds = %1614, %1607
  %1617 = phi i32 [ %1615, %1614 ], [ %1613, %1607 ]
  %1618 = icmp eq i32 %1617, 0
  br i1 %1618, label %1619, label %1621

1619:                                             ; preds = %1616
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1475) #10
  %1620 = load i32, i32* %1612, align 4
  br label %1621

1621:                                             ; preds = %1616, %1619
  %1622 = phi i32 [ %1617, %1616 ], [ %1620, %1619 ]
  %1623 = load atomic i32, i32* %1608 monotonic, align 4
  %1624 = and i32 %1623, 2
  %1625 = icmp eq i32 %1624, 0
  br i1 %1625, label %1626, label %1628

1626:                                             ; preds = %1621
  %1627 = add i32 %1622, -1
  store i32 %1627, i32* %1612, align 4
  br label %1628

1628:                                             ; preds = %1626, %1621
  %1629 = phi i32 [ %1627, %1626 ], [ %1622, %1621 ]
  %1630 = icmp eq i32 %1629, 0
  br i1 %1630, label %1631, label %1632

1631:                                             ; preds = %1628
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1475) #10
  br label %1632

1632:                                             ; preds = %1606, %1628, %1631
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1429) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1428) #10
  br label %1647

1633:                                             ; preds = %1417, %1420, %1399
  %1634 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %1635 = load i32, i32* %1634, align 8
  %1636 = icmp eq i32 %1407, %1635
  br i1 %1636, label %1646, label %1637, !prof !2

1637:                                             ; preds = %1633
  %1638 = bitcast %"class.blink::Member.16"* %1409 to i64*
  store atomic i64 %1411, i64* %1638 monotonic, align 8
  %1639 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1640 = icmp eq i32 %1639, 0
  br i1 %1640, label %1643, label %1641

1641:                                             ; preds = %1637
  %1642 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1400) #10
  br label %1643

1643:                                             ; preds = %1641, %1637
  %1644 = load i32, i32* %1406, align 4
  %1645 = add i32 %1644, 1
  store i32 %1645, i32* %1406, align 4
  br label %1647

1646:                                             ; preds = %1633
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.13"* %1403, %"class.blink::OffscreenCanvas"** nonnull dereferenceable(8) %30) #10
  br label %1647

1647:                                             ; preds = %1646, %1643, %1632
  %1648 = phi i1 [ false, %1632 ], [ true, %1643 ], [ true, %1646 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1380) #10
  br label %2469

1649:                                             ; preds = %1376
  br i1 %46, label %1650, label %2469

1650:                                             ; preds = %1649
  %1651 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %49, align 8
  %1652 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1651, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink16V8ReadableStream18wrapper_type_info_E, %"class.v8::Value"* %1) #10
  br i1 %1652, label %1653, label %1923

1653:                                             ; preds = %1650
  %1654 = bitcast %"class.blink::ReadableStream"** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1654) #10
  store %"class.blink::ReadableStream"* inttoptr (i64 -6148914691236517206 to %"class.blink::ReadableStream"*), %"class.blink::ReadableStream"** %33, align 8
  %1655 = bitcast %"class.v8::Value"* %1 to i64*
  %1656 = load i64, i64* %1655, align 8
  %1657 = add i64 %1656, -1
  %1658 = inttoptr i64 %1657 to i32*
  %1659 = load i32, i32* %1658, align 4
  %1660 = and i64 %1656, -4294967296
  %1661 = zext i32 %1659 to i64
  %1662 = or i64 %1660, %1661
  %1663 = add i64 %1662, 7
  %1664 = inttoptr i64 %1663 to i16*
  %1665 = load i16, i16* %1664, align 2
  switch i16 %1665, label %1670 [
    i16 1057, label %1666
    i16 1056, label %1666
    i16 1040, label %1666
  ]

1666:                                             ; preds = %1653, %1653, %1653
  %1667 = add i64 %1656, 19
  %1668 = inttoptr i64 %1667 to i8**
  %1669 = load i8*, i8** %1668, align 1
  br label %1673

1670:                                             ; preds = %1653
  %1671 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %1672 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1671, i32 1) #10
  br label %1673

1673:                                             ; preds = %1666, %1670
  %1674 = phi i8* [ %1669, %1666 ], [ %1672, %1670 ]
  %1675 = bitcast i8* %1674 to %"class.blink::ReadableStream"*
  %1676 = bitcast %"class.blink::ReadableStream"** %33 to i8**
  store i8* %1674, i8** %1676, align 8
  %1677 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 5, i32 0
  %1678 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %1677, i64 0, i32 0, i32 0, i32 0
  %1679 = load %"class.blink::Member.361"*, %"class.blink::Member.361"** %1678, align 8
  %1680 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %1681 = load i32, i32* %1680, align 4
  %1682 = zext i32 %1681 to i64
  %1683 = getelementptr inbounds %"class.blink::Member.361", %"class.blink::Member.361"* %1679, i64 %1682
  %1684 = icmp eq i32 %1681, 0
  %1685 = ptrtoint i8* %1674 to i64
  br i1 %1684, label %1907, label %1686

1686:                                             ; preds = %1673, %1691
  %1687 = phi %"class.blink::Member.361"* [ %1692, %1691 ], [ %1679, %1673 ]
  %1688 = getelementptr inbounds %"class.blink::Member.361", %"class.blink::Member.361"* %1687, i64 0, i32 0, i32 0
  %1689 = load %"class.blink::ReadableStream"*, %"class.blink::ReadableStream"** %1688, align 8
  %1690 = icmp eq %"class.blink::ReadableStream"* %1689, %1675
  br i1 %1690, label %1694, label %1691

1691:                                             ; preds = %1686
  %1692 = getelementptr inbounds %"class.blink::Member.361", %"class.blink::Member.361"* %1687, i64 1
  %1693 = icmp ult %"class.blink::Member.361"* %1692, %1683
  br i1 %1693, label %1686, label %1907

1694:                                             ; preds = %1686
  %1695 = ptrtoint %"class.blink::Member.361"* %1687 to i64
  %1696 = ptrtoint %"class.blink::Member.361"* %1679 to i64
  %1697 = sub i64 %1695, %1696
  %1698 = lshr exact i64 %1697, 3
  %1699 = trunc i64 %1698 to i32
  %1700 = icmp eq i32 %1699, -1
  br i1 %1700, label %1907, label %1701

1701:                                             ; preds = %1694
  %1702 = bitcast %"class.WTF::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1702) #10
  %1703 = bitcast %"class.WTF::StringAppend"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1703) #10
  %1704 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1704) #10
  %1705 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 11
  %1706 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 2
  %1707 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 3
  %1708 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1704, i8 -86, i64 32, i1 false) #10
  store i8* %1705, i8** %1706, align 8
  %1709 = urem i32 %2, 10
  %1710 = trunc i32 %1709 to i8
  %1711 = or i8 %1710, 48
  store i8 %1711, i8* %1705, align 1
  %1712 = icmp ugt i32 %2, 9
  br i1 %1712, label %1713, label %1729

1713:                                             ; preds = %1701
  %1714 = udiv i32 %2, 10
  %1715 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 10
  store i8* %1715, i8** %1706, align 8
  %1716 = urem i32 %1714, 10
  %1717 = trunc i32 %1716 to i8
  %1718 = or i8 %1717, 48
  store i8 %1718, i8* %1715, align 2
  %1719 = icmp ugt i32 %2, 99
  br i1 %1719, label %1720, label %1727

1720:                                             ; preds = %1713
  %1721 = udiv i32 %2, 100
  %1722 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 9
  store i8* %1722, i8** %1706, align 8
  %1723 = urem i32 %1721, 10
  %1724 = trunc i32 %1723 to i8
  %1725 = or i8 %1724, 48
  store i8 %1725, i8* %1722, align 1
  %1726 = icmp ugt i32 %2, 999
  br i1 %1726, label %1731, label %1740

1727:                                             ; preds = %1713
  %1728 = ptrtoint i8* %1715 to i64
  br label %1743

1729:                                             ; preds = %1701
  %1730 = ptrtoint i8* %1705 to i64
  br label %1743

1731:                                             ; preds = %1720, %1731
  %1732 = phi i32 [ %1734, %1731 ], [ %1721, %1720 ]
  %1733 = load i8*, i8** %1706, align 8
  %1734 = udiv i32 %1732, 10
  %1735 = getelementptr inbounds i8, i8* %1733, i64 -1
  store i8* %1735, i8** %1706, align 8
  %1736 = urem i32 %1734, 10
  %1737 = trunc i32 %1736 to i8
  %1738 = or i8 %1737, 48
  store i8 %1738, i8* %1735, align 1
  %1739 = icmp ugt i32 %1732, 99
  br i1 %1739, label %1731, label %1740

1740:                                             ; preds = %1731, %1720
  %1741 = bitcast i8** %1706 to i64*
  %1742 = load i64, i64* %1741, align 8
  br label %1743

1743:                                             ; preds = %1740, %1727, %1729
  %1744 = phi i64 [ %1730, %1729 ], [ %1742, %1740 ], [ %1728, %1727 ]
  %1745 = ptrtoint i8* %1708 to i64
  %1746 = sub i64 %1745, %1744
  %1747 = trunc i64 %1746 to i32
  store i32 %1747, i32* %1707, align 8
  %1748 = inttoptr i64 %1744 to i8*
  %1749 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %1748, i32 %1747) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1704) #10
  %1750 = icmp eq %"class.WTF::StringImpl"* %1749, null
  br i1 %1750, label %1826, label %1751

1751:                                             ; preds = %1743
  %1752 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1749, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1753 = load atomic i32, i32* %1752 monotonic, align 4
  %1754 = and i32 %1753, 2
  %1755 = icmp eq i32 %1754, 0
  %1756 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1749, i64 0, i32 0
  %1757 = load i32, i32* %1756, align 4
  br i1 %1755, label %1758, label %1768

1758:                                             ; preds = %1751
  %1759 = zext i32 %1757 to i33
  %1760 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1759, i33 1) #10
  %1761 = extractvalue { i33, i1 } %1760, 1
  %1762 = extractvalue { i33, i1 } %1760, 0
  %1763 = icmp slt i33 %1762, 0
  %1764 = or i1 %1761, %1763
  br i1 %1764, label %1765, label %1766, !prof !2

1765:                                             ; preds = %1758
  call void @llvm.trap() #10
  unreachable

1766:                                             ; preds = %1758
  %1767 = trunc i33 %1762 to i32
  store i32 %1767, i32* %1756, align 4
  br label %1768

1768:                                             ; preds = %1766, %1751
  %1769 = phi i32 [ %1767, %1766 ], [ %1757, %1751 ]
  %1770 = load atomic i32, i32* %1752 monotonic, align 4
  %1771 = and i32 %1770, 2
  %1772 = icmp eq i32 %1771, 0
  br i1 %1772, label %1773, label %1783

1773:                                             ; preds = %1768
  %1774 = zext i32 %1769 to i33
  %1775 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1774, i33 1) #10
  %1776 = extractvalue { i33, i1 } %1775, 1
  %1777 = extractvalue { i33, i1 } %1775, 0
  %1778 = icmp slt i33 %1777, 0
  %1779 = or i1 %1776, %1778
  br i1 %1779, label %1780, label %1781, !prof !2

1780:                                             ; preds = %1773
  call void @llvm.trap() #10
  unreachable

1781:                                             ; preds = %1773
  %1782 = trunc i33 %1777 to i32
  store i32 %1782, i32* %1756, align 4
  br label %1783

1783:                                             ; preds = %1781, %1768
  %1784 = phi i32 [ %1782, %1781 ], [ %1769, %1768 ]
  %1785 = load atomic i32, i32* %1752 monotonic, align 4
  %1786 = and i32 %1785, 2
  %1787 = icmp eq i32 %1786, 0
  br i1 %1787, label %1788, label %1790

1788:                                             ; preds = %1783
  %1789 = add i32 %1784, -1
  store i32 %1789, i32* %1756, align 4
  br label %1790

1790:                                             ; preds = %1788, %1783
  %1791 = phi i32 [ %1789, %1788 ], [ %1784, %1783 ]
  %1792 = icmp eq i32 %1791, 0
  br i1 %1792, label %1793, label %1794

1793:                                             ; preds = %1790
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1749) #10
  br label %1794

1794:                                             ; preds = %1790, %1793
  %1795 = load atomic i32, i32* %1752 monotonic, align 4, !noalias !21
  %1796 = and i32 %1795, 2
  %1797 = icmp eq i32 %1796, 0
  %1798 = load i32, i32* %1756, align 4
  br i1 %1797, label %1799, label %1809

1799:                                             ; preds = %1794
  %1800 = zext i32 %1798 to i33
  %1801 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1800, i33 1) #10
  %1802 = extractvalue { i33, i1 } %1801, 1
  %1803 = extractvalue { i33, i1 } %1801, 0
  %1804 = icmp slt i33 %1803, 0
  %1805 = or i1 %1802, %1804
  br i1 %1805, label %1806, label %1807, !prof !2

1806:                                             ; preds = %1799
  call void @llvm.trap() #10, !noalias !21
  unreachable

1807:                                             ; preds = %1799
  %1808 = trunc i33 %1803 to i32
  store i32 %1808, i32* %1756, align 4, !noalias !21
  br label %1809

1809:                                             ; preds = %1794, %1807
  %1810 = phi i32 [ %1808, %1807 ], [ %1798, %1794 ]
  %1811 = bitcast %"class.WTF::StringAppend"* %35 to i64*
  store i64 ptrtoint ([25 x i8]* @.str.12 to i64), i64* %1811, align 8, !alias.scope !21
  %1812 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %35, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1749, %"class.WTF::StringImpl"** %1812, align 8, !alias.scope !21
  %1813 = load atomic i32, i32* %1752 monotonic, align 4, !noalias !21
  %1814 = and i32 %1813, 2
  %1815 = icmp eq i32 %1814, 0
  br i1 %1815, label %1816, label %1830

1816:                                             ; preds = %1809
  %1817 = zext i32 %1810 to i33
  %1818 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1817, i33 1) #10
  %1819 = extractvalue { i33, i1 } %1818, 1
  %1820 = extractvalue { i33, i1 } %1818, 0
  %1821 = icmp slt i33 %1820, 0
  %1822 = or i1 %1819, %1821
  br i1 %1822, label %1823, label %1824, !prof !2

1823:                                             ; preds = %1816
  call void @llvm.trap() #10, !noalias !21
  unreachable

1824:                                             ; preds = %1816
  %1825 = trunc i33 %1820 to i32
  store i32 %1825, i32* %1756, align 4, !noalias !21
  br label %1830

1826:                                             ; preds = %1743
  %1827 = bitcast %"class.WTF::StringAppend"* %35 to i64*
  store i64 ptrtoint ([25 x i8]* @.str.12 to i64), i64* %1827, align 8, !alias.scope !21
  %1828 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %35, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1828, align 8, !alias.scope !21
  %1829 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %35, i64 0, i32 1
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13, i64 0, i64 0), i8** %1829, align 8, !alias.scope !21
  br label %1842

1830:                                             ; preds = %1824, %1809
  %1831 = phi i32 [ %1825, %1824 ], [ %1810, %1809 ]
  %1832 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %35, i64 0, i32 1
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13, i64 0, i64 0), i8** %1832, align 8, !alias.scope !21
  %1833 = load atomic i32, i32* %1752 monotonic, align 4, !noalias !21
  %1834 = and i32 %1833, 2
  %1835 = icmp eq i32 %1834, 0
  br i1 %1835, label %1836, label %1838

1836:                                             ; preds = %1830
  %1837 = add i32 %1831, -1
  store i32 %1837, i32* %1756, align 4, !noalias !21
  br label %1838

1838:                                             ; preds = %1836, %1830
  %1839 = phi i32 [ %1837, %1836 ], [ %1831, %1830 ]
  %1840 = icmp eq i32 %1839, 0
  br i1 %1840, label %1841, label %1842

1841:                                             ; preds = %1838
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1749) #10, !noalias !21
  br label %1842

1842:                                             ; preds = %1826, %1838, %1841
  %1843 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %35)
  %1844 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %34, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1843, %"class.WTF::StringImpl"** %1844, align 8
  %1845 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %1846 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %1845, align 8
  %1847 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %1846, align 8
  call void %1847(%"class.blink::ExceptionState"* %4, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %34) #10
  %1848 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1844, align 8
  %1849 = icmp eq %"class.WTF::StringImpl"* %1848, null
  br i1 %1849, label %1863, label %1850

1850:                                             ; preds = %1842
  %1851 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1848, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1852 = load atomic i32, i32* %1851 monotonic, align 4
  %1853 = and i32 %1852, 2
  %1854 = icmp eq i32 %1853, 0
  %1855 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1848, i64 0, i32 0
  %1856 = load i32, i32* %1855, align 4
  br i1 %1854, label %1857, label %1859

1857:                                             ; preds = %1850
  %1858 = add i32 %1856, -1
  store i32 %1858, i32* %1855, align 4
  br label %1859

1859:                                             ; preds = %1857, %1850
  %1860 = phi i32 [ %1858, %1857 ], [ %1856, %1850 ]
  %1861 = icmp eq i32 %1860, 0
  br i1 %1861, label %1862, label %1863

1862:                                             ; preds = %1859
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1848) #10
  br label %1863

1863:                                             ; preds = %1842, %1859, %1862
  %1864 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %35, i64 0, i32 0, i32 1, i32 0, i32 0
  %1865 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1864, align 8
  %1866 = icmp eq %"class.WTF::StringImpl"* %1865, null
  br i1 %1866, label %1880, label %1867

1867:                                             ; preds = %1863
  %1868 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1865, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1869 = load atomic i32, i32* %1868 monotonic, align 4
  %1870 = and i32 %1869, 2
  %1871 = icmp eq i32 %1870, 0
  %1872 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1865, i64 0, i32 0
  %1873 = load i32, i32* %1872, align 4
  br i1 %1871, label %1874, label %1876

1874:                                             ; preds = %1867
  %1875 = add i32 %1873, -1
  store i32 %1875, i32* %1872, align 4
  br label %1876

1876:                                             ; preds = %1874, %1867
  %1877 = phi i32 [ %1875, %1874 ], [ %1873, %1867 ]
  %1878 = icmp eq i32 %1877, 0
  br i1 %1878, label %1879, label %1880

1879:                                             ; preds = %1876
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1865) #10
  br label %1880

1880:                                             ; preds = %1863, %1876, %1879
  br i1 %1750, label %1906, label %1881

1881:                                             ; preds = %1880
  %1882 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1749, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1883 = load atomic i32, i32* %1882 monotonic, align 4
  %1884 = and i32 %1883, 2
  %1885 = icmp eq i32 %1884, 0
  %1886 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1749, i64 0, i32 0
  %1887 = load i32, i32* %1886, align 4
  br i1 %1885, label %1888, label %1890

1888:                                             ; preds = %1881
  %1889 = add i32 %1887, -1
  store i32 %1889, i32* %1886, align 4
  br label %1890

1890:                                             ; preds = %1888, %1881
  %1891 = phi i32 [ %1889, %1888 ], [ %1887, %1881 ]
  %1892 = icmp eq i32 %1891, 0
  br i1 %1892, label %1893, label %1895

1893:                                             ; preds = %1890
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1749) #10
  %1894 = load i32, i32* %1886, align 4
  br label %1895

1895:                                             ; preds = %1890, %1893
  %1896 = phi i32 [ %1891, %1890 ], [ %1894, %1893 ]
  %1897 = load atomic i32, i32* %1882 monotonic, align 4
  %1898 = and i32 %1897, 2
  %1899 = icmp eq i32 %1898, 0
  br i1 %1899, label %1900, label %1902

1900:                                             ; preds = %1895
  %1901 = add i32 %1896, -1
  store i32 %1901, i32* %1886, align 4
  br label %1902

1902:                                             ; preds = %1900, %1895
  %1903 = phi i32 [ %1901, %1900 ], [ %1896, %1895 ]
  %1904 = icmp eq i32 %1903, 0
  br i1 %1904, label %1905, label %1906

1905:                                             ; preds = %1902
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1749) #10
  br label %1906

1906:                                             ; preds = %1880, %1902, %1905
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1703) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1702) #10
  br label %1921

1907:                                             ; preds = %1691, %1694, %1673
  %1908 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %1909 = load i32, i32* %1908, align 8
  %1910 = icmp eq i32 %1681, %1909
  br i1 %1910, label %1920, label %1911, !prof !2

1911:                                             ; preds = %1907
  %1912 = bitcast %"class.blink::Member.361"* %1683 to i64*
  store atomic i64 %1685, i64* %1912 monotonic, align 8
  %1913 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1914 = icmp eq i32 %1913, 0
  br i1 %1914, label %1917, label %1915

1915:                                             ; preds = %1911
  %1916 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1674) #10
  br label %1917

1917:                                             ; preds = %1915, %1911
  %1918 = load i32, i32* %1680, align 4
  %1919 = add i32 %1918, 1
  store i32 %1919, i32* %1680, align 4
  br label %1921

1920:                                             ; preds = %1907
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14ReadableStreamEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.358"* %1677, %"class.blink::ReadableStream"** nonnull dereferenceable(8) %33) #10
  br label %1921

1921:                                             ; preds = %1920, %1917, %1906
  %1922 = phi i1 [ false, %1906 ], [ true, %1917 ], [ true, %1920 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1654) #10
  br label %2469

1923:                                             ; preds = %1650
  %1924 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %49, align 8
  %1925 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1924, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink16V8WritableStream18wrapper_type_info_E, %"class.v8::Value"* %1) #10
  br i1 %1925, label %1926, label %2196

1926:                                             ; preds = %1923
  %1927 = bitcast %"class.blink::WritableStream"** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1927) #10
  store %"class.blink::WritableStream"* inttoptr (i64 -6148914691236517206 to %"class.blink::WritableStream"*), %"class.blink::WritableStream"** %36, align 8
  %1928 = bitcast %"class.v8::Value"* %1 to i64*
  %1929 = load i64, i64* %1928, align 8
  %1930 = add i64 %1929, -1
  %1931 = inttoptr i64 %1930 to i32*
  %1932 = load i32, i32* %1931, align 4
  %1933 = and i64 %1929, -4294967296
  %1934 = zext i32 %1932 to i64
  %1935 = or i64 %1933, %1934
  %1936 = add i64 %1935, 7
  %1937 = inttoptr i64 %1936 to i16*
  %1938 = load i16, i16* %1937, align 2
  switch i16 %1938, label %1943 [
    i16 1057, label %1939
    i16 1056, label %1939
    i16 1040, label %1939
  ]

1939:                                             ; preds = %1926, %1926, %1926
  %1940 = add i64 %1929, 19
  %1941 = inttoptr i64 %1940 to i8**
  %1942 = load i8*, i8** %1941, align 1
  br label %1946

1943:                                             ; preds = %1926
  %1944 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %1945 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1944, i32 1) #10
  br label %1946

1946:                                             ; preds = %1939, %1943
  %1947 = phi i8* [ %1942, %1939 ], [ %1945, %1943 ]
  %1948 = bitcast i8* %1947 to %"class.blink::WritableStream"*
  %1949 = bitcast %"class.blink::WritableStream"** %36 to i8**
  store i8* %1947, i8** %1949, align 8
  %1950 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 6, i32 0
  %1951 = getelementptr inbounds %"class.WTF::Vector.381", %"class.WTF::Vector.381"* %1950, i64 0, i32 0, i32 0, i32 0
  %1952 = load %"class.blink::Member.384"*, %"class.blink::Member.384"** %1951, align 8
  %1953 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %1954 = load i32, i32* %1953, align 4
  %1955 = zext i32 %1954 to i64
  %1956 = getelementptr inbounds %"class.blink::Member.384", %"class.blink::Member.384"* %1952, i64 %1955
  %1957 = icmp eq i32 %1954, 0
  %1958 = ptrtoint i8* %1947 to i64
  br i1 %1957, label %2180, label %1959

1959:                                             ; preds = %1946, %1964
  %1960 = phi %"class.blink::Member.384"* [ %1965, %1964 ], [ %1952, %1946 ]
  %1961 = getelementptr inbounds %"class.blink::Member.384", %"class.blink::Member.384"* %1960, i64 0, i32 0, i32 0
  %1962 = load %"class.blink::WritableStream"*, %"class.blink::WritableStream"** %1961, align 8
  %1963 = icmp eq %"class.blink::WritableStream"* %1962, %1948
  br i1 %1963, label %1967, label %1964

1964:                                             ; preds = %1959
  %1965 = getelementptr inbounds %"class.blink::Member.384", %"class.blink::Member.384"* %1960, i64 1
  %1966 = icmp ult %"class.blink::Member.384"* %1965, %1956
  br i1 %1966, label %1959, label %2180

1967:                                             ; preds = %1959
  %1968 = ptrtoint %"class.blink::Member.384"* %1960 to i64
  %1969 = ptrtoint %"class.blink::Member.384"* %1952 to i64
  %1970 = sub i64 %1968, %1969
  %1971 = lshr exact i64 %1970, 3
  %1972 = trunc i64 %1971 to i32
  %1973 = icmp eq i32 %1972, -1
  br i1 %1973, label %2180, label %1974

1974:                                             ; preds = %1967
  %1975 = bitcast %"class.WTF::String"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1975) #10
  %1976 = bitcast %"class.WTF::StringAppend"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1976) #10
  %1977 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1977) #10
  %1978 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 11
  %1979 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 2
  %1980 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 3
  %1981 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1977, i8 -86, i64 32, i1 false) #10
  store i8* %1978, i8** %1979, align 8
  %1982 = urem i32 %2, 10
  %1983 = trunc i32 %1982 to i8
  %1984 = or i8 %1983, 48
  store i8 %1984, i8* %1978, align 1
  %1985 = icmp ugt i32 %2, 9
  br i1 %1985, label %1986, label %2002

1986:                                             ; preds = %1974
  %1987 = udiv i32 %2, 10
  %1988 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 10
  store i8* %1988, i8** %1979, align 8
  %1989 = urem i32 %1987, 10
  %1990 = trunc i32 %1989 to i8
  %1991 = or i8 %1990, 48
  store i8 %1991, i8* %1988, align 2
  %1992 = icmp ugt i32 %2, 99
  br i1 %1992, label %1993, label %2000

1993:                                             ; preds = %1986
  %1994 = udiv i32 %2, 100
  %1995 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 9
  store i8* %1995, i8** %1979, align 8
  %1996 = urem i32 %1994, 10
  %1997 = trunc i32 %1996 to i8
  %1998 = or i8 %1997, 48
  store i8 %1998, i8* %1995, align 1
  %1999 = icmp ugt i32 %2, 999
  br i1 %1999, label %2004, label %2013

2000:                                             ; preds = %1986
  %2001 = ptrtoint i8* %1988 to i64
  br label %2016

2002:                                             ; preds = %1974
  %2003 = ptrtoint i8* %1978 to i64
  br label %2016

2004:                                             ; preds = %1993, %2004
  %2005 = phi i32 [ %2007, %2004 ], [ %1994, %1993 ]
  %2006 = load i8*, i8** %1979, align 8
  %2007 = udiv i32 %2005, 10
  %2008 = getelementptr inbounds i8, i8* %2006, i64 -1
  store i8* %2008, i8** %1979, align 8
  %2009 = urem i32 %2007, 10
  %2010 = trunc i32 %2009 to i8
  %2011 = or i8 %2010, 48
  store i8 %2011, i8* %2008, align 1
  %2012 = icmp ugt i32 %2005, 99
  br i1 %2012, label %2004, label %2013

2013:                                             ; preds = %2004, %1993
  %2014 = bitcast i8** %1979 to i64*
  %2015 = load i64, i64* %2014, align 8
  br label %2016

2016:                                             ; preds = %2013, %2000, %2002
  %2017 = phi i64 [ %2003, %2002 ], [ %2015, %2013 ], [ %2001, %2000 ]
  %2018 = ptrtoint i8* %1981 to i64
  %2019 = sub i64 %2018, %2017
  %2020 = trunc i64 %2019 to i32
  store i32 %2020, i32* %1980, align 8
  %2021 = inttoptr i64 %2017 to i8*
  %2022 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %2021, i32 %2020) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1977) #10
  %2023 = icmp eq %"class.WTF::StringImpl"* %2022, null
  br i1 %2023, label %2099, label %2024

2024:                                             ; preds = %2016
  %2025 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2022, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2026 = load atomic i32, i32* %2025 monotonic, align 4
  %2027 = and i32 %2026, 2
  %2028 = icmp eq i32 %2027, 0
  %2029 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2022, i64 0, i32 0
  %2030 = load i32, i32* %2029, align 4
  br i1 %2028, label %2031, label %2041

2031:                                             ; preds = %2024
  %2032 = zext i32 %2030 to i33
  %2033 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2032, i33 1) #10
  %2034 = extractvalue { i33, i1 } %2033, 1
  %2035 = extractvalue { i33, i1 } %2033, 0
  %2036 = icmp slt i33 %2035, 0
  %2037 = or i1 %2034, %2036
  br i1 %2037, label %2038, label %2039, !prof !2

2038:                                             ; preds = %2031
  call void @llvm.trap() #10
  unreachable

2039:                                             ; preds = %2031
  %2040 = trunc i33 %2035 to i32
  store i32 %2040, i32* %2029, align 4
  br label %2041

2041:                                             ; preds = %2039, %2024
  %2042 = phi i32 [ %2040, %2039 ], [ %2030, %2024 ]
  %2043 = load atomic i32, i32* %2025 monotonic, align 4
  %2044 = and i32 %2043, 2
  %2045 = icmp eq i32 %2044, 0
  br i1 %2045, label %2046, label %2056

2046:                                             ; preds = %2041
  %2047 = zext i32 %2042 to i33
  %2048 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2047, i33 1) #10
  %2049 = extractvalue { i33, i1 } %2048, 1
  %2050 = extractvalue { i33, i1 } %2048, 0
  %2051 = icmp slt i33 %2050, 0
  %2052 = or i1 %2049, %2051
  br i1 %2052, label %2053, label %2054, !prof !2

2053:                                             ; preds = %2046
  call void @llvm.trap() #10
  unreachable

2054:                                             ; preds = %2046
  %2055 = trunc i33 %2050 to i32
  store i32 %2055, i32* %2029, align 4
  br label %2056

2056:                                             ; preds = %2054, %2041
  %2057 = phi i32 [ %2055, %2054 ], [ %2042, %2041 ]
  %2058 = load atomic i32, i32* %2025 monotonic, align 4
  %2059 = and i32 %2058, 2
  %2060 = icmp eq i32 %2059, 0
  br i1 %2060, label %2061, label %2063

2061:                                             ; preds = %2056
  %2062 = add i32 %2057, -1
  store i32 %2062, i32* %2029, align 4
  br label %2063

2063:                                             ; preds = %2061, %2056
  %2064 = phi i32 [ %2062, %2061 ], [ %2057, %2056 ]
  %2065 = icmp eq i32 %2064, 0
  br i1 %2065, label %2066, label %2067

2066:                                             ; preds = %2063
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2022) #10
  br label %2067

2067:                                             ; preds = %2063, %2066
  %2068 = load atomic i32, i32* %2025 monotonic, align 4, !noalias !24
  %2069 = and i32 %2068, 2
  %2070 = icmp eq i32 %2069, 0
  %2071 = load i32, i32* %2029, align 4
  br i1 %2070, label %2072, label %2082

2072:                                             ; preds = %2067
  %2073 = zext i32 %2071 to i33
  %2074 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2073, i33 1) #10
  %2075 = extractvalue { i33, i1 } %2074, 1
  %2076 = extractvalue { i33, i1 } %2074, 0
  %2077 = icmp slt i33 %2076, 0
  %2078 = or i1 %2075, %2077
  br i1 %2078, label %2079, label %2080, !prof !2

2079:                                             ; preds = %2072
  call void @llvm.trap() #10, !noalias !24
  unreachable

2080:                                             ; preds = %2072
  %2081 = trunc i33 %2076 to i32
  store i32 %2081, i32* %2029, align 4, !noalias !24
  br label %2082

2082:                                             ; preds = %2067, %2080
  %2083 = phi i32 [ %2081, %2080 ], [ %2071, %2067 ]
  %2084 = bitcast %"class.WTF::StringAppend"* %38 to i64*
  store i64 ptrtoint ([25 x i8]* @.str.14 to i64), i64* %2084, align 8, !alias.scope !24
  %2085 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %38, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2022, %"class.WTF::StringImpl"** %2085, align 8, !alias.scope !24
  %2086 = load atomic i32, i32* %2025 monotonic, align 4, !noalias !24
  %2087 = and i32 %2086, 2
  %2088 = icmp eq i32 %2087, 0
  br i1 %2088, label %2089, label %2103

2089:                                             ; preds = %2082
  %2090 = zext i32 %2083 to i33
  %2091 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2090, i33 1) #10
  %2092 = extractvalue { i33, i1 } %2091, 1
  %2093 = extractvalue { i33, i1 } %2091, 0
  %2094 = icmp slt i33 %2093, 0
  %2095 = or i1 %2092, %2094
  br i1 %2095, label %2096, label %2097, !prof !2

2096:                                             ; preds = %2089
  call void @llvm.trap() #10, !noalias !24
  unreachable

2097:                                             ; preds = %2089
  %2098 = trunc i33 %2093 to i32
  store i32 %2098, i32* %2029, align 4, !noalias !24
  br label %2103

2099:                                             ; preds = %2016
  %2100 = bitcast %"class.WTF::StringAppend"* %38 to i64*
  store i64 ptrtoint ([25 x i8]* @.str.14 to i64), i64* %2100, align 8, !alias.scope !24
  %2101 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %38, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2101, align 8, !alias.scope !24
  %2102 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %38, i64 0, i32 1
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.15, i64 0, i64 0), i8** %2102, align 8, !alias.scope !24
  br label %2115

2103:                                             ; preds = %2097, %2082
  %2104 = phi i32 [ %2098, %2097 ], [ %2083, %2082 ]
  %2105 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %38, i64 0, i32 1
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.15, i64 0, i64 0), i8** %2105, align 8, !alias.scope !24
  %2106 = load atomic i32, i32* %2025 monotonic, align 4, !noalias !24
  %2107 = and i32 %2106, 2
  %2108 = icmp eq i32 %2107, 0
  br i1 %2108, label %2109, label %2111

2109:                                             ; preds = %2103
  %2110 = add i32 %2104, -1
  store i32 %2110, i32* %2029, align 4, !noalias !24
  br label %2111

2111:                                             ; preds = %2109, %2103
  %2112 = phi i32 [ %2110, %2109 ], [ %2104, %2103 ]
  %2113 = icmp eq i32 %2112, 0
  br i1 %2113, label %2114, label %2115

2114:                                             ; preds = %2111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2022) #10, !noalias !24
  br label %2115

2115:                                             ; preds = %2099, %2111, %2114
  %2116 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %38)
  %2117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2116, %"class.WTF::StringImpl"** %2117, align 8
  %2118 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %2119 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %2118, align 8
  %2120 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %2119, align 8
  call void %2120(%"class.blink::ExceptionState"* %4, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %37) #10
  %2121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2117, align 8
  %2122 = icmp eq %"class.WTF::StringImpl"* %2121, null
  br i1 %2122, label %2136, label %2123

2123:                                             ; preds = %2115
  %2124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2125 = load atomic i32, i32* %2124 monotonic, align 4
  %2126 = and i32 %2125, 2
  %2127 = icmp eq i32 %2126, 0
  %2128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2121, i64 0, i32 0
  %2129 = load i32, i32* %2128, align 4
  br i1 %2127, label %2130, label %2132

2130:                                             ; preds = %2123
  %2131 = add i32 %2129, -1
  store i32 %2131, i32* %2128, align 4
  br label %2132

2132:                                             ; preds = %2130, %2123
  %2133 = phi i32 [ %2131, %2130 ], [ %2129, %2123 ]
  %2134 = icmp eq i32 %2133, 0
  br i1 %2134, label %2135, label %2136

2135:                                             ; preds = %2132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2121) #10
  br label %2136

2136:                                             ; preds = %2115, %2132, %2135
  %2137 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %38, i64 0, i32 0, i32 1, i32 0, i32 0
  %2138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2137, align 8
  %2139 = icmp eq %"class.WTF::StringImpl"* %2138, null
  br i1 %2139, label %2153, label %2140

2140:                                             ; preds = %2136
  %2141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2142 = load atomic i32, i32* %2141 monotonic, align 4
  %2143 = and i32 %2142, 2
  %2144 = icmp eq i32 %2143, 0
  %2145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2138, i64 0, i32 0
  %2146 = load i32, i32* %2145, align 4
  br i1 %2144, label %2147, label %2149

2147:                                             ; preds = %2140
  %2148 = add i32 %2146, -1
  store i32 %2148, i32* %2145, align 4
  br label %2149

2149:                                             ; preds = %2147, %2140
  %2150 = phi i32 [ %2148, %2147 ], [ %2146, %2140 ]
  %2151 = icmp eq i32 %2150, 0
  br i1 %2151, label %2152, label %2153

2152:                                             ; preds = %2149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2138) #10
  br label %2153

2153:                                             ; preds = %2136, %2149, %2152
  br i1 %2023, label %2179, label %2154

2154:                                             ; preds = %2153
  %2155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2022, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2156 = load atomic i32, i32* %2155 monotonic, align 4
  %2157 = and i32 %2156, 2
  %2158 = icmp eq i32 %2157, 0
  %2159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2022, i64 0, i32 0
  %2160 = load i32, i32* %2159, align 4
  br i1 %2158, label %2161, label %2163

2161:                                             ; preds = %2154
  %2162 = add i32 %2160, -1
  store i32 %2162, i32* %2159, align 4
  br label %2163

2163:                                             ; preds = %2161, %2154
  %2164 = phi i32 [ %2162, %2161 ], [ %2160, %2154 ]
  %2165 = icmp eq i32 %2164, 0
  br i1 %2165, label %2166, label %2168

2166:                                             ; preds = %2163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2022) #10
  %2167 = load i32, i32* %2159, align 4
  br label %2168

2168:                                             ; preds = %2163, %2166
  %2169 = phi i32 [ %2164, %2163 ], [ %2167, %2166 ]
  %2170 = load atomic i32, i32* %2155 monotonic, align 4
  %2171 = and i32 %2170, 2
  %2172 = icmp eq i32 %2171, 0
  br i1 %2172, label %2173, label %2175

2173:                                             ; preds = %2168
  %2174 = add i32 %2169, -1
  store i32 %2174, i32* %2159, align 4
  br label %2175

2175:                                             ; preds = %2173, %2168
  %2176 = phi i32 [ %2174, %2173 ], [ %2169, %2168 ]
  %2177 = icmp eq i32 %2176, 0
  br i1 %2177, label %2178, label %2179

2178:                                             ; preds = %2175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2022) #10
  br label %2179

2179:                                             ; preds = %2153, %2175, %2178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1976) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1975) #10
  br label %2194

2180:                                             ; preds = %1964, %1967, %1946
  %2181 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %2182 = load i32, i32* %2181, align 8
  %2183 = icmp eq i32 %1954, %2182
  br i1 %2183, label %2193, label %2184, !prof !2

2184:                                             ; preds = %2180
  %2185 = bitcast %"class.blink::Member.384"* %1956 to i64*
  store atomic i64 %1958, i64* %2185 monotonic, align 8
  %2186 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %2187 = icmp eq i32 %2186, 0
  br i1 %2187, label %2190, label %2188

2188:                                             ; preds = %2184
  %2189 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1947) #10
  br label %2190

2190:                                             ; preds = %2188, %2184
  %2191 = load i32, i32* %1953, align 4
  %2192 = add i32 %2191, 1
  store i32 %2192, i32* %1953, align 4
  br label %2194

2193:                                             ; preds = %2180
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14WritableStreamEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.381"* %1950, %"class.blink::WritableStream"** nonnull dereferenceable(8) %36) #10
  br label %2194

2194:                                             ; preds = %2193, %2190, %2179
  %2195 = phi i1 [ false, %2179 ], [ true, %2190 ], [ true, %2193 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1927) #10
  br label %2469

2196:                                             ; preds = %1923
  %2197 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %49, align 8
  %2198 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %2197, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink17V8TransformStream18wrapper_type_info_E, %"class.v8::Value"* %1) #10
  br i1 %2198, label %2199, label %2469

2199:                                             ; preds = %2196
  %2200 = bitcast %"class.blink::TransformStream"** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2200) #10
  store %"class.blink::TransformStream"* inttoptr (i64 -6148914691236517206 to %"class.blink::TransformStream"*), %"class.blink::TransformStream"** %39, align 8
  %2201 = bitcast %"class.v8::Value"* %1 to i64*
  %2202 = load i64, i64* %2201, align 8
  %2203 = add i64 %2202, -1
  %2204 = inttoptr i64 %2203 to i32*
  %2205 = load i32, i32* %2204, align 4
  %2206 = and i64 %2202, -4294967296
  %2207 = zext i32 %2205 to i64
  %2208 = or i64 %2206, %2207
  %2209 = add i64 %2208, 7
  %2210 = inttoptr i64 %2209 to i16*
  %2211 = load i16, i16* %2210, align 2
  switch i16 %2211, label %2216 [
    i16 1057, label %2212
    i16 1056, label %2212
    i16 1040, label %2212
  ]

2212:                                             ; preds = %2199, %2199, %2199
  %2213 = add i64 %2202, 19
  %2214 = inttoptr i64 %2213 to i8**
  %2215 = load i8*, i8** %2214, align 1
  br label %2219

2216:                                             ; preds = %2199
  %2217 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %2218 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %2217, i32 1) #10
  br label %2219

2219:                                             ; preds = %2212, %2216
  %2220 = phi i8* [ %2215, %2212 ], [ %2218, %2216 ]
  %2221 = bitcast i8* %2220 to %"class.blink::TransformStream"*
  %2222 = bitcast %"class.blink::TransformStream"** %39 to i8**
  store i8* %2220, i8** %2222, align 8
  %2223 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 7, i32 0
  %2224 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %2223, i64 0, i32 0, i32 0, i32 0
  %2225 = load %"class.blink::Member.412"*, %"class.blink::Member.412"** %2224, align 8
  %2226 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %2227 = load i32, i32* %2226, align 4
  %2228 = zext i32 %2227 to i64
  %2229 = getelementptr inbounds %"class.blink::Member.412", %"class.blink::Member.412"* %2225, i64 %2228
  %2230 = icmp eq i32 %2227, 0
  %2231 = ptrtoint i8* %2220 to i64
  br i1 %2230, label %2453, label %2232

2232:                                             ; preds = %2219, %2237
  %2233 = phi %"class.blink::Member.412"* [ %2238, %2237 ], [ %2225, %2219 ]
  %2234 = getelementptr inbounds %"class.blink::Member.412", %"class.blink::Member.412"* %2233, i64 0, i32 0, i32 0
  %2235 = load %"class.blink::TransformStream"*, %"class.blink::TransformStream"** %2234, align 8
  %2236 = icmp eq %"class.blink::TransformStream"* %2235, %2221
  br i1 %2236, label %2240, label %2237

2237:                                             ; preds = %2232
  %2238 = getelementptr inbounds %"class.blink::Member.412", %"class.blink::Member.412"* %2233, i64 1
  %2239 = icmp ult %"class.blink::Member.412"* %2238, %2229
  br i1 %2239, label %2232, label %2453

2240:                                             ; preds = %2232
  %2241 = ptrtoint %"class.blink::Member.412"* %2233 to i64
  %2242 = ptrtoint %"class.blink::Member.412"* %2225 to i64
  %2243 = sub i64 %2241, %2242
  %2244 = lshr exact i64 %2243, 3
  %2245 = trunc i64 %2244 to i32
  %2246 = icmp eq i32 %2245, -1
  br i1 %2246, label %2453, label %2247

2247:                                             ; preds = %2240
  %2248 = bitcast %"class.WTF::String"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2248) #10
  %2249 = bitcast %"class.WTF::StringAppend"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2249) #10
  %2250 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2250) #10
  %2251 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %2252 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %2253 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %2254 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2250, i8 -86, i64 32, i1 false) #10
  store i8* %2251, i8** %2252, align 8
  %2255 = urem i32 %2, 10
  %2256 = udiv i32 %2, 10
  %2257 = trunc i32 %2255 to i8
  %2258 = or i8 %2257, 48
  store i8 %2258, i8* %2251, align 1
  %2259 = icmp ugt i32 %2, 9
  br i1 %2259, label %2260, label %2275

2260:                                             ; preds = %2247
  %2261 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %2261, i8** %2252, align 8
  %2262 = urem i32 %2256, 10
  %2263 = trunc i32 %2262 to i8
  %2264 = or i8 %2263, 48
  store i8 %2264, i8* %2261, align 2
  %2265 = icmp ugt i32 %2, 99
  br i1 %2265, label %2266, label %2273

2266:                                             ; preds = %2260
  %2267 = udiv i32 %2, 100
  %2268 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %2268, i8** %2252, align 8
  %2269 = urem i32 %2267, 10
  %2270 = trunc i32 %2269 to i8
  %2271 = or i8 %2270, 48
  store i8 %2271, i8* %2268, align 1
  %2272 = icmp ugt i32 %2, 999
  br i1 %2272, label %2277, label %2286

2273:                                             ; preds = %2260
  %2274 = ptrtoint i8* %2261 to i64
  br label %2289

2275:                                             ; preds = %2247
  %2276 = ptrtoint i8* %2251 to i64
  br label %2289

2277:                                             ; preds = %2266, %2277
  %2278 = phi i32 [ %2280, %2277 ], [ %2267, %2266 ]
  %2279 = load i8*, i8** %2252, align 8
  %2280 = udiv i32 %2278, 10
  %2281 = getelementptr inbounds i8, i8* %2279, i64 -1
  store i8* %2281, i8** %2252, align 8
  %2282 = urem i32 %2280, 10
  %2283 = trunc i32 %2282 to i8
  %2284 = or i8 %2283, 48
  store i8 %2284, i8* %2281, align 1
  %2285 = icmp ugt i32 %2278, 99
  br i1 %2285, label %2277, label %2286

2286:                                             ; preds = %2277, %2266
  %2287 = bitcast i8** %2252 to i64*
  %2288 = load i64, i64* %2287, align 8
  br label %2289

2289:                                             ; preds = %2286, %2273, %2275
  %2290 = phi i64 [ %2276, %2275 ], [ %2288, %2286 ], [ %2274, %2273 ]
  %2291 = ptrtoint i8* %2254 to i64
  %2292 = sub i64 %2291, %2290
  %2293 = trunc i64 %2292 to i32
  store i32 %2293, i32* %2253, align 8
  %2294 = inttoptr i64 %2290 to i8*
  %2295 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %2294, i32 %2293) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2250) #10
  %2296 = icmp eq %"class.WTF::StringImpl"* %2295, null
  br i1 %2296, label %2372, label %2297

2297:                                             ; preds = %2289
  %2298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2295, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2299 = load atomic i32, i32* %2298 monotonic, align 4
  %2300 = and i32 %2299, 2
  %2301 = icmp eq i32 %2300, 0
  %2302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2295, i64 0, i32 0
  %2303 = load i32, i32* %2302, align 4
  br i1 %2301, label %2304, label %2314

2304:                                             ; preds = %2297
  %2305 = zext i32 %2303 to i33
  %2306 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2305, i33 1) #10
  %2307 = extractvalue { i33, i1 } %2306, 1
  %2308 = extractvalue { i33, i1 } %2306, 0
  %2309 = icmp slt i33 %2308, 0
  %2310 = or i1 %2307, %2309
  br i1 %2310, label %2311, label %2312, !prof !2

2311:                                             ; preds = %2304
  call void @llvm.trap() #10
  unreachable

2312:                                             ; preds = %2304
  %2313 = trunc i33 %2308 to i32
  store i32 %2313, i32* %2302, align 4
  br label %2314

2314:                                             ; preds = %2312, %2297
  %2315 = phi i32 [ %2313, %2312 ], [ %2303, %2297 ]
  %2316 = load atomic i32, i32* %2298 monotonic, align 4
  %2317 = and i32 %2316, 2
  %2318 = icmp eq i32 %2317, 0
  br i1 %2318, label %2319, label %2329

2319:                                             ; preds = %2314
  %2320 = zext i32 %2315 to i33
  %2321 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2320, i33 1) #10
  %2322 = extractvalue { i33, i1 } %2321, 1
  %2323 = extractvalue { i33, i1 } %2321, 0
  %2324 = icmp slt i33 %2323, 0
  %2325 = or i1 %2322, %2324
  br i1 %2325, label %2326, label %2327, !prof !2

2326:                                             ; preds = %2319
  call void @llvm.trap() #10
  unreachable

2327:                                             ; preds = %2319
  %2328 = trunc i33 %2323 to i32
  store i32 %2328, i32* %2302, align 4
  br label %2329

2329:                                             ; preds = %2327, %2314
  %2330 = phi i32 [ %2328, %2327 ], [ %2315, %2314 ]
  %2331 = load atomic i32, i32* %2298 monotonic, align 4
  %2332 = and i32 %2331, 2
  %2333 = icmp eq i32 %2332, 0
  br i1 %2333, label %2334, label %2336

2334:                                             ; preds = %2329
  %2335 = add i32 %2330, -1
  store i32 %2335, i32* %2302, align 4
  br label %2336

2336:                                             ; preds = %2334, %2329
  %2337 = phi i32 [ %2335, %2334 ], [ %2330, %2329 ]
  %2338 = icmp eq i32 %2337, 0
  br i1 %2338, label %2339, label %2340

2339:                                             ; preds = %2336
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2295) #10
  br label %2340

2340:                                             ; preds = %2336, %2339
  %2341 = load atomic i32, i32* %2298 monotonic, align 4, !noalias !27
  %2342 = and i32 %2341, 2
  %2343 = icmp eq i32 %2342, 0
  %2344 = load i32, i32* %2302, align 4
  br i1 %2343, label %2345, label %2355

2345:                                             ; preds = %2340
  %2346 = zext i32 %2344 to i33
  %2347 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2346, i33 1) #10
  %2348 = extractvalue { i33, i1 } %2347, 1
  %2349 = extractvalue { i33, i1 } %2347, 0
  %2350 = icmp slt i33 %2349, 0
  %2351 = or i1 %2348, %2350
  br i1 %2351, label %2352, label %2353, !prof !2

2352:                                             ; preds = %2345
  call void @llvm.trap() #10, !noalias !27
  unreachable

2353:                                             ; preds = %2345
  %2354 = trunc i33 %2349 to i32
  store i32 %2354, i32* %2302, align 4, !noalias !27
  br label %2355

2355:                                             ; preds = %2340, %2353
  %2356 = phi i32 [ %2354, %2353 ], [ %2344, %2340 ]
  %2357 = bitcast %"class.WTF::StringAppend"* %41 to i64*
  store i64 ptrtoint ([26 x i8]* @.str.16 to i64), i64* %2357, align 8, !alias.scope !27
  %2358 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %41, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2295, %"class.WTF::StringImpl"** %2358, align 8, !alias.scope !27
  %2359 = load atomic i32, i32* %2298 monotonic, align 4, !noalias !27
  %2360 = and i32 %2359, 2
  %2361 = icmp eq i32 %2360, 0
  br i1 %2361, label %2362, label %2376

2362:                                             ; preds = %2355
  %2363 = zext i32 %2356 to i33
  %2364 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2363, i33 1) #10
  %2365 = extractvalue { i33, i1 } %2364, 1
  %2366 = extractvalue { i33, i1 } %2364, 0
  %2367 = icmp slt i33 %2366, 0
  %2368 = or i1 %2365, %2367
  br i1 %2368, label %2369, label %2370, !prof !2

2369:                                             ; preds = %2362
  call void @llvm.trap() #10, !noalias !27
  unreachable

2370:                                             ; preds = %2362
  %2371 = trunc i33 %2366 to i32
  store i32 %2371, i32* %2302, align 4, !noalias !27
  br label %2376

2372:                                             ; preds = %2289
  %2373 = bitcast %"class.WTF::StringAppend"* %41 to i64*
  store i64 ptrtoint ([26 x i8]* @.str.16 to i64), i64* %2373, align 8, !alias.scope !27
  %2374 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %41, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2374, align 8, !alias.scope !27
  %2375 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %41, i64 0, i32 1
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.17, i64 0, i64 0), i8** %2375, align 8, !alias.scope !27
  br label %2388

2376:                                             ; preds = %2370, %2355
  %2377 = phi i32 [ %2371, %2370 ], [ %2356, %2355 ]
  %2378 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %41, i64 0, i32 1
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.17, i64 0, i64 0), i8** %2378, align 8, !alias.scope !27
  %2379 = load atomic i32, i32* %2298 monotonic, align 4, !noalias !27
  %2380 = and i32 %2379, 2
  %2381 = icmp eq i32 %2380, 0
  br i1 %2381, label %2382, label %2384

2382:                                             ; preds = %2376
  %2383 = add i32 %2377, -1
  store i32 %2383, i32* %2302, align 4, !noalias !27
  br label %2384

2384:                                             ; preds = %2382, %2376
  %2385 = phi i32 [ %2383, %2382 ], [ %2377, %2376 ]
  %2386 = icmp eq i32 %2385, 0
  br i1 %2386, label %2387, label %2388

2387:                                             ; preds = %2384
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2295) #10, !noalias !27
  br label %2388

2388:                                             ; preds = %2372, %2384, %2387
  %2389 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %41)
  %2390 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2389, %"class.WTF::StringImpl"** %2390, align 8
  %2391 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %2392 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %2391, align 8
  %2393 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %2392, align 8
  call void %2393(%"class.blink::ExceptionState"* %4, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %40) #10
  %2394 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2390, align 8
  %2395 = icmp eq %"class.WTF::StringImpl"* %2394, null
  br i1 %2395, label %2409, label %2396

2396:                                             ; preds = %2388
  %2397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2394, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2398 = load atomic i32, i32* %2397 monotonic, align 4
  %2399 = and i32 %2398, 2
  %2400 = icmp eq i32 %2399, 0
  %2401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2394, i64 0, i32 0
  %2402 = load i32, i32* %2401, align 4
  br i1 %2400, label %2403, label %2405

2403:                                             ; preds = %2396
  %2404 = add i32 %2402, -1
  store i32 %2404, i32* %2401, align 4
  br label %2405

2405:                                             ; preds = %2403, %2396
  %2406 = phi i32 [ %2404, %2403 ], [ %2402, %2396 ]
  %2407 = icmp eq i32 %2406, 0
  br i1 %2407, label %2408, label %2409

2408:                                             ; preds = %2405
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2394) #10
  br label %2409

2409:                                             ; preds = %2388, %2405, %2408
  %2410 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %41, i64 0, i32 0, i32 1, i32 0, i32 0
  %2411 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2410, align 8
  %2412 = icmp eq %"class.WTF::StringImpl"* %2411, null
  br i1 %2412, label %2426, label %2413

2413:                                             ; preds = %2409
  %2414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2415 = load atomic i32, i32* %2414 monotonic, align 4
  %2416 = and i32 %2415, 2
  %2417 = icmp eq i32 %2416, 0
  %2418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2411, i64 0, i32 0
  %2419 = load i32, i32* %2418, align 4
  br i1 %2417, label %2420, label %2422

2420:                                             ; preds = %2413
  %2421 = add i32 %2419, -1
  store i32 %2421, i32* %2418, align 4
  br label %2422

2422:                                             ; preds = %2420, %2413
  %2423 = phi i32 [ %2421, %2420 ], [ %2419, %2413 ]
  %2424 = icmp eq i32 %2423, 0
  br i1 %2424, label %2425, label %2426

2425:                                             ; preds = %2422
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2411) #10
  br label %2426

2426:                                             ; preds = %2409, %2422, %2425
  br i1 %2296, label %2452, label %2427

2427:                                             ; preds = %2426
  %2428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2295, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2429 = load atomic i32, i32* %2428 monotonic, align 4
  %2430 = and i32 %2429, 2
  %2431 = icmp eq i32 %2430, 0
  %2432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2295, i64 0, i32 0
  %2433 = load i32, i32* %2432, align 4
  br i1 %2431, label %2434, label %2436

2434:                                             ; preds = %2427
  %2435 = add i32 %2433, -1
  store i32 %2435, i32* %2432, align 4
  br label %2436

2436:                                             ; preds = %2434, %2427
  %2437 = phi i32 [ %2435, %2434 ], [ %2433, %2427 ]
  %2438 = icmp eq i32 %2437, 0
  br i1 %2438, label %2439, label %2441

2439:                                             ; preds = %2436
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2295) #10
  %2440 = load i32, i32* %2432, align 4
  br label %2441

2441:                                             ; preds = %2436, %2439
  %2442 = phi i32 [ %2437, %2436 ], [ %2440, %2439 ]
  %2443 = load atomic i32, i32* %2428 monotonic, align 4
  %2444 = and i32 %2443, 2
  %2445 = icmp eq i32 %2444, 0
  br i1 %2445, label %2446, label %2448

2446:                                             ; preds = %2441
  %2447 = add i32 %2442, -1
  store i32 %2447, i32* %2432, align 4
  br label %2448

2448:                                             ; preds = %2446, %2441
  %2449 = phi i32 [ %2447, %2446 ], [ %2442, %2441 ]
  %2450 = icmp eq i32 %2449, 0
  br i1 %2450, label %2451, label %2452

2451:                                             ; preds = %2448
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2295) #10
  br label %2452

2452:                                             ; preds = %2426, %2448, %2451
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2249) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2248) #10
  br label %2467

2453:                                             ; preds = %2237, %2240, %2219
  %2454 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %3, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %2455 = load i32, i32* %2454, align 8
  %2456 = icmp eq i32 %2227, %2455
  br i1 %2456, label %2466, label %2457, !prof !2

2457:                                             ; preds = %2453
  %2458 = bitcast %"class.blink::Member.412"* %2229 to i64*
  store atomic i64 %2231, i64* %2458 monotonic, align 8
  %2459 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %2460 = icmp eq i32 %2459, 0
  br i1 %2460, label %2463, label %2461

2461:                                             ; preds = %2457
  %2462 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %2220) #10
  br label %2463

2463:                                             ; preds = %2461, %2457
  %2464 = load i32, i32* %2226, align 4
  %2465 = add i32 %2464, 1
  store i32 %2465, i32* %2226, align 4
  br label %2467

2466:                                             ; preds = %2453
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15TransformStreamEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.409"* %2223, %"class.blink::TransformStream"** nonnull dereferenceable(8) %39) #10
  br label %2467

2467:                                             ; preds = %2466, %2463, %2452
  %2468 = phi i1 [ false, %2452 ], [ true, %2463 ], [ true, %2466 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2200) #10
  br label %2469

2469:                                             ; preds = %2196, %1649, %2467, %2194, %1921, %1647, %1374, %1101, %847, %593, %320
  %2470 = phi i1 [ %321, %320 ], [ %594, %593 ], [ %848, %847 ], [ %1102, %1101 ], [ %1375, %1374 ], [ %1648, %1647 ], [ %1922, %1921 ], [ %2195, %2194 ], [ %2468, %2467 ], [ false, %1649 ], [ false, %2196 ]
  ret i1 %2470
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase26TransferableStreamsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink23CurrentExecutionContextEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1038", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1038", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.1038"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #10
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1038"* nonnull %3, i8* %8) #10
  %9 = bitcast %"class.WTF::StringTypeAdapter.1038"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #10
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1038"* nonnull %2, i8* %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #10
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #10
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #10
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #10
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #10
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #10
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #10
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK2v85Value13IsArrayBufferEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMArrayBuffer"* @_ZN5blink13V8ArrayBuffer6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value19IsSharedArrayBufferEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMSharedArrayBuffer"* @_ZN5blink19V8SharedArrayBuffer6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23V8ScriptValueSerializerC2EPNS_11ScriptStateERKNS_21SerializedScriptValue16SerializeOptionsE(%"class.blink::V8ScriptValueSerializer"*, %"class.blink::ScriptState"*, %"struct.blink::SerializedScriptValue::SerializeOptions"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink23V8ScriptValueSerializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 1
  store %"class.blink::ScriptState"* %1, %"class.blink::ScriptState"** %6, align 8
  %7 = tail call %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue6CreateEv() #10
  %8 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 2, i32 0
  store %"class.blink::SerializedScriptValue"* %7, %"class.blink::SerializedScriptValue"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  %10 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %6, align 8
  %11 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %10, i64 0, i32 0
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  tail call void @_ZN2v815ValueSerializerC1EPNS_7IsolateEPNS0_8DelegateE(%"class.v8::ValueSerializer"* %9, %"class.v8::Isolate"* %12, %"class.v8::ValueSerializer::Delegate"* %4) #10
  %13 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 4
  %14 = bitcast %"struct.blink::SerializedScriptValue::SerializeOptions"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::Transferables"** %13 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 5
  store %"class.blink::ExceptionState"* null, %"class.blink::ExceptionState"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 6
  %19 = getelementptr inbounds %"struct.blink::SerializedScriptValue::SerializeOptions", %"struct.blink::SerializedScriptValue::SerializeOptions"* %2, i64 0, i32 1
  %20 = bitcast %"class.WTF::Vector.795"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.WTF::Vector.795"** %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 7
  %24 = bitcast %"class.blink::HeapVector.806"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #10
  %25 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 8
  %26 = getelementptr inbounds %"struct.blink::SerializedScriptValue::SerializeOptions", %"struct.blink::SerializedScriptValue::SerializeOptions"* %2, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %25, align 8
  %28 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 9
  %29 = getelementptr inbounds %"struct.blink::SerializedScriptValue::SerializeOptions", %"struct.blink::SerializedScriptValue::SerializeOptions"* %2, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 1
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %28, align 4
  ret void
}

declare %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue6CreateEv() local_unnamed_addr #2

declare void @_ZN2v815ValueSerializerC1EPNS_7IsolateEPNS0_8DelegateE(%"class.v8::ValueSerializer"*, %"class.v8::Isolate"*, %"class.v8::ValueSerializer::Delegate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SerializedScriptValue"* @_ZN5blink23V8ScriptValueSerializer9SerializeEN2v85LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.blink::V8ScriptValueSerializer"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 5
  %8 = ptrtoint %"class.blink::ExceptionState"* %2 to i64
  %9 = bitcast %"class.blink::ExceptionState"** %7 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 %8, i64* %9, align 8
  tail call void @_ZN5blink23V8ScriptValueSerializer15PrepareTransferERNS_14ExceptionStateE(%"class.blink::V8ScriptValueSerializer"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %79

14:                                               ; preds = %3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -1, i8* %4, align 1
  %15 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %15, i8* nonnull %4, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %15, i32 20) #10
  call void @_ZN2v815ValueSerializer11WriteHeaderEv(%"class.v8::ValueSerializer"* %15) #10
  %16 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 1
  %17 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %17, i64 0, i32 0
  %19 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %20 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %20) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %19) #10
  %21 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #10
  %22 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %19, i32 1) #10
  %23 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %16, align 8
  %24 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %23, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %"class.v8::Context"*, %"class.v8::Context"** %24, align 8
  %26 = icmp eq %"class.v8::Context"* %25, null
  br i1 %26, label %34, label %27

27:                                               ; preds = %14
  %28 = bitcast %"class.blink::ScriptState"* %23 to %"class.v8::internal::Isolate"**
  %29 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %30 = bitcast %"class.v8::Context"* %25 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %29, i64 %31) #10
  %33 = bitcast i64* %32 to %"class.v8::Context"*
  br label %34

34:                                               ; preds = %14, %27
  %35 = phi %"class.v8::Context"* [ %33, %27 ], [ null, %14 ]
  %36 = call i16 @_ZN2v815ValueSerializer10WriteValueENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::ValueSerializer"* %15, %"class.v8::Context"* %35, %"class.v8::Value"* %1) #10
  %37 = trunc i16 %36 to i8
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %45, !prof !2

39:                                               ; preds = %34
  %40 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #10
  %41 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %42 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %42, i64 5
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %43, align 8
  call void %44(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %40) #10
  br label %77

45:                                               ; preds = %34
  call void @_ZN5blink23V8ScriptValueSerializer16FinalizeTransferERNS_14ExceptionStateE(%"class.blink::V8ScriptValueSerializer"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %46 = load i32, i32* %11, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %77

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 7
  %50 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %16, align 8
  %55 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %54) #10
  %56 = call zeroext i1 @_ZN5blink16ExecutionContext46CheckSharedArrayBufferTransferAllowedAndReportEv(%"class.blink::ExecutionContext"* %55) #10
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i64 0, i64 0)) #10
  br label %77

58:                                               ; preds = %53, %48
  %59 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 2
  %60 = getelementptr inbounds %class.scoped_refptr.746, %class.scoped_refptr.746* %59, i64 0, i32 0
  %61 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %60, align 8
  call void @_ZN5blink21SerializedScriptValue23CloneSharedArrayBuffersERNS_10HeapVectorINS_6MemberINS_20DOMSharedArrayBufferEEELj0EEE(%"class.blink::SerializedScriptValue"* %61, %"class.blink::HeapVector.806"* dereferenceable(16) %49) #10
  %62 = call { i8*, i64 } @_ZN2v815ValueSerializer7ReleaseEv(%"class.v8::ValueSerializer"* %15) #10
  %63 = extractvalue { i8*, i64 } %62, 0
  %64 = extractvalue { i8*, i64 } %62, 1
  %65 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %60, align 8
  %66 = ptrtoint i8* %63 to i64
  %67 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %65, i64 0, i32 2
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.749", %"class.std::__1::unique_ptr.749"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = bitcast %"class.std::__1::unique_ptr.749"* %67 to i64*
  store i64 %66, i64* %70, align 8
  %71 = icmp eq i8* %69, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %58
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %69) #10
  br label %73

73:                                               ; preds = %58, %72
  %74 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %65, i64 0, i32 3
  store i64 %64, i64* %74, align 8
  %75 = bitcast %class.scoped_refptr.746* %59 to i64*
  %76 = load i64, i64* %75, align 8
  store %"class.blink::SerializedScriptValue"* null, %"class.blink::SerializedScriptValue"** %60, align 8
  br label %77

77:                                               ; preds = %45, %57, %73, %39
  %78 = phi i64 [ %76, %73 ], [ 0, %57 ], [ 0, %39 ], [ 0, %45 ]
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #10
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %20) #10
  br label %79

79:                                               ; preds = %3, %77
  %80 = phi i64 [ %78, %77 ], [ 0, %3 ]
  %81 = icmp eq %"class.blink::ExceptionState"** %7, null
  br i1 %81, label %83, label %82

82:                                               ; preds = %79
  store i64 %10, i64* %9, align 8
  br label %83

83:                                               ; preds = %79, %82
  %84 = inttoptr i64 %80 to %"class.blink::SerializedScriptValue"*
  ret %"class.blink::SerializedScriptValue"* %84
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23V8ScriptValueSerializer15PrepareTransferERNS_14ExceptionStateE(%"class.blink::V8ScriptValueSerializer"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 4
  %4 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %3, align 8
  %5 = icmp eq %"class.blink::Transferables"* %4, null
  br i1 %5, label %72, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %72, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  br label %13

13:                                               ; preds = %10, %63
  %14 = phi %"class.blink::Transferables"* [ %4, %10 ], [ %67, %63 ]
  %15 = phi i32 [ 0, %10 ], [ %66, %63 ]
  %16 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %14, i64 0, i32 0, i32 0
  %17 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %16, i32 %15) #10
  %18 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %20, align 8
  %22 = icmp eq %"class.v8::BackingStore"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %21) #10
  br i1 %24, label %71, label %25

25:                                               ; preds = %13, %23
  %26 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %27 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %19, i64 0, i32 0
  %28 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.v8::Context"*, %"class.v8::Context"** %28, align 8
  %30 = icmp eq %"class.v8::Context"* %29, null
  br i1 %30, label %38, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.blink::ScriptState"* %26 to %"class.v8::internal::Isolate"**
  %33 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %32, align 8
  %34 = bitcast %"class.v8::Context"* %29 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %33, i64 %35) #10
  %37 = bitcast i64* %36 to %"class.v8::Context"*
  br label %38

38:                                               ; preds = %31, %25
  %39 = phi %"class.v8::Context"* [ %37, %31 ], [ null, %25 ]
  %40 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %39) #10
  %41 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 0
  %42 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %41, align 8
  %43 = icmp eq %"class.blink::DOMArrayBufferBase"* %19, null
  br i1 %43, label %44, label %47, !prof !2

44:                                               ; preds = %38
  %45 = ptrtoint %"class.v8::Isolate"* %42 to i64
  %46 = add i64 %45, 176
  br label %63

47:                                               ; preds = %38
  %48 = tail call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %27, %"class.v8::Isolate"* %42) #10
  %49 = ptrtoint %"class.v8::Object"* %48 to i64
  %50 = icmp eq %"class.v8::Object"* %48, null
  br i1 %50, label %51, label %63

51:                                               ; preds = %47
  %52 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %40) #10
  %53 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %52) #10
  %54 = bitcast %"class.blink::DOMArrayBufferBase"* %19 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %55 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %54, align 8
  %56 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %55, i64 7
  %57 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %56, align 8
  %58 = tail call %"class.v8::Value"* %57(%"class.blink::ScriptWrappable"* nonnull %27, %"class.blink::ScriptState"* %53) #10
  %59 = icmp eq %"class.v8::Value"* %58, null
  br i1 %59, label %60, label %61, !prof !2

60:                                               ; preds = %51
  tail call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %61

61:                                               ; preds = %60, %51
  %62 = ptrtoint %"class.v8::Value"* %58 to i64
  br label %63

63:                                               ; preds = %44, %47, %61
  %64 = phi i64 [ %46, %44 ], [ %62, %61 ], [ %49, %47 ]
  %65 = inttoptr i64 %64 to %"class.v8::ArrayBuffer"*
  tail call void @_ZN2v815ValueSerializer19TransferArrayBufferEjNS_5LocalINS_11ArrayBufferEEE(%"class.v8::ValueSerializer"* %12, i32 %15, %"class.v8::ArrayBuffer"* %65) #10
  %66 = add nuw i32 %15, 1
  %67 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %3, align 8
  %68 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp ult i32 %66, %69
  br i1 %70, label %13, label %72

71:                                               ; preds = %23
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 25, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.19, i64 0, i64 0)) #10
  br label %72

72:                                               ; preds = %63, %6, %71, %2
  ret void
}

declare void @_ZN2v815ValueSerializer11WriteHeaderEv(%"class.v8::ValueSerializer"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #2

declare i16 @_ZN2v815ValueSerializer10WriteValueENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::ValueSerializer"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23V8ScriptValueSerializer16FinalizeTransferERNS_14ExceptionStateE(%"class.blink::V8ScriptValueSerializer"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector", align 8
  %4 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 1
  %5 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 0
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = bitcast %"class.blink::HeapVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #10
  %11 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 4
  %12 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %11, align 8
  %13 = icmp eq %"class.blink::Transferables"* %12, null
  br i1 %13, label %117, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::Member"*, %"class.blink::Member"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector"* nonnull %15, %"class.blink::Member"* %17, i32 %19) #10
  %20 = load i32, i32* %10, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 2, i32 0
  %24 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %23, align 8
  call void @_ZN5blink21SerializedScriptValue20TransferArrayBuffersEPN2v87IsolateERKNS_10HeapVectorINS_6MemberINS_18DOMArrayBufferBaseEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"* %24, %"class.v8::Isolate"* %7, %"class.blink::HeapVector"* nonnull dereferenceable(16) %3, %"class.blink::ExceptionState"* dereferenceable(72) %1) #10
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %1, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %117

28:                                               ; preds = %22, %14
  %29 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %11, align 8
  %30 = icmp eq %"class.blink::Transferables"* %29, null
  br i1 %30, label %117, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 2, i32 0
  %33 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %29, i64 0, i32 1
  call void @_ZN5blink21SerializedScriptValue20TransferImageBitmapsEPN2v87IsolateERKNS_10HeapVectorINS_6MemberINS_11ImageBitmapEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"* %33, %"class.v8::Isolate"* %7, %"class.blink::HeapVector.2"* dereferenceable(16) %34, %"class.blink::ExceptionState"* dereferenceable(72) %1) #10
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %1, i64 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %117

38:                                               ; preds = %31
  %39 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %32, align 8
  %40 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %11, align 8
  %41 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %40, i64 0, i32 2
  call void @_ZN5blink21SerializedScriptValue23TransferOffscreenCanvasEPN2v87IsolateERKNS_10HeapVectorINS_6MemberINS_15OffscreenCanvasEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"* %39, %"class.v8::Isolate"* %7, %"class.blink::HeapVector.10"* dereferenceable(16) %41, %"class.blink::ExceptionState"* dereferenceable(72) %1) #10
  %42 = load i32, i32* %35, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %117

44:                                               ; preds = %38
  %45 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  %46 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %45) #10
  %47 = icmp eq %"class.blink::ExecutionContext"* %46, null
  %48 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %46, i64 0, i32 4
  %49 = select i1 %47, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %48
  %50 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase26TransferableStreamsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %49) #10
  br i1 %50, label %51, label %72

51:                                               ; preds = %44
  %52 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %32, align 8
  %53 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  %54 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %11, align 8
  %55 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %54, i64 0, i32 5
  call void @_ZN5blink21SerializedScriptValue23TransferReadableStreamsEPNS_11ScriptStateERKNS_10HeapVectorINS_6MemberINS_14ReadableStreamEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"* %52, %"class.blink::ScriptState"* %53, %"class.blink::HeapVector.355"* dereferenceable(16) %55, %"class.blink::ExceptionState"* dereferenceable(72) %1) #10
  %56 = load i32, i32* %35, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %117

58:                                               ; preds = %51
  %59 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %32, align 8
  %60 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  %61 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %11, align 8
  %62 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %61, i64 0, i32 6
  call void @_ZN5blink21SerializedScriptValue23TransferWritableStreamsEPNS_11ScriptStateERKNS_10HeapVectorINS_6MemberINS_14WritableStreamEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"* %59, %"class.blink::ScriptState"* %60, %"class.blink::HeapVector.378"* dereferenceable(16) %62, %"class.blink::ExceptionState"* dereferenceable(72) %1) #10
  %63 = load i32, i32* %35, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %117

65:                                               ; preds = %58
  %66 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %32, align 8
  %67 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  %68 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %11, align 8
  %69 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %68, i64 0, i32 7
  call void @_ZN5blink21SerializedScriptValue24TransferTransformStreamsEPNS_11ScriptStateERKNS_10HeapVectorINS_6MemberINS_15TransformStreamEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"* %66, %"class.blink::ScriptState"* %67, %"class.blink::HeapVector.406"* dereferenceable(16) %69, %"class.blink::ExceptionState"* dereferenceable(72) %1) #10
  %70 = load i32, i32* %35, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %117

72:                                               ; preds = %65, %44
  %73 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %11, align 8
  %74 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %73, i64 0, i32 8, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %73, i64 0, i32 8, i32 0, i32 0, i32 0
  %78 = load %"struct.WTF::KeyValuePair.419"*, %"struct.WTF::KeyValuePair.419"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %73, i64 0, i32 8, i32 0, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.419", %"struct.WTF::KeyValuePair.419"* %78, i64 %81
  br i1 %76, label %117, label %83

83:                                               ; preds = %72
  %84 = icmp eq i32 %80, 0
  br i1 %84, label %92, label %85

85:                                               ; preds = %83, %89
  %86 = phi %"struct.WTF::KeyValuePair.419"* [ %90, %89 ], [ %78, %83 ]
  %87 = bitcast %"struct.WTF::KeyValuePair.419"* %86 to i64*
  %88 = load i64, i64* %87, align 8
  switch i64 %88, label %92 [
    i64 -1, label %89
    i64 0, label %89
  ]

89:                                               ; preds = %85, %85
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.419", %"struct.WTF::KeyValuePair.419"* %86, i64 1
  %91 = icmp eq %"struct.WTF::KeyValuePair.419"* %90, %82
  br i1 %91, label %117, label %85

92:                                               ; preds = %85, %83
  %93 = phi %"struct.WTF::KeyValuePair.419"* [ %78, %83 ], [ %86, %85 ]
  %94 = icmp eq %"struct.WTF::KeyValuePair.419"* %93, %82
  br i1 %94, label %117, label %95

95:                                               ; preds = %92, %115
  %96 = phi %"struct.WTF::KeyValuePair.419"* [ %109, %115 ], [ %93, %92 ]
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.419", %"struct.WTF::KeyValuePair.419"* %96, i64 0, i32 1, i32 0, i32 0
  %98 = load %"class.blink::Transferables::TransferList"*, %"class.blink::Transferables::TransferList"** %97, align 8
  %99 = bitcast %"class.blink::Transferables::TransferList"* %98 to void (%"class.blink::Transferables::TransferList"*, %"class.blink::ExceptionState"*)***
  %100 = load void (%"class.blink::Transferables::TransferList"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::Transferables::TransferList"*, %"class.blink::ExceptionState"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.blink::Transferables::TransferList"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Transferables::TransferList"*, %"class.blink::ExceptionState"*)** %100, i64 3
  %102 = load void (%"class.blink::Transferables::TransferList"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Transferables::TransferList"*, %"class.blink::ExceptionState"*)** %101, align 8
  call void %102(%"class.blink::Transferables::TransferList"* %98, %"class.blink::ExceptionState"* dereferenceable(72) %1) #10
  %103 = load i32, i32* %35, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %117

105:                                              ; preds = %95
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.419", %"struct.WTF::KeyValuePair.419"* %96, i64 1
  %107 = icmp eq %"struct.WTF::KeyValuePair.419"* %106, %82
  br i1 %107, label %117, label %108

108:                                              ; preds = %105, %112
  %109 = phi %"struct.WTF::KeyValuePair.419"* [ %113, %112 ], [ %106, %105 ]
  %110 = bitcast %"struct.WTF::KeyValuePair.419"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  switch i64 %111, label %115 [
    i64 -1, label %112
    i64 0, label %112
  ]

112:                                              ; preds = %108, %108
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.419", %"struct.WTF::KeyValuePair.419"* %109, i64 1
  %114 = icmp eq %"struct.WTF::KeyValuePair.419"* %113, %82
  br i1 %114, label %117, label %108

115:                                              ; preds = %108
  %116 = icmp eq %"struct.WTF::KeyValuePair.419"* %109, %82
  br i1 %116, label %117, label %95

117:                                              ; preds = %89, %105, %95, %115, %112, %72, %2, %92, %65, %58, %51, %38, %31, %22, %28
  %118 = load i32, i32* %9, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %131, label %120

120:                                              ; preds = %117
  %121 = load i32, i32* %10, align 4
  %122 = icmp eq i32 %121, 0
  %123 = bitcast %"class.blink::HeapVector"* %3 to i8**
  br i1 %122, label %128, label %124

124:                                              ; preds = %120
  %125 = load i8*, i8** %123, align 8
  %126 = zext i32 %121 to i64
  %127 = shl nuw nsw i64 %126, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %125, i64 %127) #10
  store i32 0, i32* %10, align 4
  br label %128

128:                                              ; preds = %124, %120
  %129 = load i8*, i8** %123, align 8
  %130 = bitcast %"class.blink::HeapVector"* %3 to i64*
  store atomic i64 0, i64* %130 monotonic, align 8
  store i32 0, i32* %9, align 8
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %129) #10
  br label %131

131:                                              ; preds = %117, %128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16ExecutionContext46CheckSharedArrayBufferTransferAllowedAndReportEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

declare void @_ZN5blink21SerializedScriptValue23CloneSharedArrayBuffersERNS_10HeapVectorINS_6MemberINS_20DOMSharedArrayBufferEEELj0EEE(%"class.blink::SerializedScriptValue"*, %"class.blink::HeapVector.806"* dereferenceable(16)) local_unnamed_addr #2

declare { i8*, i64 } @_ZN2v815ValueSerializer7ReleaseEv(%"class.v8::ValueSerializer"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

declare void @_ZN2v815ValueSerializer19TransferArrayBufferEjNS_5LocalINS_11ArrayBufferEEE(%"class.v8::ValueSerializer"*, i32, %"class.v8::ArrayBuffer"*) local_unnamed_addr #2

declare void @_ZN5blink21SerializedScriptValue20TransferArrayBuffersEPN2v87IsolateERKNS_10HeapVectorINS_6MemberINS_18DOMArrayBufferBaseEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"*, %"class.v8::Isolate"*, %"class.blink::HeapVector"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink21SerializedScriptValue20TransferImageBitmapsEPN2v87IsolateERKNS_10HeapVectorINS_6MemberINS_11ImageBitmapEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"*, %"class.v8::Isolate"*, %"class.blink::HeapVector.2"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink21SerializedScriptValue23TransferOffscreenCanvasEPN2v87IsolateERKNS_10HeapVectorINS_6MemberINS_15OffscreenCanvasEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"*, %"class.v8::Isolate"*, %"class.blink::HeapVector.10"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink23V8ScriptValueSerializer26TransferableStreamsEnabledEv(%"class.blink::V8ScriptValueSerializer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 1
  %3 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %2, align 8
  %4 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %3) #10
  %5 = icmp eq %"class.blink::ExecutionContext"* %4, null
  %6 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %4, i64 0, i32 4
  %7 = select i1 %5, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %6
  %8 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase26TransferableStreamsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %7) #10
  ret i1 %8
}

declare void @_ZN5blink21SerializedScriptValue23TransferReadableStreamsEPNS_11ScriptStateERKNS_10HeapVectorINS_6MemberINS_14ReadableStreamEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"*, %"class.blink::ScriptState"*, %"class.blink::HeapVector.355"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink21SerializedScriptValue23TransferWritableStreamsEPNS_11ScriptStateERKNS_10HeapVectorINS_6MemberINS_14WritableStreamEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"*, %"class.blink::ScriptState"*, %"class.blink::HeapVector.378"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink21SerializedScriptValue24TransferTransformStreamsEPNS_11ScriptStateERKNS_10HeapVectorINS_6MemberINS_15TransformStreamEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"*, %"class.blink::ScriptState"*, %"class.blink::HeapVector.406"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23V8ScriptValueSerializer15WriteUTF8StringERKN3WTF6StringE(%"class.blink::V8ScriptValueSerializer"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %4 = bitcast %"class.WTF::StringUTF8Adaptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 40, i1 false)
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %1, i32 0) #10
  %5 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %3, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %7, i32 %6) #10
  %8 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %3, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = load i32, i32* %5, align 8
  %11 = zext i32 %10 to i64
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %7, i8* %9, i64 %11) #10
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #10
  ret void
}

declare void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23V8ScriptValueSerializer14WriteDOMObjectEPNS_15ScriptWrappableERNS_14ExceptionStateE(%"class.blink::V8ScriptValueSerializer"*, %"class.blink::ScriptWrappable"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %21 = alloca i8, align 1
  %22 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %28 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca %"class.blink::WebString", align 8
  %32 = alloca %"class.logging::CheckError", align 8
  %33 = alloca %"class.logging::CheckError", align 8
  %34 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %35 = alloca %"class.WTF::String", align 8
  %36 = alloca %class.scoped_refptr.818, align 8
  %37 = alloca %"class.WTF::String", align 8
  %38 = alloca %"class.WTF::String", align 8
  %39 = alloca %"class.WTF::String", align 8
  %40 = alloca %struct.SkImageInfo, align 8
  %41 = alloca %"class.blink::SerializedImageBitmapSettings", align 4
  %42 = alloca %struct.SkImageInfo, align 8
  %43 = alloca %"class.WTF::Vector.841", align 8
  %44 = alloca %"class.blink::SerializedImageDataSettings", align 4
  %45 = alloca %class.SkPixmap, align 8
  %46 = alloca %"class.mojo::ScopedHandleBase.509", align 4
  %47 = alloca %"class.WTF::String", align 8
  %48 = alloca %"class.WTF::String", align 8
  %49 = alloca %"class.WTF::String", align 8
  %50 = bitcast %"class.blink::ScriptWrappable"* %1 to %"struct.blink::WrapperTypeInfo"* (%"class.blink::ScriptWrappable"*)***
  %51 = load %"struct.blink::WrapperTypeInfo"* (%"class.blink::ScriptWrappable"*)**, %"struct.blink::WrapperTypeInfo"* (%"class.blink::ScriptWrappable"*)*** %50, align 8
  %52 = getelementptr inbounds %"struct.blink::WrapperTypeInfo"* (%"class.blink::ScriptWrappable"*)*, %"struct.blink::WrapperTypeInfo"* (%"class.blink::ScriptWrappable"*)** %51, i64 6
  %53 = load %"struct.blink::WrapperTypeInfo"* (%"class.blink::ScriptWrappable"*)*, %"struct.blink::WrapperTypeInfo"* (%"class.blink::ScriptWrappable"*)** %52, align 8
  %54 = tail call %"struct.blink::WrapperTypeInfo"* %53(%"class.blink::ScriptWrappable"* %1) #10
  %55 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink6V8Blob18wrapper_type_info_E
  br i1 %55, label %56, label %267

56:                                               ; preds = %3
  %57 = bitcast %"class.blink::ScriptWrappable"* %1 to %"class.blink::Blob"*
  %58 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 2, i32 0
  %59 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %58, align 8
  %60 = bitcast %"class.WTF::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #10
  %61 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2
  %62 = bitcast %"class.blink::ScriptWrappable"* %61 to %"class.blink::BlobDataHandle"**
  %63 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %63, i64 0, i32 1
  %65 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %64) #10
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %66, align 8
  %67 = bitcast %class.scoped_refptr.818* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #10
  %68 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %62, align 8
  %69 = icmp eq %"class.blink::BlobDataHandle"* %68, null
  br i1 %69, label %77, label %70

70:                                               ; preds = %56
  %71 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 1 monotonic
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = bitcast %"class.logging::CheckError"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %33, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.48, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.49, i64 0, i64 0)) #10
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %33) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #10
  br label %77

77:                                               ; preds = %56, %70, %74
  %78 = getelementptr inbounds %class.scoped_refptr.818, %class.scoped_refptr.818* %36, i64 0, i32 0
  store %"class.blink::BlobDataHandle"* %68, %"class.blink::BlobDataHandle"** %78, align 8
  %79 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %59, i64 0, i32 9, i32 0
  %80 = call { %"struct.WTF::KeyValuePair.779"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_S6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.776"* %79, %"class.WTF::String"* nonnull dereferenceable(8) %35, %class.scoped_refptr.818* nonnull dereferenceable(8) %36) #10
  %81 = extractvalue { %"struct.WTF::KeyValuePair.779"*, i8 } %80, 1
  %82 = and i8 %81, 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %99

84:                                               ; preds = %77
  %85 = extractvalue { %"struct.WTF::KeyValuePair.779"*, i8 } %80, 0
  %86 = bitcast %class.scoped_refptr.818* %36 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %78, align 8
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %85, i64 0, i32 1
  %89 = bitcast %class.scoped_refptr.818* %88 to i64*
  %90 = getelementptr inbounds %class.scoped_refptr.818, %class.scoped_refptr.818* %88, i64 0, i32 0
  %91 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %90, align 8
  store i64 %87, i64* %89, align 8
  %92 = icmp eq %"class.blink::BlobDataHandle"* %91, null
  br i1 %92, label %99, label %93

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw sub i32* %94, i32 1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %91) #10
  %98 = bitcast %"class.blink::BlobDataHandle"* %91 to i8*
  call void @free(i8* %98) #10
  br label %99

99:                                               ; preds = %77, %84, %93, %97
  %100 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %78, align 8
  %101 = icmp eq %"class.blink::BlobDataHandle"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw sub i32* %103, i32 1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %108

106:                                              ; preds = %102
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %100) #10
  %107 = bitcast %"class.blink::BlobDataHandle"* %100 to i8*
  call void @free(i8* %107) #10
  br label %108

108:                                              ; preds = %99, %102, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #10
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #10
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #10
  %125 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 6
  %126 = load %"class.WTF::Vector.795"*, %"class.WTF::Vector.795"** %125, align 8
  %127 = icmp eq %"class.WTF::Vector.795"* %126, null
  br i1 %127, label %204, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.WTF::Vector.795", %"class.WTF::Vector.795"* %126, i64 0, i32 0, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %62, align 8
  %132 = icmp eq %"class.blink::BlobDataHandle"* %131, null
  br i1 %132, label %140, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = atomicrmw add i32* %134, i32 1 monotonic
  %136 = icmp sgt i32 %135, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %133
  %138 = bitcast %"class.logging::CheckError"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %32, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.48, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.49, i64 0, i64 0)) #10
  %139 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %32) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %32) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #10
  br label %140

140:                                              ; preds = %128, %133, %137
  %141 = bitcast %"class.WTF::String"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #10
  %142 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %62, align 8
  %143 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %142, i64 0, i32 2
  %144 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %143) #10
  %145 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %144, %"class.WTF::StringImpl"** %145, align 8
  %146 = bitcast %"class.blink::ScriptWrappable"* %1 to i64 (%"class.blink::Blob"*)***
  %147 = load i64 (%"class.blink::Blob"*)**, i64 (%"class.blink::Blob"*)*** %146, align 8
  %148 = getelementptr inbounds i64 (%"class.blink::Blob"*)*, i64 (%"class.blink::Blob"*)** %147, i64 9
  %149 = load i64 (%"class.blink::Blob"*)*, i64 (%"class.blink::Blob"*)** %148, align 8
  %150 = call i64 %149(%"class.blink::Blob"* %57) #10
  %151 = load i32, i32* %129, align 4
  %152 = getelementptr inbounds %"class.WTF::Vector.795", %"class.WTF::Vector.795"* %126, i64 0, i32 0, i32 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = icmp eq i32 %151, %153
  br i1 %154, label %155, label %177, !prof !2

155:                                              ; preds = %140
  %156 = add i32 %151, 1
  %157 = lshr i32 %151, 2
  %158 = add i32 %156, %157
  %159 = icmp ugt i32 %158, 4
  %160 = select i1 %159, i32 %158, i32 4
  %161 = icmp ugt i32 %160, %156
  %162 = select i1 %161, i32 %160, i32 %156
  %163 = icmp ult i32 %151, %162
  br i1 %163, label %164, label %177, !prof !30

164:                                              ; preds = %155
  %165 = getelementptr inbounds %"class.WTF::Vector.795", %"class.WTF::Vector.795"* %126, i64 0, i32 0, i32 0, i32 0
  %166 = load %"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"** %165, align 8
  %167 = icmp eq %"class.blink::WebBlobInfo"* %166, null
  br i1 %167, label %168, label %176

168:                                              ; preds = %164
  %169 = zext i32 %162 to i64
  %170 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11WebBlobInfoEEEmm(i64 %169) #10
  %171 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %170, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11WebBlobInfoEEEPKcv, i64 0, i64 0)) #10
  %172 = ptrtoint i8* %171 to i64
  %173 = bitcast %"class.WTF::Vector.795"* %126 to i64*
  store atomic i64 %172, i64* %173 monotonic, align 8
  %174 = lshr i64 %170, 6
  %175 = trunc i64 %174 to i32
  store i32 %175, i32* %152, align 8
  br label %177

176:                                              ; preds = %164
  call void @_ZN3WTF6VectorIN5blink11WebBlobInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.795"* nonnull %126, i32 %162) #10
  br label %177

177:                                              ; preds = %140, %155, %168, %176
  %178 = getelementptr inbounds %"class.WTF::Vector.795", %"class.WTF::Vector.795"* %126, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"** %178, align 8
  %180 = load i32, i32* %129, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %179, i64 %181, i32 0
  %183 = bitcast i8* %182 to %"class.blink::WebBlobInfo"*
  %184 = bitcast %"class.blink::WebString"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #10
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %31, %"class.WTF::String"* nonnull dereferenceable(8) %37) #10
  call void @_ZN5blink11WebBlobInfoC1E13scoped_refptrINS_14BlobDataHandleEERKNS_9WebStringEm(%"class.blink::WebBlobInfo"* %183, %"class.blink::BlobDataHandle"* %131, %"class.blink::WebString"* nonnull dereferenceable(8) %31, i64 %150) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #10
  %185 = load i32, i32* %129, align 4
  %186 = add i32 %185, 1
  store i32 %186, i32* %129, align 4
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %202, label %189

189:                                              ; preds = %177
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  br i1 %193, label %196, label %198

196:                                              ; preds = %189
  %197 = add i32 %195, -1
  store i32 %197, i32* %194, align 4
  br label %198

198:                                              ; preds = %196, %189
  %199 = phi i32 [ %197, %196 ], [ %195, %189 ]
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %198
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %187) #10
  br label %202

202:                                              ; preds = %201, %198, %177
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #10
  store i8 105, i8* %30, align 1
  %203 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %203, i8* nonnull %30, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #10
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %203, i32 %130) #10
  br label %1201

204:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %29) #10
  store i8 98, i8* %29, align 1
  %205 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %205, i8* nonnull %29, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %29) #10
  %206 = bitcast %"class.WTF::String"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %206) #10
  %207 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %62, align 8
  %208 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %207, i64 0, i32 1
  %209 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %208) #10
  %210 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %209, %"class.WTF::StringImpl"** %210, align 8
  %211 = bitcast %"class.WTF::StringUTF8Adaptor"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %211) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %211, i8 -86, i64 40, i1 false) #10
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %28, %"class.WTF::String"* nonnull dereferenceable(8) %38, i32 0) #10
  %212 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %28, i64 0, i32 2
  %213 = load i32, i32* %212, align 8
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %205, i32 %213) #10
  %214 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %28, i64 0, i32 1
  %215 = load i8*, i8** %214, align 8
  %216 = load i32, i32* %212, align 8
  %217 = zext i32 %216 to i64
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %205, i8* %215, i64 %217) #10
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %211) #10
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %219 = icmp eq %"class.WTF::StringImpl"* %218, null
  br i1 %219, label %233, label %220

220:                                              ; preds = %204
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  br i1 %224, label %227, label %229

227:                                              ; preds = %220
  %228 = add i32 %226, -1
  store i32 %228, i32* %225, align 4
  br label %229

229:                                              ; preds = %227, %220
  %230 = phi i32 [ %228, %227 ], [ %226, %220 ]
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %218) #10
  br label %233

233:                                              ; preds = %204, %229, %232
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %206) #10
  %234 = bitcast %"class.WTF::String"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #10
  %235 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %62, align 8
  %236 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %235, i64 0, i32 2
  %237 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %236) #10
  %238 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %237, %"class.WTF::StringImpl"** %238, align 8
  %239 = bitcast %"class.WTF::StringUTF8Adaptor"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %239) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %239, i8 -86, i64 40, i1 false) #10
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %27, %"class.WTF::String"* nonnull dereferenceable(8) %39, i32 0) #10
  %240 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %27, i64 0, i32 2
  %241 = load i32, i32* %240, align 8
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %205, i32 %241) #10
  %242 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %27, i64 0, i32 1
  %243 = load i8*, i8** %242, align 8
  %244 = load i32, i32* %240, align 8
  %245 = zext i32 %244 to i64
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %205, i8* %243, i64 %245) #10
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %239) #10
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %261, label %248

248:                                              ; preds = %233
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %246) #10
  br label %261

261:                                              ; preds = %233, %257, %260
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #10
  %262 = bitcast %"class.blink::ScriptWrappable"* %1 to i64 (%"class.blink::Blob"*)***
  %263 = load i64 (%"class.blink::Blob"*)**, i64 (%"class.blink::Blob"*)*** %262, align 8
  %264 = getelementptr inbounds i64 (%"class.blink::Blob"*)*, i64 (%"class.blink::Blob"*)** %263, i64 9
  %265 = load i64 (%"class.blink::Blob"*)*, i64 (%"class.blink::Blob"*)** %264, align 8
  %266 = call i64 %265(%"class.blink::Blob"* %57) #10
  call void @_ZN2v815ValueSerializer11WriteUint64Em(%"class.v8::ValueSerializer"* %205, i64 %266) #10
  br label %1201

267:                                              ; preds = %3
  %268 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink6V8File18wrapper_type_info_E
  br i1 %268, label %269, label %277

269:                                              ; preds = %267
  %270 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 6
  %271 = load %"class.WTF::Vector.795"*, %"class.WTF::Vector.795"** %270, align 8
  %272 = icmp eq %"class.WTF::Vector.795"* %271, null
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %26) #10
  %273 = select i1 %272, i8 102, i8 101
  store i8 %273, i8* %26, align 1
  %274 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %274, i8* nonnull %26, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %26) #10
  %275 = bitcast %"class.blink::ScriptWrappable"* %1 to %"class.blink::File"*
  %276 = call zeroext i1 @_ZN5blink23V8ScriptValueSerializer9WriteFileEPNS_4FileERNS_14ExceptionStateE(%"class.blink::V8ScriptValueSerializer"* %0, %"class.blink::File"* %275, %"class.blink::ExceptionState"* dereferenceable(72) undef)
  br label %1201

277:                                              ; preds = %267
  %278 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink10V8FileList18wrapper_type_info_E
  br i1 %278, label %279, label %295

279:                                              ; preds = %277
  %280 = bitcast %"class.blink::ScriptWrappable"* %1 to %"class.blink::FileList"*
  %281 = getelementptr inbounds %"class.blink::FileList", %"class.blink::FileList"* %280, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %282 = load i32, i32* %281, align 4
  %283 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 6
  %284 = load %"class.WTF::Vector.795"*, %"class.WTF::Vector.795"** %283, align 8
  %285 = icmp eq %"class.WTF::Vector.795"* %284, null
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #10
  %286 = select i1 %285, i8 108, i8 76
  store i8 %286, i8* %25, align 1
  %287 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %287, i8* nonnull %25, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #10
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %287, i32 %282) #10
  %288 = icmp eq i32 %282, 0
  br i1 %288, label %1201, label %289

289:                                              ; preds = %279, %289
  %290 = phi i32 [ %293, %289 ], [ 0, %279 ]
  %291 = call %"class.blink::File"* @_ZNK5blink8FileList4itemEj(%"class.blink::FileList"* %280, i32 %290) #10
  %292 = call zeroext i1 @_ZN5blink23V8ScriptValueSerializer9WriteFileEPNS_4FileERNS_14ExceptionStateE(%"class.blink::V8ScriptValueSerializer"* %0, %"class.blink::File"* %291, %"class.blink::ExceptionState"* dereferenceable(72) undef)
  %293 = add nuw i32 %290, 1
  %294 = icmp eq i32 %293, %282
  br i1 %294, label %1201, label %289

295:                                              ; preds = %277
  %296 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink13V8ImageBitmap18wrapper_type_info_E
  br i1 %296, label %297, label %454

297:                                              ; preds = %295
  %298 = bitcast %"class.blink::ScriptWrappable"* %1 to %"class.blink::ImageBitmap"*
  %299 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2, i32 1
  %300 = bitcast %"class.blink::TraceWrapperV8Reference"* %299 to i8*
  %301 = load i8, i8* %300, align 8, !range !31
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %304, label %303

303:                                              ; preds = %297
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.20, i64 0, i64 0)) #10
  br label %1201

304:                                              ; preds = %297
  %305 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 1
  %306 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %305, align 8
  %307 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %306) #10
  %308 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 4
  %309 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %308, align 8
  %310 = icmp eq %"class.blink::Transferables"* %309, null
  br i1 %310, label %311, label %318

311:                                              ; preds = %304
  %312 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2
  %313 = bitcast %"class.blink::ScriptWrappable"* %312 to %"class.blink::StaticBitmapImage"**
  %314 = load %"class.blink::StaticBitmapImage"*, %"class.blink::StaticBitmapImage"** %313, align 8
  %315 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %314, i64 0, i32 2
  %316 = load i8, i8* %315, align 1, !range !31
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %422, label %365

318:                                              ; preds = %304
  %319 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %309, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %320 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %319, align 8
  %321 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %309, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %320, i64 %323
  %325 = icmp eq i32 %322, 0
  br i1 %325, label %334, label %326

326:                                              ; preds = %318, %331
  %327 = phi %"class.blink::Member.8"* [ %332, %331 ], [ %320, %318 ]
  %328 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %327, i64 0, i32 0, i32 0
  %329 = load %"class.blink::ImageBitmap"*, %"class.blink::ImageBitmap"** %328, align 8
  %330 = icmp eq %"class.blink::ImageBitmap"* %329, %298
  br i1 %330, label %341, label %331

331:                                              ; preds = %326
  %332 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %327, i64 1
  %333 = icmp ult %"class.blink::Member.8"* %332, %324
  br i1 %333, label %326, label %334

334:                                              ; preds = %331, %318
  %335 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2
  %336 = bitcast %"class.blink::ScriptWrappable"* %335 to %"class.blink::StaticBitmapImage"**
  %337 = load %"class.blink::StaticBitmapImage"*, %"class.blink::StaticBitmapImage"** %336, align 8
  %338 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %337, i64 0, i32 2
  %339 = load i8, i8* %338, align 1, !range !31
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %422, label %365

341:                                              ; preds = %326
  %342 = ptrtoint %"class.blink::Member.8"* %327 to i64
  %343 = ptrtoint %"class.blink::Member.8"* %320 to i64
  %344 = sub i64 %342, %343
  %345 = lshr exact i64 %344, 3
  %346 = and i64 %344, 34359738360
  %347 = icmp eq i64 %346, 34359738360
  %348 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2
  %349 = bitcast %"class.blink::ScriptWrappable"* %348 to %"class.blink::StaticBitmapImage"**
  %350 = load %"class.blink::StaticBitmapImage"*, %"class.blink::StaticBitmapImage"** %349, align 8
  %351 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %350, i64 0, i32 2
  %352 = load i8, i8* %351, align 1, !range !31
  %353 = icmp ne i8 %352, 0
  br i1 %347, label %364, label %354

354:                                              ; preds = %341
  br i1 %353, label %355, label %363

355:                                              ; preds = %354
  %356 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %307, i64 0, i32 3
  %357 = bitcast %"class.blink::UseCounter"* %356 to void (%"class.blink::UseCounter"*, i32)***
  %358 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %357, align 8
  %359 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %358, i64 3
  %360 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %359, align 8
  tail call void %360(%"class.blink::UseCounter"* %356, i32 3058) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24) #10
  store i8 71, i8* %24, align 1
  %361 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %361, i8* nonnull %24, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24) #10
  %362 = trunc i64 %345 to i32
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %361, i32 %362) #10
  br label %1201

363:                                              ; preds = %354
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21, i64 0, i64 0)) #10
  br label %1201

364:                                              ; preds = %341
  br i1 %353, label %365, label %422

365:                                              ; preds = %334, %311, %364
  %366 = phi %"class.blink::StaticBitmapImage"** [ %313, %311 ], [ %349, %364 ], [ %336, %334 ]
  %367 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %307, i64 0, i32 3
  %368 = bitcast %"class.blink::UseCounter"* %367 to void (%"class.blink::UseCounter"*, i32)***
  %369 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %368, align 8
  %370 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %369, i64 3
  %371 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %370, align 8
  tail call void %371(%"class.blink::UseCounter"* %367, i32 3056) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #10
  store i8 103, i8* %23, align 1
  %372 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %372, i8* nonnull %23, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #10
  %373 = bitcast %struct.SkImageInfo* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %373) #10
  %374 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %40, i64 0, i32 0, i32 0, i32 0
  %375 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %40, i64 0, i32 0, i32 1
  %376 = bitcast %struct.SkImageInfo* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %376, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink11ImageBitmap20GetBitmapSkImageInfoEv(%struct.SkImageInfo* nonnull sret %40, %"class.blink::ImageBitmap"* %298) #10
  %377 = bitcast %"class.blink::SerializedImageBitmapSettings"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %377) #10
  %378 = getelementptr inbounds %"class.blink::SerializedImageBitmapSettings", %"class.blink::SerializedImageBitmapSettings"* %41, i64 0, i32 0
  %379 = getelementptr inbounds %"class.blink::SerializedImageBitmapSettings", %"class.blink::SerializedImageBitmapSettings"* %41, i64 0, i32 1
  %380 = getelementptr inbounds %"class.blink::SerializedImageBitmapSettings", %"class.blink::SerializedImageBitmapSettings"* %41, i64 0, i32 2
  %381 = getelementptr inbounds %"class.blink::SerializedImageBitmapSettings", %"class.blink::SerializedImageBitmapSettings"* %41, i64 0, i32 3
  %382 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %42, i64 0, i32 0, i32 0, i32 0
  %383 = bitcast %"class.blink::SerializedImageBitmapSettings"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %383, i8 -86, i64 16, i1 false)
  %384 = load %class.SkColorSpace*, %class.SkColorSpace** %374, align 8
  %385 = icmp eq %class.SkColorSpace* %384, null
  br i1 %385, label %389, label %386

386:                                              ; preds = %365
  %387 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %384, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = atomicrmw add i32* %387, i32 1 monotonic
  br label %389

389:                                              ; preds = %365, %386
  store %class.SkColorSpace* %384, %class.SkColorSpace** %382, align 8
  %390 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %42, i64 0, i32 0, i32 1
  %391 = bitcast i32* %375 to <2 x i64>*
  %392 = load <2 x i64>, <2 x i64>* %391, align 8
  %393 = bitcast i32* %390 to <2 x i64>*
  store <2 x i64> %392, <2 x i64>* %393, align 8
  call void @_ZN5blink29SerializedImageBitmapSettingsC1E11SkImageInfo(%"class.blink::SerializedImageBitmapSettings"* nonnull %41, %struct.SkImageInfo* nonnull %42) #10
  %394 = load %class.SkColorSpace*, %class.SkColorSpace** %382, align 8
  %395 = icmp eq %class.SkColorSpace* %394, null
  br i1 %395, label %402, label %396

396:                                              ; preds = %389
  %397 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %394, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %398 = atomicrmw add i32* %397, i32 -1 acq_rel
  %399 = icmp eq i32 %398, 1
  br i1 %399, label %400, label %402

400:                                              ; preds = %396
  %401 = bitcast %class.SkColorSpace* %394 to i8*
  call void @_ZdlPv(i8* %401) #11
  br label %402

402:                                              ; preds = %389, %396, %400
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %372, i32 1) #10
  %403 = load i32, i32* %378, align 4
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %372, i32 %403) #10
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %372, i32 2) #10
  %404 = load i32, i32* %379, align 4
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %372, i32 %404) #10
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %372, i32 6) #10
  %405 = load i32, i32* %380, align 4
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %372, i32 %405) #10
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %372, i32 4) #10
  %406 = load %"class.blink::StaticBitmapImage"*, %"class.blink::StaticBitmapImage"** %366, align 8
  %407 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %406, i64 0, i32 2
  %408 = load i8, i8* %407, align 1, !range !31
  %409 = zext i8 %408 to i32
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %372, i32 %409) #10
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %372, i32 5) #10
  %410 = load i8, i8* %381, align 4, !range !31
  %411 = zext i8 %410 to i32
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %372, i32 %411) #10
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %372, i32 0) #10
  %412 = call i32 @_ZNK5blink11ImageBitmap5widthEv(%"class.blink::ImageBitmap"* %298) #10
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %372, i32 %412) #10
  %413 = call i32 @_ZNK5blink11ImageBitmap6heightEv(%"class.blink::ImageBitmap"* %298) #10
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %372, i32 %413) #10
  %414 = bitcast %"class.WTF::Vector.841"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %414) #10
  %415 = getelementptr inbounds %"class.WTF::Vector.841", %"class.WTF::Vector.841"* %43, i64 0, i32 0, i32 0, i32 0
  %416 = getelementptr inbounds %"class.WTF::Vector.841", %"class.WTF::Vector.841"* %43, i64 0, i32 0, i32 0, i32 2
  %417 = bitcast %"class.WTF::Vector.841"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %417, i8 -86, i64 16, i1 false)
  call void @_ZN5blink11ImageBitmap14CopyBitmapDataERK11SkImageInfob(%"class.WTF::Vector.841"* nonnull sret %43, %"class.blink::ImageBitmap"* %298, %struct.SkImageInfo* nonnull dereferenceable(24) %40, i1 zeroext false) #10
  %418 = call i32 @_ZNK5blink11ImageBitmap5widthEv(%"class.blink::ImageBitmap"* %298) #10
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %423

420:                                              ; preds = %402
  %421 = load i32, i32* %416, align 4
  br label %430

422:                                              ; preds = %334, %311, %364
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.22, i64 0, i64 0)) #10
  br label %1201

423:                                              ; preds = %402
  %424 = call i32 @_ZNK5blink11ImageBitmap6heightEv(%"class.blink::ImageBitmap"* %298) #10
  %425 = icmp ne i32 %424, 0
  %426 = load i32, i32* %416, align 4
  %427 = icmp eq i32 %426, 0
  %428 = and i1 %425, %427
  br i1 %428, label %429, label %430

429:                                              ; preds = %423
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.23, i64 0, i64 0)) #10
  br label %435

430:                                              ; preds = %420, %423
  %431 = phi i32 [ %421, %420 ], [ %426, %423 ]
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %372, i32 %431) #10
  %432 = load i8*, i8** %415, align 8
  %433 = load i32, i32* %416, align 4
  %434 = zext i32 %433 to i64
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %372, i8* %432, i64 %434) #10
  br label %435

435:                                              ; preds = %430, %429
  %436 = phi i1 [ false, %429 ], [ true, %430 ]
  %437 = load i8*, i8** %415, align 8
  %438 = icmp eq i8* %437, null
  br i1 %438, label %444, label %439, !prof !30

439:                                              ; preds = %435
  %440 = load i32, i32* %416, align 4
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %443, label %442, !prof !2

442:                                              ; preds = %439
  store i32 0, i32* %416, align 4
  br label %443

443:                                              ; preds = %442, %439
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %437) #10
  store i8* null, i8** %415, align 8
  br label %444

444:                                              ; preds = %435, %443
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %414) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %377) #10
  %445 = load %class.SkColorSpace*, %class.SkColorSpace** %374, align 8
  %446 = icmp eq %class.SkColorSpace* %445, null
  br i1 %446, label %453, label %447

447:                                              ; preds = %444
  %448 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %445, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %449 = atomicrmw add i32* %448, i32 -1 acq_rel
  %450 = icmp eq i32 %449, 1
  br i1 %450, label %451, label %453

451:                                              ; preds = %447
  %452 = bitcast %class.SkColorSpace* %445 to i8*
  call void @_ZdlPv(i8* %452) #11
  br label %453

453:                                              ; preds = %444, %447, %451
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %373) #10
  br label %1201

454:                                              ; preds = %295
  %455 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink11V8ImageData18wrapper_type_info_E
  br i1 %455, label %456, label %492

456:                                              ; preds = %454
  %457 = bitcast %"class.blink::ScriptWrappable"* %1 to %"class.blink::ImageData"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %21) #10
  store i8 35, i8* %21, align 1
  %458 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %458, i8* nonnull %21, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %21) #10
  %459 = bitcast %"class.blink::SerializedImageDataSettings"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %459) #10
  %460 = getelementptr inbounds %"class.blink::SerializedImageDataSettings", %"class.blink::SerializedImageDataSettings"* %44, i64 0, i32 0
  store i32 -1431655766, i32* %460, align 4
  %461 = getelementptr inbounds %"class.blink::SerializedImageDataSettings", %"class.blink::SerializedImageDataSettings"* %44, i64 0, i32 1
  store i32 -1431655766, i32* %461, align 4
  %462 = call i32 @_ZNK5blink9ImageData19GetCanvasColorSpaceEv(%"class.blink::ImageData"* %457) #10
  %463 = call i32 @_ZNK5blink9ImageData25GetImageDataStorageFormatEv(%"class.blink::ImageData"* %457) #10
  call void @_ZN5blink27SerializedImageDataSettingsC1ENS_16CanvasColorSpaceENS_22ImageDataStorageFormatE(%"class.blink::SerializedImageDataSettings"* nonnull %44, i32 %462, i32 %463) #10
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %458, i32 1) #10
  %464 = load i32, i32* %460, align 4
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %458, i32 %464) #10
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %458, i32 3) #10
  %465 = load i32, i32* %461, align 4
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %458, i32 %465) #10
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %458, i32 0) #10
  %466 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1, i32 1
  %467 = bitcast %"class.blink::TraceWrapperV8Reference"* %466 to i32*
  %468 = load i32, i32* %467, align 4
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %458, i32 %468) #10
  %469 = getelementptr inbounds %"class.blink::ImageData", %"class.blink::ImageData"* %457, i64 0, i32 2, i32 1
  %470 = load i32, i32* %469, align 4
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %458, i32 %470) #10
  %471 = call zeroext i1 @_ZNK5blink9ImageData20IsBufferBaseDetachedEv(%"class.blink::ImageData"* %457) #10
  br i1 %471, label %472, label %473

472:                                              ; preds = %456
  call void @_ZN2v815ValueSerializer11WriteUint64Em(%"class.v8::ValueSerializer"* %458, i64 0) #10
  br label %491

473:                                              ; preds = %456
  %474 = bitcast %class.SkPixmap* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %474) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %474, i8 -86, i64 40, i1 false)
  call void @_ZNK5blink9ImageData11GetSkPixmapEv(%class.SkPixmap* nonnull sret %45, %"class.blink::ImageData"* %457) #10
  %475 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %45, i64 0, i32 2
  %476 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %45, i64 0, i32 1
  %477 = load i64, i64* %476, align 8
  %478 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %475, i64 %477) #10
  call void @_ZN2v815ValueSerializer11WriteUint64Em(%"class.v8::ValueSerializer"* %458, i64 %478) #10
  %479 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %45, i64 0, i32 0
  %480 = load i8*, i8** %479, align 8
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %458, i8* %480, i64 %478) #10
  %481 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %45, i64 0, i32 2, i32 0, i32 0, i32 0
  %482 = load %class.SkColorSpace*, %class.SkColorSpace** %481, align 8
  %483 = icmp eq %class.SkColorSpace* %482, null
  br i1 %483, label %490, label %484

484:                                              ; preds = %473
  %485 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %482, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %486 = atomicrmw add i32* %485, i32 -1 acq_rel
  %487 = icmp eq i32 %486, 1
  br i1 %487, label %488, label %490

488:                                              ; preds = %484
  %489 = bitcast %class.SkColorSpace* %482 to i8*
  call void @_ZdlPv(i8* %489) #11
  br label %490

490:                                              ; preds = %473, %484, %488
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %474) #10
  br label %491

491:                                              ; preds = %490, %472
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %459) #10
  br label %1201

492:                                              ; preds = %454
  %493 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink10V8DOMPoint18wrapper_type_info_E
  br i1 %493, label %494, label %508

494:                                              ; preds = %492
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #10
  store i8 81, i8* %18, align 1
  %495 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %495, i8* nonnull %18, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #10
  %496 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1
  %497 = bitcast %"class.blink::ScriptWrappable"* %496 to double*
  %498 = load double, double* %497, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %495, double %498) #10
  %499 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1, i32 1
  %500 = bitcast %"class.blink::TraceWrapperV8Reference"* %499 to double*
  %501 = load double, double* %500, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %495, double %501) #10
  %502 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2
  %503 = bitcast %"class.blink::ScriptWrappable"* %502 to double*
  %504 = load double, double* %503, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %495, double %504) #10
  %505 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2, i32 1
  %506 = bitcast %"class.blink::TraceWrapperV8Reference"* %505 to double*
  %507 = load double, double* %506, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %495, double %507) #10
  br label %1201

508:                                              ; preds = %492
  %509 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink18V8DOMPointReadOnly18wrapper_type_info_E
  br i1 %509, label %510, label %524

510:                                              ; preds = %508
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #10
  store i8 87, i8* %15, align 1
  %511 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %511, i8* nonnull %15, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #10
  %512 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1
  %513 = bitcast %"class.blink::ScriptWrappable"* %512 to double*
  %514 = load double, double* %513, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %511, double %514) #10
  %515 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1, i32 1
  %516 = bitcast %"class.blink::TraceWrapperV8Reference"* %515 to double*
  %517 = load double, double* %516, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %511, double %517) #10
  %518 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2
  %519 = bitcast %"class.blink::ScriptWrappable"* %518 to double*
  %520 = load double, double* %519, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %511, double %520) #10
  %521 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2, i32 1
  %522 = bitcast %"class.blink::TraceWrapperV8Reference"* %521 to double*
  %523 = load double, double* %522, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %511, double %523) #10
  br label %1201

524:                                              ; preds = %508
  %525 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink9V8DOMRect18wrapper_type_info_E
  br i1 %525, label %526, label %540

526:                                              ; preds = %524
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #10
  store i8 69, i8* %13, align 1
  %527 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %527, i8* nonnull %13, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #10
  %528 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1
  %529 = bitcast %"class.blink::ScriptWrappable"* %528 to double*
  %530 = load double, double* %529, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %527, double %530) #10
  %531 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1, i32 1
  %532 = bitcast %"class.blink::TraceWrapperV8Reference"* %531 to double*
  %533 = load double, double* %532, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %527, double %533) #10
  %534 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2
  %535 = bitcast %"class.blink::ScriptWrappable"* %534 to double*
  %536 = load double, double* %535, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %527, double %536) #10
  %537 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2, i32 1
  %538 = bitcast %"class.blink::TraceWrapperV8Reference"* %537 to double*
  %539 = load double, double* %538, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %527, double %539) #10
  br label %1201

540:                                              ; preds = %524
  %541 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink17V8DOMRectReadOnly18wrapper_type_info_E
  br i1 %541, label %542, label %556

542:                                              ; preds = %540
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #10
  store i8 82, i8* %12, align 1
  %543 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %543, i8* nonnull %12, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #10
  %544 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1
  %545 = bitcast %"class.blink::ScriptWrappable"* %544 to double*
  %546 = load double, double* %545, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %543, double %546) #10
  %547 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1, i32 1
  %548 = bitcast %"class.blink::TraceWrapperV8Reference"* %547 to double*
  %549 = load double, double* %548, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %543, double %549) #10
  %550 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2
  %551 = bitcast %"class.blink::ScriptWrappable"* %550 to double*
  %552 = load double, double* %551, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %543, double %552) #10
  %553 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2, i32 1
  %554 = bitcast %"class.blink::TraceWrapperV8Reference"* %553 to double*
  %555 = load double, double* %554, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %543, double %555) #10
  br label %1201

556:                                              ; preds = %540
  %557 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink9V8DOMQuad18wrapper_type_info_E
  br i1 %557, label %558, label %604

558:                                              ; preds = %556
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #10
  store i8 84, i8* %9, align 1
  %559 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %559, i8* nonnull %9, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #10
  %560 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1
  %561 = bitcast %"class.blink::ScriptWrappable"* %560 to %"class.blink::DOMPointReadOnly"**
  %562 = load %"class.blink::DOMPointReadOnly"*, %"class.blink::DOMPointReadOnly"** %561, align 8
  %563 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1, i32 1
  %564 = bitcast %"class.blink::TraceWrapperV8Reference"* %563 to %"class.blink::DOMPointReadOnly"**
  %565 = load %"class.blink::DOMPointReadOnly"*, %"class.blink::DOMPointReadOnly"** %564, align 8
  %566 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2
  %567 = bitcast %"class.blink::ScriptWrappable"* %566 to %"class.blink::DOMPointReadOnly"**
  %568 = load %"class.blink::DOMPointReadOnly"*, %"class.blink::DOMPointReadOnly"** %567, align 8
  %569 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2, i32 1
  %570 = bitcast %"class.blink::TraceWrapperV8Reference"* %569 to %"class.blink::DOMPointReadOnly"**
  %571 = load %"class.blink::DOMPointReadOnly"*, %"class.blink::DOMPointReadOnly"** %570, align 8
  %572 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %562, i64 0, i32 1
  %573 = load double, double* %572, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %573) #10
  %574 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %562, i64 0, i32 2
  %575 = load double, double* %574, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %575) #10
  %576 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %562, i64 0, i32 3
  %577 = load double, double* %576, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %577) #10
  %578 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %562, i64 0, i32 4
  %579 = load double, double* %578, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %579) #10
  %580 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %565, i64 0, i32 1
  %581 = load double, double* %580, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %581) #10
  %582 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %565, i64 0, i32 2
  %583 = load double, double* %582, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %583) #10
  %584 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %565, i64 0, i32 3
  %585 = load double, double* %584, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %585) #10
  %586 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %565, i64 0, i32 4
  %587 = load double, double* %586, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %587) #10
  %588 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %568, i64 0, i32 1
  %589 = load double, double* %588, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %589) #10
  %590 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %568, i64 0, i32 2
  %591 = load double, double* %590, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %591) #10
  %592 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %568, i64 0, i32 3
  %593 = load double, double* %592, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %593) #10
  %594 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %568, i64 0, i32 4
  %595 = load double, double* %594, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %595) #10
  %596 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %571, i64 0, i32 1
  %597 = load double, double* %596, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %597) #10
  %598 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %571, i64 0, i32 2
  %599 = load double, double* %598, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %599) #10
  %600 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %571, i64 0, i32 3
  %601 = load double, double* %600, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %601) #10
  %602 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %571, i64 0, i32 4
  %603 = load double, double* %602, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %559, double %603) #10
  br label %1201

604:                                              ; preds = %556
  %605 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink11V8DOMMatrix18wrapper_type_info_E
  br i1 %605, label %606, label %679

606:                                              ; preds = %604
  %607 = bitcast %"class.blink::ScriptWrappable"* %1 to %"class.blink::DOMMatrixReadOnly"*
  %608 = tail call zeroext i1 @_ZNK5blink17DOMMatrixReadOnly4is2DEv(%"class.blink::DOMMatrixReadOnly"* %607) #10
  br i1 %608, label %609, label %629

609:                                              ; preds = %606
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #10
  store i8 73, i8* %7, align 1
  %610 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %610, i8* nonnull %7, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  %611 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1
  %612 = bitcast %"class.blink::ScriptWrappable"* %611 to double*
  %613 = load double, double* %612, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %610, double %613) #10
  %614 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1, i32 1
  %615 = bitcast %"class.blink::TraceWrapperV8Reference"* %614 to double*
  %616 = load double, double* %615, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %610, double %616) #10
  %617 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 3
  %618 = bitcast %"class.blink::ScriptWrappable"* %617 to double*
  %619 = load double, double* %618, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %610, double %619) #10
  %620 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 3, i32 1
  %621 = bitcast %"class.blink::TraceWrapperV8Reference"* %620 to double*
  %622 = load double, double* %621, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %610, double %622) #10
  %623 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 7
  %624 = bitcast %"class.blink::ScriptWrappable"* %623 to double*
  %625 = load double, double* %624, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %610, double %625) #10
  %626 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 7, i32 1
  %627 = bitcast %"class.blink::TraceWrapperV8Reference"* %626 to double*
  %628 = load double, double* %627, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %610, double %628) #10
  br label %1201

629:                                              ; preds = %606
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #10
  store i8 89, i8* %5, align 1
  %630 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %630, i8* nonnull %5, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  %631 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1
  %632 = bitcast %"class.blink::ScriptWrappable"* %631 to double*
  %633 = load double, double* %632, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %633) #10
  %634 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1, i32 1
  %635 = bitcast %"class.blink::TraceWrapperV8Reference"* %634 to double*
  %636 = load double, double* %635, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %636) #10
  %637 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2
  %638 = bitcast %"class.blink::ScriptWrappable"* %637 to double*
  %639 = load double, double* %638, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %639) #10
  %640 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2, i32 1
  %641 = bitcast %"class.blink::TraceWrapperV8Reference"* %640 to double*
  %642 = load double, double* %641, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %642) #10
  %643 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 3
  %644 = bitcast %"class.blink::ScriptWrappable"* %643 to double*
  %645 = load double, double* %644, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %645) #10
  %646 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 3, i32 1
  %647 = bitcast %"class.blink::TraceWrapperV8Reference"* %646 to double*
  %648 = load double, double* %647, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %648) #10
  %649 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 4
  %650 = bitcast %"class.blink::ScriptWrappable"* %649 to double*
  %651 = load double, double* %650, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %651) #10
  %652 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 4, i32 1
  %653 = bitcast %"class.blink::TraceWrapperV8Reference"* %652 to double*
  %654 = load double, double* %653, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %654) #10
  %655 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 5
  %656 = bitcast %"class.blink::ScriptWrappable"* %655 to double*
  %657 = load double, double* %656, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %657) #10
  %658 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 5, i32 1
  %659 = bitcast %"class.blink::TraceWrapperV8Reference"* %658 to double*
  %660 = load double, double* %659, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %660) #10
  %661 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 6
  %662 = bitcast %"class.blink::ScriptWrappable"* %661 to double*
  %663 = load double, double* %662, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %663) #10
  %664 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 6, i32 1
  %665 = bitcast %"class.blink::TraceWrapperV8Reference"* %664 to double*
  %666 = load double, double* %665, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %666) #10
  %667 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 7
  %668 = bitcast %"class.blink::ScriptWrappable"* %667 to double*
  %669 = load double, double* %668, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %669) #10
  %670 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 7, i32 1
  %671 = bitcast %"class.blink::TraceWrapperV8Reference"* %670 to double*
  %672 = load double, double* %671, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %672) #10
  %673 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 8
  %674 = bitcast %"class.blink::ScriptWrappable"* %673 to double*
  %675 = load double, double* %674, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %675) #10
  %676 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 8, i32 1
  %677 = bitcast %"class.blink::TraceWrapperV8Reference"* %676 to double*
  %678 = load double, double* %677, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %630, double %678) #10
  br label %1201

679:                                              ; preds = %604
  %680 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink19V8DOMMatrixReadOnly18wrapper_type_info_E
  br i1 %680, label %681, label %754

681:                                              ; preds = %679
  %682 = bitcast %"class.blink::ScriptWrappable"* %1 to %"class.blink::DOMMatrixReadOnly"*
  %683 = tail call zeroext i1 @_ZNK5blink17DOMMatrixReadOnly4is2DEv(%"class.blink::DOMMatrixReadOnly"* %682) #10
  br i1 %683, label %684, label %704

684:                                              ; preds = %681
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 79, i8* %4, align 1
  %685 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %685, i8* nonnull %4, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  %686 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1
  %687 = bitcast %"class.blink::ScriptWrappable"* %686 to double*
  %688 = load double, double* %687, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %685, double %688) #10
  %689 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1, i32 1
  %690 = bitcast %"class.blink::TraceWrapperV8Reference"* %689 to double*
  %691 = load double, double* %690, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %685, double %691) #10
  %692 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 3
  %693 = bitcast %"class.blink::ScriptWrappable"* %692 to double*
  %694 = load double, double* %693, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %685, double %694) #10
  %695 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 3, i32 1
  %696 = bitcast %"class.blink::TraceWrapperV8Reference"* %695 to double*
  %697 = load double, double* %696, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %685, double %697) #10
  %698 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 7
  %699 = bitcast %"class.blink::ScriptWrappable"* %698 to double*
  %700 = load double, double* %699, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %685, double %700) #10
  %701 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 7, i32 1
  %702 = bitcast %"class.blink::TraceWrapperV8Reference"* %701 to double*
  %703 = load double, double* %702, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %685, double %703) #10
  br label %1201

704:                                              ; preds = %681
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #10
  store i8 85, i8* %6, align 1
  %705 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %705, i8* nonnull %6, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  %706 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1
  %707 = bitcast %"class.blink::ScriptWrappable"* %706 to double*
  %708 = load double, double* %707, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %708) #10
  %709 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1, i32 1
  %710 = bitcast %"class.blink::TraceWrapperV8Reference"* %709 to double*
  %711 = load double, double* %710, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %711) #10
  %712 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2
  %713 = bitcast %"class.blink::ScriptWrappable"* %712 to double*
  %714 = load double, double* %713, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %714) #10
  %715 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2, i32 1
  %716 = bitcast %"class.blink::TraceWrapperV8Reference"* %715 to double*
  %717 = load double, double* %716, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %717) #10
  %718 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 3
  %719 = bitcast %"class.blink::ScriptWrappable"* %718 to double*
  %720 = load double, double* %719, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %720) #10
  %721 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 3, i32 1
  %722 = bitcast %"class.blink::TraceWrapperV8Reference"* %721 to double*
  %723 = load double, double* %722, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %723) #10
  %724 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 4
  %725 = bitcast %"class.blink::ScriptWrappable"* %724 to double*
  %726 = load double, double* %725, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %726) #10
  %727 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 4, i32 1
  %728 = bitcast %"class.blink::TraceWrapperV8Reference"* %727 to double*
  %729 = load double, double* %728, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %729) #10
  %730 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 5
  %731 = bitcast %"class.blink::ScriptWrappable"* %730 to double*
  %732 = load double, double* %731, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %732) #10
  %733 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 5, i32 1
  %734 = bitcast %"class.blink::TraceWrapperV8Reference"* %733 to double*
  %735 = load double, double* %734, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %735) #10
  %736 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 6
  %737 = bitcast %"class.blink::ScriptWrappable"* %736 to double*
  %738 = load double, double* %737, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %738) #10
  %739 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 6, i32 1
  %740 = bitcast %"class.blink::TraceWrapperV8Reference"* %739 to double*
  %741 = load double, double* %740, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %741) #10
  %742 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 7
  %743 = bitcast %"class.blink::ScriptWrappable"* %742 to double*
  %744 = load double, double* %743, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %744) #10
  %745 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 7, i32 1
  %746 = bitcast %"class.blink::TraceWrapperV8Reference"* %745 to double*
  %747 = load double, double* %746, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %747) #10
  %748 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 8
  %749 = bitcast %"class.blink::ScriptWrappable"* %748 to double*
  %750 = load double, double* %749, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %750) #10
  %751 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 8, i32 1
  %752 = bitcast %"class.blink::TraceWrapperV8Reference"* %751 to double*
  %753 = load double, double* %752, align 8
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %705, double %753) #10
  br label %1201

754:                                              ; preds = %679
  %755 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink13V8MessagePort18wrapper_type_info_E
  br i1 %755, label %756, label %788

756:                                              ; preds = %754
  %757 = bitcast %"class.blink::ScriptWrappable"* %1 to %"class.blink::MessagePort"*
  %758 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 4
  %759 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %758, align 8
  %760 = icmp eq %"class.blink::Transferables"* %759, null
  br i1 %760, label %783, label %761

761:                                              ; preds = %756
  %762 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %759, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %763 = load %"class.blink::Member.345"*, %"class.blink::Member.345"** %762, align 8
  %764 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %759, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %765 = load i32, i32* %764, align 4
  %766 = zext i32 %765 to i64
  %767 = getelementptr inbounds %"class.blink::Member.345", %"class.blink::Member.345"* %763, i64 %766
  %768 = icmp eq i32 %765, 0
  br i1 %768, label %783, label %769

769:                                              ; preds = %761, %774
  %770 = phi %"class.blink::Member.345"* [ %775, %774 ], [ %763, %761 ]
  %771 = getelementptr inbounds %"class.blink::Member.345", %"class.blink::Member.345"* %770, i64 0, i32 0, i32 0
  %772 = load %"class.blink::MessagePort"*, %"class.blink::MessagePort"** %771, align 8
  %773 = icmp eq %"class.blink::MessagePort"* %772, %757
  br i1 %773, label %777, label %774

774:                                              ; preds = %769
  %775 = getelementptr inbounds %"class.blink::Member.345", %"class.blink::Member.345"* %770, i64 1
  %776 = icmp ult %"class.blink::Member.345"* %775, %767
  br i1 %776, label %769, label %783

777:                                              ; preds = %769
  %778 = ptrtoint %"class.blink::Member.345"* %770 to i64
  %779 = ptrtoint %"class.blink::Member.345"* %763 to i64
  %780 = sub i64 %778, %779
  %781 = and i64 %780, 34359738360
  %782 = icmp eq i64 %781, 34359738360
  br i1 %782, label %783, label %784

783:                                              ; preds = %774, %761, %756, %777
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.24, i64 0, i64 0)) #10
  br label %1201

784:                                              ; preds = %777
  %785 = lshr exact i64 %780, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #10
  store i8 77, i8* %8, align 1
  %786 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %786, i8* nonnull %8, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #10
  %787 = trunc i64 %785 to i32
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %786, i32 %787) #10
  br label %1201

788:                                              ; preds = %754
  %789 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink12V8MojoHandle18wrapper_type_info_E
  br i1 %789, label %790, label %853

790:                                              ; preds = %788
  %791 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase19is_mojo_js_enabled_E, align 1, !range !31
  %792 = icmp eq i8 %791, 0
  br i1 %792, label %1201, label %793

793:                                              ; preds = %790
  %794 = bitcast %"class.blink::ScriptWrappable"* %1 to %"class.blink::MojoHandle"*
  %795 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 4
  %796 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %795, align 8
  %797 = icmp eq %"class.blink::Transferables"* %796, null
  br i1 %797, label %821, label %798

798:                                              ; preds = %793
  %799 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %796, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %800 = load %"class.blink::Member.353"*, %"class.blink::Member.353"** %799, align 8
  %801 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %796, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %802 = load i32, i32* %801, align 4
  %803 = zext i32 %802 to i64
  %804 = getelementptr inbounds %"class.blink::Member.353", %"class.blink::Member.353"* %800, i64 %803
  %805 = icmp eq i32 %802, 0
  br i1 %805, label %821, label %806

806:                                              ; preds = %798, %811
  %807 = phi %"class.blink::Member.353"* [ %812, %811 ], [ %800, %798 ]
  %808 = getelementptr inbounds %"class.blink::Member.353", %"class.blink::Member.353"* %807, i64 0, i32 0, i32 0
  %809 = load %"class.blink::MojoHandle"*, %"class.blink::MojoHandle"** %808, align 8
  %810 = icmp eq %"class.blink::MojoHandle"* %809, %794
  br i1 %810, label %814, label %811

811:                                              ; preds = %806
  %812 = getelementptr inbounds %"class.blink::Member.353", %"class.blink::Member.353"* %807, i64 1
  %813 = icmp ult %"class.blink::Member.353"* %812, %804
  br i1 %813, label %806, label %821

814:                                              ; preds = %806
  %815 = ptrtoint %"class.blink::Member.353"* %807 to i64
  %816 = ptrtoint %"class.blink::Member.353"* %800 to i64
  %817 = sub i64 %815, %816
  %818 = lshr exact i64 %817, 3
  %819 = trunc i64 %818 to i32
  %820 = icmp eq i32 %819, -1
  br i1 %820, label %821, label %822

821:                                              ; preds = %811, %798, %793, %814
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.25, i64 0, i64 0)) #10
  br label %1201

822:                                              ; preds = %814
  %823 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 2, i32 0
  %824 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %823, align 8
  %825 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %824, i64 0, i32 10
  %826 = bitcast %"class.mojo::ScopedHandleBase.509"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %826) #10
  call void @_ZN5blink10MojoHandle10TakeHandleEv(%"class.mojo::ScopedHandleBase.509"* nonnull sret %46, %"class.blink::MojoHandle"* %794) #10
  %827 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %824, i64 0, i32 10, i32 0, i32 0, i32 2
  %828 = load i32, i32* %827, align 4
  %829 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %824, i64 0, i32 10, i32 0, i32 0, i32 1
  %830 = load i32, i32* %829, align 8
  %831 = icmp eq i32 %828, %830
  br i1 %831, label %841, label %832, !prof !2

832:                                              ; preds = %822
  %833 = getelementptr inbounds %"class.WTF::Vector.780", %"class.WTF::Vector.780"* %825, i64 0, i32 0, i32 0, i32 0
  %834 = load %"class.mojo::ScopedHandleBase.509"*, %"class.mojo::ScopedHandleBase.509"** %833, align 8
  %835 = zext i32 %828 to i64
  %836 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %834, i64 %835, i32 0, i32 0
  %837 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %46, i64 0, i32 0, i32 0
  %838 = load i32, i32* %837, align 4, !noalias !32
  store i32 %838, i32* %836, align 4, !alias.scope !32
  store i32 0, i32* %837, align 4, !noalias !32
  %839 = load i32, i32* %827, align 4
  %840 = add i32 %839, 1
  store i32 %840, i32* %827, align 4
  br label %847

841:                                              ; preds = %822
  call void @_ZN3WTF6VectorIN4mojo16ScopedHandleBaseINS1_6HandleEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.780"* %825, %"class.mojo::ScopedHandleBase.509"* nonnull dereferenceable(4) %46) #10
  %842 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %46, i64 0, i32 0, i32 0
  %843 = load i32, i32* %842, align 4
  %844 = icmp eq i32 %843, 0
  br i1 %844, label %847, label %845

845:                                              ; preds = %841
  %846 = call i32 @MojoClose(i32 %843) #10
  br label %847

847:                                              ; preds = %832, %841, %845
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %826) #10
  %848 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %823, align 8
  %849 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %848, i64 0, i32 10, i32 0, i32 0, i32 2
  %850 = load i32, i32* %849, align 4
  %851 = add i32 %850, -1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #10
  store i8 104, i8* %10, align 1
  %852 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %852, i8* nonnull %10, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #10
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %852, i32 %851) #10
  br label %1201

853:                                              ; preds = %788
  %854 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink17V8OffscreenCanvas18wrapper_type_info_E
  br i1 %854, label %855, label %916

855:                                              ; preds = %853
  %856 = bitcast %"class.blink::ScriptWrappable"* %1 to %"class.blink::OffscreenCanvas"*
  %857 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 4
  %858 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %857, align 8
  %859 = icmp eq %"class.blink::Transferables"* %858, null
  br i1 %859, label %883, label %860

860:                                              ; preds = %855
  %861 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %858, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %862 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %861, align 8
  %863 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %858, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %864 = load i32, i32* %863, align 4
  %865 = zext i32 %864 to i64
  %866 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %862, i64 %865
  %867 = icmp eq i32 %864, 0
  br i1 %867, label %883, label %868

868:                                              ; preds = %860, %873
  %869 = phi %"class.blink::Member.16"* [ %874, %873 ], [ %862, %860 ]
  %870 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %869, i64 0, i32 0, i32 0
  %871 = load %"class.blink::OffscreenCanvas"*, %"class.blink::OffscreenCanvas"** %870, align 8
  %872 = icmp eq %"class.blink::OffscreenCanvas"* %871, %856
  br i1 %872, label %876, label %873

873:                                              ; preds = %868
  %874 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %869, i64 1
  %875 = icmp ult %"class.blink::Member.16"* %874, %866
  br i1 %875, label %868, label %883

876:                                              ; preds = %868
  %877 = ptrtoint %"class.blink::Member.16"* %869 to i64
  %878 = ptrtoint %"class.blink::Member.16"* %862 to i64
  %879 = sub i64 %877, %878
  %880 = lshr exact i64 %879, 3
  %881 = trunc i64 %880 to i32
  %882 = icmp eq i32 %881, -1
  br i1 %882, label %883, label %884

883:                                              ; preds = %873, %860, %855, %876
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.26, i64 0, i64 0)) #10
  br label %1201

884:                                              ; preds = %876
  %885 = getelementptr inbounds %"class.blink::OffscreenCanvas", %"class.blink::OffscreenCanvas"* %856, i64 0, i32 11
  %886 = load i8, i8* %885, align 4, !range !31
  %887 = icmp eq i8 %886, 0
  br i1 %887, label %889, label %888

888:                                              ; preds = %884
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.27, i64 0, i64 0)) #10
  br label %1201

889:                                              ; preds = %884
  %890 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 9
  %891 = bitcast %"class.blink::ScriptWrappable"* %890 to %"class.blink::CanvasRenderingContext"**
  %892 = load %"class.blink::CanvasRenderingContext"*, %"class.blink::CanvasRenderingContext"** %891, align 8
  %893 = icmp eq %"class.blink::CanvasRenderingContext"* %892, null
  br i1 %893, label %895, label %894

894:                                              ; preds = %889
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.28, i64 0, i64 0)) #10
  br label %1201

895:                                              ; preds = %889
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #10
  store i8 72, i8* %11, align 1
  %896 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %896, i8* nonnull %11, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #10
  %897 = getelementptr inbounds %"class.blink::OffscreenCanvas", %"class.blink::OffscreenCanvas"* %856, i64 0, i32 10, i32 0
  %898 = load i32, i32* %897, align 4
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %896, i32 %898) #10
  %899 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 10, i32 1
  %900 = bitcast %"class.blink::TraceWrapperV8Reference"* %899 to i32*
  %901 = load i32, i32* %900, align 4
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %896, i32 %901) #10
  %902 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 10
  %903 = bitcast %"class.blink::ScriptWrappable"* %902 to i32*
  %904 = load i32, i32* %903, align 8
  %905 = sext i32 %904 to i64
  call void @_ZN2v815ValueSerializer11WriteUint64Em(%"class.v8::ValueSerializer"* %896, i64 %905) #10
  %906 = getelementptr inbounds %"class.blink::OffscreenCanvas", %"class.blink::OffscreenCanvas"* %856, i64 0, i32 21
  %907 = load i32, i32* %906, align 4
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %896, i32 %907) #10
  %908 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 13
  %909 = bitcast %"class.blink::ScriptWrappable"* %908 to i32*
  %910 = load i32, i32* %909, align 8
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %896, i32 %910) #10
  %911 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 6
  %912 = bitcast %"class.blink::ScriptWrappable"* %911 to i32*
  %913 = load i32, i32* %912, align 8
  %914 = icmp ne i32 %913, 0
  %915 = zext i1 %914 to i32
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %896, i32 %915) #10
  br label %1201

916:                                              ; preds = %853
  %917 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink16V8ReadableStream18wrapper_type_info_E
  br i1 %917, label %918, label %964

918:                                              ; preds = %916
  %919 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 1
  %920 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %919, align 8
  %921 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %920) #10
  %922 = icmp eq %"class.blink::ExecutionContext"* %921, null
  %923 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %921, i64 0, i32 4
  %924 = select i1 %922, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %923
  %925 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase26TransferableStreamsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %924) #10
  br i1 %925, label %926, label %1201

926:                                              ; preds = %918
  %927 = bitcast %"class.blink::ScriptWrappable"* %1 to %"class.blink::ReadableStream"*
  %928 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 4
  %929 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %928, align 8
  %930 = icmp eq %"class.blink::Transferables"* %929, null
  br i1 %930, label %954, label %931

931:                                              ; preds = %926
  %932 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %929, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %933 = load %"class.blink::Member.361"*, %"class.blink::Member.361"** %932, align 8
  %934 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %929, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %935 = load i32, i32* %934, align 4
  %936 = zext i32 %935 to i64
  %937 = getelementptr inbounds %"class.blink::Member.361", %"class.blink::Member.361"* %933, i64 %936
  %938 = icmp eq i32 %935, 0
  br i1 %938, label %954, label %939

939:                                              ; preds = %931, %944
  %940 = phi %"class.blink::Member.361"* [ %945, %944 ], [ %933, %931 ]
  %941 = getelementptr inbounds %"class.blink::Member.361", %"class.blink::Member.361"* %940, i64 0, i32 0, i32 0
  %942 = load %"class.blink::ReadableStream"*, %"class.blink::ReadableStream"** %941, align 8
  %943 = icmp eq %"class.blink::ReadableStream"* %942, %927
  br i1 %943, label %947, label %944

944:                                              ; preds = %939
  %945 = getelementptr inbounds %"class.blink::Member.361", %"class.blink::Member.361"* %940, i64 1
  %946 = icmp ult %"class.blink::Member.361"* %945, %937
  br i1 %946, label %939, label %954

947:                                              ; preds = %939
  %948 = ptrtoint %"class.blink::Member.361"* %940 to i64
  %949 = ptrtoint %"class.blink::Member.361"* %933 to i64
  %950 = sub i64 %948, %949
  %951 = lshr exact i64 %950, 3
  %952 = and i64 %950, 34359738360
  %953 = icmp eq i64 %952, 34359738360
  br i1 %953, label %954, label %955

954:                                              ; preds = %944, %931, %926, %947
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.29, i64 0, i64 0)) #10
  br label %1201

955:                                              ; preds = %947
  %956 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2
  %957 = bitcast %"class.blink::ScriptWrappable"* %956 to %"class.blink::ReadableStreamGenericReader"**
  %958 = load %"class.blink::ReadableStreamGenericReader"*, %"class.blink::ReadableStreamGenericReader"** %957, align 8
  %959 = icmp eq %"class.blink::ReadableStreamGenericReader"* %958, null
  br i1 %959, label %961, label %960

960:                                              ; preds = %955
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.30, i64 0, i64 0)) #10
  br label %1201

961:                                              ; preds = %955
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #10
  store i8 114, i8* %14, align 1
  %962 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %962, i8* nonnull %14, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #10
  %963 = trunc i64 %951 to i32
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %962, i32 %963) #10
  br label %1201

964:                                              ; preds = %916
  %965 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink16V8WritableStream18wrapper_type_info_E
  br i1 %965, label %966, label %1016

966:                                              ; preds = %964
  %967 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 1
  %968 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %967, align 8
  %969 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %968) #10
  %970 = icmp eq %"class.blink::ExecutionContext"* %969, null
  %971 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %969, i64 0, i32 4
  %972 = select i1 %970, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %971
  %973 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase26TransferableStreamsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %972) #10
  br i1 %973, label %974, label %1201

974:                                              ; preds = %966
  %975 = bitcast %"class.blink::ScriptWrappable"* %1 to %"class.blink::WritableStream"*
  %976 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 4
  %977 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %976, align 8
  %978 = icmp eq %"class.blink::Transferables"* %977, null
  br i1 %978, label %1002, label %979

979:                                              ; preds = %974
  %980 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %977, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %981 = load %"class.blink::Member.384"*, %"class.blink::Member.384"** %980, align 8
  %982 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %977, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %983 = load i32, i32* %982, align 4
  %984 = zext i32 %983 to i64
  %985 = getelementptr inbounds %"class.blink::Member.384", %"class.blink::Member.384"* %981, i64 %984
  %986 = icmp eq i32 %983, 0
  br i1 %986, label %1002, label %987

987:                                              ; preds = %979, %992
  %988 = phi %"class.blink::Member.384"* [ %993, %992 ], [ %981, %979 ]
  %989 = getelementptr inbounds %"class.blink::Member.384", %"class.blink::Member.384"* %988, i64 0, i32 0, i32 0
  %990 = load %"class.blink::WritableStream"*, %"class.blink::WritableStream"** %989, align 8
  %991 = icmp eq %"class.blink::WritableStream"* %990, %975
  br i1 %991, label %995, label %992

992:                                              ; preds = %987
  %993 = getelementptr inbounds %"class.blink::Member.384", %"class.blink::Member.384"* %988, i64 1
  %994 = icmp ult %"class.blink::Member.384"* %993, %985
  br i1 %994, label %987, label %1002

995:                                              ; preds = %987
  %996 = ptrtoint %"class.blink::Member.384"* %988 to i64
  %997 = ptrtoint %"class.blink::Member.384"* %981 to i64
  %998 = sub i64 %996, %997
  %999 = lshr exact i64 %998, 3
  %1000 = and i64 %998, 34359738360
  %1001 = icmp eq i64 %1000, 34359738360
  br i1 %1001, label %1002, label %1003

1002:                                             ; preds = %992, %979, %974, %995
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.31, i64 0, i64 0)) #10
  br label %1201

1003:                                             ; preds = %995
  %1004 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 4, i32 1
  %1005 = bitcast %"class.blink::TraceWrapperV8Reference"* %1004 to %"class.blink::WritableStreamDefaultWriter"**
  %1006 = load %"class.blink::WritableStreamDefaultWriter"*, %"class.blink::WritableStreamDefaultWriter"** %1005, align 8
  %1007 = icmp eq %"class.blink::WritableStreamDefaultWriter"* %1006, null
  br i1 %1007, label %1009, label %1008

1008:                                             ; preds = %1003
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.32, i64 0, i64 0)) #10
  br label %1201

1009:                                             ; preds = %1003
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #10
  store i8 119, i8* %16, align 1
  %1010 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %1010, i8* nonnull %16, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #10
  %1011 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %976, align 8
  %1012 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %1011, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %1013 = load i32, i32* %1012, align 4
  %1014 = trunc i64 %999 to i32
  %1015 = add i32 %1013, %1014
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %1010, i32 %1015) #10
  br label %1201

1016:                                             ; preds = %964
  %1017 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink17V8TransformStream18wrapper_type_info_E
  br i1 %1017, label %1018, label %1078

1018:                                             ; preds = %1016
  %1019 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 1
  %1020 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %1019, align 8
  %1021 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1020) #10
  %1022 = icmp eq %"class.blink::ExecutionContext"* %1021, null
  %1023 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1021, i64 0, i32 4
  %1024 = select i1 %1022, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %1023
  %1025 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase26TransferableStreamsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %1024) #10
  br i1 %1025, label %1026, label %1201

1026:                                             ; preds = %1018
  %1027 = bitcast %"class.blink::ScriptWrappable"* %1 to %"class.blink::TransformStream"*
  %1028 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 4
  %1029 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %1028, align 8
  %1030 = icmp eq %"class.blink::Transferables"* %1029, null
  br i1 %1030, label %1053, label %1031

1031:                                             ; preds = %1026
  %1032 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %1029, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %1033 = load %"class.blink::Member.412"*, %"class.blink::Member.412"** %1032, align 8
  %1034 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %1029, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %1035 = load i32, i32* %1034, align 4
  %1036 = zext i32 %1035 to i64
  %1037 = getelementptr inbounds %"class.blink::Member.412", %"class.blink::Member.412"* %1033, i64 %1036
  %1038 = icmp eq i32 %1035, 0
  br i1 %1038, label %1053, label %1039

1039:                                             ; preds = %1031, %1044
  %1040 = phi %"class.blink::Member.412"* [ %1045, %1044 ], [ %1033, %1031 ]
  %1041 = getelementptr inbounds %"class.blink::Member.412", %"class.blink::Member.412"* %1040, i64 0, i32 0, i32 0
  %1042 = load %"class.blink::TransformStream"*, %"class.blink::TransformStream"** %1041, align 8
  %1043 = icmp eq %"class.blink::TransformStream"* %1042, %1027
  br i1 %1043, label %1047, label %1044

1044:                                             ; preds = %1039
  %1045 = getelementptr inbounds %"class.blink::Member.412", %"class.blink::Member.412"* %1040, i64 1
  %1046 = icmp ult %"class.blink::Member.412"* %1045, %1037
  br i1 %1046, label %1039, label %1053

1047:                                             ; preds = %1039
  %1048 = ptrtoint %"class.blink::Member.412"* %1040 to i64
  %1049 = ptrtoint %"class.blink::Member.412"* %1033 to i64
  %1050 = sub i64 %1048, %1049
  %1051 = and i64 %1050, 34359738360
  %1052 = icmp eq i64 %1051, 34359738360
  br i1 %1052, label %1053, label %1054

1053:                                             ; preds = %1044, %1031, %1026, %1047
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.33, i64 0, i64 0)) #10
  br label %1201

1054:                                             ; preds = %1047
  %1055 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2
  %1056 = bitcast %"class.blink::ScriptWrappable"* %1055 to %"class.blink::ReadableStream"**
  %1057 = load %"class.blink::ReadableStream"*, %"class.blink::ReadableStream"** %1056, align 8
  %1058 = tail call zeroext i1 @_ZNK5blink14ReadableStream6lockedEv(%"class.blink::ReadableStream"* %1057) #10
  br i1 %1058, label %1066, label %1059

1059:                                             ; preds = %1054
  %1060 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 3
  %1061 = bitcast %"class.blink::ScriptWrappable"* %1060 to %"class.blink::WritableStream"**
  %1062 = load %"class.blink::WritableStream"*, %"class.blink::WritableStream"** %1061, align 8
  %1063 = getelementptr inbounds %"class.blink::WritableStream", %"class.blink::WritableStream"* %1062, i64 0, i32 9, i32 0, i32 0
  %1064 = load %"class.blink::WritableStreamDefaultWriter"*, %"class.blink::WritableStreamDefaultWriter"** %1063, align 8
  %1065 = icmp eq %"class.blink::WritableStreamDefaultWriter"* %1064, null
  br i1 %1065, label %1067, label %1066

1066:                                             ; preds = %1059, %1054
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 25, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.34, i64 0, i64 0)) #10
  br label %1201

1067:                                             ; preds = %1059
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #10
  store i8 109, i8* %17, align 1
  %1068 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %1068, i8* nonnull %17, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #10
  %1069 = load %"class.blink::Transferables"*, %"class.blink::Transferables"** %1028, align 8
  %1070 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %1069, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %1071 = load i32, i32* %1070, align 4
  %1072 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %1069, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %1073 = load i32, i32* %1072, align 4
  %1074 = lshr exact i64 %1050, 2
  %1075 = trunc i64 %1074 to i32
  %1076 = add i32 %1071, %1075
  %1077 = add i32 %1076, %1073
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %1068, i32 %1077) #10
  br label %1201

1078:                                             ; preds = %1016
  %1079 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, @_ZN5blink14V8DOMException18wrapper_type_info_E
  br i1 %1079, label %1080, label %1201

1080:                                             ; preds = %1078
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #10
  store i8 120, i8* %19, align 1
  %1081 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %1081, i8* nonnull %19, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #10
  %1082 = bitcast %"class.WTF::String"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1082) #10
  %1083 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 1, i32 1
  %1084 = bitcast %"class.blink::TraceWrapperV8Reference"* %1083 to %"class.WTF::StringImpl"**
  %1085 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1084, align 8
  %1086 = icmp eq %"class.WTF::StringImpl"* %1085, null
  br i1 %1086, label %1104, label %1087

1087:                                             ; preds = %1080
  %1088 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1085, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1089 = load atomic i32, i32* %1088 monotonic, align 4
  %1090 = and i32 %1089, 2
  %1091 = icmp eq i32 %1090, 0
  br i1 %1091, label %1092, label %1104

1092:                                             ; preds = %1087
  %1093 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1085, i64 0, i32 0
  %1094 = load i32, i32* %1093, align 4
  %1095 = zext i32 %1094 to i33
  %1096 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1095, i33 1) #10
  %1097 = extractvalue { i33, i1 } %1096, 1
  %1098 = extractvalue { i33, i1 } %1096, 0
  %1099 = icmp slt i33 %1098, 0
  %1100 = or i1 %1097, %1099
  br i1 %1100, label %1101, label %1102, !prof !2

1101:                                             ; preds = %1092
  call void @llvm.trap() #10
  unreachable

1102:                                             ; preds = %1092
  %1103 = trunc i33 %1098 to i32
  store i32 %1103, i32* %1093, align 4
  br label %1104

1104:                                             ; preds = %1080, %1087, %1102
  %1105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1085, %"class.WTF::StringImpl"** %1105, align 8
  %1106 = bitcast %"class.WTF::StringUTF8Adaptor"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1106) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1106, i8 -86, i64 40, i1 false) #10
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %20, %"class.WTF::String"* nonnull dereferenceable(8) %47, i32 0) #10
  %1107 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %20, i64 0, i32 2
  %1108 = load i32, i32* %1107, align 8
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %1081, i32 %1108) #10
  %1109 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %20, i64 0, i32 1
  %1110 = load i8*, i8** %1109, align 8
  %1111 = load i32, i32* %1107, align 8
  %1112 = zext i32 %1111 to i64
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %1081, i8* %1110, i64 %1112) #10
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1106) #10
  %1113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1105, align 8
  %1114 = icmp eq %"class.WTF::StringImpl"* %1113, null
  br i1 %1114, label %1128, label %1115

1115:                                             ; preds = %1104
  %1116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1117 = load atomic i32, i32* %1116 monotonic, align 4
  %1118 = and i32 %1117, 2
  %1119 = icmp eq i32 %1118, 0
  %1120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1113, i64 0, i32 0
  %1121 = load i32, i32* %1120, align 4
  br i1 %1119, label %1122, label %1124

1122:                                             ; preds = %1115
  %1123 = add i32 %1121, -1
  store i32 %1123, i32* %1120, align 4
  br label %1124

1124:                                             ; preds = %1122, %1115
  %1125 = phi i32 [ %1123, %1122 ], [ %1121, %1115 ]
  %1126 = icmp eq i32 %1125, 0
  br i1 %1126, label %1127, label %1128

1127:                                             ; preds = %1124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1113) #10
  br label %1128

1128:                                             ; preds = %1104, %1124, %1127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1082) #10
  %1129 = bitcast %"class.WTF::String"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1129) #10
  %1130 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 2
  %1131 = bitcast %"class.blink::ScriptWrappable"* %1130 to %"class.WTF::StringImpl"**
  %1132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1131, align 8
  %1133 = icmp eq %"class.WTF::StringImpl"* %1132, null
  br i1 %1133, label %1151, label %1134

1134:                                             ; preds = %1128
  %1135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1136 = load atomic i32, i32* %1135 monotonic, align 4
  %1137 = and i32 %1136, 2
  %1138 = icmp eq i32 %1137, 0
  br i1 %1138, label %1139, label %1151

1139:                                             ; preds = %1134
  %1140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1132, i64 0, i32 0
  %1141 = load i32, i32* %1140, align 4
  %1142 = zext i32 %1141 to i33
  %1143 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1142, i33 1) #10
  %1144 = extractvalue { i33, i1 } %1143, 1
  %1145 = extractvalue { i33, i1 } %1143, 0
  %1146 = icmp slt i33 %1145, 0
  %1147 = or i1 %1144, %1146
  br i1 %1147, label %1148, label %1149, !prof !2

1148:                                             ; preds = %1139
  call void @llvm.trap() #10
  unreachable

1149:                                             ; preds = %1139
  %1150 = trunc i33 %1145 to i32
  store i32 %1150, i32* %1140, align 4
  br label %1151

1151:                                             ; preds = %1128, %1134, %1149
  %1152 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %48, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1132, %"class.WTF::StringImpl"** %1152, align 8
  %1153 = bitcast %"class.WTF::StringUTF8Adaptor"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1153) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1153, i8 -86, i64 40, i1 false) #10
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %22, %"class.WTF::String"* nonnull dereferenceable(8) %48, i32 0) #10
  %1154 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %22, i64 0, i32 2
  %1155 = load i32, i32* %1154, align 8
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %1081, i32 %1155) #10
  %1156 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %22, i64 0, i32 1
  %1157 = load i8*, i8** %1156, align 8
  %1158 = load i32, i32* %1154, align 8
  %1159 = zext i32 %1158 to i64
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %1081, i8* %1157, i64 %1159) #10
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1153) #10
  %1160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1152, align 8
  %1161 = icmp eq %"class.WTF::StringImpl"* %1160, null
  br i1 %1161, label %1175, label %1162

1162:                                             ; preds = %1151
  %1163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1164 = load atomic i32, i32* %1163 monotonic, align 4
  %1165 = and i32 %1164, 2
  %1166 = icmp eq i32 %1165, 0
  %1167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1160, i64 0, i32 0
  %1168 = load i32, i32* %1167, align 4
  br i1 %1166, label %1169, label %1171

1169:                                             ; preds = %1162
  %1170 = add i32 %1168, -1
  store i32 %1170, i32* %1167, align 4
  br label %1171

1171:                                             ; preds = %1169, %1162
  %1172 = phi i32 [ %1170, %1169 ], [ %1168, %1162 ]
  %1173 = icmp eq i32 %1172, 0
  br i1 %1173, label %1174, label %1175

1174:                                             ; preds = %1171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1160) #10
  br label %1175

1175:                                             ; preds = %1151, %1171, %1174
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1129) #10
  %1176 = bitcast %"class.WTF::String"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1176) #10
  %1177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1177, align 8
  %1178 = bitcast %"class.WTF::StringUTF8Adaptor"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1178) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1178, i8 -86, i64 40, i1 false) #10
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %34, %"class.WTF::String"* nonnull dereferenceable(8) %49, i32 0) #10
  %1179 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %34, i64 0, i32 2
  %1180 = load i32, i32* %1179, align 8
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %1081, i32 %1180) #10
  %1181 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %34, i64 0, i32 1
  %1182 = load i8*, i8** %1181, align 8
  %1183 = load i32, i32* %1179, align 8
  %1184 = zext i32 %1183 to i64
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %1081, i8* %1182, i64 %1184) #10
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1178) #10
  %1185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1177, align 8
  %1186 = icmp eq %"class.WTF::StringImpl"* %1185, null
  br i1 %1186, label %1200, label %1187

1187:                                             ; preds = %1175
  %1188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1189 = load atomic i32, i32* %1188 monotonic, align 4
  %1190 = and i32 %1189, 2
  %1191 = icmp eq i32 %1190, 0
  %1192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1185, i64 0, i32 0
  %1193 = load i32, i32* %1192, align 4
  br i1 %1191, label %1194, label %1196

1194:                                             ; preds = %1187
  %1195 = add i32 %1193, -1
  store i32 %1195, i32* %1192, align 4
  br label %1196

1196:                                             ; preds = %1194, %1187
  %1197 = phi i32 [ %1195, %1194 ], [ %1193, %1187 ]
  %1198 = icmp eq i32 %1197, 0
  br i1 %1198, label %1199, label %1200

1199:                                             ; preds = %1196
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1185) #10
  br label %1200

1200:                                             ; preds = %1175, %1196, %1199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1176) #10
  br label %1201

1201:                                             ; preds = %289, %279, %790, %918, %966, %1018, %1053, %1066, %1067, %1002, %1008, %1009, %954, %960, %961, %883, %888, %894, %895, %821, %847, %783, %784, %303, %453, %422, %355, %363, %1078, %684, %704, %609, %629, %202, %261, %1200, %558, %542, %526, %510, %494, %491, %269
  %1202 = phi i1 [ true, %269 ], [ true, %491 ], [ true, %494 ], [ true, %510 ], [ true, %526 ], [ true, %542 ], [ true, %558 ], [ true, %1200 ], [ true, %261 ], [ true, %202 ], [ true, %629 ], [ true, %609 ], [ true, %704 ], [ true, %684 ], [ false, %1078 ], [ false, %303 ], [ true, %355 ], [ false, %363 ], [ %436, %453 ], [ false, %422 ], [ false, %783 ], [ true, %784 ], [ false, %821 ], [ true, %847 ], [ false, %883 ], [ false, %888 ], [ false, %894 ], [ true, %895 ], [ false, %954 ], [ false, %960 ], [ true, %961 ], [ false, %1002 ], [ false, %1008 ], [ true, %1009 ], [ false, %1053 ], [ false, %1066 ], [ true, %1067 ], [ false, %1018 ], [ false, %966 ], [ false, %918 ], [ false, %790 ], [ true, %279 ], [ true, %289 ]
  ret i1 %1202
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23V8ScriptValueSerializer9WriteFileEPNS_4FileERNS_14ExceptionStateE(%"class.blink::V8ScriptValueSerializer"*, %"class.blink::File"*, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %5 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %6 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %7 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %8 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %9 = alloca %"class.blink::WebString", align 8
  %10 = alloca %"class.blink::WebString", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %class.scoped_refptr.818, align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.absl::optional.798", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.absl::optional.798", align 8
  %20 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 2, i32 0
  %21 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %20, align 8
  %22 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %1, i64 0, i32 0, i32 3, i32 0
  %24 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %24, i64 0, i32 1
  %26 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %25) #10
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  %28 = bitcast %class.scoped_refptr.818* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %29 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %23, align 8
  %30 = icmp eq %"class.blink::BlobDataHandle"* %29, null
  br i1 %30, label %38, label %31

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.48, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.49, i64 0, i64 0)) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %3, %31, %35
  %39 = getelementptr inbounds %class.scoped_refptr.818, %class.scoped_refptr.818* %14, i64 0, i32 0
  store %"class.blink::BlobDataHandle"* %29, %"class.blink::BlobDataHandle"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %21, i64 0, i32 9, i32 0
  %41 = call { %"struct.WTF::KeyValuePair.779"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_S6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.776"* %40, %"class.WTF::String"* nonnull dereferenceable(8) %13, %class.scoped_refptr.818* nonnull dereferenceable(8) %14) #10
  %42 = extractvalue { %"struct.WTF::KeyValuePair.779"*, i8 } %41, 1
  %43 = and i8 %42, 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %60

45:                                               ; preds = %38
  %46 = extractvalue { %"struct.WTF::KeyValuePair.779"*, i8 } %41, 0
  %47 = bitcast %class.scoped_refptr.818* %14 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %39, align 8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %46, i64 0, i32 1
  %50 = bitcast %class.scoped_refptr.818* %49 to i64*
  %51 = getelementptr inbounds %class.scoped_refptr.818, %class.scoped_refptr.818* %49, i64 0, i32 0
  %52 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %51, align 8
  store i64 %48, i64* %50, align 8
  %53 = icmp eq %"class.blink::BlobDataHandle"* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw sub i32* %55, i32 1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %52) #10
  %59 = bitcast %"class.blink::BlobDataHandle"* %52 to i8*
  call void @free(i8* %59) #10
  br label %60

60:                                               ; preds = %38, %45, %54, %58
  %61 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %39, align 8
  %62 = icmp eq %"class.blink::BlobDataHandle"* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw sub i32* %64, i32 1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %61) #10
  %68 = bitcast %"class.blink::BlobDataHandle"* %61 to i8*
  call void @free(i8* %68) #10
  br label %69

69:                                               ; preds = %60, %63, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #10
  br label %85

85:                                               ; preds = %69, %81, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  %86 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 6
  %87 = load %"class.WTF::Vector.795"*, %"class.WTF::Vector.795"** %86, align 8
  %88 = icmp eq %"class.WTF::Vector.795"* %87, null
  br i1 %88, label %168, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.WTF::Vector.795", %"class.WTF::Vector.795"* %87, i64 0, i32 0, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %23, align 8
  %93 = icmp eq %"class.blink::BlobDataHandle"* %92, null
  br i1 %93, label %101, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 1 monotonic
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %94
  %99 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.48, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.49, i64 0, i64 0)) #10
  %100 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #10
  br label %101

101:                                              ; preds = %89, %94, %98
  %102 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %1, i64 0, i32 4
  %103 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #10
  %104 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %23, align 8
  %105 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %104, i64 0, i32 2
  %106 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %105) #10
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %107, align 8
  %108 = getelementptr inbounds %"class.absl::optional.798", %"class.absl::optional.798"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #10
  %109 = call { i8, i64 } @_ZNK5blink4File32LastModifiedTimeForSerializationEv(%"class.blink::File"* %1) #10
  %110 = extractvalue { i8, i64 } %109, 0
  store i8 %110, i8* %108, align 8
  %111 = getelementptr inbounds %"class.absl::optional.798", %"class.absl::optional.798"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %112 = extractvalue { i8, i64 } %109, 1
  store i64 %112, i64* %111, align 8
  %113 = call i64 @_ZNK5blink4File4sizeEv(%"class.blink::File"* %1) #10
  %114 = load i32, i32* %90, align 4
  %115 = getelementptr inbounds %"class.WTF::Vector.795", %"class.WTF::Vector.795"* %87, i64 0, i32 0, i32 0, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %114, %116
  br i1 %117, label %118, label %140, !prof !2

118:                                              ; preds = %101
  %119 = add i32 %114, 1
  %120 = lshr i32 %114, 2
  %121 = add i32 %119, %120
  %122 = icmp ugt i32 %121, 4
  %123 = select i1 %122, i32 %121, i32 4
  %124 = icmp ugt i32 %123, %119
  %125 = select i1 %124, i32 %123, i32 %119
  %126 = icmp ult i32 %114, %125
  br i1 %126, label %127, label %140, !prof !30

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.WTF::Vector.795", %"class.WTF::Vector.795"* %87, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"** %128, align 8
  %130 = icmp eq %"class.blink::WebBlobInfo"* %129, null
  br i1 %130, label %131, label %139

131:                                              ; preds = %127
  %132 = zext i32 %125 to i64
  %133 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11WebBlobInfoEEEmm(i64 %132) #10
  %134 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %133, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11WebBlobInfoEEEPKcv, i64 0, i64 0)) #10
  %135 = ptrtoint i8* %134 to i64
  %136 = bitcast %"class.WTF::Vector.795"* %87 to i64*
  store atomic i64 %135, i64* %136 monotonic, align 8
  %137 = lshr i64 %133, 6
  %138 = trunc i64 %137 to i32
  store i32 %138, i32* %115, align 8
  br label %140

139:                                              ; preds = %127
  call void @_ZN3WTF6VectorIN5blink11WebBlobInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.795"* nonnull %87, i32 %125) #10
  br label %140

140:                                              ; preds = %101, %118, %131, %139
  %141 = getelementptr inbounds %"class.WTF::Vector.795", %"class.WTF::Vector.795"* %87, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"** %141, align 8
  %143 = load i32, i32* %90, align 4
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %142, i64 %144, i32 0
  %146 = bitcast i8* %145 to %"class.blink::WebBlobInfo"*
  %147 = bitcast %"class.blink::WebString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #10
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %9, %"class.WTF::String"* dereferenceable(8) %102) #10
  %148 = bitcast %"class.blink::WebString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #10
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %10, %"class.WTF::String"* nonnull dereferenceable(8) %15) #10
  call void @_ZN5blink11WebBlobInfoC1E13scoped_refptrINS_14BlobDataHandleEERKNS_9WebStringES6_RKN4absl8optionalIN4base4TimeEEEm(%"class.blink::WebBlobInfo"* %146, %"class.blink::BlobDataHandle"* %92, %"class.blink::WebString"* nonnull dereferenceable(8) %9, %"class.blink::WebString"* nonnull dereferenceable(8) %10, %"class.absl::optional.798"* nonnull dereferenceable(16) %16, i64 %113) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #10
  %149 = load i32, i32* %90, align 4
  %150 = add i32 %149, 1
  store i32 %150, i32* %90, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #10
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %140
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #10
  br label %166

166:                                              ; preds = %165, %162, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #10
  %167 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %167, i32 %91) #10
  br label %272

168:                                              ; preds = %85
  %169 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %1, i64 0, i32 1
  %170 = load i8, i8* %169, align 8, !range !31
  %171 = icmp eq i8 %170, 0
  %172 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %1, i64 0, i32 3
  %173 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %174 = select i1 %171, %"class.WTF::String"* %173, %"class.WTF::String"* %172
  %175 = bitcast %"class.WTF::StringUTF8Adaptor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %175) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %175, i8 -86, i64 40, i1 false) #10
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %8, %"class.WTF::String"* dereferenceable(8) %174, i32 0) #10
  %176 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %8, i64 0, i32 2
  %177 = load i32, i32* %176, align 8
  %178 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %178, i32 %177) #10
  %179 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %8, i64 0, i32 1
  %180 = load i8*, i8** %179, align 8
  %181 = load i32, i32* %176, align 8
  %182 = zext i32 %181 to i64
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %178, i8* %180, i64 %182) #10
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %175) #10
  %183 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %1, i64 0, i32 4
  %184 = bitcast %"class.WTF::StringUTF8Adaptor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %184) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %184, i8 -86, i64 40, i1 false) #10
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %7, %"class.WTF::String"* dereferenceable(8) %183, i32 0) #10
  %185 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %7, i64 0, i32 2
  %186 = load i32, i32* %185, align 8
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %178, i32 %186) #10
  %187 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %7, i64 0, i32 1
  %188 = load i8*, i8** %187, align 8
  %189 = load i32, i32* %185, align 8
  %190 = zext i32 %189 to i64
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %178, i8* %188, i64 %190) #10
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %184) #10
  %191 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %1, i64 0, i32 8
  %192 = bitcast %"class.WTF::StringUTF8Adaptor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %192) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %192, i8 -86, i64 40, i1 false) #10
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %191, i32 0) #10
  %193 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %6, i64 0, i32 2
  %194 = load i32, i32* %193, align 8
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %178, i32 %194) #10
  %195 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %6, i64 0, i32 1
  %196 = load i8*, i8** %195, align 8
  %197 = load i32, i32* %193, align 8
  %198 = zext i32 %197 to i64
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %178, i8* %196, i64 %198) #10
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %192) #10
  %199 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %199) #10
  %200 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %23, align 8
  %201 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %200, i64 0, i32 1
  %202 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %201) #10
  %203 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %202, %"class.WTF::StringImpl"** %203, align 8
  %204 = bitcast %"class.WTF::StringUTF8Adaptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %204) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %204, i8 -86, i64 40, i1 false) #10
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %17, i32 0) #10
  %205 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 2
  %206 = load i32, i32* %205, align 8
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %178, i32 %206) #10
  %207 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 1
  %208 = load i8*, i8** %207, align 8
  %209 = load i32, i32* %205, align 8
  %210 = zext i32 %209 to i64
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %178, i8* %208, i64 %210) #10
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %204) #10
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %168
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #10
  br label %226

226:                                              ; preds = %168, %222, %225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %199) #10
  %227 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227) #10
  %228 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %23, align 8
  %229 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %228, i64 0, i32 2
  %230 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %229) #10
  %231 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %230, %"class.WTF::StringImpl"** %231, align 8
  %232 = bitcast %"class.WTF::StringUTF8Adaptor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %232) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %232, i8 -86, i64 40, i1 false) #10
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %18, i32 0) #10
  %233 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 2
  %234 = load i32, i32* %233, align 8
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %178, i32 %234) #10
  %235 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 1
  %236 = load i8*, i8** %235, align 8
  %237 = load i32, i32* %233, align 8
  %238 = zext i32 %237 to i64
  call void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"* %178, i8* %236, i64 %238) #10
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %232) #10
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %254, label %241

241:                                              ; preds = %226
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %241
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %241
  %251 = phi i32 [ %249, %248 ], [ %247, %241 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #10
  br label %254

254:                                              ; preds = %226, %250, %253
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #10
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %178, i32 1) #10
  %255 = call i64 @_ZNK5blink4File4sizeEv(%"class.blink::File"* %1) #10
  call void @_ZN2v815ValueSerializer11WriteUint64Em(%"class.v8::ValueSerializer"* %178, i64 %255) #10
  %256 = getelementptr inbounds %"class.absl::optional.798", %"class.absl::optional.798"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %256) #10
  %257 = bitcast %"class.absl::optional.798"* %19 to i64*
  store i64 -6148914691236517206, i64* %257, align 8
  %258 = call { i8, i64 } @_ZNK5blink4File32LastModifiedTimeForSerializationEv(%"class.blink::File"* %1) #10
  %259 = extractvalue { i8, i64 } %258, 0
  store i8 %259, i8* %256, align 8
  %260 = getelementptr inbounds %"class.absl::optional.798", %"class.absl::optional.798"* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %261 = extractvalue { i8, i64 } %258, 1
  store i64 %261, i64* %260, align 8
  %262 = icmp eq i8 %259, 0
  br i1 %262, label %266, label %263

263:                                              ; preds = %254
  %264 = getelementptr inbounds %"class.absl::optional.798", %"class.absl::optional.798"* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %265 = call double @_ZNK4base4Time20ToJsTimeIgnoringNullEv(%"class.base::Time"* %264) #10
  br label %266

266:                                              ; preds = %254, %263
  %267 = phi double [ %265, %263 ], [ 0x7FF8000000000000, %254 ]
  call void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"* %178, double %267) #10
  %268 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %1, i64 0, i32 2
  %269 = load i32, i32* %268, align 4
  %270 = icmp eq i32 %269, 0
  %271 = zext i1 %270 to i32
  call void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"* %178, i32 %271) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %256) #10
  br label %272

272:                                              ; preds = %266, %166
  ret i1 true
}

declare %"class.blink::File"* @_ZNK5blink8FileList4itemEj(%"class.blink::FileList"*, i32) local_unnamed_addr #2

declare void @_ZNK5blink11ImageBitmap20GetBitmapSkImageInfoEv(%struct.SkImageInfo* sret, %"class.blink::ImageBitmap"*) local_unnamed_addr #2

declare void @_ZN5blink29SerializedImageBitmapSettingsC1E11SkImageInfo(%"class.blink::SerializedImageBitmapSettings"*, %struct.SkImageInfo*) unnamed_addr #2

declare i32 @_ZNK5blink11ImageBitmap5widthEv(%"class.blink::ImageBitmap"*) local_unnamed_addr #2

declare i32 @_ZNK5blink11ImageBitmap6heightEv(%"class.blink::ImageBitmap"*) local_unnamed_addr #2

declare void @_ZN5blink11ImageBitmap14CopyBitmapDataERK11SkImageInfob(%"class.WTF::Vector.841"* sret, %"class.blink::ImageBitmap"*, %struct.SkImageInfo* dereferenceable(24), i1 zeroext) local_unnamed_addr #2

declare i32 @_ZNK5blink9ImageData19GetCanvasColorSpaceEv(%"class.blink::ImageData"*) local_unnamed_addr #2

declare i32 @_ZNK5blink9ImageData25GetImageDataStorageFormatEv(%"class.blink::ImageData"*) local_unnamed_addr #2

declare void @_ZN5blink27SerializedImageDataSettingsC1ENS_16CanvasColorSpaceENS_22ImageDataStorageFormatE(%"class.blink::SerializedImageDataSettings"*, i32, i32) unnamed_addr #2

declare zeroext i1 @_ZNK5blink9ImageData20IsBufferBaseDetachedEv(%"class.blink::ImageData"*) local_unnamed_addr #2

declare void @_ZNK5blink9ImageData11GetSkPixmapEv(%class.SkPixmap* sret, %"class.blink::ImageData"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17DOMMatrixReadOnly4is2DEv(%"class.blink::DOMMatrixReadOnly"*) local_unnamed_addr #2

declare void @_ZN5blink10MojoHandle10TakeHandleEv(%"class.mojo::ScopedHandleBase.509"* sret, %"class.blink::MojoHandle"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14ReadableStream6lockedEv(%"class.blink::ReadableStream"*) local_unnamed_addr #2

declare { i8, i64 } @_ZNK5blink4File32LastModifiedTimeForSerializationEv(%"class.blink::File"*) local_unnamed_addr #2

declare i64 @_ZNK5blink4File4sizeEv(%"class.blink::File"*) unnamed_addr #2

declare double @_ZNK4base4Time20ToJsTimeIgnoringNullEv(%"class.base::Time"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23V8ScriptValueSerializer19ThrowDataCloneErrorEN2v85LocalINS1_6StringEEE(%"class.blink::V8ScriptValueSerializer"* nocapture readonly, %"class.v8::String"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 72, i1 false)
  %6 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::ScriptState"** %6 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 5
  %11 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %11, i64 0, i32 1, i32 0
  %13 = load i16, i16* %12, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %11, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 %13, i16* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %19, align 2
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %21 = bitcast i8** %20 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  %24 = bitcast %"class.v8::Isolate"** %23 to i64*
  store i64 %9, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringImpl"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #10
  %28 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %29 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* %1, i32 1) #10
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %3, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #10
  br label %46

46:                                               ; preds = %2, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = icmp eq i64* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %46
  %51 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %23, align 8
  %52 = bitcast %"class.v8::Isolate"* %51 to %"class.v8::internal::Isolate"*
  %53 = load i64, i64* %48, align 8
  %54 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %52, i64 %53) #10
  %55 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %51) #10
  br i1 %55, label %59, label %56

56:                                               ; preds = %50
  %57 = bitcast i64* %54 to %"class.v8::Value"*
  %58 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %51, %"class.v8::Value"* %57) #10
  br label %59

59:                                               ; preds = %56, %50, %46
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %75

75:                                               ; preds = %59, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #10
  ret void
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeERKN3WTF6StringE(%"class.blink::ExceptionState"*, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink23V8ScriptValueSerializer15WriteHostObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE(%"class.blink::V8ScriptValueSerializer"*, %"class.v8::Isolate"*, %"class.v8::Object"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend.865", align 8
  %7 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1
  %9 = bitcast %"class.blink::ExceptionContext"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  %10 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 5
  %11 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %11, i64 0, i32 1, i32 0
  %13 = load i16, i16* %12, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %11, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 %13, i16* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %19, align 2
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %21 = bitcast i8** %20 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %26 = bitcast %"class.WTF::StringImpl"** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #10
  %27 = bitcast %"class.v8::Object"* %2 to %"class.v8::Value"*
  %28 = tail call zeroext i1 @_ZN5blink12V8DOMWrapper9IsWrapperEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %27) #10
  br i1 %28, label %30, label %29

29:                                               ; preds = %3
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* nonnull %4, i32 25, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.35, i64 0, i64 0)) #10
  br label %103

30:                                               ; preds = %3
  %31 = bitcast %"class.v8::Object"* %2 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = and i64 %32, -4294967296
  %37 = zext i32 %35 to i64
  %38 = or i64 %36, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load i16, i16* %40, align 2
  switch i16 %41, label %46 [
    i16 1057, label %42
    i16 1056, label %42
    i16 1040, label %42
  ]

42:                                               ; preds = %30, %30, %30
  %43 = add i64 %32, 19
  %44 = inttoptr i64 %43 to i8**
  %45 = load i8*, i8** %44, align 1
  br label %48

46:                                               ; preds = %30
  %47 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %2, i32 1) #10
  br label %48

48:                                               ; preds = %42, %46
  %49 = phi i8* [ %45, %42 ], [ %47, %46 ]
  %50 = bitcast i8* %49 to %"class.blink::ScriptWrappable"*
  %51 = bitcast %"class.blink::V8ScriptValueSerializer"* %0 to i1 (%"class.blink::V8ScriptValueSerializer"*, %"class.blink::ScriptWrappable"*, %"class.blink::ExceptionState"*)***
  %52 = load i1 (%"class.blink::V8ScriptValueSerializer"*, %"class.blink::ScriptWrappable"*, %"class.blink::ExceptionState"*)**, i1 (%"class.blink::V8ScriptValueSerializer"*, %"class.blink::ScriptWrappable"*, %"class.blink::ExceptionState"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::V8ScriptValueSerializer"*, %"class.blink::ScriptWrappable"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::V8ScriptValueSerializer"*, %"class.blink::ScriptWrappable"*, %"class.blink::ExceptionState"*)** %52, i64 8
  %54 = load i1 (%"class.blink::V8ScriptValueSerializer"*, %"class.blink::ScriptWrappable"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::V8ScriptValueSerializer"*, %"class.blink::ScriptWrappable"*, %"class.blink::ExceptionState"*)** %53, align 8
  %55 = call zeroext i1 %54(%"class.blink::V8ScriptValueSerializer"* %0, %"class.blink::ScriptWrappable"* %50, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #10
  br i1 %55, label %103, label %56

56:                                               ; preds = %48
  %57 = load i32, i32* %24, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %103

59:                                               ; preds = %56
  %60 = bitcast i8* %49 to %"struct.blink::WrapperTypeInfo"* (%"class.blink::ScriptWrappable"*)***
  %61 = load %"struct.blink::WrapperTypeInfo"* (%"class.blink::ScriptWrappable"*)**, %"struct.blink::WrapperTypeInfo"* (%"class.blink::ScriptWrappable"*)*** %60, align 8
  %62 = getelementptr inbounds %"struct.blink::WrapperTypeInfo"* (%"class.blink::ScriptWrappable"*)*, %"struct.blink::WrapperTypeInfo"* (%"class.blink::ScriptWrappable"*)** %61, i64 6
  %63 = load %"struct.blink::WrapperTypeInfo"* (%"class.blink::ScriptWrappable"*)*, %"struct.blink::WrapperTypeInfo"* (%"class.blink::ScriptWrappable"*)** %62, align 8
  %64 = call %"struct.blink::WrapperTypeInfo"* %63(%"class.blink::ScriptWrappable"* %50) #10
  %65 = getelementptr inbounds %"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* %64, i64 0, i32 3
  %66 = load i8*, i8** %65, align 8
  %67 = icmp eq i8* %66, null
  br i1 %67, label %74, label %68

68:                                               ; preds = %59
  %69 = call i64 @strlen(i8* nonnull %66) #12
  %70 = icmp ult i64 %69, 4294967296
  br i1 %70, label %72, label %71, !prof !30

71:                                               ; preds = %68
  call void @llvm.trap() #10
  unreachable

72:                                               ; preds = %68
  %73 = trunc i64 %69 to i32
  br label %74

74:                                               ; preds = %59, %72
  %75 = phi i32 [ %73, %72 ], [ 0, %59 ]
  %76 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %77 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #10
  %78 = bitcast %"class.WTF::StringAppend.865"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %78) #10
  %79 = bitcast %"class.WTF::StringAppend.865"* %6 to i64*
  store i64 %76, i64* %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringAppend.865", %"class.WTF::StringAppend.865"* %6, i64 0, i32 0, i32 1
  store i8* %66, i8** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringAppend.865", %"class.WTF::StringAppend.865"* %6, i64 0, i32 0, i32 2
  store i32 %75, i32* %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringAppend.865", %"class.WTF::StringAppend.865"* %6, i64 0, i32 0, i32 3, i64 0
  %83 = getelementptr inbounds %"class.WTF::StringAppend.865", %"class.WTF::StringAppend.865"* %6, i64 0, i32 1
  %84 = bitcast i8* %82 to i32*
  store i32 -1431655766, i32* %84, align 4
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i64 0, i64 0), i8** %83, align 8, !alias.scope !35
  %85 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_10StringViewEPKcEcvNS_6StringEEv(%"class.WTF::StringAppend.865"* nonnull %6)
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %85, %"class.WTF::StringImpl"** %86, align 8
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %4, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %74
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #10
  br label %102

102:                                              ; preds = %74, %98, %101
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %78) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #10
  br label %103

103:                                              ; preds = %56, %102, %48, %29
  %104 = phi i16 [ 0, %29 ], [ 257, %48 ], [ 0, %102 ], [ 0, %56 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %105 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %106 = load i64*, i64** %105, align 8
  %107 = icmp eq i64* %106, null
  br i1 %107, label %117, label %108

108:                                              ; preds = %103
  %109 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %23, align 8
  %110 = bitcast %"class.v8::Isolate"* %109 to %"class.v8::internal::Isolate"*
  %111 = load i64, i64* %106, align 8
  %112 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %110, i64 %111) #10
  %113 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %109) #10
  br i1 %113, label %117, label %114

114:                                              ; preds = %108
  %115 = bitcast i64* %112 to %"class.v8::Value"*
  %116 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %109, %"class.v8::Value"* %115) #10
  br label %117

117:                                              ; preds = %114, %108, %103
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #10
  br label %133

133:                                              ; preds = %117, %129, %132
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #10
  ret i16 %104
}

declare zeroext i1 @_ZN5blink12V8DOMWrapper9IsWrapperEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_10StringViewEPKcEcvNS_6StringEEv(%"class.WTF::StringAppend.865"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1040", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1038", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1040", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1038", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.1038", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.865", %"class.WTF::StringAppend.865"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = bitcast %"class.WTF::StringTypeAdapter.1038"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringAppend.865", %"class.WTF::StringAppend.865"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %13 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1038"* nonnull %6, i8* %13) #10
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  br i1 %17, label %62, label %18

18:                                               ; preds = %1
  %19 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS_10StringViewEPKcE6lengthEv(%"class.WTF::StringAppend.865"* %0)
  %21 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %20, i8** nonnull dereferenceable(8) %7) #10
  %22 = load i8*, i8** %7, align 8
  %23 = bitcast %"class.WTF::StringTypeAdapter.1040"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1040", %"class.WTF::StringTypeAdapter.1040"* %4, i64 0, i32 0, i32 2
  %25 = bitcast %"class.WTF::StringAppend.865"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %25, i64 24, i1 false) #10
  %26 = bitcast %"class.WTF::StringTypeAdapter.1038"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #10
  %27 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1038"* nonnull %5, i8* %27) #10
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1040"* nonnull %4, i8* %22) #10
  %28 = load i32, i32* %24, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %22, i64 %29
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1038"* nonnull %5, i8* %30) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #10
  %31 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %31, label %106, label %32

32:                                               ; preds = %18
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #10
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %39
  call void @llvm.trap() #10
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %106

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #10
  br label %106

62:                                               ; preds = %1
  %63 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS_10StringViewEPKcE6lengthEv(%"class.WTF::StringAppend.865"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %8) #10
  %66 = load i16*, i16** %8, align 8
  %67 = bitcast %"class.WTF::StringTypeAdapter.1040"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #10
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1040", %"class.WTF::StringTypeAdapter.1040"* %2, i64 0, i32 0, i32 2
  %69 = bitcast %"class.WTF::StringAppend.865"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %69, i64 24, i1 false) #10
  %70 = bitcast %"class.WTF::StringTypeAdapter.1038"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 16, i1 false) #10
  %71 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1038"* nonnull %3, i8* %71) #10
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1040"* nonnull %2, i16* %66) #10
  %72 = load i32, i32* %68, align 8
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i16, i16* %66, i64 %73
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1038"* nonnull %3, i16* %74) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #10
  %75 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %75, label %106, label %76

76:                                               ; preds = %62
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %93

83:                                               ; preds = %76
  %84 = zext i32 %82 to i33
  %85 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #10
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !2

90:                                               ; preds = %83
  call void @llvm.trap() #10
  unreachable

91:                                               ; preds = %83
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %81, align 4
  br label %93

93:                                               ; preds = %76, %91
  %94 = phi i32 [ %92, %91 ], [ %82, %76 ]
  %95 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %96 = load atomic i32, i32* %77 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %101 = add i32 %94, -1
  store i32 %101, i32* %100, align 4
  br label %102

102:                                              ; preds = %99, %93
  %103 = phi i32 [ %101, %99 ], [ %94, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #10
  br label %106

106:                                              ; preds = %105, %102, %62, %61, %58, %18
  %107 = phi i8* [ %19, %18 ], [ %19, %58 ], [ %19, %61 ], [ %63, %62 ], [ %63, %102 ], [ %63, %105 ]
  %108 = phi i64 [ 0, %18 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %95, %102 ], [ %95, %105 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #10
  %109 = inttoptr i64 %108 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %109
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink23V8ScriptValueSerializer22GetSharedArrayBufferIdEPN2v87IsolateENS1_5LocalINS1_17SharedArrayBufferEEE(%"class.blink::V8ScriptValueSerializer"*, %"class.v8::Isolate"*, %"class.v8::SharedArrayBuffer"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::DOMSharedArrayBuffer"*, align 8
  %6 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 4, !range !31
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %59, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1
  %12 = bitcast %"class.blink::ExceptionContext"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 64, i1 false)
  %13 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 5
  %14 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 1, i32 0
  %16 = load i16, i16* %15, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 1, i32 2
  %18 = bitcast i8** %17 to <2 x i64>*
  %19 = load <2 x i64>, <2 x i64>* %18, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 %16, i16* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %22, align 2
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %24 = bitcast i8** %23 to <2 x i64>*
  store <2 x i64> %19, <2 x i64>* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %25, align 8
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %29 = bitcast %"class.WTF::StringImpl"** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #10
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* nonnull %4, i32 25, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.37, i64 0, i64 0)) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = icmp eq i64* %31, null
  br i1 %32, label %42, label %33

33:                                               ; preds = %9
  %34 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %26, align 8
  %35 = bitcast %"class.v8::Isolate"* %34 to %"class.v8::internal::Isolate"*
  %36 = load i64, i64* %31, align 8
  %37 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %35, i64 %36) #10
  %38 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %34) #10
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast i64* %37 to %"class.v8::Value"*
  %41 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %40) #10
  br label %42

42:                                               ; preds = %39, %33, %9
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #10
  br label %58

58:                                               ; preds = %42, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #10
  br label %111

59:                                               ; preds = %3
  %60 = bitcast %"class.blink::DOMSharedArrayBuffer"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #10
  %61 = bitcast %"class.v8::SharedArrayBuffer"* %2 to %"class.v8::Object"*
  %62 = tail call %"class.blink::DOMSharedArrayBuffer"* @_ZN5blink19V8SharedArrayBuffer6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %61) #10
  store %"class.blink::DOMSharedArrayBuffer"* %62, %"class.blink::DOMSharedArrayBuffer"** %5, align 8
  %63 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 7, i32 0
  %64 = getelementptr inbounds %"class.WTF::Vector.809", %"class.WTF::Vector.809"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::Member.812"*, %"class.blink::Member.812"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.blink::Member.812", %"class.blink::Member.812"* %65, i64 %68
  %70 = icmp eq i32 %67, 0
  %71 = ptrtoint %"class.blink::DOMSharedArrayBuffer"* %62 to i64
  br i1 %70, label %87, label %72

72:                                               ; preds = %59, %77
  %73 = phi %"class.blink::Member.812"* [ %78, %77 ], [ %65, %59 ]
  %74 = getelementptr inbounds %"class.blink::Member.812", %"class.blink::Member.812"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.blink::DOMSharedArrayBuffer"*, %"class.blink::DOMSharedArrayBuffer"** %74, align 8
  %76 = icmp eq %"class.blink::DOMSharedArrayBuffer"* %75, %62
  br i1 %76, label %80, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::Member.812", %"class.blink::Member.812"* %73, i64 1
  %79 = icmp ult %"class.blink::Member.812"* %78, %69
  br i1 %79, label %72, label %87

80:                                               ; preds = %72
  %81 = ptrtoint %"class.blink::Member.812"* %73 to i64
  %82 = ptrtoint %"class.blink::Member.812"* %65 to i64
  %83 = sub i64 %81, %82
  %84 = lshr exact i64 %83, 3
  %85 = trunc i64 %84 to i32
  %86 = icmp eq i32 %85, -1
  br i1 %86, label %87, label %106

87:                                               ; preds = %77, %59, %80
  %88 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %67, %89
  br i1 %90, label %101, label %91, !prof !2

91:                                               ; preds = %87
  %92 = bitcast %"class.blink::Member.812"* %69 to i64*
  store atomic i64 %71, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %91
  %96 = bitcast %"class.blink::DOMSharedArrayBuffer"* %62 to i8*
  %97 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #10
  br label %98

98:                                               ; preds = %95, %91
  %99 = load i32, i32* %66, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %66, align 4
  br label %103

101:                                              ; preds = %87
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_20DOMSharedArrayBufferEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.809"* %63, %"class.blink::DOMSharedArrayBuffer"** nonnull dereferenceable(8) %5) #10
  %102 = load i32, i32* %66, align 4
  br label %103

103:                                              ; preds = %98, %101
  %104 = phi i32 [ %100, %98 ], [ %102, %101 ]
  %105 = add i32 %104, -1
  br label %106

106:                                              ; preds = %103, %80
  %107 = phi i32 [ %105, %103 ], [ %85, %80 ]
  %108 = zext i32 %107 to i64
  %109 = shl nuw i64 %108, 32
  %110 = or i64 %109, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #10
  br label %111

111:                                              ; preds = %106, %58
  %112 = phi i64 [ 0, %58 ], [ %110, %106 ]
  ret i64 %112
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink23V8ScriptValueSerializer23GetWasmModuleTransferIdEPN2v87IsolateENS1_5LocalINS1_16WasmModuleObjectEEE(%"class.blink::V8ScriptValueSerializer"* nocapture readonly, %"class.v8::Isolate"*, %"class.v8::WasmModuleObject"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.v8::CompiledWasmModule", align 8
  %7 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 9
  %8 = load i8, i8* %7, align 4, !range !31
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1
  %13 = bitcast %"class.blink::ExceptionContext"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 64, i1 false)
  %14 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 5
  %15 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %15, i64 0, i32 1, i32 0
  %17 = load i16, i16* %16, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %15, i64 0, i32 1, i32 2
  %19 = bitcast i8** %18 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 %17, i16* %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %23, align 2
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %25 = bitcast i8** %24 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %25, align 8
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %30 = bitcast %"class.WTF::StringImpl"** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #10
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* nonnull %4, i32 25, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.38, i64 0, i64 0)) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = icmp eq i64* %32, null
  br i1 %33, label %43, label %34

34:                                               ; preds = %10
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %27, align 8
  %36 = bitcast %"class.v8::Isolate"* %35 to %"class.v8::internal::Isolate"*
  %37 = load i64, i64* %32, align 8
  %38 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %36, i64 %37) #10
  %39 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %35) #10
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = bitcast i64* %38 to %"class.v8::Value"*
  %42 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %35, %"class.v8::Value"* %41) #10
  br label %43

43:                                               ; preds = %40, %34, %10
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #10
  br label %59

59:                                               ; preds = %43, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #10
  br label %212

60:                                               ; preds = %3
  %61 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 8
  %62 = load i32, i32* %61, align 8
  switch i32 %62, label %212 [
    i32 1, label %113
    i32 3, label %63
  ]

63:                                               ; preds = %60
  %64 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %64) #10
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1
  %66 = bitcast %"class.blink::ExceptionContext"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 64, i1 false)
  %67 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 5
  %68 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %68, i64 0, i32 1, i32 0
  %70 = load i16, i16* %69, align 8
  %71 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %68, i64 0, i32 1, i32 2
  %72 = bitcast i8** %71 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8
  %74 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %75 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 %70, i16* %75, align 8
  %76 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %76, align 2
  %77 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %78 = bitcast i8** %77 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %78, align 8
  %79 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %79, align 8
  %80 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %80, align 8
  %81 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %81, align 8
  %82 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %83 = bitcast %"class.WTF::StringImpl"** %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 16, i1 false) #10
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* nonnull %5, i32 25, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.39, i64 0, i64 0)) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %84 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = icmp eq i64* %85, null
  br i1 %86, label %96, label %87

87:                                               ; preds = %63
  %88 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %80, align 8
  %89 = bitcast %"class.v8::Isolate"* %88 to %"class.v8::internal::Isolate"*
  %90 = load i64, i64* %85, align 8
  %91 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %89, i64 %90) #10
  %92 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %88) #10
  br i1 %92, label %96, label %93

93:                                               ; preds = %87
  %94 = bitcast i64* %91 to %"class.v8::Value"*
  %95 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %88, %"class.v8::Value"* %94) #10
  br label %96

96:                                               ; preds = %93, %87, %63
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #10
  br label %112

112:                                              ; preds = %96, %108, %111
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %64) #10
  br label %212

113:                                              ; preds = %60
  %114 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 2, i32 0
  %115 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %115, i64 0, i32 7
  %117 = bitcast %"class.v8::CompiledWasmModule"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %117) #10
  call void @_ZN2v816WasmModuleObject17GetCompiledModuleEv(%"class.v8::CompiledWasmModule"* nonnull sret %6, %"class.v8::WasmModuleObject"* %2) #10
  %118 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %115, i64 0, i32 7, i32 0, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %115, i64 0, i32 7, i32 0, i32 0, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %119, %121
  br i1 %122, label %156, label %123, !prof !2

123:                                              ; preds = %113
  %124 = getelementptr inbounds %"class.WTF::Vector.769", %"class.WTF::Vector.769"* %116, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.v8::CompiledWasmModule"*, %"class.v8::CompiledWasmModule"** %124, align 8
  %126 = zext i32 %119 to i64
  %127 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %125, i64 %126
  %128 = bitcast %"class.v8::CompiledWasmModule"* %6 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::CompiledWasmModule"* %127 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %125, i64 %126, i32 0, i32 1
  %132 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %6, i64 0, i32 0, i32 1
  %133 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %132, align 8
  store %"class.std::__1::__shared_weak_count"* %133, %"class.std::__1::__shared_weak_count"** %131, align 8
  %134 = icmp eq %"class.std::__1::__shared_weak_count"* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %123
  %136 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %133, i64 0, i32 0, i32 1
  %137 = atomicrmw add i64* %136, i64 1 monotonic
  br label %138

138:                                              ; preds = %135, %123
  %139 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %125, i64 %126, i32 1
  %140 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %6, i64 0, i32 1
  %141 = bitcast %"class.std::__1::basic_string"* %140 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %148, label %145

145:                                              ; preds = %138
  %146 = bitcast %"class.std::__1::basic_string"* %139 to i8*
  %147 = bitcast %"class.std::__1::basic_string"* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 24, i1 false) #10
  br label %153

148:                                              ; preds = %138
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %152 = load i64, i64* %151, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %139, i8* %150, i64 %152) #10
  br label %153

153:                                              ; preds = %148, %145
  %154 = load i32, i32* %118, align 4
  %155 = add i32 %154, 1
  store i32 %155, i32* %118, align 4
  br label %157

156:                                              ; preds = %113
  call void @_ZN3WTF6VectorIN2v818CompiledWasmModuleELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.769"* %116, %"class.v8::CompiledWasmModule"* nonnull dereferenceable(40) %6) #10
  br label %157

157:                                              ; preds = %153, %156
  %158 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %6, i64 0, i32 1
  %159 = bitcast %"class.std::__1::basic_string"* %158 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  call void @_ZdlPv(i8* %165) #11
  br label %166

166:                                              ; preds = %163, %157
  %167 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %6, i64 0, i32 0, i32 1
  %168 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %167, align 8
  %169 = icmp eq %"class.std::__1::__shared_weak_count"* %168, null
  br i1 %169, label %180, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %168, i64 0, i32 0, i32 1
  %172 = atomicrmw add i64* %171, i64 -1 acq_rel
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %180

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %168, i64 0, i32 0
  %176 = bitcast %"class.std::__1::__shared_weak_count"* %168 to void (%"class.std::__1::__shared_count"*)***
  %177 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %177, i64 2
  %179 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %178, align 8
  call void %179(%"class.std::__1::__shared_count"* %175) #10
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %168) #10
  br label %180

180:                                              ; preds = %166, %170, %174
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %117) #10
  %181 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %114, align 8
  %182 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %181, i64 0, i32 8, i32 0
  %183 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %182, align 8
  %184 = icmp eq %"class.blink::SecurityOrigin"* %183, null
  br i1 %184, label %185, label %204

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 1
  %187 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %186, align 8
  %188 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %187) #10
  %189 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %188) #10
  %190 = call %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin12IsolatedCopyEv(%"class.blink::SecurityOrigin"* %189) #10
  %191 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %181, i64 0, i32 8
  %192 = ptrtoint %"class.blink::SecurityOrigin"* %190 to i64
  %193 = bitcast %class.scoped_refptr.443* %191 to i64*
  %194 = getelementptr inbounds %class.scoped_refptr.443, %class.scoped_refptr.443* %191, i64 0, i32 0
  %195 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %194, align 8
  store i64 %192, i64* %193, align 8
  %196 = icmp eq %"class.blink::SecurityOrigin"* %195, null
  br i1 %196, label %204, label %197

197:                                              ; preds = %185
  %198 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %195, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %198) #10
  %199 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %195, i64 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %204

202:                                              ; preds = %197
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %195) #10
  %203 = bitcast %"class.blink::SecurityOrigin"* %195 to i8*
  call void @free(i8* %203) #10
  br label %204

204:                                              ; preds = %202, %197, %185, %180
  %205 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %114, align 8
  %206 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %205, i64 0, i32 7, i32 0, i32 0, i32 2
  %207 = load i32, i32* %206, align 4
  %208 = add i32 %207, -1
  %209 = zext i32 %208 to i64
  %210 = shl nuw i64 %209, 32
  %211 = or i64 %210, 1
  br label %212

212:                                              ; preds = %60, %204, %112, %59
  %213 = phi i64 [ 0, %59 ], [ %211, %204 ], [ 0, %112 ], [ 0, %60 ]
  ret i64 %213
}

declare void @_ZN2v816WasmModuleObject17GetCompiledModuleEv(%"class.v8::CompiledWasmModule"* sret, %"class.v8::WasmModuleObject"*) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5blink23V8ScriptValueSerializer22ReallocateBufferMemoryEPvmPm(%"class.blink::V8ScriptValueSerializer"* nocapture readnone, i8*, i64, i64* nocapture) unnamed_addr #0 align 2 {
  %5 = tail call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %2) #10
  store i64 %5, i64* %3, align 8
  %6 = tail call i8* @_ZN3WTF10Partitions16BufferTryReallocEPvmPKc(i8* %1, i64 %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.40, i64 0, i64 0)) #10
  ret i8* %6
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16BufferTryReallocEPvmPKc(i8*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23V8ScriptValueSerializer16FreeBufferMemoryEPv(%"class.blink::V8ScriptValueSerializer"* nocapture readnone, i8*) unnamed_addr #0 align 2 {
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %1) #10
  ret void
}

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23V8ScriptValueSerializerD2Ev(%"class.blink::V8ScriptValueSerializer"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink23V8ScriptValueSerializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  tail call void @_ZN2v815ValueSerializerD1Ev(%"class.v8::ValueSerializer"* %3) #10
  %4 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 2, i32 0
  %5 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %4, align 8
  %6 = icmp eq %"class.blink::SerializedScriptValue"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %5) #10
  %12 = bitcast %"class.blink::SerializedScriptValue"* %5 to i8*
  tail call void @free(i8* %12) #10
  br label %13

13:                                               ; preds = %1, %7, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23V8ScriptValueSerializerD0Ev(%"class.blink::V8ScriptValueSerializer"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink23V8ScriptValueSerializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 3
  tail call void @_ZN2v815ValueSerializerD1Ev(%"class.v8::ValueSerializer"* %3) #10
  %4 = getelementptr inbounds %"class.blink::V8ScriptValueSerializer", %"class.blink::V8ScriptValueSerializer"* %0, i64 0, i32 2, i32 0
  %5 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %4, align 8
  %6 = icmp eq %"class.blink::SerializedScriptValue"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %5) #10
  %12 = bitcast %"class.blink::SerializedScriptValue"* %5 to i8*
  tail call void @free(i8* %12) #10
  br label %13

13:                                               ; preds = %1, %7, %11
  %14 = bitcast %"class.blink::V8ScriptValueSerializer"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN2v815ValueSerializer13WriteRawBytesEPKvm(%"class.v8::ValueSerializer"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN2v815ValueSerializer11WriteUint32Ej(%"class.v8::ValueSerializer"*, i32) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18DOMArrayBufferBaseEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !30

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18DOMArrayBufferBaseEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.42, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.44, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([177 x i8], [177 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18DOMArrayBufferBaseEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.45, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.46, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare void @_ZN2v815ValueSerializer11WriteUint64Em(%"class.v8::ValueSerializer"*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #2

declare void @_ZN2v815ValueSerializer11WriteDoubleEd(%"class.v8::ValueSerializer"*, double) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #3

declare %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin12IsolatedCopyEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #10
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #10
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #10
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #10
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #10
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #10
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v815ValueSerializerD1Ev(%"class.v8::ValueSerializer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #3

declare i32 @MojoClose(i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.13"*, %"class.blink::OffscreenCanvas"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.13"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 %18
  %20 = bitcast %"class.blink::OffscreenCanvas"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.16"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.13"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !30

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %8, align 8
  %10 = icmp eq %"class.blink::Member.16"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15OffscreenCanvasEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.920"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.920"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.13"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.920", %"class.blink::HeapVectorBacking.920"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %8, align 8
  %26 = icmp eq %"class.blink::Member.16"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.16"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !31
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.50, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.51, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.13"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.13"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.13"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.13"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15OffscreenCanvasEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.920"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.920"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.920"* %17, null
  %23 = icmp ne %"class.blink::Member.16"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.16"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !30

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.13"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.920", %"class.blink::HeapVectorBacking.920"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.13"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.13"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.920", %"class.blink::HeapVectorBacking.920"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15OffscreenCanvasEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.42, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.920"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.44, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.920"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.920"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([171 x i8], [171 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15OffscreenCanvasEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.16"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.16"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15OffscreenCanvasEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15OffscreenCanvasEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15OffscreenCanvasEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::OffscreenCanvas"*
  tail call void @_ZNK5blink15OffscreenCanvas5TraceEPNS_7VisitorE(%"class.blink::OffscreenCanvas"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink15OffscreenCanvas5TraceEPNS_7VisitorE(%"class.blink::OffscreenCanvas"*, %"class.blink::Visitor"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1038", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1038"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1038", %"class.WTF::StringTypeAdapter.1038"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1038"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1038"* nonnull %4, i8* %14) #10
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.508"* %9) #10
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.508"* %9) #10
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.53, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.54, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.53, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1038", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1039", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1038", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1038"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1038"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1038"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.1038"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1038", %"class.WTF::StringTypeAdapter.1038"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1038"* nonnull %3, i8* %14) #10
  %15 = bitcast %"class.WTF::StringTypeAdapter.1039"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1039", %"class.WTF::StringTypeAdapter.1039"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1039", %"class.WTF::StringTypeAdapter.1039"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1039"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1038"* nonnull %3, i8* %1) #10
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1039", %"class.WTF::StringTypeAdapter.1039"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1040"* nonnull %34, i8* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.508"* %6) #10
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1038"* nonnull %5, i8* %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1038", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1039", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1038", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1038"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1038"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1038"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.1038"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1038", %"class.WTF::StringTypeAdapter.1038"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1038"* nonnull %3, i8* %14) #10
  %15 = bitcast %"class.WTF::StringTypeAdapter.1039"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1039", %"class.WTF::StringTypeAdapter.1039"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1039", %"class.WTF::StringTypeAdapter.1039"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1039"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1038"* nonnull %3, i16* %1) #10
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1039", %"class.WTF::StringTypeAdapter.1039"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1040"* nonnull %34, i16* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.508"* %6) #10
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1038"* nonnull %5, i16* %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1038"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.508"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1038", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.1038"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1038", %"class.WTF::StringTypeAdapter.1038"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.508", %"class.WTF::StringAppend.508"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.1038"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1038"* nonnull %4, i8* %13) #10
  %14 = getelementptr inbounds %"class.WTF::StringAppend.508", %"class.WTF::StringAppend.508"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.53, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.54, i64 0, i64 0), i8* %45, i8* %46) #10
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.53, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1038"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1040"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1038"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1040"*, i16*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.342"*, %"class.blink::MessagePort"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.342", %"class.WTF::Vector.342"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.342", %"class.WTF::Vector.342"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.342"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.342", %"class.WTF::Vector.342"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.345"*, %"class.blink::Member.345"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.345", %"class.blink::Member.345"* %16, i64 %18
  %20 = bitcast %"class.blink::MessagePort"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.345"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.342"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.342", %"class.WTF::Vector.342"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !30

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.342", %"class.WTF::Vector.342"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.345"*, %"class.blink::Member.345"** %8, align 8
  %10 = icmp eq %"class.blink::Member.345"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11MessagePortEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1049"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1049"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.342"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1049", %"class.blink::HeapVectorBacking.1049"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.345"*, %"class.blink::Member.345"** %8, align 8
  %26 = icmp eq %"class.blink::Member.345"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.345"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !31
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.50, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.51, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.342"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.342"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.342"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.342", %"class.WTF::Vector.342"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.342"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.342", %"class.WTF::Vector.342"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11MessagePortEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1049"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1049"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.342", %"class.WTF::Vector.342"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.345"*, %"class.blink::Member.345"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.342", %"class.WTF::Vector.342"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1049"* %17, null
  %23 = icmp ne %"class.blink::Member.345"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.345"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !30

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.342"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1049", %"class.blink::HeapVectorBacking.1049"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.342"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.342"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.342", %"class.WTF::Vector.342"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1049", %"class.blink::HeapVectorBacking.1049"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11MessagePortEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.42, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1049"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.44, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1049"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1049"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([163 x i8], [163 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11MessagePortEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.345"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.345", %"class.blink::Member.345"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.345"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11MessagePortEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11MessagePortEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MessagePort"*
  %4 = bitcast i8* %1 to void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)**, void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)*, void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)*, void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::MessagePort"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_10MojoHandleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.350"*, %"class.blink::MojoHandle"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_10MojoHandleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.350"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.353"*, %"class.blink::Member.353"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.353", %"class.blink::Member.353"* %16, i64 %18
  %20 = bitcast %"class.blink::MojoHandle"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.353"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_10MojoHandleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.350"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !30

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.353"*, %"class.blink::Member.353"** %8, align 8
  %10 = icmp eq %"class.blink::Member.353"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10MojoHandleEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1061"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1061"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.350"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1061", %"class.blink::HeapVectorBacking.1061"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.353"*, %"class.blink::Member.353"** %8, align 8
  %26 = icmp eq %"class.blink::Member.353"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.353"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !31
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.50, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.51, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_10MojoHandleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.350"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_10MojoHandleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.350"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.350"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.350"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10MojoHandleEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1061"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1061"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.353"*, %"class.blink::Member.353"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1061"* %17, null
  %23 = icmp ne %"class.blink::Member.353"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.353"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !30

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.350"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1061", %"class.blink::HeapVectorBacking.1061"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.350"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.350"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1061", %"class.blink::HeapVectorBacking.1061"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10MojoHandleEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.42, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1061"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.44, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1061"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1061"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([161 x i8], [161 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_10MojoHandleEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.353"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.353", %"class.blink::Member.353"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.353"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10MojoHandleEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10MojoHandleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_14DOMArrayBufferEEEvOT_(%"class.WTF::Vector"*, %"class.blink::DOMArrayBuffer"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::DOMArrayBuffer"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !30

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18DOMArrayBufferBaseEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !31
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.50, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.51, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_20DOMSharedArrayBufferEEEvOT_(%"class.WTF::Vector"*, %"class.blink::DOMSharedArrayBuffer"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::DOMSharedArrayBuffer"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11ImageBitmapEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.5"*, %"class.blink::ImageBitmap"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_11ImageBitmapEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.5"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %16, i64 %18
  %20 = bitcast %"class.blink::ImageBitmap"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.8"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11ImageBitmapEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.5"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !30

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %8, align 8
  %10 = icmp eq %"class.blink::Member.8"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11ImageBitmapEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1073"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1073"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1073", %"class.blink::HeapVectorBacking.1073"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %8, align 8
  %26 = icmp eq %"class.blink::Member.8"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.8"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !31
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.50, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.51, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11ImageBitmapEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.5"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11ImageBitmapEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.5"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.5"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11ImageBitmapEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1073"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1073"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1073"* %17, null
  %23 = icmp ne %"class.blink::Member.8"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.8"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !30

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.5"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1073", %"class.blink::HeapVectorBacking.1073"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.5"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1073", %"class.blink::HeapVectorBacking.1073"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11ImageBitmapEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.42, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1073"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.44, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1073"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1073"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([163 x i8], [163 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11ImageBitmapEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.8"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.8"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11ImageBitmapEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11ImageBitmapEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11ImageBitmapEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14ReadableStreamEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.358"*, %"class.blink::ReadableStream"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14ReadableStreamEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.358"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.361"*, %"class.blink::Member.361"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.361", %"class.blink::Member.361"* %16, i64 %18
  %20 = bitcast %"class.blink::ReadableStream"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.361"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14ReadableStreamEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.358"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !30

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.361"*, %"class.blink::Member.361"** %8, align 8
  %10 = icmp eq %"class.blink::Member.361"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ReadableStreamEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1085"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1085"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.358"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1085", %"class.blink::HeapVectorBacking.1085"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.361"*, %"class.blink::Member.361"** %8, align 8
  %26 = icmp eq %"class.blink::Member.361"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.361"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !31
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.50, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.51, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14ReadableStreamEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.358"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14ReadableStreamEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.358"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.358"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.358"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ReadableStreamEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1085"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1085"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.361"*, %"class.blink::Member.361"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1085"* %17, null
  %23 = icmp ne %"class.blink::Member.361"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.361"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !30

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.358"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1085", %"class.blink::HeapVectorBacking.1085"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.358"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.358"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1085", %"class.blink::HeapVectorBacking.1085"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ReadableStreamEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.42, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1085"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.44, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1085"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1085"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14ReadableStreamEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.361"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.361", %"class.blink::Member.361"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.361"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14ReadableStreamEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14ReadableStreamEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ReadableStreamEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ReadableStream"*
  %4 = bitcast i8* %1 to void (%"class.blink::ReadableStream"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ReadableStream"*, %"class.blink::Visitor"*)**, void (%"class.blink::ReadableStream"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ReadableStream"*, %"class.blink::Visitor"*)*, void (%"class.blink::ReadableStream"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ReadableStream"*, %"class.blink::Visitor"*)*, void (%"class.blink::ReadableStream"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ReadableStream"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14WritableStreamEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.381"*, %"class.blink::WritableStream"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.381", %"class.WTF::Vector.381"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.381", %"class.WTF::Vector.381"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14WritableStreamEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.381"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.381", %"class.WTF::Vector.381"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.384"*, %"class.blink::Member.384"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.384", %"class.blink::Member.384"* %16, i64 %18
  %20 = bitcast %"class.blink::WritableStream"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.384"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14WritableStreamEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.381"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.381", %"class.WTF::Vector.381"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !30

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.381", %"class.WTF::Vector.381"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.384"*, %"class.blink::Member.384"** %8, align 8
  %10 = icmp eq %"class.blink::Member.384"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14WritableStreamEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1097"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1097"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.381"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1097", %"class.blink::HeapVectorBacking.1097"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.384"*, %"class.blink::Member.384"** %8, align 8
  %26 = icmp eq %"class.blink::Member.384"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.384"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !31
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.50, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.51, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14WritableStreamEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.381"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14WritableStreamEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.381"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.381"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.381", %"class.WTF::Vector.381"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.381"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.381", %"class.WTF::Vector.381"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14WritableStreamEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1097"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1097"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.381", %"class.WTF::Vector.381"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.384"*, %"class.blink::Member.384"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.381", %"class.WTF::Vector.381"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1097"* %17, null
  %23 = icmp ne %"class.blink::Member.384"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.384"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !30

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.381"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1097", %"class.blink::HeapVectorBacking.1097"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.381"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.381"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.381", %"class.WTF::Vector.381"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1097", %"class.blink::HeapVectorBacking.1097"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14WritableStreamEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.42, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1097"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.44, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1097"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1097"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14WritableStreamEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.384"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.384", %"class.blink::Member.384"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.384"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14WritableStreamEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14WritableStreamEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14WritableStreamEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WritableStream"*
  %4 = bitcast i8* %1 to void (%"class.blink::WritableStream"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::WritableStream"*, %"class.blink::Visitor"*)**, void (%"class.blink::WritableStream"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WritableStream"*, %"class.blink::Visitor"*)*, void (%"class.blink::WritableStream"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::WritableStream"*, %"class.blink::Visitor"*)*, void (%"class.blink::WritableStream"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::WritableStream"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15TransformStreamEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.409"*, %"class.blink::TransformStream"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15TransformStreamEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.409"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.412"*, %"class.blink::Member.412"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.412", %"class.blink::Member.412"* %16, i64 %18
  %20 = bitcast %"class.blink::TransformStream"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.412"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15TransformStreamEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.409"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !30

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.412"*, %"class.blink::Member.412"** %8, align 8
  %10 = icmp eq %"class.blink::Member.412"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15TransformStreamEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1109"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1109"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.409"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1109", %"class.blink::HeapVectorBacking.1109"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.412"*, %"class.blink::Member.412"** %8, align 8
  %26 = icmp eq %"class.blink::Member.412"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.412"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !31
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.50, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.51, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15TransformStreamEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.409"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15TransformStreamEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.409"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.409"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.409"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15TransformStreamEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1109"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1109"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.412"*, %"class.blink::Member.412"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1109"* %17, null
  %23 = icmp ne %"class.blink::Member.412"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.412"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !30

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.409"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1109", %"class.blink::HeapVectorBacking.1109"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.409"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.409"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1109", %"class.blink::HeapVectorBacking.1109"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15TransformStreamEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.42, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1109"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.44, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1109"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1109"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([171 x i8], [171 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15TransformStreamEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.412"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.412", %"class.blink::Member.412"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.412"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15TransformStreamEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15TransformStreamEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15TransformStreamEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::TransformStream"*
  tail call void @_ZNK5blink15TransformStream5TraceEPNS_7VisitorE(%"class.blink::TransformStream"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink15TransformStream5TraceEPNS_7VisitorE(%"class.blink::TransformStream"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.50, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #10
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #10
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !31
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #10
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap.734", %"class.WTF::HashMap.734"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair.737"*, %"struct.WTF::KeyValuePair.737"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.735"* %47, %"class.blink::ScriptWrappable"* %0) #10
  %49 = extractvalue { %"struct.WTF::KeyValuePair.737"*, %"struct.WTF::KeyValuePair.737"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap.734", %"class.WTF::HashMap.734"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair.737"*, %"struct.WTF::KeyValuePair.737"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.737", %"struct.WTF::KeyValuePair.737"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair.737"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.737", %"struct.WTF::KeyValuePair.737"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #10
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.56, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i64 0, i64 0)) #10
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.56, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.58, i64 0, i64 0)) #10
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.737"*, %"struct.WTF::KeyValuePair.737"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.735"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.735", %"class.WTF::HashTable.735"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.737"*, %"struct.WTF::KeyValuePair.737"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.737"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.735", %"class.WTF::HashTable.735"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.737", %"struct.WTF::KeyValuePair.737"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.737", %"struct.WTF::KeyValuePair.737"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.737", %"struct.WTF::KeyValuePair.737"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.737", %"struct.WTF::KeyValuePair.737"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.737", %"struct.WTF::KeyValuePair.737"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.737"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.737"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.737", %"struct.WTF::KeyValuePair.737"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.737", %"struct.WTF::KeyValuePair.737"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.737"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.737"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.737"*, %"struct.WTF::KeyValuePair.737"* } undef, %"struct.WTF::KeyValuePair.737"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.737"*, %"struct.WTF::KeyValuePair.737"* } %78, %"struct.WTF::KeyValuePair.737"* %77, 1
  ret { %"struct.WTF::KeyValuePair.737"*, %"struct.WTF::KeyValuePair.737"* } %79
}

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector"*, %"class.blink::Member"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %43

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member"*, %"class.blink::Member"** %14, align 8
  %16 = icmp ugt %"class.blink::Member"* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 %18
  %20 = icmp ugt %"class.blink::Member"* %19, %1
  br i1 %20, label %29, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %28) #10
  br label %43

29:                                               ; preds = %17
  %30 = ptrtoint %"class.blink::Member"* %1 to i64
  %31 = ptrtoint %"class.blink::Member"* %15 to i64
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = lshr i32 %11, 2
  %35 = add nuw i32 %11, 1
  %36 = add i32 %35, %34
  %37 = icmp ugt i32 %36, 4
  %38 = select i1 %37, i32 %36, i32 4
  %39 = icmp ugt i32 %38, %9
  %40 = select i1 %39, i32 %38, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %40) #10
  %41 = load %"class.blink::Member"*, %"class.blink::Member"** %14, align 8
  %42 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %41, i64 %33
  br label %43

43:                                               ; preds = %29, %21, %3
  %44 = phi %"class.blink::Member"* [ %1, %3 ], [ %1, %21 ], [ %42, %29 ]
  %45 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #10
  %46 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %46, align 8
  %47 = load i32, i32* %7, align 4
  %48 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = icmp ult i32 %9, %47
  br i1 %49, label %51, label %50

50:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* null, i8** %46, align 8
  br label %60

51:                                               ; preds = %43
  %52 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %53 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %47) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.59, i64 0, i64 0), i8* %52, i8* %53) #10
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* %55, i8** %46, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.50, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #10
  br label %60

60:                                               ; preds = %50, %51, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::Member"*, %"class.blink::Member"** %61, align 8
  %63 = load i32, i32* %7, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 %64
  %66 = icmp ne %"class.blink::Member"* %65, null
  %67 = icmp ne %"class.blink::Member"* %44, null
  %68 = and i1 %67, %66
  br i1 %68, label %69, label %88, !prof !30

69:                                               ; preds = %60
  %70 = zext i32 %2 to i64
  %71 = bitcast %"class.blink::Member"* %65 to i8*
  %72 = bitcast %"class.blink::Member"* %44 to i8*
  %73 = shl nuw nsw i64 %70, 3
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %71, i8* nonnull %72, i64 %73) #10
  %74 = icmp eq i32 %2, 0
  br i1 %74, label %88, label %75

75:                                               ; preds = %69, %85
  %76 = phi i64 [ %78, %85 ], [ %70, %69 ]
  %77 = phi %"class.blink::Member"* [ %86, %85 ], [ %65, %69 ]
  %78 = add nsw i64 %76, -1
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.blink::Member"* %77 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #10
  br label %85

85:                                               ; preds = %81, %75
  %86 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %77, i64 1
  %87 = icmp eq i64 %78, 0
  br i1 %87, label %88, label %75

88:                                               ; preds = %85, %60, %69
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.779"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_S6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.776"*, %"class.WTF::String"* dereferenceable(8), %class.scoped_refptr.818* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.779"*, %"struct.WTF::KeyValuePair.779"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.779"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.779"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.776"* %0, %"struct.WTF::KeyValuePair.779"* null)
  %9 = load %"struct.WTF::KeyValuePair.779"*, %"struct.WTF::KeyValuePair.779"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.779"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #10
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.779"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.779"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.779"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #10
  br i1 %57, label %126, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.779"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.779"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.779"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #10
  %72 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.779"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = bitcast %"class.WTF::String"* %1 to i64*
  %81 = load i64, i64* %80, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %82 = bitcast %"struct.WTF::KeyValuePair.779"* %79 to i64*
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %79, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  store i64 %81, i64* %82, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #10
  br label %99

99:                                               ; preds = %98, %95, %78
  %100 = getelementptr inbounds %class.scoped_refptr.818, %class.scoped_refptr.818* %2, i64 0, i32 0
  %101 = bitcast %class.scoped_refptr.818* %2 to i64*
  %102 = load i64, i64* %101, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %100, align 8
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %79, i64 0, i32 1
  %104 = bitcast %class.scoped_refptr.818* %103 to i64*
  %105 = getelementptr inbounds %class.scoped_refptr.818, %class.scoped_refptr.818* %103, i64 0, i32 0
  %106 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %105, align 8
  store i64 %102, i64* %104, align 8
  %107 = icmp eq %"class.blink::BlobDataHandle"* %106, null
  br i1 %107, label %114, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw sub i32* %109, i32 1 acq_rel
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %106) #10
  %113 = bitcast %"class.blink::BlobDataHandle"* %106 to i8*
  tail call void @free(i8* %113) #10
  br label %114

114:                                              ; preds = %99, %108, %112
  %115 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %0, i64 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = add i32 %116, 1
  store i32 %117, i32* %115, align 4
  %118 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %0, i64 0, i32 3
  %119 = load i32, i32* %118, align 8
  %120 = add i32 %119, %117
  %121 = shl i32 %120, 1
  %122 = load i32, i32* %12, align 8
  %123 = icmp ult i32 %121, %122
  br i1 %123, label %126, label %124

124:                                              ; preds = %114
  %125 = tail call %"struct.WTF::KeyValuePair.779"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.776"* %0, %"struct.WTF::KeyValuePair.779"* %79)
  br label %126

126:                                              ; preds = %54, %114, %124
  %127 = phi i8 [ 1, %114 ], [ 1, %124 ], [ 0, %54 ]
  %128 = phi %"struct.WTF::KeyValuePair.779"* [ %79, %114 ], [ %125, %124 ], [ %47, %54 ]
  %129 = insertvalue { %"struct.WTF::KeyValuePair.779"*, i8 } undef, %"struct.WTF::KeyValuePair.779"* %128, 0
  %130 = insertvalue { %"struct.WTF::KeyValuePair.779"*, i8 } %129, i8 %127, 1
  ret { %"struct.WTF::KeyValuePair.779"*, i8 } %130
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.779"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.776"*, %"struct.WTF::KeyValuePair.779"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.60, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.61, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringE13scoped_refptrIN5blink14BlobDataHandleEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.779"*
  %37 = call %"struct.WTF::KeyValuePair.779"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.776"* %0, %"struct.WTF::KeyValuePair.779"* %36, i32 %32, %"struct.WTF::KeyValuePair.779"* %1) #10
  ret %"struct.WTF::KeyValuePair.779"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.779"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.776"*, %"struct.WTF::KeyValuePair.779"*, i32, %"struct.WTF::KeyValuePair.779"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.776", align 8
  %6 = bitcast %"class.WTF::HashTable.776"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.776"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.779"* %1, %"struct.WTF::KeyValuePair.779"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.779"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.776"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.776"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.779"*, %"struct.WTF::KeyValuePair.779"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.779"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.776"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.776"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.779"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.779"*
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS7_j(%"struct.WTF::KeyValuePair.779"* nonnull %37, i32 %34) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair.779"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.779"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.779"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.779"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.779"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_(%"class.WTF::HashTable.776"* nonnull %5, %"struct.WTF::KeyValuePair.779"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.779"*, %"struct.WTF::KeyValuePair.779"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.779"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.779"* %53, %"struct.WTF::KeyValuePair.779"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.779"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.779"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.779"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.779"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_(%"class.WTF::HashTable.776"*, %"struct.WTF::KeyValuePair.779"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.779"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.776"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.779"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %5, i64 0, i32 1, i32 0
  %7 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %6, align 8
  %8 = icmp eq %"class.blink::BlobDataHandle"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %7) #10
  %14 = bitcast %"class.blink::BlobDataHandle"* %7 to i8*
  tail call void @free(i8* %14) #10
  br label %15

15:                                               ; preds = %13, %9, %2
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %5, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #10
  br label %32

32:                                               ; preds = %15, %28, %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %1, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"struct.WTF::KeyValuePair.779"* %1 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"struct.WTF::KeyValuePair.779"* %5 to i64*
  store i64 %35, i64* %36, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %33, align 8
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %5, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %class.scoped_refptr.818, %class.scoped_refptr.818* %38, i64 0, i32 0
  %40 = bitcast %class.scoped_refptr.818* %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %class.scoped_refptr.818* %37 to i64*
  store i64 %41, i64* %42, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %39, align 8
  ret %"struct.WTF::KeyValuePair.779"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.779"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.776"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.779"*, %"struct.WTF::KeyValuePair.779"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.776", %"class.WTF::HashTable.776"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #10
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.779"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.779"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.779"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.779"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.779"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.779"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.779"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.779"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #10
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.779"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.779"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.779"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.779"*, i8 } undef, %"struct.WTF::KeyValuePair.779"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.779"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.779"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS7_j(%"struct.WTF::KeyValuePair.779"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %41, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.779"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #10
  ret void

8:                                                ; preds = %41, %4
  %9 = phi i64 [ 0, %4 ], [ %42, %41 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.779"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %41, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %0, i64 %9, i32 1, i32 0
  %16 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %15, align 8
  %17 = icmp eq %"class.blink::BlobDataHandle"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %16) #10
  %23 = bitcast %"class.blink::BlobDataHandle"* %16 to i8*
  tail call void @free(i8* %23) #10
  br label %24

24:                                               ; preds = %22, %18, %14
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.779", %"struct.WTF::KeyValuePair.779"* %10, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #10
  br label %41

41:                                               ; preds = %40, %37, %24, %8
  %42 = add nuw nsw i64 %9, 1
  %43 = icmp eq i64 %42, %5
  br i1 %43, label %6, label %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11WebBlobInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.795"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %22

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.795", %"class.WTF::Vector.795"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.795", %"class.WTF::Vector.795"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.795"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.795", %"class.WTF::Vector.795"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.blink::WebBlobInfo"* [ %18, %14 ], [ %6, %4 ]
  %16 = phi %"class.blink::WebBlobInfo"* [ %17, %14 ], [ null, %4 ]
  tail call void @_ZN5blink11WebBlobInfoC1ERKS0_(%"class.blink::WebBlobInfo"* %16, %"class.blink::WebBlobInfo"* dereferenceable(64) %15) #10
  tail call void @_ZN5blink11WebBlobInfoD1Ev(%"class.blink::WebBlobInfo"* %15) #10
  %17 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %16, i64 1
  %18 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %15, i64 1
  %19 = icmp eq %"class.blink::WebBlobInfo"* %18, %10
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %4
  %21 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %6, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #10
  br label %51

22:                                               ; preds = %2
  %23 = zext i32 %1 to i64
  %24 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11WebBlobInfoEEEmm(i64 %23) #10
  %25 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11WebBlobInfoEEEPKcv, i64 0, i64 0)) #10
  %26 = lshr i64 %24, 6
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.WTF::Vector.795", %"class.WTF::Vector.795"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector.795", %"class.WTF::Vector.795"* %0, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %45, label %35

35:                                               ; preds = %22
  %36 = bitcast i8* %25 to %"class.blink::WebBlobInfo"*
  br label %37

37:                                               ; preds = %35, %37
  %38 = phi %"class.blink::WebBlobInfo"* [ %41, %37 ], [ %29, %35 ]
  %39 = phi %"class.blink::WebBlobInfo"* [ %40, %37 ], [ %36, %35 ]
  tail call void @_ZN5blink11WebBlobInfoC1ERKS0_(%"class.blink::WebBlobInfo"* %39, %"class.blink::WebBlobInfo"* dereferenceable(64) %38) #10
  tail call void @_ZN5blink11WebBlobInfoD1Ev(%"class.blink::WebBlobInfo"* %38) #10
  %40 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %39, i64 1
  %41 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %38, i64 1
  %42 = icmp eq %"class.blink::WebBlobInfo"* %41, %33
  br i1 %42, label %43, label %37

43:                                               ; preds = %37
  %44 = load %"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"** %28, align 8
  br label %45

45:                                               ; preds = %43, %22
  %46 = phi %"class.blink::WebBlobInfo"* [ %44, %43 ], [ %29, %22 ]
  %47 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %46, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %47) #10
  %48 = bitcast %"class.WTF::Vector.795"* %0 to i64*
  store atomic i64 %27, i64* %48 monotonic, align 8
  %49 = trunc i64 %26 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.795", %"class.WTF::Vector.795"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %45, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11WebBlobInfoEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 33521664
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 33521664) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.62, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 6
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: nounwind
declare void @_ZN5blink11WebBlobInfoD1Ev(%"class.blink::WebBlobInfo"*) unnamed_addr #3

declare void @_ZN5blink11WebBlobInfoC1ERKS0_(%"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"* dereferenceable(64)) unnamed_addr #2

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink11WebBlobInfoC1E13scoped_refptrINS_14BlobDataHandleEERKNS_9WebStringEm(%"class.blink::WebBlobInfo"*, %"class.blink::BlobDataHandle"*, %"class.blink::WebString"* dereferenceable(8), i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo16ScopedHandleBaseINS1_6HandleEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.780"*, %"class.mojo::ScopedHandleBase.509"* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.780", %"class.WTF::Vector.780"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.780", %"class.WTF::Vector.780"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::ScopedHandleBase.509"*, %"class.mojo::ScopedHandleBase.509"** %6, align 8
  %8 = icmp ugt %"class.mojo::ScopedHandleBase.509"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::ScopedHandleBase.509"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.780", %"class.WTF::Vector.780"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !30

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::ScopedHandleBase.509"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16ScopedHandleBaseINS2_6HandleEEEEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16ScopedHandleBaseINS1_6HandleEEEEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.780"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::ScopedHandleBase.509"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo16ScopedHandleBaseINS1_6HandleEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.780"* %0, i32 %22) #10
  %36 = load %"class.mojo::ScopedHandleBase.509"*, %"class.mojo::ScopedHandleBase.509"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::ScopedHandleBase.509"* %1 to i64
  %39 = ptrtoint %"class.mojo::ScopedHandleBase.509"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 2
  %42 = getelementptr inbounds %"class.WTF::Vector.780", %"class.WTF::Vector.780"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !30

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::ScopedHandleBase.509"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16ScopedHandleBaseINS2_6HandleEEEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16ScopedHandleBaseINS1_6HandleEEEEEPKcv, i64 0, i64 0)) #10
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.780"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 2
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::ScopedHandleBase.509"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo16ScopedHandleBaseINS1_6HandleEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.780"* %0, i32 %50) #10
  %64 = load %"class.mojo::ScopedHandleBase.509"*, %"class.mojo::ScopedHandleBase.509"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::ScopedHandleBase.509"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::ScopedHandleBase.509"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::ScopedHandleBase.509"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %69, i64 %72, i32 0, i32 0
  %74 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %70, i64 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4, !noalias !38
  store i32 %75, i32* %73, align 4, !alias.scope !38
  store i32 0, i32* %74, align 4, !noalias !38
  %76 = load i32, i32* %3, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo16ScopedHandleBaseINS1_6HandleEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.780"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %94

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.780", %"class.WTF::Vector.780"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::ScopedHandleBase.509"*, %"class.mojo::ScopedHandleBase.509"** %5, align 8
  %7 = bitcast %"class.mojo::ScopedHandleBase.509"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.780", %"class.WTF::Vector.780"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.780"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.780", %"class.WTF::Vector.780"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %93, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 2
  %17 = add nsw i64 %16, -4
  %18 = lshr exact i64 %17, 2
  %19 = add nuw nsw i64 %18, 1
  %20 = icmp ult i64 %19, 8
  br i1 %20, label %81, label %21

21:                                               ; preds = %15
  %22 = and i64 %19, 9223372036854775800
  %23 = getelementptr %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %6, i64 %22
  %24 = getelementptr %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* null, i64 %22
  %25 = add nsw i64 %22, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %25, 0
  br i1 %29, label %63, label %30

30:                                               ; preds = %21
  %31 = sub nuw nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %60, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %61, %32 ]
  %35 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* null, i64 %33, i32 0, i32 0
  %36 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %6, i64 %33, i32 0, i32 0
  %37 = bitcast i32* %36 to <4 x i32>*
  %38 = load <4 x i32>, <4 x i32>* %37, align 4, !noalias !41
  %39 = getelementptr i32, i32* %36, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  %41 = load <4 x i32>, <4 x i32>* %40, align 4, !noalias !41
  %42 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> %38, <4 x i32>* %42, align 64, !alias.scope !41
  %43 = getelementptr i32, i32* %35, i64 4
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %41, <4 x i32>* %44, align 16, !alias.scope !41
  %45 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %45, align 4, !noalias !41
  %46 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %46, align 4, !noalias !41
  %47 = or i64 %33, 8
  %48 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* null, i64 %47, i32 0, i32 0
  %49 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %6, i64 %47, i32 0, i32 0
  %50 = bitcast i32* %49 to <4 x i32>*
  %51 = load <4 x i32>, <4 x i32>* %50, align 4, !noalias !41
  %52 = getelementptr i32, i32* %49, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  %54 = load <4 x i32>, <4 x i32>* %53, align 4, !noalias !41
  %55 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %51, <4 x i32>* %55, align 32, !alias.scope !41
  %56 = getelementptr i32, i32* %48, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> %54, <4 x i32>* %57, align 16, !alias.scope !41
  %58 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %58, align 4, !noalias !41
  %59 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %59, align 4, !noalias !41
  %60 = add i64 %33, 16
  %61 = add i64 %34, -2
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %32, !llvm.loop !44

63:                                               ; preds = %32, %21
  %64 = phi i64 [ 0, %21 ], [ %60, %32 ]
  %65 = icmp eq i64 %28, 0
  br i1 %65, label %79, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* null, i64 %64, i32 0, i32 0
  %68 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %6, i64 %64, i32 0, i32 0
  %69 = bitcast i32* %68 to <4 x i32>*
  %70 = load <4 x i32>, <4 x i32>* %69, align 4, !noalias !41
  %71 = getelementptr i32, i32* %68, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  %73 = load <4 x i32>, <4 x i32>* %72, align 4, !noalias !41
  %74 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> %70, <4 x i32>* %74, align 32, !alias.scope !41
  %75 = getelementptr i32, i32* %67, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %73, <4 x i32>* %76, align 16, !alias.scope !41
  %77 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %77, align 4, !noalias !41
  %78 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %78, align 4, !noalias !41
  br label %79

79:                                               ; preds = %63, %66
  %80 = icmp eq i64 %19, %22
  br i1 %80, label %93, label %81

81:                                               ; preds = %79, %15
  %82 = phi %"class.mojo::ScopedHandleBase.509"* [ %6, %15 ], [ %23, %79 ]
  %83 = phi %"class.mojo::ScopedHandleBase.509"* [ null, %15 ], [ %24, %79 ]
  br label %84

84:                                               ; preds = %81, %84
  %85 = phi %"class.mojo::ScopedHandleBase.509"* [ %91, %84 ], [ %82, %81 ]
  %86 = phi %"class.mojo::ScopedHandleBase.509"* [ %90, %84 ], [ %83, %81 ]
  %87 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %86, i64 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %85, i64 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !41
  store i32 %89, i32* %87, align 4, !alias.scope !41
  store i32 0, i32* %88, align 4, !noalias !41
  %90 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %86, i64 1
  %91 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %85, i64 1
  %92 = icmp eq %"class.mojo::ScopedHandleBase.509"* %91, %11
  br i1 %92, label %93, label %84, !llvm.loop !46

93:                                               ; preds = %84, %79, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #10
  br label %196

94:                                               ; preds = %2
  %95 = zext i32 %1 to i64
  %96 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16ScopedHandleBaseINS2_6HandleEEEEEmm(i64 %95) #10
  %97 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %96, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16ScopedHandleBaseINS1_6HandleEEEEEPKcv, i64 0, i64 0)) #10
  %98 = lshr i64 %96, 2
  %99 = ptrtoint i8* %97 to i64
  %100 = getelementptr inbounds %"class.WTF::Vector.780", %"class.WTF::Vector.780"* %0, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.mojo::ScopedHandleBase.509"*, %"class.mojo::ScopedHandleBase.509"** %100, align 8
  %102 = getelementptr inbounds %"class.WTF::Vector.780", %"class.WTF::Vector.780"* %0, i64 0, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %101, i64 %104
  %106 = icmp eq i32 %103, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %94
  %108 = bitcast %"class.mojo::ScopedHandleBase.509"* %101 to i8*
  br label %191

109:                                              ; preds = %94
  %110 = bitcast i8* %97 to %"class.mojo::ScopedHandleBase.509"*
  %111 = shl nuw nsw i64 %104, 2
  %112 = add nsw i64 %111, -4
  %113 = lshr exact i64 %112, 2
  %114 = add nuw nsw i64 %113, 1
  %115 = icmp ult i64 %114, 8
  br i1 %115, label %176, label %116

116:                                              ; preds = %109
  %117 = and i64 %114, 9223372036854775800
  %118 = getelementptr %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %101, i64 %117
  %119 = getelementptr %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %110, i64 %117
  %120 = add nsw i64 %117, -8
  %121 = lshr exact i64 %120, 3
  %122 = add nuw nsw i64 %121, 1
  %123 = and i64 %122, 1
  %124 = icmp eq i64 %120, 0
  br i1 %124, label %158, label %125

125:                                              ; preds = %116
  %126 = sub nuw nsw i64 %122, %123
  br label %127

127:                                              ; preds = %127, %125
  %128 = phi i64 [ 0, %125 ], [ %155, %127 ]
  %129 = phi i64 [ %126, %125 ], [ %156, %127 ]
  %130 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %110, i64 %128, i32 0, i32 0
  %131 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %101, i64 %128, i32 0, i32 0
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !noalias !48
  %134 = getelementptr i32, i32* %131, i64 4
  %135 = bitcast i32* %134 to <4 x i32>*
  %136 = load <4 x i32>, <4 x i32>* %135, align 4, !noalias !48
  %137 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %137, align 4, !alias.scope !48
  %138 = getelementptr i32, i32* %130, i64 4
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %136, <4 x i32>* %139, align 4, !alias.scope !48
  %140 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %140, align 4, !noalias !48
  %141 = bitcast i32* %134 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %141, align 4, !noalias !48
  %142 = or i64 %128, 8
  %143 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %110, i64 %142, i32 0, i32 0
  %144 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %101, i64 %142, i32 0, i32 0
  %145 = bitcast i32* %144 to <4 x i32>*
  %146 = load <4 x i32>, <4 x i32>* %145, align 4, !noalias !48
  %147 = getelementptr i32, i32* %144, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !noalias !48
  %150 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> %146, <4 x i32>* %150, align 4, !alias.scope !48
  %151 = getelementptr i32, i32* %143, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %152, align 4, !alias.scope !48
  %153 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %153, align 4, !noalias !48
  %154 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %154, align 4, !noalias !48
  %155 = add i64 %128, 16
  %156 = add i64 %129, -2
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %127, !llvm.loop !51

158:                                              ; preds = %127, %116
  %159 = phi i64 [ 0, %116 ], [ %155, %127 ]
  %160 = icmp eq i64 %123, 0
  br i1 %160, label %174, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %110, i64 %159, i32 0, i32 0
  %163 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %101, i64 %159, i32 0, i32 0
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4, !noalias !48
  %166 = getelementptr i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4, !noalias !48
  %169 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %165, <4 x i32>* %169, align 4, !alias.scope !48
  %170 = getelementptr i32, i32* %162, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %171, align 4, !alias.scope !48
  %172 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %172, align 4, !noalias !48
  %173 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %173, align 4, !noalias !48
  br label %174

174:                                              ; preds = %158, %161
  %175 = icmp eq i64 %114, %117
  br i1 %175, label %188, label %176

176:                                              ; preds = %174, %109
  %177 = phi %"class.mojo::ScopedHandleBase.509"* [ %101, %109 ], [ %118, %174 ]
  %178 = phi %"class.mojo::ScopedHandleBase.509"* [ %110, %109 ], [ %119, %174 ]
  br label %179

179:                                              ; preds = %176, %179
  %180 = phi %"class.mojo::ScopedHandleBase.509"* [ %186, %179 ], [ %177, %176 ]
  %181 = phi %"class.mojo::ScopedHandleBase.509"* [ %185, %179 ], [ %178, %176 ]
  %182 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %181, i64 0, i32 0, i32 0
  %183 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %180, i64 0, i32 0, i32 0
  %184 = load i32, i32* %183, align 4, !noalias !48
  store i32 %184, i32* %182, align 4, !alias.scope !48
  store i32 0, i32* %183, align 4, !noalias !48
  %185 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %181, i64 1
  %186 = getelementptr inbounds %"class.mojo::ScopedHandleBase.509", %"class.mojo::ScopedHandleBase.509"* %180, i64 1
  %187 = icmp eq %"class.mojo::ScopedHandleBase.509"* %186, %105
  br i1 %187, label %188, label %179, !llvm.loop !52

188:                                              ; preds = %179, %174
  %189 = bitcast %"class.WTF::Vector.780"* %0 to i8**
  %190 = load i8*, i8** %189, align 8
  br label %191

191:                                              ; preds = %107, %188
  %192 = phi i8* [ %190, %188 ], [ %108, %107 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %192) #10
  %193 = bitcast %"class.WTF::Vector.780"* %0 to i64*
  store atomic i64 %99, i64* %193 monotonic, align 8
  %194 = trunc i64 %98 to i32
  %195 = getelementptr inbounds %"class.WTF::Vector.780", %"class.WTF::Vector.780"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %194, i32* %195, align 8
  br label %196

196:                                              ; preds = %191, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16ScopedHandleBaseINS2_6HandleEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.62, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN5blink11WebBlobInfoC1E13scoped_refptrINS_14BlobDataHandleEERKNS_9WebStringES6_RKN4absl8optionalIN4base4TimeEEEm(%"class.blink::WebBlobInfo"*, %"class.blink::BlobDataHandle"*, %"class.blink::WebString"* dereferenceable(8), %"class.blink::WebString"* dereferenceable(8), %"class.absl::optional.798"* dereferenceable(16), i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_10StringViewEPKcE6lengthEv(%"class.WTF::StringAppend.865"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1038", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.865", %"class.WTF::StringAppend.865"* %0, i64 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = bitcast %"class.WTF::StringTypeAdapter.1038"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1038", %"class.WTF::StringTypeAdapter.1038"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.865", %"class.WTF::StringAppend.865"* %0, i64 0, i32 1
  %14 = bitcast %"class.WTF::StringTypeAdapter.1038"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1038"* nonnull %4, i8* %15) #10
  %16 = load i32, i32* %12, align 8
  %17 = add i32 %16, %10
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp ult i32 %17, %10
  br i1 %21, label %23, label %22

22:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %19, align 8
  br label %32

23:                                               ; preds = %1
  %24 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i64 0, i64 0), i8* %24, i8* %25) #10
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %19, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.53, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  br label %32

32:                                               ; preds = %22, %23, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %33 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = icmp ult i32 %17, %35
  br i1 %37, label %39, label %38

38:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  store i8* null, i8** %34, align 8
  br label %48

39:                                               ; preds = %32
  %40 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %35) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.54, i64 0, i64 0), i8* %40, i8* %41) #10
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.53, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %48

48:                                               ; preds = %38, %39, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  ret i32 %17
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_20DOMSharedArrayBufferEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.809"*, %"class.blink::DOMSharedArrayBuffer"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.809", %"class.WTF::Vector.809"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.809", %"class.WTF::Vector.809"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_20DOMSharedArrayBufferEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.809"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.809", %"class.WTF::Vector.809"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.812"*, %"class.blink::Member.812"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.812", %"class.blink::Member.812"* %16, i64 %18
  %20 = bitcast %"class.blink::DOMSharedArrayBuffer"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.812"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_20DOMSharedArrayBufferEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.809"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.809", %"class.WTF::Vector.809"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !30

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.809", %"class.WTF::Vector.809"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.812"*, %"class.blink::Member.812"** %8, align 8
  %10 = icmp eq %"class.blink::Member.812"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_20DOMSharedArrayBufferEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1139"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1139"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.809"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1139", %"class.blink::HeapVectorBacking.1139"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.812"*, %"class.blink::Member.812"** %8, align 8
  %26 = icmp eq %"class.blink::Member.812"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.812"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !31
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.50, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.51, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_20DOMSharedArrayBufferEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.809"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_20DOMSharedArrayBufferEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.809"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.809"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.809", %"class.WTF::Vector.809"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.809"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.809", %"class.WTF::Vector.809"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_20DOMSharedArrayBufferEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1139"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1139"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.809", %"class.WTF::Vector.809"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.812"*, %"class.blink::Member.812"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.809", %"class.WTF::Vector.809"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1139"* %17, null
  %23 = icmp ne %"class.blink::Member.812"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.812"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !30

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.809"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1139", %"class.blink::HeapVectorBacking.1139"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.809"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.809"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.809", %"class.WTF::Vector.809"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1139", %"class.blink::HeapVectorBacking.1139"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_20DOMSharedArrayBufferEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.42, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1139"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.44, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1139"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1139"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_20DOMSharedArrayBufferEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.812"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.812", %"class.blink::Member.812"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.812"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20DOMSharedArrayBufferEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_20DOMSharedArrayBufferEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20DOMSharedArrayBufferEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN2v818CompiledWasmModuleELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.769"*, %"class.v8::CompiledWasmModule"* dereferenceable(40)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.769", %"class.WTF::Vector.769"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.769", %"class.WTF::Vector.769"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.v8::CompiledWasmModule"*, %"class.v8::CompiledWasmModule"** %6, align 8
  %8 = icmp ugt %"class.v8::CompiledWasmModule"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %7, i64 %10
  %12 = icmp ugt %"class.v8::CompiledWasmModule"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.769", %"class.WTF::Vector.769"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !30

24:                                               ; preds = %13
  %25 = icmp eq %"class.v8::CompiledWasmModule"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN2v818CompiledWasmModuleEEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2v818CompiledWasmModuleEEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.769"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 40
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.v8::CompiledWasmModule"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN2v818CompiledWasmModuleELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.769"* %0, i32 %22) #10
  %36 = load %"class.v8::CompiledWasmModule"*, %"class.v8::CompiledWasmModule"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.v8::CompiledWasmModule"* %1 to i64
  %39 = ptrtoint %"class.v8::CompiledWasmModule"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 40
  %42 = getelementptr inbounds %"class.WTF::Vector.769", %"class.WTF::Vector.769"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !30

52:                                               ; preds = %37
  %53 = icmp eq %"class.v8::CompiledWasmModule"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN2v818CompiledWasmModuleEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2v818CompiledWasmModuleEEEPKcv, i64 0, i64 0)) #10
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.769"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 40
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.v8::CompiledWasmModule"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN2v818CompiledWasmModuleELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.769"* %0, i32 %50) #10
  %64 = load %"class.v8::CompiledWasmModule"*, %"class.v8::CompiledWasmModule"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.v8::CompiledWasmModule"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.v8::CompiledWasmModule"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.v8::CompiledWasmModule"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %69, i64 %72
  %74 = bitcast %"class.v8::CompiledWasmModule"* %70 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.v8::CompiledWasmModule"* %73 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %69, i64 %72, i32 0, i32 1
  %78 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %70, i64 0, i32 0, i32 1
  %79 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %78, align 8
  store %"class.std::__1::__shared_weak_count"* %79, %"class.std::__1::__shared_weak_count"** %77, align 8
  %80 = icmp eq %"class.std::__1::__shared_weak_count"* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %68
  %82 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %79, i64 0, i32 0, i32 1
  %83 = atomicrmw add i64* %82, i64 1 monotonic
  br label %84

84:                                               ; preds = %81, %68
  %85 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %69, i64 %72, i32 1
  %86 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %70, i64 0, i32 1
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %84
  %92 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  %93 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #10
  br label %99

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %70, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %85, i8* %96, i64 %98) #10
  br label %99

99:                                               ; preds = %91, %94
  %100 = load i32, i32* %3, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %3, align 4
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN2v818CompiledWasmModuleELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.769"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %67

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.769", %"class.WTF::Vector.769"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.v8::CompiledWasmModule"*, %"class.v8::CompiledWasmModule"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.769", %"class.WTF::Vector.769"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.769"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.769", %"class.WTF::Vector.769"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %65, label %14

14:                                               ; preds = %4, %61
  %15 = phi %"class.v8::CompiledWasmModule"* [ %63, %61 ], [ %6, %4 ]
  %16 = phi %"class.v8::CompiledWasmModule"* [ %62, %61 ], [ null, %4 ]
  %17 = bitcast %"class.v8::CompiledWasmModule"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.v8::CompiledWasmModule"* %16 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %16, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %15, i64 0, i32 0, i32 1
  %22 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %21, align 8
  store %"class.std::__1::__shared_weak_count"* %22, %"class.std::__1::__shared_weak_count"** %20, align 8
  %23 = icmp eq %"class.std::__1::__shared_weak_count"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %22, i64 0, i32 0, i32 1
  %26 = atomicrmw add i64* %25, i64 1 monotonic
  br label %27

27:                                               ; preds = %24, %14
  %28 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %16, i64 0, i32 1
  %29 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %15, i64 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %27
  %35 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %36 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #10
  br label %42

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %28, i8* %39, i64 %41) #10
  br label %42

42:                                               ; preds = %37, %34
  %43 = load i8, i8* %31, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %45, %42
  %49 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %21, align 8
  %50 = icmp eq %"class.std::__1::__shared_weak_count"* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %49, i64 0, i32 0, i32 1
  %53 = atomicrmw add i64* %52, i64 -1 acq_rel
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %49, i64 0, i32 0
  %57 = bitcast %"class.std::__1::__shared_weak_count"* %49 to void (%"class.std::__1::__shared_count"*)***
  %58 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %58, i64 2
  %60 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %59, align 8
  tail call void %60(%"class.std::__1::__shared_count"* %56) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %49) #10
  br label %61

61:                                               ; preds = %55, %51, %48
  %62 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %16, i64 1
  %63 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %15, i64 1
  %64 = icmp eq %"class.v8::CompiledWasmModule"* %63, %10
  br i1 %64, label %65, label %14

65:                                               ; preds = %61, %4
  %66 = bitcast %"class.v8::CompiledWasmModule"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %66) #10
  br label %143

67:                                               ; preds = %2
  %68 = zext i32 %1 to i64
  %69 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN2v818CompiledWasmModuleEEEmm(i64 %68) #10
  %70 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %69, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2v818CompiledWasmModuleEEEPKcv, i64 0, i64 0)) #10
  %71 = udiv i64 %69, 40
  %72 = ptrtoint i8* %70 to i64
  %73 = getelementptr inbounds %"class.WTF::Vector.769", %"class.WTF::Vector.769"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.v8::CompiledWasmModule"*, %"class.v8::CompiledWasmModule"** %73, align 8
  %75 = getelementptr inbounds %"class.WTF::Vector.769", %"class.WTF::Vector.769"* %0, i64 0, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %74, i64 %77
  %79 = icmp eq i32 %76, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %67
  %81 = bitcast %"class.v8::CompiledWasmModule"* %74 to i8*
  br label %138

82:                                               ; preds = %67
  %83 = bitcast i8* %70 to %"class.v8::CompiledWasmModule"*
  br label %84

84:                                               ; preds = %82, %131
  %85 = phi %"class.v8::CompiledWasmModule"* [ %133, %131 ], [ %74, %82 ]
  %86 = phi %"class.v8::CompiledWasmModule"* [ %132, %131 ], [ %83, %82 ]
  %87 = bitcast %"class.v8::CompiledWasmModule"* %85 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.v8::CompiledWasmModule"* %86 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %86, i64 0, i32 0, i32 1
  %91 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %85, i64 0, i32 0, i32 1
  %92 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %91, align 8
  store %"class.std::__1::__shared_weak_count"* %92, %"class.std::__1::__shared_weak_count"** %90, align 8
  %93 = icmp eq %"class.std::__1::__shared_weak_count"* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %92, i64 0, i32 0, i32 1
  %96 = atomicrmw add i64* %95, i64 1 monotonic
  br label %97

97:                                               ; preds = %94, %84
  %98 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %86, i64 0, i32 1
  %99 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %85, i64 0, i32 1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %97
  %105 = bitcast %"class.std::__1::basic_string"* %98 to i8*
  %106 = bitcast %"class.std::__1::basic_string"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #10
  br label %112

107:                                              ; preds = %97
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %85, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %111 = load i64, i64* %110, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %98, i8* %109, i64 %111) #10
  br label %112

112:                                              ; preds = %107, %104
  %113 = load i8, i8* %101, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  tail call void @_ZdlPv(i8* %117) #11
  br label %118

118:                                              ; preds = %115, %112
  %119 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %91, align 8
  %120 = icmp eq %"class.std::__1::__shared_weak_count"* %119, null
  br i1 %120, label %131, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %119, i64 0, i32 0, i32 1
  %123 = atomicrmw add i64* %122, i64 -1 acq_rel
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %131

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %119, i64 0, i32 0
  %127 = bitcast %"class.std::__1::__shared_weak_count"* %119 to void (%"class.std::__1::__shared_count"*)***
  %128 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %128, i64 2
  %130 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %129, align 8
  tail call void %130(%"class.std::__1::__shared_count"* %126) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %119) #10
  br label %131

131:                                              ; preds = %125, %121, %118
  %132 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %86, i64 1
  %133 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %85, i64 1
  %134 = icmp eq %"class.v8::CompiledWasmModule"* %133, %78
  br i1 %134, label %135, label %84

135:                                              ; preds = %131
  %136 = bitcast %"class.WTF::Vector.769"* %0 to i8**
  %137 = load i8*, i8** %136, align 8
  br label %138

138:                                              ; preds = %80, %135
  %139 = phi i8* [ %137, %135 ], [ %81, %80 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %139) #10
  %140 = bitcast %"class.WTF::Vector.769"* %0 to i64*
  store atomic i64 %72, i64* %140 monotonic, align 8
  %141 = trunc i64 %71 to i32
  %142 = getelementptr inbounds %"class.WTF::Vector.769", %"class.WTF::Vector.769"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %141, i32* %142, align 8
  br label %143

143:                                              ; preds = %138, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN2v818CompiledWasmModuleEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 53634662
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.62, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 40
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!5 = distinct !{!5, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!8 = distinct !{!8, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!11 = distinct !{!11, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!14 = distinct !{!14, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!17 = distinct !{!17, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!20 = distinct !{!20, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!23 = distinct !{!23, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!26 = distinct !{!26, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!29 = distinct !{!29, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!30 = !{!"branch_weights", i32 2000, i32 1}
!31 = !{i8 0, i8 2}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv: argument 0"}
!34 = distinct !{!34, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN3WTFplIPKcEENS_12StringAppendINS_10StringViewET_EERKS4_S5_: argument 0"}
!37 = distinct !{!37, !"_ZN3WTFplIPKcEENS_12StringAppendINS_10StringViewET_EERKS4_S5_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv: argument 0"}
!40 = distinct !{!40, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv: argument 0"}
!43 = distinct !{!43, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv"}
!44 = distinct !{!44, !45}
!45 = !{!"llvm.loop.isvectorized", i32 1}
!46 = distinct !{!46, !47, !45}
!47 = !{!"llvm.loop.unroll.runtime.disable"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv: argument 0"}
!50 = distinct !{!50, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv"}
!51 = distinct !{!51, !45}
!52 = distinct !{!52, !47, !45}
