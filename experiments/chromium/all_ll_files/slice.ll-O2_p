; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/slice.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/slice.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.tflite::SequentialTensorWriter.8" = type { i8*, i8* }
%"class.tflite::SequentialTensorWriter.7" = type { i8*, i8* }
%"class.tflite::SequentialTensorWriter.6" = type { i8*, i8* }
%"class.tflite::SequentialTensorWriter.5" = type { i64*, i64* }
%"class.tflite::SequentialTensorWriter.4" = type { i32*, i32* }
%"class.tflite::SequentialTensorWriter" = type { float*, float* }
%"class.tflite::SequentialTensorWriter.9" = type { %struct.TfLiteTensor*, %struct.TfLiteTensor*, %"class.tflite::DynamicBuffer" }
%"class.tflite::DynamicBuffer" = type { %"class.std::__1::vector.10", %"class.std::__1::vector" }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { i8*, i8*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i8* }
%"struct.tflite::SliceParams" = type { i8, [4 x i32], i8, [4 x i32] }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"struct.tflite::StringRef" = type { i8*, i32 }

$_ZN6tflite3ops7builtin5slice26CalculateOutputShapeVectorIiEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensorS9_S9_PNSt3__16vectorIiNSA_9allocatorIiEEEE = comdat any

$_ZN6tflite3ops7builtin5slice26CalculateOutputShapeVectorIlEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensorS9_S9_PNSt3__16vectorIiNSA_9allocatorIiEEEE = comdat any

$_ZN6tflite3ops7builtin5slice4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin5slice4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite13reference_ops5SliceIfEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE = comdat any

$_ZN6tflite13reference_ops5SliceIiEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE = comdat any

$_ZN6tflite13reference_ops5SliceIlEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE = comdat any

$_ZN6tflite13reference_ops5SliceIaEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE = comdat any

$_ZN6tflite13reference_ops5SliceIhEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE = comdat any

$_ZN6tflite13reference_ops5SliceIbEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE = comdat any

$_ZN6tflite13reference_ops5SliceINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvRKNS_11SliceParamsERKNS_12RuntimeShapeESE_PNS_22SequentialTensorWriterIT_EE = comdat any

$_ZN6tflite13optimized_ops5SliceIfEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE = comdat any

$_ZN6tflite13optimized_ops5SliceIiEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE = comdat any

$_ZN6tflite13optimized_ops5SliceIlEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE = comdat any

$_ZN6tflite13optimized_ops5SliceIaEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE = comdat any

$_ZN6tflite13optimized_ops5SliceIhEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE = comdat any

$_ZN6tflite13optimized_ops5SliceIbEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE = comdat any

$_ZN6tflite13optimized_ops5SliceINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvRKNS_11SliceParamsERKNS_12RuntimeShapeESE_PNS_22SequentialTensorWriterIT_EE = comdat any

@.str = private unnamed_addr constant [45 x i8] c"Type %d is currently not supported by Slice.\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.4 = private unnamed_addr constant [62 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/slice.cc\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"input->type\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"output->type\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"begin->type == kTfLiteInt32 || begin->type == kTfLiteInt64\00", align 1
@.str.14 = private unnamed_addr constant [57 x i8] c"size->type == kTfLiteInt32 || size->type == kTfLiteInt64\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"NumDimensions(begin)\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"NumDimensions(size)\00", align 1
@.str.17 = private unnamed_addr constant [105 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/slice.cc Slice op only supports 1D-4D input arrays.\00", align 1
@_ZZN6tflite3ops7builtin18Register_SLICE_REFEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin5slice7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin5slice4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin14Register_SLICEEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin5slice7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin5slice4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.19 = private unnamed_addr constant [14 x i8] c"Invalid size.\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"Invalid begin and size.\00", align 1
@.str.22 = private unnamed_addr constant [14 x i8] c"begins.size()\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"sizes.size()\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin5slice17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorS7_S7_PS5_(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #9
  %10 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %18 [
    i32 2, label %12
    i32 4, label %15
  ]

12:                                               ; preds = %5
  %13 = call i32 @_ZN6tflite3ops7builtin5slice26CalculateOutputShapeVectorIiEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensorS9_S9_PNSt3__16vectorIiNSA_9allocatorIiEEEE(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %1, %struct.TfLiteTensor* %2, %struct.TfLiteTensor* %3, %"class.std::__1::vector"* nonnull %6)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %21, label %43

15:                                               ; preds = %5
  %16 = call i32 @_ZN6tflite3ops7builtin5slice26CalculateOutputShapeVectorIlEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensorS9_S9_PNSt3__16vectorIiNSA_9allocatorIiEEEE(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %1, %struct.TfLiteTensor* %2, %struct.TfLiteTensor* %3, %"class.std::__1::vector"* nonnull %6)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %43

18:                                               ; preds = %5
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %20 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %19, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %20(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 %11) #9
  br label %43

21:                                               ; preds = %15, %12
  %22 = bitcast i32** %9 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %6 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 2
  %28 = trunc i64 %27 to i32
  %29 = call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %28) #9
  %30 = load i32*, i32** %8, align 8
  %31 = load i64, i64* %22, align 8
  %32 = ptrtoint i32* %30 to i64
  %33 = sub i64 %31, %32
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %29, i64 0, i32 1, i64 0
  %37 = bitcast i32* %36 to i8*
  %38 = bitcast i32* %30 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 %38, i64 %33, i1 false) #9
  br label %39

39:                                               ; preds = %21, %35
  %40 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %41 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %40, align 8
  %42 = call i32 %41(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %4, %struct.TfLiteIntArray* %29) #9
  br label %43

43:                                               ; preds = %12, %15, %39, %18
  %44 = phi i32 [ %42, %39 ], [ %13, %12 ], [ %16, %15 ], [ 1, %18 ]
  %45 = load i32*, i32** %8, align 8
  %46 = icmp eq i32* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = ptrtoint i32* %45 to i64
  %49 = bitcast i32** %9 to i64*
  store i64 %48, i64* %49, align 8
  %50 = bitcast i32* %45 to i8*
  call void @_ZdlPv(i8* %50) #10
  br label %51

51:                                               ; preds = %43, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret i32 %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin5slice26CalculateOutputShapeVectorIiEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensorS9_S9_PNSt3__16vectorIiNSA_9allocatorIiEEEE(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %"class.std::__1::vector"*) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %7 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %129

11:                                               ; preds = %5
  %12 = icmp eq %struct.TfLiteTensor* %3, null
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1, i32 0
  %14 = icmp eq %struct.TfLiteTensor* %2, null
  %15 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast i32** %16 to i64*
  %19 = bitcast %"class.std::__1::vector"* %4 to i64*
  %20 = bitcast i32** %17 to i64*
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  br label %22

22:                                               ; preds = %11, %122
  %23 = phi i64 [ 0, %11 ], [ %123, %122 ]
  %24 = phi %struct.TfLiteIntArray* [ %7, %11 ], [ %124, %122 ]
  br i1 %12, label %27, label %25

25:                                               ; preds = %22
  %26 = load i32*, i32** %13, align 8
  br label %27

27:                                               ; preds = %22, %25
  %28 = phi i32* [ %26, %25 ], [ null, %22 ]
  %29 = getelementptr inbounds i32, i32* %28, i64 %23
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %47

32:                                               ; preds = %27
  %33 = icmp eq i32 %30, -1
  br i1 %33, label %37, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %36 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %35, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %36(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i64 0, i64 0)) #9
  br label %129

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %24, i64 0, i32 1, i64 %23
  %39 = load i32, i32* %38, align 4
  br i1 %14, label %42, label %40

40:                                               ; preds = %37
  %41 = load i32*, i32** %15, align 8
  br label %42

42:                                               ; preds = %37, %40
  %43 = phi i32* [ %41, %40 ], [ null, %37 ]
  %44 = getelementptr inbounds i32, i32* %43, i64 %23
  %45 = load i32, i32* %44, align 4
  %46 = sub nsw i32 %39, %45
  br label %61

47:                                               ; preds = %27
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %24, i64 0, i32 1, i64 %23
  %49 = load i32, i32* %48, align 4
  br i1 %14, label %52, label %50

50:                                               ; preds = %47
  %51 = load i32*, i32** %15, align 8
  br label %52

52:                                               ; preds = %47, %50
  %53 = phi i32* [ %51, %50 ], [ null, %47 ]
  %54 = getelementptr inbounds i32, i32* %53, i64 %23
  %55 = load i32, i32* %54, align 4
  %56 = add nsw i32 %55, %30
  %57 = icmp slt i32 %49, %56
  br i1 %57, label %58, label %61

58:                                               ; preds = %52
  %59 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %60 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %59, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %60(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0)) #9
  br label %129

61:                                               ; preds = %52, %42
  %62 = phi i32 [ %46, %42 ], [ %30, %52 ]
  %63 = load i32*, i32** %16, align 8
  %64 = load i32*, i32** %17, align 8
  %65 = icmp ult i32* %63, %64
  %66 = ptrtoint i32* %64 to i64
  br i1 %65, label %67, label %70

67:                                               ; preds = %61
  store i32 %62, i32* %63, align 4
  %68 = getelementptr inbounds i32, i32* %63, i64 1
  %69 = ptrtoint i32* %68 to i64
  store i64 %69, i64* %18, align 8
  br label %122

70:                                               ; preds = %61
  %71 = ptrtoint i32* %63 to i64
  %72 = load i64, i64* %19, align 8
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 2
  %75 = add nsw i64 %74, 1
  %76 = icmp ugt i64 %75, 4611686018427387903
  br i1 %76, label %77, label %79

77:                                               ; preds = %70
  %78 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %78) #11
  unreachable

79:                                               ; preds = %70
  %80 = sub i64 %66, %72
  %81 = ashr exact i64 %80, 2
  %82 = icmp ult i64 %81, 2305843009213693951
  br i1 %82, label %83, label %91

83:                                               ; preds = %79
  %84 = ashr exact i64 %80, 1
  %85 = icmp ult i64 %84, %75
  %86 = select i1 %85, i64 %75, i64 %84
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %96, label %88

88:                                               ; preds = %83
  %89 = icmp ugt i64 %86, 4611686018427387903
  br i1 %89, label %90, label %91

90:                                               ; preds = %88
  tail call void @abort() #11
  unreachable

91:                                               ; preds = %88, %79
  %92 = phi i64 [ %86, %88 ], [ 4611686018427387903, %79 ]
  %93 = shl i64 %92, 2
  %94 = tail call i8* @_Znwm(i64 %93) #10
  %95 = bitcast i8* %94 to i32*
  br label %96

96:                                               ; preds = %91, %83
  %97 = phi i64 [ %92, %91 ], [ 0, %83 ]
  %98 = phi i32* [ %95, %91 ], [ null, %83 ]
  %99 = getelementptr inbounds i32, i32* %98, i64 %74
  %100 = getelementptr inbounds i32, i32* %98, i64 %97
  %101 = ptrtoint i32* %100 to i64
  store i32 %62, i32* %99, align 4
  %102 = getelementptr inbounds i32, i32* %99, i64 1
  %103 = ptrtoint i32* %102 to i64
  %104 = load i32*, i32** %21, align 8
  %105 = load i64, i64* %18, align 8
  %106 = ptrtoint i32* %104 to i64
  %107 = sub i64 %105, %106
  %108 = ashr exact i64 %107, 2
  %109 = sub nsw i64 0, %108
  %110 = getelementptr inbounds i32, i32* %99, i64 %109
  %111 = ptrtoint i32* %110 to i64
  %112 = icmp sgt i64 %107, 0
  br i1 %112, label %113, label %117

113:                                              ; preds = %96
  %114 = bitcast i32* %110 to i8*
  %115 = bitcast i32* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %114, i8* align 4 %115, i64 %107, i1 false) #9
  %116 = load i32*, i32** %21, align 8
  br label %117

117:                                              ; preds = %113, %96
  %118 = phi i32* [ %104, %96 ], [ %116, %113 ]
  store i64 %111, i64* %19, align 8
  store i64 %103, i64* %18, align 8
  store i64 %101, i64* %20, align 8
  %119 = icmp eq i32* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %117
  %121 = bitcast i32* %118 to i8*
  tail call void @_ZdlPv(i8* %121) #10
  br label %122

122:                                              ; preds = %67, %117, %120
  %123 = add nuw nsw i64 %23, 1
  %124 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %125 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %124, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = sext i32 %126 to i64
  %128 = icmp slt i64 %123, %127
  br i1 %128, label %22, label %129

129:                                              ; preds = %122, %5, %58, %34
  %130 = phi i32 [ 1, %34 ], [ 1, %58 ], [ 0, %5 ], [ 0, %122 ]
  ret i32 %130
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin5slice26CalculateOutputShapeVectorIlEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensorS9_S9_PNSt3__16vectorIiNSA_9allocatorIiEEEE(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %"class.std::__1::vector"*) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %7 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %134

11:                                               ; preds = %5
  %12 = icmp eq %struct.TfLiteTensor* %3, null
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %14 = bitcast %union.TfLitePtrUnion* %13 to i64**
  %15 = icmp eq %struct.TfLiteTensor* %2, null
  %16 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %17 = bitcast %union.TfLitePtrUnion* %16 to i64**
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast i32** %18 to i64*
  %21 = bitcast %"class.std::__1::vector"* %4 to i64*
  %22 = bitcast i32** %19 to i64*
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %11, %127
  %25 = phi i64 [ 0, %11 ], [ %128, %127 ]
  %26 = phi %struct.TfLiteIntArray* [ %7, %11 ], [ %129, %127 ]
  br i1 %12, label %29, label %27

27:                                               ; preds = %24
  %28 = load i64*, i64** %14, align 8
  br label %29

29:                                               ; preds = %24, %27
  %30 = phi i64* [ %28, %27 ], [ null, %24 ]
  %31 = getelementptr inbounds i64, i64* %30, i64 %25
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %50

34:                                               ; preds = %29
  %35 = icmp eq i64 %32, -1
  br i1 %35, label %39, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %38 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %37, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %38(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i64 0, i64 0)) #9
  br label %134

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %26, i64 0, i32 1, i64 %25
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  br i1 %15, label %45, label %43

43:                                               ; preds = %39
  %44 = load i64*, i64** %17, align 8
  br label %45

45:                                               ; preds = %39, %43
  %46 = phi i64* [ %44, %43 ], [ null, %39 ]
  %47 = getelementptr inbounds i64, i64* %46, i64 %25
  %48 = load i64, i64* %47, align 8
  %49 = sub nsw i64 %42, %48
  br label %65

50:                                               ; preds = %29
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %26, i64 0, i32 1, i64 %25
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  br i1 %15, label %56, label %54

54:                                               ; preds = %50
  %55 = load i64*, i64** %17, align 8
  br label %56

56:                                               ; preds = %50, %54
  %57 = phi i64* [ %55, %54 ], [ null, %50 ]
  %58 = getelementptr inbounds i64, i64* %57, i64 %25
  %59 = load i64, i64* %58, align 8
  %60 = add nsw i64 %59, %32
  %61 = icmp sgt i64 %60, %53
  br i1 %61, label %62, label %65

62:                                               ; preds = %56
  %63 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %64 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %63, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %64(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0)) #9
  br label %134

65:                                               ; preds = %56, %45
  %66 = phi i64 [ %49, %45 ], [ %32, %56 ]
  %67 = trunc i64 %66 to i32
  %68 = load i32*, i32** %18, align 8
  %69 = load i32*, i32** %19, align 8
  %70 = icmp ult i32* %68, %69
  %71 = ptrtoint i32* %69 to i64
  br i1 %70, label %72, label %75

72:                                               ; preds = %65
  store i32 %67, i32* %68, align 4
  %73 = getelementptr inbounds i32, i32* %68, i64 1
  %74 = ptrtoint i32* %73 to i64
  store i64 %74, i64* %20, align 8
  br label %127

75:                                               ; preds = %65
  %76 = ptrtoint i32* %68 to i64
  %77 = load i64, i64* %21, align 8
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 2
  %80 = add nsw i64 %79, 1
  %81 = icmp ugt i64 %80, 4611686018427387903
  br i1 %81, label %82, label %84

82:                                               ; preds = %75
  %83 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %83) #11
  unreachable

84:                                               ; preds = %75
  %85 = sub i64 %71, %77
  %86 = ashr exact i64 %85, 2
  %87 = icmp ult i64 %86, 2305843009213693951
  br i1 %87, label %88, label %96

88:                                               ; preds = %84
  %89 = ashr exact i64 %85, 1
  %90 = icmp ult i64 %89, %80
  %91 = select i1 %90, i64 %80, i64 %89
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %101, label %93

93:                                               ; preds = %88
  %94 = icmp ugt i64 %91, 4611686018427387903
  br i1 %94, label %95, label %96

95:                                               ; preds = %93
  tail call void @abort() #11
  unreachable

96:                                               ; preds = %93, %84
  %97 = phi i64 [ %91, %93 ], [ 4611686018427387903, %84 ]
  %98 = shl i64 %97, 2
  %99 = tail call i8* @_Znwm(i64 %98) #10
  %100 = bitcast i8* %99 to i32*
  br label %101

101:                                              ; preds = %96, %88
  %102 = phi i64 [ %97, %96 ], [ 0, %88 ]
  %103 = phi i32* [ %100, %96 ], [ null, %88 ]
  %104 = getelementptr inbounds i32, i32* %103, i64 %79
  %105 = getelementptr inbounds i32, i32* %103, i64 %102
  %106 = ptrtoint i32* %105 to i64
  store i32 %67, i32* %104, align 4
  %107 = getelementptr inbounds i32, i32* %104, i64 1
  %108 = ptrtoint i32* %107 to i64
  %109 = load i32*, i32** %23, align 8
  %110 = load i64, i64* %20, align 8
  %111 = ptrtoint i32* %109 to i64
  %112 = sub i64 %110, %111
  %113 = ashr exact i64 %112, 2
  %114 = sub nsw i64 0, %113
  %115 = getelementptr inbounds i32, i32* %104, i64 %114
  %116 = ptrtoint i32* %115 to i64
  %117 = icmp sgt i64 %112, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %101
  %119 = bitcast i32* %115 to i8*
  %120 = bitcast i32* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %119, i8* align 4 %120, i64 %112, i1 false) #9
  %121 = load i32*, i32** %23, align 8
  br label %122

122:                                              ; preds = %118, %101
  %123 = phi i32* [ %109, %101 ], [ %121, %118 ]
  store i64 %116, i64* %21, align 8
  store i64 %108, i64* %20, align 8
  store i64 %106, i64* %22, align 8
  %124 = icmp eq i32* %123, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %122
  %126 = bitcast i32* %123 to i8*
  tail call void @_ZdlPv(i8* %126) #10
  br label %127

127:                                              ; preds = %72, %122, %125
  %128 = add nuw nsw i64 %25, 1
  %129 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %130 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %129, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = sext i32 %131 to i64
  %133 = icmp slt i64 %128, %132
  br i1 %133, label %24, label %134

134:                                              ; preds = %127, %5, %62, %36
  %135 = phi i32 [ 1, %36 ], [ 1, %62 ], [ 0, %5 ], [ 0, %127 ]
  ret i32 %135
}

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin5slice7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 113, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i32 %6, i32 3) #9
  br label %128

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 114, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %15, i32 1) #9
  br label %128

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %29, %34
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %29 ]
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %46 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %45, align 8
  %47 = sext i32 %42 to i64
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 %47
  br label %49

49:                                               ; preds = %39, %44
  %50 = phi %struct.TfLiteTensor* [ %48, %44 ], [ null, %39 ]
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %56 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %55, align 8
  %57 = sext i32 %52 to i64
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 %57
  br label %59

59:                                               ; preds = %49, %54
  %60 = phi %struct.TfLiteTensor* [ %58, %54 ], [ null, %49 ]
  %61 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %72, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %68 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %67, align 8
  %69 = tail call i8* @TfLiteTypeGetName(i32 %62) #9
  %70 = load i32, i32* %63, align 8
  %71 = tail call i8* @TfLiteTypeGetName(i32 %70) #9
  tail call void (%struct.TfLiteContext*, i8*, ...) %68(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 122, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8* %69, i8* %71) #9
  br label %128

72:                                               ; preds = %59
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  switch i32 %74, label %75 [
    i32 2, label %78
    i32 4, label %78
  ]

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %77 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %76, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %77(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 124, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0)) #9
  br label %128

78:                                               ; preds = %72, %72
  %79 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 0, i32 0
  %80 = load i32, i32* %79, align 8
  switch i32 %80, label %81 [
    i32 2, label %84
    i32 4, label %84
  ]

81:                                               ; preds = %78
  %82 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %83 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %82, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %83(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 126, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.14, i64 0, i64 0)) #9
  br label %128

84:                                               ; preds = %78, %78
  %85 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 2
  %86 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %85, align 8
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %86, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %93, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %92 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %91, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %92(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 127, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %88, i32 1) #9
  br label %128

93:                                               ; preds = %84
  %94 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 0, i32 2
  %95 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %94, align 8
  %96 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %95, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %101 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %100, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %101(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %97, i32 1) #9
  br label %128

102:                                              ; preds = %93
  %103 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %104 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %103, align 8
  %105 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %104, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp slt i32 %106, 5
  br i1 %107, label %111, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %110 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %109, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %110(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.17, i64 0, i64 0)) #9
  br label %128

111:                                              ; preds = %102
  %112 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 4
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %119

115:                                              ; preds = %111
  %116 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 0, i32 4
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %126, label %119

119:                                              ; preds = %115, %111
  %120 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 4
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 4
  br i1 %122, label %128, label %123

123:                                              ; preds = %119
  store i32 4, i32* %120, align 8
  %124 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 1
  %125 = bitcast %union.TfLitePtrUnion* %124 to i8**
  store i8* null, i8** %125, align 8
  br label %128

126:                                              ; preds = %115
  %127 = tail call i32 @_ZN6tflite3ops7builtin5slice17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorS7_S7_PS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %40, %struct.TfLiteTensor* %50, %struct.TfLiteTensor* %60)
  br label %128

128:                                              ; preds = %123, %119, %66, %75, %81, %90, %99, %108, %126, %17, %8
  %129 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %66 ], [ 1, %90 ], [ 1, %99 ], [ %127, %126 ], [ 1, %108 ], [ 1, %81 ], [ 1, %75 ], [ 0, %119 ], [ 0, %123 ]
  ret i32 %129
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin18Register_SLICE_REFEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin18Register_SLICE_REFEvE1r
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin5slice4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"class.tflite::SequentialTensorWriter.8", align 8
  %4 = alloca %"class.tflite::SequentialTensorWriter.7", align 8
  %5 = alloca %"class.tflite::SequentialTensorWriter.6", align 8
  %6 = alloca %"class.tflite::SequentialTensorWriter.5", align 8
  %7 = alloca %"class.tflite::SequentialTensorWriter.4", align 8
  %8 = alloca %"class.tflite::SequentialTensorWriter", align 8
  %9 = alloca %"class.tflite::SequentialTensorWriter.9", align 8
  %10 = alloca %"class.std::__1::vector", align 16
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = alloca %"struct.tflite::SliceParams", align 4
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"struct.tflite::SliceParams", align 4
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"struct.tflite::SliceParams", align 4
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"struct.tflite::SliceParams", align 4
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca %"struct.tflite::SliceParams", align 4
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca %"struct.tflite::SliceParams", align 4
  %28 = alloca %"class.tflite::RuntimeShape", align 8
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = alloca %"struct.tflite::SliceParams", align 4
  %31 = alloca %"class.tflite::RuntimeShape", align 8
  %32 = alloca %"class.tflite::RuntimeShape", align 8
  %33 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %34 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %33, align 8
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %34, i64 0, i32 1, i64 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %2
  %39 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %40 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %39, align 8
  %41 = sext i32 %36 to i64
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 %41
  br label %43

43:                                               ; preds = %2, %38
  %44 = phi %struct.TfLiteTensor* [ %42, %38 ], [ null, %2 ]
  %45 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %34, i64 0, i32 1, i64 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %50 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %49, align 8
  %51 = sext i32 %46 to i64
  %52 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 %51
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi %struct.TfLiteTensor* [ %52, %48 ], [ null, %43 ]
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %34, i64 0, i32 1, i64 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %60 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %59, align 8
  %61 = sext i32 %56 to i64
  %62 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 %61
  br label %63

63:                                               ; preds = %53, %58
  %64 = phi %struct.TfLiteTensor* [ %62, %58 ], [ null, %53 ]
  %65 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %66 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %65, align 8
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %66, i64 0, i32 1, i64 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %72 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %71, align 8
  %73 = sext i32 %68 to i64
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %72, i64 %73
  br label %75

75:                                               ; preds = %63, %70
  %76 = phi %struct.TfLiteTensor* [ %74, %70 ], [ null, %63 ]
  %77 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 4
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 4
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = tail call i32 @_ZN6tflite3ops7builtin5slice17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorS7_S7_PS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %44, %struct.TfLiteTensor* %54, %struct.TfLiteTensor* %64, %struct.TfLiteTensor* %76)
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %1527

83:                                               ; preds = %80, %75
  %84 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #9
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %88 = bitcast i32** %87 to i64*
  %89 = bitcast %"class.std::__1::vector"* %10 to i64*
  %90 = tail call i8* @_Znwm(i64 16) #10
  %91 = getelementptr inbounds i8, i8* %90, i64 16
  %92 = ptrtoint i8* %91 to i64
  %93 = insertelement <2 x i8*> undef, i8* %90, i32 0
  %94 = shufflevector <2 x i8*> %93, <2 x i8*> undef, <2 x i32> zeroinitializer
  %95 = ptrtoint <2 x i8*> %94 to <2 x i64>
  %96 = bitcast %"class.std::__1::vector"* %10 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %96, align 16
  store i64 %92, i64* %88, align 16
  %97 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #9
  %98 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %101 = bitcast i32** %100 to i64*
  %102 = bitcast %"class.std::__1::vector"* %11 to i64*
  %103 = bitcast i32** %99 to i64*
  %104 = tail call i8* @_Znwm(i64 16) #10
  %105 = bitcast i8* %104 to i32*
  %106 = ptrtoint i8* %104 to i64
  %107 = getelementptr inbounds i8, i8* %104, i64 16
  %108 = ptrtoint i8* %107 to i64
  %109 = ptrtoint i8* %104 to i64
  store i64 %109, i64* %102, align 8
  store i64 %106, i64* %103, align 8
  store i64 %108, i64* %101, align 8
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 0, i32 0
  %111 = load i32, i32* %110, align 8
  switch i32 %111, label %386 [
    i32 2, label %112
    i32 4, label %248
  ]

112:                                              ; preds = %83
  %113 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %114 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %113, align 8
  %115 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %114, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %118, label %389

118:                                              ; preds = %112
  %119 = icmp eq %struct.TfLiteTensor* %54, null
  %120 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 0, i32 1, i32 0
  %121 = icmp eq %struct.TfLiteTensor* %64, null
  %122 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1, i32 0
  %123 = sext i32 %116 to i64
  %124 = bitcast i32** %86 to i64*
  %125 = bitcast i32** %99 to i64*
  br label %126

126:                                              ; preds = %244, %118
  %127 = phi i64 [ %123, %118 ], [ %128, %244 ]
  %128 = add nsw i64 %127, -1
  br i1 %119, label %131, label %129

129:                                              ; preds = %126
  %130 = load i32*, i32** %120, align 8
  br label %131

131:                                              ; preds = %129, %126
  %132 = phi i32* [ %130, %129 ], [ null, %126 ]
  %133 = getelementptr inbounds i32, i32* %132, i64 %128
  %134 = load i32*, i32** %86, align 8
  %135 = load i32*, i32** %87, align 16
  %136 = icmp eq i32* %134, %135
  %137 = ptrtoint i32* %135 to i64
  br i1 %136, label %142, label %138

138:                                              ; preds = %131
  %139 = load i32, i32* %133, align 4
  store i32 %139, i32* %134, align 4
  %140 = getelementptr inbounds i32, i32* %134, i64 1
  %141 = ptrtoint i32* %140 to i64
  store i64 %141, i64* %124, align 8
  br label %186

142:                                              ; preds = %131
  %143 = ptrtoint i32* %134 to i64
  %144 = load i64, i64* %89, align 16
  %145 = sub i64 %143, %144
  %146 = ashr exact i64 %145, 2
  %147 = add nsw i64 %146, 1
  %148 = icmp ugt i64 %147, 4611686018427387903
  br i1 %148, label %149, label %151

149:                                              ; preds = %142
  %150 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %150) #11
  unreachable

151:                                              ; preds = %142
  %152 = sub i64 %137, %144
  %153 = ashr exact i64 %152, 2
  %154 = icmp ult i64 %153, 2305843009213693951
  br i1 %154, label %155, label %163

155:                                              ; preds = %151
  %156 = ashr exact i64 %152, 1
  %157 = icmp ult i64 %156, %147
  %158 = select i1 %157, i64 %147, i64 %156
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %168, label %160

160:                                              ; preds = %155
  %161 = icmp ugt i64 %158, 4611686018427387903
  br i1 %161, label %162, label %163

162:                                              ; preds = %160
  tail call void @abort() #11
  unreachable

163:                                              ; preds = %160, %151
  %164 = phi i64 [ %158, %160 ], [ 4611686018427387903, %151 ]
  %165 = shl i64 %164, 2
  %166 = tail call i8* @_Znwm(i64 %165) #10
  %167 = bitcast i8* %166 to i32*
  br label %168

168:                                              ; preds = %163, %155
  %169 = phi i64 [ %164, %163 ], [ 0, %155 ]
  %170 = phi i8* [ %166, %163 ], [ null, %155 ]
  %171 = phi i32* [ %167, %163 ], [ null, %155 ]
  %172 = getelementptr inbounds i32, i32* %171, i64 %146
  %173 = getelementptr inbounds i32, i32* %171, i64 %169
  %174 = ptrtoint i32* %173 to i64
  %175 = load i32, i32* %133, align 4
  store i32 %175, i32* %172, align 4
  %176 = getelementptr inbounds i32, i32* %172, i64 1
  %177 = ptrtoint i32* %176 to i64
  %178 = ptrtoint i32* %171 to i64
  %179 = icmp sgt i64 %145, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %168
  %181 = inttoptr i64 %144 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %170, i8* align 4 %181, i64 %145, i1 false) #9
  br label %182

182:                                              ; preds = %180, %168
  store i64 %178, i64* %89, align 16
  store i64 %177, i64* %124, align 8
  store i64 %174, i64* %88, align 16
  %183 = icmp eq i64 %144, 0
  br i1 %183, label %186, label %184

184:                                              ; preds = %182
  %185 = inttoptr i64 %144 to i8*
  tail call void @_ZdlPv(i8* %185) #10
  br label %186

186:                                              ; preds = %138, %182, %184
  br i1 %121, label %189, label %187

187:                                              ; preds = %186
  %188 = load i32*, i32** %122, align 8
  br label %189

189:                                              ; preds = %187, %186
  %190 = phi i32* [ %188, %187 ], [ null, %186 ]
  %191 = getelementptr inbounds i32, i32* %190, i64 %128
  %192 = load i32*, i32** %99, align 8
  %193 = load i32*, i32** %100, align 8
  %194 = icmp eq i32* %192, %193
  %195 = ptrtoint i32* %193 to i64
  br i1 %194, label %200, label %196

196:                                              ; preds = %189
  %197 = load i32, i32* %191, align 4
  store i32 %197, i32* %192, align 4
  %198 = getelementptr inbounds i32, i32* %192, i64 1
  %199 = ptrtoint i32* %198 to i64
  store i64 %199, i64* %125, align 8
  br label %244

200:                                              ; preds = %189
  %201 = ptrtoint i32* %192 to i64
  %202 = load i64, i64* %102, align 8
  %203 = sub i64 %201, %202
  %204 = ashr exact i64 %203, 2
  %205 = add nsw i64 %204, 1
  %206 = icmp ugt i64 %205, 4611686018427387903
  br i1 %206, label %207, label %209

207:                                              ; preds = %200
  %208 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %208) #11
  unreachable

209:                                              ; preds = %200
  %210 = sub i64 %195, %202
  %211 = ashr exact i64 %210, 2
  %212 = icmp ult i64 %211, 2305843009213693951
  br i1 %212, label %213, label %221

213:                                              ; preds = %209
  %214 = ashr exact i64 %210, 1
  %215 = icmp ult i64 %214, %205
  %216 = select i1 %215, i64 %205, i64 %214
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %226, label %218

218:                                              ; preds = %213
  %219 = icmp ugt i64 %216, 4611686018427387903
  br i1 %219, label %220, label %221

220:                                              ; preds = %218
  tail call void @abort() #11
  unreachable

221:                                              ; preds = %218, %209
  %222 = phi i64 [ %216, %218 ], [ 4611686018427387903, %209 ]
  %223 = shl i64 %222, 2
  %224 = tail call i8* @_Znwm(i64 %223) #10
  %225 = bitcast i8* %224 to i32*
  br label %226

226:                                              ; preds = %221, %213
  %227 = phi i64 [ %222, %221 ], [ 0, %213 ]
  %228 = phi i8* [ %224, %221 ], [ null, %213 ]
  %229 = phi i32* [ %225, %221 ], [ null, %213 ]
  %230 = getelementptr inbounds i32, i32* %229, i64 %204
  %231 = getelementptr inbounds i32, i32* %229, i64 %227
  %232 = ptrtoint i32* %231 to i64
  %233 = load i32, i32* %191, align 4
  store i32 %233, i32* %230, align 4
  %234 = getelementptr inbounds i32, i32* %230, i64 1
  %235 = ptrtoint i32* %234 to i64
  %236 = ptrtoint i32* %229 to i64
  %237 = icmp sgt i64 %203, 0
  br i1 %237, label %238, label %240

238:                                              ; preds = %226
  %239 = inttoptr i64 %202 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %228, i8* align 4 %239, i64 %203, i1 false) #9
  br label %240

240:                                              ; preds = %238, %226
  store i64 %236, i64* %102, align 8
  store i64 %235, i64* %125, align 8
  store i64 %232, i64* %101, align 8
  %241 = icmp eq i64 %202, 0
  br i1 %241, label %244, label %242

242:                                              ; preds = %240
  %243 = inttoptr i64 %202 to i8*
  tail call void @_ZdlPv(i8* %243) #10
  br label %244

244:                                              ; preds = %196, %240, %242
  %245 = phi i64 [ %199, %196 ], [ %235, %240 ], [ %235, %242 ]
  %246 = phi i32* [ %198, %196 ], [ %234, %240 ], [ %234, %242 ]
  %247 = icmp sgt i64 %128, 0
  br i1 %247, label %126, label %389

248:                                              ; preds = %83
  %249 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %250 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %249, align 8
  %251 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %250, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %254, label %389

254:                                              ; preds = %248
  %255 = icmp eq %struct.TfLiteTensor* %54, null
  %256 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 0, i32 1
  %257 = bitcast %union.TfLitePtrUnion* %256 to i64**
  %258 = icmp eq %struct.TfLiteTensor* %64, null
  %259 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %260 = bitcast %union.TfLitePtrUnion* %259 to i64**
  %261 = sext i32 %252 to i64
  %262 = bitcast i32** %86 to i64*
  %263 = bitcast i32** %99 to i64*
  br label %264

264:                                              ; preds = %382, %254
  %265 = phi i64 [ %261, %254 ], [ %266, %382 ]
  %266 = add nsw i64 %265, -1
  br i1 %255, label %269, label %267

267:                                              ; preds = %264
  %268 = load i64*, i64** %257, align 8
  br label %269

269:                                              ; preds = %267, %264
  %270 = phi i64* [ %268, %267 ], [ null, %264 ]
  %271 = getelementptr inbounds i64, i64* %270, i64 %266
  %272 = load i64, i64* %271, align 8
  %273 = trunc i64 %272 to i32
  %274 = load i32*, i32** %86, align 8
  %275 = load i32*, i32** %87, align 16
  %276 = icmp ult i32* %274, %275
  %277 = ptrtoint i32* %275 to i64
  br i1 %276, label %278, label %281

278:                                              ; preds = %269
  store i32 %273, i32* %274, align 4
  %279 = getelementptr inbounds i32, i32* %274, i64 1
  %280 = ptrtoint i32* %279 to i64
  store i64 %280, i64* %262, align 8
  br label %324

281:                                              ; preds = %269
  %282 = ptrtoint i32* %274 to i64
  %283 = load i64, i64* %89, align 16
  %284 = sub i64 %282, %283
  %285 = ashr exact i64 %284, 2
  %286 = add nsw i64 %285, 1
  %287 = icmp ugt i64 %286, 4611686018427387903
  br i1 %287, label %288, label %290

288:                                              ; preds = %281
  %289 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %289) #11
  unreachable

290:                                              ; preds = %281
  %291 = sub i64 %277, %283
  %292 = ashr exact i64 %291, 2
  %293 = icmp ult i64 %292, 2305843009213693951
  br i1 %293, label %294, label %302

294:                                              ; preds = %290
  %295 = ashr exact i64 %291, 1
  %296 = icmp ult i64 %295, %286
  %297 = select i1 %296, i64 %286, i64 %295
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %307, label %299

299:                                              ; preds = %294
  %300 = icmp ugt i64 %297, 4611686018427387903
  br i1 %300, label %301, label %302

301:                                              ; preds = %299
  tail call void @abort() #11
  unreachable

302:                                              ; preds = %299, %290
  %303 = phi i64 [ %297, %299 ], [ 4611686018427387903, %290 ]
  %304 = shl i64 %303, 2
  %305 = tail call i8* @_Znwm(i64 %304) #10
  %306 = bitcast i8* %305 to i32*
  br label %307

307:                                              ; preds = %302, %294
  %308 = phi i64 [ %303, %302 ], [ 0, %294 ]
  %309 = phi i8* [ %305, %302 ], [ null, %294 ]
  %310 = phi i32* [ %306, %302 ], [ null, %294 ]
  %311 = getelementptr inbounds i32, i32* %310, i64 %285
  %312 = getelementptr inbounds i32, i32* %310, i64 %308
  %313 = ptrtoint i32* %312 to i64
  store i32 %273, i32* %311, align 4
  %314 = getelementptr inbounds i32, i32* %311, i64 1
  %315 = ptrtoint i32* %314 to i64
  %316 = ptrtoint i32* %310 to i64
  %317 = icmp sgt i64 %284, 0
  br i1 %317, label %318, label %320

318:                                              ; preds = %307
  %319 = inttoptr i64 %283 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %309, i8* align 4 %319, i64 %284, i1 false) #9
  br label %320

320:                                              ; preds = %318, %307
  store i64 %316, i64* %89, align 16
  store i64 %315, i64* %262, align 8
  store i64 %313, i64* %88, align 16
  %321 = icmp eq i64 %283, 0
  br i1 %321, label %324, label %322

322:                                              ; preds = %320
  %323 = inttoptr i64 %283 to i8*
  tail call void @_ZdlPv(i8* %323) #10
  br label %324

324:                                              ; preds = %278, %320, %322
  br i1 %258, label %327, label %325

325:                                              ; preds = %324
  %326 = load i64*, i64** %260, align 8
  br label %327

327:                                              ; preds = %325, %324
  %328 = phi i64* [ %326, %325 ], [ null, %324 ]
  %329 = getelementptr inbounds i64, i64* %328, i64 %266
  %330 = load i64, i64* %329, align 8
  %331 = trunc i64 %330 to i32
  %332 = load i32*, i32** %99, align 8
  %333 = load i32*, i32** %100, align 8
  %334 = icmp ult i32* %332, %333
  %335 = ptrtoint i32* %333 to i64
  br i1 %334, label %336, label %339

336:                                              ; preds = %327
  store i32 %331, i32* %332, align 4
  %337 = getelementptr inbounds i32, i32* %332, i64 1
  %338 = ptrtoint i32* %337 to i64
  store i64 %338, i64* %263, align 8
  br label %382

339:                                              ; preds = %327
  %340 = ptrtoint i32* %332 to i64
  %341 = load i64, i64* %102, align 8
  %342 = sub i64 %340, %341
  %343 = ashr exact i64 %342, 2
  %344 = add nsw i64 %343, 1
  %345 = icmp ugt i64 %344, 4611686018427387903
  br i1 %345, label %346, label %348

346:                                              ; preds = %339
  %347 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %347) #11
  unreachable

348:                                              ; preds = %339
  %349 = sub i64 %335, %341
  %350 = ashr exact i64 %349, 2
  %351 = icmp ult i64 %350, 2305843009213693951
  br i1 %351, label %352, label %360

352:                                              ; preds = %348
  %353 = ashr exact i64 %349, 1
  %354 = icmp ult i64 %353, %344
  %355 = select i1 %354, i64 %344, i64 %353
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %365, label %357

357:                                              ; preds = %352
  %358 = icmp ugt i64 %355, 4611686018427387903
  br i1 %358, label %359, label %360

359:                                              ; preds = %357
  tail call void @abort() #11
  unreachable

360:                                              ; preds = %357, %348
  %361 = phi i64 [ %355, %357 ], [ 4611686018427387903, %348 ]
  %362 = shl i64 %361, 2
  %363 = tail call i8* @_Znwm(i64 %362) #10
  %364 = bitcast i8* %363 to i32*
  br label %365

365:                                              ; preds = %360, %352
  %366 = phi i64 [ %361, %360 ], [ 0, %352 ]
  %367 = phi i8* [ %363, %360 ], [ null, %352 ]
  %368 = phi i32* [ %364, %360 ], [ null, %352 ]
  %369 = getelementptr inbounds i32, i32* %368, i64 %343
  %370 = getelementptr inbounds i32, i32* %368, i64 %366
  %371 = ptrtoint i32* %370 to i64
  store i32 %331, i32* %369, align 4
  %372 = getelementptr inbounds i32, i32* %369, i64 1
  %373 = ptrtoint i32* %372 to i64
  %374 = ptrtoint i32* %368 to i64
  %375 = icmp sgt i64 %342, 0
  br i1 %375, label %376, label %378

376:                                              ; preds = %365
  %377 = inttoptr i64 %341 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %367, i8* align 4 %377, i64 %342, i1 false) #9
  br label %378

378:                                              ; preds = %376, %365
  store i64 %374, i64* %102, align 8
  store i64 %373, i64* %263, align 8
  store i64 %371, i64* %101, align 8
  %379 = icmp eq i64 %341, 0
  br i1 %379, label %382, label %380

380:                                              ; preds = %378
  %381 = inttoptr i64 %341 to i8*
  tail call void @_ZdlPv(i8* %381) #10
  br label %382

382:                                              ; preds = %336, %378, %380
  %383 = phi i64 [ %338, %336 ], [ %373, %378 ], [ %373, %380 ]
  %384 = phi i32* [ %337, %336 ], [ %372, %378 ], [ %372, %380 ]
  %385 = icmp sgt i64 %266, 0
  br i1 %385, label %264, label %389

386:                                              ; preds = %83
  %387 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %388 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %387, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %388(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 %111) #9
  br label %1511

389:                                              ; preds = %382, %244, %248, %112
  %390 = phi i64 [ %106, %248 ], [ %106, %112 ], [ %245, %244 ], [ %383, %382 ]
  %391 = phi i32* [ %105, %248 ], [ %105, %112 ], [ %246, %244 ], [ %384, %382 ]
  %392 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %393 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8
  %394 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %393, i64 0, i32 0
  %395 = load i32, i32* %394, align 4
  %396 = icmp slt i32 %395, 4
  br i1 %396, label %397, label %400

397:                                              ; preds = %389
  %398 = bitcast i32** %86 to i64*
  %399 = bitcast i32** %99 to i64*
  br label %404

400:                                              ; preds = %516, %389
  %401 = phi i64 [ %390, %389 ], [ %517, %516 ]
  %402 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 0
  %403 = load i32, i32* %402, align 8
  switch i32 %403, label %1508 [
    i32 1, label %521
    i32 2, label %660
    i32 4, label %797
    i32 9, label %936
    i32 3, label %1075
    i32 6, label %1214
    i32 5, label %1353
  ]

404:                                              ; preds = %516, %397
  %405 = phi i64 [ %390, %397 ], [ %517, %516 ]
  %406 = phi i32* [ %391, %397 ], [ %518, %516 ]
  %407 = phi i32 [ %395, %397 ], [ %519, %516 ]
  %408 = load i32*, i32** %86, align 8
  %409 = load i32*, i32** %87, align 16
  %410 = icmp ult i32* %408, %409
  %411 = ptrtoint i32* %409 to i64
  br i1 %410, label %412, label %417

412:                                              ; preds = %404
  store i32 0, i32* %408, align 4
  %413 = getelementptr inbounds i32, i32* %408, i64 1
  %414 = ptrtoint i32* %413 to i64
  store i64 %414, i64* %398, align 8
  %415 = load i32*, i32** %99, align 8
  %416 = ptrtoint i32* %415 to i64
  br label %460

417:                                              ; preds = %404
  %418 = ptrtoint i32* %408 to i64
  %419 = load i64, i64* %89, align 16
  %420 = sub i64 %418, %419
  %421 = ashr exact i64 %420, 2
  %422 = add nsw i64 %421, 1
  %423 = icmp ugt i64 %422, 4611686018427387903
  br i1 %423, label %424, label %426

424:                                              ; preds = %417
  %425 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %425) #11
  unreachable

426:                                              ; preds = %417
  %427 = sub i64 %411, %419
  %428 = ashr exact i64 %427, 2
  %429 = icmp ult i64 %428, 2305843009213693951
  br i1 %429, label %430, label %438

430:                                              ; preds = %426
  %431 = ashr exact i64 %427, 1
  %432 = icmp ult i64 %431, %422
  %433 = select i1 %432, i64 %422, i64 %431
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %443, label %435

435:                                              ; preds = %430
  %436 = icmp ugt i64 %433, 4611686018427387903
  br i1 %436, label %437, label %438

437:                                              ; preds = %435
  tail call void @abort() #11
  unreachable

438:                                              ; preds = %435, %426
  %439 = phi i64 [ %433, %435 ], [ 4611686018427387903, %426 ]
  %440 = shl i64 %439, 2
  %441 = tail call i8* @_Znwm(i64 %440) #10
  %442 = bitcast i8* %441 to i32*
  br label %443

443:                                              ; preds = %438, %430
  %444 = phi i64 [ %439, %438 ], [ 0, %430 ]
  %445 = phi i8* [ %441, %438 ], [ null, %430 ]
  %446 = phi i32* [ %442, %438 ], [ null, %430 ]
  %447 = getelementptr inbounds i32, i32* %446, i64 %421
  %448 = getelementptr inbounds i32, i32* %446, i64 %444
  %449 = ptrtoint i32* %448 to i64
  store i32 0, i32* %447, align 4
  %450 = getelementptr inbounds i32, i32* %447, i64 1
  %451 = ptrtoint i32* %450 to i64
  %452 = ptrtoint i32* %446 to i64
  %453 = icmp sgt i64 %420, 0
  br i1 %453, label %454, label %456

454:                                              ; preds = %443
  %455 = inttoptr i64 %419 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %445, i8* align 4 %455, i64 %420, i1 false) #9
  br label %456

456:                                              ; preds = %454, %443
  store i64 %452, i64* %89, align 16
  store i64 %451, i64* %398, align 8
  store i64 %449, i64* %88, align 16
  %457 = icmp eq i64 %419, 0
  br i1 %457, label %460, label %458

458:                                              ; preds = %456
  %459 = inttoptr i64 %419 to i8*
  tail call void @_ZdlPv(i8* %459) #10
  br label %460

460:                                              ; preds = %412, %456, %458
  %461 = phi i64 [ %416, %412 ], [ %405, %456 ], [ %405, %458 ]
  %462 = phi i32* [ %415, %412 ], [ %406, %456 ], [ %406, %458 ]
  %463 = load i32*, i32** %100, align 8
  %464 = icmp ult i32* %462, %463
  %465 = ptrtoint i32* %463 to i64
  br i1 %464, label %466, label %469

466:                                              ; preds = %460
  store i32 1, i32* %462, align 4
  %467 = getelementptr inbounds i32, i32* %462, i64 1
  %468 = ptrtoint i32* %467 to i64
  store i64 %468, i64* %399, align 8
  br label %516

469:                                              ; preds = %460
  %470 = ptrtoint i32* %462 to i64
  %471 = load i64, i64* %102, align 8
  %472 = sub i64 %470, %471
  %473 = ashr exact i64 %472, 2
  %474 = add nsw i64 %473, 1
  %475 = icmp ugt i64 %474, 4611686018427387903
  br i1 %475, label %476, label %478

476:                                              ; preds = %469
  %477 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %477) #11
  unreachable

478:                                              ; preds = %469
  %479 = sub i64 %465, %471
  %480 = ashr exact i64 %479, 2
  %481 = icmp ult i64 %480, 2305843009213693951
  br i1 %481, label %482, label %490

482:                                              ; preds = %478
  %483 = ashr exact i64 %479, 1
  %484 = icmp ult i64 %483, %474
  %485 = select i1 %484, i64 %474, i64 %483
  %486 = icmp eq i64 %485, 0
  br i1 %486, label %495, label %487

487:                                              ; preds = %482
  %488 = icmp ugt i64 %485, 4611686018427387903
  br i1 %488, label %489, label %490

489:                                              ; preds = %487
  tail call void @abort() #11
  unreachable

490:                                              ; preds = %487, %478
  %491 = phi i64 [ %485, %487 ], [ 4611686018427387903, %478 ]
  %492 = shl i64 %491, 2
  %493 = tail call i8* @_Znwm(i64 %492) #10
  %494 = bitcast i8* %493 to i32*
  br label %495

495:                                              ; preds = %490, %482
  %496 = phi i64 [ %491, %490 ], [ 0, %482 ]
  %497 = phi i32* [ %494, %490 ], [ null, %482 ]
  %498 = getelementptr inbounds i32, i32* %497, i64 %473
  %499 = getelementptr inbounds i32, i32* %497, i64 %496
  %500 = ptrtoint i32* %499 to i64
  store i32 1, i32* %498, align 4
  %501 = getelementptr inbounds i32, i32* %498, i64 1
  %502 = ptrtoint i32* %501 to i64
  %503 = sub i64 %461, %471
  %504 = ashr exact i64 %503, 2
  %505 = sub nsw i64 0, %504
  %506 = getelementptr inbounds i32, i32* %498, i64 %505
  %507 = ptrtoint i32* %506 to i64
  %508 = icmp sgt i64 %503, 0
  br i1 %508, label %509, label %512

509:                                              ; preds = %495
  %510 = bitcast i32* %506 to i8*
  %511 = inttoptr i64 %471 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %510, i8* align 4 %511, i64 %503, i1 false) #9
  br label %512

512:                                              ; preds = %509, %495
  store i64 %507, i64* %102, align 8
  store i64 %502, i64* %399, align 8
  store i64 %500, i64* %101, align 8
  %513 = icmp eq i64 %471, 0
  br i1 %513, label %516, label %514

514:                                              ; preds = %512
  %515 = inttoptr i64 %471 to i8*
  tail call void @_ZdlPv(i8* %515) #10
  br label %516

516:                                              ; preds = %466, %512, %514
  %517 = phi i64 [ %468, %466 ], [ %502, %512 ], [ %502, %514 ]
  %518 = phi i32* [ %467, %466 ], [ %501, %512 ], [ %501, %514 ]
  %519 = add i32 %407, 1
  %520 = icmp eq i32 %519, 4
  br i1 %520, label %400, label %404

521:                                              ; preds = %400
  %522 = bitcast i32** %86 to i64*
  %523 = load i64, i64* %522, align 8
  %524 = load i64, i64* %89, align 16
  %525 = sub i64 %523, %524
  %526 = icmp eq i64 %525, 16
  %527 = inttoptr i64 %524 to i32*
  br i1 %526, label %532, label %528

528:                                              ; preds = %521
  %529 = ashr exact i64 %525, 2
  %530 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %531 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %530, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %531(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 205, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %529, i32 4) #9
  br label %1511

532:                                              ; preds = %521
  %533 = load i64, i64* %102, align 8
  %534 = sub i64 %401, %533
  %535 = icmp eq i64 %534, 16
  %536 = inttoptr i64 %533 to i32*
  br i1 %535, label %541, label %537

537:                                              ; preds = %532
  %538 = ashr exact i64 %534, 2
  %539 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %540 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %539, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %540(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 205, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %538, i32 4) #9
  br label %1511

541:                                              ; preds = %532
  %542 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %542) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %542, i8 -86, i64 40, i1 false)
  store i8 4, i8* %542, align 4
  %543 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 2
  store i8 4, i8* %543, align 4
  %544 = getelementptr inbounds i32, i32* %527, i64 3
  %545 = load i32, i32* %544, align 4
  %546 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 1, i64 0
  store i32 %545, i32* %546, align 4
  %547 = getelementptr inbounds i32, i32* %536, i64 3
  %548 = load i32, i32* %547, align 4
  %549 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 3, i64 0
  store i32 %548, i32* %549, align 4
  %550 = getelementptr inbounds i32, i32* %527, i64 2
  %551 = load i32, i32* %550, align 4
  %552 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 1, i64 1
  store i32 %551, i32* %552, align 4
  %553 = getelementptr inbounds i32, i32* %536, i64 2
  %554 = load i32, i32* %553, align 4
  %555 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 3, i64 1
  store i32 %554, i32* %555, align 4
  %556 = getelementptr inbounds i32, i32* %527, i64 1
  %557 = load i32, i32* %556, align 4
  %558 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 1, i64 2
  store i32 %557, i32* %558, align 4
  %559 = getelementptr inbounds i32, i32* %536, i64 1
  %560 = load i32, i32* %559, align 4
  %561 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 3, i64 2
  store i32 %560, i32* %561, align 4
  %562 = load i32, i32* %527, align 4
  %563 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 1, i64 3
  store i32 %562, i32* %563, align 4
  %564 = load i32, i32* %536, align 4
  %565 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 3, i64 3
  store i32 %564, i32* %565, align 4
  %566 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %566) #9
  %567 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %567, label %568, label %570

568:                                              ; preds = %541
  %569 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %569, align 8, !alias.scope !2
  br label %594

570:                                              ; preds = %541
  %571 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8, !noalias !2
  %572 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %571, i64 0, i32 0
  %573 = load i32, i32* %572, align 4, !noalias !2
  %574 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %571, i64 0, i32 1, i64 0
  %575 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %573, i32* %575, align 8, !alias.scope !2
  %576 = icmp sgt i32 %573, 5
  br i1 %576, label %577, label %584

577:                                              ; preds = %570
  %578 = sext i32 %573 to i64
  %579 = shl nsw i64 %578, 2
  %580 = tail call i8* @_Znam(i64 %579) #10, !noalias !2
  %581 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %582 = bitcast i32** %581 to i8**
  store i8* %580, i8** %582, align 8, !alias.scope !2
  %583 = bitcast i8* %580 to i32*
  br label %589

584:                                              ; preds = %570
  %585 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %586 = bitcast %union.anon* %585 to i32*
  %587 = sext i32 %573 to i64
  %588 = shl nsw i64 %587, 2
  br label %589

589:                                              ; preds = %584, %577
  %590 = phi i64 [ %579, %577 ], [ %588, %584 ]
  %591 = phi i32* [ %583, %577 ], [ %586, %584 ]
  %592 = bitcast i32* %591 to i8*
  %593 = bitcast i32* %574 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %592, i8* align 4 %593, i64 %590, i1 false) #9
  br label %594

594:                                              ; preds = %568, %589
  %595 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %595) #9
  %596 = icmp eq %struct.TfLiteTensor* %76, null
  br i1 %596, label %597, label %599

597:                                              ; preds = %594
  %598 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %598, align 8, !alias.scope !5
  br label %624

599:                                              ; preds = %594
  %600 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 2
  %601 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %600, align 8, !noalias !5
  %602 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %601, i64 0, i32 0
  %603 = load i32, i32* %602, align 4, !noalias !5
  %604 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %601, i64 0, i32 1, i64 0
  %605 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %603, i32* %605, align 8, !alias.scope !5
  %606 = icmp sgt i32 %603, 5
  br i1 %606, label %607, label %614

607:                                              ; preds = %599
  %608 = sext i32 %603 to i64
  %609 = shl nsw i64 %608, 2
  %610 = tail call i8* @_Znam(i64 %609) #10, !noalias !5
  %611 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %612 = bitcast i32** %611 to i8**
  store i8* %610, i8** %612, align 8, !alias.scope !5
  %613 = bitcast i8* %610 to i32*
  br label %619

614:                                              ; preds = %599
  %615 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %616 = bitcast %union.anon* %615 to i32*
  %617 = sext i32 %603 to i64
  %618 = shl nsw i64 %617, 2
  br label %619

619:                                              ; preds = %614, %607
  %620 = phi i64 [ %609, %607 ], [ %618, %614 ]
  %621 = phi i32* [ %613, %607 ], [ %616, %614 ]
  %622 = bitcast i32* %621 to i8*
  %623 = bitcast i32* %604 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %622, i8* align 4 %623, i64 %620, i1 false) #9
  br label %624

624:                                              ; preds = %597, %619
  %625 = bitcast %"class.tflite::SequentialTensorWriter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %625) #9
  %626 = getelementptr inbounds %"class.tflite::SequentialTensorWriter", %"class.tflite::SequentialTensorWriter"* %8, i64 0, i32 0
  %627 = getelementptr inbounds %"class.tflite::SequentialTensorWriter", %"class.tflite::SequentialTensorWriter"* %8, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %625, i8 -86, i64 16, i1 false) #9
  br i1 %567, label %632, label %628

628:                                              ; preds = %624
  %629 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %630 = bitcast %union.TfLitePtrUnion* %629 to float**
  %631 = load float*, float** %630, align 8
  br label %632

632:                                              ; preds = %628, %624
  %633 = phi float* [ %631, %628 ], [ null, %624 ]
  store float* %633, float** %626, align 8
  br i1 %596, label %638, label %634

634:                                              ; preds = %632
  %635 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 1
  %636 = bitcast %union.TfLitePtrUnion* %635 to float**
  %637 = load float*, float** %636, align 8
  br label %638

638:                                              ; preds = %632, %634
  %639 = phi float* [ %637, %634 ], [ null, %632 ]
  store float* %639, float** %627, align 8
  call void @_ZN6tflite13reference_ops5SliceIfEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* nonnull dereferenceable(40) %12, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, %"class.tflite::SequentialTensorWriter"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %625) #9
  %640 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %641 = load i32, i32* %640, align 8
  %642 = icmp sgt i32 %641, 5
  br i1 %642, label %643, label %649

643:                                              ; preds = %638
  %644 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %645 = load i32*, i32** %644, align 8
  %646 = icmp eq i32* %645, null
  br i1 %646, label %649, label %647

647:                                              ; preds = %643
  %648 = bitcast i32* %645 to i8*
  call void @_ZdaPv(i8* %648) #10
  br label %649

649:                                              ; preds = %638, %643, %647
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %595) #9
  %650 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %651 = load i32, i32* %650, align 8
  %652 = icmp sgt i32 %651, 5
  br i1 %652, label %653, label %659

653:                                              ; preds = %649
  %654 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %655 = load i32*, i32** %654, align 8
  %656 = icmp eq i32* %655, null
  br i1 %656, label %659, label %657

657:                                              ; preds = %653
  %658 = bitcast i32* %655 to i8*
  call void @_ZdaPv(i8* %658) #10
  br label %659

659:                                              ; preds = %649, %653, %657
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %566) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %542) #9
  br label %1511

660:                                              ; preds = %400
  %661 = bitcast i32** %86 to i64*
  %662 = load i64, i64* %661, align 8
  %663 = load i64, i64* %89, align 16
  %664 = sub i64 %662, %663
  %665 = icmp eq i64 %664, 16
  %666 = inttoptr i64 %663 to i32*
  br i1 %665, label %671, label %667

667:                                              ; preds = %660
  %668 = ashr exact i64 %664, 2
  %669 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %670 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %669, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %670(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 208, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %668, i32 4) #9
  br label %1511

671:                                              ; preds = %660
  %672 = load i64, i64* %102, align 8
  %673 = sub i64 %401, %672
  %674 = icmp eq i64 %673, 16
  %675 = inttoptr i64 %672 to i32*
  br i1 %674, label %680, label %676

676:                                              ; preds = %671
  %677 = ashr exact i64 %673, 2
  %678 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %679 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %678, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %679(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 208, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %677, i32 4) #9
  br label %1511

680:                                              ; preds = %671
  %681 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %681) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %681, i8 -86, i64 40, i1 false)
  store i8 4, i8* %681, align 4
  %682 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 2
  store i8 4, i8* %682, align 4
  %683 = getelementptr inbounds i32, i32* %666, i64 3
  %684 = load i32, i32* %683, align 4
  %685 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 1, i64 0
  store i32 %684, i32* %685, align 4
  %686 = getelementptr inbounds i32, i32* %675, i64 3
  %687 = load i32, i32* %686, align 4
  %688 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 3, i64 0
  store i32 %687, i32* %688, align 4
  %689 = getelementptr inbounds i32, i32* %666, i64 2
  %690 = load i32, i32* %689, align 4
  %691 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 1, i64 1
  store i32 %690, i32* %691, align 4
  %692 = getelementptr inbounds i32, i32* %675, i64 2
  %693 = load i32, i32* %692, align 4
  %694 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 3, i64 1
  store i32 %693, i32* %694, align 4
  %695 = getelementptr inbounds i32, i32* %666, i64 1
  %696 = load i32, i32* %695, align 4
  %697 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 1, i64 2
  store i32 %696, i32* %697, align 4
  %698 = getelementptr inbounds i32, i32* %675, i64 1
  %699 = load i32, i32* %698, align 4
  %700 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 3, i64 2
  store i32 %699, i32* %700, align 4
  %701 = load i32, i32* %666, align 4
  %702 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 1, i64 3
  store i32 %701, i32* %702, align 4
  %703 = load i32, i32* %675, align 4
  %704 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 3, i64 3
  store i32 %703, i32* %704, align 4
  %705 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %705) #9
  %706 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %706, label %707, label %709

707:                                              ; preds = %680
  %708 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %708, align 8, !alias.scope !8
  br label %733

709:                                              ; preds = %680
  %710 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8, !noalias !8
  %711 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %710, i64 0, i32 0
  %712 = load i32, i32* %711, align 4, !noalias !8
  %713 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %710, i64 0, i32 1, i64 0
  %714 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %712, i32* %714, align 8, !alias.scope !8
  %715 = icmp sgt i32 %712, 5
  br i1 %715, label %716, label %723

716:                                              ; preds = %709
  %717 = sext i32 %712 to i64
  %718 = shl nsw i64 %717, 2
  %719 = tail call i8* @_Znam(i64 %718) #10, !noalias !8
  %720 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %721 = bitcast i32** %720 to i8**
  store i8* %719, i8** %721, align 8, !alias.scope !8
  %722 = bitcast i8* %719 to i32*
  br label %728

723:                                              ; preds = %709
  %724 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %725 = bitcast %union.anon* %724 to i32*
  %726 = sext i32 %712 to i64
  %727 = shl nsw i64 %726, 2
  br label %728

728:                                              ; preds = %723, %716
  %729 = phi i64 [ %718, %716 ], [ %727, %723 ]
  %730 = phi i32* [ %722, %716 ], [ %725, %723 ]
  %731 = bitcast i32* %730 to i8*
  %732 = bitcast i32* %713 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %731, i8* align 4 %732, i64 %729, i1 false) #9
  br label %733

733:                                              ; preds = %707, %728
  %734 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %734) #9
  %735 = icmp eq %struct.TfLiteTensor* %76, null
  br i1 %735, label %736, label %738

736:                                              ; preds = %733
  %737 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %737, align 8, !alias.scope !11
  br label %763

738:                                              ; preds = %733
  %739 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 2
  %740 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %739, align 8, !noalias !11
  %741 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %740, i64 0, i32 0
  %742 = load i32, i32* %741, align 4, !noalias !11
  %743 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %740, i64 0, i32 1, i64 0
  %744 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %742, i32* %744, align 8, !alias.scope !11
  %745 = icmp sgt i32 %742, 5
  br i1 %745, label %746, label %753

746:                                              ; preds = %738
  %747 = sext i32 %742 to i64
  %748 = shl nsw i64 %747, 2
  %749 = tail call i8* @_Znam(i64 %748) #10, !noalias !11
  %750 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %751 = bitcast i32** %750 to i8**
  store i8* %749, i8** %751, align 8, !alias.scope !11
  %752 = bitcast i8* %749 to i32*
  br label %758

753:                                              ; preds = %738
  %754 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %755 = bitcast %union.anon* %754 to i32*
  %756 = sext i32 %742 to i64
  %757 = shl nsw i64 %756, 2
  br label %758

758:                                              ; preds = %753, %746
  %759 = phi i64 [ %748, %746 ], [ %757, %753 ]
  %760 = phi i32* [ %752, %746 ], [ %755, %753 ]
  %761 = bitcast i32* %760 to i8*
  %762 = bitcast i32* %743 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %761, i8* align 4 %762, i64 %759, i1 false) #9
  br label %763

763:                                              ; preds = %736, %758
  %764 = bitcast %"class.tflite::SequentialTensorWriter.4"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %764) #9
  %765 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.4", %"class.tflite::SequentialTensorWriter.4"* %7, i64 0, i32 0
  %766 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.4", %"class.tflite::SequentialTensorWriter.4"* %7, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %764, i8 -86, i64 16, i1 false) #9
  br i1 %706, label %770, label %767

767:                                              ; preds = %763
  %768 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1, i32 0
  %769 = load i32*, i32** %768, align 8
  br label %770

770:                                              ; preds = %767, %763
  %771 = phi i32* [ %769, %767 ], [ null, %763 ]
  store i32* %771, i32** %765, align 8
  br i1 %735, label %775, label %772

772:                                              ; preds = %770
  %773 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 1, i32 0
  %774 = load i32*, i32** %773, align 8
  br label %775

775:                                              ; preds = %770, %772
  %776 = phi i32* [ %774, %772 ], [ null, %770 ]
  store i32* %776, i32** %766, align 8
  call void @_ZN6tflite13reference_ops5SliceIiEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* nonnull dereferenceable(40) %15, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, %"class.tflite::SequentialTensorWriter.4"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %764) #9
  %777 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %778 = load i32, i32* %777, align 8
  %779 = icmp sgt i32 %778, 5
  br i1 %779, label %780, label %786

780:                                              ; preds = %775
  %781 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %782 = load i32*, i32** %781, align 8
  %783 = icmp eq i32* %782, null
  br i1 %783, label %786, label %784

784:                                              ; preds = %780
  %785 = bitcast i32* %782 to i8*
  call void @_ZdaPv(i8* %785) #10
  br label %786

786:                                              ; preds = %775, %780, %784
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %734) #9
  %787 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %788 = load i32, i32* %787, align 8
  %789 = icmp sgt i32 %788, 5
  br i1 %789, label %790, label %796

790:                                              ; preds = %786
  %791 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %792 = load i32*, i32** %791, align 8
  %793 = icmp eq i32* %792, null
  br i1 %793, label %796, label %794

794:                                              ; preds = %790
  %795 = bitcast i32* %792 to i8*
  call void @_ZdaPv(i8* %795) #10
  br label %796

796:                                              ; preds = %786, %790, %794
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %705) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %681) #9
  br label %1511

797:                                              ; preds = %400
  %798 = bitcast i32** %86 to i64*
  %799 = load i64, i64* %798, align 8
  %800 = load i64, i64* %89, align 16
  %801 = sub i64 %799, %800
  %802 = icmp eq i64 %801, 16
  %803 = inttoptr i64 %800 to i32*
  br i1 %802, label %808, label %804

804:                                              ; preds = %797
  %805 = ashr exact i64 %801, 2
  %806 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %807 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %806, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %807(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %805, i32 4) #9
  br label %1511

808:                                              ; preds = %797
  %809 = load i64, i64* %102, align 8
  %810 = sub i64 %401, %809
  %811 = icmp eq i64 %810, 16
  %812 = inttoptr i64 %809 to i32*
  br i1 %811, label %817, label %813

813:                                              ; preds = %808
  %814 = ashr exact i64 %810, 2
  %815 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %816 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %815, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %816(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %814, i32 4) #9
  br label %1511

817:                                              ; preds = %808
  %818 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %818) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %818, i8 -86, i64 40, i1 false)
  store i8 4, i8* %818, align 4
  %819 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 2
  store i8 4, i8* %819, align 4
  %820 = getelementptr inbounds i32, i32* %803, i64 3
  %821 = load i32, i32* %820, align 4
  %822 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 1, i64 0
  store i32 %821, i32* %822, align 4
  %823 = getelementptr inbounds i32, i32* %812, i64 3
  %824 = load i32, i32* %823, align 4
  %825 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 3, i64 0
  store i32 %824, i32* %825, align 4
  %826 = getelementptr inbounds i32, i32* %803, i64 2
  %827 = load i32, i32* %826, align 4
  %828 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 1, i64 1
  store i32 %827, i32* %828, align 4
  %829 = getelementptr inbounds i32, i32* %812, i64 2
  %830 = load i32, i32* %829, align 4
  %831 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 3, i64 1
  store i32 %830, i32* %831, align 4
  %832 = getelementptr inbounds i32, i32* %803, i64 1
  %833 = load i32, i32* %832, align 4
  %834 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 1, i64 2
  store i32 %833, i32* %834, align 4
  %835 = getelementptr inbounds i32, i32* %812, i64 1
  %836 = load i32, i32* %835, align 4
  %837 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 3, i64 2
  store i32 %836, i32* %837, align 4
  %838 = load i32, i32* %803, align 4
  %839 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 1, i64 3
  store i32 %838, i32* %839, align 4
  %840 = load i32, i32* %812, align 4
  %841 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 3, i64 3
  store i32 %840, i32* %841, align 4
  %842 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %842) #9
  %843 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %843, label %844, label %846

844:                                              ; preds = %817
  %845 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %845, align 8, !alias.scope !14
  br label %870

846:                                              ; preds = %817
  %847 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8, !noalias !14
  %848 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %847, i64 0, i32 0
  %849 = load i32, i32* %848, align 4, !noalias !14
  %850 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %847, i64 0, i32 1, i64 0
  %851 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %849, i32* %851, align 8, !alias.scope !14
  %852 = icmp sgt i32 %849, 5
  br i1 %852, label %853, label %860

853:                                              ; preds = %846
  %854 = sext i32 %849 to i64
  %855 = shl nsw i64 %854, 2
  %856 = tail call i8* @_Znam(i64 %855) #10, !noalias !14
  %857 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %858 = bitcast i32** %857 to i8**
  store i8* %856, i8** %858, align 8, !alias.scope !14
  %859 = bitcast i8* %856 to i32*
  br label %865

860:                                              ; preds = %846
  %861 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %862 = bitcast %union.anon* %861 to i32*
  %863 = sext i32 %849 to i64
  %864 = shl nsw i64 %863, 2
  br label %865

865:                                              ; preds = %860, %853
  %866 = phi i64 [ %855, %853 ], [ %864, %860 ]
  %867 = phi i32* [ %859, %853 ], [ %862, %860 ]
  %868 = bitcast i32* %867 to i8*
  %869 = bitcast i32* %850 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %868, i8* align 4 %869, i64 %866, i1 false) #9
  br label %870

870:                                              ; preds = %844, %865
  %871 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %871) #9
  %872 = icmp eq %struct.TfLiteTensor* %76, null
  br i1 %872, label %873, label %875

873:                                              ; preds = %870
  %874 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %874, align 8, !alias.scope !17
  br label %900

875:                                              ; preds = %870
  %876 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 2
  %877 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %876, align 8, !noalias !17
  %878 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %877, i64 0, i32 0
  %879 = load i32, i32* %878, align 4, !noalias !17
  %880 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %877, i64 0, i32 1, i64 0
  %881 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %879, i32* %881, align 8, !alias.scope !17
  %882 = icmp sgt i32 %879, 5
  br i1 %882, label %883, label %890

883:                                              ; preds = %875
  %884 = sext i32 %879 to i64
  %885 = shl nsw i64 %884, 2
  %886 = tail call i8* @_Znam(i64 %885) #10, !noalias !17
  %887 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %888 = bitcast i32** %887 to i8**
  store i8* %886, i8** %888, align 8, !alias.scope !17
  %889 = bitcast i8* %886 to i32*
  br label %895

890:                                              ; preds = %875
  %891 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %892 = bitcast %union.anon* %891 to i32*
  %893 = sext i32 %879 to i64
  %894 = shl nsw i64 %893, 2
  br label %895

895:                                              ; preds = %890, %883
  %896 = phi i64 [ %885, %883 ], [ %894, %890 ]
  %897 = phi i32* [ %889, %883 ], [ %892, %890 ]
  %898 = bitcast i32* %897 to i8*
  %899 = bitcast i32* %880 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %898, i8* align 4 %899, i64 %896, i1 false) #9
  br label %900

900:                                              ; preds = %873, %895
  %901 = bitcast %"class.tflite::SequentialTensorWriter.5"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %901) #9
  %902 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.5", %"class.tflite::SequentialTensorWriter.5"* %6, i64 0, i32 0
  %903 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.5", %"class.tflite::SequentialTensorWriter.5"* %6, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %901, i8 -86, i64 16, i1 false) #9
  br i1 %843, label %908, label %904

904:                                              ; preds = %900
  %905 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %906 = bitcast %union.TfLitePtrUnion* %905 to i64**
  %907 = load i64*, i64** %906, align 8
  br label %908

908:                                              ; preds = %904, %900
  %909 = phi i64* [ %907, %904 ], [ null, %900 ]
  store i64* %909, i64** %902, align 8
  br i1 %872, label %914, label %910

910:                                              ; preds = %908
  %911 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 1
  %912 = bitcast %union.TfLitePtrUnion* %911 to i64**
  %913 = load i64*, i64** %912, align 8
  br label %914

914:                                              ; preds = %908, %910
  %915 = phi i64* [ %913, %910 ], [ null, %908 ]
  store i64* %915, i64** %903, align 8
  call void @_ZN6tflite13reference_ops5SliceIlEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* nonnull dereferenceable(40) %18, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %20, %"class.tflite::SequentialTensorWriter.5"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %901) #9
  %916 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  %917 = load i32, i32* %916, align 8
  %918 = icmp sgt i32 %917, 5
  br i1 %918, label %919, label %925

919:                                              ; preds = %914
  %920 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %921 = load i32*, i32** %920, align 8
  %922 = icmp eq i32* %921, null
  br i1 %922, label %925, label %923

923:                                              ; preds = %919
  %924 = bitcast i32* %921 to i8*
  call void @_ZdaPv(i8* %924) #10
  br label %925

925:                                              ; preds = %914, %919, %923
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %871) #9
  %926 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %927 = load i32, i32* %926, align 8
  %928 = icmp sgt i32 %927, 5
  br i1 %928, label %929, label %935

929:                                              ; preds = %925
  %930 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %931 = load i32*, i32** %930, align 8
  %932 = icmp eq i32* %931, null
  br i1 %932, label %935, label %933

933:                                              ; preds = %929
  %934 = bitcast i32* %931 to i8*
  call void @_ZdaPv(i8* %934) #10
  br label %935

935:                                              ; preds = %925, %929, %933
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %842) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %818) #9
  br label %1511

936:                                              ; preds = %400
  %937 = bitcast i32** %86 to i64*
  %938 = load i64, i64* %937, align 8
  %939 = load i64, i64* %89, align 16
  %940 = sub i64 %938, %939
  %941 = icmp eq i64 %940, 16
  %942 = inttoptr i64 %939 to i32*
  br i1 %941, label %947, label %943

943:                                              ; preds = %936
  %944 = ashr exact i64 %940, 2
  %945 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %946 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %945, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %946(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 214, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %944, i32 4) #9
  br label %1511

947:                                              ; preds = %936
  %948 = load i64, i64* %102, align 8
  %949 = sub i64 %401, %948
  %950 = icmp eq i64 %949, 16
  %951 = inttoptr i64 %948 to i32*
  br i1 %950, label %956, label %952

952:                                              ; preds = %947
  %953 = ashr exact i64 %949, 2
  %954 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %955 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %954, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %955(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 214, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %953, i32 4) #9
  br label %1511

956:                                              ; preds = %947
  %957 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %957) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %957, i8 -86, i64 40, i1 false)
  store i8 4, i8* %957, align 4
  %958 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 2
  store i8 4, i8* %958, align 4
  %959 = getelementptr inbounds i32, i32* %942, i64 3
  %960 = load i32, i32* %959, align 4
  %961 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 1, i64 0
  store i32 %960, i32* %961, align 4
  %962 = getelementptr inbounds i32, i32* %951, i64 3
  %963 = load i32, i32* %962, align 4
  %964 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 3, i64 0
  store i32 %963, i32* %964, align 4
  %965 = getelementptr inbounds i32, i32* %942, i64 2
  %966 = load i32, i32* %965, align 4
  %967 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 1, i64 1
  store i32 %966, i32* %967, align 4
  %968 = getelementptr inbounds i32, i32* %951, i64 2
  %969 = load i32, i32* %968, align 4
  %970 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 3, i64 1
  store i32 %969, i32* %970, align 4
  %971 = getelementptr inbounds i32, i32* %942, i64 1
  %972 = load i32, i32* %971, align 4
  %973 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 1, i64 2
  store i32 %972, i32* %973, align 4
  %974 = getelementptr inbounds i32, i32* %951, i64 1
  %975 = load i32, i32* %974, align 4
  %976 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 3, i64 2
  store i32 %975, i32* %976, align 4
  %977 = load i32, i32* %942, align 4
  %978 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 1, i64 3
  store i32 %977, i32* %978, align 4
  %979 = load i32, i32* %951, align 4
  %980 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 3, i64 3
  store i32 %979, i32* %980, align 4
  %981 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %981) #9
  %982 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %982, label %983, label %985

983:                                              ; preds = %956
  %984 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %984, align 8, !alias.scope !20
  br label %1009

985:                                              ; preds = %956
  %986 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8, !noalias !20
  %987 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %986, i64 0, i32 0
  %988 = load i32, i32* %987, align 4, !noalias !20
  %989 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %986, i64 0, i32 1, i64 0
  %990 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %988, i32* %990, align 8, !alias.scope !20
  %991 = icmp sgt i32 %988, 5
  br i1 %991, label %992, label %999

992:                                              ; preds = %985
  %993 = sext i32 %988 to i64
  %994 = shl nsw i64 %993, 2
  %995 = tail call i8* @_Znam(i64 %994) #10, !noalias !20
  %996 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %997 = bitcast i32** %996 to i8**
  store i8* %995, i8** %997, align 8, !alias.scope !20
  %998 = bitcast i8* %995 to i32*
  br label %1004

999:                                              ; preds = %985
  %1000 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %1001 = bitcast %union.anon* %1000 to i32*
  %1002 = sext i32 %988 to i64
  %1003 = shl nsw i64 %1002, 2
  br label %1004

1004:                                             ; preds = %999, %992
  %1005 = phi i64 [ %994, %992 ], [ %1003, %999 ]
  %1006 = phi i32* [ %998, %992 ], [ %1001, %999 ]
  %1007 = bitcast i32* %1006 to i8*
  %1008 = bitcast i32* %989 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1007, i8* align 4 %1008, i64 %1005, i1 false) #9
  br label %1009

1009:                                             ; preds = %983, %1004
  %1010 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1010) #9
  %1011 = icmp eq %struct.TfLiteTensor* %76, null
  br i1 %1011, label %1012, label %1014

1012:                                             ; preds = %1009
  %1013 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %1013, align 8, !alias.scope !23
  br label %1039

1014:                                             ; preds = %1009
  %1015 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 2
  %1016 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1015, align 8, !noalias !23
  %1017 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1016, i64 0, i32 0
  %1018 = load i32, i32* %1017, align 4, !noalias !23
  %1019 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1016, i64 0, i32 1, i64 0
  %1020 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %1018, i32* %1020, align 8, !alias.scope !23
  %1021 = icmp sgt i32 %1018, 5
  br i1 %1021, label %1022, label %1029

1022:                                             ; preds = %1014
  %1023 = sext i32 %1018 to i64
  %1024 = shl nsw i64 %1023, 2
  %1025 = tail call i8* @_Znam(i64 %1024) #10, !noalias !23
  %1026 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1027 = bitcast i32** %1026 to i8**
  store i8* %1025, i8** %1027, align 8, !alias.scope !23
  %1028 = bitcast i8* %1025 to i32*
  br label %1034

1029:                                             ; preds = %1014
  %1030 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %1031 = bitcast %union.anon* %1030 to i32*
  %1032 = sext i32 %1018 to i64
  %1033 = shl nsw i64 %1032, 2
  br label %1034

1034:                                             ; preds = %1029, %1022
  %1035 = phi i64 [ %1024, %1022 ], [ %1033, %1029 ]
  %1036 = phi i32* [ %1028, %1022 ], [ %1031, %1029 ]
  %1037 = bitcast i32* %1036 to i8*
  %1038 = bitcast i32* %1019 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1037, i8* align 4 %1038, i64 %1035, i1 false) #9
  br label %1039

1039:                                             ; preds = %1012, %1034
  %1040 = bitcast %"class.tflite::SequentialTensorWriter.6"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1040) #9
  %1041 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.6", %"class.tflite::SequentialTensorWriter.6"* %5, i64 0, i32 0
  %1042 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.6", %"class.tflite::SequentialTensorWriter.6"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1040, i8 -86, i64 16, i1 false) #9
  br i1 %982, label %1047, label %1043

1043:                                             ; preds = %1039
  %1044 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %1045 = bitcast %union.TfLitePtrUnion* %1044 to i8**
  %1046 = load i8*, i8** %1045, align 8
  br label %1047

1047:                                             ; preds = %1043, %1039
  %1048 = phi i8* [ %1046, %1043 ], [ null, %1039 ]
  store i8* %1048, i8** %1041, align 8
  br i1 %1011, label %1053, label %1049

1049:                                             ; preds = %1047
  %1050 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 1
  %1051 = bitcast %union.TfLitePtrUnion* %1050 to i8**
  %1052 = load i8*, i8** %1051, align 8
  br label %1053

1053:                                             ; preds = %1047, %1049
  %1054 = phi i8* [ %1052, %1049 ], [ null, %1047 ]
  store i8* %1054, i8** %1042, align 8
  call void @_ZN6tflite13reference_ops5SliceIaEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* nonnull dereferenceable(40) %21, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, %"class.tflite::SequentialTensorWriter.6"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1040) #9
  %1055 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %1056 = load i32, i32* %1055, align 8
  %1057 = icmp sgt i32 %1056, 5
  br i1 %1057, label %1058, label %1064

1058:                                             ; preds = %1053
  %1059 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1060 = load i32*, i32** %1059, align 8
  %1061 = icmp eq i32* %1060, null
  br i1 %1061, label %1064, label %1062

1062:                                             ; preds = %1058
  %1063 = bitcast i32* %1060 to i8*
  call void @_ZdaPv(i8* %1063) #10
  br label %1064

1064:                                             ; preds = %1053, %1058, %1062
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1010) #9
  %1065 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %1066 = load i32, i32* %1065, align 8
  %1067 = icmp sgt i32 %1066, 5
  br i1 %1067, label %1068, label %1074

1068:                                             ; preds = %1064
  %1069 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1070 = load i32*, i32** %1069, align 8
  %1071 = icmp eq i32* %1070, null
  br i1 %1071, label %1074, label %1072

1072:                                             ; preds = %1068
  %1073 = bitcast i32* %1070 to i8*
  call void @_ZdaPv(i8* %1073) #10
  br label %1074

1074:                                             ; preds = %1064, %1068, %1072
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %981) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %957) #9
  br label %1511

1075:                                             ; preds = %400
  %1076 = bitcast i32** %86 to i64*
  %1077 = load i64, i64* %1076, align 8
  %1078 = load i64, i64* %89, align 16
  %1079 = sub i64 %1077, %1078
  %1080 = icmp eq i64 %1079, 16
  %1081 = inttoptr i64 %1078 to i32*
  br i1 %1080, label %1086, label %1082

1082:                                             ; preds = %1075
  %1083 = ashr exact i64 %1079, 2
  %1084 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1085 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1084, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1085(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 217, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %1083, i32 4) #9
  br label %1511

1086:                                             ; preds = %1075
  %1087 = load i64, i64* %102, align 8
  %1088 = sub i64 %401, %1087
  %1089 = icmp eq i64 %1088, 16
  %1090 = inttoptr i64 %1087 to i32*
  br i1 %1089, label %1095, label %1091

1091:                                             ; preds = %1086
  %1092 = ashr exact i64 %1088, 2
  %1093 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1094 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1093, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1094(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 217, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %1092, i32 4) #9
  br label %1511

1095:                                             ; preds = %1086
  %1096 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1096) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1096, i8 -86, i64 40, i1 false)
  store i8 4, i8* %1096, align 4
  %1097 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 2
  store i8 4, i8* %1097, align 4
  %1098 = getelementptr inbounds i32, i32* %1081, i64 3
  %1099 = load i32, i32* %1098, align 4
  %1100 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 1, i64 0
  store i32 %1099, i32* %1100, align 4
  %1101 = getelementptr inbounds i32, i32* %1090, i64 3
  %1102 = load i32, i32* %1101, align 4
  %1103 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 3, i64 0
  store i32 %1102, i32* %1103, align 4
  %1104 = getelementptr inbounds i32, i32* %1081, i64 2
  %1105 = load i32, i32* %1104, align 4
  %1106 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 1, i64 1
  store i32 %1105, i32* %1106, align 4
  %1107 = getelementptr inbounds i32, i32* %1090, i64 2
  %1108 = load i32, i32* %1107, align 4
  %1109 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 3, i64 1
  store i32 %1108, i32* %1109, align 4
  %1110 = getelementptr inbounds i32, i32* %1081, i64 1
  %1111 = load i32, i32* %1110, align 4
  %1112 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 1, i64 2
  store i32 %1111, i32* %1112, align 4
  %1113 = getelementptr inbounds i32, i32* %1090, i64 1
  %1114 = load i32, i32* %1113, align 4
  %1115 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 3, i64 2
  store i32 %1114, i32* %1115, align 4
  %1116 = load i32, i32* %1081, align 4
  %1117 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 1, i64 3
  store i32 %1116, i32* %1117, align 4
  %1118 = load i32, i32* %1090, align 4
  %1119 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 3, i64 3
  store i32 %1118, i32* %1119, align 4
  %1120 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1120) #9
  %1121 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %1121, label %1122, label %1124

1122:                                             ; preds = %1095
  %1123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %1123, align 8, !alias.scope !26
  br label %1148

1124:                                             ; preds = %1095
  %1125 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8, !noalias !26
  %1126 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1125, i64 0, i32 0
  %1127 = load i32, i32* %1126, align 4, !noalias !26
  %1128 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1125, i64 0, i32 1, i64 0
  %1129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %1127, i32* %1129, align 8, !alias.scope !26
  %1130 = icmp sgt i32 %1127, 5
  br i1 %1130, label %1131, label %1138

1131:                                             ; preds = %1124
  %1132 = sext i32 %1127 to i64
  %1133 = shl nsw i64 %1132, 2
  %1134 = tail call i8* @_Znam(i64 %1133) #10, !noalias !26
  %1135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1136 = bitcast i32** %1135 to i8**
  store i8* %1134, i8** %1136, align 8, !alias.scope !26
  %1137 = bitcast i8* %1134 to i32*
  br label %1143

1138:                                             ; preds = %1124
  %1139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %1140 = bitcast %union.anon* %1139 to i32*
  %1141 = sext i32 %1127 to i64
  %1142 = shl nsw i64 %1141, 2
  br label %1143

1143:                                             ; preds = %1138, %1131
  %1144 = phi i64 [ %1133, %1131 ], [ %1142, %1138 ]
  %1145 = phi i32* [ %1137, %1131 ], [ %1140, %1138 ]
  %1146 = bitcast i32* %1145 to i8*
  %1147 = bitcast i32* %1128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1146, i8* align 4 %1147, i64 %1144, i1 false) #9
  br label %1148

1148:                                             ; preds = %1122, %1143
  %1149 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1149) #9
  %1150 = icmp eq %struct.TfLiteTensor* %76, null
  br i1 %1150, label %1151, label %1153

1151:                                             ; preds = %1148
  %1152 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %1152, align 8, !alias.scope !29
  br label %1178

1153:                                             ; preds = %1148
  %1154 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 2
  %1155 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1154, align 8, !noalias !29
  %1156 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1155, i64 0, i32 0
  %1157 = load i32, i32* %1156, align 4, !noalias !29
  %1158 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1155, i64 0, i32 1, i64 0
  %1159 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %1157, i32* %1159, align 8, !alias.scope !29
  %1160 = icmp sgt i32 %1157, 5
  br i1 %1160, label %1161, label %1168

1161:                                             ; preds = %1153
  %1162 = sext i32 %1157 to i64
  %1163 = shl nsw i64 %1162, 2
  %1164 = tail call i8* @_Znam(i64 %1163) #10, !noalias !29
  %1165 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1166 = bitcast i32** %1165 to i8**
  store i8* %1164, i8** %1166, align 8, !alias.scope !29
  %1167 = bitcast i8* %1164 to i32*
  br label %1173

1168:                                             ; preds = %1153
  %1169 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %1170 = bitcast %union.anon* %1169 to i32*
  %1171 = sext i32 %1157 to i64
  %1172 = shl nsw i64 %1171, 2
  br label %1173

1173:                                             ; preds = %1168, %1161
  %1174 = phi i64 [ %1163, %1161 ], [ %1172, %1168 ]
  %1175 = phi i32* [ %1167, %1161 ], [ %1170, %1168 ]
  %1176 = bitcast i32* %1175 to i8*
  %1177 = bitcast i32* %1158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1176, i8* align 4 %1177, i64 %1174, i1 false) #9
  br label %1178

1178:                                             ; preds = %1151, %1173
  %1179 = bitcast %"class.tflite::SequentialTensorWriter.7"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1179) #9
  %1180 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.7", %"class.tflite::SequentialTensorWriter.7"* %4, i64 0, i32 0
  %1181 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.7", %"class.tflite::SequentialTensorWriter.7"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1179, i8 -86, i64 16, i1 false) #9
  br i1 %1121, label %1186, label %1182

1182:                                             ; preds = %1178
  %1183 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %1184 = bitcast %union.TfLitePtrUnion* %1183 to i8**
  %1185 = load i8*, i8** %1184, align 8
  br label %1186

1186:                                             ; preds = %1182, %1178
  %1187 = phi i8* [ %1185, %1182 ], [ null, %1178 ]
  store i8* %1187, i8** %1180, align 8
  br i1 %1150, label %1192, label %1188

1188:                                             ; preds = %1186
  %1189 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 1
  %1190 = bitcast %union.TfLitePtrUnion* %1189 to i8**
  %1191 = load i8*, i8** %1190, align 8
  br label %1192

1192:                                             ; preds = %1186, %1188
  %1193 = phi i8* [ %1191, %1188 ], [ null, %1186 ]
  store i8* %1193, i8** %1181, align 8
  call void @_ZN6tflite13reference_ops5SliceIhEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* nonnull dereferenceable(40) %24, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %25, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %26, %"class.tflite::SequentialTensorWriter.7"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1179) #9
  %1194 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  %1195 = load i32, i32* %1194, align 8
  %1196 = icmp sgt i32 %1195, 5
  br i1 %1196, label %1197, label %1203

1197:                                             ; preds = %1192
  %1198 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1199 = load i32*, i32** %1198, align 8
  %1200 = icmp eq i32* %1199, null
  br i1 %1200, label %1203, label %1201

1201:                                             ; preds = %1197
  %1202 = bitcast i32* %1199 to i8*
  call void @_ZdaPv(i8* %1202) #10
  br label %1203

1203:                                             ; preds = %1192, %1197, %1201
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1149) #9
  %1204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  %1205 = load i32, i32* %1204, align 8
  %1206 = icmp sgt i32 %1205, 5
  br i1 %1206, label %1207, label %1213

1207:                                             ; preds = %1203
  %1208 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1209 = load i32*, i32** %1208, align 8
  %1210 = icmp eq i32* %1209, null
  br i1 %1210, label %1213, label %1211

1211:                                             ; preds = %1207
  %1212 = bitcast i32* %1209 to i8*
  call void @_ZdaPv(i8* %1212) #10
  br label %1213

1213:                                             ; preds = %1203, %1207, %1211
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1120) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1096) #9
  br label %1511

1214:                                             ; preds = %400
  %1215 = bitcast i32** %86 to i64*
  %1216 = load i64, i64* %1215, align 8
  %1217 = load i64, i64* %89, align 16
  %1218 = sub i64 %1216, %1217
  %1219 = icmp eq i64 %1218, 16
  %1220 = inttoptr i64 %1217 to i32*
  br i1 %1219, label %1225, label %1221

1221:                                             ; preds = %1214
  %1222 = ashr exact i64 %1218, 2
  %1223 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1224 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1223, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1224(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 220, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %1222, i32 4) #9
  br label %1511

1225:                                             ; preds = %1214
  %1226 = load i64, i64* %102, align 8
  %1227 = sub i64 %401, %1226
  %1228 = icmp eq i64 %1227, 16
  %1229 = inttoptr i64 %1226 to i32*
  br i1 %1228, label %1234, label %1230

1230:                                             ; preds = %1225
  %1231 = ashr exact i64 %1227, 2
  %1232 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1233 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1232, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1233(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 220, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %1231, i32 4) #9
  br label %1511

1234:                                             ; preds = %1225
  %1235 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1235) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1235, i8 -86, i64 40, i1 false)
  store i8 4, i8* %1235, align 4
  %1236 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 2
  store i8 4, i8* %1236, align 4
  %1237 = getelementptr inbounds i32, i32* %1220, i64 3
  %1238 = load i32, i32* %1237, align 4
  %1239 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 1, i64 0
  store i32 %1238, i32* %1239, align 4
  %1240 = getelementptr inbounds i32, i32* %1229, i64 3
  %1241 = load i32, i32* %1240, align 4
  %1242 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 3, i64 0
  store i32 %1241, i32* %1242, align 4
  %1243 = getelementptr inbounds i32, i32* %1220, i64 2
  %1244 = load i32, i32* %1243, align 4
  %1245 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 1, i64 1
  store i32 %1244, i32* %1245, align 4
  %1246 = getelementptr inbounds i32, i32* %1229, i64 2
  %1247 = load i32, i32* %1246, align 4
  %1248 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 3, i64 1
  store i32 %1247, i32* %1248, align 4
  %1249 = getelementptr inbounds i32, i32* %1220, i64 1
  %1250 = load i32, i32* %1249, align 4
  %1251 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 1, i64 2
  store i32 %1250, i32* %1251, align 4
  %1252 = getelementptr inbounds i32, i32* %1229, i64 1
  %1253 = load i32, i32* %1252, align 4
  %1254 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 3, i64 2
  store i32 %1253, i32* %1254, align 4
  %1255 = load i32, i32* %1220, align 4
  %1256 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 1, i64 3
  store i32 %1255, i32* %1256, align 4
  %1257 = load i32, i32* %1229, align 4
  %1258 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 3, i64 3
  store i32 %1257, i32* %1258, align 4
  %1259 = bitcast %"class.tflite::RuntimeShape"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1259) #9
  %1260 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %1260, label %1261, label %1263

1261:                                             ; preds = %1234
  %1262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 0, i32* %1262, align 8, !alias.scope !32
  br label %1287

1263:                                             ; preds = %1234
  %1264 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8, !noalias !32
  %1265 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1264, i64 0, i32 0
  %1266 = load i32, i32* %1265, align 4, !noalias !32
  %1267 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1264, i64 0, i32 1, i64 0
  %1268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 %1266, i32* %1268, align 8, !alias.scope !32
  %1269 = icmp sgt i32 %1266, 5
  br i1 %1269, label %1270, label %1277

1270:                                             ; preds = %1263
  %1271 = sext i32 %1266 to i64
  %1272 = shl nsw i64 %1271, 2
  %1273 = tail call i8* @_Znam(i64 %1272) #10, !noalias !32
  %1274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1275 = bitcast i32** %1274 to i8**
  store i8* %1273, i8** %1275, align 8, !alias.scope !32
  %1276 = bitcast i8* %1273 to i32*
  br label %1282

1277:                                             ; preds = %1263
  %1278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1
  %1279 = bitcast %union.anon* %1278 to i32*
  %1280 = sext i32 %1266 to i64
  %1281 = shl nsw i64 %1280, 2
  br label %1282

1282:                                             ; preds = %1277, %1270
  %1283 = phi i64 [ %1272, %1270 ], [ %1281, %1277 ]
  %1284 = phi i32* [ %1276, %1270 ], [ %1279, %1277 ]
  %1285 = bitcast i32* %1284 to i8*
  %1286 = bitcast i32* %1267 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1285, i8* align 4 %1286, i64 %1283, i1 false) #9
  br label %1287

1287:                                             ; preds = %1261, %1282
  %1288 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1288) #9
  %1289 = icmp eq %struct.TfLiteTensor* %76, null
  br i1 %1289, label %1290, label %1292

1290:                                             ; preds = %1287
  %1291 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %1291, align 8, !alias.scope !35
  br label %1317

1292:                                             ; preds = %1287
  %1293 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 2
  %1294 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1293, align 8, !noalias !35
  %1295 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1294, i64 0, i32 0
  %1296 = load i32, i32* %1295, align 4, !noalias !35
  %1297 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1294, i64 0, i32 1, i64 0
  %1298 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %1296, i32* %1298, align 8, !alias.scope !35
  %1299 = icmp sgt i32 %1296, 5
  br i1 %1299, label %1300, label %1307

1300:                                             ; preds = %1292
  %1301 = sext i32 %1296 to i64
  %1302 = shl nsw i64 %1301, 2
  %1303 = tail call i8* @_Znam(i64 %1302) #10, !noalias !35
  %1304 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1305 = bitcast i32** %1304 to i8**
  store i8* %1303, i8** %1305, align 8, !alias.scope !35
  %1306 = bitcast i8* %1303 to i32*
  br label %1312

1307:                                             ; preds = %1292
  %1308 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %1309 = bitcast %union.anon* %1308 to i32*
  %1310 = sext i32 %1296 to i64
  %1311 = shl nsw i64 %1310, 2
  br label %1312

1312:                                             ; preds = %1307, %1300
  %1313 = phi i64 [ %1302, %1300 ], [ %1311, %1307 ]
  %1314 = phi i32* [ %1306, %1300 ], [ %1309, %1307 ]
  %1315 = bitcast i32* %1314 to i8*
  %1316 = bitcast i32* %1297 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1315, i8* align 4 %1316, i64 %1313, i1 false) #9
  br label %1317

1317:                                             ; preds = %1290, %1312
  %1318 = bitcast %"class.tflite::SequentialTensorWriter.8"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1318) #9
  %1319 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.8", %"class.tflite::SequentialTensorWriter.8"* %3, i64 0, i32 0
  %1320 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.8", %"class.tflite::SequentialTensorWriter.8"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1318, i8 -86, i64 16, i1 false) #9
  br i1 %1260, label %1325, label %1321

1321:                                             ; preds = %1317
  %1322 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %1323 = bitcast %union.TfLitePtrUnion* %1322 to i8**
  %1324 = load i8*, i8** %1323, align 8
  br label %1325

1325:                                             ; preds = %1321, %1317
  %1326 = phi i8* [ %1324, %1321 ], [ null, %1317 ]
  store i8* %1326, i8** %1319, align 8
  br i1 %1289, label %1331, label %1327

1327:                                             ; preds = %1325
  %1328 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 1
  %1329 = bitcast %union.TfLitePtrUnion* %1328 to i8**
  %1330 = load i8*, i8** %1329, align 8
  br label %1331

1331:                                             ; preds = %1325, %1327
  %1332 = phi i8* [ %1330, %1327 ], [ null, %1325 ]
  store i8* %1332, i8** %1320, align 8
  call void @_ZN6tflite13reference_ops5SliceIbEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* nonnull dereferenceable(40) %27, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %28, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %29, %"class.tflite::SequentialTensorWriter.8"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1318) #9
  %1333 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  %1334 = load i32, i32* %1333, align 8
  %1335 = icmp sgt i32 %1334, 5
  br i1 %1335, label %1336, label %1342

1336:                                             ; preds = %1331
  %1337 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1338 = load i32*, i32** %1337, align 8
  %1339 = icmp eq i32* %1338, null
  br i1 %1339, label %1342, label %1340

1340:                                             ; preds = %1336
  %1341 = bitcast i32* %1338 to i8*
  call void @_ZdaPv(i8* %1341) #10
  br label %1342

1342:                                             ; preds = %1331, %1336, %1340
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1288) #9
  %1343 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  %1344 = load i32, i32* %1343, align 8
  %1345 = icmp sgt i32 %1344, 5
  br i1 %1345, label %1346, label %1352

1346:                                             ; preds = %1342
  %1347 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1348 = load i32*, i32** %1347, align 8
  %1349 = icmp eq i32* %1348, null
  br i1 %1349, label %1352, label %1350

1350:                                             ; preds = %1346
  %1351 = bitcast i32* %1348 to i8*
  call void @_ZdaPv(i8* %1351) #10
  br label %1352

1352:                                             ; preds = %1342, %1346, %1350
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1259) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1235) #9
  br label %1511

1353:                                             ; preds = %400
  %1354 = bitcast i32** %86 to i64*
  %1355 = load i64, i64* %1354, align 8
  %1356 = load i64, i64* %89, align 16
  %1357 = sub i64 %1355, %1356
  %1358 = icmp eq i64 %1357, 16
  %1359 = inttoptr i64 %1356 to i32*
  br i1 %1358, label %1364, label %1360

1360:                                             ; preds = %1353
  %1361 = ashr exact i64 %1357, 2
  %1362 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1363 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1362, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1363(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 223, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %1361, i32 4) #9
  br label %1511

1364:                                             ; preds = %1353
  %1365 = load i64, i64* %102, align 8
  %1366 = sub i64 %401, %1365
  %1367 = icmp eq i64 %1366, 16
  %1368 = inttoptr i64 %1365 to i32*
  br i1 %1367, label %1373, label %1369

1369:                                             ; preds = %1364
  %1370 = ashr exact i64 %1366, 2
  %1371 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1372 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1371, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1372(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 223, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %1370, i32 4) #9
  br label %1511

1373:                                             ; preds = %1364
  %1374 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1374) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1374, i8 -86, i64 40, i1 false)
  store i8 4, i8* %1374, align 4
  %1375 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 2
  store i8 4, i8* %1375, align 4
  %1376 = getelementptr inbounds i32, i32* %1359, i64 3
  %1377 = load i32, i32* %1376, align 4
  %1378 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 1, i64 0
  store i32 %1377, i32* %1378, align 4
  %1379 = getelementptr inbounds i32, i32* %1368, i64 3
  %1380 = load i32, i32* %1379, align 4
  %1381 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 3, i64 0
  store i32 %1380, i32* %1381, align 4
  %1382 = getelementptr inbounds i32, i32* %1359, i64 2
  %1383 = load i32, i32* %1382, align 4
  %1384 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 1, i64 1
  store i32 %1383, i32* %1384, align 4
  %1385 = getelementptr inbounds i32, i32* %1368, i64 2
  %1386 = load i32, i32* %1385, align 4
  %1387 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 3, i64 1
  store i32 %1386, i32* %1387, align 4
  %1388 = getelementptr inbounds i32, i32* %1359, i64 1
  %1389 = load i32, i32* %1388, align 4
  %1390 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 1, i64 2
  store i32 %1389, i32* %1390, align 4
  %1391 = getelementptr inbounds i32, i32* %1368, i64 1
  %1392 = load i32, i32* %1391, align 4
  %1393 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 3, i64 2
  store i32 %1392, i32* %1393, align 4
  %1394 = load i32, i32* %1359, align 4
  %1395 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 1, i64 3
  store i32 %1394, i32* %1395, align 4
  %1396 = load i32, i32* %1368, align 4
  %1397 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 3, i64 3
  store i32 %1396, i32* %1397, align 4
  %1398 = bitcast %"class.tflite::RuntimeShape"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1398) #9
  %1399 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %1399, label %1400, label %1402

1400:                                             ; preds = %1373
  %1401 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 0, i32* %1401, align 8, !alias.scope !38
  br label %1426

1402:                                             ; preds = %1373
  %1403 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8, !noalias !38
  %1404 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1403, i64 0, i32 0
  %1405 = load i32, i32* %1404, align 4, !noalias !38
  %1406 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1403, i64 0, i32 1, i64 0
  %1407 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 %1405, i32* %1407, align 8, !alias.scope !38
  %1408 = icmp sgt i32 %1405, 5
  br i1 %1408, label %1409, label %1416

1409:                                             ; preds = %1402
  %1410 = sext i32 %1405 to i64
  %1411 = shl nsw i64 %1410, 2
  %1412 = tail call i8* @_Znam(i64 %1411) #10, !noalias !38
  %1413 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %1414 = bitcast i32** %1413 to i8**
  store i8* %1412, i8** %1414, align 8, !alias.scope !38
  %1415 = bitcast i8* %1412 to i32*
  br label %1421

1416:                                             ; preds = %1402
  %1417 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1
  %1418 = bitcast %union.anon* %1417 to i32*
  %1419 = sext i32 %1405 to i64
  %1420 = shl nsw i64 %1419, 2
  br label %1421

1421:                                             ; preds = %1416, %1409
  %1422 = phi i64 [ %1411, %1409 ], [ %1420, %1416 ]
  %1423 = phi i32* [ %1415, %1409 ], [ %1418, %1416 ]
  %1424 = bitcast i32* %1423 to i8*
  %1425 = bitcast i32* %1406 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1424, i8* align 4 %1425, i64 %1422, i1 false) #9
  br label %1426

1426:                                             ; preds = %1400, %1421
  %1427 = bitcast %"class.tflite::RuntimeShape"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1427) #9
  %1428 = icmp eq %struct.TfLiteTensor* %76, null
  br i1 %1428, label %1429, label %1431

1429:                                             ; preds = %1426
  %1430 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 0, i32* %1430, align 8, !alias.scope !41
  br label %1456

1431:                                             ; preds = %1426
  %1432 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 2
  %1433 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1432, align 8, !noalias !41
  %1434 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1433, i64 0, i32 0
  %1435 = load i32, i32* %1434, align 4, !noalias !41
  %1436 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1433, i64 0, i32 1, i64 0
  %1437 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 %1435, i32* %1437, align 8, !alias.scope !41
  %1438 = icmp sgt i32 %1435, 5
  br i1 %1438, label %1439, label %1446

1439:                                             ; preds = %1431
  %1440 = sext i32 %1435 to i64
  %1441 = shl nsw i64 %1440, 2
  %1442 = tail call i8* @_Znam(i64 %1441) #10, !noalias !41
  %1443 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %1444 = bitcast i32** %1443 to i8**
  store i8* %1442, i8** %1444, align 8, !alias.scope !41
  %1445 = bitcast i8* %1442 to i32*
  br label %1451

1446:                                             ; preds = %1431
  %1447 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %1448 = bitcast %union.anon* %1447 to i32*
  %1449 = sext i32 %1435 to i64
  %1450 = shl nsw i64 %1449, 2
  br label %1451

1451:                                             ; preds = %1446, %1439
  %1452 = phi i64 [ %1441, %1439 ], [ %1450, %1446 ]
  %1453 = phi i32* [ %1445, %1439 ], [ %1448, %1446 ]
  %1454 = bitcast i32* %1453 to i8*
  %1455 = bitcast i32* %1436 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1454, i8* align 4 %1455, i64 %1452, i1 false) #9
  br label %1456

1456:                                             ; preds = %1429, %1451
  %1457 = bitcast %"class.tflite::SequentialTensorWriter.9"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1457) #9
  %1458 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 0
  store %struct.TfLiteTensor* %44, %struct.TfLiteTensor** %1458, align 8
  %1459 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 1
  store %struct.TfLiteTensor* %76, %struct.TfLiteTensor** %1459, align 8
  %1460 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 2
  %1461 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 2, i32 1
  %1462 = bitcast %"class.tflite::DynamicBuffer"* %1460 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1462, i8 0, i64 24, i1 false) #9
  %1463 = tail call i8* @_Znwm(i64 4) #10
  %1464 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 2, i32 1, i32 0, i32 1
  %1465 = bitcast %"class.std::__1::vector"* %1461 to i8**
  store i8* %1463, i8** %1465, align 8
  %1466 = getelementptr inbounds i8, i8* %1463, i64 4
  %1467 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 2, i32 1, i32 0, i32 2, i32 0, i32 0
  %1468 = bitcast i32** %1467 to i8**
  store i8* %1466, i8** %1468, align 8
  %1469 = bitcast i32** %1464 to i64*
  %1470 = bitcast i8* %1463 to i32*
  store i32 0, i32* %1470, align 4
  %1471 = ptrtoint i8* %1466 to i64
  store i64 %1471, i64* %1469, align 8
  call void @_ZN6tflite13reference_ops5SliceINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvRKNS_11SliceParamsERKNS_12RuntimeShapeESE_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* nonnull dereferenceable(40) %30, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %31, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %32, %"class.tflite::SequentialTensorWriter.9"* nonnull %9) #9
  %1472 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1459, align 8
  call void @_ZN6tflite13DynamicBuffer13WriteToTensorEP12TfLiteTensorP14TfLiteIntArray(%"class.tflite::DynamicBuffer"* %1460, %struct.TfLiteTensor* %1472, %struct.TfLiteIntArray* null) #9
  %1473 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 2, i32 1, i32 0, i32 0
  %1474 = load i32*, i32** %1473, align 8
  %1475 = icmp eq i32* %1474, null
  br i1 %1475, label %1479, label %1476

1476:                                             ; preds = %1456
  %1477 = ptrtoint i32* %1474 to i64
  store i64 %1477, i64* %1469, align 8
  %1478 = bitcast i32* %1474 to i8*
  call void @_ZdlPv(i8* %1478) #10
  br label %1479

1479:                                             ; preds = %1476, %1456
  %1480 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %1460, i64 0, i32 0, i32 0, i32 0
  %1481 = load i8*, i8** %1480, align 8
  %1482 = icmp eq i8* %1481, null
  br i1 %1482, label %1487, label %1483

1483:                                             ; preds = %1479
  %1484 = ptrtoint i8* %1481 to i64
  %1485 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 2, i32 0, i32 0, i32 1
  %1486 = bitcast i8** %1485 to i64*
  store i64 %1484, i64* %1486, align 8
  call void @_ZdlPv(i8* nonnull %1481) #10
  br label %1487

1487:                                             ; preds = %1479, %1483
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1457) #9
  %1488 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  %1489 = load i32, i32* %1488, align 8
  %1490 = icmp sgt i32 %1489, 5
  br i1 %1490, label %1491, label %1497

1491:                                             ; preds = %1487
  %1492 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %1493 = load i32*, i32** %1492, align 8
  %1494 = icmp eq i32* %1493, null
  br i1 %1494, label %1497, label %1495

1495:                                             ; preds = %1491
  %1496 = bitcast i32* %1493 to i8*
  call void @_ZdaPv(i8* %1496) #10
  br label %1497

1497:                                             ; preds = %1487, %1491, %1495
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1427) #9
  %1498 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  %1499 = load i32, i32* %1498, align 8
  %1500 = icmp sgt i32 %1499, 5
  br i1 %1500, label %1501, label %1507

1501:                                             ; preds = %1497
  %1502 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %1503 = load i32*, i32** %1502, align 8
  %1504 = icmp eq i32* %1503, null
  br i1 %1504, label %1507, label %1505

1505:                                             ; preds = %1501
  %1506 = bitcast i32* %1503 to i8*
  call void @_ZdaPv(i8* %1506) #10
  br label %1507

1507:                                             ; preds = %1497, %1501, %1505
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1398) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1374) #9
  br label %1511

1508:                                             ; preds = %400
  %1509 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1510 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1509, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1510(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 %403) #9
  br label %1511

1511:                                             ; preds = %659, %796, %935, %1074, %1213, %1352, %1507, %1508, %1369, %1360, %1230, %1221, %1091, %1082, %952, %943, %813, %804, %676, %667, %537, %528, %386
  %1512 = phi i32 [ 1, %1508 ], [ 1, %1360 ], [ 1, %1369 ], [ 1, %1221 ], [ 1, %1230 ], [ 1, %1082 ], [ 1, %1091 ], [ 1, %943 ], [ 1, %952 ], [ 1, %804 ], [ 1, %813 ], [ 1, %667 ], [ 1, %676 ], [ 1, %528 ], [ 1, %537 ], [ 1, %386 ], [ 0, %1507 ], [ 0, %1352 ], [ 0, %1213 ], [ 0, %1074 ], [ 0, %935 ], [ 0, %796 ], [ 0, %659 ]
  %1513 = load i32*, i32** %98, align 8
  %1514 = icmp eq i32* %1513, null
  br i1 %1514, label %1519, label %1515

1515:                                             ; preds = %1511
  %1516 = ptrtoint i32* %1513 to i64
  %1517 = bitcast i32** %99 to i64*
  store i64 %1516, i64* %1517, align 8
  %1518 = bitcast i32* %1513 to i8*
  call void @_ZdlPv(i8* %1518) #10
  br label %1519

1519:                                             ; preds = %1511, %1515
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #9
  %1520 = load i32*, i32** %85, align 16
  %1521 = icmp eq i32* %1520, null
  br i1 %1521, label %1526, label %1522

1522:                                             ; preds = %1519
  %1523 = ptrtoint i32* %1520 to i64
  %1524 = bitcast i32** %86 to i64*
  store i64 %1523, i64* %1524, align 8
  %1525 = bitcast i32* %1520 to i8*
  call void @_ZdlPv(i8* %1525) #10
  br label %1526

1526:                                             ; preds = %1519, %1522
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #9
  br label %1527

1527:                                             ; preds = %80, %1526
  %1528 = phi i32 [ %1512, %1526 ], [ %81, %80 ]
  ret i32 %1528
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin14Register_SLICEEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin14Register_SLICEEvE1r
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin5slice4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"class.tflite::SequentialTensorWriter.8", align 8
  %4 = alloca %"class.tflite::SequentialTensorWriter.7", align 8
  %5 = alloca %"class.tflite::SequentialTensorWriter.6", align 8
  %6 = alloca %"class.tflite::SequentialTensorWriter.5", align 8
  %7 = alloca %"class.tflite::SequentialTensorWriter.4", align 8
  %8 = alloca %"class.tflite::SequentialTensorWriter", align 8
  %9 = alloca %"class.tflite::SequentialTensorWriter.9", align 8
  %10 = alloca %"class.std::__1::vector", align 16
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = alloca %"struct.tflite::SliceParams", align 4
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"struct.tflite::SliceParams", align 4
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"struct.tflite::SliceParams", align 4
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"struct.tflite::SliceParams", align 4
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca %"struct.tflite::SliceParams", align 4
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca %"struct.tflite::SliceParams", align 4
  %28 = alloca %"class.tflite::RuntimeShape", align 8
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = alloca %"struct.tflite::SliceParams", align 4
  %31 = alloca %"class.tflite::RuntimeShape", align 8
  %32 = alloca %"class.tflite::RuntimeShape", align 8
  %33 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %34 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %33, align 8
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %34, i64 0, i32 1, i64 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %2
  %39 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %40 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %39, align 8
  %41 = sext i32 %36 to i64
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 %41
  br label %43

43:                                               ; preds = %2, %38
  %44 = phi %struct.TfLiteTensor* [ %42, %38 ], [ null, %2 ]
  %45 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %34, i64 0, i32 1, i64 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %50 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %49, align 8
  %51 = sext i32 %46 to i64
  %52 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 %51
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi %struct.TfLiteTensor* [ %52, %48 ], [ null, %43 ]
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %34, i64 0, i32 1, i64 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %60 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %59, align 8
  %61 = sext i32 %56 to i64
  %62 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 %61
  br label %63

63:                                               ; preds = %53, %58
  %64 = phi %struct.TfLiteTensor* [ %62, %58 ], [ null, %53 ]
  %65 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %66 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %65, align 8
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %66, i64 0, i32 1, i64 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %72 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %71, align 8
  %73 = sext i32 %68 to i64
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %72, i64 %73
  br label %75

75:                                               ; preds = %63, %70
  %76 = phi %struct.TfLiteTensor* [ %74, %70 ], [ null, %63 ]
  %77 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 4
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 4
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = tail call i32 @_ZN6tflite3ops7builtin5slice17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorS7_S7_PS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %44, %struct.TfLiteTensor* %54, %struct.TfLiteTensor* %64, %struct.TfLiteTensor* %76)
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %1527

83:                                               ; preds = %80, %75
  %84 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #9
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %88 = bitcast i32** %87 to i64*
  %89 = bitcast %"class.std::__1::vector"* %10 to i64*
  %90 = tail call i8* @_Znwm(i64 16) #10
  %91 = getelementptr inbounds i8, i8* %90, i64 16
  %92 = ptrtoint i8* %91 to i64
  %93 = insertelement <2 x i8*> undef, i8* %90, i32 0
  %94 = shufflevector <2 x i8*> %93, <2 x i8*> undef, <2 x i32> zeroinitializer
  %95 = ptrtoint <2 x i8*> %94 to <2 x i64>
  %96 = bitcast %"class.std::__1::vector"* %10 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %96, align 16
  store i64 %92, i64* %88, align 16
  %97 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #9
  %98 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %101 = bitcast i32** %100 to i64*
  %102 = bitcast %"class.std::__1::vector"* %11 to i64*
  %103 = bitcast i32** %99 to i64*
  %104 = tail call i8* @_Znwm(i64 16) #10
  %105 = bitcast i8* %104 to i32*
  %106 = ptrtoint i8* %104 to i64
  %107 = getelementptr inbounds i8, i8* %104, i64 16
  %108 = ptrtoint i8* %107 to i64
  %109 = ptrtoint i8* %104 to i64
  store i64 %109, i64* %102, align 8
  store i64 %106, i64* %103, align 8
  store i64 %108, i64* %101, align 8
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 0, i32 0
  %111 = load i32, i32* %110, align 8
  switch i32 %111, label %386 [
    i32 2, label %112
    i32 4, label %248
  ]

112:                                              ; preds = %83
  %113 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %114 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %113, align 8
  %115 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %114, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %118, label %389

118:                                              ; preds = %112
  %119 = icmp eq %struct.TfLiteTensor* %54, null
  %120 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 0, i32 1, i32 0
  %121 = icmp eq %struct.TfLiteTensor* %64, null
  %122 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1, i32 0
  %123 = sext i32 %116 to i64
  %124 = bitcast i32** %86 to i64*
  %125 = bitcast i32** %99 to i64*
  br label %126

126:                                              ; preds = %244, %118
  %127 = phi i64 [ %123, %118 ], [ %128, %244 ]
  %128 = add nsw i64 %127, -1
  br i1 %119, label %131, label %129

129:                                              ; preds = %126
  %130 = load i32*, i32** %120, align 8
  br label %131

131:                                              ; preds = %129, %126
  %132 = phi i32* [ %130, %129 ], [ null, %126 ]
  %133 = getelementptr inbounds i32, i32* %132, i64 %128
  %134 = load i32*, i32** %86, align 8
  %135 = load i32*, i32** %87, align 16
  %136 = icmp eq i32* %134, %135
  %137 = ptrtoint i32* %135 to i64
  br i1 %136, label %142, label %138

138:                                              ; preds = %131
  %139 = load i32, i32* %133, align 4
  store i32 %139, i32* %134, align 4
  %140 = getelementptr inbounds i32, i32* %134, i64 1
  %141 = ptrtoint i32* %140 to i64
  store i64 %141, i64* %124, align 8
  br label %186

142:                                              ; preds = %131
  %143 = ptrtoint i32* %134 to i64
  %144 = load i64, i64* %89, align 16
  %145 = sub i64 %143, %144
  %146 = ashr exact i64 %145, 2
  %147 = add nsw i64 %146, 1
  %148 = icmp ugt i64 %147, 4611686018427387903
  br i1 %148, label %149, label %151

149:                                              ; preds = %142
  %150 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %150) #11
  unreachable

151:                                              ; preds = %142
  %152 = sub i64 %137, %144
  %153 = ashr exact i64 %152, 2
  %154 = icmp ult i64 %153, 2305843009213693951
  br i1 %154, label %155, label %163

155:                                              ; preds = %151
  %156 = ashr exact i64 %152, 1
  %157 = icmp ult i64 %156, %147
  %158 = select i1 %157, i64 %147, i64 %156
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %168, label %160

160:                                              ; preds = %155
  %161 = icmp ugt i64 %158, 4611686018427387903
  br i1 %161, label %162, label %163

162:                                              ; preds = %160
  tail call void @abort() #11
  unreachable

163:                                              ; preds = %160, %151
  %164 = phi i64 [ %158, %160 ], [ 4611686018427387903, %151 ]
  %165 = shl i64 %164, 2
  %166 = tail call i8* @_Znwm(i64 %165) #10
  %167 = bitcast i8* %166 to i32*
  br label %168

168:                                              ; preds = %163, %155
  %169 = phi i64 [ %164, %163 ], [ 0, %155 ]
  %170 = phi i8* [ %166, %163 ], [ null, %155 ]
  %171 = phi i32* [ %167, %163 ], [ null, %155 ]
  %172 = getelementptr inbounds i32, i32* %171, i64 %146
  %173 = getelementptr inbounds i32, i32* %171, i64 %169
  %174 = ptrtoint i32* %173 to i64
  %175 = load i32, i32* %133, align 4
  store i32 %175, i32* %172, align 4
  %176 = getelementptr inbounds i32, i32* %172, i64 1
  %177 = ptrtoint i32* %176 to i64
  %178 = ptrtoint i32* %171 to i64
  %179 = icmp sgt i64 %145, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %168
  %181 = inttoptr i64 %144 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %170, i8* align 4 %181, i64 %145, i1 false) #9
  br label %182

182:                                              ; preds = %180, %168
  store i64 %178, i64* %89, align 16
  store i64 %177, i64* %124, align 8
  store i64 %174, i64* %88, align 16
  %183 = icmp eq i64 %144, 0
  br i1 %183, label %186, label %184

184:                                              ; preds = %182
  %185 = inttoptr i64 %144 to i8*
  tail call void @_ZdlPv(i8* %185) #10
  br label %186

186:                                              ; preds = %138, %182, %184
  br i1 %121, label %189, label %187

187:                                              ; preds = %186
  %188 = load i32*, i32** %122, align 8
  br label %189

189:                                              ; preds = %187, %186
  %190 = phi i32* [ %188, %187 ], [ null, %186 ]
  %191 = getelementptr inbounds i32, i32* %190, i64 %128
  %192 = load i32*, i32** %99, align 8
  %193 = load i32*, i32** %100, align 8
  %194 = icmp eq i32* %192, %193
  %195 = ptrtoint i32* %193 to i64
  br i1 %194, label %200, label %196

196:                                              ; preds = %189
  %197 = load i32, i32* %191, align 4
  store i32 %197, i32* %192, align 4
  %198 = getelementptr inbounds i32, i32* %192, i64 1
  %199 = ptrtoint i32* %198 to i64
  store i64 %199, i64* %125, align 8
  br label %244

200:                                              ; preds = %189
  %201 = ptrtoint i32* %192 to i64
  %202 = load i64, i64* %102, align 8
  %203 = sub i64 %201, %202
  %204 = ashr exact i64 %203, 2
  %205 = add nsw i64 %204, 1
  %206 = icmp ugt i64 %205, 4611686018427387903
  br i1 %206, label %207, label %209

207:                                              ; preds = %200
  %208 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %208) #11
  unreachable

209:                                              ; preds = %200
  %210 = sub i64 %195, %202
  %211 = ashr exact i64 %210, 2
  %212 = icmp ult i64 %211, 2305843009213693951
  br i1 %212, label %213, label %221

213:                                              ; preds = %209
  %214 = ashr exact i64 %210, 1
  %215 = icmp ult i64 %214, %205
  %216 = select i1 %215, i64 %205, i64 %214
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %226, label %218

218:                                              ; preds = %213
  %219 = icmp ugt i64 %216, 4611686018427387903
  br i1 %219, label %220, label %221

220:                                              ; preds = %218
  tail call void @abort() #11
  unreachable

221:                                              ; preds = %218, %209
  %222 = phi i64 [ %216, %218 ], [ 4611686018427387903, %209 ]
  %223 = shl i64 %222, 2
  %224 = tail call i8* @_Znwm(i64 %223) #10
  %225 = bitcast i8* %224 to i32*
  br label %226

226:                                              ; preds = %221, %213
  %227 = phi i64 [ %222, %221 ], [ 0, %213 ]
  %228 = phi i8* [ %224, %221 ], [ null, %213 ]
  %229 = phi i32* [ %225, %221 ], [ null, %213 ]
  %230 = getelementptr inbounds i32, i32* %229, i64 %204
  %231 = getelementptr inbounds i32, i32* %229, i64 %227
  %232 = ptrtoint i32* %231 to i64
  %233 = load i32, i32* %191, align 4
  store i32 %233, i32* %230, align 4
  %234 = getelementptr inbounds i32, i32* %230, i64 1
  %235 = ptrtoint i32* %234 to i64
  %236 = ptrtoint i32* %229 to i64
  %237 = icmp sgt i64 %203, 0
  br i1 %237, label %238, label %240

238:                                              ; preds = %226
  %239 = inttoptr i64 %202 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %228, i8* align 4 %239, i64 %203, i1 false) #9
  br label %240

240:                                              ; preds = %238, %226
  store i64 %236, i64* %102, align 8
  store i64 %235, i64* %125, align 8
  store i64 %232, i64* %101, align 8
  %241 = icmp eq i64 %202, 0
  br i1 %241, label %244, label %242

242:                                              ; preds = %240
  %243 = inttoptr i64 %202 to i8*
  tail call void @_ZdlPv(i8* %243) #10
  br label %244

244:                                              ; preds = %196, %240, %242
  %245 = phi i64 [ %199, %196 ], [ %235, %240 ], [ %235, %242 ]
  %246 = phi i32* [ %198, %196 ], [ %234, %240 ], [ %234, %242 ]
  %247 = icmp sgt i64 %128, 0
  br i1 %247, label %126, label %389

248:                                              ; preds = %83
  %249 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %250 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %249, align 8
  %251 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %250, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %254, label %389

254:                                              ; preds = %248
  %255 = icmp eq %struct.TfLiteTensor* %54, null
  %256 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 0, i32 1
  %257 = bitcast %union.TfLitePtrUnion* %256 to i64**
  %258 = icmp eq %struct.TfLiteTensor* %64, null
  %259 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %260 = bitcast %union.TfLitePtrUnion* %259 to i64**
  %261 = sext i32 %252 to i64
  %262 = bitcast i32** %86 to i64*
  %263 = bitcast i32** %99 to i64*
  br label %264

264:                                              ; preds = %382, %254
  %265 = phi i64 [ %261, %254 ], [ %266, %382 ]
  %266 = add nsw i64 %265, -1
  br i1 %255, label %269, label %267

267:                                              ; preds = %264
  %268 = load i64*, i64** %257, align 8
  br label %269

269:                                              ; preds = %267, %264
  %270 = phi i64* [ %268, %267 ], [ null, %264 ]
  %271 = getelementptr inbounds i64, i64* %270, i64 %266
  %272 = load i64, i64* %271, align 8
  %273 = trunc i64 %272 to i32
  %274 = load i32*, i32** %86, align 8
  %275 = load i32*, i32** %87, align 16
  %276 = icmp ult i32* %274, %275
  %277 = ptrtoint i32* %275 to i64
  br i1 %276, label %278, label %281

278:                                              ; preds = %269
  store i32 %273, i32* %274, align 4
  %279 = getelementptr inbounds i32, i32* %274, i64 1
  %280 = ptrtoint i32* %279 to i64
  store i64 %280, i64* %262, align 8
  br label %324

281:                                              ; preds = %269
  %282 = ptrtoint i32* %274 to i64
  %283 = load i64, i64* %89, align 16
  %284 = sub i64 %282, %283
  %285 = ashr exact i64 %284, 2
  %286 = add nsw i64 %285, 1
  %287 = icmp ugt i64 %286, 4611686018427387903
  br i1 %287, label %288, label %290

288:                                              ; preds = %281
  %289 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %289) #11
  unreachable

290:                                              ; preds = %281
  %291 = sub i64 %277, %283
  %292 = ashr exact i64 %291, 2
  %293 = icmp ult i64 %292, 2305843009213693951
  br i1 %293, label %294, label %302

294:                                              ; preds = %290
  %295 = ashr exact i64 %291, 1
  %296 = icmp ult i64 %295, %286
  %297 = select i1 %296, i64 %286, i64 %295
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %307, label %299

299:                                              ; preds = %294
  %300 = icmp ugt i64 %297, 4611686018427387903
  br i1 %300, label %301, label %302

301:                                              ; preds = %299
  tail call void @abort() #11
  unreachable

302:                                              ; preds = %299, %290
  %303 = phi i64 [ %297, %299 ], [ 4611686018427387903, %290 ]
  %304 = shl i64 %303, 2
  %305 = tail call i8* @_Znwm(i64 %304) #10
  %306 = bitcast i8* %305 to i32*
  br label %307

307:                                              ; preds = %302, %294
  %308 = phi i64 [ %303, %302 ], [ 0, %294 ]
  %309 = phi i8* [ %305, %302 ], [ null, %294 ]
  %310 = phi i32* [ %306, %302 ], [ null, %294 ]
  %311 = getelementptr inbounds i32, i32* %310, i64 %285
  %312 = getelementptr inbounds i32, i32* %310, i64 %308
  %313 = ptrtoint i32* %312 to i64
  store i32 %273, i32* %311, align 4
  %314 = getelementptr inbounds i32, i32* %311, i64 1
  %315 = ptrtoint i32* %314 to i64
  %316 = ptrtoint i32* %310 to i64
  %317 = icmp sgt i64 %284, 0
  br i1 %317, label %318, label %320

318:                                              ; preds = %307
  %319 = inttoptr i64 %283 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %309, i8* align 4 %319, i64 %284, i1 false) #9
  br label %320

320:                                              ; preds = %318, %307
  store i64 %316, i64* %89, align 16
  store i64 %315, i64* %262, align 8
  store i64 %313, i64* %88, align 16
  %321 = icmp eq i64 %283, 0
  br i1 %321, label %324, label %322

322:                                              ; preds = %320
  %323 = inttoptr i64 %283 to i8*
  tail call void @_ZdlPv(i8* %323) #10
  br label %324

324:                                              ; preds = %278, %320, %322
  br i1 %258, label %327, label %325

325:                                              ; preds = %324
  %326 = load i64*, i64** %260, align 8
  br label %327

327:                                              ; preds = %325, %324
  %328 = phi i64* [ %326, %325 ], [ null, %324 ]
  %329 = getelementptr inbounds i64, i64* %328, i64 %266
  %330 = load i64, i64* %329, align 8
  %331 = trunc i64 %330 to i32
  %332 = load i32*, i32** %99, align 8
  %333 = load i32*, i32** %100, align 8
  %334 = icmp ult i32* %332, %333
  %335 = ptrtoint i32* %333 to i64
  br i1 %334, label %336, label %339

336:                                              ; preds = %327
  store i32 %331, i32* %332, align 4
  %337 = getelementptr inbounds i32, i32* %332, i64 1
  %338 = ptrtoint i32* %337 to i64
  store i64 %338, i64* %263, align 8
  br label %382

339:                                              ; preds = %327
  %340 = ptrtoint i32* %332 to i64
  %341 = load i64, i64* %102, align 8
  %342 = sub i64 %340, %341
  %343 = ashr exact i64 %342, 2
  %344 = add nsw i64 %343, 1
  %345 = icmp ugt i64 %344, 4611686018427387903
  br i1 %345, label %346, label %348

346:                                              ; preds = %339
  %347 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %347) #11
  unreachable

348:                                              ; preds = %339
  %349 = sub i64 %335, %341
  %350 = ashr exact i64 %349, 2
  %351 = icmp ult i64 %350, 2305843009213693951
  br i1 %351, label %352, label %360

352:                                              ; preds = %348
  %353 = ashr exact i64 %349, 1
  %354 = icmp ult i64 %353, %344
  %355 = select i1 %354, i64 %344, i64 %353
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %365, label %357

357:                                              ; preds = %352
  %358 = icmp ugt i64 %355, 4611686018427387903
  br i1 %358, label %359, label %360

359:                                              ; preds = %357
  tail call void @abort() #11
  unreachable

360:                                              ; preds = %357, %348
  %361 = phi i64 [ %355, %357 ], [ 4611686018427387903, %348 ]
  %362 = shl i64 %361, 2
  %363 = tail call i8* @_Znwm(i64 %362) #10
  %364 = bitcast i8* %363 to i32*
  br label %365

365:                                              ; preds = %360, %352
  %366 = phi i64 [ %361, %360 ], [ 0, %352 ]
  %367 = phi i8* [ %363, %360 ], [ null, %352 ]
  %368 = phi i32* [ %364, %360 ], [ null, %352 ]
  %369 = getelementptr inbounds i32, i32* %368, i64 %343
  %370 = getelementptr inbounds i32, i32* %368, i64 %366
  %371 = ptrtoint i32* %370 to i64
  store i32 %331, i32* %369, align 4
  %372 = getelementptr inbounds i32, i32* %369, i64 1
  %373 = ptrtoint i32* %372 to i64
  %374 = ptrtoint i32* %368 to i64
  %375 = icmp sgt i64 %342, 0
  br i1 %375, label %376, label %378

376:                                              ; preds = %365
  %377 = inttoptr i64 %341 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %367, i8* align 4 %377, i64 %342, i1 false) #9
  br label %378

378:                                              ; preds = %376, %365
  store i64 %374, i64* %102, align 8
  store i64 %373, i64* %263, align 8
  store i64 %371, i64* %101, align 8
  %379 = icmp eq i64 %341, 0
  br i1 %379, label %382, label %380

380:                                              ; preds = %378
  %381 = inttoptr i64 %341 to i8*
  tail call void @_ZdlPv(i8* %381) #10
  br label %382

382:                                              ; preds = %336, %378, %380
  %383 = phi i64 [ %338, %336 ], [ %373, %378 ], [ %373, %380 ]
  %384 = phi i32* [ %337, %336 ], [ %372, %378 ], [ %372, %380 ]
  %385 = icmp sgt i64 %266, 0
  br i1 %385, label %264, label %389

386:                                              ; preds = %83
  %387 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %388 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %387, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %388(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 %111) #9
  br label %1511

389:                                              ; preds = %382, %244, %248, %112
  %390 = phi i64 [ %106, %248 ], [ %106, %112 ], [ %245, %244 ], [ %383, %382 ]
  %391 = phi i32* [ %105, %248 ], [ %105, %112 ], [ %246, %244 ], [ %384, %382 ]
  %392 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %393 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8
  %394 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %393, i64 0, i32 0
  %395 = load i32, i32* %394, align 4
  %396 = icmp slt i32 %395, 4
  br i1 %396, label %397, label %400

397:                                              ; preds = %389
  %398 = bitcast i32** %86 to i64*
  %399 = bitcast i32** %99 to i64*
  br label %404

400:                                              ; preds = %516, %389
  %401 = phi i64 [ %390, %389 ], [ %517, %516 ]
  %402 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 0
  %403 = load i32, i32* %402, align 8
  switch i32 %403, label %1508 [
    i32 1, label %521
    i32 2, label %660
    i32 4, label %797
    i32 9, label %936
    i32 3, label %1075
    i32 6, label %1214
    i32 5, label %1353
  ]

404:                                              ; preds = %516, %397
  %405 = phi i64 [ %390, %397 ], [ %517, %516 ]
  %406 = phi i32* [ %391, %397 ], [ %518, %516 ]
  %407 = phi i32 [ %395, %397 ], [ %519, %516 ]
  %408 = load i32*, i32** %86, align 8
  %409 = load i32*, i32** %87, align 16
  %410 = icmp ult i32* %408, %409
  %411 = ptrtoint i32* %409 to i64
  br i1 %410, label %412, label %417

412:                                              ; preds = %404
  store i32 0, i32* %408, align 4
  %413 = getelementptr inbounds i32, i32* %408, i64 1
  %414 = ptrtoint i32* %413 to i64
  store i64 %414, i64* %398, align 8
  %415 = load i32*, i32** %99, align 8
  %416 = ptrtoint i32* %415 to i64
  br label %460

417:                                              ; preds = %404
  %418 = ptrtoint i32* %408 to i64
  %419 = load i64, i64* %89, align 16
  %420 = sub i64 %418, %419
  %421 = ashr exact i64 %420, 2
  %422 = add nsw i64 %421, 1
  %423 = icmp ugt i64 %422, 4611686018427387903
  br i1 %423, label %424, label %426

424:                                              ; preds = %417
  %425 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %425) #11
  unreachable

426:                                              ; preds = %417
  %427 = sub i64 %411, %419
  %428 = ashr exact i64 %427, 2
  %429 = icmp ult i64 %428, 2305843009213693951
  br i1 %429, label %430, label %438

430:                                              ; preds = %426
  %431 = ashr exact i64 %427, 1
  %432 = icmp ult i64 %431, %422
  %433 = select i1 %432, i64 %422, i64 %431
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %443, label %435

435:                                              ; preds = %430
  %436 = icmp ugt i64 %433, 4611686018427387903
  br i1 %436, label %437, label %438

437:                                              ; preds = %435
  tail call void @abort() #11
  unreachable

438:                                              ; preds = %435, %426
  %439 = phi i64 [ %433, %435 ], [ 4611686018427387903, %426 ]
  %440 = shl i64 %439, 2
  %441 = tail call i8* @_Znwm(i64 %440) #10
  %442 = bitcast i8* %441 to i32*
  br label %443

443:                                              ; preds = %438, %430
  %444 = phi i64 [ %439, %438 ], [ 0, %430 ]
  %445 = phi i8* [ %441, %438 ], [ null, %430 ]
  %446 = phi i32* [ %442, %438 ], [ null, %430 ]
  %447 = getelementptr inbounds i32, i32* %446, i64 %421
  %448 = getelementptr inbounds i32, i32* %446, i64 %444
  %449 = ptrtoint i32* %448 to i64
  store i32 0, i32* %447, align 4
  %450 = getelementptr inbounds i32, i32* %447, i64 1
  %451 = ptrtoint i32* %450 to i64
  %452 = ptrtoint i32* %446 to i64
  %453 = icmp sgt i64 %420, 0
  br i1 %453, label %454, label %456

454:                                              ; preds = %443
  %455 = inttoptr i64 %419 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %445, i8* align 4 %455, i64 %420, i1 false) #9
  br label %456

456:                                              ; preds = %454, %443
  store i64 %452, i64* %89, align 16
  store i64 %451, i64* %398, align 8
  store i64 %449, i64* %88, align 16
  %457 = icmp eq i64 %419, 0
  br i1 %457, label %460, label %458

458:                                              ; preds = %456
  %459 = inttoptr i64 %419 to i8*
  tail call void @_ZdlPv(i8* %459) #10
  br label %460

460:                                              ; preds = %412, %456, %458
  %461 = phi i64 [ %416, %412 ], [ %405, %456 ], [ %405, %458 ]
  %462 = phi i32* [ %415, %412 ], [ %406, %456 ], [ %406, %458 ]
  %463 = load i32*, i32** %100, align 8
  %464 = icmp ult i32* %462, %463
  %465 = ptrtoint i32* %463 to i64
  br i1 %464, label %466, label %469

466:                                              ; preds = %460
  store i32 1, i32* %462, align 4
  %467 = getelementptr inbounds i32, i32* %462, i64 1
  %468 = ptrtoint i32* %467 to i64
  store i64 %468, i64* %399, align 8
  br label %516

469:                                              ; preds = %460
  %470 = ptrtoint i32* %462 to i64
  %471 = load i64, i64* %102, align 8
  %472 = sub i64 %470, %471
  %473 = ashr exact i64 %472, 2
  %474 = add nsw i64 %473, 1
  %475 = icmp ugt i64 %474, 4611686018427387903
  br i1 %475, label %476, label %478

476:                                              ; preds = %469
  %477 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %477) #11
  unreachable

478:                                              ; preds = %469
  %479 = sub i64 %465, %471
  %480 = ashr exact i64 %479, 2
  %481 = icmp ult i64 %480, 2305843009213693951
  br i1 %481, label %482, label %490

482:                                              ; preds = %478
  %483 = ashr exact i64 %479, 1
  %484 = icmp ult i64 %483, %474
  %485 = select i1 %484, i64 %474, i64 %483
  %486 = icmp eq i64 %485, 0
  br i1 %486, label %495, label %487

487:                                              ; preds = %482
  %488 = icmp ugt i64 %485, 4611686018427387903
  br i1 %488, label %489, label %490

489:                                              ; preds = %487
  tail call void @abort() #11
  unreachable

490:                                              ; preds = %487, %478
  %491 = phi i64 [ %485, %487 ], [ 4611686018427387903, %478 ]
  %492 = shl i64 %491, 2
  %493 = tail call i8* @_Znwm(i64 %492) #10
  %494 = bitcast i8* %493 to i32*
  br label %495

495:                                              ; preds = %490, %482
  %496 = phi i64 [ %491, %490 ], [ 0, %482 ]
  %497 = phi i32* [ %494, %490 ], [ null, %482 ]
  %498 = getelementptr inbounds i32, i32* %497, i64 %473
  %499 = getelementptr inbounds i32, i32* %497, i64 %496
  %500 = ptrtoint i32* %499 to i64
  store i32 1, i32* %498, align 4
  %501 = getelementptr inbounds i32, i32* %498, i64 1
  %502 = ptrtoint i32* %501 to i64
  %503 = sub i64 %461, %471
  %504 = ashr exact i64 %503, 2
  %505 = sub nsw i64 0, %504
  %506 = getelementptr inbounds i32, i32* %498, i64 %505
  %507 = ptrtoint i32* %506 to i64
  %508 = icmp sgt i64 %503, 0
  br i1 %508, label %509, label %512

509:                                              ; preds = %495
  %510 = bitcast i32* %506 to i8*
  %511 = inttoptr i64 %471 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %510, i8* align 4 %511, i64 %503, i1 false) #9
  br label %512

512:                                              ; preds = %509, %495
  store i64 %507, i64* %102, align 8
  store i64 %502, i64* %399, align 8
  store i64 %500, i64* %101, align 8
  %513 = icmp eq i64 %471, 0
  br i1 %513, label %516, label %514

514:                                              ; preds = %512
  %515 = inttoptr i64 %471 to i8*
  tail call void @_ZdlPv(i8* %515) #10
  br label %516

516:                                              ; preds = %466, %512, %514
  %517 = phi i64 [ %468, %466 ], [ %502, %512 ], [ %502, %514 ]
  %518 = phi i32* [ %467, %466 ], [ %501, %512 ], [ %501, %514 ]
  %519 = add i32 %407, 1
  %520 = icmp eq i32 %519, 4
  br i1 %520, label %400, label %404

521:                                              ; preds = %400
  %522 = bitcast i32** %86 to i64*
  %523 = load i64, i64* %522, align 8
  %524 = load i64, i64* %89, align 16
  %525 = sub i64 %523, %524
  %526 = icmp eq i64 %525, 16
  %527 = inttoptr i64 %524 to i32*
  br i1 %526, label %532, label %528

528:                                              ; preds = %521
  %529 = ashr exact i64 %525, 2
  %530 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %531 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %530, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %531(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 205, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %529, i32 4) #9
  br label %1511

532:                                              ; preds = %521
  %533 = load i64, i64* %102, align 8
  %534 = sub i64 %401, %533
  %535 = icmp eq i64 %534, 16
  %536 = inttoptr i64 %533 to i32*
  br i1 %535, label %541, label %537

537:                                              ; preds = %532
  %538 = ashr exact i64 %534, 2
  %539 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %540 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %539, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %540(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 205, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %538, i32 4) #9
  br label %1511

541:                                              ; preds = %532
  %542 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %542) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %542, i8 -86, i64 40, i1 false)
  store i8 4, i8* %542, align 4
  %543 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 2
  store i8 4, i8* %543, align 4
  %544 = getelementptr inbounds i32, i32* %527, i64 3
  %545 = load i32, i32* %544, align 4
  %546 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 1, i64 0
  store i32 %545, i32* %546, align 4
  %547 = getelementptr inbounds i32, i32* %536, i64 3
  %548 = load i32, i32* %547, align 4
  %549 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 3, i64 0
  store i32 %548, i32* %549, align 4
  %550 = getelementptr inbounds i32, i32* %527, i64 2
  %551 = load i32, i32* %550, align 4
  %552 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 1, i64 1
  store i32 %551, i32* %552, align 4
  %553 = getelementptr inbounds i32, i32* %536, i64 2
  %554 = load i32, i32* %553, align 4
  %555 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 3, i64 1
  store i32 %554, i32* %555, align 4
  %556 = getelementptr inbounds i32, i32* %527, i64 1
  %557 = load i32, i32* %556, align 4
  %558 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 1, i64 2
  store i32 %557, i32* %558, align 4
  %559 = getelementptr inbounds i32, i32* %536, i64 1
  %560 = load i32, i32* %559, align 4
  %561 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 3, i64 2
  store i32 %560, i32* %561, align 4
  %562 = load i32, i32* %527, align 4
  %563 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 1, i64 3
  store i32 %562, i32* %563, align 4
  %564 = load i32, i32* %536, align 4
  %565 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %12, i64 0, i32 3, i64 3
  store i32 %564, i32* %565, align 4
  %566 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %566) #9
  %567 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %567, label %568, label %570

568:                                              ; preds = %541
  %569 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %569, align 8, !alias.scope !44
  br label %594

570:                                              ; preds = %541
  %571 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8, !noalias !44
  %572 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %571, i64 0, i32 0
  %573 = load i32, i32* %572, align 4, !noalias !44
  %574 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %571, i64 0, i32 1, i64 0
  %575 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %573, i32* %575, align 8, !alias.scope !44
  %576 = icmp sgt i32 %573, 5
  br i1 %576, label %577, label %584

577:                                              ; preds = %570
  %578 = sext i32 %573 to i64
  %579 = shl nsw i64 %578, 2
  %580 = tail call i8* @_Znam(i64 %579) #10, !noalias !44
  %581 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %582 = bitcast i32** %581 to i8**
  store i8* %580, i8** %582, align 8, !alias.scope !44
  %583 = bitcast i8* %580 to i32*
  br label %589

584:                                              ; preds = %570
  %585 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %586 = bitcast %union.anon* %585 to i32*
  %587 = sext i32 %573 to i64
  %588 = shl nsw i64 %587, 2
  br label %589

589:                                              ; preds = %584, %577
  %590 = phi i64 [ %579, %577 ], [ %588, %584 ]
  %591 = phi i32* [ %583, %577 ], [ %586, %584 ]
  %592 = bitcast i32* %591 to i8*
  %593 = bitcast i32* %574 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %592, i8* align 4 %593, i64 %590, i1 false) #9
  br label %594

594:                                              ; preds = %568, %589
  %595 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %595) #9
  %596 = icmp eq %struct.TfLiteTensor* %76, null
  br i1 %596, label %597, label %599

597:                                              ; preds = %594
  %598 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %598, align 8, !alias.scope !47
  br label %624

599:                                              ; preds = %594
  %600 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 2
  %601 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %600, align 8, !noalias !47
  %602 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %601, i64 0, i32 0
  %603 = load i32, i32* %602, align 4, !noalias !47
  %604 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %601, i64 0, i32 1, i64 0
  %605 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %603, i32* %605, align 8, !alias.scope !47
  %606 = icmp sgt i32 %603, 5
  br i1 %606, label %607, label %614

607:                                              ; preds = %599
  %608 = sext i32 %603 to i64
  %609 = shl nsw i64 %608, 2
  %610 = tail call i8* @_Znam(i64 %609) #10, !noalias !47
  %611 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %612 = bitcast i32** %611 to i8**
  store i8* %610, i8** %612, align 8, !alias.scope !47
  %613 = bitcast i8* %610 to i32*
  br label %619

614:                                              ; preds = %599
  %615 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %616 = bitcast %union.anon* %615 to i32*
  %617 = sext i32 %603 to i64
  %618 = shl nsw i64 %617, 2
  br label %619

619:                                              ; preds = %614, %607
  %620 = phi i64 [ %609, %607 ], [ %618, %614 ]
  %621 = phi i32* [ %613, %607 ], [ %616, %614 ]
  %622 = bitcast i32* %621 to i8*
  %623 = bitcast i32* %604 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %622, i8* align 4 %623, i64 %620, i1 false) #9
  br label %624

624:                                              ; preds = %597, %619
  %625 = bitcast %"class.tflite::SequentialTensorWriter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %625) #9
  %626 = getelementptr inbounds %"class.tflite::SequentialTensorWriter", %"class.tflite::SequentialTensorWriter"* %8, i64 0, i32 0
  %627 = getelementptr inbounds %"class.tflite::SequentialTensorWriter", %"class.tflite::SequentialTensorWriter"* %8, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %625, i8 -86, i64 16, i1 false) #9
  br i1 %567, label %632, label %628

628:                                              ; preds = %624
  %629 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %630 = bitcast %union.TfLitePtrUnion* %629 to float**
  %631 = load float*, float** %630, align 8
  br label %632

632:                                              ; preds = %628, %624
  %633 = phi float* [ %631, %628 ], [ null, %624 ]
  store float* %633, float** %626, align 8
  br i1 %596, label %638, label %634

634:                                              ; preds = %632
  %635 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 1
  %636 = bitcast %union.TfLitePtrUnion* %635 to float**
  %637 = load float*, float** %636, align 8
  br label %638

638:                                              ; preds = %632, %634
  %639 = phi float* [ %637, %634 ], [ null, %632 ]
  store float* %639, float** %627, align 8
  call void @_ZN6tflite13optimized_ops5SliceIfEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* nonnull dereferenceable(40) %12, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, %"class.tflite::SequentialTensorWriter"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %625) #9
  %640 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %641 = load i32, i32* %640, align 8
  %642 = icmp sgt i32 %641, 5
  br i1 %642, label %643, label %649

643:                                              ; preds = %638
  %644 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %645 = load i32*, i32** %644, align 8
  %646 = icmp eq i32* %645, null
  br i1 %646, label %649, label %647

647:                                              ; preds = %643
  %648 = bitcast i32* %645 to i8*
  call void @_ZdaPv(i8* %648) #10
  br label %649

649:                                              ; preds = %638, %643, %647
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %595) #9
  %650 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %651 = load i32, i32* %650, align 8
  %652 = icmp sgt i32 %651, 5
  br i1 %652, label %653, label %659

653:                                              ; preds = %649
  %654 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %655 = load i32*, i32** %654, align 8
  %656 = icmp eq i32* %655, null
  br i1 %656, label %659, label %657

657:                                              ; preds = %653
  %658 = bitcast i32* %655 to i8*
  call void @_ZdaPv(i8* %658) #10
  br label %659

659:                                              ; preds = %649, %653, %657
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %566) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %542) #9
  br label %1511

660:                                              ; preds = %400
  %661 = bitcast i32** %86 to i64*
  %662 = load i64, i64* %661, align 8
  %663 = load i64, i64* %89, align 16
  %664 = sub i64 %662, %663
  %665 = icmp eq i64 %664, 16
  %666 = inttoptr i64 %663 to i32*
  br i1 %665, label %671, label %667

667:                                              ; preds = %660
  %668 = ashr exact i64 %664, 2
  %669 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %670 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %669, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %670(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 208, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %668, i32 4) #9
  br label %1511

671:                                              ; preds = %660
  %672 = load i64, i64* %102, align 8
  %673 = sub i64 %401, %672
  %674 = icmp eq i64 %673, 16
  %675 = inttoptr i64 %672 to i32*
  br i1 %674, label %680, label %676

676:                                              ; preds = %671
  %677 = ashr exact i64 %673, 2
  %678 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %679 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %678, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %679(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 208, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %677, i32 4) #9
  br label %1511

680:                                              ; preds = %671
  %681 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %681) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %681, i8 -86, i64 40, i1 false)
  store i8 4, i8* %681, align 4
  %682 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 2
  store i8 4, i8* %682, align 4
  %683 = getelementptr inbounds i32, i32* %666, i64 3
  %684 = load i32, i32* %683, align 4
  %685 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 1, i64 0
  store i32 %684, i32* %685, align 4
  %686 = getelementptr inbounds i32, i32* %675, i64 3
  %687 = load i32, i32* %686, align 4
  %688 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 3, i64 0
  store i32 %687, i32* %688, align 4
  %689 = getelementptr inbounds i32, i32* %666, i64 2
  %690 = load i32, i32* %689, align 4
  %691 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 1, i64 1
  store i32 %690, i32* %691, align 4
  %692 = getelementptr inbounds i32, i32* %675, i64 2
  %693 = load i32, i32* %692, align 4
  %694 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 3, i64 1
  store i32 %693, i32* %694, align 4
  %695 = getelementptr inbounds i32, i32* %666, i64 1
  %696 = load i32, i32* %695, align 4
  %697 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 1, i64 2
  store i32 %696, i32* %697, align 4
  %698 = getelementptr inbounds i32, i32* %675, i64 1
  %699 = load i32, i32* %698, align 4
  %700 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 3, i64 2
  store i32 %699, i32* %700, align 4
  %701 = load i32, i32* %666, align 4
  %702 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 1, i64 3
  store i32 %701, i32* %702, align 4
  %703 = load i32, i32* %675, align 4
  %704 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %15, i64 0, i32 3, i64 3
  store i32 %703, i32* %704, align 4
  %705 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %705) #9
  %706 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %706, label %707, label %709

707:                                              ; preds = %680
  %708 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %708, align 8, !alias.scope !50
  br label %733

709:                                              ; preds = %680
  %710 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8, !noalias !50
  %711 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %710, i64 0, i32 0
  %712 = load i32, i32* %711, align 4, !noalias !50
  %713 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %710, i64 0, i32 1, i64 0
  %714 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %712, i32* %714, align 8, !alias.scope !50
  %715 = icmp sgt i32 %712, 5
  br i1 %715, label %716, label %723

716:                                              ; preds = %709
  %717 = sext i32 %712 to i64
  %718 = shl nsw i64 %717, 2
  %719 = tail call i8* @_Znam(i64 %718) #10, !noalias !50
  %720 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %721 = bitcast i32** %720 to i8**
  store i8* %719, i8** %721, align 8, !alias.scope !50
  %722 = bitcast i8* %719 to i32*
  br label %728

723:                                              ; preds = %709
  %724 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %725 = bitcast %union.anon* %724 to i32*
  %726 = sext i32 %712 to i64
  %727 = shl nsw i64 %726, 2
  br label %728

728:                                              ; preds = %723, %716
  %729 = phi i64 [ %718, %716 ], [ %727, %723 ]
  %730 = phi i32* [ %722, %716 ], [ %725, %723 ]
  %731 = bitcast i32* %730 to i8*
  %732 = bitcast i32* %713 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %731, i8* align 4 %732, i64 %729, i1 false) #9
  br label %733

733:                                              ; preds = %707, %728
  %734 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %734) #9
  %735 = icmp eq %struct.TfLiteTensor* %76, null
  br i1 %735, label %736, label %738

736:                                              ; preds = %733
  %737 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %737, align 8, !alias.scope !53
  br label %763

738:                                              ; preds = %733
  %739 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 2
  %740 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %739, align 8, !noalias !53
  %741 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %740, i64 0, i32 0
  %742 = load i32, i32* %741, align 4, !noalias !53
  %743 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %740, i64 0, i32 1, i64 0
  %744 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %742, i32* %744, align 8, !alias.scope !53
  %745 = icmp sgt i32 %742, 5
  br i1 %745, label %746, label %753

746:                                              ; preds = %738
  %747 = sext i32 %742 to i64
  %748 = shl nsw i64 %747, 2
  %749 = tail call i8* @_Znam(i64 %748) #10, !noalias !53
  %750 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %751 = bitcast i32** %750 to i8**
  store i8* %749, i8** %751, align 8, !alias.scope !53
  %752 = bitcast i8* %749 to i32*
  br label %758

753:                                              ; preds = %738
  %754 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %755 = bitcast %union.anon* %754 to i32*
  %756 = sext i32 %742 to i64
  %757 = shl nsw i64 %756, 2
  br label %758

758:                                              ; preds = %753, %746
  %759 = phi i64 [ %748, %746 ], [ %757, %753 ]
  %760 = phi i32* [ %752, %746 ], [ %755, %753 ]
  %761 = bitcast i32* %760 to i8*
  %762 = bitcast i32* %743 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %761, i8* align 4 %762, i64 %759, i1 false) #9
  br label %763

763:                                              ; preds = %736, %758
  %764 = bitcast %"class.tflite::SequentialTensorWriter.4"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %764) #9
  %765 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.4", %"class.tflite::SequentialTensorWriter.4"* %7, i64 0, i32 0
  %766 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.4", %"class.tflite::SequentialTensorWriter.4"* %7, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %764, i8 -86, i64 16, i1 false) #9
  br i1 %706, label %770, label %767

767:                                              ; preds = %763
  %768 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1, i32 0
  %769 = load i32*, i32** %768, align 8
  br label %770

770:                                              ; preds = %767, %763
  %771 = phi i32* [ %769, %767 ], [ null, %763 ]
  store i32* %771, i32** %765, align 8
  br i1 %735, label %775, label %772

772:                                              ; preds = %770
  %773 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 1, i32 0
  %774 = load i32*, i32** %773, align 8
  br label %775

775:                                              ; preds = %770, %772
  %776 = phi i32* [ %774, %772 ], [ null, %770 ]
  store i32* %776, i32** %766, align 8
  call void @_ZN6tflite13optimized_ops5SliceIiEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* nonnull dereferenceable(40) %15, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, %"class.tflite::SequentialTensorWriter.4"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %764) #9
  %777 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %778 = load i32, i32* %777, align 8
  %779 = icmp sgt i32 %778, 5
  br i1 %779, label %780, label %786

780:                                              ; preds = %775
  %781 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %782 = load i32*, i32** %781, align 8
  %783 = icmp eq i32* %782, null
  br i1 %783, label %786, label %784

784:                                              ; preds = %780
  %785 = bitcast i32* %782 to i8*
  call void @_ZdaPv(i8* %785) #10
  br label %786

786:                                              ; preds = %775, %780, %784
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %734) #9
  %787 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %788 = load i32, i32* %787, align 8
  %789 = icmp sgt i32 %788, 5
  br i1 %789, label %790, label %796

790:                                              ; preds = %786
  %791 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %792 = load i32*, i32** %791, align 8
  %793 = icmp eq i32* %792, null
  br i1 %793, label %796, label %794

794:                                              ; preds = %790
  %795 = bitcast i32* %792 to i8*
  call void @_ZdaPv(i8* %795) #10
  br label %796

796:                                              ; preds = %786, %790, %794
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %705) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %681) #9
  br label %1511

797:                                              ; preds = %400
  %798 = bitcast i32** %86 to i64*
  %799 = load i64, i64* %798, align 8
  %800 = load i64, i64* %89, align 16
  %801 = sub i64 %799, %800
  %802 = icmp eq i64 %801, 16
  %803 = inttoptr i64 %800 to i32*
  br i1 %802, label %808, label %804

804:                                              ; preds = %797
  %805 = ashr exact i64 %801, 2
  %806 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %807 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %806, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %807(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %805, i32 4) #9
  br label %1511

808:                                              ; preds = %797
  %809 = load i64, i64* %102, align 8
  %810 = sub i64 %401, %809
  %811 = icmp eq i64 %810, 16
  %812 = inttoptr i64 %809 to i32*
  br i1 %811, label %817, label %813

813:                                              ; preds = %808
  %814 = ashr exact i64 %810, 2
  %815 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %816 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %815, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %816(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %814, i32 4) #9
  br label %1511

817:                                              ; preds = %808
  %818 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %818) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %818, i8 -86, i64 40, i1 false)
  store i8 4, i8* %818, align 4
  %819 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 2
  store i8 4, i8* %819, align 4
  %820 = getelementptr inbounds i32, i32* %803, i64 3
  %821 = load i32, i32* %820, align 4
  %822 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 1, i64 0
  store i32 %821, i32* %822, align 4
  %823 = getelementptr inbounds i32, i32* %812, i64 3
  %824 = load i32, i32* %823, align 4
  %825 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 3, i64 0
  store i32 %824, i32* %825, align 4
  %826 = getelementptr inbounds i32, i32* %803, i64 2
  %827 = load i32, i32* %826, align 4
  %828 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 1, i64 1
  store i32 %827, i32* %828, align 4
  %829 = getelementptr inbounds i32, i32* %812, i64 2
  %830 = load i32, i32* %829, align 4
  %831 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 3, i64 1
  store i32 %830, i32* %831, align 4
  %832 = getelementptr inbounds i32, i32* %803, i64 1
  %833 = load i32, i32* %832, align 4
  %834 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 1, i64 2
  store i32 %833, i32* %834, align 4
  %835 = getelementptr inbounds i32, i32* %812, i64 1
  %836 = load i32, i32* %835, align 4
  %837 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 3, i64 2
  store i32 %836, i32* %837, align 4
  %838 = load i32, i32* %803, align 4
  %839 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 1, i64 3
  store i32 %838, i32* %839, align 4
  %840 = load i32, i32* %812, align 4
  %841 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %18, i64 0, i32 3, i64 3
  store i32 %840, i32* %841, align 4
  %842 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %842) #9
  %843 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %843, label %844, label %846

844:                                              ; preds = %817
  %845 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %845, align 8, !alias.scope !56
  br label %870

846:                                              ; preds = %817
  %847 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8, !noalias !56
  %848 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %847, i64 0, i32 0
  %849 = load i32, i32* %848, align 4, !noalias !56
  %850 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %847, i64 0, i32 1, i64 0
  %851 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %849, i32* %851, align 8, !alias.scope !56
  %852 = icmp sgt i32 %849, 5
  br i1 %852, label %853, label %860

853:                                              ; preds = %846
  %854 = sext i32 %849 to i64
  %855 = shl nsw i64 %854, 2
  %856 = tail call i8* @_Znam(i64 %855) #10, !noalias !56
  %857 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %858 = bitcast i32** %857 to i8**
  store i8* %856, i8** %858, align 8, !alias.scope !56
  %859 = bitcast i8* %856 to i32*
  br label %865

860:                                              ; preds = %846
  %861 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %862 = bitcast %union.anon* %861 to i32*
  %863 = sext i32 %849 to i64
  %864 = shl nsw i64 %863, 2
  br label %865

865:                                              ; preds = %860, %853
  %866 = phi i64 [ %855, %853 ], [ %864, %860 ]
  %867 = phi i32* [ %859, %853 ], [ %862, %860 ]
  %868 = bitcast i32* %867 to i8*
  %869 = bitcast i32* %850 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %868, i8* align 4 %869, i64 %866, i1 false) #9
  br label %870

870:                                              ; preds = %844, %865
  %871 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %871) #9
  %872 = icmp eq %struct.TfLiteTensor* %76, null
  br i1 %872, label %873, label %875

873:                                              ; preds = %870
  %874 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %874, align 8, !alias.scope !59
  br label %900

875:                                              ; preds = %870
  %876 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 2
  %877 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %876, align 8, !noalias !59
  %878 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %877, i64 0, i32 0
  %879 = load i32, i32* %878, align 4, !noalias !59
  %880 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %877, i64 0, i32 1, i64 0
  %881 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %879, i32* %881, align 8, !alias.scope !59
  %882 = icmp sgt i32 %879, 5
  br i1 %882, label %883, label %890

883:                                              ; preds = %875
  %884 = sext i32 %879 to i64
  %885 = shl nsw i64 %884, 2
  %886 = tail call i8* @_Znam(i64 %885) #10, !noalias !59
  %887 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %888 = bitcast i32** %887 to i8**
  store i8* %886, i8** %888, align 8, !alias.scope !59
  %889 = bitcast i8* %886 to i32*
  br label %895

890:                                              ; preds = %875
  %891 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %892 = bitcast %union.anon* %891 to i32*
  %893 = sext i32 %879 to i64
  %894 = shl nsw i64 %893, 2
  br label %895

895:                                              ; preds = %890, %883
  %896 = phi i64 [ %885, %883 ], [ %894, %890 ]
  %897 = phi i32* [ %889, %883 ], [ %892, %890 ]
  %898 = bitcast i32* %897 to i8*
  %899 = bitcast i32* %880 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %898, i8* align 4 %899, i64 %896, i1 false) #9
  br label %900

900:                                              ; preds = %873, %895
  %901 = bitcast %"class.tflite::SequentialTensorWriter.5"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %901) #9
  %902 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.5", %"class.tflite::SequentialTensorWriter.5"* %6, i64 0, i32 0
  %903 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.5", %"class.tflite::SequentialTensorWriter.5"* %6, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %901, i8 -86, i64 16, i1 false) #9
  br i1 %843, label %908, label %904

904:                                              ; preds = %900
  %905 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %906 = bitcast %union.TfLitePtrUnion* %905 to i64**
  %907 = load i64*, i64** %906, align 8
  br label %908

908:                                              ; preds = %904, %900
  %909 = phi i64* [ %907, %904 ], [ null, %900 ]
  store i64* %909, i64** %902, align 8
  br i1 %872, label %914, label %910

910:                                              ; preds = %908
  %911 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 1
  %912 = bitcast %union.TfLitePtrUnion* %911 to i64**
  %913 = load i64*, i64** %912, align 8
  br label %914

914:                                              ; preds = %908, %910
  %915 = phi i64* [ %913, %910 ], [ null, %908 ]
  store i64* %915, i64** %903, align 8
  call void @_ZN6tflite13optimized_ops5SliceIlEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* nonnull dereferenceable(40) %18, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %20, %"class.tflite::SequentialTensorWriter.5"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %901) #9
  %916 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  %917 = load i32, i32* %916, align 8
  %918 = icmp sgt i32 %917, 5
  br i1 %918, label %919, label %925

919:                                              ; preds = %914
  %920 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %921 = load i32*, i32** %920, align 8
  %922 = icmp eq i32* %921, null
  br i1 %922, label %925, label %923

923:                                              ; preds = %919
  %924 = bitcast i32* %921 to i8*
  call void @_ZdaPv(i8* %924) #10
  br label %925

925:                                              ; preds = %914, %919, %923
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %871) #9
  %926 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %927 = load i32, i32* %926, align 8
  %928 = icmp sgt i32 %927, 5
  br i1 %928, label %929, label %935

929:                                              ; preds = %925
  %930 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %931 = load i32*, i32** %930, align 8
  %932 = icmp eq i32* %931, null
  br i1 %932, label %935, label %933

933:                                              ; preds = %929
  %934 = bitcast i32* %931 to i8*
  call void @_ZdaPv(i8* %934) #10
  br label %935

935:                                              ; preds = %925, %929, %933
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %842) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %818) #9
  br label %1511

936:                                              ; preds = %400
  %937 = bitcast i32** %86 to i64*
  %938 = load i64, i64* %937, align 8
  %939 = load i64, i64* %89, align 16
  %940 = sub i64 %938, %939
  %941 = icmp eq i64 %940, 16
  %942 = inttoptr i64 %939 to i32*
  br i1 %941, label %947, label %943

943:                                              ; preds = %936
  %944 = ashr exact i64 %940, 2
  %945 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %946 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %945, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %946(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 214, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %944, i32 4) #9
  br label %1511

947:                                              ; preds = %936
  %948 = load i64, i64* %102, align 8
  %949 = sub i64 %401, %948
  %950 = icmp eq i64 %949, 16
  %951 = inttoptr i64 %948 to i32*
  br i1 %950, label %956, label %952

952:                                              ; preds = %947
  %953 = ashr exact i64 %949, 2
  %954 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %955 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %954, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %955(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 214, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %953, i32 4) #9
  br label %1511

956:                                              ; preds = %947
  %957 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %957) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %957, i8 -86, i64 40, i1 false)
  store i8 4, i8* %957, align 4
  %958 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 2
  store i8 4, i8* %958, align 4
  %959 = getelementptr inbounds i32, i32* %942, i64 3
  %960 = load i32, i32* %959, align 4
  %961 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 1, i64 0
  store i32 %960, i32* %961, align 4
  %962 = getelementptr inbounds i32, i32* %951, i64 3
  %963 = load i32, i32* %962, align 4
  %964 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 3, i64 0
  store i32 %963, i32* %964, align 4
  %965 = getelementptr inbounds i32, i32* %942, i64 2
  %966 = load i32, i32* %965, align 4
  %967 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 1, i64 1
  store i32 %966, i32* %967, align 4
  %968 = getelementptr inbounds i32, i32* %951, i64 2
  %969 = load i32, i32* %968, align 4
  %970 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 3, i64 1
  store i32 %969, i32* %970, align 4
  %971 = getelementptr inbounds i32, i32* %942, i64 1
  %972 = load i32, i32* %971, align 4
  %973 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 1, i64 2
  store i32 %972, i32* %973, align 4
  %974 = getelementptr inbounds i32, i32* %951, i64 1
  %975 = load i32, i32* %974, align 4
  %976 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 3, i64 2
  store i32 %975, i32* %976, align 4
  %977 = load i32, i32* %942, align 4
  %978 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 1, i64 3
  store i32 %977, i32* %978, align 4
  %979 = load i32, i32* %951, align 4
  %980 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %21, i64 0, i32 3, i64 3
  store i32 %979, i32* %980, align 4
  %981 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %981) #9
  %982 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %982, label %983, label %985

983:                                              ; preds = %956
  %984 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %984, align 8, !alias.scope !62
  br label %1009

985:                                              ; preds = %956
  %986 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8, !noalias !62
  %987 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %986, i64 0, i32 0
  %988 = load i32, i32* %987, align 4, !noalias !62
  %989 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %986, i64 0, i32 1, i64 0
  %990 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %988, i32* %990, align 8, !alias.scope !62
  %991 = icmp sgt i32 %988, 5
  br i1 %991, label %992, label %999

992:                                              ; preds = %985
  %993 = sext i32 %988 to i64
  %994 = shl nsw i64 %993, 2
  %995 = tail call i8* @_Znam(i64 %994) #10, !noalias !62
  %996 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %997 = bitcast i32** %996 to i8**
  store i8* %995, i8** %997, align 8, !alias.scope !62
  %998 = bitcast i8* %995 to i32*
  br label %1004

999:                                              ; preds = %985
  %1000 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %1001 = bitcast %union.anon* %1000 to i32*
  %1002 = sext i32 %988 to i64
  %1003 = shl nsw i64 %1002, 2
  br label %1004

1004:                                             ; preds = %999, %992
  %1005 = phi i64 [ %994, %992 ], [ %1003, %999 ]
  %1006 = phi i32* [ %998, %992 ], [ %1001, %999 ]
  %1007 = bitcast i32* %1006 to i8*
  %1008 = bitcast i32* %989 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1007, i8* align 4 %1008, i64 %1005, i1 false) #9
  br label %1009

1009:                                             ; preds = %983, %1004
  %1010 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1010) #9
  %1011 = icmp eq %struct.TfLiteTensor* %76, null
  br i1 %1011, label %1012, label %1014

1012:                                             ; preds = %1009
  %1013 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %1013, align 8, !alias.scope !65
  br label %1039

1014:                                             ; preds = %1009
  %1015 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 2
  %1016 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1015, align 8, !noalias !65
  %1017 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1016, i64 0, i32 0
  %1018 = load i32, i32* %1017, align 4, !noalias !65
  %1019 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1016, i64 0, i32 1, i64 0
  %1020 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %1018, i32* %1020, align 8, !alias.scope !65
  %1021 = icmp sgt i32 %1018, 5
  br i1 %1021, label %1022, label %1029

1022:                                             ; preds = %1014
  %1023 = sext i32 %1018 to i64
  %1024 = shl nsw i64 %1023, 2
  %1025 = tail call i8* @_Znam(i64 %1024) #10, !noalias !65
  %1026 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1027 = bitcast i32** %1026 to i8**
  store i8* %1025, i8** %1027, align 8, !alias.scope !65
  %1028 = bitcast i8* %1025 to i32*
  br label %1034

1029:                                             ; preds = %1014
  %1030 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %1031 = bitcast %union.anon* %1030 to i32*
  %1032 = sext i32 %1018 to i64
  %1033 = shl nsw i64 %1032, 2
  br label %1034

1034:                                             ; preds = %1029, %1022
  %1035 = phi i64 [ %1024, %1022 ], [ %1033, %1029 ]
  %1036 = phi i32* [ %1028, %1022 ], [ %1031, %1029 ]
  %1037 = bitcast i32* %1036 to i8*
  %1038 = bitcast i32* %1019 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1037, i8* align 4 %1038, i64 %1035, i1 false) #9
  br label %1039

1039:                                             ; preds = %1012, %1034
  %1040 = bitcast %"class.tflite::SequentialTensorWriter.6"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1040) #9
  %1041 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.6", %"class.tflite::SequentialTensorWriter.6"* %5, i64 0, i32 0
  %1042 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.6", %"class.tflite::SequentialTensorWriter.6"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1040, i8 -86, i64 16, i1 false) #9
  br i1 %982, label %1047, label %1043

1043:                                             ; preds = %1039
  %1044 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %1045 = bitcast %union.TfLitePtrUnion* %1044 to i8**
  %1046 = load i8*, i8** %1045, align 8
  br label %1047

1047:                                             ; preds = %1043, %1039
  %1048 = phi i8* [ %1046, %1043 ], [ null, %1039 ]
  store i8* %1048, i8** %1041, align 8
  br i1 %1011, label %1053, label %1049

1049:                                             ; preds = %1047
  %1050 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 1
  %1051 = bitcast %union.TfLitePtrUnion* %1050 to i8**
  %1052 = load i8*, i8** %1051, align 8
  br label %1053

1053:                                             ; preds = %1047, %1049
  %1054 = phi i8* [ %1052, %1049 ], [ null, %1047 ]
  store i8* %1054, i8** %1042, align 8
  call void @_ZN6tflite13optimized_ops5SliceIaEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* nonnull dereferenceable(40) %21, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, %"class.tflite::SequentialTensorWriter.6"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1040) #9
  %1055 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %1056 = load i32, i32* %1055, align 8
  %1057 = icmp sgt i32 %1056, 5
  br i1 %1057, label %1058, label %1064

1058:                                             ; preds = %1053
  %1059 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1060 = load i32*, i32** %1059, align 8
  %1061 = icmp eq i32* %1060, null
  br i1 %1061, label %1064, label %1062

1062:                                             ; preds = %1058
  %1063 = bitcast i32* %1060 to i8*
  call void @_ZdaPv(i8* %1063) #10
  br label %1064

1064:                                             ; preds = %1053, %1058, %1062
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1010) #9
  %1065 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %1066 = load i32, i32* %1065, align 8
  %1067 = icmp sgt i32 %1066, 5
  br i1 %1067, label %1068, label %1074

1068:                                             ; preds = %1064
  %1069 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1070 = load i32*, i32** %1069, align 8
  %1071 = icmp eq i32* %1070, null
  br i1 %1071, label %1074, label %1072

1072:                                             ; preds = %1068
  %1073 = bitcast i32* %1070 to i8*
  call void @_ZdaPv(i8* %1073) #10
  br label %1074

1074:                                             ; preds = %1064, %1068, %1072
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %981) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %957) #9
  br label %1511

1075:                                             ; preds = %400
  %1076 = bitcast i32** %86 to i64*
  %1077 = load i64, i64* %1076, align 8
  %1078 = load i64, i64* %89, align 16
  %1079 = sub i64 %1077, %1078
  %1080 = icmp eq i64 %1079, 16
  %1081 = inttoptr i64 %1078 to i32*
  br i1 %1080, label %1086, label %1082

1082:                                             ; preds = %1075
  %1083 = ashr exact i64 %1079, 2
  %1084 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1085 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1084, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1085(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 217, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %1083, i32 4) #9
  br label %1511

1086:                                             ; preds = %1075
  %1087 = load i64, i64* %102, align 8
  %1088 = sub i64 %401, %1087
  %1089 = icmp eq i64 %1088, 16
  %1090 = inttoptr i64 %1087 to i32*
  br i1 %1089, label %1095, label %1091

1091:                                             ; preds = %1086
  %1092 = ashr exact i64 %1088, 2
  %1093 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1094 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1093, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1094(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 217, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %1092, i32 4) #9
  br label %1511

1095:                                             ; preds = %1086
  %1096 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1096) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1096, i8 -86, i64 40, i1 false)
  store i8 4, i8* %1096, align 4
  %1097 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 2
  store i8 4, i8* %1097, align 4
  %1098 = getelementptr inbounds i32, i32* %1081, i64 3
  %1099 = load i32, i32* %1098, align 4
  %1100 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 1, i64 0
  store i32 %1099, i32* %1100, align 4
  %1101 = getelementptr inbounds i32, i32* %1090, i64 3
  %1102 = load i32, i32* %1101, align 4
  %1103 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 3, i64 0
  store i32 %1102, i32* %1103, align 4
  %1104 = getelementptr inbounds i32, i32* %1081, i64 2
  %1105 = load i32, i32* %1104, align 4
  %1106 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 1, i64 1
  store i32 %1105, i32* %1106, align 4
  %1107 = getelementptr inbounds i32, i32* %1090, i64 2
  %1108 = load i32, i32* %1107, align 4
  %1109 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 3, i64 1
  store i32 %1108, i32* %1109, align 4
  %1110 = getelementptr inbounds i32, i32* %1081, i64 1
  %1111 = load i32, i32* %1110, align 4
  %1112 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 1, i64 2
  store i32 %1111, i32* %1112, align 4
  %1113 = getelementptr inbounds i32, i32* %1090, i64 1
  %1114 = load i32, i32* %1113, align 4
  %1115 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 3, i64 2
  store i32 %1114, i32* %1115, align 4
  %1116 = load i32, i32* %1081, align 4
  %1117 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 1, i64 3
  store i32 %1116, i32* %1117, align 4
  %1118 = load i32, i32* %1090, align 4
  %1119 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %24, i64 0, i32 3, i64 3
  store i32 %1118, i32* %1119, align 4
  %1120 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1120) #9
  %1121 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %1121, label %1122, label %1124

1122:                                             ; preds = %1095
  %1123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %1123, align 8, !alias.scope !68
  br label %1148

1124:                                             ; preds = %1095
  %1125 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8, !noalias !68
  %1126 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1125, i64 0, i32 0
  %1127 = load i32, i32* %1126, align 4, !noalias !68
  %1128 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1125, i64 0, i32 1, i64 0
  %1129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %1127, i32* %1129, align 8, !alias.scope !68
  %1130 = icmp sgt i32 %1127, 5
  br i1 %1130, label %1131, label %1138

1131:                                             ; preds = %1124
  %1132 = sext i32 %1127 to i64
  %1133 = shl nsw i64 %1132, 2
  %1134 = tail call i8* @_Znam(i64 %1133) #10, !noalias !68
  %1135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1136 = bitcast i32** %1135 to i8**
  store i8* %1134, i8** %1136, align 8, !alias.scope !68
  %1137 = bitcast i8* %1134 to i32*
  br label %1143

1138:                                             ; preds = %1124
  %1139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %1140 = bitcast %union.anon* %1139 to i32*
  %1141 = sext i32 %1127 to i64
  %1142 = shl nsw i64 %1141, 2
  br label %1143

1143:                                             ; preds = %1138, %1131
  %1144 = phi i64 [ %1133, %1131 ], [ %1142, %1138 ]
  %1145 = phi i32* [ %1137, %1131 ], [ %1140, %1138 ]
  %1146 = bitcast i32* %1145 to i8*
  %1147 = bitcast i32* %1128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1146, i8* align 4 %1147, i64 %1144, i1 false) #9
  br label %1148

1148:                                             ; preds = %1122, %1143
  %1149 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1149) #9
  %1150 = icmp eq %struct.TfLiteTensor* %76, null
  br i1 %1150, label %1151, label %1153

1151:                                             ; preds = %1148
  %1152 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %1152, align 8, !alias.scope !71
  br label %1178

1153:                                             ; preds = %1148
  %1154 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 2
  %1155 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1154, align 8, !noalias !71
  %1156 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1155, i64 0, i32 0
  %1157 = load i32, i32* %1156, align 4, !noalias !71
  %1158 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1155, i64 0, i32 1, i64 0
  %1159 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %1157, i32* %1159, align 8, !alias.scope !71
  %1160 = icmp sgt i32 %1157, 5
  br i1 %1160, label %1161, label %1168

1161:                                             ; preds = %1153
  %1162 = sext i32 %1157 to i64
  %1163 = shl nsw i64 %1162, 2
  %1164 = tail call i8* @_Znam(i64 %1163) #10, !noalias !71
  %1165 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1166 = bitcast i32** %1165 to i8**
  store i8* %1164, i8** %1166, align 8, !alias.scope !71
  %1167 = bitcast i8* %1164 to i32*
  br label %1173

1168:                                             ; preds = %1153
  %1169 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %1170 = bitcast %union.anon* %1169 to i32*
  %1171 = sext i32 %1157 to i64
  %1172 = shl nsw i64 %1171, 2
  br label %1173

1173:                                             ; preds = %1168, %1161
  %1174 = phi i64 [ %1163, %1161 ], [ %1172, %1168 ]
  %1175 = phi i32* [ %1167, %1161 ], [ %1170, %1168 ]
  %1176 = bitcast i32* %1175 to i8*
  %1177 = bitcast i32* %1158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1176, i8* align 4 %1177, i64 %1174, i1 false) #9
  br label %1178

1178:                                             ; preds = %1151, %1173
  %1179 = bitcast %"class.tflite::SequentialTensorWriter.7"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1179) #9
  %1180 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.7", %"class.tflite::SequentialTensorWriter.7"* %4, i64 0, i32 0
  %1181 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.7", %"class.tflite::SequentialTensorWriter.7"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1179, i8 -86, i64 16, i1 false) #9
  br i1 %1121, label %1186, label %1182

1182:                                             ; preds = %1178
  %1183 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %1184 = bitcast %union.TfLitePtrUnion* %1183 to i8**
  %1185 = load i8*, i8** %1184, align 8
  br label %1186

1186:                                             ; preds = %1182, %1178
  %1187 = phi i8* [ %1185, %1182 ], [ null, %1178 ]
  store i8* %1187, i8** %1180, align 8
  br i1 %1150, label %1192, label %1188

1188:                                             ; preds = %1186
  %1189 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 1
  %1190 = bitcast %union.TfLitePtrUnion* %1189 to i8**
  %1191 = load i8*, i8** %1190, align 8
  br label %1192

1192:                                             ; preds = %1186, %1188
  %1193 = phi i8* [ %1191, %1188 ], [ null, %1186 ]
  store i8* %1193, i8** %1181, align 8
  call void @_ZN6tflite13optimized_ops5SliceIhEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* nonnull dereferenceable(40) %24, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %25, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %26, %"class.tflite::SequentialTensorWriter.7"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1179) #9
  %1194 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  %1195 = load i32, i32* %1194, align 8
  %1196 = icmp sgt i32 %1195, 5
  br i1 %1196, label %1197, label %1203

1197:                                             ; preds = %1192
  %1198 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1199 = load i32*, i32** %1198, align 8
  %1200 = icmp eq i32* %1199, null
  br i1 %1200, label %1203, label %1201

1201:                                             ; preds = %1197
  %1202 = bitcast i32* %1199 to i8*
  call void @_ZdaPv(i8* %1202) #10
  br label %1203

1203:                                             ; preds = %1192, %1197, %1201
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1149) #9
  %1204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  %1205 = load i32, i32* %1204, align 8
  %1206 = icmp sgt i32 %1205, 5
  br i1 %1206, label %1207, label %1213

1207:                                             ; preds = %1203
  %1208 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1209 = load i32*, i32** %1208, align 8
  %1210 = icmp eq i32* %1209, null
  br i1 %1210, label %1213, label %1211

1211:                                             ; preds = %1207
  %1212 = bitcast i32* %1209 to i8*
  call void @_ZdaPv(i8* %1212) #10
  br label %1213

1213:                                             ; preds = %1203, %1207, %1211
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1120) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1096) #9
  br label %1511

1214:                                             ; preds = %400
  %1215 = bitcast i32** %86 to i64*
  %1216 = load i64, i64* %1215, align 8
  %1217 = load i64, i64* %89, align 16
  %1218 = sub i64 %1216, %1217
  %1219 = icmp eq i64 %1218, 16
  %1220 = inttoptr i64 %1217 to i32*
  br i1 %1219, label %1225, label %1221

1221:                                             ; preds = %1214
  %1222 = ashr exact i64 %1218, 2
  %1223 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1224 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1223, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1224(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 220, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %1222, i32 4) #9
  br label %1511

1225:                                             ; preds = %1214
  %1226 = load i64, i64* %102, align 8
  %1227 = sub i64 %401, %1226
  %1228 = icmp eq i64 %1227, 16
  %1229 = inttoptr i64 %1226 to i32*
  br i1 %1228, label %1234, label %1230

1230:                                             ; preds = %1225
  %1231 = ashr exact i64 %1227, 2
  %1232 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1233 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1232, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1233(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 220, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %1231, i32 4) #9
  br label %1511

1234:                                             ; preds = %1225
  %1235 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1235) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1235, i8 -86, i64 40, i1 false)
  store i8 4, i8* %1235, align 4
  %1236 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 2
  store i8 4, i8* %1236, align 4
  %1237 = getelementptr inbounds i32, i32* %1220, i64 3
  %1238 = load i32, i32* %1237, align 4
  %1239 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 1, i64 0
  store i32 %1238, i32* %1239, align 4
  %1240 = getelementptr inbounds i32, i32* %1229, i64 3
  %1241 = load i32, i32* %1240, align 4
  %1242 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 3, i64 0
  store i32 %1241, i32* %1242, align 4
  %1243 = getelementptr inbounds i32, i32* %1220, i64 2
  %1244 = load i32, i32* %1243, align 4
  %1245 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 1, i64 1
  store i32 %1244, i32* %1245, align 4
  %1246 = getelementptr inbounds i32, i32* %1229, i64 2
  %1247 = load i32, i32* %1246, align 4
  %1248 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 3, i64 1
  store i32 %1247, i32* %1248, align 4
  %1249 = getelementptr inbounds i32, i32* %1220, i64 1
  %1250 = load i32, i32* %1249, align 4
  %1251 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 1, i64 2
  store i32 %1250, i32* %1251, align 4
  %1252 = getelementptr inbounds i32, i32* %1229, i64 1
  %1253 = load i32, i32* %1252, align 4
  %1254 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 3, i64 2
  store i32 %1253, i32* %1254, align 4
  %1255 = load i32, i32* %1220, align 4
  %1256 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 1, i64 3
  store i32 %1255, i32* %1256, align 4
  %1257 = load i32, i32* %1229, align 4
  %1258 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %27, i64 0, i32 3, i64 3
  store i32 %1257, i32* %1258, align 4
  %1259 = bitcast %"class.tflite::RuntimeShape"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1259) #9
  %1260 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %1260, label %1261, label %1263

1261:                                             ; preds = %1234
  %1262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 0, i32* %1262, align 8, !alias.scope !74
  br label %1287

1263:                                             ; preds = %1234
  %1264 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8, !noalias !74
  %1265 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1264, i64 0, i32 0
  %1266 = load i32, i32* %1265, align 4, !noalias !74
  %1267 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1264, i64 0, i32 1, i64 0
  %1268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 %1266, i32* %1268, align 8, !alias.scope !74
  %1269 = icmp sgt i32 %1266, 5
  br i1 %1269, label %1270, label %1277

1270:                                             ; preds = %1263
  %1271 = sext i32 %1266 to i64
  %1272 = shl nsw i64 %1271, 2
  %1273 = tail call i8* @_Znam(i64 %1272) #10, !noalias !74
  %1274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1275 = bitcast i32** %1274 to i8**
  store i8* %1273, i8** %1275, align 8, !alias.scope !74
  %1276 = bitcast i8* %1273 to i32*
  br label %1282

1277:                                             ; preds = %1263
  %1278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1
  %1279 = bitcast %union.anon* %1278 to i32*
  %1280 = sext i32 %1266 to i64
  %1281 = shl nsw i64 %1280, 2
  br label %1282

1282:                                             ; preds = %1277, %1270
  %1283 = phi i64 [ %1272, %1270 ], [ %1281, %1277 ]
  %1284 = phi i32* [ %1276, %1270 ], [ %1279, %1277 ]
  %1285 = bitcast i32* %1284 to i8*
  %1286 = bitcast i32* %1267 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1285, i8* align 4 %1286, i64 %1283, i1 false) #9
  br label %1287

1287:                                             ; preds = %1261, %1282
  %1288 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1288) #9
  %1289 = icmp eq %struct.TfLiteTensor* %76, null
  br i1 %1289, label %1290, label %1292

1290:                                             ; preds = %1287
  %1291 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %1291, align 8, !alias.scope !77
  br label %1317

1292:                                             ; preds = %1287
  %1293 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 2
  %1294 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1293, align 8, !noalias !77
  %1295 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1294, i64 0, i32 0
  %1296 = load i32, i32* %1295, align 4, !noalias !77
  %1297 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1294, i64 0, i32 1, i64 0
  %1298 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %1296, i32* %1298, align 8, !alias.scope !77
  %1299 = icmp sgt i32 %1296, 5
  br i1 %1299, label %1300, label %1307

1300:                                             ; preds = %1292
  %1301 = sext i32 %1296 to i64
  %1302 = shl nsw i64 %1301, 2
  %1303 = tail call i8* @_Znam(i64 %1302) #10, !noalias !77
  %1304 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1305 = bitcast i32** %1304 to i8**
  store i8* %1303, i8** %1305, align 8, !alias.scope !77
  %1306 = bitcast i8* %1303 to i32*
  br label %1312

1307:                                             ; preds = %1292
  %1308 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %1309 = bitcast %union.anon* %1308 to i32*
  %1310 = sext i32 %1296 to i64
  %1311 = shl nsw i64 %1310, 2
  br label %1312

1312:                                             ; preds = %1307, %1300
  %1313 = phi i64 [ %1302, %1300 ], [ %1311, %1307 ]
  %1314 = phi i32* [ %1306, %1300 ], [ %1309, %1307 ]
  %1315 = bitcast i32* %1314 to i8*
  %1316 = bitcast i32* %1297 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1315, i8* align 4 %1316, i64 %1313, i1 false) #9
  br label %1317

1317:                                             ; preds = %1290, %1312
  %1318 = bitcast %"class.tflite::SequentialTensorWriter.8"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1318) #9
  %1319 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.8", %"class.tflite::SequentialTensorWriter.8"* %3, i64 0, i32 0
  %1320 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.8", %"class.tflite::SequentialTensorWriter.8"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1318, i8 -86, i64 16, i1 false) #9
  br i1 %1260, label %1325, label %1321

1321:                                             ; preds = %1317
  %1322 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %1323 = bitcast %union.TfLitePtrUnion* %1322 to i8**
  %1324 = load i8*, i8** %1323, align 8
  br label %1325

1325:                                             ; preds = %1321, %1317
  %1326 = phi i8* [ %1324, %1321 ], [ null, %1317 ]
  store i8* %1326, i8** %1319, align 8
  br i1 %1289, label %1331, label %1327

1327:                                             ; preds = %1325
  %1328 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 1
  %1329 = bitcast %union.TfLitePtrUnion* %1328 to i8**
  %1330 = load i8*, i8** %1329, align 8
  br label %1331

1331:                                             ; preds = %1325, %1327
  %1332 = phi i8* [ %1330, %1327 ], [ null, %1325 ]
  store i8* %1332, i8** %1320, align 8
  call void @_ZN6tflite13optimized_ops5SliceIbEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* nonnull dereferenceable(40) %27, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %28, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %29, %"class.tflite::SequentialTensorWriter.8"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1318) #9
  %1333 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  %1334 = load i32, i32* %1333, align 8
  %1335 = icmp sgt i32 %1334, 5
  br i1 %1335, label %1336, label %1342

1336:                                             ; preds = %1331
  %1337 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1338 = load i32*, i32** %1337, align 8
  %1339 = icmp eq i32* %1338, null
  br i1 %1339, label %1342, label %1340

1340:                                             ; preds = %1336
  %1341 = bitcast i32* %1338 to i8*
  call void @_ZdaPv(i8* %1341) #10
  br label %1342

1342:                                             ; preds = %1331, %1336, %1340
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1288) #9
  %1343 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  %1344 = load i32, i32* %1343, align 8
  %1345 = icmp sgt i32 %1344, 5
  br i1 %1345, label %1346, label %1352

1346:                                             ; preds = %1342
  %1347 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1348 = load i32*, i32** %1347, align 8
  %1349 = icmp eq i32* %1348, null
  br i1 %1349, label %1352, label %1350

1350:                                             ; preds = %1346
  %1351 = bitcast i32* %1348 to i8*
  call void @_ZdaPv(i8* %1351) #10
  br label %1352

1352:                                             ; preds = %1342, %1346, %1350
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1259) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1235) #9
  br label %1511

1353:                                             ; preds = %400
  %1354 = bitcast i32** %86 to i64*
  %1355 = load i64, i64* %1354, align 8
  %1356 = load i64, i64* %89, align 16
  %1357 = sub i64 %1355, %1356
  %1358 = icmp eq i64 %1357, 16
  %1359 = inttoptr i64 %1356 to i32*
  br i1 %1358, label %1364, label %1360

1360:                                             ; preds = %1353
  %1361 = ashr exact i64 %1357, 2
  %1362 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1363 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1362, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1363(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 223, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %1361, i32 4) #9
  br label %1511

1364:                                             ; preds = %1353
  %1365 = load i64, i64* %102, align 8
  %1366 = sub i64 %401, %1365
  %1367 = icmp eq i64 %1366, 16
  %1368 = inttoptr i64 %1365 to i32*
  br i1 %1367, label %1373, label %1369

1369:                                             ; preds = %1364
  %1370 = ashr exact i64 %1366, 2
  %1371 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1372 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1371, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1372(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 223, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 %1370, i32 4) #9
  br label %1511

1373:                                             ; preds = %1364
  %1374 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1374) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1374, i8 -86, i64 40, i1 false)
  store i8 4, i8* %1374, align 4
  %1375 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 2
  store i8 4, i8* %1375, align 4
  %1376 = getelementptr inbounds i32, i32* %1359, i64 3
  %1377 = load i32, i32* %1376, align 4
  %1378 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 1, i64 0
  store i32 %1377, i32* %1378, align 4
  %1379 = getelementptr inbounds i32, i32* %1368, i64 3
  %1380 = load i32, i32* %1379, align 4
  %1381 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 3, i64 0
  store i32 %1380, i32* %1381, align 4
  %1382 = getelementptr inbounds i32, i32* %1359, i64 2
  %1383 = load i32, i32* %1382, align 4
  %1384 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 1, i64 1
  store i32 %1383, i32* %1384, align 4
  %1385 = getelementptr inbounds i32, i32* %1368, i64 2
  %1386 = load i32, i32* %1385, align 4
  %1387 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 3, i64 1
  store i32 %1386, i32* %1387, align 4
  %1388 = getelementptr inbounds i32, i32* %1359, i64 1
  %1389 = load i32, i32* %1388, align 4
  %1390 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 1, i64 2
  store i32 %1389, i32* %1390, align 4
  %1391 = getelementptr inbounds i32, i32* %1368, i64 1
  %1392 = load i32, i32* %1391, align 4
  %1393 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 3, i64 2
  store i32 %1392, i32* %1393, align 4
  %1394 = load i32, i32* %1359, align 4
  %1395 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 1, i64 3
  store i32 %1394, i32* %1395, align 4
  %1396 = load i32, i32* %1368, align 4
  %1397 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %30, i64 0, i32 3, i64 3
  store i32 %1396, i32* %1397, align 4
  %1398 = bitcast %"class.tflite::RuntimeShape"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1398) #9
  %1399 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %1399, label %1400, label %1402

1400:                                             ; preds = %1373
  %1401 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 0, i32* %1401, align 8, !alias.scope !80
  br label %1426

1402:                                             ; preds = %1373
  %1403 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8, !noalias !80
  %1404 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1403, i64 0, i32 0
  %1405 = load i32, i32* %1404, align 4, !noalias !80
  %1406 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1403, i64 0, i32 1, i64 0
  %1407 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 %1405, i32* %1407, align 8, !alias.scope !80
  %1408 = icmp sgt i32 %1405, 5
  br i1 %1408, label %1409, label %1416

1409:                                             ; preds = %1402
  %1410 = sext i32 %1405 to i64
  %1411 = shl nsw i64 %1410, 2
  %1412 = tail call i8* @_Znam(i64 %1411) #10, !noalias !80
  %1413 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %1414 = bitcast i32** %1413 to i8**
  store i8* %1412, i8** %1414, align 8, !alias.scope !80
  %1415 = bitcast i8* %1412 to i32*
  br label %1421

1416:                                             ; preds = %1402
  %1417 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1
  %1418 = bitcast %union.anon* %1417 to i32*
  %1419 = sext i32 %1405 to i64
  %1420 = shl nsw i64 %1419, 2
  br label %1421

1421:                                             ; preds = %1416, %1409
  %1422 = phi i64 [ %1411, %1409 ], [ %1420, %1416 ]
  %1423 = phi i32* [ %1415, %1409 ], [ %1418, %1416 ]
  %1424 = bitcast i32* %1423 to i8*
  %1425 = bitcast i32* %1406 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1424, i8* align 4 %1425, i64 %1422, i1 false) #9
  br label %1426

1426:                                             ; preds = %1400, %1421
  %1427 = bitcast %"class.tflite::RuntimeShape"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1427) #9
  %1428 = icmp eq %struct.TfLiteTensor* %76, null
  br i1 %1428, label %1429, label %1431

1429:                                             ; preds = %1426
  %1430 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 0, i32* %1430, align 8, !alias.scope !83
  br label %1456

1431:                                             ; preds = %1426
  %1432 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %76, i64 0, i32 2
  %1433 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1432, align 8, !noalias !83
  %1434 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1433, i64 0, i32 0
  %1435 = load i32, i32* %1434, align 4, !noalias !83
  %1436 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1433, i64 0, i32 1, i64 0
  %1437 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 %1435, i32* %1437, align 8, !alias.scope !83
  %1438 = icmp sgt i32 %1435, 5
  br i1 %1438, label %1439, label %1446

1439:                                             ; preds = %1431
  %1440 = sext i32 %1435 to i64
  %1441 = shl nsw i64 %1440, 2
  %1442 = tail call i8* @_Znam(i64 %1441) #10, !noalias !83
  %1443 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %1444 = bitcast i32** %1443 to i8**
  store i8* %1442, i8** %1444, align 8, !alias.scope !83
  %1445 = bitcast i8* %1442 to i32*
  br label %1451

1446:                                             ; preds = %1431
  %1447 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %1448 = bitcast %union.anon* %1447 to i32*
  %1449 = sext i32 %1435 to i64
  %1450 = shl nsw i64 %1449, 2
  br label %1451

1451:                                             ; preds = %1446, %1439
  %1452 = phi i64 [ %1441, %1439 ], [ %1450, %1446 ]
  %1453 = phi i32* [ %1445, %1439 ], [ %1448, %1446 ]
  %1454 = bitcast i32* %1453 to i8*
  %1455 = bitcast i32* %1436 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1454, i8* align 4 %1455, i64 %1452, i1 false) #9
  br label %1456

1456:                                             ; preds = %1429, %1451
  %1457 = bitcast %"class.tflite::SequentialTensorWriter.9"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1457) #9
  %1458 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 0
  store %struct.TfLiteTensor* %44, %struct.TfLiteTensor** %1458, align 8
  %1459 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 1
  store %struct.TfLiteTensor* %76, %struct.TfLiteTensor** %1459, align 8
  %1460 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 2
  %1461 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 2, i32 1
  %1462 = bitcast %"class.tflite::DynamicBuffer"* %1460 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1462, i8 0, i64 24, i1 false) #9
  %1463 = tail call i8* @_Znwm(i64 4) #10
  %1464 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 2, i32 1, i32 0, i32 1
  %1465 = bitcast %"class.std::__1::vector"* %1461 to i8**
  store i8* %1463, i8** %1465, align 8
  %1466 = getelementptr inbounds i8, i8* %1463, i64 4
  %1467 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 2, i32 1, i32 0, i32 2, i32 0, i32 0
  %1468 = bitcast i32** %1467 to i8**
  store i8* %1466, i8** %1468, align 8
  %1469 = bitcast i32** %1464 to i64*
  %1470 = bitcast i8* %1463 to i32*
  store i32 0, i32* %1470, align 4
  %1471 = ptrtoint i8* %1466 to i64
  store i64 %1471, i64* %1469, align 8
  call void @_ZN6tflite13optimized_ops5SliceINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvRKNS_11SliceParamsERKNS_12RuntimeShapeESE_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* nonnull dereferenceable(40) %30, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %31, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %32, %"class.tflite::SequentialTensorWriter.9"* nonnull %9) #9
  %1472 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1459, align 8
  call void @_ZN6tflite13DynamicBuffer13WriteToTensorEP12TfLiteTensorP14TfLiteIntArray(%"class.tflite::DynamicBuffer"* %1460, %struct.TfLiteTensor* %1472, %struct.TfLiteIntArray* null) #9
  %1473 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 2, i32 1, i32 0, i32 0
  %1474 = load i32*, i32** %1473, align 8
  %1475 = icmp eq i32* %1474, null
  br i1 %1475, label %1479, label %1476

1476:                                             ; preds = %1456
  %1477 = ptrtoint i32* %1474 to i64
  store i64 %1477, i64* %1469, align 8
  %1478 = bitcast i32* %1474 to i8*
  call void @_ZdlPv(i8* %1478) #10
  br label %1479

1479:                                             ; preds = %1476, %1456
  %1480 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %1460, i64 0, i32 0, i32 0, i32 0
  %1481 = load i8*, i8** %1480, align 8
  %1482 = icmp eq i8* %1481, null
  br i1 %1482, label %1487, label %1483

1483:                                             ; preds = %1479
  %1484 = ptrtoint i8* %1481 to i64
  %1485 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %9, i64 0, i32 2, i32 0, i32 0, i32 1
  %1486 = bitcast i8** %1485 to i64*
  store i64 %1484, i64* %1486, align 8
  call void @_ZdlPv(i8* nonnull %1481) #10
  br label %1487

1487:                                             ; preds = %1479, %1483
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1457) #9
  %1488 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  %1489 = load i32, i32* %1488, align 8
  %1490 = icmp sgt i32 %1489, 5
  br i1 %1490, label %1491, label %1497

1491:                                             ; preds = %1487
  %1492 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %1493 = load i32*, i32** %1492, align 8
  %1494 = icmp eq i32* %1493, null
  br i1 %1494, label %1497, label %1495

1495:                                             ; preds = %1491
  %1496 = bitcast i32* %1493 to i8*
  call void @_ZdaPv(i8* %1496) #10
  br label %1497

1497:                                             ; preds = %1487, %1491, %1495
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1427) #9
  %1498 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  %1499 = load i32, i32* %1498, align 8
  %1500 = icmp sgt i32 %1499, 5
  br i1 %1500, label %1501, label %1507

1501:                                             ; preds = %1497
  %1502 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %1503 = load i32*, i32** %1502, align 8
  %1504 = icmp eq i32* %1503, null
  br i1 %1504, label %1507, label %1505

1505:                                             ; preds = %1501
  %1506 = bitcast i32* %1503 to i8*
  call void @_ZdaPv(i8* %1506) #10
  br label %1507

1507:                                             ; preds = %1497, %1501, %1505
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1398) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1374) #9
  br label %1511

1508:                                             ; preds = %400
  %1509 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1510 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1509, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1510(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 %403) #9
  br label %1511

1511:                                             ; preds = %659, %796, %935, %1074, %1213, %1352, %1507, %1508, %1369, %1360, %1230, %1221, %1091, %1082, %952, %943, %813, %804, %676, %667, %537, %528, %386
  %1512 = phi i32 [ 1, %1508 ], [ 1, %1360 ], [ 1, %1369 ], [ 1, %1221 ], [ 1, %1230 ], [ 1, %1082 ], [ 1, %1091 ], [ 1, %943 ], [ 1, %952 ], [ 1, %804 ], [ 1, %813 ], [ 1, %667 ], [ 1, %676 ], [ 1, %528 ], [ 1, %537 ], [ 1, %386 ], [ 0, %1507 ], [ 0, %1352 ], [ 0, %1213 ], [ 0, %1074 ], [ 0, %935 ], [ 0, %796 ], [ 0, %659 ]
  %1513 = load i32*, i32** %98, align 8
  %1514 = icmp eq i32* %1513, null
  br i1 %1514, label %1519, label %1515

1515:                                             ; preds = %1511
  %1516 = ptrtoint i32* %1513 to i64
  %1517 = bitcast i32** %99 to i64*
  store i64 %1516, i64* %1517, align 8
  %1518 = bitcast i32* %1513 to i8*
  call void @_ZdlPv(i8* %1518) #10
  br label %1519

1519:                                             ; preds = %1511, %1515
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #9
  %1520 = load i32*, i32** %85, align 16
  %1521 = icmp eq i32* %1520, null
  br i1 %1521, label %1526, label %1522

1522:                                             ; preds = %1519
  %1523 = ptrtoint i32* %1520 to i64
  %1524 = bitcast i32** %86 to i64*
  store i64 %1523, i64* %1524, align 8
  %1525 = bitcast i32* %1520 to i8*
  call void @_ZdlPv(i8* %1525) #10
  br label %1526

1526:                                             ; preds = %1519, %1522
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #9
  br label %1527

1527:                                             ; preds = %80, %1526
  %1528 = phi i32 [ %1512, %1526 ], [ %81, %80 ]
  ret i32 %1528
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops5SliceIfEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::SequentialTensorWriter"*) local_unnamed_addr #8 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %7, align 8, !alias.scope !86
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8, !noalias !86
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  tail call void @abort() #11, !noalias !86
  unreachable

12:                                               ; preds = %4
  store i32 4, i32* %7, align 8, !alias.scope !86
  %13 = sub i32 4, %9
  %14 = icmp sgt i32 %13, 0
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %14, label %16, label %96

16:                                               ; preds = %12
  %17 = bitcast %union.anon* %15 to [5 x i32]*
  %18 = zext i32 %13 to i64
  %19 = icmp ult i32 %13, 8
  br i1 %19, label %89, label %20

20:                                               ; preds = %16
  %21 = and i64 %18, 4294967288
  %22 = add nsw i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp ult i64 %22, 56
  br i1 %26, label %74, label %27

27:                                               ; preds = %20
  %28 = sub nsw i64 %24, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %71, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %72, %29 ]
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %30
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %33, align 8, !alias.scope !86
  %34 = getelementptr inbounds i32, i32* %32, i64 4
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !86
  %36 = or i64 %30, 8
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %36
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !86
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !86
  %41 = or i64 %30, 16
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !86
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !86
  %46 = or i64 %30, 24
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !86
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !86
  %51 = or i64 %30, 32
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !86
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !86
  %56 = or i64 %30, 40
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !86
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !86
  %61 = or i64 %30, 48
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !86
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !86
  %66 = or i64 %30, 56
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !86
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !86
  %71 = add i64 %30, 64
  %72 = add i64 %31, -8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %29, !llvm.loop !89

74:                                               ; preds = %29, %20
  %75 = phi i64 [ 0, %20 ], [ %71, %29 ]
  %76 = icmp eq i64 %25, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %74, %77
  %78 = phi i64 [ %84, %77 ], [ %75, %74 ]
  %79 = phi i64 [ %85, %77 ], [ %25, %74 ]
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !86
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !86
  %84 = add i64 %78, 8
  %85 = add i64 %79, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %77, !llvm.loop !91

87:                                               ; preds = %77, %74
  %88 = icmp eq i64 %21, %18
  br i1 %88, label %96, label %89

89:                                               ; preds = %87, %16
  %90 = phi i64 [ 0, %16 ], [ %21, %87 ]
  br label %91

91:                                               ; preds = %89, %91
  %92 = phi i64 [ %94, %91 ], [ %90, %89 ]
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %92
  store i32 1, i32* %93, align 4, !alias.scope !86
  %94 = add nuw nsw i64 %92, 1
  %95 = icmp eq i64 %94, %18
  br i1 %95, label %96, label %91, !llvm.loop !93

96:                                               ; preds = %91, %87, %12
  %97 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %98 = bitcast %union.anon* %15 to i32*
  %99 = sext i32 %13 to i64
  %100 = getelementptr inbounds i32, i32* %98, i64 %99
  %101 = bitcast i32* %100 to i8*
  %102 = icmp sgt i32 %9, 5
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %104 = getelementptr inbounds %union.anon, %union.anon* %103, i64 0, i32 0
  %105 = load i32*, i32** %104, align 8, !noalias !86
  %106 = bitcast %union.anon* %103 to i32*
  %107 = select i1 %102, i32* %105, i32* %106
  %108 = bitcast i32* %107 to i8*
  %109 = sext i32 %9 to i64
  %110 = shl nsw i64 %109, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %108, i64 %110, i1 false) #9
  %111 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 2
  %112 = load i8, i8* %111, align 4
  %113 = sext i8 %112 to i32
  %114 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 0
  %115 = load i8, i8* %114, align 4
  %116 = sext i8 %115 to i32
  %117 = icmp slt i8 %115, 4
  %118 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 0
  %119 = load i32, i32* %118, align 4
  %120 = select i1 %117, i32 0, i32 %119
  %121 = icmp slt i8 %112, 4
  br i1 %121, label %126, label %122

122:                                              ; preds = %96
  %123 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122, %96
  %127 = load i32, i32* %7, align 8
  %128 = icmp sgt i32 %127, 5
  %129 = load i32*, i32** %97, align 8
  %130 = select i1 %128, i32* %129, i32* %98
  %131 = load i32, i32* %130, align 4
  br label %134

132:                                              ; preds = %122
  %133 = add nsw i32 %124, %120
  br label %134

134:                                              ; preds = %132, %126
  %135 = phi i32 [ %131, %126 ], [ %133, %132 ]
  %136 = icmp slt i8 %115, 3
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = add nsw i32 %116, -3
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  br label %142

142:                                              ; preds = %134, %137
  %143 = phi i32 [ %141, %137 ], [ 0, %134 ]
  %144 = icmp slt i8 %112, 3
  br i1 %144, label %151, label %145

145:                                              ; preds = %142
  %146 = add nsw i32 %113, -3
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %151, label %160

151:                                              ; preds = %145, %142
  %152 = load i32, i32* %7, align 8
  %153 = icmp sgt i32 %152, 5
  %154 = load i32*, i32** %97, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 1
  %156 = bitcast %union.anon* %15 to [5 x i32]*
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %156, i64 0, i64 1
  %158 = select i1 %153, i32* %155, i32* %157
  %159 = load i32, i32* %158, align 4
  br label %162

160:                                              ; preds = %145
  %161 = add nsw i32 %149, %143
  br label %162

162:                                              ; preds = %160, %151
  %163 = phi i32 [ %159, %151 ], [ %161, %160 ]
  %164 = icmp slt i8 %115, 2
  br i1 %164, label %170, label %165

165:                                              ; preds = %162
  %166 = add nsw i32 %116, -2
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %167
  %169 = load i32, i32* %168, align 4
  br label %170

170:                                              ; preds = %162, %165
  %171 = phi i32 [ %169, %165 ], [ 0, %162 ]
  %172 = icmp slt i8 %112, 2
  br i1 %172, label %179, label %173

173:                                              ; preds = %170
  %174 = add nsw i32 %113, -2
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %179, label %188

179:                                              ; preds = %173, %170
  %180 = load i32, i32* %7, align 8
  %181 = icmp sgt i32 %180, 5
  %182 = load i32*, i32** %97, align 8
  %183 = getelementptr inbounds i32, i32* %182, i64 2
  %184 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %185 = bitcast [16 x i8]* %184 to i32*
  %186 = select i1 %181, i32* %183, i32* %185
  %187 = load i32, i32* %186, align 4
  br label %190

188:                                              ; preds = %173
  %189 = add nsw i32 %177, %171
  br label %190

190:                                              ; preds = %188, %179
  %191 = phi i32 [ %187, %179 ], [ %189, %188 ]
  %192 = icmp slt i8 %115, 1
  br i1 %192, label %198, label %193

193:                                              ; preds = %190
  %194 = add nsw i32 %116, -1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %195
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %190, %193
  %199 = phi i32 [ %197, %193 ], [ 0, %190 ]
  %200 = icmp slt i8 %112, 1
  br i1 %200, label %207, label %201

201:                                              ; preds = %198
  %202 = add nsw i32 %113, -1
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %216

207:                                              ; preds = %201, %198
  %208 = load i32, i32* %7, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = load i32*, i32** %97, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 3
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %213 = bitcast i8* %212 to i32*
  %214 = select i1 %209, i32* %211, i32* %213
  %215 = load i32, i32* %214, align 4
  br label %218

216:                                              ; preds = %201
  %217 = add nsw i32 %205, %199
  br label %218

218:                                              ; preds = %216, %207
  %219 = phi i32 [ %215, %207 ], [ %217, %216 ]
  %220 = icmp slt i32 %120, %135
  br i1 %220, label %221, label %257

221:                                              ; preds = %218
  %222 = icmp slt i32 %143, %163
  %223 = icmp slt i32 %171, %191
  %224 = icmp slt i32 %199, %219
  %225 = getelementptr inbounds i32, i32* %98, i64 1
  %226 = load i32, i32* %225, align 4
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %228 = bitcast [16 x i8]* %227 to i32*
  %229 = load i32, i32* %228, align 8
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %231 = bitcast i8* %230 to i32*
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"class.tflite::SequentialTensorWriter", %"class.tflite::SequentialTensorWriter"* %3, i64 0, i32 0
  %234 = getelementptr inbounds %"class.tflite::SequentialTensorWriter", %"class.tflite::SequentialTensorWriter"* %3, i64 0, i32 1
  %235 = sext i32 %199 to i64
  %236 = sext i32 %171 to i64
  %237 = sext i32 %232 to i64
  %238 = sext i32 %143 to i64
  %239 = sext i32 %229 to i64
  %240 = sext i32 %120 to i64
  %241 = sext i32 %226 to i64
  %242 = sext i32 %135 to i64
  %243 = sext i32 %163 to i64
  %244 = sext i32 %191 to i64
  %245 = sext i32 %219 to i64
  %246 = sub nsw i64 %245, %235
  %247 = xor i64 %235, -1
  %248 = and i64 %246, 1
  %249 = icmp eq i64 %248, 0
  %250 = add nsw i64 %235, 1
  %251 = sub nsw i64 0, %245
  %252 = icmp eq i64 %247, %251
  br label %253

253:                                              ; preds = %272, %221
  %254 = phi i64 [ %240, %221 ], [ %273, %272 ]
  br i1 %222, label %255, label %272

255:                                              ; preds = %253
  %256 = mul nsw i64 %254, %241
  br label %267

257:                                              ; preds = %272, %218
  %258 = load i32, i32* %7, align 8
  %259 = icmp sgt i32 %258, 5
  br i1 %259, label %260, label %266

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %262 = load i32*, i32** %261, align 8
  %263 = icmp eq i32* %262, null
  br i1 %263, label %266, label %264

264:                                              ; preds = %260
  %265 = bitcast i32* %262 to i8*
  tail call void @_ZdaPv(i8* %265) #10
  br label %266

266:                                              ; preds = %257, %260, %264
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void

267:                                              ; preds = %291, %255
  %268 = phi i64 [ %238, %255 ], [ %292, %291 ]
  br i1 %223, label %269, label %291

269:                                              ; preds = %267
  %270 = add nsw i64 %256, %268
  %271 = mul nsw i64 %270, %239
  br label %275

272:                                              ; preds = %291, %253
  %273 = add nsw i64 %254, 1
  %274 = icmp eq i64 %273, %242
  br i1 %274, label %257, label %253

275:                                              ; preds = %294, %269
  %276 = phi i64 [ %236, %269 ], [ %295, %294 ]
  br i1 %224, label %277, label %294

277:                                              ; preds = %275
  %278 = add nsw i64 %271, %276
  %279 = mul nsw i64 %278, %237
  br i1 %249, label %289, label %280

280:                                              ; preds = %277
  %281 = add nsw i64 %279, %235
  %282 = load float*, float** %233, align 8
  %283 = getelementptr inbounds float, float* %282, i64 %281
  %284 = bitcast float* %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = load float*, float** %234, align 8
  %287 = getelementptr inbounds float, float* %286, i64 1
  store float* %287, float** %234, align 8
  %288 = bitcast float* %286 to i32*
  store i32 %285, i32* %288, align 4
  br label %289

289:                                              ; preds = %280, %277
  %290 = phi i64 [ %250, %280 ], [ %235, %277 ]
  br i1 %252, label %294, label %297

291:                                              ; preds = %294, %267
  %292 = add nsw i64 %268, 1
  %293 = icmp eq i64 %292, %243
  br i1 %293, label %272, label %267

294:                                              ; preds = %289, %297, %275
  %295 = add nsw i64 %276, 1
  %296 = icmp eq i64 %295, %244
  br i1 %296, label %291, label %275

297:                                              ; preds = %289, %297
  %298 = phi i64 [ %316, %297 ], [ %290, %289 ]
  %299 = add nsw i64 %279, %298
  %300 = load float*, float** %233, align 8
  %301 = getelementptr inbounds float, float* %300, i64 %299
  %302 = bitcast float* %301 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = load float*, float** %234, align 8
  %305 = getelementptr inbounds float, float* %304, i64 1
  store float* %305, float** %234, align 8
  %306 = bitcast float* %304 to i32*
  store i32 %303, i32* %306, align 4
  %307 = add nsw i64 %298, 1
  %308 = add nsw i64 %279, %307
  %309 = load float*, float** %233, align 8
  %310 = getelementptr inbounds float, float* %309, i64 %308
  %311 = bitcast float* %310 to i32*
  %312 = load i32, i32* %311, align 4
  %313 = load float*, float** %234, align 8
  %314 = getelementptr inbounds float, float* %313, i64 1
  store float* %314, float** %234, align 8
  %315 = bitcast float* %313 to i32*
  store i32 %312, i32* %315, align 4
  %316 = add nsw i64 %298, 2
  %317 = icmp eq i64 %316, %245
  br i1 %317, label %294, label %297
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops5SliceIiEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::SequentialTensorWriter.4"*) local_unnamed_addr #8 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %7, align 8, !alias.scope !95
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8, !noalias !95
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  tail call void @abort() #11, !noalias !95
  unreachable

12:                                               ; preds = %4
  store i32 4, i32* %7, align 8, !alias.scope !95
  %13 = sub i32 4, %9
  %14 = icmp sgt i32 %13, 0
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %14, label %16, label %96

16:                                               ; preds = %12
  %17 = bitcast %union.anon* %15 to [5 x i32]*
  %18 = zext i32 %13 to i64
  %19 = icmp ult i32 %13, 8
  br i1 %19, label %89, label %20

20:                                               ; preds = %16
  %21 = and i64 %18, 4294967288
  %22 = add nsw i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp ult i64 %22, 56
  br i1 %26, label %74, label %27

27:                                               ; preds = %20
  %28 = sub nsw i64 %24, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %71, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %72, %29 ]
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %30
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %33, align 8, !alias.scope !95
  %34 = getelementptr inbounds i32, i32* %32, i64 4
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !95
  %36 = or i64 %30, 8
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %36
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !95
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !95
  %41 = or i64 %30, 16
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !95
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !95
  %46 = or i64 %30, 24
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !95
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !95
  %51 = or i64 %30, 32
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !95
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !95
  %56 = or i64 %30, 40
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !95
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !95
  %61 = or i64 %30, 48
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !95
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !95
  %66 = or i64 %30, 56
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !95
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !95
  %71 = add i64 %30, 64
  %72 = add i64 %31, -8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %29, !llvm.loop !98

74:                                               ; preds = %29, %20
  %75 = phi i64 [ 0, %20 ], [ %71, %29 ]
  %76 = icmp eq i64 %25, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %74, %77
  %78 = phi i64 [ %84, %77 ], [ %75, %74 ]
  %79 = phi i64 [ %85, %77 ], [ %25, %74 ]
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !95
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !95
  %84 = add i64 %78, 8
  %85 = add i64 %79, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %77, !llvm.loop !99

87:                                               ; preds = %77, %74
  %88 = icmp eq i64 %21, %18
  br i1 %88, label %96, label %89

89:                                               ; preds = %87, %16
  %90 = phi i64 [ 0, %16 ], [ %21, %87 ]
  br label %91

91:                                               ; preds = %89, %91
  %92 = phi i64 [ %94, %91 ], [ %90, %89 ]
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %92
  store i32 1, i32* %93, align 4, !alias.scope !95
  %94 = add nuw nsw i64 %92, 1
  %95 = icmp eq i64 %94, %18
  br i1 %95, label %96, label %91, !llvm.loop !100

96:                                               ; preds = %91, %87, %12
  %97 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %98 = bitcast %union.anon* %15 to i32*
  %99 = sext i32 %13 to i64
  %100 = getelementptr inbounds i32, i32* %98, i64 %99
  %101 = bitcast i32* %100 to i8*
  %102 = icmp sgt i32 %9, 5
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %104 = getelementptr inbounds %union.anon, %union.anon* %103, i64 0, i32 0
  %105 = load i32*, i32** %104, align 8, !noalias !95
  %106 = bitcast %union.anon* %103 to i32*
  %107 = select i1 %102, i32* %105, i32* %106
  %108 = bitcast i32* %107 to i8*
  %109 = sext i32 %9 to i64
  %110 = shl nsw i64 %109, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %108, i64 %110, i1 false) #9
  %111 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 2
  %112 = load i8, i8* %111, align 4
  %113 = sext i8 %112 to i32
  %114 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 0
  %115 = load i8, i8* %114, align 4
  %116 = sext i8 %115 to i32
  %117 = icmp slt i8 %115, 4
  %118 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 0
  %119 = load i32, i32* %118, align 4
  %120 = select i1 %117, i32 0, i32 %119
  %121 = icmp slt i8 %112, 4
  br i1 %121, label %126, label %122

122:                                              ; preds = %96
  %123 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122, %96
  %127 = load i32, i32* %7, align 8
  %128 = icmp sgt i32 %127, 5
  %129 = load i32*, i32** %97, align 8
  %130 = select i1 %128, i32* %129, i32* %98
  %131 = load i32, i32* %130, align 4
  br label %134

132:                                              ; preds = %122
  %133 = add nsw i32 %124, %120
  br label %134

134:                                              ; preds = %132, %126
  %135 = phi i32 [ %131, %126 ], [ %133, %132 ]
  %136 = icmp slt i8 %115, 3
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = add nsw i32 %116, -3
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  br label %142

142:                                              ; preds = %134, %137
  %143 = phi i32 [ %141, %137 ], [ 0, %134 ]
  %144 = icmp slt i8 %112, 3
  br i1 %144, label %151, label %145

145:                                              ; preds = %142
  %146 = add nsw i32 %113, -3
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %151, label %160

151:                                              ; preds = %145, %142
  %152 = load i32, i32* %7, align 8
  %153 = icmp sgt i32 %152, 5
  %154 = load i32*, i32** %97, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 1
  %156 = bitcast %union.anon* %15 to [5 x i32]*
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %156, i64 0, i64 1
  %158 = select i1 %153, i32* %155, i32* %157
  %159 = load i32, i32* %158, align 4
  br label %162

160:                                              ; preds = %145
  %161 = add nsw i32 %149, %143
  br label %162

162:                                              ; preds = %160, %151
  %163 = phi i32 [ %159, %151 ], [ %161, %160 ]
  %164 = icmp slt i8 %115, 2
  br i1 %164, label %170, label %165

165:                                              ; preds = %162
  %166 = add nsw i32 %116, -2
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %167
  %169 = load i32, i32* %168, align 4
  br label %170

170:                                              ; preds = %162, %165
  %171 = phi i32 [ %169, %165 ], [ 0, %162 ]
  %172 = icmp slt i8 %112, 2
  br i1 %172, label %179, label %173

173:                                              ; preds = %170
  %174 = add nsw i32 %113, -2
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %179, label %188

179:                                              ; preds = %173, %170
  %180 = load i32, i32* %7, align 8
  %181 = icmp sgt i32 %180, 5
  %182 = load i32*, i32** %97, align 8
  %183 = getelementptr inbounds i32, i32* %182, i64 2
  %184 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %185 = bitcast [16 x i8]* %184 to i32*
  %186 = select i1 %181, i32* %183, i32* %185
  %187 = load i32, i32* %186, align 4
  br label %190

188:                                              ; preds = %173
  %189 = add nsw i32 %177, %171
  br label %190

190:                                              ; preds = %188, %179
  %191 = phi i32 [ %187, %179 ], [ %189, %188 ]
  %192 = icmp slt i8 %115, 1
  br i1 %192, label %198, label %193

193:                                              ; preds = %190
  %194 = add nsw i32 %116, -1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %195
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %190, %193
  %199 = phi i32 [ %197, %193 ], [ 0, %190 ]
  %200 = icmp slt i8 %112, 1
  br i1 %200, label %207, label %201

201:                                              ; preds = %198
  %202 = add nsw i32 %113, -1
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %216

207:                                              ; preds = %201, %198
  %208 = load i32, i32* %7, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = load i32*, i32** %97, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 3
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %213 = bitcast i8* %212 to i32*
  %214 = select i1 %209, i32* %211, i32* %213
  %215 = load i32, i32* %214, align 4
  br label %218

216:                                              ; preds = %201
  %217 = add nsw i32 %205, %199
  br label %218

218:                                              ; preds = %216, %207
  %219 = phi i32 [ %215, %207 ], [ %217, %216 ]
  %220 = icmp slt i32 %120, %135
  br i1 %220, label %221, label %257

221:                                              ; preds = %218
  %222 = icmp slt i32 %143, %163
  %223 = icmp slt i32 %171, %191
  %224 = icmp slt i32 %199, %219
  %225 = getelementptr inbounds i32, i32* %98, i64 1
  %226 = load i32, i32* %225, align 4
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %228 = bitcast [16 x i8]* %227 to i32*
  %229 = load i32, i32* %228, align 8
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %231 = bitcast i8* %230 to i32*
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.4", %"class.tflite::SequentialTensorWriter.4"* %3, i64 0, i32 0
  %234 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.4", %"class.tflite::SequentialTensorWriter.4"* %3, i64 0, i32 1
  %235 = sext i32 %199 to i64
  %236 = sext i32 %171 to i64
  %237 = sext i32 %232 to i64
  %238 = sext i32 %143 to i64
  %239 = sext i32 %229 to i64
  %240 = sext i32 %120 to i64
  %241 = sext i32 %226 to i64
  %242 = sext i32 %135 to i64
  %243 = sext i32 %163 to i64
  %244 = sext i32 %191 to i64
  %245 = sext i32 %219 to i64
  %246 = sub nsw i64 %245, %235
  %247 = xor i64 %235, -1
  %248 = and i64 %246, 1
  %249 = icmp eq i64 %248, 0
  %250 = add nsw i64 %235, 1
  %251 = sub nsw i64 0, %245
  %252 = icmp eq i64 %247, %251
  br label %253

253:                                              ; preds = %272, %221
  %254 = phi i64 [ %240, %221 ], [ %273, %272 ]
  br i1 %222, label %255, label %272

255:                                              ; preds = %253
  %256 = mul nsw i64 %254, %241
  br label %267

257:                                              ; preds = %272, %218
  %258 = load i32, i32* %7, align 8
  %259 = icmp sgt i32 %258, 5
  br i1 %259, label %260, label %266

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %262 = load i32*, i32** %261, align 8
  %263 = icmp eq i32* %262, null
  br i1 %263, label %266, label %264

264:                                              ; preds = %260
  %265 = bitcast i32* %262 to i8*
  tail call void @_ZdaPv(i8* %265) #10
  br label %266

266:                                              ; preds = %257, %260, %264
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void

267:                                              ; preds = %289, %255
  %268 = phi i64 [ %238, %255 ], [ %290, %289 ]
  br i1 %223, label %269, label %289

269:                                              ; preds = %267
  %270 = add nsw i64 %256, %268
  %271 = mul nsw i64 %270, %239
  br label %275

272:                                              ; preds = %289, %253
  %273 = add nsw i64 %254, 1
  %274 = icmp eq i64 %273, %242
  br i1 %274, label %257, label %253

275:                                              ; preds = %292, %269
  %276 = phi i64 [ %236, %269 ], [ %293, %292 ]
  br i1 %224, label %277, label %292

277:                                              ; preds = %275
  %278 = add nsw i64 %271, %276
  %279 = mul nsw i64 %278, %237
  br i1 %249, label %287, label %280

280:                                              ; preds = %277
  %281 = add nsw i64 %279, %235
  %282 = load i32*, i32** %233, align 8
  %283 = getelementptr inbounds i32, i32* %282, i64 %281
  %284 = load i32, i32* %283, align 4
  %285 = load i32*, i32** %234, align 8
  %286 = getelementptr inbounds i32, i32* %285, i64 1
  store i32* %286, i32** %234, align 8
  store i32 %284, i32* %285, align 4
  br label %287

287:                                              ; preds = %280, %277
  %288 = phi i64 [ %250, %280 ], [ %235, %277 ]
  br i1 %252, label %292, label %295

289:                                              ; preds = %292, %267
  %290 = add nsw i64 %268, 1
  %291 = icmp eq i64 %290, %243
  br i1 %291, label %272, label %267

292:                                              ; preds = %287, %295, %275
  %293 = add nsw i64 %276, 1
  %294 = icmp eq i64 %293, %244
  br i1 %294, label %289, label %275

295:                                              ; preds = %287, %295
  %296 = phi i64 [ %310, %295 ], [ %288, %287 ]
  %297 = add nsw i64 %279, %296
  %298 = load i32*, i32** %233, align 8
  %299 = getelementptr inbounds i32, i32* %298, i64 %297
  %300 = load i32, i32* %299, align 4
  %301 = load i32*, i32** %234, align 8
  %302 = getelementptr inbounds i32, i32* %301, i64 1
  store i32* %302, i32** %234, align 8
  store i32 %300, i32* %301, align 4
  %303 = add nsw i64 %296, 1
  %304 = add nsw i64 %279, %303
  %305 = load i32*, i32** %233, align 8
  %306 = getelementptr inbounds i32, i32* %305, i64 %304
  %307 = load i32, i32* %306, align 4
  %308 = load i32*, i32** %234, align 8
  %309 = getelementptr inbounds i32, i32* %308, i64 1
  store i32* %309, i32** %234, align 8
  store i32 %307, i32* %308, align 4
  %310 = add nsw i64 %296, 2
  %311 = icmp eq i64 %310, %245
  br i1 %311, label %292, label %295
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops5SliceIlEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::SequentialTensorWriter.5"*) local_unnamed_addr #8 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %7, align 8, !alias.scope !101
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8, !noalias !101
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  tail call void @abort() #11, !noalias !101
  unreachable

12:                                               ; preds = %4
  store i32 4, i32* %7, align 8, !alias.scope !101
  %13 = sub i32 4, %9
  %14 = icmp sgt i32 %13, 0
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %14, label %16, label %96

16:                                               ; preds = %12
  %17 = bitcast %union.anon* %15 to [5 x i32]*
  %18 = zext i32 %13 to i64
  %19 = icmp ult i32 %13, 8
  br i1 %19, label %89, label %20

20:                                               ; preds = %16
  %21 = and i64 %18, 4294967288
  %22 = add nsw i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp ult i64 %22, 56
  br i1 %26, label %74, label %27

27:                                               ; preds = %20
  %28 = sub nsw i64 %24, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %71, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %72, %29 ]
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %30
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %33, align 8, !alias.scope !101
  %34 = getelementptr inbounds i32, i32* %32, i64 4
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !101
  %36 = or i64 %30, 8
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %36
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !101
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !101
  %41 = or i64 %30, 16
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !101
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !101
  %46 = or i64 %30, 24
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !101
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !101
  %51 = or i64 %30, 32
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !101
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !101
  %56 = or i64 %30, 40
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !101
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !101
  %61 = or i64 %30, 48
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !101
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !101
  %66 = or i64 %30, 56
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !101
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !101
  %71 = add i64 %30, 64
  %72 = add i64 %31, -8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %29, !llvm.loop !104

74:                                               ; preds = %29, %20
  %75 = phi i64 [ 0, %20 ], [ %71, %29 ]
  %76 = icmp eq i64 %25, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %74, %77
  %78 = phi i64 [ %84, %77 ], [ %75, %74 ]
  %79 = phi i64 [ %85, %77 ], [ %25, %74 ]
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !101
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !101
  %84 = add i64 %78, 8
  %85 = add i64 %79, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %77, !llvm.loop !105

87:                                               ; preds = %77, %74
  %88 = icmp eq i64 %21, %18
  br i1 %88, label %96, label %89

89:                                               ; preds = %87, %16
  %90 = phi i64 [ 0, %16 ], [ %21, %87 ]
  br label %91

91:                                               ; preds = %89, %91
  %92 = phi i64 [ %94, %91 ], [ %90, %89 ]
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %92
  store i32 1, i32* %93, align 4, !alias.scope !101
  %94 = add nuw nsw i64 %92, 1
  %95 = icmp eq i64 %94, %18
  br i1 %95, label %96, label %91, !llvm.loop !106

96:                                               ; preds = %91, %87, %12
  %97 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %98 = bitcast %union.anon* %15 to i32*
  %99 = sext i32 %13 to i64
  %100 = getelementptr inbounds i32, i32* %98, i64 %99
  %101 = bitcast i32* %100 to i8*
  %102 = icmp sgt i32 %9, 5
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %104 = getelementptr inbounds %union.anon, %union.anon* %103, i64 0, i32 0
  %105 = load i32*, i32** %104, align 8, !noalias !101
  %106 = bitcast %union.anon* %103 to i32*
  %107 = select i1 %102, i32* %105, i32* %106
  %108 = bitcast i32* %107 to i8*
  %109 = sext i32 %9 to i64
  %110 = shl nsw i64 %109, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %108, i64 %110, i1 false) #9
  %111 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 2
  %112 = load i8, i8* %111, align 4
  %113 = sext i8 %112 to i32
  %114 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 0
  %115 = load i8, i8* %114, align 4
  %116 = sext i8 %115 to i32
  %117 = icmp slt i8 %115, 4
  %118 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 0
  %119 = load i32, i32* %118, align 4
  %120 = select i1 %117, i32 0, i32 %119
  %121 = icmp slt i8 %112, 4
  br i1 %121, label %126, label %122

122:                                              ; preds = %96
  %123 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122, %96
  %127 = load i32, i32* %7, align 8
  %128 = icmp sgt i32 %127, 5
  %129 = load i32*, i32** %97, align 8
  %130 = select i1 %128, i32* %129, i32* %98
  %131 = load i32, i32* %130, align 4
  br label %134

132:                                              ; preds = %122
  %133 = add nsw i32 %124, %120
  br label %134

134:                                              ; preds = %132, %126
  %135 = phi i32 [ %131, %126 ], [ %133, %132 ]
  %136 = icmp slt i8 %115, 3
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = add nsw i32 %116, -3
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  br label %142

142:                                              ; preds = %134, %137
  %143 = phi i32 [ %141, %137 ], [ 0, %134 ]
  %144 = icmp slt i8 %112, 3
  br i1 %144, label %151, label %145

145:                                              ; preds = %142
  %146 = add nsw i32 %113, -3
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %151, label %160

151:                                              ; preds = %145, %142
  %152 = load i32, i32* %7, align 8
  %153 = icmp sgt i32 %152, 5
  %154 = load i32*, i32** %97, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 1
  %156 = bitcast %union.anon* %15 to [5 x i32]*
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %156, i64 0, i64 1
  %158 = select i1 %153, i32* %155, i32* %157
  %159 = load i32, i32* %158, align 4
  br label %162

160:                                              ; preds = %145
  %161 = add nsw i32 %149, %143
  br label %162

162:                                              ; preds = %160, %151
  %163 = phi i32 [ %159, %151 ], [ %161, %160 ]
  %164 = icmp slt i8 %115, 2
  br i1 %164, label %170, label %165

165:                                              ; preds = %162
  %166 = add nsw i32 %116, -2
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %167
  %169 = load i32, i32* %168, align 4
  br label %170

170:                                              ; preds = %162, %165
  %171 = phi i32 [ %169, %165 ], [ 0, %162 ]
  %172 = icmp slt i8 %112, 2
  br i1 %172, label %179, label %173

173:                                              ; preds = %170
  %174 = add nsw i32 %113, -2
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %179, label %188

179:                                              ; preds = %173, %170
  %180 = load i32, i32* %7, align 8
  %181 = icmp sgt i32 %180, 5
  %182 = load i32*, i32** %97, align 8
  %183 = getelementptr inbounds i32, i32* %182, i64 2
  %184 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %185 = bitcast [16 x i8]* %184 to i32*
  %186 = select i1 %181, i32* %183, i32* %185
  %187 = load i32, i32* %186, align 4
  br label %190

188:                                              ; preds = %173
  %189 = add nsw i32 %177, %171
  br label %190

190:                                              ; preds = %188, %179
  %191 = phi i32 [ %187, %179 ], [ %189, %188 ]
  %192 = icmp slt i8 %115, 1
  br i1 %192, label %198, label %193

193:                                              ; preds = %190
  %194 = add nsw i32 %116, -1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %195
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %190, %193
  %199 = phi i32 [ %197, %193 ], [ 0, %190 ]
  %200 = icmp slt i8 %112, 1
  br i1 %200, label %207, label %201

201:                                              ; preds = %198
  %202 = add nsw i32 %113, -1
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %216

207:                                              ; preds = %201, %198
  %208 = load i32, i32* %7, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = load i32*, i32** %97, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 3
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %213 = bitcast i8* %212 to i32*
  %214 = select i1 %209, i32* %211, i32* %213
  %215 = load i32, i32* %214, align 4
  br label %218

216:                                              ; preds = %201
  %217 = add nsw i32 %205, %199
  br label %218

218:                                              ; preds = %216, %207
  %219 = phi i32 [ %215, %207 ], [ %217, %216 ]
  %220 = icmp slt i32 %120, %135
  br i1 %220, label %221, label %257

221:                                              ; preds = %218
  %222 = icmp slt i32 %143, %163
  %223 = icmp slt i32 %171, %191
  %224 = icmp slt i32 %199, %219
  %225 = getelementptr inbounds i32, i32* %98, i64 1
  %226 = load i32, i32* %225, align 4
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %228 = bitcast [16 x i8]* %227 to i32*
  %229 = load i32, i32* %228, align 8
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %231 = bitcast i8* %230 to i32*
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.5", %"class.tflite::SequentialTensorWriter.5"* %3, i64 0, i32 0
  %234 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.5", %"class.tflite::SequentialTensorWriter.5"* %3, i64 0, i32 1
  %235 = sext i32 %199 to i64
  %236 = sext i32 %171 to i64
  %237 = sext i32 %232 to i64
  %238 = sext i32 %143 to i64
  %239 = sext i32 %229 to i64
  %240 = sext i32 %120 to i64
  %241 = sext i32 %226 to i64
  %242 = sext i32 %135 to i64
  %243 = sext i32 %163 to i64
  %244 = sext i32 %191 to i64
  %245 = sext i32 %219 to i64
  %246 = sub nsw i64 %245, %235
  %247 = xor i64 %235, -1
  %248 = and i64 %246, 1
  %249 = icmp eq i64 %248, 0
  %250 = add nsw i64 %235, 1
  %251 = sub nsw i64 0, %245
  %252 = icmp eq i64 %247, %251
  br label %253

253:                                              ; preds = %272, %221
  %254 = phi i64 [ %240, %221 ], [ %273, %272 ]
  br i1 %222, label %255, label %272

255:                                              ; preds = %253
  %256 = mul nsw i64 %254, %241
  br label %267

257:                                              ; preds = %272, %218
  %258 = load i32, i32* %7, align 8
  %259 = icmp sgt i32 %258, 5
  br i1 %259, label %260, label %266

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %262 = load i32*, i32** %261, align 8
  %263 = icmp eq i32* %262, null
  br i1 %263, label %266, label %264

264:                                              ; preds = %260
  %265 = bitcast i32* %262 to i8*
  tail call void @_ZdaPv(i8* %265) #10
  br label %266

266:                                              ; preds = %257, %260, %264
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void

267:                                              ; preds = %289, %255
  %268 = phi i64 [ %238, %255 ], [ %290, %289 ]
  br i1 %223, label %269, label %289

269:                                              ; preds = %267
  %270 = add nsw i64 %256, %268
  %271 = mul nsw i64 %270, %239
  br label %275

272:                                              ; preds = %289, %253
  %273 = add nsw i64 %254, 1
  %274 = icmp eq i64 %273, %242
  br i1 %274, label %257, label %253

275:                                              ; preds = %292, %269
  %276 = phi i64 [ %236, %269 ], [ %293, %292 ]
  br i1 %224, label %277, label %292

277:                                              ; preds = %275
  %278 = add nsw i64 %271, %276
  %279 = mul nsw i64 %278, %237
  br i1 %249, label %287, label %280

280:                                              ; preds = %277
  %281 = add nsw i64 %279, %235
  %282 = load i64*, i64** %233, align 8
  %283 = getelementptr inbounds i64, i64* %282, i64 %281
  %284 = load i64, i64* %283, align 8
  %285 = load i64*, i64** %234, align 8
  %286 = getelementptr inbounds i64, i64* %285, i64 1
  store i64* %286, i64** %234, align 8
  store i64 %284, i64* %285, align 8
  br label %287

287:                                              ; preds = %280, %277
  %288 = phi i64 [ %250, %280 ], [ %235, %277 ]
  br i1 %252, label %292, label %295

289:                                              ; preds = %292, %267
  %290 = add nsw i64 %268, 1
  %291 = icmp eq i64 %290, %243
  br i1 %291, label %272, label %267

292:                                              ; preds = %287, %295, %275
  %293 = add nsw i64 %276, 1
  %294 = icmp eq i64 %293, %244
  br i1 %294, label %289, label %275

295:                                              ; preds = %287, %295
  %296 = phi i64 [ %310, %295 ], [ %288, %287 ]
  %297 = add nsw i64 %279, %296
  %298 = load i64*, i64** %233, align 8
  %299 = getelementptr inbounds i64, i64* %298, i64 %297
  %300 = load i64, i64* %299, align 8
  %301 = load i64*, i64** %234, align 8
  %302 = getelementptr inbounds i64, i64* %301, i64 1
  store i64* %302, i64** %234, align 8
  store i64 %300, i64* %301, align 8
  %303 = add nsw i64 %296, 1
  %304 = add nsw i64 %279, %303
  %305 = load i64*, i64** %233, align 8
  %306 = getelementptr inbounds i64, i64* %305, i64 %304
  %307 = load i64, i64* %306, align 8
  %308 = load i64*, i64** %234, align 8
  %309 = getelementptr inbounds i64, i64* %308, i64 1
  store i64* %309, i64** %234, align 8
  store i64 %307, i64* %308, align 8
  %310 = add nsw i64 %296, 2
  %311 = icmp eq i64 %310, %245
  br i1 %311, label %292, label %295
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops5SliceIaEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::SequentialTensorWriter.6"*) local_unnamed_addr #8 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %7, align 8, !alias.scope !107
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8, !noalias !107
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  tail call void @abort() #11, !noalias !107
  unreachable

12:                                               ; preds = %4
  store i32 4, i32* %7, align 8, !alias.scope !107
  %13 = sub i32 4, %9
  %14 = icmp sgt i32 %13, 0
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %14, label %16, label %96

16:                                               ; preds = %12
  %17 = bitcast %union.anon* %15 to [5 x i32]*
  %18 = zext i32 %13 to i64
  %19 = icmp ult i32 %13, 8
  br i1 %19, label %89, label %20

20:                                               ; preds = %16
  %21 = and i64 %18, 4294967288
  %22 = add nsw i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp ult i64 %22, 56
  br i1 %26, label %74, label %27

27:                                               ; preds = %20
  %28 = sub nsw i64 %24, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %71, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %72, %29 ]
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %30
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %33, align 8, !alias.scope !107
  %34 = getelementptr inbounds i32, i32* %32, i64 4
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !107
  %36 = or i64 %30, 8
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %36
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !107
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !107
  %41 = or i64 %30, 16
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !107
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !107
  %46 = or i64 %30, 24
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !107
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !107
  %51 = or i64 %30, 32
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !107
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !107
  %56 = or i64 %30, 40
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !107
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !107
  %61 = or i64 %30, 48
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !107
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !107
  %66 = or i64 %30, 56
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !107
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !107
  %71 = add i64 %30, 64
  %72 = add i64 %31, -8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %29, !llvm.loop !110

74:                                               ; preds = %29, %20
  %75 = phi i64 [ 0, %20 ], [ %71, %29 ]
  %76 = icmp eq i64 %25, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %74, %77
  %78 = phi i64 [ %84, %77 ], [ %75, %74 ]
  %79 = phi i64 [ %85, %77 ], [ %25, %74 ]
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !107
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !107
  %84 = add i64 %78, 8
  %85 = add i64 %79, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %77, !llvm.loop !111

87:                                               ; preds = %77, %74
  %88 = icmp eq i64 %21, %18
  br i1 %88, label %96, label %89

89:                                               ; preds = %87, %16
  %90 = phi i64 [ 0, %16 ], [ %21, %87 ]
  br label %91

91:                                               ; preds = %89, %91
  %92 = phi i64 [ %94, %91 ], [ %90, %89 ]
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %92
  store i32 1, i32* %93, align 4, !alias.scope !107
  %94 = add nuw nsw i64 %92, 1
  %95 = icmp eq i64 %94, %18
  br i1 %95, label %96, label %91, !llvm.loop !112

96:                                               ; preds = %91, %87, %12
  %97 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %98 = bitcast %union.anon* %15 to i32*
  %99 = sext i32 %13 to i64
  %100 = getelementptr inbounds i32, i32* %98, i64 %99
  %101 = bitcast i32* %100 to i8*
  %102 = icmp sgt i32 %9, 5
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %104 = getelementptr inbounds %union.anon, %union.anon* %103, i64 0, i32 0
  %105 = load i32*, i32** %104, align 8, !noalias !107
  %106 = bitcast %union.anon* %103 to i32*
  %107 = select i1 %102, i32* %105, i32* %106
  %108 = bitcast i32* %107 to i8*
  %109 = sext i32 %9 to i64
  %110 = shl nsw i64 %109, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %108, i64 %110, i1 false) #9
  %111 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 2
  %112 = load i8, i8* %111, align 4
  %113 = sext i8 %112 to i32
  %114 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 0
  %115 = load i8, i8* %114, align 4
  %116 = sext i8 %115 to i32
  %117 = icmp slt i8 %115, 4
  %118 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 0
  %119 = load i32, i32* %118, align 4
  %120 = select i1 %117, i32 0, i32 %119
  %121 = icmp slt i8 %112, 4
  br i1 %121, label %126, label %122

122:                                              ; preds = %96
  %123 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122, %96
  %127 = load i32, i32* %7, align 8
  %128 = icmp sgt i32 %127, 5
  %129 = load i32*, i32** %97, align 8
  %130 = select i1 %128, i32* %129, i32* %98
  %131 = load i32, i32* %130, align 4
  br label %134

132:                                              ; preds = %122
  %133 = add nsw i32 %124, %120
  br label %134

134:                                              ; preds = %132, %126
  %135 = phi i32 [ %131, %126 ], [ %133, %132 ]
  %136 = icmp slt i8 %115, 3
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = add nsw i32 %116, -3
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  br label %142

142:                                              ; preds = %134, %137
  %143 = phi i32 [ %141, %137 ], [ 0, %134 ]
  %144 = icmp slt i8 %112, 3
  br i1 %144, label %151, label %145

145:                                              ; preds = %142
  %146 = add nsw i32 %113, -3
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %151, label %160

151:                                              ; preds = %145, %142
  %152 = load i32, i32* %7, align 8
  %153 = icmp sgt i32 %152, 5
  %154 = load i32*, i32** %97, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 1
  %156 = bitcast %union.anon* %15 to [5 x i32]*
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %156, i64 0, i64 1
  %158 = select i1 %153, i32* %155, i32* %157
  %159 = load i32, i32* %158, align 4
  br label %162

160:                                              ; preds = %145
  %161 = add nsw i32 %149, %143
  br label %162

162:                                              ; preds = %160, %151
  %163 = phi i32 [ %159, %151 ], [ %161, %160 ]
  %164 = icmp slt i8 %115, 2
  br i1 %164, label %170, label %165

165:                                              ; preds = %162
  %166 = add nsw i32 %116, -2
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %167
  %169 = load i32, i32* %168, align 4
  br label %170

170:                                              ; preds = %162, %165
  %171 = phi i32 [ %169, %165 ], [ 0, %162 ]
  %172 = icmp slt i8 %112, 2
  br i1 %172, label %179, label %173

173:                                              ; preds = %170
  %174 = add nsw i32 %113, -2
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %179, label %188

179:                                              ; preds = %173, %170
  %180 = load i32, i32* %7, align 8
  %181 = icmp sgt i32 %180, 5
  %182 = load i32*, i32** %97, align 8
  %183 = getelementptr inbounds i32, i32* %182, i64 2
  %184 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %185 = bitcast [16 x i8]* %184 to i32*
  %186 = select i1 %181, i32* %183, i32* %185
  %187 = load i32, i32* %186, align 4
  br label %190

188:                                              ; preds = %173
  %189 = add nsw i32 %177, %171
  br label %190

190:                                              ; preds = %188, %179
  %191 = phi i32 [ %187, %179 ], [ %189, %188 ]
  %192 = icmp slt i8 %115, 1
  br i1 %192, label %198, label %193

193:                                              ; preds = %190
  %194 = add nsw i32 %116, -1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %195
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %190, %193
  %199 = phi i32 [ %197, %193 ], [ 0, %190 ]
  %200 = icmp slt i8 %112, 1
  br i1 %200, label %207, label %201

201:                                              ; preds = %198
  %202 = add nsw i32 %113, -1
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %216

207:                                              ; preds = %201, %198
  %208 = load i32, i32* %7, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = load i32*, i32** %97, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 3
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %213 = bitcast i8* %212 to i32*
  %214 = select i1 %209, i32* %211, i32* %213
  %215 = load i32, i32* %214, align 4
  br label %218

216:                                              ; preds = %201
  %217 = add nsw i32 %205, %199
  br label %218

218:                                              ; preds = %216, %207
  %219 = phi i32 [ %215, %207 ], [ %217, %216 ]
  %220 = icmp slt i32 %120, %135
  br i1 %220, label %221, label %257

221:                                              ; preds = %218
  %222 = icmp slt i32 %143, %163
  %223 = icmp slt i32 %171, %191
  %224 = icmp slt i32 %199, %219
  %225 = getelementptr inbounds i32, i32* %98, i64 1
  %226 = load i32, i32* %225, align 4
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %228 = bitcast [16 x i8]* %227 to i32*
  %229 = load i32, i32* %228, align 8
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %231 = bitcast i8* %230 to i32*
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.6", %"class.tflite::SequentialTensorWriter.6"* %3, i64 0, i32 0
  %234 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.6", %"class.tflite::SequentialTensorWriter.6"* %3, i64 0, i32 1
  %235 = sext i32 %199 to i64
  %236 = sext i32 %171 to i64
  %237 = sext i32 %232 to i64
  %238 = sext i32 %143 to i64
  %239 = sext i32 %229 to i64
  %240 = sext i32 %120 to i64
  %241 = sext i32 %226 to i64
  %242 = sext i32 %135 to i64
  %243 = sext i32 %163 to i64
  %244 = sext i32 %191 to i64
  %245 = sext i32 %219 to i64
  %246 = sub nsw i64 %245, %235
  %247 = xor i64 %235, -1
  %248 = and i64 %246, 1
  %249 = icmp eq i64 %248, 0
  %250 = add nsw i64 %235, 1
  %251 = sub nsw i64 0, %245
  %252 = icmp eq i64 %247, %251
  br label %253

253:                                              ; preds = %272, %221
  %254 = phi i64 [ %240, %221 ], [ %273, %272 ]
  br i1 %222, label %255, label %272

255:                                              ; preds = %253
  %256 = mul nsw i64 %254, %241
  br label %267

257:                                              ; preds = %272, %218
  %258 = load i32, i32* %7, align 8
  %259 = icmp sgt i32 %258, 5
  br i1 %259, label %260, label %266

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %262 = load i32*, i32** %261, align 8
  %263 = icmp eq i32* %262, null
  br i1 %263, label %266, label %264

264:                                              ; preds = %260
  %265 = bitcast i32* %262 to i8*
  tail call void @_ZdaPv(i8* %265) #10
  br label %266

266:                                              ; preds = %257, %260, %264
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void

267:                                              ; preds = %289, %255
  %268 = phi i64 [ %238, %255 ], [ %290, %289 ]
  br i1 %223, label %269, label %289

269:                                              ; preds = %267
  %270 = add nsw i64 %256, %268
  %271 = mul nsw i64 %270, %239
  br label %275

272:                                              ; preds = %289, %253
  %273 = add nsw i64 %254, 1
  %274 = icmp eq i64 %273, %242
  br i1 %274, label %257, label %253

275:                                              ; preds = %292, %269
  %276 = phi i64 [ %236, %269 ], [ %293, %292 ]
  br i1 %224, label %277, label %292

277:                                              ; preds = %275
  %278 = add nsw i64 %271, %276
  %279 = mul nsw i64 %278, %237
  br i1 %249, label %287, label %280

280:                                              ; preds = %277
  %281 = add nsw i64 %279, %235
  %282 = load i8*, i8** %233, align 8
  %283 = getelementptr inbounds i8, i8* %282, i64 %281
  %284 = load i8, i8* %283, align 1
  %285 = load i8*, i8** %234, align 8
  %286 = getelementptr inbounds i8, i8* %285, i64 1
  store i8* %286, i8** %234, align 8
  store i8 %284, i8* %285, align 1
  br label %287

287:                                              ; preds = %280, %277
  %288 = phi i64 [ %250, %280 ], [ %235, %277 ]
  br i1 %252, label %292, label %295

289:                                              ; preds = %292, %267
  %290 = add nsw i64 %268, 1
  %291 = icmp eq i64 %290, %243
  br i1 %291, label %272, label %267

292:                                              ; preds = %287, %295, %275
  %293 = add nsw i64 %276, 1
  %294 = icmp eq i64 %293, %244
  br i1 %294, label %289, label %275

295:                                              ; preds = %287, %295
  %296 = phi i64 [ %310, %295 ], [ %288, %287 ]
  %297 = add nsw i64 %279, %296
  %298 = load i8*, i8** %233, align 8
  %299 = getelementptr inbounds i8, i8* %298, i64 %297
  %300 = load i8, i8* %299, align 1
  %301 = load i8*, i8** %234, align 8
  %302 = getelementptr inbounds i8, i8* %301, i64 1
  store i8* %302, i8** %234, align 8
  store i8 %300, i8* %301, align 1
  %303 = add nsw i64 %296, 1
  %304 = add nsw i64 %279, %303
  %305 = load i8*, i8** %233, align 8
  %306 = getelementptr inbounds i8, i8* %305, i64 %304
  %307 = load i8, i8* %306, align 1
  %308 = load i8*, i8** %234, align 8
  %309 = getelementptr inbounds i8, i8* %308, i64 1
  store i8* %309, i8** %234, align 8
  store i8 %307, i8* %308, align 1
  %310 = add nsw i64 %296, 2
  %311 = icmp eq i64 %310, %245
  br i1 %311, label %292, label %295
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops5SliceIhEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::SequentialTensorWriter.7"*) local_unnamed_addr #8 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %7, align 8, !alias.scope !113
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8, !noalias !113
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  tail call void @abort() #11, !noalias !113
  unreachable

12:                                               ; preds = %4
  store i32 4, i32* %7, align 8, !alias.scope !113
  %13 = sub i32 4, %9
  %14 = icmp sgt i32 %13, 0
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %14, label %16, label %96

16:                                               ; preds = %12
  %17 = bitcast %union.anon* %15 to [5 x i32]*
  %18 = zext i32 %13 to i64
  %19 = icmp ult i32 %13, 8
  br i1 %19, label %89, label %20

20:                                               ; preds = %16
  %21 = and i64 %18, 4294967288
  %22 = add nsw i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp ult i64 %22, 56
  br i1 %26, label %74, label %27

27:                                               ; preds = %20
  %28 = sub nsw i64 %24, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %71, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %72, %29 ]
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %30
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %33, align 8, !alias.scope !113
  %34 = getelementptr inbounds i32, i32* %32, i64 4
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !113
  %36 = or i64 %30, 8
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %36
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !113
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !113
  %41 = or i64 %30, 16
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !113
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !113
  %46 = or i64 %30, 24
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !113
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !113
  %51 = or i64 %30, 32
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !113
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !113
  %56 = or i64 %30, 40
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !113
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !113
  %61 = or i64 %30, 48
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !113
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !113
  %66 = or i64 %30, 56
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !113
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !113
  %71 = add i64 %30, 64
  %72 = add i64 %31, -8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %29, !llvm.loop !116

74:                                               ; preds = %29, %20
  %75 = phi i64 [ 0, %20 ], [ %71, %29 ]
  %76 = icmp eq i64 %25, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %74, %77
  %78 = phi i64 [ %84, %77 ], [ %75, %74 ]
  %79 = phi i64 [ %85, %77 ], [ %25, %74 ]
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !113
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !113
  %84 = add i64 %78, 8
  %85 = add i64 %79, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %77, !llvm.loop !117

87:                                               ; preds = %77, %74
  %88 = icmp eq i64 %21, %18
  br i1 %88, label %96, label %89

89:                                               ; preds = %87, %16
  %90 = phi i64 [ 0, %16 ], [ %21, %87 ]
  br label %91

91:                                               ; preds = %89, %91
  %92 = phi i64 [ %94, %91 ], [ %90, %89 ]
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %92
  store i32 1, i32* %93, align 4, !alias.scope !113
  %94 = add nuw nsw i64 %92, 1
  %95 = icmp eq i64 %94, %18
  br i1 %95, label %96, label %91, !llvm.loop !118

96:                                               ; preds = %91, %87, %12
  %97 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %98 = bitcast %union.anon* %15 to i32*
  %99 = sext i32 %13 to i64
  %100 = getelementptr inbounds i32, i32* %98, i64 %99
  %101 = bitcast i32* %100 to i8*
  %102 = icmp sgt i32 %9, 5
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %104 = getelementptr inbounds %union.anon, %union.anon* %103, i64 0, i32 0
  %105 = load i32*, i32** %104, align 8, !noalias !113
  %106 = bitcast %union.anon* %103 to i32*
  %107 = select i1 %102, i32* %105, i32* %106
  %108 = bitcast i32* %107 to i8*
  %109 = sext i32 %9 to i64
  %110 = shl nsw i64 %109, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %108, i64 %110, i1 false) #9
  %111 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 2
  %112 = load i8, i8* %111, align 4
  %113 = sext i8 %112 to i32
  %114 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 0
  %115 = load i8, i8* %114, align 4
  %116 = sext i8 %115 to i32
  %117 = icmp slt i8 %115, 4
  %118 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 0
  %119 = load i32, i32* %118, align 4
  %120 = select i1 %117, i32 0, i32 %119
  %121 = icmp slt i8 %112, 4
  br i1 %121, label %126, label %122

122:                                              ; preds = %96
  %123 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122, %96
  %127 = load i32, i32* %7, align 8
  %128 = icmp sgt i32 %127, 5
  %129 = load i32*, i32** %97, align 8
  %130 = select i1 %128, i32* %129, i32* %98
  %131 = load i32, i32* %130, align 4
  br label %134

132:                                              ; preds = %122
  %133 = add nsw i32 %124, %120
  br label %134

134:                                              ; preds = %132, %126
  %135 = phi i32 [ %131, %126 ], [ %133, %132 ]
  %136 = icmp slt i8 %115, 3
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = add nsw i32 %116, -3
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  br label %142

142:                                              ; preds = %134, %137
  %143 = phi i32 [ %141, %137 ], [ 0, %134 ]
  %144 = icmp slt i8 %112, 3
  br i1 %144, label %151, label %145

145:                                              ; preds = %142
  %146 = add nsw i32 %113, -3
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %151, label %160

151:                                              ; preds = %145, %142
  %152 = load i32, i32* %7, align 8
  %153 = icmp sgt i32 %152, 5
  %154 = load i32*, i32** %97, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 1
  %156 = bitcast %union.anon* %15 to [5 x i32]*
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %156, i64 0, i64 1
  %158 = select i1 %153, i32* %155, i32* %157
  %159 = load i32, i32* %158, align 4
  br label %162

160:                                              ; preds = %145
  %161 = add nsw i32 %149, %143
  br label %162

162:                                              ; preds = %160, %151
  %163 = phi i32 [ %159, %151 ], [ %161, %160 ]
  %164 = icmp slt i8 %115, 2
  br i1 %164, label %170, label %165

165:                                              ; preds = %162
  %166 = add nsw i32 %116, -2
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %167
  %169 = load i32, i32* %168, align 4
  br label %170

170:                                              ; preds = %162, %165
  %171 = phi i32 [ %169, %165 ], [ 0, %162 ]
  %172 = icmp slt i8 %112, 2
  br i1 %172, label %179, label %173

173:                                              ; preds = %170
  %174 = add nsw i32 %113, -2
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %179, label %188

179:                                              ; preds = %173, %170
  %180 = load i32, i32* %7, align 8
  %181 = icmp sgt i32 %180, 5
  %182 = load i32*, i32** %97, align 8
  %183 = getelementptr inbounds i32, i32* %182, i64 2
  %184 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %185 = bitcast [16 x i8]* %184 to i32*
  %186 = select i1 %181, i32* %183, i32* %185
  %187 = load i32, i32* %186, align 4
  br label %190

188:                                              ; preds = %173
  %189 = add nsw i32 %177, %171
  br label %190

190:                                              ; preds = %188, %179
  %191 = phi i32 [ %187, %179 ], [ %189, %188 ]
  %192 = icmp slt i8 %115, 1
  br i1 %192, label %198, label %193

193:                                              ; preds = %190
  %194 = add nsw i32 %116, -1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %195
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %190, %193
  %199 = phi i32 [ %197, %193 ], [ 0, %190 ]
  %200 = icmp slt i8 %112, 1
  br i1 %200, label %207, label %201

201:                                              ; preds = %198
  %202 = add nsw i32 %113, -1
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %216

207:                                              ; preds = %201, %198
  %208 = load i32, i32* %7, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = load i32*, i32** %97, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 3
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %213 = bitcast i8* %212 to i32*
  %214 = select i1 %209, i32* %211, i32* %213
  %215 = load i32, i32* %214, align 4
  br label %218

216:                                              ; preds = %201
  %217 = add nsw i32 %205, %199
  br label %218

218:                                              ; preds = %216, %207
  %219 = phi i32 [ %215, %207 ], [ %217, %216 ]
  %220 = icmp slt i32 %120, %135
  br i1 %220, label %221, label %257

221:                                              ; preds = %218
  %222 = icmp slt i32 %143, %163
  %223 = icmp slt i32 %171, %191
  %224 = icmp slt i32 %199, %219
  %225 = getelementptr inbounds i32, i32* %98, i64 1
  %226 = load i32, i32* %225, align 4
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %228 = bitcast [16 x i8]* %227 to i32*
  %229 = load i32, i32* %228, align 8
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %231 = bitcast i8* %230 to i32*
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.7", %"class.tflite::SequentialTensorWriter.7"* %3, i64 0, i32 0
  %234 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.7", %"class.tflite::SequentialTensorWriter.7"* %3, i64 0, i32 1
  %235 = sext i32 %199 to i64
  %236 = sext i32 %171 to i64
  %237 = sext i32 %232 to i64
  %238 = sext i32 %143 to i64
  %239 = sext i32 %229 to i64
  %240 = sext i32 %120 to i64
  %241 = sext i32 %226 to i64
  %242 = sext i32 %135 to i64
  %243 = sext i32 %163 to i64
  %244 = sext i32 %191 to i64
  %245 = sext i32 %219 to i64
  %246 = sub nsw i64 %245, %235
  %247 = xor i64 %235, -1
  %248 = and i64 %246, 1
  %249 = icmp eq i64 %248, 0
  %250 = add nsw i64 %235, 1
  %251 = sub nsw i64 0, %245
  %252 = icmp eq i64 %247, %251
  br label %253

253:                                              ; preds = %272, %221
  %254 = phi i64 [ %240, %221 ], [ %273, %272 ]
  br i1 %222, label %255, label %272

255:                                              ; preds = %253
  %256 = mul nsw i64 %254, %241
  br label %267

257:                                              ; preds = %272, %218
  %258 = load i32, i32* %7, align 8
  %259 = icmp sgt i32 %258, 5
  br i1 %259, label %260, label %266

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %262 = load i32*, i32** %261, align 8
  %263 = icmp eq i32* %262, null
  br i1 %263, label %266, label %264

264:                                              ; preds = %260
  %265 = bitcast i32* %262 to i8*
  tail call void @_ZdaPv(i8* %265) #10
  br label %266

266:                                              ; preds = %257, %260, %264
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void

267:                                              ; preds = %289, %255
  %268 = phi i64 [ %238, %255 ], [ %290, %289 ]
  br i1 %223, label %269, label %289

269:                                              ; preds = %267
  %270 = add nsw i64 %256, %268
  %271 = mul nsw i64 %270, %239
  br label %275

272:                                              ; preds = %289, %253
  %273 = add nsw i64 %254, 1
  %274 = icmp eq i64 %273, %242
  br i1 %274, label %257, label %253

275:                                              ; preds = %292, %269
  %276 = phi i64 [ %236, %269 ], [ %293, %292 ]
  br i1 %224, label %277, label %292

277:                                              ; preds = %275
  %278 = add nsw i64 %271, %276
  %279 = mul nsw i64 %278, %237
  br i1 %249, label %287, label %280

280:                                              ; preds = %277
  %281 = add nsw i64 %279, %235
  %282 = load i8*, i8** %233, align 8
  %283 = getelementptr inbounds i8, i8* %282, i64 %281
  %284 = load i8, i8* %283, align 1
  %285 = load i8*, i8** %234, align 8
  %286 = getelementptr inbounds i8, i8* %285, i64 1
  store i8* %286, i8** %234, align 8
  store i8 %284, i8* %285, align 1
  br label %287

287:                                              ; preds = %280, %277
  %288 = phi i64 [ %250, %280 ], [ %235, %277 ]
  br i1 %252, label %292, label %295

289:                                              ; preds = %292, %267
  %290 = add nsw i64 %268, 1
  %291 = icmp eq i64 %290, %243
  br i1 %291, label %272, label %267

292:                                              ; preds = %287, %295, %275
  %293 = add nsw i64 %276, 1
  %294 = icmp eq i64 %293, %244
  br i1 %294, label %289, label %275

295:                                              ; preds = %287, %295
  %296 = phi i64 [ %310, %295 ], [ %288, %287 ]
  %297 = add nsw i64 %279, %296
  %298 = load i8*, i8** %233, align 8
  %299 = getelementptr inbounds i8, i8* %298, i64 %297
  %300 = load i8, i8* %299, align 1
  %301 = load i8*, i8** %234, align 8
  %302 = getelementptr inbounds i8, i8* %301, i64 1
  store i8* %302, i8** %234, align 8
  store i8 %300, i8* %301, align 1
  %303 = add nsw i64 %296, 1
  %304 = add nsw i64 %279, %303
  %305 = load i8*, i8** %233, align 8
  %306 = getelementptr inbounds i8, i8* %305, i64 %304
  %307 = load i8, i8* %306, align 1
  %308 = load i8*, i8** %234, align 8
  %309 = getelementptr inbounds i8, i8* %308, i64 1
  store i8* %309, i8** %234, align 8
  store i8 %307, i8* %308, align 1
  %310 = add nsw i64 %296, 2
  %311 = icmp eq i64 %310, %245
  br i1 %311, label %292, label %295
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops5SliceIbEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::SequentialTensorWriter.8"*) local_unnamed_addr #8 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %7, align 8, !alias.scope !119
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8, !noalias !119
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  tail call void @abort() #11, !noalias !119
  unreachable

12:                                               ; preds = %4
  store i32 4, i32* %7, align 8, !alias.scope !119
  %13 = sub i32 4, %9
  %14 = icmp sgt i32 %13, 0
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %14, label %16, label %96

16:                                               ; preds = %12
  %17 = bitcast %union.anon* %15 to [5 x i32]*
  %18 = zext i32 %13 to i64
  %19 = icmp ult i32 %13, 8
  br i1 %19, label %89, label %20

20:                                               ; preds = %16
  %21 = and i64 %18, 4294967288
  %22 = add nsw i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp ult i64 %22, 56
  br i1 %26, label %74, label %27

27:                                               ; preds = %20
  %28 = sub nsw i64 %24, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %71, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %72, %29 ]
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %30
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %33, align 8, !alias.scope !119
  %34 = getelementptr inbounds i32, i32* %32, i64 4
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !119
  %36 = or i64 %30, 8
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %36
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !119
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !119
  %41 = or i64 %30, 16
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !119
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !119
  %46 = or i64 %30, 24
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !119
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !119
  %51 = or i64 %30, 32
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !119
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !119
  %56 = or i64 %30, 40
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !119
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !119
  %61 = or i64 %30, 48
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !119
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !119
  %66 = or i64 %30, 56
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !119
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !119
  %71 = add i64 %30, 64
  %72 = add i64 %31, -8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %29, !llvm.loop !122

74:                                               ; preds = %29, %20
  %75 = phi i64 [ 0, %20 ], [ %71, %29 ]
  %76 = icmp eq i64 %25, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %74, %77
  %78 = phi i64 [ %84, %77 ], [ %75, %74 ]
  %79 = phi i64 [ %85, %77 ], [ %25, %74 ]
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !119
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !119
  %84 = add i64 %78, 8
  %85 = add i64 %79, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %77, !llvm.loop !123

87:                                               ; preds = %77, %74
  %88 = icmp eq i64 %21, %18
  br i1 %88, label %96, label %89

89:                                               ; preds = %87, %16
  %90 = phi i64 [ 0, %16 ], [ %21, %87 ]
  br label %91

91:                                               ; preds = %89, %91
  %92 = phi i64 [ %94, %91 ], [ %90, %89 ]
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %92
  store i32 1, i32* %93, align 4, !alias.scope !119
  %94 = add nuw nsw i64 %92, 1
  %95 = icmp eq i64 %94, %18
  br i1 %95, label %96, label %91, !llvm.loop !124

96:                                               ; preds = %91, %87, %12
  %97 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %98 = bitcast %union.anon* %15 to i32*
  %99 = sext i32 %13 to i64
  %100 = getelementptr inbounds i32, i32* %98, i64 %99
  %101 = bitcast i32* %100 to i8*
  %102 = icmp sgt i32 %9, 5
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %104 = getelementptr inbounds %union.anon, %union.anon* %103, i64 0, i32 0
  %105 = load i32*, i32** %104, align 8, !noalias !119
  %106 = bitcast %union.anon* %103 to i32*
  %107 = select i1 %102, i32* %105, i32* %106
  %108 = bitcast i32* %107 to i8*
  %109 = sext i32 %9 to i64
  %110 = shl nsw i64 %109, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %108, i64 %110, i1 false) #9
  %111 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 2
  %112 = load i8, i8* %111, align 4
  %113 = sext i8 %112 to i32
  %114 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 0
  %115 = load i8, i8* %114, align 4
  %116 = sext i8 %115 to i32
  %117 = icmp slt i8 %115, 4
  %118 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 0
  %119 = load i32, i32* %118, align 4
  %120 = select i1 %117, i32 0, i32 %119
  %121 = icmp slt i8 %112, 4
  br i1 %121, label %126, label %122

122:                                              ; preds = %96
  %123 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122, %96
  %127 = load i32, i32* %7, align 8
  %128 = icmp sgt i32 %127, 5
  %129 = load i32*, i32** %97, align 8
  %130 = select i1 %128, i32* %129, i32* %98
  %131 = load i32, i32* %130, align 4
  br label %134

132:                                              ; preds = %122
  %133 = add nsw i32 %124, %120
  br label %134

134:                                              ; preds = %132, %126
  %135 = phi i32 [ %131, %126 ], [ %133, %132 ]
  %136 = icmp slt i8 %115, 3
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = add nsw i32 %116, -3
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  br label %142

142:                                              ; preds = %134, %137
  %143 = phi i32 [ %141, %137 ], [ 0, %134 ]
  %144 = icmp slt i8 %112, 3
  br i1 %144, label %151, label %145

145:                                              ; preds = %142
  %146 = add nsw i32 %113, -3
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %151, label %160

151:                                              ; preds = %145, %142
  %152 = load i32, i32* %7, align 8
  %153 = icmp sgt i32 %152, 5
  %154 = load i32*, i32** %97, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 1
  %156 = bitcast %union.anon* %15 to [5 x i32]*
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %156, i64 0, i64 1
  %158 = select i1 %153, i32* %155, i32* %157
  %159 = load i32, i32* %158, align 4
  br label %162

160:                                              ; preds = %145
  %161 = add nsw i32 %149, %143
  br label %162

162:                                              ; preds = %160, %151
  %163 = phi i32 [ %159, %151 ], [ %161, %160 ]
  %164 = icmp slt i8 %115, 2
  br i1 %164, label %170, label %165

165:                                              ; preds = %162
  %166 = add nsw i32 %116, -2
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %167
  %169 = load i32, i32* %168, align 4
  br label %170

170:                                              ; preds = %162, %165
  %171 = phi i32 [ %169, %165 ], [ 0, %162 ]
  %172 = icmp slt i8 %112, 2
  br i1 %172, label %179, label %173

173:                                              ; preds = %170
  %174 = add nsw i32 %113, -2
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %179, label %188

179:                                              ; preds = %173, %170
  %180 = load i32, i32* %7, align 8
  %181 = icmp sgt i32 %180, 5
  %182 = load i32*, i32** %97, align 8
  %183 = getelementptr inbounds i32, i32* %182, i64 2
  %184 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %185 = bitcast [16 x i8]* %184 to i32*
  %186 = select i1 %181, i32* %183, i32* %185
  %187 = load i32, i32* %186, align 4
  br label %190

188:                                              ; preds = %173
  %189 = add nsw i32 %177, %171
  br label %190

190:                                              ; preds = %188, %179
  %191 = phi i32 [ %187, %179 ], [ %189, %188 ]
  %192 = icmp slt i8 %115, 1
  br i1 %192, label %198, label %193

193:                                              ; preds = %190
  %194 = add nsw i32 %116, -1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %195
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %190, %193
  %199 = phi i32 [ %197, %193 ], [ 0, %190 ]
  %200 = icmp slt i8 %112, 1
  br i1 %200, label %207, label %201

201:                                              ; preds = %198
  %202 = add nsw i32 %113, -1
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %216

207:                                              ; preds = %201, %198
  %208 = load i32, i32* %7, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = load i32*, i32** %97, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 3
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %213 = bitcast i8* %212 to i32*
  %214 = select i1 %209, i32* %211, i32* %213
  %215 = load i32, i32* %214, align 4
  br label %218

216:                                              ; preds = %201
  %217 = add nsw i32 %205, %199
  br label %218

218:                                              ; preds = %216, %207
  %219 = phi i32 [ %215, %207 ], [ %217, %216 ]
  %220 = icmp slt i32 %120, %135
  br i1 %220, label %221, label %257

221:                                              ; preds = %218
  %222 = icmp slt i32 %143, %163
  %223 = icmp slt i32 %171, %191
  %224 = icmp slt i32 %199, %219
  %225 = getelementptr inbounds i32, i32* %98, i64 1
  %226 = load i32, i32* %225, align 4
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %228 = bitcast [16 x i8]* %227 to i32*
  %229 = load i32, i32* %228, align 8
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %231 = bitcast i8* %230 to i32*
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.8", %"class.tflite::SequentialTensorWriter.8"* %3, i64 0, i32 0
  %234 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.8", %"class.tflite::SequentialTensorWriter.8"* %3, i64 0, i32 1
  %235 = sext i32 %199 to i64
  %236 = sext i32 %171 to i64
  %237 = sext i32 %232 to i64
  %238 = sext i32 %143 to i64
  %239 = sext i32 %229 to i64
  %240 = sext i32 %120 to i64
  %241 = sext i32 %226 to i64
  %242 = sext i32 %135 to i64
  %243 = sext i32 %163 to i64
  %244 = sext i32 %191 to i64
  %245 = sext i32 %219 to i64
  %246 = sub nsw i64 %245, %235
  %247 = xor i64 %235, -1
  %248 = and i64 %246, 1
  %249 = icmp eq i64 %248, 0
  %250 = add nsw i64 %235, 1
  %251 = sub nsw i64 0, %245
  %252 = icmp eq i64 %247, %251
  br label %253

253:                                              ; preds = %272, %221
  %254 = phi i64 [ %240, %221 ], [ %273, %272 ]
  br i1 %222, label %255, label %272

255:                                              ; preds = %253
  %256 = mul nsw i64 %254, %241
  br label %267

257:                                              ; preds = %272, %218
  %258 = load i32, i32* %7, align 8
  %259 = icmp sgt i32 %258, 5
  br i1 %259, label %260, label %266

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %262 = load i32*, i32** %261, align 8
  %263 = icmp eq i32* %262, null
  br i1 %263, label %266, label %264

264:                                              ; preds = %260
  %265 = bitcast i32* %262 to i8*
  tail call void @_ZdaPv(i8* %265) #10
  br label %266

266:                                              ; preds = %257, %260, %264
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void

267:                                              ; preds = %289, %255
  %268 = phi i64 [ %238, %255 ], [ %290, %289 ]
  br i1 %223, label %269, label %289

269:                                              ; preds = %267
  %270 = add nsw i64 %256, %268
  %271 = mul nsw i64 %270, %239
  br label %275

272:                                              ; preds = %289, %253
  %273 = add nsw i64 %254, 1
  %274 = icmp eq i64 %273, %242
  br i1 %274, label %257, label %253

275:                                              ; preds = %292, %269
  %276 = phi i64 [ %236, %269 ], [ %293, %292 ]
  br i1 %224, label %277, label %292

277:                                              ; preds = %275
  %278 = add nsw i64 %271, %276
  %279 = mul nsw i64 %278, %237
  br i1 %249, label %287, label %280

280:                                              ; preds = %277
  %281 = add nsw i64 %279, %235
  %282 = load i8*, i8** %233, align 8
  %283 = getelementptr inbounds i8, i8* %282, i64 %281
  %284 = load i8, i8* %283, align 1, !range !125
  %285 = load i8*, i8** %234, align 8
  %286 = getelementptr inbounds i8, i8* %285, i64 1
  store i8* %286, i8** %234, align 8
  store i8 %284, i8* %285, align 1
  br label %287

287:                                              ; preds = %280, %277
  %288 = phi i64 [ %250, %280 ], [ %235, %277 ]
  br i1 %252, label %292, label %295

289:                                              ; preds = %292, %267
  %290 = add nsw i64 %268, 1
  %291 = icmp eq i64 %290, %243
  br i1 %291, label %272, label %267

292:                                              ; preds = %287, %295, %275
  %293 = add nsw i64 %276, 1
  %294 = icmp eq i64 %293, %244
  br i1 %294, label %289, label %275

295:                                              ; preds = %287, %295
  %296 = phi i64 [ %310, %295 ], [ %288, %287 ]
  %297 = add nsw i64 %279, %296
  %298 = load i8*, i8** %233, align 8
  %299 = getelementptr inbounds i8, i8* %298, i64 %297
  %300 = load i8, i8* %299, align 1, !range !125
  %301 = load i8*, i8** %234, align 8
  %302 = getelementptr inbounds i8, i8* %301, i64 1
  store i8* %302, i8** %234, align 8
  store i8 %300, i8* %301, align 1
  %303 = add nsw i64 %296, 1
  %304 = add nsw i64 %279, %303
  %305 = load i8*, i8** %233, align 8
  %306 = getelementptr inbounds i8, i8* %305, i64 %304
  %307 = load i8, i8* %306, align 1, !range !125
  %308 = load i8*, i8** %234, align 8
  %309 = getelementptr inbounds i8, i8* %308, i64 1
  store i8* %309, i8** %234, align 8
  store i8 %307, i8* %308, align 1
  %310 = add nsw i64 %296, 2
  %311 = icmp eq i64 %310, %245
  br i1 %311, label %292, label %295
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops5SliceINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvRKNS_11SliceParamsERKNS_12RuntimeShapeESE_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::SequentialTensorWriter.9"*) local_unnamed_addr #8 comdat {
  %5 = alloca %"struct.tflite::StringRef", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %8, align 8, !alias.scope !126
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8, !noalias !126
  %11 = icmp sgt i32 %10, 4
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  tail call void @abort() #11, !noalias !126
  unreachable

13:                                               ; preds = %4
  store i32 4, i32* %8, align 8, !alias.scope !126
  %14 = sub i32 4, %10
  %15 = icmp sgt i32 %14, 0
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %15, label %17, label %97

17:                                               ; preds = %13
  %18 = bitcast %union.anon* %16 to [5 x i32]*
  %19 = zext i32 %14 to i64
  %20 = icmp ult i32 %14, 8
  br i1 %20, label %90, label %21

21:                                               ; preds = %17
  %22 = and i64 %19, 4294967288
  %23 = add nsw i64 %22, -8
  %24 = lshr exact i64 %23, 3
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 7
  %27 = icmp ult i64 %23, 56
  br i1 %27, label %75, label %28

28:                                               ; preds = %21
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %72, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %73, %30 ]
  %33 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %31
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %34, align 8, !alias.scope !126
  %35 = getelementptr inbounds i32, i32* %33, i64 4
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !126
  %37 = or i64 %31, 8
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %37
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !126
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !126
  %42 = or i64 %31, 16
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !126
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !126
  %47 = or i64 %31, 24
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !126
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !126
  %52 = or i64 %31, 32
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !126
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !126
  %57 = or i64 %31, 40
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !126
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !126
  %62 = or i64 %31, 48
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !126
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !126
  %67 = or i64 %31, 56
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !126
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !126
  %72 = add i64 %31, 64
  %73 = add i64 %32, -8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %30, !llvm.loop !129

75:                                               ; preds = %30, %21
  %76 = phi i64 [ 0, %21 ], [ %72, %30 ]
  %77 = icmp eq i64 %26, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %85, %78 ], [ %76, %75 ]
  %80 = phi i64 [ %86, %78 ], [ %26, %75 ]
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %79
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !126
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !126
  %85 = add i64 %79, 8
  %86 = add i64 %80, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !130

88:                                               ; preds = %78, %75
  %89 = icmp eq i64 %22, %19
  br i1 %89, label %97, label %90

90:                                               ; preds = %88, %17
  %91 = phi i64 [ 0, %17 ], [ %22, %88 ]
  br label %92

92:                                               ; preds = %90, %92
  %93 = phi i64 [ %95, %92 ], [ %91, %90 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %93
  store i32 1, i32* %94, align 4, !alias.scope !126
  %95 = add nuw nsw i64 %93, 1
  %96 = icmp eq i64 %95, %19
  br i1 %96, label %97, label %92, !llvm.loop !131

97:                                               ; preds = %92, %88, %13
  %98 = getelementptr inbounds %union.anon, %union.anon* %16, i64 0, i32 0
  %99 = bitcast %union.anon* %16 to i32*
  %100 = sext i32 %14 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %10, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !126
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #9
  %112 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 2
  %113 = load i8, i8* %112, align 4
  %114 = sext i8 %113 to i32
  %115 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 0
  %116 = load i8, i8* %115, align 4
  %117 = sext i8 %116 to i32
  %118 = icmp slt i8 %116, 4
  %119 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 0
  %120 = load i32, i32* %119, align 4
  %121 = select i1 %118, i32 0, i32 %120
  %122 = icmp slt i8 %113, 4
  br i1 %122, label %127, label %123

123:                                              ; preds = %97
  %124 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, -1
  br i1 %126, label %127, label %133

127:                                              ; preds = %123, %97
  %128 = load i32, i32* %8, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %98, align 8
  %131 = select i1 %129, i32* %130, i32* %99
  %132 = load i32, i32* %131, align 4
  br label %135

133:                                              ; preds = %123
  %134 = add nsw i32 %125, %121
  br label %135

135:                                              ; preds = %133, %127
  %136 = phi i32 [ %132, %127 ], [ %134, %133 ]
  %137 = icmp slt i8 %116, 3
  br i1 %137, label %143, label %138

138:                                              ; preds = %135
  %139 = add nsw i32 %117, -3
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %140
  %142 = load i32, i32* %141, align 4
  br label %143

143:                                              ; preds = %135, %138
  %144 = phi i32 [ %142, %138 ], [ 0, %135 ]
  %145 = icmp slt i8 %113, 3
  br i1 %145, label %152, label %146

146:                                              ; preds = %143
  %147 = add nsw i32 %114, -3
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, -1
  br i1 %151, label %152, label %161

152:                                              ; preds = %146, %143
  %153 = load i32, i32* %8, align 8
  %154 = icmp sgt i32 %153, 5
  %155 = load i32*, i32** %98, align 8
  %156 = getelementptr inbounds i32, i32* %155, i64 1
  %157 = bitcast %union.anon* %16 to [5 x i32]*
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %157, i64 0, i64 1
  %159 = select i1 %154, i32* %156, i32* %158
  %160 = load i32, i32* %159, align 4
  br label %163

161:                                              ; preds = %146
  %162 = add nsw i32 %150, %144
  br label %163

163:                                              ; preds = %161, %152
  %164 = phi i32 [ %160, %152 ], [ %162, %161 ]
  %165 = icmp slt i8 %116, 2
  br i1 %165, label %171, label %166

166:                                              ; preds = %163
  %167 = add nsw i32 %117, -2
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %168
  %170 = load i32, i32* %169, align 4
  br label %171

171:                                              ; preds = %163, %166
  %172 = phi i32 [ %170, %166 ], [ 0, %163 ]
  %173 = icmp slt i8 %113, 2
  br i1 %173, label %180, label %174

174:                                              ; preds = %171
  %175 = add nsw i32 %114, -2
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %176
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %178, -1
  br i1 %179, label %180, label %189

180:                                              ; preds = %174, %171
  %181 = load i32, i32* %8, align 8
  %182 = icmp sgt i32 %181, 5
  %183 = load i32*, i32** %98, align 8
  %184 = getelementptr inbounds i32, i32* %183, i64 2
  %185 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %186 = bitcast [16 x i8]* %185 to i32*
  %187 = select i1 %182, i32* %184, i32* %186
  %188 = load i32, i32* %187, align 4
  br label %191

189:                                              ; preds = %174
  %190 = add nsw i32 %178, %172
  br label %191

191:                                              ; preds = %189, %180
  %192 = phi i32 [ %188, %180 ], [ %190, %189 ]
  %193 = icmp slt i8 %116, 1
  br i1 %193, label %199, label %194

194:                                              ; preds = %191
  %195 = add nsw i32 %117, -1
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %191, %194
  %200 = phi i32 [ %198, %194 ], [ 0, %191 ]
  %201 = icmp slt i8 %113, 1
  br i1 %201, label %208, label %202

202:                                              ; preds = %199
  %203 = add nsw i32 %114, -1
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %204
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, -1
  br i1 %207, label %208, label %217

208:                                              ; preds = %202, %199
  %209 = load i32, i32* %8, align 8
  %210 = icmp sgt i32 %209, 5
  %211 = load i32*, i32** %98, align 8
  %212 = getelementptr inbounds i32, i32* %211, i64 3
  %213 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %214 = bitcast i8* %213 to i32*
  %215 = select i1 %210, i32* %212, i32* %214
  %216 = load i32, i32* %215, align 4
  br label %219

217:                                              ; preds = %202
  %218 = add nsw i32 %206, %200
  br label %219

219:                                              ; preds = %217, %208
  %220 = phi i32 [ %216, %208 ], [ %218, %217 ]
  %221 = icmp slt i32 %121, %136
  br i1 %221, label %222, label %243

222:                                              ; preds = %219
  %223 = icmp slt i32 %144, %164
  %224 = icmp slt i32 %172, %192
  %225 = icmp slt i32 %200, %220
  %226 = getelementptr inbounds i32, i32* %99, i64 1
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %229 = bitcast [16 x i8]* %228 to i32*
  %230 = load i32, i32* %229, align 8
  %231 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %232 = bitcast i8* %231 to i32*
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %3, i64 0, i32 2
  %235 = bitcast %"struct.tflite::StringRef"* %5 to i8*
  %236 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %3, i64 0, i32 0
  %237 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %5, i64 0, i32 0
  %238 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %5, i64 0, i32 1
  br label %239

239:                                              ; preds = %258, %222
  %240 = phi i32 [ %121, %222 ], [ %259, %258 ]
  br i1 %223, label %241, label %258

241:                                              ; preds = %239
  %242 = mul nsw i32 %227, %240
  br label %253

243:                                              ; preds = %258, %219
  %244 = load i32, i32* %8, align 8
  %245 = icmp sgt i32 %244, 5
  br i1 %245, label %246, label %252

246:                                              ; preds = %243
  %247 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %248 = load i32*, i32** %247, align 8
  %249 = icmp eq i32* %248, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %246
  %251 = bitcast i32* %248 to i8*
  call void @_ZdaPv(i8* %251) #10
  br label %252

252:                                              ; preds = %243, %246, %250
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void

253:                                              ; preds = %266, %241
  %254 = phi i32 [ %144, %241 ], [ %267, %266 ]
  br i1 %224, label %255, label %266

255:                                              ; preds = %253
  %256 = add nsw i32 %242, %254
  %257 = mul nsw i32 %256, %230
  br label %261

258:                                              ; preds = %266, %239
  %259 = add i32 %240, 1
  %260 = icmp eq i32 %259, %136
  br i1 %260, label %243, label %239

261:                                              ; preds = %269, %255
  %262 = phi i32 [ %172, %255 ], [ %270, %269 ]
  br i1 %225, label %263, label %269

263:                                              ; preds = %261
  %264 = add nsw i32 %257, %262
  %265 = mul nsw i32 %264, %233
  br label %272

266:                                              ; preds = %269, %253
  %267 = add i32 %254, 1
  %268 = icmp eq i32 %267, %164
  br i1 %268, label %258, label %253

269:                                              ; preds = %272, %261
  %270 = add i32 %262, 1
  %271 = icmp eq i32 %270, %192
  br i1 %271, label %266, label %261

272:                                              ; preds = %272, %263
  %273 = phi i32 [ %200, %263 ], [ %279, %272 ]
  %274 = add nsw i32 %265, %273
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %235) #9
  %275 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %236, align 8
  %276 = call { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor* %275, i32 %274) #9
  %277 = extractvalue { i8*, i32 } %276, 0
  store i8* %277, i8** %237, align 8
  %278 = extractvalue { i8*, i32 } %276, 1
  store i32 %278, i32* %238, align 8
  call void @_ZN6tflite13DynamicBuffer9AddStringERKNS_9StringRefE(%"class.tflite::DynamicBuffer"* %234, %"struct.tflite::StringRef"* nonnull dereferenceable(16) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %235) #9
  %279 = add i32 %273, 1
  %280 = icmp eq i32 %279, %220
  br i1 %280, label %269, label %272
}

declare void @_ZN6tflite13DynamicBuffer9AddStringERKNS_9StringRefE(%"class.tflite::DynamicBuffer"*, %"struct.tflite::StringRef"* dereferenceable(16)) local_unnamed_addr #2

declare { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor*, i32) local_unnamed_addr #2

declare void @_ZN6tflite13DynamicBuffer13WriteToTensorEP12TfLiteTensorP14TfLiteIntArray(%"class.tflite::DynamicBuffer"*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops5SliceIfEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::SequentialTensorWriter"*) local_unnamed_addr #8 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %7, align 8, !alias.scope !132
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8, !noalias !132
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  tail call void @abort() #11, !noalias !132
  unreachable

12:                                               ; preds = %4
  store i32 4, i32* %7, align 8, !alias.scope !132
  %13 = sub i32 4, %9
  %14 = icmp sgt i32 %13, 0
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %14, label %16, label %96

16:                                               ; preds = %12
  %17 = bitcast %union.anon* %15 to [5 x i32]*
  %18 = zext i32 %13 to i64
  %19 = icmp ult i32 %13, 8
  br i1 %19, label %89, label %20

20:                                               ; preds = %16
  %21 = and i64 %18, 4294967288
  %22 = add nsw i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp ult i64 %22, 56
  br i1 %26, label %74, label %27

27:                                               ; preds = %20
  %28 = sub nsw i64 %24, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %71, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %72, %29 ]
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %30
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %33, align 8, !alias.scope !132
  %34 = getelementptr inbounds i32, i32* %32, i64 4
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !132
  %36 = or i64 %30, 8
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %36
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !132
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !132
  %41 = or i64 %30, 16
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !132
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !132
  %46 = or i64 %30, 24
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !132
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !132
  %51 = or i64 %30, 32
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !132
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !132
  %56 = or i64 %30, 40
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !132
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !132
  %61 = or i64 %30, 48
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !132
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !132
  %66 = or i64 %30, 56
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !132
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !132
  %71 = add i64 %30, 64
  %72 = add i64 %31, -8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %29, !llvm.loop !135

74:                                               ; preds = %29, %20
  %75 = phi i64 [ 0, %20 ], [ %71, %29 ]
  %76 = icmp eq i64 %25, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %74, %77
  %78 = phi i64 [ %84, %77 ], [ %75, %74 ]
  %79 = phi i64 [ %85, %77 ], [ %25, %74 ]
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !132
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !132
  %84 = add i64 %78, 8
  %85 = add i64 %79, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %77, !llvm.loop !136

87:                                               ; preds = %77, %74
  %88 = icmp eq i64 %21, %18
  br i1 %88, label %96, label %89

89:                                               ; preds = %87, %16
  %90 = phi i64 [ 0, %16 ], [ %21, %87 ]
  br label %91

91:                                               ; preds = %89, %91
  %92 = phi i64 [ %94, %91 ], [ %90, %89 ]
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %92
  store i32 1, i32* %93, align 4, !alias.scope !132
  %94 = add nuw nsw i64 %92, 1
  %95 = icmp eq i64 %94, %18
  br i1 %95, label %96, label %91, !llvm.loop !137

96:                                               ; preds = %91, %87, %12
  %97 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %98 = bitcast %union.anon* %15 to i32*
  %99 = sext i32 %13 to i64
  %100 = getelementptr inbounds i32, i32* %98, i64 %99
  %101 = bitcast i32* %100 to i8*
  %102 = icmp sgt i32 %9, 5
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %104 = getelementptr inbounds %union.anon, %union.anon* %103, i64 0, i32 0
  %105 = load i32*, i32** %104, align 8, !noalias !132
  %106 = bitcast %union.anon* %103 to i32*
  %107 = select i1 %102, i32* %105, i32* %106
  %108 = bitcast i32* %107 to i8*
  %109 = sext i32 %9 to i64
  %110 = shl nsw i64 %109, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %108, i64 %110, i1 false) #9
  %111 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 2
  %112 = load i8, i8* %111, align 4
  %113 = sext i8 %112 to i32
  %114 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 0
  %115 = load i8, i8* %114, align 4
  %116 = sext i8 %115 to i32
  %117 = icmp slt i8 %115, 4
  %118 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 0
  %119 = load i32, i32* %118, align 4
  %120 = select i1 %117, i32 0, i32 %119
  %121 = icmp slt i8 %112, 4
  br i1 %121, label %126, label %122

122:                                              ; preds = %96
  %123 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122, %96
  %127 = load i32, i32* %7, align 8
  %128 = icmp sgt i32 %127, 5
  %129 = load i32*, i32** %97, align 8
  %130 = select i1 %128, i32* %129, i32* %98
  %131 = load i32, i32* %130, align 4
  br label %134

132:                                              ; preds = %122
  %133 = add nsw i32 %124, %120
  br label %134

134:                                              ; preds = %132, %126
  %135 = phi i32 [ %131, %126 ], [ %133, %132 ]
  %136 = icmp slt i8 %115, 3
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = add nsw i32 %116, -3
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  br label %142

142:                                              ; preds = %134, %137
  %143 = phi i32 [ %141, %137 ], [ 0, %134 ]
  %144 = icmp slt i8 %112, 3
  br i1 %144, label %151, label %145

145:                                              ; preds = %142
  %146 = add nsw i32 %113, -3
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %151, label %160

151:                                              ; preds = %145, %142
  %152 = load i32, i32* %7, align 8
  %153 = icmp sgt i32 %152, 5
  %154 = load i32*, i32** %97, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 1
  %156 = bitcast %union.anon* %15 to [5 x i32]*
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %156, i64 0, i64 1
  %158 = select i1 %153, i32* %155, i32* %157
  %159 = load i32, i32* %158, align 4
  br label %162

160:                                              ; preds = %145
  %161 = add nsw i32 %149, %143
  br label %162

162:                                              ; preds = %160, %151
  %163 = phi i32 [ %159, %151 ], [ %161, %160 ]
  %164 = icmp slt i8 %115, 2
  br i1 %164, label %170, label %165

165:                                              ; preds = %162
  %166 = add nsw i32 %116, -2
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %167
  %169 = load i32, i32* %168, align 4
  br label %170

170:                                              ; preds = %162, %165
  %171 = phi i32 [ %169, %165 ], [ 0, %162 ]
  %172 = icmp slt i8 %112, 2
  br i1 %172, label %179, label %173

173:                                              ; preds = %170
  %174 = add nsw i32 %113, -2
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %179, label %188

179:                                              ; preds = %173, %170
  %180 = load i32, i32* %7, align 8
  %181 = icmp sgt i32 %180, 5
  %182 = load i32*, i32** %97, align 8
  %183 = getelementptr inbounds i32, i32* %182, i64 2
  %184 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %185 = bitcast [16 x i8]* %184 to i32*
  %186 = select i1 %181, i32* %183, i32* %185
  %187 = load i32, i32* %186, align 4
  br label %190

188:                                              ; preds = %173
  %189 = add nsw i32 %177, %171
  br label %190

190:                                              ; preds = %188, %179
  %191 = phi i32 [ %187, %179 ], [ %189, %188 ]
  %192 = icmp slt i8 %115, 1
  br i1 %192, label %198, label %193

193:                                              ; preds = %190
  %194 = add nsw i32 %116, -1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %195
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %190, %193
  %199 = phi i32 [ %197, %193 ], [ 0, %190 ]
  %200 = icmp slt i8 %112, 1
  br i1 %200, label %207, label %201

201:                                              ; preds = %198
  %202 = add nsw i32 %113, -1
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %216

207:                                              ; preds = %201, %198
  %208 = load i32, i32* %7, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = load i32*, i32** %97, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 3
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %213 = bitcast i8* %212 to i32*
  %214 = select i1 %209, i32* %211, i32* %213
  %215 = load i32, i32* %214, align 4
  br label %218

216:                                              ; preds = %201
  %217 = add nsw i32 %205, %199
  br label %218

218:                                              ; preds = %216, %207
  %219 = phi i32 [ %215, %207 ], [ %217, %216 ]
  %220 = icmp slt i32 %120, %135
  br i1 %220, label %221, label %253

221:                                              ; preds = %218
  %222 = icmp slt i32 %143, %163
  %223 = icmp slt i32 %171, %191
  %224 = sub nsw i32 %219, %199
  %225 = icmp sgt i32 %224, 0
  %226 = getelementptr inbounds i32, i32* %98, i64 1
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %229 = bitcast [16 x i8]* %228 to i32*
  %230 = load i32, i32* %229, align 8
  %231 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %232 = bitcast i8* %231 to i32*
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"class.tflite::SequentialTensorWriter", %"class.tflite::SequentialTensorWriter"* %3, i64 0, i32 1
  %235 = bitcast float** %234 to i8**
  %236 = getelementptr inbounds %"class.tflite::SequentialTensorWriter", %"class.tflite::SequentialTensorWriter"* %3, i64 0, i32 0
  %237 = sext i32 %224 to i64
  %238 = shl nsw i64 %237, 2
  %239 = sext i32 %171 to i64
  %240 = sext i32 %233 to i64
  %241 = sext i32 %199 to i64
  %242 = sext i32 %143 to i64
  %243 = sext i32 %230 to i64
  %244 = sext i32 %120 to i64
  %245 = sext i32 %227 to i64
  %246 = sext i32 %135 to i64
  %247 = sext i32 %163 to i64
  %248 = sext i32 %191 to i64
  br label %249

249:                                              ; preds = %268, %221
  %250 = phi i64 [ %244, %221 ], [ %269, %268 ]
  br i1 %222, label %251, label %268

251:                                              ; preds = %249
  %252 = mul nsw i64 %250, %245
  br label %263

253:                                              ; preds = %268, %218
  %254 = load i32, i32* %7, align 8
  %255 = icmp sgt i32 %254, 5
  br i1 %255, label %256, label %262

256:                                              ; preds = %253
  %257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %258 = load i32*, i32** %257, align 8
  %259 = icmp eq i32* %258, null
  br i1 %259, label %262, label %260

260:                                              ; preds = %256
  %261 = bitcast i32* %258 to i8*
  tail call void @_ZdaPv(i8* %261) #10
  br label %262

262:                                              ; preds = %253, %256, %260
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void

263:                                              ; preds = %271, %251
  %264 = phi i64 [ %242, %251 ], [ %272, %271 ]
  br i1 %223, label %265, label %271

265:                                              ; preds = %263
  %266 = add nsw i64 %252, %264
  %267 = mul nsw i64 %266, %243
  br label %274

268:                                              ; preds = %271, %249
  %269 = add nsw i64 %250, 1
  %270 = icmp eq i64 %269, %246
  br i1 %270, label %253, label %249

271:                                              ; preds = %286, %263
  %272 = add nsw i64 %264, 1
  %273 = icmp eq i64 %272, %247
  br i1 %273, label %268, label %263

274:                                              ; preds = %286, %265
  %275 = phi i64 [ %239, %265 ], [ %287, %286 ]
  br i1 %225, label %276, label %286

276:                                              ; preds = %274
  %277 = add nsw i64 %267, %275
  %278 = mul nsw i64 %277, %240
  %279 = add nsw i64 %278, %241
  %280 = load i8*, i8** %235, align 8
  %281 = load float*, float** %236, align 8
  %282 = getelementptr inbounds float, float* %281, i64 %279
  %283 = bitcast float* %282 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %280, i8* align 4 %283, i64 %238, i1 false) #9
  %284 = load float*, float** %234, align 8
  %285 = getelementptr inbounds float, float* %284, i64 %237
  store float* %285, float** %234, align 8
  br label %286

286:                                              ; preds = %276, %274
  %287 = add nsw i64 %275, 1
  %288 = icmp eq i64 %287, %248
  br i1 %288, label %271, label %274
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops5SliceIiEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::SequentialTensorWriter.4"*) local_unnamed_addr #8 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %7, align 8, !alias.scope !138
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8, !noalias !138
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  tail call void @abort() #11, !noalias !138
  unreachable

12:                                               ; preds = %4
  store i32 4, i32* %7, align 8, !alias.scope !138
  %13 = sub i32 4, %9
  %14 = icmp sgt i32 %13, 0
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %14, label %16, label %96

16:                                               ; preds = %12
  %17 = bitcast %union.anon* %15 to [5 x i32]*
  %18 = zext i32 %13 to i64
  %19 = icmp ult i32 %13, 8
  br i1 %19, label %89, label %20

20:                                               ; preds = %16
  %21 = and i64 %18, 4294967288
  %22 = add nsw i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp ult i64 %22, 56
  br i1 %26, label %74, label %27

27:                                               ; preds = %20
  %28 = sub nsw i64 %24, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %71, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %72, %29 ]
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %30
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %33, align 8, !alias.scope !138
  %34 = getelementptr inbounds i32, i32* %32, i64 4
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !138
  %36 = or i64 %30, 8
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %36
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !138
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !138
  %41 = or i64 %30, 16
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !138
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !138
  %46 = or i64 %30, 24
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !138
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !138
  %51 = or i64 %30, 32
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !138
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !138
  %56 = or i64 %30, 40
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !138
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !138
  %61 = or i64 %30, 48
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !138
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !138
  %66 = or i64 %30, 56
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !138
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !138
  %71 = add i64 %30, 64
  %72 = add i64 %31, -8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %29, !llvm.loop !141

74:                                               ; preds = %29, %20
  %75 = phi i64 [ 0, %20 ], [ %71, %29 ]
  %76 = icmp eq i64 %25, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %74, %77
  %78 = phi i64 [ %84, %77 ], [ %75, %74 ]
  %79 = phi i64 [ %85, %77 ], [ %25, %74 ]
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !138
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !138
  %84 = add i64 %78, 8
  %85 = add i64 %79, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %77, !llvm.loop !142

87:                                               ; preds = %77, %74
  %88 = icmp eq i64 %21, %18
  br i1 %88, label %96, label %89

89:                                               ; preds = %87, %16
  %90 = phi i64 [ 0, %16 ], [ %21, %87 ]
  br label %91

91:                                               ; preds = %89, %91
  %92 = phi i64 [ %94, %91 ], [ %90, %89 ]
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %92
  store i32 1, i32* %93, align 4, !alias.scope !138
  %94 = add nuw nsw i64 %92, 1
  %95 = icmp eq i64 %94, %18
  br i1 %95, label %96, label %91, !llvm.loop !143

96:                                               ; preds = %91, %87, %12
  %97 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %98 = bitcast %union.anon* %15 to i32*
  %99 = sext i32 %13 to i64
  %100 = getelementptr inbounds i32, i32* %98, i64 %99
  %101 = bitcast i32* %100 to i8*
  %102 = icmp sgt i32 %9, 5
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %104 = getelementptr inbounds %union.anon, %union.anon* %103, i64 0, i32 0
  %105 = load i32*, i32** %104, align 8, !noalias !138
  %106 = bitcast %union.anon* %103 to i32*
  %107 = select i1 %102, i32* %105, i32* %106
  %108 = bitcast i32* %107 to i8*
  %109 = sext i32 %9 to i64
  %110 = shl nsw i64 %109, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %108, i64 %110, i1 false) #9
  %111 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 2
  %112 = load i8, i8* %111, align 4
  %113 = sext i8 %112 to i32
  %114 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 0
  %115 = load i8, i8* %114, align 4
  %116 = sext i8 %115 to i32
  %117 = icmp slt i8 %115, 4
  %118 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 0
  %119 = load i32, i32* %118, align 4
  %120 = select i1 %117, i32 0, i32 %119
  %121 = icmp slt i8 %112, 4
  br i1 %121, label %126, label %122

122:                                              ; preds = %96
  %123 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122, %96
  %127 = load i32, i32* %7, align 8
  %128 = icmp sgt i32 %127, 5
  %129 = load i32*, i32** %97, align 8
  %130 = select i1 %128, i32* %129, i32* %98
  %131 = load i32, i32* %130, align 4
  br label %134

132:                                              ; preds = %122
  %133 = add nsw i32 %124, %120
  br label %134

134:                                              ; preds = %132, %126
  %135 = phi i32 [ %131, %126 ], [ %133, %132 ]
  %136 = icmp slt i8 %115, 3
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = add nsw i32 %116, -3
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  br label %142

142:                                              ; preds = %134, %137
  %143 = phi i32 [ %141, %137 ], [ 0, %134 ]
  %144 = icmp slt i8 %112, 3
  br i1 %144, label %151, label %145

145:                                              ; preds = %142
  %146 = add nsw i32 %113, -3
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %151, label %160

151:                                              ; preds = %145, %142
  %152 = load i32, i32* %7, align 8
  %153 = icmp sgt i32 %152, 5
  %154 = load i32*, i32** %97, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 1
  %156 = bitcast %union.anon* %15 to [5 x i32]*
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %156, i64 0, i64 1
  %158 = select i1 %153, i32* %155, i32* %157
  %159 = load i32, i32* %158, align 4
  br label %162

160:                                              ; preds = %145
  %161 = add nsw i32 %149, %143
  br label %162

162:                                              ; preds = %160, %151
  %163 = phi i32 [ %159, %151 ], [ %161, %160 ]
  %164 = icmp slt i8 %115, 2
  br i1 %164, label %170, label %165

165:                                              ; preds = %162
  %166 = add nsw i32 %116, -2
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %167
  %169 = load i32, i32* %168, align 4
  br label %170

170:                                              ; preds = %162, %165
  %171 = phi i32 [ %169, %165 ], [ 0, %162 ]
  %172 = icmp slt i8 %112, 2
  br i1 %172, label %179, label %173

173:                                              ; preds = %170
  %174 = add nsw i32 %113, -2
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %179, label %188

179:                                              ; preds = %173, %170
  %180 = load i32, i32* %7, align 8
  %181 = icmp sgt i32 %180, 5
  %182 = load i32*, i32** %97, align 8
  %183 = getelementptr inbounds i32, i32* %182, i64 2
  %184 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %185 = bitcast [16 x i8]* %184 to i32*
  %186 = select i1 %181, i32* %183, i32* %185
  %187 = load i32, i32* %186, align 4
  br label %190

188:                                              ; preds = %173
  %189 = add nsw i32 %177, %171
  br label %190

190:                                              ; preds = %188, %179
  %191 = phi i32 [ %187, %179 ], [ %189, %188 ]
  %192 = icmp slt i8 %115, 1
  br i1 %192, label %198, label %193

193:                                              ; preds = %190
  %194 = add nsw i32 %116, -1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %195
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %190, %193
  %199 = phi i32 [ %197, %193 ], [ 0, %190 ]
  %200 = icmp slt i8 %112, 1
  br i1 %200, label %207, label %201

201:                                              ; preds = %198
  %202 = add nsw i32 %113, -1
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %216

207:                                              ; preds = %201, %198
  %208 = load i32, i32* %7, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = load i32*, i32** %97, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 3
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %213 = bitcast i8* %212 to i32*
  %214 = select i1 %209, i32* %211, i32* %213
  %215 = load i32, i32* %214, align 4
  br label %218

216:                                              ; preds = %201
  %217 = add nsw i32 %205, %199
  br label %218

218:                                              ; preds = %216, %207
  %219 = phi i32 [ %215, %207 ], [ %217, %216 ]
  %220 = icmp slt i32 %120, %135
  br i1 %220, label %221, label %253

221:                                              ; preds = %218
  %222 = icmp slt i32 %143, %163
  %223 = icmp slt i32 %171, %191
  %224 = sub nsw i32 %219, %199
  %225 = icmp sgt i32 %224, 0
  %226 = getelementptr inbounds i32, i32* %98, i64 1
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %229 = bitcast [16 x i8]* %228 to i32*
  %230 = load i32, i32* %229, align 8
  %231 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %232 = bitcast i8* %231 to i32*
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.4", %"class.tflite::SequentialTensorWriter.4"* %3, i64 0, i32 1
  %235 = bitcast i32** %234 to i8**
  %236 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.4", %"class.tflite::SequentialTensorWriter.4"* %3, i64 0, i32 0
  %237 = sext i32 %224 to i64
  %238 = shl nsw i64 %237, 2
  %239 = sext i32 %171 to i64
  %240 = sext i32 %233 to i64
  %241 = sext i32 %199 to i64
  %242 = sext i32 %143 to i64
  %243 = sext i32 %230 to i64
  %244 = sext i32 %120 to i64
  %245 = sext i32 %227 to i64
  %246 = sext i32 %135 to i64
  %247 = sext i32 %163 to i64
  %248 = sext i32 %191 to i64
  br label %249

249:                                              ; preds = %268, %221
  %250 = phi i64 [ %244, %221 ], [ %269, %268 ]
  br i1 %222, label %251, label %268

251:                                              ; preds = %249
  %252 = mul nsw i64 %250, %245
  br label %263

253:                                              ; preds = %268, %218
  %254 = load i32, i32* %7, align 8
  %255 = icmp sgt i32 %254, 5
  br i1 %255, label %256, label %262

256:                                              ; preds = %253
  %257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %258 = load i32*, i32** %257, align 8
  %259 = icmp eq i32* %258, null
  br i1 %259, label %262, label %260

260:                                              ; preds = %256
  %261 = bitcast i32* %258 to i8*
  tail call void @_ZdaPv(i8* %261) #10
  br label %262

262:                                              ; preds = %253, %256, %260
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void

263:                                              ; preds = %271, %251
  %264 = phi i64 [ %242, %251 ], [ %272, %271 ]
  br i1 %223, label %265, label %271

265:                                              ; preds = %263
  %266 = add nsw i64 %252, %264
  %267 = mul nsw i64 %266, %243
  br label %274

268:                                              ; preds = %271, %249
  %269 = add nsw i64 %250, 1
  %270 = icmp eq i64 %269, %246
  br i1 %270, label %253, label %249

271:                                              ; preds = %286, %263
  %272 = add nsw i64 %264, 1
  %273 = icmp eq i64 %272, %247
  br i1 %273, label %268, label %263

274:                                              ; preds = %286, %265
  %275 = phi i64 [ %239, %265 ], [ %287, %286 ]
  br i1 %225, label %276, label %286

276:                                              ; preds = %274
  %277 = add nsw i64 %267, %275
  %278 = mul nsw i64 %277, %240
  %279 = add nsw i64 %278, %241
  %280 = load i8*, i8** %235, align 8
  %281 = load i32*, i32** %236, align 8
  %282 = getelementptr inbounds i32, i32* %281, i64 %279
  %283 = bitcast i32* %282 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %280, i8* align 4 %283, i64 %238, i1 false) #9
  %284 = load i32*, i32** %234, align 8
  %285 = getelementptr inbounds i32, i32* %284, i64 %237
  store i32* %285, i32** %234, align 8
  br label %286

286:                                              ; preds = %276, %274
  %287 = add nsw i64 %275, 1
  %288 = icmp eq i64 %287, %248
  br i1 %288, label %271, label %274
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops5SliceIlEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::SequentialTensorWriter.5"*) local_unnamed_addr #8 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %7, align 8, !alias.scope !144
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8, !noalias !144
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  tail call void @abort() #11, !noalias !144
  unreachable

12:                                               ; preds = %4
  store i32 4, i32* %7, align 8, !alias.scope !144
  %13 = sub i32 4, %9
  %14 = icmp sgt i32 %13, 0
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %14, label %16, label %96

16:                                               ; preds = %12
  %17 = bitcast %union.anon* %15 to [5 x i32]*
  %18 = zext i32 %13 to i64
  %19 = icmp ult i32 %13, 8
  br i1 %19, label %89, label %20

20:                                               ; preds = %16
  %21 = and i64 %18, 4294967288
  %22 = add nsw i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp ult i64 %22, 56
  br i1 %26, label %74, label %27

27:                                               ; preds = %20
  %28 = sub nsw i64 %24, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %71, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %72, %29 ]
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %30
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %33, align 8, !alias.scope !144
  %34 = getelementptr inbounds i32, i32* %32, i64 4
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !144
  %36 = or i64 %30, 8
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %36
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !144
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !144
  %41 = or i64 %30, 16
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !144
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !144
  %46 = or i64 %30, 24
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !144
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !144
  %51 = or i64 %30, 32
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !144
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !144
  %56 = or i64 %30, 40
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !144
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !144
  %61 = or i64 %30, 48
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !144
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !144
  %66 = or i64 %30, 56
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !144
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !144
  %71 = add i64 %30, 64
  %72 = add i64 %31, -8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %29, !llvm.loop !147

74:                                               ; preds = %29, %20
  %75 = phi i64 [ 0, %20 ], [ %71, %29 ]
  %76 = icmp eq i64 %25, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %74, %77
  %78 = phi i64 [ %84, %77 ], [ %75, %74 ]
  %79 = phi i64 [ %85, %77 ], [ %25, %74 ]
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !144
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !144
  %84 = add i64 %78, 8
  %85 = add i64 %79, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %77, !llvm.loop !148

87:                                               ; preds = %77, %74
  %88 = icmp eq i64 %21, %18
  br i1 %88, label %96, label %89

89:                                               ; preds = %87, %16
  %90 = phi i64 [ 0, %16 ], [ %21, %87 ]
  br label %91

91:                                               ; preds = %89, %91
  %92 = phi i64 [ %94, %91 ], [ %90, %89 ]
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %92
  store i32 1, i32* %93, align 4, !alias.scope !144
  %94 = add nuw nsw i64 %92, 1
  %95 = icmp eq i64 %94, %18
  br i1 %95, label %96, label %91, !llvm.loop !149

96:                                               ; preds = %91, %87, %12
  %97 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %98 = bitcast %union.anon* %15 to i32*
  %99 = sext i32 %13 to i64
  %100 = getelementptr inbounds i32, i32* %98, i64 %99
  %101 = bitcast i32* %100 to i8*
  %102 = icmp sgt i32 %9, 5
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %104 = getelementptr inbounds %union.anon, %union.anon* %103, i64 0, i32 0
  %105 = load i32*, i32** %104, align 8, !noalias !144
  %106 = bitcast %union.anon* %103 to i32*
  %107 = select i1 %102, i32* %105, i32* %106
  %108 = bitcast i32* %107 to i8*
  %109 = sext i32 %9 to i64
  %110 = shl nsw i64 %109, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %108, i64 %110, i1 false) #9
  %111 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 2
  %112 = load i8, i8* %111, align 4
  %113 = sext i8 %112 to i32
  %114 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 0
  %115 = load i8, i8* %114, align 4
  %116 = sext i8 %115 to i32
  %117 = icmp slt i8 %115, 4
  %118 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 0
  %119 = load i32, i32* %118, align 4
  %120 = select i1 %117, i32 0, i32 %119
  %121 = icmp slt i8 %112, 4
  br i1 %121, label %126, label %122

122:                                              ; preds = %96
  %123 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122, %96
  %127 = load i32, i32* %7, align 8
  %128 = icmp sgt i32 %127, 5
  %129 = load i32*, i32** %97, align 8
  %130 = select i1 %128, i32* %129, i32* %98
  %131 = load i32, i32* %130, align 4
  br label %134

132:                                              ; preds = %122
  %133 = add nsw i32 %124, %120
  br label %134

134:                                              ; preds = %132, %126
  %135 = phi i32 [ %131, %126 ], [ %133, %132 ]
  %136 = icmp slt i8 %115, 3
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = add nsw i32 %116, -3
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  br label %142

142:                                              ; preds = %134, %137
  %143 = phi i32 [ %141, %137 ], [ 0, %134 ]
  %144 = icmp slt i8 %112, 3
  br i1 %144, label %151, label %145

145:                                              ; preds = %142
  %146 = add nsw i32 %113, -3
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %151, label %160

151:                                              ; preds = %145, %142
  %152 = load i32, i32* %7, align 8
  %153 = icmp sgt i32 %152, 5
  %154 = load i32*, i32** %97, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 1
  %156 = bitcast %union.anon* %15 to [5 x i32]*
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %156, i64 0, i64 1
  %158 = select i1 %153, i32* %155, i32* %157
  %159 = load i32, i32* %158, align 4
  br label %162

160:                                              ; preds = %145
  %161 = add nsw i32 %149, %143
  br label %162

162:                                              ; preds = %160, %151
  %163 = phi i32 [ %159, %151 ], [ %161, %160 ]
  %164 = icmp slt i8 %115, 2
  br i1 %164, label %170, label %165

165:                                              ; preds = %162
  %166 = add nsw i32 %116, -2
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %167
  %169 = load i32, i32* %168, align 4
  br label %170

170:                                              ; preds = %162, %165
  %171 = phi i32 [ %169, %165 ], [ 0, %162 ]
  %172 = icmp slt i8 %112, 2
  br i1 %172, label %179, label %173

173:                                              ; preds = %170
  %174 = add nsw i32 %113, -2
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %179, label %188

179:                                              ; preds = %173, %170
  %180 = load i32, i32* %7, align 8
  %181 = icmp sgt i32 %180, 5
  %182 = load i32*, i32** %97, align 8
  %183 = getelementptr inbounds i32, i32* %182, i64 2
  %184 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %185 = bitcast [16 x i8]* %184 to i32*
  %186 = select i1 %181, i32* %183, i32* %185
  %187 = load i32, i32* %186, align 4
  br label %190

188:                                              ; preds = %173
  %189 = add nsw i32 %177, %171
  br label %190

190:                                              ; preds = %188, %179
  %191 = phi i32 [ %187, %179 ], [ %189, %188 ]
  %192 = icmp slt i8 %115, 1
  br i1 %192, label %198, label %193

193:                                              ; preds = %190
  %194 = add nsw i32 %116, -1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %195
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %190, %193
  %199 = phi i32 [ %197, %193 ], [ 0, %190 ]
  %200 = icmp slt i8 %112, 1
  br i1 %200, label %207, label %201

201:                                              ; preds = %198
  %202 = add nsw i32 %113, -1
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %216

207:                                              ; preds = %201, %198
  %208 = load i32, i32* %7, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = load i32*, i32** %97, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 3
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %213 = bitcast i8* %212 to i32*
  %214 = select i1 %209, i32* %211, i32* %213
  %215 = load i32, i32* %214, align 4
  br label %218

216:                                              ; preds = %201
  %217 = add nsw i32 %205, %199
  br label %218

218:                                              ; preds = %216, %207
  %219 = phi i32 [ %215, %207 ], [ %217, %216 ]
  %220 = icmp slt i32 %120, %135
  br i1 %220, label %221, label %253

221:                                              ; preds = %218
  %222 = icmp slt i32 %143, %163
  %223 = icmp slt i32 %171, %191
  %224 = sub nsw i32 %219, %199
  %225 = icmp sgt i32 %224, 0
  %226 = getelementptr inbounds i32, i32* %98, i64 1
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %229 = bitcast [16 x i8]* %228 to i32*
  %230 = load i32, i32* %229, align 8
  %231 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %232 = bitcast i8* %231 to i32*
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.5", %"class.tflite::SequentialTensorWriter.5"* %3, i64 0, i32 1
  %235 = bitcast i64** %234 to i8**
  %236 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.5", %"class.tflite::SequentialTensorWriter.5"* %3, i64 0, i32 0
  %237 = sext i32 %224 to i64
  %238 = shl nsw i64 %237, 3
  %239 = sext i32 %171 to i64
  %240 = sext i32 %233 to i64
  %241 = sext i32 %199 to i64
  %242 = sext i32 %143 to i64
  %243 = sext i32 %230 to i64
  %244 = sext i32 %120 to i64
  %245 = sext i32 %227 to i64
  %246 = sext i32 %135 to i64
  %247 = sext i32 %163 to i64
  %248 = sext i32 %191 to i64
  br label %249

249:                                              ; preds = %268, %221
  %250 = phi i64 [ %244, %221 ], [ %269, %268 ]
  br i1 %222, label %251, label %268

251:                                              ; preds = %249
  %252 = mul nsw i64 %250, %245
  br label %263

253:                                              ; preds = %268, %218
  %254 = load i32, i32* %7, align 8
  %255 = icmp sgt i32 %254, 5
  br i1 %255, label %256, label %262

256:                                              ; preds = %253
  %257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %258 = load i32*, i32** %257, align 8
  %259 = icmp eq i32* %258, null
  br i1 %259, label %262, label %260

260:                                              ; preds = %256
  %261 = bitcast i32* %258 to i8*
  tail call void @_ZdaPv(i8* %261) #10
  br label %262

262:                                              ; preds = %253, %256, %260
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void

263:                                              ; preds = %271, %251
  %264 = phi i64 [ %242, %251 ], [ %272, %271 ]
  br i1 %223, label %265, label %271

265:                                              ; preds = %263
  %266 = add nsw i64 %252, %264
  %267 = mul nsw i64 %266, %243
  br label %274

268:                                              ; preds = %271, %249
  %269 = add nsw i64 %250, 1
  %270 = icmp eq i64 %269, %246
  br i1 %270, label %253, label %249

271:                                              ; preds = %286, %263
  %272 = add nsw i64 %264, 1
  %273 = icmp eq i64 %272, %247
  br i1 %273, label %268, label %263

274:                                              ; preds = %286, %265
  %275 = phi i64 [ %239, %265 ], [ %287, %286 ]
  br i1 %225, label %276, label %286

276:                                              ; preds = %274
  %277 = add nsw i64 %267, %275
  %278 = mul nsw i64 %277, %240
  %279 = add nsw i64 %278, %241
  %280 = load i8*, i8** %235, align 8
  %281 = load i64*, i64** %236, align 8
  %282 = getelementptr inbounds i64, i64* %281, i64 %279
  %283 = bitcast i64* %282 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %283, i64 %238, i1 false) #9
  %284 = load i64*, i64** %234, align 8
  %285 = getelementptr inbounds i64, i64* %284, i64 %237
  store i64* %285, i64** %234, align 8
  br label %286

286:                                              ; preds = %276, %274
  %287 = add nsw i64 %275, 1
  %288 = icmp eq i64 %287, %248
  br i1 %288, label %271, label %274
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops5SliceIaEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::SequentialTensorWriter.6"*) local_unnamed_addr #8 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %7, align 8, !alias.scope !150
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8, !noalias !150
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  tail call void @abort() #11, !noalias !150
  unreachable

12:                                               ; preds = %4
  store i32 4, i32* %7, align 8, !alias.scope !150
  %13 = sub i32 4, %9
  %14 = icmp sgt i32 %13, 0
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %14, label %16, label %96

16:                                               ; preds = %12
  %17 = bitcast %union.anon* %15 to [5 x i32]*
  %18 = zext i32 %13 to i64
  %19 = icmp ult i32 %13, 8
  br i1 %19, label %89, label %20

20:                                               ; preds = %16
  %21 = and i64 %18, 4294967288
  %22 = add nsw i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp ult i64 %22, 56
  br i1 %26, label %74, label %27

27:                                               ; preds = %20
  %28 = sub nsw i64 %24, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %71, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %72, %29 ]
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %30
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %33, align 8, !alias.scope !150
  %34 = getelementptr inbounds i32, i32* %32, i64 4
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !150
  %36 = or i64 %30, 8
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %36
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !150
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !150
  %41 = or i64 %30, 16
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !150
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !150
  %46 = or i64 %30, 24
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !150
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !150
  %51 = or i64 %30, 32
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !150
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !150
  %56 = or i64 %30, 40
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !150
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !150
  %61 = or i64 %30, 48
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !150
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !150
  %66 = or i64 %30, 56
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !150
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !150
  %71 = add i64 %30, 64
  %72 = add i64 %31, -8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %29, !llvm.loop !153

74:                                               ; preds = %29, %20
  %75 = phi i64 [ 0, %20 ], [ %71, %29 ]
  %76 = icmp eq i64 %25, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %74, %77
  %78 = phi i64 [ %84, %77 ], [ %75, %74 ]
  %79 = phi i64 [ %85, %77 ], [ %25, %74 ]
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !150
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !150
  %84 = add i64 %78, 8
  %85 = add i64 %79, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %77, !llvm.loop !154

87:                                               ; preds = %77, %74
  %88 = icmp eq i64 %21, %18
  br i1 %88, label %96, label %89

89:                                               ; preds = %87, %16
  %90 = phi i64 [ 0, %16 ], [ %21, %87 ]
  br label %91

91:                                               ; preds = %89, %91
  %92 = phi i64 [ %94, %91 ], [ %90, %89 ]
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %92
  store i32 1, i32* %93, align 4, !alias.scope !150
  %94 = add nuw nsw i64 %92, 1
  %95 = icmp eq i64 %94, %18
  br i1 %95, label %96, label %91, !llvm.loop !155

96:                                               ; preds = %91, %87, %12
  %97 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %98 = bitcast %union.anon* %15 to i32*
  %99 = sext i32 %13 to i64
  %100 = getelementptr inbounds i32, i32* %98, i64 %99
  %101 = bitcast i32* %100 to i8*
  %102 = icmp sgt i32 %9, 5
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %104 = getelementptr inbounds %union.anon, %union.anon* %103, i64 0, i32 0
  %105 = load i32*, i32** %104, align 8, !noalias !150
  %106 = bitcast %union.anon* %103 to i32*
  %107 = select i1 %102, i32* %105, i32* %106
  %108 = bitcast i32* %107 to i8*
  %109 = sext i32 %9 to i64
  %110 = shl nsw i64 %109, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %108, i64 %110, i1 false) #9
  %111 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 2
  %112 = load i8, i8* %111, align 4
  %113 = sext i8 %112 to i32
  %114 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 0
  %115 = load i8, i8* %114, align 4
  %116 = sext i8 %115 to i32
  %117 = icmp slt i8 %115, 4
  %118 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 0
  %119 = load i32, i32* %118, align 4
  %120 = select i1 %117, i32 0, i32 %119
  %121 = icmp slt i8 %112, 4
  br i1 %121, label %126, label %122

122:                                              ; preds = %96
  %123 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122, %96
  %127 = load i32, i32* %7, align 8
  %128 = icmp sgt i32 %127, 5
  %129 = load i32*, i32** %97, align 8
  %130 = select i1 %128, i32* %129, i32* %98
  %131 = load i32, i32* %130, align 4
  br label %134

132:                                              ; preds = %122
  %133 = add nsw i32 %124, %120
  br label %134

134:                                              ; preds = %132, %126
  %135 = phi i32 [ %131, %126 ], [ %133, %132 ]
  %136 = icmp slt i8 %115, 3
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = add nsw i32 %116, -3
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  br label %142

142:                                              ; preds = %134, %137
  %143 = phi i32 [ %141, %137 ], [ 0, %134 ]
  %144 = icmp slt i8 %112, 3
  br i1 %144, label %151, label %145

145:                                              ; preds = %142
  %146 = add nsw i32 %113, -3
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %151, label %160

151:                                              ; preds = %145, %142
  %152 = load i32, i32* %7, align 8
  %153 = icmp sgt i32 %152, 5
  %154 = load i32*, i32** %97, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 1
  %156 = bitcast %union.anon* %15 to [5 x i32]*
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %156, i64 0, i64 1
  %158 = select i1 %153, i32* %155, i32* %157
  %159 = load i32, i32* %158, align 4
  br label %162

160:                                              ; preds = %145
  %161 = add nsw i32 %149, %143
  br label %162

162:                                              ; preds = %160, %151
  %163 = phi i32 [ %159, %151 ], [ %161, %160 ]
  %164 = icmp slt i8 %115, 2
  br i1 %164, label %170, label %165

165:                                              ; preds = %162
  %166 = add nsw i32 %116, -2
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %167
  %169 = load i32, i32* %168, align 4
  br label %170

170:                                              ; preds = %162, %165
  %171 = phi i32 [ %169, %165 ], [ 0, %162 ]
  %172 = icmp slt i8 %112, 2
  br i1 %172, label %179, label %173

173:                                              ; preds = %170
  %174 = add nsw i32 %113, -2
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %179, label %188

179:                                              ; preds = %173, %170
  %180 = load i32, i32* %7, align 8
  %181 = icmp sgt i32 %180, 5
  %182 = load i32*, i32** %97, align 8
  %183 = getelementptr inbounds i32, i32* %182, i64 2
  %184 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %185 = bitcast [16 x i8]* %184 to i32*
  %186 = select i1 %181, i32* %183, i32* %185
  %187 = load i32, i32* %186, align 4
  br label %190

188:                                              ; preds = %173
  %189 = add nsw i32 %177, %171
  br label %190

190:                                              ; preds = %188, %179
  %191 = phi i32 [ %187, %179 ], [ %189, %188 ]
  %192 = icmp slt i8 %115, 1
  br i1 %192, label %198, label %193

193:                                              ; preds = %190
  %194 = add nsw i32 %116, -1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %195
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %190, %193
  %199 = phi i32 [ %197, %193 ], [ 0, %190 ]
  %200 = icmp slt i8 %112, 1
  br i1 %200, label %207, label %201

201:                                              ; preds = %198
  %202 = add nsw i32 %113, -1
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %216

207:                                              ; preds = %201, %198
  %208 = load i32, i32* %7, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = load i32*, i32** %97, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 3
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %213 = bitcast i8* %212 to i32*
  %214 = select i1 %209, i32* %211, i32* %213
  %215 = load i32, i32* %214, align 4
  br label %218

216:                                              ; preds = %201
  %217 = add nsw i32 %205, %199
  br label %218

218:                                              ; preds = %216, %207
  %219 = phi i32 [ %215, %207 ], [ %217, %216 ]
  %220 = icmp slt i32 %120, %135
  br i1 %220, label %221, label %251

221:                                              ; preds = %218
  %222 = icmp slt i32 %143, %163
  %223 = icmp slt i32 %171, %191
  %224 = sub nsw i32 %219, %199
  %225 = icmp sgt i32 %224, 0
  %226 = getelementptr inbounds i32, i32* %98, i64 1
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %229 = bitcast [16 x i8]* %228 to i32*
  %230 = load i32, i32* %229, align 8
  %231 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %232 = bitcast i8* %231 to i32*
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.6", %"class.tflite::SequentialTensorWriter.6"* %3, i64 0, i32 1
  %235 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.6", %"class.tflite::SequentialTensorWriter.6"* %3, i64 0, i32 0
  %236 = sext i32 %224 to i64
  %237 = sext i32 %171 to i64
  %238 = sext i32 %233 to i64
  %239 = sext i32 %199 to i64
  %240 = sext i32 %143 to i64
  %241 = sext i32 %230 to i64
  %242 = sext i32 %120 to i64
  %243 = sext i32 %227 to i64
  %244 = sext i32 %135 to i64
  %245 = sext i32 %163 to i64
  %246 = sext i32 %191 to i64
  br label %247

247:                                              ; preds = %266, %221
  %248 = phi i64 [ %242, %221 ], [ %267, %266 ]
  br i1 %222, label %249, label %266

249:                                              ; preds = %247
  %250 = mul nsw i64 %248, %243
  br label %261

251:                                              ; preds = %266, %218
  %252 = load i32, i32* %7, align 8
  %253 = icmp sgt i32 %252, 5
  br i1 %253, label %254, label %260

254:                                              ; preds = %251
  %255 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %256 = load i32*, i32** %255, align 8
  %257 = icmp eq i32* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  %259 = bitcast i32* %256 to i8*
  tail call void @_ZdaPv(i8* %259) #10
  br label %260

260:                                              ; preds = %251, %254, %258
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void

261:                                              ; preds = %269, %249
  %262 = phi i64 [ %240, %249 ], [ %270, %269 ]
  br i1 %223, label %263, label %269

263:                                              ; preds = %261
  %264 = add nsw i64 %250, %262
  %265 = mul nsw i64 %264, %241
  br label %272

266:                                              ; preds = %269, %247
  %267 = add nsw i64 %248, 1
  %268 = icmp eq i64 %267, %244
  br i1 %268, label %251, label %247

269:                                              ; preds = %283, %261
  %270 = add nsw i64 %262, 1
  %271 = icmp eq i64 %270, %245
  br i1 %271, label %266, label %261

272:                                              ; preds = %283, %263
  %273 = phi i64 [ %237, %263 ], [ %284, %283 ]
  br i1 %225, label %274, label %283

274:                                              ; preds = %272
  %275 = add nsw i64 %265, %273
  %276 = mul nsw i64 %275, %238
  %277 = add nsw i64 %276, %239
  %278 = load i8*, i8** %234, align 8
  %279 = load i8*, i8** %235, align 8
  %280 = getelementptr inbounds i8, i8* %279, i64 %277
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %278, i8* align 1 %280, i64 %236, i1 false) #9
  %281 = load i8*, i8** %234, align 8
  %282 = getelementptr inbounds i8, i8* %281, i64 %236
  store i8* %282, i8** %234, align 8
  br label %283

283:                                              ; preds = %274, %272
  %284 = add nsw i64 %273, 1
  %285 = icmp eq i64 %284, %246
  br i1 %285, label %269, label %272
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops5SliceIhEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::SequentialTensorWriter.7"*) local_unnamed_addr #8 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %7, align 8, !alias.scope !156
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8, !noalias !156
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  tail call void @abort() #11, !noalias !156
  unreachable

12:                                               ; preds = %4
  store i32 4, i32* %7, align 8, !alias.scope !156
  %13 = sub i32 4, %9
  %14 = icmp sgt i32 %13, 0
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %14, label %16, label %96

16:                                               ; preds = %12
  %17 = bitcast %union.anon* %15 to [5 x i32]*
  %18 = zext i32 %13 to i64
  %19 = icmp ult i32 %13, 8
  br i1 %19, label %89, label %20

20:                                               ; preds = %16
  %21 = and i64 %18, 4294967288
  %22 = add nsw i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp ult i64 %22, 56
  br i1 %26, label %74, label %27

27:                                               ; preds = %20
  %28 = sub nsw i64 %24, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %71, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %72, %29 ]
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %30
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %33, align 8, !alias.scope !156
  %34 = getelementptr inbounds i32, i32* %32, i64 4
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !156
  %36 = or i64 %30, 8
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %36
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !156
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !156
  %41 = or i64 %30, 16
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !156
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !156
  %46 = or i64 %30, 24
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !156
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !156
  %51 = or i64 %30, 32
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !156
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !156
  %56 = or i64 %30, 40
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !156
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !156
  %61 = or i64 %30, 48
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !156
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !156
  %66 = or i64 %30, 56
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !156
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !156
  %71 = add i64 %30, 64
  %72 = add i64 %31, -8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %29, !llvm.loop !159

74:                                               ; preds = %29, %20
  %75 = phi i64 [ 0, %20 ], [ %71, %29 ]
  %76 = icmp eq i64 %25, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %74, %77
  %78 = phi i64 [ %84, %77 ], [ %75, %74 ]
  %79 = phi i64 [ %85, %77 ], [ %25, %74 ]
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !156
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !156
  %84 = add i64 %78, 8
  %85 = add i64 %79, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %77, !llvm.loop !160

87:                                               ; preds = %77, %74
  %88 = icmp eq i64 %21, %18
  br i1 %88, label %96, label %89

89:                                               ; preds = %87, %16
  %90 = phi i64 [ 0, %16 ], [ %21, %87 ]
  br label %91

91:                                               ; preds = %89, %91
  %92 = phi i64 [ %94, %91 ], [ %90, %89 ]
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %92
  store i32 1, i32* %93, align 4, !alias.scope !156
  %94 = add nuw nsw i64 %92, 1
  %95 = icmp eq i64 %94, %18
  br i1 %95, label %96, label %91, !llvm.loop !161

96:                                               ; preds = %91, %87, %12
  %97 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %98 = bitcast %union.anon* %15 to i32*
  %99 = sext i32 %13 to i64
  %100 = getelementptr inbounds i32, i32* %98, i64 %99
  %101 = bitcast i32* %100 to i8*
  %102 = icmp sgt i32 %9, 5
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %104 = getelementptr inbounds %union.anon, %union.anon* %103, i64 0, i32 0
  %105 = load i32*, i32** %104, align 8, !noalias !156
  %106 = bitcast %union.anon* %103 to i32*
  %107 = select i1 %102, i32* %105, i32* %106
  %108 = bitcast i32* %107 to i8*
  %109 = sext i32 %9 to i64
  %110 = shl nsw i64 %109, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %108, i64 %110, i1 false) #9
  %111 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 2
  %112 = load i8, i8* %111, align 4
  %113 = sext i8 %112 to i32
  %114 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 0
  %115 = load i8, i8* %114, align 4
  %116 = sext i8 %115 to i32
  %117 = icmp slt i8 %115, 4
  %118 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 0
  %119 = load i32, i32* %118, align 4
  %120 = select i1 %117, i32 0, i32 %119
  %121 = icmp slt i8 %112, 4
  br i1 %121, label %126, label %122

122:                                              ; preds = %96
  %123 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122, %96
  %127 = load i32, i32* %7, align 8
  %128 = icmp sgt i32 %127, 5
  %129 = load i32*, i32** %97, align 8
  %130 = select i1 %128, i32* %129, i32* %98
  %131 = load i32, i32* %130, align 4
  br label %134

132:                                              ; preds = %122
  %133 = add nsw i32 %124, %120
  br label %134

134:                                              ; preds = %132, %126
  %135 = phi i32 [ %131, %126 ], [ %133, %132 ]
  %136 = icmp slt i8 %115, 3
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = add nsw i32 %116, -3
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  br label %142

142:                                              ; preds = %134, %137
  %143 = phi i32 [ %141, %137 ], [ 0, %134 ]
  %144 = icmp slt i8 %112, 3
  br i1 %144, label %151, label %145

145:                                              ; preds = %142
  %146 = add nsw i32 %113, -3
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %151, label %160

151:                                              ; preds = %145, %142
  %152 = load i32, i32* %7, align 8
  %153 = icmp sgt i32 %152, 5
  %154 = load i32*, i32** %97, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 1
  %156 = bitcast %union.anon* %15 to [5 x i32]*
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %156, i64 0, i64 1
  %158 = select i1 %153, i32* %155, i32* %157
  %159 = load i32, i32* %158, align 4
  br label %162

160:                                              ; preds = %145
  %161 = add nsw i32 %149, %143
  br label %162

162:                                              ; preds = %160, %151
  %163 = phi i32 [ %159, %151 ], [ %161, %160 ]
  %164 = icmp slt i8 %115, 2
  br i1 %164, label %170, label %165

165:                                              ; preds = %162
  %166 = add nsw i32 %116, -2
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %167
  %169 = load i32, i32* %168, align 4
  br label %170

170:                                              ; preds = %162, %165
  %171 = phi i32 [ %169, %165 ], [ 0, %162 ]
  %172 = icmp slt i8 %112, 2
  br i1 %172, label %179, label %173

173:                                              ; preds = %170
  %174 = add nsw i32 %113, -2
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %179, label %188

179:                                              ; preds = %173, %170
  %180 = load i32, i32* %7, align 8
  %181 = icmp sgt i32 %180, 5
  %182 = load i32*, i32** %97, align 8
  %183 = getelementptr inbounds i32, i32* %182, i64 2
  %184 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %185 = bitcast [16 x i8]* %184 to i32*
  %186 = select i1 %181, i32* %183, i32* %185
  %187 = load i32, i32* %186, align 4
  br label %190

188:                                              ; preds = %173
  %189 = add nsw i32 %177, %171
  br label %190

190:                                              ; preds = %188, %179
  %191 = phi i32 [ %187, %179 ], [ %189, %188 ]
  %192 = icmp slt i8 %115, 1
  br i1 %192, label %198, label %193

193:                                              ; preds = %190
  %194 = add nsw i32 %116, -1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %195
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %190, %193
  %199 = phi i32 [ %197, %193 ], [ 0, %190 ]
  %200 = icmp slt i8 %112, 1
  br i1 %200, label %207, label %201

201:                                              ; preds = %198
  %202 = add nsw i32 %113, -1
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %216

207:                                              ; preds = %201, %198
  %208 = load i32, i32* %7, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = load i32*, i32** %97, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 3
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %213 = bitcast i8* %212 to i32*
  %214 = select i1 %209, i32* %211, i32* %213
  %215 = load i32, i32* %214, align 4
  br label %218

216:                                              ; preds = %201
  %217 = add nsw i32 %205, %199
  br label %218

218:                                              ; preds = %216, %207
  %219 = phi i32 [ %215, %207 ], [ %217, %216 ]
  %220 = icmp slt i32 %120, %135
  br i1 %220, label %221, label %251

221:                                              ; preds = %218
  %222 = icmp slt i32 %143, %163
  %223 = icmp slt i32 %171, %191
  %224 = sub nsw i32 %219, %199
  %225 = icmp sgt i32 %224, 0
  %226 = getelementptr inbounds i32, i32* %98, i64 1
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %229 = bitcast [16 x i8]* %228 to i32*
  %230 = load i32, i32* %229, align 8
  %231 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %232 = bitcast i8* %231 to i32*
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.7", %"class.tflite::SequentialTensorWriter.7"* %3, i64 0, i32 1
  %235 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.7", %"class.tflite::SequentialTensorWriter.7"* %3, i64 0, i32 0
  %236 = sext i32 %224 to i64
  %237 = sext i32 %171 to i64
  %238 = sext i32 %233 to i64
  %239 = sext i32 %199 to i64
  %240 = sext i32 %143 to i64
  %241 = sext i32 %230 to i64
  %242 = sext i32 %120 to i64
  %243 = sext i32 %227 to i64
  %244 = sext i32 %135 to i64
  %245 = sext i32 %163 to i64
  %246 = sext i32 %191 to i64
  br label %247

247:                                              ; preds = %266, %221
  %248 = phi i64 [ %242, %221 ], [ %267, %266 ]
  br i1 %222, label %249, label %266

249:                                              ; preds = %247
  %250 = mul nsw i64 %248, %243
  br label %261

251:                                              ; preds = %266, %218
  %252 = load i32, i32* %7, align 8
  %253 = icmp sgt i32 %252, 5
  br i1 %253, label %254, label %260

254:                                              ; preds = %251
  %255 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %256 = load i32*, i32** %255, align 8
  %257 = icmp eq i32* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  %259 = bitcast i32* %256 to i8*
  tail call void @_ZdaPv(i8* %259) #10
  br label %260

260:                                              ; preds = %251, %254, %258
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void

261:                                              ; preds = %269, %249
  %262 = phi i64 [ %240, %249 ], [ %270, %269 ]
  br i1 %223, label %263, label %269

263:                                              ; preds = %261
  %264 = add nsw i64 %250, %262
  %265 = mul nsw i64 %264, %241
  br label %272

266:                                              ; preds = %269, %247
  %267 = add nsw i64 %248, 1
  %268 = icmp eq i64 %267, %244
  br i1 %268, label %251, label %247

269:                                              ; preds = %283, %261
  %270 = add nsw i64 %262, 1
  %271 = icmp eq i64 %270, %245
  br i1 %271, label %266, label %261

272:                                              ; preds = %283, %263
  %273 = phi i64 [ %237, %263 ], [ %284, %283 ]
  br i1 %225, label %274, label %283

274:                                              ; preds = %272
  %275 = add nsw i64 %265, %273
  %276 = mul nsw i64 %275, %238
  %277 = add nsw i64 %276, %239
  %278 = load i8*, i8** %234, align 8
  %279 = load i8*, i8** %235, align 8
  %280 = getelementptr inbounds i8, i8* %279, i64 %277
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %278, i8* align 1 %280, i64 %236, i1 false) #9
  %281 = load i8*, i8** %234, align 8
  %282 = getelementptr inbounds i8, i8* %281, i64 %236
  store i8* %282, i8** %234, align 8
  br label %283

283:                                              ; preds = %274, %272
  %284 = add nsw i64 %273, 1
  %285 = icmp eq i64 %284, %246
  br i1 %285, label %269, label %272
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops5SliceIbEEvRKNS_11SliceParamsERKNS_12RuntimeShapeES7_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::SequentialTensorWriter.8"*) local_unnamed_addr #8 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %7, align 8, !alias.scope !162
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8, !noalias !162
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  tail call void @abort() #11, !noalias !162
  unreachable

12:                                               ; preds = %4
  store i32 4, i32* %7, align 8, !alias.scope !162
  %13 = sub i32 4, %9
  %14 = icmp sgt i32 %13, 0
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %14, label %16, label %96

16:                                               ; preds = %12
  %17 = bitcast %union.anon* %15 to [5 x i32]*
  %18 = zext i32 %13 to i64
  %19 = icmp ult i32 %13, 8
  br i1 %19, label %89, label %20

20:                                               ; preds = %16
  %21 = and i64 %18, 4294967288
  %22 = add nsw i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp ult i64 %22, 56
  br i1 %26, label %74, label %27

27:                                               ; preds = %20
  %28 = sub nsw i64 %24, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %71, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %72, %29 ]
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %30
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %33, align 8, !alias.scope !162
  %34 = getelementptr inbounds i32, i32* %32, i64 4
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !162
  %36 = or i64 %30, 8
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %36
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !162
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !162
  %41 = or i64 %30, 16
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !162
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !162
  %46 = or i64 %30, 24
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !162
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !162
  %51 = or i64 %30, 32
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !162
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !162
  %56 = or i64 %30, 40
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !162
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !162
  %61 = or i64 %30, 48
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !162
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !162
  %66 = or i64 %30, 56
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !162
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !162
  %71 = add i64 %30, 64
  %72 = add i64 %31, -8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %29, !llvm.loop !165

74:                                               ; preds = %29, %20
  %75 = phi i64 [ 0, %20 ], [ %71, %29 ]
  %76 = icmp eq i64 %25, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %74, %77
  %78 = phi i64 [ %84, %77 ], [ %75, %74 ]
  %79 = phi i64 [ %85, %77 ], [ %25, %74 ]
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !162
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !162
  %84 = add i64 %78, 8
  %85 = add i64 %79, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %77, !llvm.loop !166

87:                                               ; preds = %77, %74
  %88 = icmp eq i64 %21, %18
  br i1 %88, label %96, label %89

89:                                               ; preds = %87, %16
  %90 = phi i64 [ 0, %16 ], [ %21, %87 ]
  br label %91

91:                                               ; preds = %89, %91
  %92 = phi i64 [ %94, %91 ], [ %90, %89 ]
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 %92
  store i32 1, i32* %93, align 4, !alias.scope !162
  %94 = add nuw nsw i64 %92, 1
  %95 = icmp eq i64 %94, %18
  br i1 %95, label %96, label %91, !llvm.loop !167

96:                                               ; preds = %91, %87, %12
  %97 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %98 = bitcast %union.anon* %15 to i32*
  %99 = sext i32 %13 to i64
  %100 = getelementptr inbounds i32, i32* %98, i64 %99
  %101 = bitcast i32* %100 to i8*
  %102 = icmp sgt i32 %9, 5
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %104 = getelementptr inbounds %union.anon, %union.anon* %103, i64 0, i32 0
  %105 = load i32*, i32** %104, align 8, !noalias !162
  %106 = bitcast %union.anon* %103 to i32*
  %107 = select i1 %102, i32* %105, i32* %106
  %108 = bitcast i32* %107 to i8*
  %109 = sext i32 %9 to i64
  %110 = shl nsw i64 %109, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %108, i64 %110, i1 false) #9
  %111 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 2
  %112 = load i8, i8* %111, align 4
  %113 = sext i8 %112 to i32
  %114 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 0
  %115 = load i8, i8* %114, align 4
  %116 = sext i8 %115 to i32
  %117 = icmp slt i8 %115, 4
  %118 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 0
  %119 = load i32, i32* %118, align 4
  %120 = select i1 %117, i32 0, i32 %119
  %121 = icmp slt i8 %112, 4
  br i1 %121, label %126, label %122

122:                                              ; preds = %96
  %123 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122, %96
  %127 = load i32, i32* %7, align 8
  %128 = icmp sgt i32 %127, 5
  %129 = load i32*, i32** %97, align 8
  %130 = select i1 %128, i32* %129, i32* %98
  %131 = load i32, i32* %130, align 4
  br label %134

132:                                              ; preds = %122
  %133 = add nsw i32 %124, %120
  br label %134

134:                                              ; preds = %132, %126
  %135 = phi i32 [ %131, %126 ], [ %133, %132 ]
  %136 = icmp slt i8 %115, 3
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = add nsw i32 %116, -3
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  br label %142

142:                                              ; preds = %134, %137
  %143 = phi i32 [ %141, %137 ], [ 0, %134 ]
  %144 = icmp slt i8 %112, 3
  br i1 %144, label %151, label %145

145:                                              ; preds = %142
  %146 = add nsw i32 %113, -3
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %151, label %160

151:                                              ; preds = %145, %142
  %152 = load i32, i32* %7, align 8
  %153 = icmp sgt i32 %152, 5
  %154 = load i32*, i32** %97, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 1
  %156 = bitcast %union.anon* %15 to [5 x i32]*
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %156, i64 0, i64 1
  %158 = select i1 %153, i32* %155, i32* %157
  %159 = load i32, i32* %158, align 4
  br label %162

160:                                              ; preds = %145
  %161 = add nsw i32 %149, %143
  br label %162

162:                                              ; preds = %160, %151
  %163 = phi i32 [ %159, %151 ], [ %161, %160 ]
  %164 = icmp slt i8 %115, 2
  br i1 %164, label %170, label %165

165:                                              ; preds = %162
  %166 = add nsw i32 %116, -2
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %167
  %169 = load i32, i32* %168, align 4
  br label %170

170:                                              ; preds = %162, %165
  %171 = phi i32 [ %169, %165 ], [ 0, %162 ]
  %172 = icmp slt i8 %112, 2
  br i1 %172, label %179, label %173

173:                                              ; preds = %170
  %174 = add nsw i32 %113, -2
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %179, label %188

179:                                              ; preds = %173, %170
  %180 = load i32, i32* %7, align 8
  %181 = icmp sgt i32 %180, 5
  %182 = load i32*, i32** %97, align 8
  %183 = getelementptr inbounds i32, i32* %182, i64 2
  %184 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %185 = bitcast [16 x i8]* %184 to i32*
  %186 = select i1 %181, i32* %183, i32* %185
  %187 = load i32, i32* %186, align 4
  br label %190

188:                                              ; preds = %173
  %189 = add nsw i32 %177, %171
  br label %190

190:                                              ; preds = %188, %179
  %191 = phi i32 [ %187, %179 ], [ %189, %188 ]
  %192 = icmp slt i8 %115, 1
  br i1 %192, label %198, label %193

193:                                              ; preds = %190
  %194 = add nsw i32 %116, -1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %195
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %190, %193
  %199 = phi i32 [ %197, %193 ], [ 0, %190 ]
  %200 = icmp slt i8 %112, 1
  br i1 %200, label %207, label %201

201:                                              ; preds = %198
  %202 = add nsw i32 %113, -1
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %216

207:                                              ; preds = %201, %198
  %208 = load i32, i32* %7, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = load i32*, i32** %97, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 3
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %213 = bitcast i8* %212 to i32*
  %214 = select i1 %209, i32* %211, i32* %213
  %215 = load i32, i32* %214, align 4
  br label %218

216:                                              ; preds = %201
  %217 = add nsw i32 %205, %199
  br label %218

218:                                              ; preds = %216, %207
  %219 = phi i32 [ %215, %207 ], [ %217, %216 ]
  %220 = icmp slt i32 %120, %135
  br i1 %220, label %221, label %251

221:                                              ; preds = %218
  %222 = icmp slt i32 %143, %163
  %223 = icmp slt i32 %171, %191
  %224 = sub nsw i32 %219, %199
  %225 = icmp sgt i32 %224, 0
  %226 = getelementptr inbounds i32, i32* %98, i64 1
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %229 = bitcast [16 x i8]* %228 to i32*
  %230 = load i32, i32* %229, align 8
  %231 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %232 = bitcast i8* %231 to i32*
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.8", %"class.tflite::SequentialTensorWriter.8"* %3, i64 0, i32 1
  %235 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.8", %"class.tflite::SequentialTensorWriter.8"* %3, i64 0, i32 0
  %236 = sext i32 %224 to i64
  %237 = sext i32 %171 to i64
  %238 = sext i32 %233 to i64
  %239 = sext i32 %199 to i64
  %240 = sext i32 %143 to i64
  %241 = sext i32 %230 to i64
  %242 = sext i32 %120 to i64
  %243 = sext i32 %227 to i64
  %244 = sext i32 %135 to i64
  %245 = sext i32 %163 to i64
  %246 = sext i32 %191 to i64
  br label %247

247:                                              ; preds = %266, %221
  %248 = phi i64 [ %242, %221 ], [ %267, %266 ]
  br i1 %222, label %249, label %266

249:                                              ; preds = %247
  %250 = mul nsw i64 %248, %243
  br label %261

251:                                              ; preds = %266, %218
  %252 = load i32, i32* %7, align 8
  %253 = icmp sgt i32 %252, 5
  br i1 %253, label %254, label %260

254:                                              ; preds = %251
  %255 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %256 = load i32*, i32** %255, align 8
  %257 = icmp eq i32* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  %259 = bitcast i32* %256 to i8*
  tail call void @_ZdaPv(i8* %259) #10
  br label %260

260:                                              ; preds = %251, %254, %258
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void

261:                                              ; preds = %269, %249
  %262 = phi i64 [ %240, %249 ], [ %270, %269 ]
  br i1 %223, label %263, label %269

263:                                              ; preds = %261
  %264 = add nsw i64 %250, %262
  %265 = mul nsw i64 %264, %241
  br label %272

266:                                              ; preds = %269, %247
  %267 = add nsw i64 %248, 1
  %268 = icmp eq i64 %267, %244
  br i1 %268, label %251, label %247

269:                                              ; preds = %283, %261
  %270 = add nsw i64 %262, 1
  %271 = icmp eq i64 %270, %245
  br i1 %271, label %266, label %261

272:                                              ; preds = %283, %263
  %273 = phi i64 [ %237, %263 ], [ %284, %283 ]
  br i1 %225, label %274, label %283

274:                                              ; preds = %272
  %275 = add nsw i64 %265, %273
  %276 = mul nsw i64 %275, %238
  %277 = add nsw i64 %276, %239
  %278 = load i8*, i8** %234, align 8
  %279 = load i8*, i8** %235, align 8
  %280 = getelementptr inbounds i8, i8* %279, i64 %277
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %278, i8* align 1 %280, i64 %236, i1 false) #9
  %281 = load i8*, i8** %234, align 8
  %282 = getelementptr inbounds i8, i8* %281, i64 %236
  store i8* %282, i8** %234, align 8
  br label %283

283:                                              ; preds = %274, %272
  %284 = add nsw i64 %273, 1
  %285 = icmp eq i64 %284, %246
  br i1 %285, label %269, label %272
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops5SliceINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvRKNS_11SliceParamsERKNS_12RuntimeShapeESE_PNS_22SequentialTensorWriterIT_EE(%"struct.tflite::SliceParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::SequentialTensorWriter.9"*) local_unnamed_addr #8 comdat {
  %5 = alloca %"struct.tflite::StringRef", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %8, align 8, !alias.scope !168
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8, !noalias !168
  %11 = icmp sgt i32 %10, 4
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  tail call void @abort() #11, !noalias !168
  unreachable

13:                                               ; preds = %4
  store i32 4, i32* %8, align 8, !alias.scope !168
  %14 = sub i32 4, %10
  %15 = icmp sgt i32 %14, 0
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %15, label %17, label %97

17:                                               ; preds = %13
  %18 = bitcast %union.anon* %16 to [5 x i32]*
  %19 = zext i32 %14 to i64
  %20 = icmp ult i32 %14, 8
  br i1 %20, label %90, label %21

21:                                               ; preds = %17
  %22 = and i64 %19, 4294967288
  %23 = add nsw i64 %22, -8
  %24 = lshr exact i64 %23, 3
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 7
  %27 = icmp ult i64 %23, 56
  br i1 %27, label %75, label %28

28:                                               ; preds = %21
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %72, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %73, %30 ]
  %33 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %31
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %34, align 8, !alias.scope !168
  %35 = getelementptr inbounds i32, i32* %33, i64 4
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !168
  %37 = or i64 %31, 8
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %37
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !168
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !168
  %42 = or i64 %31, 16
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !168
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !168
  %47 = or i64 %31, 24
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !168
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !168
  %52 = or i64 %31, 32
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !168
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !168
  %57 = or i64 %31, 40
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !168
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !168
  %62 = or i64 %31, 48
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !168
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !168
  %67 = or i64 %31, 56
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !168
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !168
  %72 = add i64 %31, 64
  %73 = add i64 %32, -8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %30, !llvm.loop !171

75:                                               ; preds = %30, %21
  %76 = phi i64 [ 0, %21 ], [ %72, %30 ]
  %77 = icmp eq i64 %26, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %85, %78 ], [ %76, %75 ]
  %80 = phi i64 [ %86, %78 ], [ %26, %75 ]
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %79
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !168
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !168
  %85 = add i64 %79, 8
  %86 = add i64 %80, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !172

88:                                               ; preds = %78, %75
  %89 = icmp eq i64 %22, %19
  br i1 %89, label %97, label %90

90:                                               ; preds = %88, %17
  %91 = phi i64 [ 0, %17 ], [ %22, %88 ]
  br label %92

92:                                               ; preds = %90, %92
  %93 = phi i64 [ %95, %92 ], [ %91, %90 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %93
  store i32 1, i32* %94, align 4, !alias.scope !168
  %95 = add nuw nsw i64 %93, 1
  %96 = icmp eq i64 %95, %19
  br i1 %96, label %97, label %92, !llvm.loop !173

97:                                               ; preds = %92, %88, %13
  %98 = getelementptr inbounds %union.anon, %union.anon* %16, i64 0, i32 0
  %99 = bitcast %union.anon* %16 to i32*
  %100 = sext i32 %14 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %10, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !168
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #9
  %112 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 2
  %113 = load i8, i8* %112, align 4
  %114 = sext i8 %113 to i32
  %115 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 0
  %116 = load i8, i8* %115, align 4
  %117 = sext i8 %116 to i32
  %118 = icmp slt i8 %116, 4
  %119 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 0
  %120 = load i32, i32* %119, align 4
  %121 = select i1 %118, i32 0, i32 %120
  %122 = icmp slt i8 %113, 4
  br i1 %122, label %127, label %123

123:                                              ; preds = %97
  %124 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, -1
  br i1 %126, label %127, label %133

127:                                              ; preds = %123, %97
  %128 = load i32, i32* %8, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %98, align 8
  %131 = select i1 %129, i32* %130, i32* %99
  %132 = load i32, i32* %131, align 4
  br label %135

133:                                              ; preds = %123
  %134 = add nsw i32 %125, %121
  br label %135

135:                                              ; preds = %133, %127
  %136 = phi i32 [ %132, %127 ], [ %134, %133 ]
  %137 = icmp slt i8 %116, 3
  br i1 %137, label %143, label %138

138:                                              ; preds = %135
  %139 = add nsw i32 %117, -3
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %140
  %142 = load i32, i32* %141, align 4
  br label %143

143:                                              ; preds = %135, %138
  %144 = phi i32 [ %142, %138 ], [ 0, %135 ]
  %145 = icmp slt i8 %113, 3
  br i1 %145, label %152, label %146

146:                                              ; preds = %143
  %147 = add nsw i32 %114, -3
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, -1
  br i1 %151, label %152, label %161

152:                                              ; preds = %146, %143
  %153 = load i32, i32* %8, align 8
  %154 = icmp sgt i32 %153, 5
  %155 = load i32*, i32** %98, align 8
  %156 = getelementptr inbounds i32, i32* %155, i64 1
  %157 = bitcast %union.anon* %16 to [5 x i32]*
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %157, i64 0, i64 1
  %159 = select i1 %154, i32* %156, i32* %158
  %160 = load i32, i32* %159, align 4
  br label %163

161:                                              ; preds = %146
  %162 = add nsw i32 %150, %144
  br label %163

163:                                              ; preds = %161, %152
  %164 = phi i32 [ %160, %152 ], [ %162, %161 ]
  %165 = icmp slt i8 %116, 2
  br i1 %165, label %171, label %166

166:                                              ; preds = %163
  %167 = add nsw i32 %117, -2
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %168
  %170 = load i32, i32* %169, align 4
  br label %171

171:                                              ; preds = %163, %166
  %172 = phi i32 [ %170, %166 ], [ 0, %163 ]
  %173 = icmp slt i8 %113, 2
  br i1 %173, label %180, label %174

174:                                              ; preds = %171
  %175 = add nsw i32 %114, -2
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %176
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %178, -1
  br i1 %179, label %180, label %189

180:                                              ; preds = %174, %171
  %181 = load i32, i32* %8, align 8
  %182 = icmp sgt i32 %181, 5
  %183 = load i32*, i32** %98, align 8
  %184 = getelementptr inbounds i32, i32* %183, i64 2
  %185 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %186 = bitcast [16 x i8]* %185 to i32*
  %187 = select i1 %182, i32* %184, i32* %186
  %188 = load i32, i32* %187, align 4
  br label %191

189:                                              ; preds = %174
  %190 = add nsw i32 %178, %172
  br label %191

191:                                              ; preds = %189, %180
  %192 = phi i32 [ %188, %180 ], [ %190, %189 ]
  %193 = icmp slt i8 %116, 1
  br i1 %193, label %199, label %194

194:                                              ; preds = %191
  %195 = add nsw i32 %117, -1
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 1, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %191, %194
  %200 = phi i32 [ %198, %194 ], [ 0, %191 ]
  %201 = icmp slt i8 %113, 1
  br i1 %201, label %208, label %202

202:                                              ; preds = %199
  %203 = add nsw i32 %114, -1
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds %"struct.tflite::SliceParams", %"struct.tflite::SliceParams"* %0, i64 0, i32 3, i64 %204
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, -1
  br i1 %207, label %208, label %217

208:                                              ; preds = %202, %199
  %209 = load i32, i32* %8, align 8
  %210 = icmp sgt i32 %209, 5
  %211 = load i32*, i32** %98, align 8
  %212 = getelementptr inbounds i32, i32* %211, i64 3
  %213 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %214 = bitcast i8* %213 to i32*
  %215 = select i1 %210, i32* %212, i32* %214
  %216 = load i32, i32* %215, align 4
  br label %219

217:                                              ; preds = %202
  %218 = add nsw i32 %206, %200
  br label %219

219:                                              ; preds = %217, %208
  %220 = phi i32 [ %216, %208 ], [ %218, %217 ]
  %221 = icmp slt i32 %121, %136
  br i1 %221, label %222, label %244

222:                                              ; preds = %219
  %223 = icmp slt i32 %144, %164
  %224 = icmp slt i32 %172, %192
  %225 = sub nsw i32 %220, %200
  %226 = icmp sgt i32 %225, 0
  %227 = getelementptr inbounds i32, i32* %99, i64 1
  %228 = load i32, i32* %227, align 4
  %229 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %230 = bitcast [16 x i8]* %229 to i32*
  %231 = load i32, i32* %230, align 8
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %233 = bitcast i8* %232 to i32*
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %3, i64 0, i32 2
  %236 = bitcast %"struct.tflite::StringRef"* %5 to i8*
  %237 = getelementptr inbounds %"class.tflite::SequentialTensorWriter.9", %"class.tflite::SequentialTensorWriter.9"* %3, i64 0, i32 0
  %238 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %5, i64 0, i32 0
  %239 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %5, i64 0, i32 1
  br label %240

240:                                              ; preds = %259, %222
  %241 = phi i32 [ %121, %222 ], [ %260, %259 ]
  br i1 %223, label %242, label %259

242:                                              ; preds = %240
  %243 = mul nsw i32 %228, %241
  br label %254

244:                                              ; preds = %259, %219
  %245 = load i32, i32* %8, align 8
  %246 = icmp sgt i32 %245, 5
  br i1 %246, label %247, label %253

247:                                              ; preds = %244
  %248 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %249 = load i32*, i32** %248, align 8
  %250 = icmp eq i32* %249, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %247
  %252 = bitcast i32* %249 to i8*
  call void @_ZdaPv(i8* %252) #10
  br label %253

253:                                              ; preds = %244, %247, %251
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void

254:                                              ; preds = %262, %242
  %255 = phi i32 [ %144, %242 ], [ %263, %262 ]
  br i1 %224, label %256, label %262

256:                                              ; preds = %254
  %257 = add nsw i32 %243, %255
  %258 = mul nsw i32 %257, %231
  br label %265

259:                                              ; preds = %262, %240
  %260 = add i32 %241, 1
  %261 = icmp eq i32 %260, %136
  br i1 %261, label %244, label %240

262:                                              ; preds = %280, %254
  %263 = add i32 %255, 1
  %264 = icmp eq i32 %263, %164
  br i1 %264, label %259, label %254

265:                                              ; preds = %280, %256
  %266 = phi i32 [ %172, %256 ], [ %281, %280 ]
  br i1 %226, label %267, label %280

267:                                              ; preds = %265
  %268 = add nsw i32 %258, %266
  %269 = mul nsw i32 %268, %234
  %270 = add nsw i32 %269, %200
  br label %271

271:                                              ; preds = %271, %267
  %272 = phi i32 [ 0, %267 ], [ %278, %271 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %236) #9
  %273 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %237, align 8
  %274 = add nsw i32 %270, %272
  %275 = call { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor* %273, i32 %274) #9
  %276 = extractvalue { i8*, i32 } %275, 0
  store i8* %276, i8** %238, align 8
  %277 = extractvalue { i8*, i32 } %275, 1
  store i32 %277, i32* %239, align 8
  call void @_ZN6tflite13DynamicBuffer9AddStringERKNS_9StringRefE(%"class.tflite::DynamicBuffer"* %235, %"struct.tflite::StringRef"* nonnull dereferenceable(16) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %236) #9
  %278 = add nuw nsw i32 %272, 1
  %279 = icmp eq i32 %278, %225
  br i1 %279, label %280, label %271

280:                                              ; preds = %271, %265
  %281 = add i32 %266, 1
  %282 = icmp eq i32 %281, %192
  br i1 %282, label %262, label %265
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!4 = distinct !{!4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!7 = distinct !{!7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!10 = distinct !{!10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!13 = distinct !{!13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!16 = distinct !{!16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!19 = distinct !{!19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!22 = distinct !{!22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!25 = distinct !{!25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!28 = distinct !{!28, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!31 = distinct !{!31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!34 = distinct !{!34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!37 = distinct !{!37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!40 = distinct !{!40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!43 = distinct !{!43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!46 = distinct !{!46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!49 = distinct !{!49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!52 = distinct !{!52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!55 = distinct !{!55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!58 = distinct !{!58, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!61 = distinct !{!61, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!64 = distinct !{!64, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!67 = distinct !{!67, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!70 = distinct !{!70, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!73 = distinct !{!73, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!76 = distinct !{!76, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!79 = distinct !{!79, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!82 = distinct !{!82, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!85 = distinct !{!85, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!88 = distinct !{!88, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!89 = distinct !{!89, !90}
!90 = !{!"llvm.loop.isvectorized", i32 1}
!91 = distinct !{!91, !92}
!92 = !{!"llvm.loop.unroll.disable"}
!93 = distinct !{!93, !94, !90}
!94 = !{!"llvm.loop.unroll.runtime.disable"}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!97 = distinct !{!97, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!98 = distinct !{!98, !90}
!99 = distinct !{!99, !92}
!100 = distinct !{!100, !94, !90}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!103 = distinct !{!103, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!104 = distinct !{!104, !90}
!105 = distinct !{!105, !92}
!106 = distinct !{!106, !94, !90}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!109 = distinct !{!109, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!110 = distinct !{!110, !90}
!111 = distinct !{!111, !92}
!112 = distinct !{!112, !94, !90}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!115 = distinct !{!115, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!116 = distinct !{!116, !90}
!117 = distinct !{!117, !92}
!118 = distinct !{!118, !94, !90}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!121 = distinct !{!121, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!122 = distinct !{!122, !90}
!123 = distinct !{!123, !92}
!124 = distinct !{!124, !94, !90}
!125 = !{i8 0, i8 2}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!128 = distinct !{!128, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!129 = distinct !{!129, !90}
!130 = distinct !{!130, !92}
!131 = distinct !{!131, !94, !90}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!134 = distinct !{!134, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!135 = distinct !{!135, !90}
!136 = distinct !{!136, !92}
!137 = distinct !{!137, !94, !90}
!138 = !{!139}
!139 = distinct !{!139, !140, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!140 = distinct !{!140, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!141 = distinct !{!141, !90}
!142 = distinct !{!142, !92}
!143 = distinct !{!143, !94, !90}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!146 = distinct !{!146, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!147 = distinct !{!147, !90}
!148 = distinct !{!148, !92}
!149 = distinct !{!149, !94, !90}
!150 = !{!151}
!151 = distinct !{!151, !152, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!152 = distinct !{!152, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!153 = distinct !{!153, !90}
!154 = distinct !{!154, !92}
!155 = distinct !{!155, !94, !90}
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!158 = distinct !{!158, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!159 = distinct !{!159, !90}
!160 = distinct !{!160, !92}
!161 = distinct !{!161, !94, !90}
!162 = !{!163}
!163 = distinct !{!163, !164, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!164 = distinct !{!164, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!165 = distinct !{!165, !90}
!166 = distinct !{!166, !92}
!167 = distinct !{!167, !94, !90}
!168 = !{!169}
!169 = distinct !{!169, !170, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!170 = distinct !{!170, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!171 = distinct !{!171, !90}
!172 = distinct !{!172, !92}
!173 = distinct !{!173, !94, !90}
