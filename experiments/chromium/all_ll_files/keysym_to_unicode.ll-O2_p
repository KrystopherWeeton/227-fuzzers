; ModuleID = '../../ui/events/keycodes/keysym_to_unicode.cc'
source_filename = "../../ui/events/keycodes/keysym_to_unicode.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [40 x i8] }
%struct.anon = type { i32, i16 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::tuple.17" = type { i8 }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"struct.std::__1::pair" = type <{ i32, i16, [2 x i8] }>
%"class.ui::KeySymToUnicode" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjtEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjtEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjtEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

@_ZN2uiL19g_keysym_to_unicodeE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZN2uiL25g_keysym_to_unicode_tableE = internal constant [733 x %struct.anon] [%struct.anon { i32 65288, i16 8 }, %struct.anon { i32 65289, i16 9 }, %struct.anon { i32 65290, i16 10 }, %struct.anon { i32 65291, i16 11 }, %struct.anon { i32 65293, i16 13 }, %struct.anon { i32 65307, i16 27 }, %struct.anon { i32 65535, i16 127 }, %struct.anon { i32 65408, i16 32 }, %struct.anon { i32 65417, i16 9 }, %struct.anon { i32 65421, i16 13 }, %struct.anon { i32 65469, i16 61 }, %struct.anon { i32 65450, i16 42 }, %struct.anon { i32 65451, i16 43 }, %struct.anon { i32 65452, i16 44 }, %struct.anon { i32 65453, i16 45 }, %struct.anon { i32 65454, i16 46 }, %struct.anon { i32 65455, i16 47 }, %struct.anon { i32 65456, i16 48 }, %struct.anon { i32 65457, i16 49 }, %struct.anon { i32 65458, i16 50 }, %struct.anon { i32 65459, i16 51 }, %struct.anon { i32 65460, i16 52 }, %struct.anon { i32 65461, i16 53 }, %struct.anon { i32 65462, i16 54 }, %struct.anon { i32 65463, i16 55 }, %struct.anon { i32 65464, i16 56 }, %struct.anon { i32 65465, i16 57 }, %struct.anon { i32 417, i16 260 }, %struct.anon { i32 418, i16 728 }, %struct.anon { i32 419, i16 321 }, %struct.anon { i32 421, i16 317 }, %struct.anon { i32 422, i16 346 }, %struct.anon { i32 425, i16 352 }, %struct.anon { i32 426, i16 350 }, %struct.anon { i32 427, i16 356 }, %struct.anon { i32 428, i16 377 }, %struct.anon { i32 430, i16 381 }, %struct.anon { i32 431, i16 379 }, %struct.anon { i32 433, i16 261 }, %struct.anon { i32 434, i16 731 }, %struct.anon { i32 435, i16 322 }, %struct.anon { i32 437, i16 318 }, %struct.anon { i32 438, i16 347 }, %struct.anon { i32 439, i16 711 }, %struct.anon { i32 441, i16 353 }, %struct.anon { i32 442, i16 351 }, %struct.anon { i32 443, i16 357 }, %struct.anon { i32 444, i16 378 }, %struct.anon { i32 445, i16 733 }, %struct.anon { i32 446, i16 382 }, %struct.anon { i32 447, i16 380 }, %struct.anon { i32 448, i16 340 }, %struct.anon { i32 451, i16 258 }, %struct.anon { i32 453, i16 313 }, %struct.anon { i32 454, i16 262 }, %struct.anon { i32 456, i16 268 }, %struct.anon { i32 458, i16 280 }, %struct.anon { i32 460, i16 282 }, %struct.anon { i32 463, i16 270 }, %struct.anon { i32 464, i16 272 }, %struct.anon { i32 465, i16 323 }, %struct.anon { i32 466, i16 327 }, %struct.anon { i32 469, i16 336 }, %struct.anon { i32 472, i16 344 }, %struct.anon { i32 473, i16 366 }, %struct.anon { i32 475, i16 368 }, %struct.anon { i32 478, i16 354 }, %struct.anon { i32 480, i16 341 }, %struct.anon { i32 483, i16 259 }, %struct.anon { i32 485, i16 314 }, %struct.anon { i32 486, i16 263 }, %struct.anon { i32 488, i16 269 }, %struct.anon { i32 490, i16 281 }, %struct.anon { i32 492, i16 283 }, %struct.anon { i32 495, i16 271 }, %struct.anon { i32 496, i16 273 }, %struct.anon { i32 497, i16 324 }, %struct.anon { i32 498, i16 328 }, %struct.anon { i32 501, i16 337 }, %struct.anon { i32 504, i16 345 }, %struct.anon { i32 505, i16 367 }, %struct.anon { i32 507, i16 369 }, %struct.anon { i32 510, i16 355 }, %struct.anon { i32 511, i16 729 }, %struct.anon { i32 673, i16 294 }, %struct.anon { i32 678, i16 292 }, %struct.anon { i32 681, i16 304 }, %struct.anon { i32 683, i16 286 }, %struct.anon { i32 684, i16 308 }, %struct.anon { i32 689, i16 295 }, %struct.anon { i32 694, i16 293 }, %struct.anon { i32 697, i16 305 }, %struct.anon { i32 699, i16 287 }, %struct.anon { i32 700, i16 309 }, %struct.anon { i32 709, i16 266 }, %struct.anon { i32 710, i16 264 }, %struct.anon { i32 725, i16 288 }, %struct.anon { i32 728, i16 284 }, %struct.anon { i32 733, i16 364 }, %struct.anon { i32 734, i16 348 }, %struct.anon { i32 741, i16 267 }, %struct.anon { i32 742, i16 265 }, %struct.anon { i32 757, i16 289 }, %struct.anon { i32 760, i16 285 }, %struct.anon { i32 765, i16 365 }, %struct.anon { i32 766, i16 349 }, %struct.anon { i32 930, i16 312 }, %struct.anon { i32 931, i16 342 }, %struct.anon { i32 933, i16 296 }, %struct.anon { i32 934, i16 315 }, %struct.anon { i32 938, i16 274 }, %struct.anon { i32 939, i16 290 }, %struct.anon { i32 940, i16 358 }, %struct.anon { i32 947, i16 343 }, %struct.anon { i32 949, i16 297 }, %struct.anon { i32 950, i16 316 }, %struct.anon { i32 954, i16 275 }, %struct.anon { i32 955, i16 291 }, %struct.anon { i32 956, i16 359 }, %struct.anon { i32 957, i16 330 }, %struct.anon { i32 959, i16 331 }, %struct.anon { i32 960, i16 256 }, %struct.anon { i32 967, i16 302 }, %struct.anon { i32 972, i16 278 }, %struct.anon { i32 975, i16 298 }, %struct.anon { i32 977, i16 325 }, %struct.anon { i32 978, i16 332 }, %struct.anon { i32 979, i16 310 }, %struct.anon { i32 985, i16 370 }, %struct.anon { i32 989, i16 360 }, %struct.anon { i32 990, i16 362 }, %struct.anon { i32 992, i16 257 }, %struct.anon { i32 999, i16 303 }, %struct.anon { i32 1004, i16 279 }, %struct.anon { i32 1007, i16 299 }, %struct.anon { i32 1009, i16 326 }, %struct.anon { i32 1010, i16 333 }, %struct.anon { i32 1011, i16 311 }, %struct.anon { i32 1017, i16 371 }, %struct.anon { i32 1021, i16 361 }, %struct.anon { i32 1022, i16 363 }, %struct.anon { i32 5052, i16 338 }, %struct.anon { i32 5053, i16 339 }, %struct.anon { i32 5054, i16 376 }, %struct.anon { i32 1150, i16 8254 }, %struct.anon { i32 1185, i16 12290 }, %struct.anon { i32 1186, i16 12300 }, %struct.anon { i32 1187, i16 12301 }, %struct.anon { i32 1188, i16 12289 }, %struct.anon { i32 1189, i16 12539 }, %struct.anon { i32 1190, i16 12530 }, %struct.anon { i32 1191, i16 12449 }, %struct.anon { i32 1192, i16 12451 }, %struct.anon { i32 1193, i16 12453 }, %struct.anon { i32 1194, i16 12455 }, %struct.anon { i32 1195, i16 12457 }, %struct.anon { i32 1196, i16 12515 }, %struct.anon { i32 1197, i16 12517 }, %struct.anon { i32 1198, i16 12519 }, %struct.anon { i32 1199, i16 12483 }, %struct.anon { i32 1200, i16 12540 }, %struct.anon { i32 1201, i16 12450 }, %struct.anon { i32 1202, i16 12452 }, %struct.anon { i32 1203, i16 12454 }, %struct.anon { i32 1204, i16 12456 }, %struct.anon { i32 1205, i16 12458 }, %struct.anon { i32 1206, i16 12459 }, %struct.anon { i32 1207, i16 12461 }, %struct.anon { i32 1208, i16 12463 }, %struct.anon { i32 1209, i16 12465 }, %struct.anon { i32 1210, i16 12467 }, %struct.anon { i32 1211, i16 12469 }, %struct.anon { i32 1212, i16 12471 }, %struct.anon { i32 1213, i16 12473 }, %struct.anon { i32 1214, i16 12475 }, %struct.anon { i32 1215, i16 12477 }, %struct.anon { i32 1216, i16 12479 }, %struct.anon { i32 1217, i16 12481 }, %struct.anon { i32 1218, i16 12484 }, %struct.anon { i32 1219, i16 12486 }, %struct.anon { i32 1220, i16 12488 }, %struct.anon { i32 1221, i16 12490 }, %struct.anon { i32 1222, i16 12491 }, %struct.anon { i32 1223, i16 12492 }, %struct.anon { i32 1224, i16 12493 }, %struct.anon { i32 1225, i16 12494 }, %struct.anon { i32 1226, i16 12495 }, %struct.anon { i32 1227, i16 12498 }, %struct.anon { i32 1228, i16 12501 }, %struct.anon { i32 1229, i16 12504 }, %struct.anon { i32 1230, i16 12507 }, %struct.anon { i32 1231, i16 12510 }, %struct.anon { i32 1232, i16 12511 }, %struct.anon { i32 1233, i16 12512 }, %struct.anon { i32 1234, i16 12513 }, %struct.anon { i32 1235, i16 12514 }, %struct.anon { i32 1236, i16 12516 }, %struct.anon { i32 1237, i16 12518 }, %struct.anon { i32 1238, i16 12520 }, %struct.anon { i32 1239, i16 12521 }, %struct.anon { i32 1240, i16 12522 }, %struct.anon { i32 1241, i16 12523 }, %struct.anon { i32 1242, i16 12524 }, %struct.anon { i32 1243, i16 12525 }, %struct.anon { i32 1244, i16 12527 }, %struct.anon { i32 1245, i16 12531 }, %struct.anon { i32 1246, i16 12443 }, %struct.anon { i32 1247, i16 12444 }, %struct.anon { i32 1452, i16 1548 }, %struct.anon { i32 1467, i16 1563 }, %struct.anon { i32 1471, i16 1567 }, %struct.anon { i32 1473, i16 1569 }, %struct.anon { i32 1474, i16 1570 }, %struct.anon { i32 1475, i16 1571 }, %struct.anon { i32 1476, i16 1572 }, %struct.anon { i32 1477, i16 1573 }, %struct.anon { i32 1478, i16 1574 }, %struct.anon { i32 1479, i16 1575 }, %struct.anon { i32 1480, i16 1576 }, %struct.anon { i32 1481, i16 1577 }, %struct.anon { i32 1482, i16 1578 }, %struct.anon { i32 1483, i16 1579 }, %struct.anon { i32 1484, i16 1580 }, %struct.anon { i32 1485, i16 1581 }, %struct.anon { i32 1486, i16 1582 }, %struct.anon { i32 1487, i16 1583 }, %struct.anon { i32 1488, i16 1584 }, %struct.anon { i32 1489, i16 1585 }, %struct.anon { i32 1490, i16 1586 }, %struct.anon { i32 1491, i16 1587 }, %struct.anon { i32 1492, i16 1588 }, %struct.anon { i32 1493, i16 1589 }, %struct.anon { i32 1494, i16 1590 }, %struct.anon { i32 1495, i16 1591 }, %struct.anon { i32 1496, i16 1592 }, %struct.anon { i32 1497, i16 1593 }, %struct.anon { i32 1498, i16 1594 }, %struct.anon { i32 1504, i16 1600 }, %struct.anon { i32 1505, i16 1601 }, %struct.anon { i32 1506, i16 1602 }, %struct.anon { i32 1507, i16 1603 }, %struct.anon { i32 1508, i16 1604 }, %struct.anon { i32 1509, i16 1605 }, %struct.anon { i32 1510, i16 1606 }, %struct.anon { i32 1511, i16 1607 }, %struct.anon { i32 1512, i16 1608 }, %struct.anon { i32 1513, i16 1609 }, %struct.anon { i32 1514, i16 1610 }, %struct.anon { i32 1515, i16 1611 }, %struct.anon { i32 1516, i16 1612 }, %struct.anon { i32 1517, i16 1613 }, %struct.anon { i32 1518, i16 1614 }, %struct.anon { i32 1519, i16 1615 }, %struct.anon { i32 1520, i16 1616 }, %struct.anon { i32 1521, i16 1617 }, %struct.anon { i32 1522, i16 1618 }, %struct.anon { i32 1697, i16 1106 }, %struct.anon { i32 1698, i16 1107 }, %struct.anon { i32 1699, i16 1105 }, %struct.anon { i32 1700, i16 1108 }, %struct.anon { i32 1701, i16 1109 }, %struct.anon { i32 1702, i16 1110 }, %struct.anon { i32 1703, i16 1111 }, %struct.anon { i32 1704, i16 1112 }, %struct.anon { i32 1705, i16 1113 }, %struct.anon { i32 1706, i16 1114 }, %struct.anon { i32 1707, i16 1115 }, %struct.anon { i32 1708, i16 1116 }, %struct.anon { i32 1709, i16 1169 }, %struct.anon { i32 1710, i16 1118 }, %struct.anon { i32 1711, i16 1119 }, %struct.anon { i32 1712, i16 8470 }, %struct.anon { i32 1713, i16 1026 }, %struct.anon { i32 1714, i16 1027 }, %struct.anon { i32 1715, i16 1025 }, %struct.anon { i32 1716, i16 1028 }, %struct.anon { i32 1717, i16 1029 }, %struct.anon { i32 1718, i16 1030 }, %struct.anon { i32 1719, i16 1031 }, %struct.anon { i32 1720, i16 1032 }, %struct.anon { i32 1721, i16 1033 }, %struct.anon { i32 1722, i16 1034 }, %struct.anon { i32 1723, i16 1035 }, %struct.anon { i32 1724, i16 1036 }, %struct.anon { i32 1725, i16 1168 }, %struct.anon { i32 1726, i16 1038 }, %struct.anon { i32 1727, i16 1039 }, %struct.anon { i32 1728, i16 1102 }, %struct.anon { i32 1729, i16 1072 }, %struct.anon { i32 1730, i16 1073 }, %struct.anon { i32 1731, i16 1094 }, %struct.anon { i32 1732, i16 1076 }, %struct.anon { i32 1733, i16 1077 }, %struct.anon { i32 1734, i16 1092 }, %struct.anon { i32 1735, i16 1075 }, %struct.anon { i32 1736, i16 1093 }, %struct.anon { i32 1737, i16 1080 }, %struct.anon { i32 1738, i16 1081 }, %struct.anon { i32 1739, i16 1082 }, %struct.anon { i32 1740, i16 1083 }, %struct.anon { i32 1741, i16 1084 }, %struct.anon { i32 1742, i16 1085 }, %struct.anon { i32 1743, i16 1086 }, %struct.anon { i32 1744, i16 1087 }, %struct.anon { i32 1745, i16 1103 }, %struct.anon { i32 1746, i16 1088 }, %struct.anon { i32 1747, i16 1089 }, %struct.anon { i32 1748, i16 1090 }, %struct.anon { i32 1749, i16 1091 }, %struct.anon { i32 1750, i16 1078 }, %struct.anon { i32 1751, i16 1074 }, %struct.anon { i32 1752, i16 1100 }, %struct.anon { i32 1753, i16 1099 }, %struct.anon { i32 1754, i16 1079 }, %struct.anon { i32 1755, i16 1096 }, %struct.anon { i32 1756, i16 1101 }, %struct.anon { i32 1757, i16 1097 }, %struct.anon { i32 1758, i16 1095 }, %struct.anon { i32 1759, i16 1098 }, %struct.anon { i32 1760, i16 1070 }, %struct.anon { i32 1761, i16 1040 }, %struct.anon { i32 1762, i16 1041 }, %struct.anon { i32 1763, i16 1062 }, %struct.anon { i32 1764, i16 1044 }, %struct.anon { i32 1765, i16 1045 }, %struct.anon { i32 1766, i16 1060 }, %struct.anon { i32 1767, i16 1043 }, %struct.anon { i32 1768, i16 1061 }, %struct.anon { i32 1769, i16 1048 }, %struct.anon { i32 1770, i16 1049 }, %struct.anon { i32 1771, i16 1050 }, %struct.anon { i32 1772, i16 1051 }, %struct.anon { i32 1773, i16 1052 }, %struct.anon { i32 1774, i16 1053 }, %struct.anon { i32 1775, i16 1054 }, %struct.anon { i32 1776, i16 1055 }, %struct.anon { i32 1777, i16 1071 }, %struct.anon { i32 1778, i16 1056 }, %struct.anon { i32 1779, i16 1057 }, %struct.anon { i32 1780, i16 1058 }, %struct.anon { i32 1781, i16 1059 }, %struct.anon { i32 1782, i16 1046 }, %struct.anon { i32 1783, i16 1042 }, %struct.anon { i32 1784, i16 1068 }, %struct.anon { i32 1785, i16 1067 }, %struct.anon { i32 1786, i16 1047 }, %struct.anon { i32 1787, i16 1064 }, %struct.anon { i32 1788, i16 1069 }, %struct.anon { i32 1789, i16 1065 }, %struct.anon { i32 1790, i16 1063 }, %struct.anon { i32 1791, i16 1066 }, %struct.anon { i32 1953, i16 902 }, %struct.anon { i32 1954, i16 904 }, %struct.anon { i32 1955, i16 905 }, %struct.anon { i32 1956, i16 906 }, %struct.anon { i32 1957, i16 938 }, %struct.anon { i32 1959, i16 908 }, %struct.anon { i32 1960, i16 910 }, %struct.anon { i32 1961, i16 939 }, %struct.anon { i32 1963, i16 911 }, %struct.anon { i32 1966, i16 901 }, %struct.anon { i32 1967, i16 8213 }, %struct.anon { i32 1969, i16 940 }, %struct.anon { i32 1970, i16 941 }, %struct.anon { i32 1971, i16 942 }, %struct.anon { i32 1972, i16 943 }, %struct.anon { i32 1973, i16 970 }, %struct.anon { i32 1974, i16 912 }, %struct.anon { i32 1975, i16 972 }, %struct.anon { i32 1976, i16 973 }, %struct.anon { i32 1977, i16 971 }, %struct.anon { i32 1978, i16 944 }, %struct.anon { i32 1979, i16 974 }, %struct.anon { i32 1985, i16 913 }, %struct.anon { i32 1986, i16 914 }, %struct.anon { i32 1987, i16 915 }, %struct.anon { i32 1988, i16 916 }, %struct.anon { i32 1989, i16 917 }, %struct.anon { i32 1990, i16 918 }, %struct.anon { i32 1991, i16 919 }, %struct.anon { i32 1992, i16 920 }, %struct.anon { i32 1993, i16 921 }, %struct.anon { i32 1994, i16 922 }, %struct.anon { i32 1995, i16 923 }, %struct.anon { i32 1995, i16 923 }, %struct.anon { i32 1996, i16 924 }, %struct.anon { i32 1997, i16 925 }, %struct.anon { i32 1998, i16 926 }, %struct.anon { i32 1999, i16 927 }, %struct.anon { i32 2000, i16 928 }, %struct.anon { i32 2001, i16 929 }, %struct.anon { i32 2002, i16 931 }, %struct.anon { i32 2004, i16 932 }, %struct.anon { i32 2005, i16 933 }, %struct.anon { i32 2006, i16 934 }, %struct.anon { i32 2007, i16 935 }, %struct.anon { i32 2008, i16 936 }, %struct.anon { i32 2009, i16 937 }, %struct.anon { i32 2017, i16 945 }, %struct.anon { i32 2018, i16 946 }, %struct.anon { i32 2019, i16 947 }, %struct.anon { i32 2020, i16 948 }, %struct.anon { i32 2021, i16 949 }, %struct.anon { i32 2022, i16 950 }, %struct.anon { i32 2023, i16 951 }, %struct.anon { i32 2024, i16 952 }, %struct.anon { i32 2025, i16 953 }, %struct.anon { i32 2026, i16 954 }, %struct.anon { i32 2027, i16 955 }, %struct.anon { i32 2027, i16 955 }, %struct.anon { i32 2028, i16 956 }, %struct.anon { i32 2029, i16 957 }, %struct.anon { i32 2030, i16 958 }, %struct.anon { i32 2031, i16 959 }, %struct.anon { i32 2032, i16 960 }, %struct.anon { i32 2033, i16 961 }, %struct.anon { i32 2034, i16 963 }, %struct.anon { i32 2035, i16 962 }, %struct.anon { i32 2036, i16 964 }, %struct.anon { i32 2037, i16 965 }, %struct.anon { i32 2038, i16 966 }, %struct.anon { i32 2039, i16 967 }, %struct.anon { i32 2040, i16 968 }, %struct.anon { i32 2041, i16 969 }, %struct.anon { i32 2209, i16 9143 }, %struct.anon { i32 2210, i16 9484 }, %struct.anon { i32 2211, i16 9472 }, %struct.anon { i32 2212, i16 8992 }, %struct.anon { i32 2213, i16 8993 }, %struct.anon { i32 2214, i16 9474 }, %struct.anon { i32 2215, i16 9121 }, %struct.anon { i32 2216, i16 9123 }, %struct.anon { i32 2217, i16 9124 }, %struct.anon { i32 2218, i16 9126 }, %struct.anon { i32 2219, i16 9115 }, %struct.anon { i32 2220, i16 9117 }, %struct.anon { i32 2221, i16 9118 }, %struct.anon { i32 2222, i16 9120 }, %struct.anon { i32 2223, i16 9128 }, %struct.anon { i32 2224, i16 9132 }, %struct.anon { i32 2236, i16 8804 }, %struct.anon { i32 2237, i16 8800 }, %struct.anon { i32 2238, i16 8805 }, %struct.anon { i32 2239, i16 8747 }, %struct.anon { i32 2240, i16 8756 }, %struct.anon { i32 2241, i16 8733 }, %struct.anon { i32 2242, i16 8734 }, %struct.anon { i32 2245, i16 8711 }, %struct.anon { i32 2248, i16 8764 }, %struct.anon { i32 2249, i16 8771 }, %struct.anon { i32 2253, i16 8660 }, %struct.anon { i32 2254, i16 8658 }, %struct.anon { i32 2255, i16 8801 }, %struct.anon { i32 2262, i16 8730 }, %struct.anon { i32 2266, i16 8834 }, %struct.anon { i32 2267, i16 8835 }, %struct.anon { i32 2268, i16 8745 }, %struct.anon { i32 2269, i16 8746 }, %struct.anon { i32 2270, i16 8743 }, %struct.anon { i32 2271, i16 8744 }, %struct.anon { i32 2287, i16 8706 }, %struct.anon { i32 2294, i16 402 }, %struct.anon { i32 2299, i16 8592 }, %struct.anon { i32 2300, i16 8593 }, %struct.anon { i32 2301, i16 8594 }, %struct.anon { i32 2302, i16 8595 }, %struct.anon { i32 2528, i16 9670 }, %struct.anon { i32 2529, i16 9618 }, %struct.anon { i32 2530, i16 9225 }, %struct.anon { i32 2531, i16 9228 }, %struct.anon { i32 2532, i16 9229 }, %struct.anon { i32 2533, i16 9226 }, %struct.anon { i32 2536, i16 9252 }, %struct.anon { i32 2537, i16 9227 }, %struct.anon { i32 2538, i16 9496 }, %struct.anon { i32 2539, i16 9488 }, %struct.anon { i32 2540, i16 9484 }, %struct.anon { i32 2541, i16 9492 }, %struct.anon { i32 2542, i16 9532 }, %struct.anon { i32 2543, i16 9146 }, %struct.anon { i32 2544, i16 9147 }, %struct.anon { i32 2545, i16 9472 }, %struct.anon { i32 2546, i16 9148 }, %struct.anon { i32 2547, i16 9149 }, %struct.anon { i32 2548, i16 9500 }, %struct.anon { i32 2549, i16 9508 }, %struct.anon { i32 2550, i16 9524 }, %struct.anon { i32 2551, i16 9516 }, %struct.anon { i32 2552, i16 9474 }, %struct.anon { i32 2721, i16 8195 }, %struct.anon { i32 2722, i16 8194 }, %struct.anon { i32 2723, i16 8196 }, %struct.anon { i32 2724, i16 8197 }, %struct.anon { i32 2725, i16 8199 }, %struct.anon { i32 2726, i16 8200 }, %struct.anon { i32 2727, i16 8201 }, %struct.anon { i32 2728, i16 8202 }, %struct.anon { i32 2729, i16 8212 }, %struct.anon { i32 2730, i16 8211 }, %struct.anon { i32 2732, i16 9251 }, %struct.anon { i32 2734, i16 8230 }, %struct.anon { i32 2735, i16 8229 }, %struct.anon { i32 2736, i16 8531 }, %struct.anon { i32 2737, i16 8532 }, %struct.anon { i32 2738, i16 8533 }, %struct.anon { i32 2739, i16 8534 }, %struct.anon { i32 2740, i16 8535 }, %struct.anon { i32 2741, i16 8536 }, %struct.anon { i32 2742, i16 8537 }, %struct.anon { i32 2743, i16 8538 }, %struct.anon { i32 2744, i16 8453 }, %struct.anon { i32 2747, i16 8210 }, %struct.anon { i32 2748, i16 10216 }, %struct.anon { i32 2749, i16 46 }, %struct.anon { i32 2750, i16 10217 }, %struct.anon { i32 2755, i16 8539 }, %struct.anon { i32 2756, i16 8540 }, %struct.anon { i32 2757, i16 8541 }, %struct.anon { i32 2758, i16 8542 }, %struct.anon { i32 2761, i16 8482 }, %struct.anon { i32 2762, i16 9747 }, %struct.anon { i32 2764, i16 9665 }, %struct.anon { i32 2765, i16 9655 }, %struct.anon { i32 2766, i16 9675 }, %struct.anon { i32 2767, i16 9647 }, %struct.anon { i32 2768, i16 8216 }, %struct.anon { i32 2769, i16 8217 }, %struct.anon { i32 2770, i16 8220 }, %struct.anon { i32 2771, i16 8221 }, %struct.anon { i32 2772, i16 8478 }, %struct.anon { i32 2774, i16 8242 }, %struct.anon { i32 2775, i16 8243 }, %struct.anon { i32 2777, i16 10013 }, %struct.anon { i32 2779, i16 9644 }, %struct.anon { i32 2780, i16 9664 }, %struct.anon { i32 2781, i16 9654 }, %struct.anon { i32 2782, i16 9679 }, %struct.anon { i32 2783, i16 9646 }, %struct.anon { i32 2784, i16 9702 }, %struct.anon { i32 2785, i16 9643 }, %struct.anon { i32 2786, i16 9645 }, %struct.anon { i32 2787, i16 9651 }, %struct.anon { i32 2788, i16 9661 }, %struct.anon { i32 2789, i16 9734 }, %struct.anon { i32 2790, i16 8226 }, %struct.anon { i32 2791, i16 9642 }, %struct.anon { i32 2792, i16 9650 }, %struct.anon { i32 2793, i16 9660 }, %struct.anon { i32 2794, i16 9756 }, %struct.anon { i32 2795, i16 9758 }, %struct.anon { i32 2796, i16 9827 }, %struct.anon { i32 2797, i16 9830 }, %struct.anon { i32 2798, i16 9829 }, %struct.anon { i32 2800, i16 10016 }, %struct.anon { i32 2801, i16 8224 }, %struct.anon { i32 2802, i16 8225 }, %struct.anon { i32 2803, i16 10003 }, %struct.anon { i32 2804, i16 10007 }, %struct.anon { i32 2805, i16 9839 }, %struct.anon { i32 2806, i16 9837 }, %struct.anon { i32 2807, i16 9794 }, %struct.anon { i32 2808, i16 9792 }, %struct.anon { i32 2809, i16 9742 }, %struct.anon { i32 2810, i16 8981 }, %struct.anon { i32 2811, i16 8471 }, %struct.anon { i32 2812, i16 8248 }, %struct.anon { i32 2813, i16 8218 }, %struct.anon { i32 2814, i16 8222 }, %struct.anon { i32 2979, i16 60 }, %struct.anon { i32 2982, i16 62 }, %struct.anon { i32 2984, i16 8744 }, %struct.anon { i32 2985, i16 8743 }, %struct.anon { i32 3008, i16 175 }, %struct.anon { i32 3010, i16 8868 }, %struct.anon { i32 3011, i16 8745 }, %struct.anon { i32 3012, i16 8970 }, %struct.anon { i32 3014, i16 95 }, %struct.anon { i32 3018, i16 8728 }, %struct.anon { i32 3020, i16 9109 }, %struct.anon { i32 3022, i16 8869 }, %struct.anon { i32 3023, i16 9675 }, %struct.anon { i32 3027, i16 8968 }, %struct.anon { i32 3030, i16 8746 }, %struct.anon { i32 3032, i16 8835 }, %struct.anon { i32 3034, i16 8834 }, %struct.anon { i32 3036, i16 8867 }, %struct.anon { i32 3068, i16 8866 }, %struct.anon { i32 3295, i16 8215 }, %struct.anon { i32 3296, i16 1488 }, %struct.anon { i32 3297, i16 1489 }, %struct.anon { i32 3298, i16 1490 }, %struct.anon { i32 3299, i16 1491 }, %struct.anon { i32 3300, i16 1492 }, %struct.anon { i32 3301, i16 1493 }, %struct.anon { i32 3302, i16 1494 }, %struct.anon { i32 3303, i16 1495 }, %struct.anon { i32 3304, i16 1496 }, %struct.anon { i32 3305, i16 1497 }, %struct.anon { i32 3306, i16 1498 }, %struct.anon { i32 3307, i16 1499 }, %struct.anon { i32 3308, i16 1500 }, %struct.anon { i32 3309, i16 1501 }, %struct.anon { i32 3310, i16 1502 }, %struct.anon { i32 3311, i16 1503 }, %struct.anon { i32 3312, i16 1504 }, %struct.anon { i32 3313, i16 1505 }, %struct.anon { i32 3314, i16 1506 }, %struct.anon { i32 3315, i16 1507 }, %struct.anon { i32 3316, i16 1508 }, %struct.anon { i32 3317, i16 1509 }, %struct.anon { i32 3318, i16 1510 }, %struct.anon { i32 3319, i16 1511 }, %struct.anon { i32 3320, i16 1512 }, %struct.anon { i32 3321, i16 1513 }, %struct.anon { i32 3322, i16 1514 }, %struct.anon { i32 3489, i16 3585 }, %struct.anon { i32 3490, i16 3586 }, %struct.anon { i32 3491, i16 3587 }, %struct.anon { i32 3492, i16 3588 }, %struct.anon { i32 3493, i16 3589 }, %struct.anon { i32 3494, i16 3590 }, %struct.anon { i32 3495, i16 3591 }, %struct.anon { i32 3496, i16 3592 }, %struct.anon { i32 3497, i16 3593 }, %struct.anon { i32 3498, i16 3594 }, %struct.anon { i32 3499, i16 3595 }, %struct.anon { i32 3500, i16 3596 }, %struct.anon { i32 3501, i16 3597 }, %struct.anon { i32 3502, i16 3598 }, %struct.anon { i32 3503, i16 3599 }, %struct.anon { i32 3504, i16 3600 }, %struct.anon { i32 3505, i16 3601 }, %struct.anon { i32 3506, i16 3602 }, %struct.anon { i32 3507, i16 3603 }, %struct.anon { i32 3508, i16 3604 }, %struct.anon { i32 3509, i16 3605 }, %struct.anon { i32 3510, i16 3606 }, %struct.anon { i32 3511, i16 3607 }, %struct.anon { i32 3512, i16 3608 }, %struct.anon { i32 3513, i16 3609 }, %struct.anon { i32 3514, i16 3610 }, %struct.anon { i32 3515, i16 3611 }, %struct.anon { i32 3516, i16 3612 }, %struct.anon { i32 3517, i16 3613 }, %struct.anon { i32 3518, i16 3614 }, %struct.anon { i32 3519, i16 3615 }, %struct.anon { i32 3520, i16 3616 }, %struct.anon { i32 3521, i16 3617 }, %struct.anon { i32 3522, i16 3618 }, %struct.anon { i32 3523, i16 3619 }, %struct.anon { i32 3524, i16 3620 }, %struct.anon { i32 3525, i16 3621 }, %struct.anon { i32 3526, i16 3622 }, %struct.anon { i32 3527, i16 3623 }, %struct.anon { i32 3528, i16 3624 }, %struct.anon { i32 3529, i16 3625 }, %struct.anon { i32 3530, i16 3626 }, %struct.anon { i32 3531, i16 3627 }, %struct.anon { i32 3532, i16 3628 }, %struct.anon { i32 3533, i16 3629 }, %struct.anon { i32 3534, i16 3630 }, %struct.anon { i32 3535, i16 3631 }, %struct.anon { i32 3536, i16 3632 }, %struct.anon { i32 3537, i16 3633 }, %struct.anon { i32 3538, i16 3634 }, %struct.anon { i32 3539, i16 3635 }, %struct.anon { i32 3540, i16 3636 }, %struct.anon { i32 3541, i16 3637 }, %struct.anon { i32 3542, i16 3638 }, %struct.anon { i32 3543, i16 3639 }, %struct.anon { i32 3544, i16 3640 }, %struct.anon { i32 3545, i16 3641 }, %struct.anon { i32 3546, i16 3642 }, %struct.anon { i32 3551, i16 3647 }, %struct.anon { i32 3552, i16 3648 }, %struct.anon { i32 3553, i16 3649 }, %struct.anon { i32 3554, i16 3650 }, %struct.anon { i32 3555, i16 3651 }, %struct.anon { i32 3556, i16 3652 }, %struct.anon { i32 3557, i16 3653 }, %struct.anon { i32 3558, i16 3654 }, %struct.anon { i32 3559, i16 3655 }, %struct.anon { i32 3560, i16 3656 }, %struct.anon { i32 3561, i16 3657 }, %struct.anon { i32 3562, i16 3658 }, %struct.anon { i32 3563, i16 3659 }, %struct.anon { i32 3564, i16 3660 }, %struct.anon { i32 3565, i16 3661 }, %struct.anon { i32 3568, i16 3664 }, %struct.anon { i32 3569, i16 3665 }, %struct.anon { i32 3570, i16 3666 }, %struct.anon { i32 3571, i16 3667 }, %struct.anon { i32 3572, i16 3668 }, %struct.anon { i32 3573, i16 3669 }, %struct.anon { i32 3574, i16 3670 }, %struct.anon { i32 3575, i16 3671 }, %struct.anon { i32 3576, i16 3672 }, %struct.anon { i32 3577, i16 3673 }, %struct.anon { i32 3839, i16 8361 }, %struct.anon { i32 8364, i16 8364 }, %struct.anon { i32 65104, i16 768 }, %struct.anon { i32 65105, i16 769 }, %struct.anon { i32 65106, i16 770 }, %struct.anon { i32 65107, i16 771 }, %struct.anon { i32 65108, i16 772 }, %struct.anon { i32 65109, i16 774 }, %struct.anon { i32 65110, i16 775 }, %struct.anon { i32 65111, i16 776 }, %struct.anon { i32 65112, i16 778 }, %struct.anon { i32 65113, i16 779 }, %struct.anon { i32 65114, i16 780 }, %struct.anon { i32 65115, i16 807 }, %struct.anon { i32 65116, i16 808 }, %struct.anon { i32 65117, i16 837 }, %struct.anon { i32 65118, i16 12441 }, %struct.anon { i32 65119, i16 12442 }, %struct.anon { i32 65120, i16 803 }, %struct.anon { i32 65121, i16 777 }, %struct.anon { i32 65122, i16 795 }, %struct.anon { i32 65123, i16 824 }, %struct.anon { i32 65124, i16 787 }, %struct.anon { i32 65125, i16 788 }, %struct.anon { i32 65126, i16 783 }, %struct.anon { i32 65127, i16 805 }, %struct.anon { i32 65128, i16 817 }, %struct.anon { i32 65129, i16 813 }, %struct.anon { i32 65130, i16 816 }, %struct.anon { i32 65131, i16 814 }, %struct.anon { i32 65132, i16 804 }, %struct.anon { i32 65133, i16 785 }, %struct.anon { i32 65134, i16 806 }, %struct.anon { i32 65135, i16 164 }, %struct.anon { i32 65164, i16 894 }], align 16
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZN2ui30GetUnicodeCharacterFromXKeySymEm(i64) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.17", align 1
  %4 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2uiL19g_keysym_to_unicodeE, i64 0, i32 0) acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %27, label %6

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2uiL19g_keysym_to_unicodeE, i64 0, i32 0)) #7
  br i1 %7, label %8, label %25

8:                                                ; preds = %6
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2uiL19g_keysym_to_unicodeE, i64 0, i32 1, i64 0), i8 0, i64 32, i1 false)
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2uiL19g_keysym_to_unicodeE, i64 0, i32 1, i64 32) to i32*), align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjtEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2uiL19g_keysym_to_unicodeE, i64 0, i32 1, i64 0) to %"class.std::__1::__hash_table"*), i64 733) #7
  %9 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::tuple.17", %"class.std::__1::tuple.17"* %3, i64 0, i32 0
  br label %12

12:                                               ; preds = %12, %8
  %13 = phi i64 [ 0, %8 ], [ %22, %12 ]
  %14 = getelementptr inbounds [733 x %struct.anon], [733 x %struct.anon]* @_ZN2uiL25g_keysym_to_unicode_tableE, i64 0, i64 %13, i32 1
  %15 = load i16, i16* %14, align 4
  %16 = getelementptr inbounds [733 x %struct.anon], [733 x %struct.anon]* @_ZN2uiL25g_keysym_to_unicode_tableE, i64 0, i64 %13, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  store i32* %16, i32** %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #7
  %17 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjtEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2uiL19g_keysym_to_unicodeE, i64 0, i32 1, i64 0) to %"class.std::__1::__hash_table"*), i32* dereferenceable(4) %16, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.17"* nonnull dereferenceable(1) %3) #7
  %18 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %17, 0
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 2
  %20 = bitcast %"struct.std::__1::__hash_node_base"* %19 to %"struct.std::__1::pair"*
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  store i16 %15, i16* %21, align 2
  %22 = add nuw nsw i64 %13, 1
  %23 = icmp eq i64 %22, 733
  br i1 %23, label %24, label %12

24:                                               ; preds = %12
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2uiL19g_keysym_to_unicodeE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2uiL19g_keysym_to_unicodeE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2uiL19g_keysym_to_unicodeE to i8*)) #7
  br label %27

25:                                               ; preds = %6
  %26 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2uiL19g_keysym_to_unicodeE, i64 0, i32 0) acquire, align 8
  br label %27

27:                                               ; preds = %1, %24, %25
  %28 = phi i64 [ %4, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2uiL19g_keysym_to_unicodeE, i64 0, i32 1, i64 0) to i64), %24 ], [ %26, %25 ]
  %29 = inttoptr i64 %28 to %"class.ui::KeySymToUnicode"*
  %30 = trunc i64 %0 to i32
  %31 = add i32 %30, -32
  %32 = icmp ult i32 %31, 95
  %33 = add i32 %30, -160
  %34 = icmp ult i32 %33, 96
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %38

36:                                               ; preds = %27
  %37 = trunc i64 %0 to i16
  br label %103

38:                                               ; preds = %27
  %39 = and i32 %30, -2097152
  %40 = icmp eq i32 %39, 16777216
  br i1 %40, label %41, label %46

41:                                               ; preds = %38
  %42 = and i32 %30, 2031616
  %43 = icmp eq i32 %42, 0
  %44 = trunc i64 %0 to i16
  %45 = select i1 %43, i16 %44, i16 0
  br label %103

46:                                               ; preds = %38
  %47 = and i64 %0, 4294967295
  %48 = getelementptr inbounds %"class.ui::KeySymToUnicode", %"class.ui::KeySymToUnicode"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %103, label %51

51:                                               ; preds = %46
  %52 = call i64 @llvm.ctpop.i64(i64 %49) #7, !range !2
  %53 = icmp ugt i64 %52, 1
  br i1 %53, label %57, label %54

54:                                               ; preds = %51
  %55 = add i64 %49, 4294967295
  %56 = and i64 %55, %47
  br label %61

57:                                               ; preds = %51
  %58 = icmp ugt i64 %49, %47
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %47, %49
  br label %61

61:                                               ; preds = %59, %57, %54
  %62 = phi i64 [ %56, %54 ], [ %60, %59 ], [ %47, %57 ]
  %63 = getelementptr inbounds %"class.ui::KeySymToUnicode", %"class.ui::KeySymToUnicode"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %64, i64 %62
  %66 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base"* %66, null
  br i1 %67, label %103, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base"* %70, null
  br i1 %71, label %103, label %72

72:                                               ; preds = %68
  %73 = add i64 %49, -1
  br label %74

74:                                               ; preds = %95, %72
  %75 = phi %"struct.std::__1::__hash_node_base"* [ %70, %72 ], [ %97, %95 ]
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %75, i64 1
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, %47
  br i1 %79, label %90, label %80

80:                                               ; preds = %74
  br i1 %53, label %83, label %81

81:                                               ; preds = %80
  %82 = and i64 %78, %73
  br label %87

83:                                               ; preds = %80
  %84 = icmp ult i64 %78, %49
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  %86 = urem i64 %78, %49
  br label %87

87:                                               ; preds = %85, %83, %81
  %88 = phi i64 [ %82, %81 ], [ %86, %85 ], [ %78, %83 ]
  %89 = icmp eq i64 %88, %62
  br i1 %89, label %95, label %103

90:                                               ; preds = %74
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %75, i64 2
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, %30
  br i1 %94, label %99, label %95

95:                                               ; preds = %90, %87
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %75, i64 0, i32 0
  %97 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base"* %97, null
  br i1 %98, label %103, label %74

99:                                               ; preds = %90
  %100 = bitcast %"struct.std::__1::__hash_node_base"* %91 to %"struct.std::__1::pair"*
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 0, i32 1
  %102 = load i16, i16* %101, align 4
  br label %103

103:                                              ; preds = %87, %95, %36, %41, %46, %61, %68, %99
  %104 = phi i16 [ %37, %36 ], [ %45, %41 ], [ %102, %99 ], [ 0, %61 ], [ 0, %46 ], [ 0, %68 ], [ 0, %95 ], [ 0, %87 ]
  ret i16 %104
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjtEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #7
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjtEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #7, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #7
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #7, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #7
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjtEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjtEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #8
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #9
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !3

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #7, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #9
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjtEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.17"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #7, !range !2
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #9, !noalias !5
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !5
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !5
  store i32 %62, i32* %61, align 4, !noalias !5
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i16*
  store i16 0, i16* %64, align 4, !noalias !5
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !5
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8, !noalias !5
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #7, !range !2
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #7
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjtEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #7, !range !2
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base"* %110, %"struct.std::__1::__hash_node_base"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #7, !range !2
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %150
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjtEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjtEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_"}
