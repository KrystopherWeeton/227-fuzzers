; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkBlendImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkBlendImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%class.SkPaint = type <{ %class.sk_sp.59, %class.sk_sp.60, %class.sk_sp.61, %class.sk_sp.62, %class.sk_sp, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.59 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.60 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.61 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.62 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%class.SkSTArray.263 = type { %class.SkAlignedSTStorage.264, %class.SkTArray.265 }
%class.SkAlignedSTStorage.264 = type { [16 x i8] }
%class.SkTArray.265 = type { %class.sk_sp*, i64 }
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.15 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.2*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.15*, %class.SkReadBuffer*)* }
%class.sk_sp.2 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.8*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.13*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.2*, i8*, i64, i8*)*, i8* }
%class.sk_sp.8 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.9", [7 x i8] }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.sk_sp.13 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray.263 }
%"class.(anonymous namespace)::SkBlendImageFilter" = type { %class.SkImageFilter_Base.base, i32 }
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.16*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%class.SkImageFilterCache = type opaque
%"class.skif::FilterResult" = type { %class.sk_sp.18, %"class.skif::LayerSpace.19" }
%"class.skif::LayerSpace.19" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.134, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.134 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.135, %class.sk_sp.136, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.174" }
%class.SkNVRefCnt.135 = type { %"struct.std::__1::atomic" }
%class.sk_sp.136 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.138 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.137, [4 x i8] }>
%union.anon.137 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.16, i8* }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.138 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.139, void (i8*)*, i8* }
%class.SkNVRefCnt.139 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.140, i32, [4 x i8] }
%union.anon.140 = type { %struct.anon.141 }
%struct.anon.141 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.136, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.171, %class.sk_sp.173, %class.sk_sp.173 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.151, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.162, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.143 }
%class.SkTHashTable.143 = type { i32, i32, %class.SkAutoTArray.144 }
%class.SkAutoTArray.144 = type { %"class.std::__1::unique_ptr.145" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.151 = type { %class.SkTHashTable.152 }
%class.SkTHashTable.152 = type { i32, i32, %class.SkAutoTArray.153 }
%class.SkAutoTArray.153 = type { %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.160, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.160 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.161, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.161 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.162 = type { %class.SkTHashTable.163 }
%class.SkTHashTable.163 = type { i32, i32, %class.SkAutoTArray.164 }
%class.SkAutoTArray.164 = type { %"class.std::__1::unique_ptr.165" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.171 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.172, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.172 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.173 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.174" = type { %"struct.std::__1::__atomic_base.175" }
%"struct.std::__1::__atomic_base.175" = type { %"struct.std::__1::__atomic_base.176" }
%"struct.std::__1::__atomic_base.176" = type { %"struct.std::__1::__cxx_atomic_impl.177" }
%"struct.std::__1::__cxx_atomic_impl.177" = type { %"struct.std::__1::__cxx_atomic_base_impl.178" }
%"struct.std::__1::__cxx_atomic_base_impl.178" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.GrImageInfo = type { %class.GrColorInfo, %struct.SkISize }
%class.GrColorInfo = type { %class.sk_sp.14, %class.sk_sp.254, i32, i32 }
%class.sk_sp.254 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.sk_sp.20 = type { %class.SkSpecialSurface* }
%class.SkSpecialSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, [4 x i8] }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.64", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.247" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.63 }
%class.sk_sp.63 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap.75, %class.SkTHashMap.85, %class.SkTArray.96, %class.SkTArray.71, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.67"*, i64 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.71, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.70 }
%class.sk_sp.70 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.75 = type { %class.SkTHashTable.76 }
%class.SkTHashTable.76 = type { i32, i32, %class.SkAutoTArray.77 }
%class.SkAutoTArray.77 = type { %"class.std::__1::unique_ptr.78" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.81" }
%"struct.std::__1::pair.81" = type { i32, i32 }
%class.SkTHashMap.85 = type { %class.SkTHashTable.86 }
%class.SkTHashTable.86 = type { i32, i32, %class.SkAutoTArray.87 }
%class.SkAutoTArray.87 = type { %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.91" }
%"struct.std::__1::pair.91" = type { i32, %class.SkTArray.92* }
%class.SkTArray.92 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.96 = type { %"class.std::__1::unique_ptr.97"*, i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.92, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%class.SkTArray.71 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.112" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.115 }
%class.SkFibBlockSizes.115 = type { i32 }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.122, %class.SkTArray.131, %class.GrOpsTask*, %class.SkSTArray.212, %class.SkSTArray.215, %"class.std::__1::unique_ptr.217", %class.sk_sp.233, %class.GrTokenTracker, i8, i8, %class.SkTArray.234, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.122 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.123", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.126, i8, [7 x i8] }>
%class.sk_sp.126 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.127, i8*, i64 }
%class.GrNonAtomicRef.127 = type { i32 }
%class.SkTArray.131 = type { %class.sk_sp.132*, i64 }
%class.sk_sp.132 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.179, i32, i32, %class.SkSTArray.186, %class.SkSTArray.186, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.133 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.133 = type { %class.sk_sp.134*, i64 }
%class.SkTArray.179 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.180", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.186 = type { %class.SkAlignedSTStorage.187, %class.SkTArray.188 }
%class.SkAlignedSTStorage.187 = type { [8 x i8] }
%class.SkTArray.188 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.189, %class.sk_sp.209, %class.SkTArray.211, %struct.SkRect, %struct.SkIRect }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.189 = type { %class.SkAlignedSTStorage.190, %class.SkTArray.191 }
%class.SkAlignedSTStorage.190 = type { [2000 x i8] }
%class.SkTArray.191 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.192", %class.GrOp* }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.192", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.200" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.198 }
%union.anon.198 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.199, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.199 = type { i32 }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.203, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.203 = type { %class.SkAlignedSTStorage.204, %class.SkTArray.205 }
%class.SkAlignedSTStorage.204 = type { [8 x i8] }
%class.SkTArray.205 = type { %"class.std::__1::unique_ptr.200"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.209 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.210, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.210 = type { %"struct.std::__1::atomic" }
%class.SkTArray.211 = type { %class.GrSurfaceProxy**, i64 }
%class.SkSTArray.212 = type { %class.SkAlignedSTStorage.213, %class.SkTArray.214 }
%class.SkAlignedSTStorage.213 = type { [32 x i8] }
%class.SkTArray.214 = type { i32*, i64 }
%class.SkSTArray.215 = type { %class.SkAlignedSTStorage.216, %class.SkTArray.131 }
%class.SkAlignedSTStorage.216 = type { [32 x i8] }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.220, %"class.std::__1::unique_ptr.224", %class.GrPathRenderer* }
%class.SkSTArray.220 = type { %class.SkAlignedSTStorage.221, %class.SkTArray.222 }
%class.SkAlignedSTStorage.221 = type { [64 x i8] }
%class.SkTArray.222 = type { %class.sk_sp.223*, i64 }
%class.sk_sp.223 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.233 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.234 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.235, i32, %class.GrRenderTask** }
%class.SkTHashMap.235 = type { %class.SkTHashTable.236 }
%class.SkTHashTable.236 = type { i32, i32, %class.SkAutoTArray.237 }
%class.SkAutoTArray.237 = type { %"class.std::__1::unique_ptr.238" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %class.GrProxyProvider* }
%class.GrSurfaceFillContext = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.258, i8, [7 x i8] }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.sk_sp.258 = type { %class.GrOpsTask* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.21, [384 x i64], %class.sk_sp.22, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.23", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.29" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.21 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.22 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.49" }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.32" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %struct.SkPoint* }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.39" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.37, %class.SkSpan.38, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.36" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.36" = type { %struct.SkPoint* }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.37 = type { i32*, i64 }
%class.SkSpan.38 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.2, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.42, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.42 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.43, %struct.SkRect, i32, %"struct.std::__1::atomic.44" }
%class.SkNVRefCnt.43 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__cxx_atomic_impl.47" }
%"struct.std::__1::__cxx_atomic_impl.47" = type { %"struct.std::__1::__cxx_atomic_base_impl.48" }
%"struct.std::__1::__cxx_atomic_base_impl.48" = type { i32 }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { i16*, i16*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i16* }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv = comdat any

$_ZNK18SkImageFilter_Base23affectsTransparentBlackEv = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZN15GrTextureEffect14kDefaultBorderE = comdat any

@.str = private unnamed_addr constant [19 x i8] c"SkBlendImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"SkXfermodeImageFilter_Base\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"SkXfermodeImageFilterImpl\00", align 1
@_ZN4skifL11kNoCropRectE = internal unnamed_addr constant %struct.SkRect { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000 }, align 4
@_ZTVN12_GLOBAL__N_118SkBlendImageFilterE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageFilter_Base*)* @_ZN18SkImageFilter_BaseD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkBlendImageFilter"*)* @_ZN12_GLOBAL__N_118SkBlendImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkReadBuffer*)* (%"class.(anonymous namespace)::SkBlendImageFilter"*)* @_ZNK12_GLOBAL__N_118SkBlendImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::SkBlendImageFilter"*)* @_ZNK12_GLOBAL__N_118SkBlendImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkBlendImageFilter"*, %class.SkWriteBuffer*)* @_ZNK12_GLOBAL__N_118SkBlendImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)* @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.18*, %"class.(anonymous namespace)::SkBlendImageFilter"*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK12_GLOBAL__N_118SkBlendImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%"class.(anonymous namespace)::SkBlendImageFilter"*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_118SkBlendImageFilter14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_ to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@_ZN15GrTextureEffect14kDefaultBorderE = linkonce_odr hidden constant [4 x float] zeroinitializer, comdat, align 16
@.str.3 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@__const._ZNK12_GLOBAL__N_118SkBlendImageFilter14drawForegroundEP8SkCanvasP14SkSpecialImageRK7SkIRect.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.59 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.60 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.61 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.62 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN12_GLOBAL__N_118SkBlendImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray.263 } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray.263 { %class.SkAlignedSTStorage.264 { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray.265 { %class.sk_sp* inttoptr (i64 -6148914691236517206 to %class.sk_sp*), i64 -6148914691236517206 } } }, align 8
@switch.table._ZNK12_GLOBAL__N_118SkBlendImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 0, i32 0, i32 11, i32 15, i32 14, i32 16, i32 7, i32 13, i32 19, i32 17, i32 18, i32 20], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters5BlendE11SkBlendMode5sk_spI13SkImageFilterES3_RKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, i32, %class.sk_sp* nocapture, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca [2 x %class.sk_sp], align 16
  %7 = bitcast [2 x %class.sk_sp]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %6, i64 0, i64 0
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %10 = bitcast %class.sk_sp* %2 to i64*
  %11 = load i64, i64* %10, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %9, align 8
  %12 = bitcast [2 x %class.sk_sp]* %6 to i64*
  store i64 %11, i64* %12, align 16
  %13 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %6, i64 0, i64 1
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %15 = bitcast %class.sk_sp* %3 to i64*
  %16 = load i64, i64* %15, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %14, align 8
  %17 = bitcast %class.sk_sp* %13 to i64*
  store i64 %16, i64* %17, align 8
  %18 = tail call i8* @_Znwm(i64 80) #11
  %19 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %4, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %4, i64 0, i32 0, i32 0
  %21 = load float, float* %20, align 4
  %22 = fcmp une float %21, 0xFFF0000000000000
  br i1 %22, label %35, label %23

23:                                               ; preds = %5
  %24 = getelementptr inbounds float, float* %20, i64 1
  %25 = load float, float* %24, align 4
  %26 = fcmp une float %25, 0xFFF0000000000000
  br i1 %26, label %35, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds float, float* %20, i64 2
  %29 = load float, float* %28, align 4
  %30 = fcmp une float %29, 0x7FF0000000000000
  br i1 %30, label %35, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds float, float* %20, i64 3
  %33 = load float, float* %32, align 4
  %34 = fcmp une float %33, 0x7FF0000000000000
  br i1 %34, label %35, label %36

35:                                               ; preds = %31, %27, %23, %5
  br label %36

36:                                               ; preds = %31, %35
  %37 = phi %struct.SkRect* [ %19, %35 ], [ null, %31 ]
  %38 = bitcast i8* %18 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %38, %class.sk_sp* nonnull %8, i32 2, %struct.SkRect* %37) #10
  %39 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_118SkBlendImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds i8, i8* %18, i64 76
  %41 = bitcast i8* %40 to i32*
  store i32 %1, i32* %41, align 4
  %42 = bitcast %class.sk_sp* %0 to i8**
  store i8* %18, i8** %42, align 8
  %43 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %6, i64 0, i64 1, i32 0
  %44 = load %class.SkImageFilter*, %class.SkImageFilter** %43, align 8
  %45 = icmp eq %class.SkImageFilter* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %36
  %47 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %class.SkImageFilter* %44 to %class.SkRefCntBase*
  %52 = bitcast %class.SkImageFilter* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  call void %55(%class.SkRefCntBase* nonnull %51) #10
  br label %56

56:                                               ; preds = %36, %46, %50
  %57 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %6, i64 0, i64 0, i32 0
  %58 = load %class.SkImageFilter*, %class.SkImageFilter** %57, align 16
  %59 = icmp eq %class.SkImageFilter* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %58, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %class.SkImageFilter* %58 to %class.SkRefCntBase*
  %66 = bitcast %class.SkImageFilter* %58 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  call void %69(%class.SkRefCntBase* nonnull %65) #10
  br label %70

70:                                               ; preds = %64, %60, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z37SkRegisterBlendImageFilterFlattenablev() local_unnamed_addr #0 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_118SkBlendImageFilter10CreateProcER12SkReadBuffer) #10
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_118SkBlendImageFilter10CreateProcER12SkReadBuffer) #10
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_118SkBlendImageFilter10CreateProcER12SkReadBuffer) #10
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.15*, %class.SkReadBuffer*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_118SkBlendImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.15* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca [2 x %class.sk_sp], align 16
  %4 = alloca %"class.SkImageFilter_Base::Common", align 8
  %5 = alloca %"struct.SkImageFilters::CropRect", align 4
  %6 = bitcast %"class.SkImageFilter_Base::Common"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray.263 }* @__const._ZN12_GLOBAL__N_118SkBlendImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %7 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 0, i32 1
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 16
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 0
  %10 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 24
  %11 = bitcast i8* %10 to i64*
  %12 = bitcast i8* %8 to i8**
  store i8* %9, i8** %12, align 8
  store i64 17179869184, i64* %11, align 8
  %13 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %4, %class.SkReadBuffer* dereferenceable(136) %1, i32 2) #10
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %15, align 8
  br label %110

16:                                               ; preds = %2
  %17 = call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #10
  %18 = icmp ult i32 %17, 29
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #10
  br label %20

20:                                               ; preds = %16, %19
  %21 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %25, align 8
  br label %110

26:                                               ; preds = %20
  %27 = bitcast i8* %8 to %class.sk_sp**
  %28 = load %class.sk_sp*, %class.sk_sp** %27, align 8, !noalias !3
  %29 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %28, i64 0, i32 0
  %30 = load %class.SkImageFilter*, %class.SkImageFilter** %29, align 8, !noalias !3
  %31 = icmp eq %class.SkImageFilter* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic, !noalias !3
  %35 = load %class.sk_sp*, %class.sk_sp** %27, align 8, !noalias !6
  br label %36

36:                                               ; preds = %26, %32
  %37 = phi %class.sk_sp* [ %28, %26 ], [ %35, %32 ]
  %38 = ptrtoint %class.SkImageFilter* %30 to i64
  %39 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %37, i64 1, i32 0
  %40 = load %class.SkImageFilter*, %class.SkImageFilter** %39, align 8, !noalias !6
  %41 = icmp eq %class.SkImageFilter* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 1 monotonic, !noalias !6
  br label %45

45:                                               ; preds = %36, %42
  %46 = ptrtoint %class.SkImageFilter* %40 to i64
  %47 = bitcast %"struct.SkImageFilters::CropRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #10
  %48 = load i32, i32* %7, align 8
  %49 = icmp eq i32 %48, 0
  %50 = select i1 %49, i8* bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i8* %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %47, i8* align 4 %50, i64 16, i1 false) #10
  %51 = bitcast [2 x %class.sk_sp]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #10, !noalias !9
  %52 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %3, i64 0, i64 0
  %53 = bitcast [2 x %class.sk_sp]* %3 to i64*
  store i64 %38, i64* %53, align 16, !noalias !9
  %54 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %3, i64 0, i64 1
  %55 = bitcast %class.sk_sp* %54 to i64*
  store i64 %46, i64* %55, align 8, !noalias !9
  %56 = call i8* @_Znwm(i64 80) #11, !noalias !9
  %57 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %5, i64 0, i32 0
  %58 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %5, i64 0, i32 0, i32 0
  %59 = load float, float* %58, align 4, !noalias !9
  %60 = fcmp une float %59, 0xFFF0000000000000
  br i1 %60, label %73, label %61

61:                                               ; preds = %45
  %62 = getelementptr inbounds float, float* %58, i64 1
  %63 = load float, float* %62, align 4, !noalias !9
  %64 = fcmp une float %63, 0xFFF0000000000000
  br i1 %64, label %73, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds float, float* %58, i64 2
  %67 = load float, float* %66, align 4, !noalias !9
  %68 = fcmp une float %67, 0x7FF0000000000000
  br i1 %68, label %73, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds float, float* %58, i64 3
  %71 = load float, float* %70, align 4, !noalias !9
  %72 = fcmp une float %71, 0x7FF0000000000000
  br i1 %72, label %73, label %74

73:                                               ; preds = %69, %65, %61, %45
  br label %74

74:                                               ; preds = %73, %69
  %75 = phi %struct.SkRect* [ %57, %73 ], [ null, %69 ]
  %76 = bitcast i8* %56 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %76, %class.sk_sp* nonnull %52, i32 2, %struct.SkRect* %75) #10, !noalias !9
  %77 = bitcast i8* %56 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_118SkBlendImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8, !noalias !9
  %78 = getelementptr inbounds i8, i8* %56, i64 76
  %79 = bitcast i8* %78 to i32*
  store i32 %17, i32* %79, align 4, !noalias !9
  %80 = ptrtoint i8* %56 to i64
  %81 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %3, i64 0, i64 1, i32 0
  %82 = load %class.SkImageFilter*, %class.SkImageFilter** %81, align 8, !noalias !9
  %83 = icmp eq %class.SkImageFilter* %82, null
  br i1 %83, label %94, label %84

84:                                               ; preds = %74
  %85 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %82, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 -1 acq_rel, !noalias !9
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %94

88:                                               ; preds = %84
  %89 = bitcast %class.SkImageFilter* %82 to %class.SkRefCntBase*
  %90 = bitcast %class.SkImageFilter* %82 to void (%class.SkRefCntBase*)***
  %91 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %90, align 8, !noalias !9
  %92 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, i64 2
  %93 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, align 8, !noalias !9
  call void %93(%class.SkRefCntBase* nonnull %89) #10, !noalias !9
  br label %94

94:                                               ; preds = %88, %84, %74
  %95 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %3, i64 0, i64 0, i32 0
  %96 = load %class.SkImageFilter*, %class.SkImageFilter** %95, align 16, !noalias !9
  %97 = icmp eq %class.SkImageFilter* %96, null
  br i1 %97, label %108, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %96, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 -1 acq_rel, !noalias !9
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %108

102:                                              ; preds = %98
  %103 = bitcast %class.SkImageFilter* %96 to %class.SkRefCntBase*
  %104 = bitcast %class.SkImageFilter* %96 to void (%class.SkRefCntBase*)***
  %105 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %104, align 8, !noalias !9
  %106 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, i64 2
  %107 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, align 8, !noalias !9
  call void %107(%class.SkRefCntBase* nonnull %103) #10, !noalias !9
  br label %108

108:                                              ; preds = %102, %98, %94
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #10, !noalias !9
  %109 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %80, i64* %109, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #10
  br label %110

110:                                              ; preds = %24, %108, %14
  %111 = load i64, i64* %11, align 8
  %112 = and i64 %111, 4294967294
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %110
  %115 = bitcast i8* %8 to %class.sk_sp**
  br label %120

116:                                              ; preds = %136, %110
  %117 = phi i64 [ %111, %110 ], [ %138, %136 ]
  %118 = and i64 %117, 1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %144, label %142

120:                                              ; preds = %136, %114
  %121 = phi i64 [ 0, %114 ], [ %137, %136 ]
  %122 = load %class.sk_sp*, %class.sk_sp** %115, align 8
  %123 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %122, i64 %121, i32 0
  %124 = load %class.SkImageFilter*, %class.SkImageFilter** %123, align 8
  %125 = icmp eq %class.SkImageFilter* %124, null
  br i1 %125, label %136, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %124, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw add i32* %127, i32 -1 acq_rel
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %136

130:                                              ; preds = %126
  %131 = bitcast %class.SkImageFilter* %124 to %class.SkRefCntBase*
  %132 = bitcast %class.SkImageFilter* %124 to void (%class.SkRefCntBase*)***
  %133 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %132, align 8
  %134 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %133, i64 2
  %135 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %134, align 8
  call void %135(%class.SkRefCntBase* nonnull %131) #10
  br label %136

136:                                              ; preds = %130, %126, %120
  %137 = add nuw nsw i64 %121, 1
  %138 = load i64, i64* %11, align 8
  %139 = lshr i64 %138, 1
  %140 = and i64 %139, 2147483647
  %141 = icmp ult i64 %137, %140
  br i1 %141, label %120, label %116

142:                                              ; preds = %116
  %143 = load i8*, i8** %12, align 8
  call void @_Z7sk_freePv(i8* %143) #10
  br label %144

144:                                              ; preds = %116, %142
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #10
  ret void
}

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_118SkBlendImageFilterD0Ev(%"class.(anonymous namespace)::SkBlendImageFilter"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::SkBlendImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %2) #10
  %3 = bitcast %"class.(anonymous namespace)::SkBlendImageFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #10
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal nonnull void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_118SkBlendImageFilter10getFactoryEv(%"class.(anonymous namespace)::SkBlendImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZN12_GLOBAL__N_118SkBlendImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_118SkBlendImageFilter11getTypeNameEv(%"class.(anonymous namespace)::SkBlendImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_118SkBlendImageFilter7flattenER13SkWriteBuffer(%"class.(anonymous namespace)::SkBlendImageFilter"*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.(anonymous namespace)::SkBlendImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #10
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SkBlendImageFilter", %"class.(anonymous namespace)::SkBlendImageFilter"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %7 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %7, i64 7
  %9 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %8, align 8
  tail call void %9(%class.SkWriteBuffer* %1, i32 %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare { <2 x float>, <2 x float> } @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect(%class.SkImageFilter*, %struct.SkRect* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_118SkBlendImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.18* noalias sret, %"class.(anonymous namespace)::SkBlendImageFilter"*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #7 align 2 {
  %5 = alloca %class.sk_sp.14, align 8
  %6 = alloca %class.SkMatrix, align 16
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca %class.GrSurfaceProxyView, align 8
  %10 = alloca %class.GrSurfaceProxyView, align 8
  %11 = alloca %class.GrSurfaceProxyView, align 8
  %12 = alloca %class.GrSurfaceProxyView, align 8
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = alloca %class.SkMatrix, align 16
  %15 = alloca %class.GrSurfaceProxyView, align 8
  %16 = alloca { <2 x float>, <2 x float> }, align 8
  %17 = alloca %class.SkMatrix, align 16
  %18 = alloca %class.GrSurfaceProxyView, align 8
  %19 = alloca %class.GrImageInfo, align 8
  %20 = alloca %class.GrImageInfo, align 8
  %21 = alloca { i64, i64 }, align 8
  %22 = alloca { i64, i64 }, align 8
  %23 = alloca %class.GrSurfaceProxyView, align 8
  %24 = alloca %class.sk_sp.14, align 8
  %25 = alloca { <2 x float>, <2 x float> }, align 8
  %26 = alloca %class.SkPaint, align 8
  %27 = alloca %struct.SkSamplingOptions, align 4
  %28 = alloca { <2 x float>, <2 x float> }, align 8
  %29 = alloca %"class.skif::FilterResult", align 8
  %30 = alloca %"class.skif::FilterResult", align 8
  %31 = alloca %struct.SkIRect, align 8
  %32 = alloca %struct.SkIRect, align 8
  %33 = alloca %struct.SkIRect, align 4
  %34 = alloca %class.sk_sp.20, align 8
  %35 = alloca i64, align 8
  %36 = bitcast i64* %35 to %struct.SkISize*
  %37 = alloca %class.SkPaint, align 8
  %38 = alloca %struct.SkSamplingOptions, align 4
  %39 = bitcast %"class.(anonymous namespace)::SkBlendImageFilter"* %1 to %class.SkImageFilter_Base*
  %40 = bitcast %"class.skif::FilterResult"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #10, !noalias !12
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %30, %class.SkImageFilter_Base* %39, i32 0, %"class.skif::Context"* dereferenceable(136) %2) #10, !noalias !12
  %41 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %30, i64 0, i32 0, i32 0
  %42 = load %class.SkSpecialImage*, %class.SkSpecialImage** %41, align 8, !noalias !15
  %43 = icmp eq %class.SkSpecialImage* %42, null
  br i1 %43, label %61, label %44

44:                                               ; preds = %4
  %45 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %30, i64 0, i32 1, i32 0
  %46 = bitcast %struct.SkIPoint* %45 to i64*
  %47 = load i64, i64* %46, align 8, !noalias !15
  %48 = trunc i64 %47 to i32
  %49 = lshr i64 %47, 32
  %50 = trunc i64 %49 to i32
  %51 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %42, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 1 monotonic, !noalias !15
  %53 = atomicrmw add i32* %51, i32 -1 acq_rel, !noalias !12
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %61

55:                                               ; preds = %44
  %56 = bitcast %class.SkSpecialImage* %42 to %class.SkRefCntBase*
  %57 = bitcast %class.SkSpecialImage* %42 to void (%class.SkRefCntBase*)***
  %58 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %57, align 8, !noalias !12
  %59 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, i64 2
  %60 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, align 8, !noalias !12
  call void %60(%class.SkRefCntBase* nonnull %56) #10, !noalias !12
  br label %61

61:                                               ; preds = %4, %44, %55
  %62 = phi i32 [ %48, %55 ], [ %48, %44 ], [ 0, %4 ]
  %63 = phi i32 [ %50, %55 ], [ %50, %44 ], [ 0, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #10, !noalias !12
  %64 = bitcast %"class.skif::FilterResult"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #10, !noalias !18
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %29, %class.SkImageFilter_Base* %39, i32 1, %"class.skif::Context"* dereferenceable(136) %2) #10, !noalias !18
  %65 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %29, i64 0, i32 0, i32 0
  %66 = load %class.SkSpecialImage*, %class.SkSpecialImage** %65, align 8, !noalias !21
  %67 = icmp eq %class.SkSpecialImage* %66, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %29, i64 0, i32 1, i32 0
  %70 = bitcast %struct.SkIPoint* %69 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !21
  %72 = trunc i64 %71 to i32
  %73 = lshr i64 %71, 32
  %74 = trunc i64 %73 to i32
  %75 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %66, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 1 monotonic, !noalias !21
  %77 = atomicrmw add i32* %75, i32 -1 acq_rel, !noalias !18
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %87

79:                                               ; preds = %68
  %80 = bitcast %class.SkSpecialImage* %66 to %class.SkRefCntBase*
  %81 = bitcast %class.SkSpecialImage* %66 to void (%class.SkRefCntBase*)***
  %82 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %81, align 8, !noalias !18
  %83 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, i64 2
  %84 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, align 8, !noalias !18
  call void %84(%class.SkRefCntBase* nonnull %80) #10, !noalias !18
  br label %87

85:                                               ; preds = %61
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #10, !noalias !18
  %86 = bitcast %struct.SkIRect* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 16, i1 false)
  br label %120

87:                                               ; preds = %68, %79
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #10, !noalias !18
  %88 = bitcast %struct.SkIRect* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #10
  %89 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %66, i64 0, i32 2, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %66, i64 0, i32 2, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = sub i32 %90, %92
  %94 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %66, i64 0, i32 2, i32 3
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %66, i64 0, i32 2, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = sub i32 %95, %97
  %99 = shl i64 %71, 32
  %100 = ashr exact i64 %99, 32
  %101 = sext i32 %93 to i64
  %102 = add nsw i64 %100, %101
  %103 = icmp slt i64 %102, 2147483647
  %104 = select i1 %103, i64 %102, i64 2147483647
  %105 = icmp sgt i64 %104, -2147483647
  %106 = select i1 %105, i64 %104, i64 -2147483647
  %107 = ashr i64 %71, 32
  %108 = sext i32 %98 to i64
  %109 = add nsw i64 %107, %108
  %110 = icmp slt i64 %109, 2147483647
  %111 = select i1 %110, i64 %109, i64 2147483647
  %112 = icmp sgt i64 %111, -2147483647
  %113 = select i1 %112, i64 %111, i64 -2147483647
  %114 = shl nsw i64 %113, 32
  %115 = and i64 %106, 4294967295
  %116 = or i64 %114, %115
  %117 = bitcast %struct.SkIRect* %31 to i64*
  store i64 %71, i64* %117, align 8
  %118 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %31, i64 0, i32 2
  %119 = bitcast i32* %118 to i64*
  store i64 %116, i64* %119, align 8
  br label %120

120:                                              ; preds = %85, %87
  %121 = phi i8* [ %86, %85 ], [ %88, %87 ]
  %122 = phi i32 [ 0, %85 ], [ %72, %87 ]
  %123 = phi i32 [ 0, %85 ], [ %74, %87 ]
  %124 = bitcast %struct.SkIRect* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 0, i64 16, i1 false)
  %125 = icmp ne %class.SkSpecialImage* %42, null
  br i1 %125, label %126, label %161

126:                                              ; preds = %120
  %127 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %42, i64 0, i32 2, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %42, i64 0, i32 2, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = sub i32 %128, %130
  %132 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %42, i64 0, i32 2, i32 3
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %42, i64 0, i32 2, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = sub i32 %133, %135
  %137 = sext i32 %62 to i64
  %138 = sext i32 %131 to i64
  %139 = add nsw i64 %138, %137
  %140 = icmp slt i64 %139, 2147483647
  %141 = select i1 %140, i64 %139, i64 2147483647
  %142 = icmp sgt i64 %141, -2147483647
  %143 = select i1 %142, i64 %141, i64 -2147483647
  %144 = sext i32 %63 to i64
  %145 = sext i32 %136 to i64
  %146 = add nsw i64 %145, %144
  %147 = icmp slt i64 %146, 2147483647
  %148 = select i1 %147, i64 %146, i64 2147483647
  %149 = icmp sgt i64 %148, -2147483647
  %150 = select i1 %149, i64 %148, i64 -2147483647
  %151 = zext i32 %63 to i64
  %152 = shl nuw i64 %151, 32
  %153 = zext i32 %62 to i64
  %154 = or i64 %152, %153
  %155 = shl nsw i64 %150, 32
  %156 = and i64 %143, 4294967295
  %157 = or i64 %155, %156
  %158 = bitcast %struct.SkIRect* %32 to i64*
  store i64 %154, i64* %158, align 8
  %159 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %32, i64 0, i32 2
  %160 = bitcast i32* %159 to i64*
  store i64 %157, i64* %160, align 8
  br label %161

161:                                              ; preds = %126, %120
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %32, %struct.SkIRect* nonnull dereferenceable(16) %31) #10
  %162 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %32, i64 0, i32 2
  %163 = load i32, i32* %162, align 8
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %32, i64 0, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = sext i32 %166 to i64
  %168 = sub nsw i64 %164, %167
  %169 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %32, i64 0, i32 3
  %170 = load i32, i32* %169, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %32, i64 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = sext i32 %173 to i64
  %175 = sub nsw i64 %171, %174
  %176 = icmp slt i64 %168, 1
  %177 = icmp slt i64 %175, 1
  %178 = or i1 %176, %177
  br i1 %178, label %183, label %179

179:                                              ; preds = %161
  %180 = or i64 %175, %168
  %181 = add nsw i64 %180, 2147483648
  %182 = icmp ugt i64 %181, 4294967295
  br i1 %182, label %183, label %185

183:                                              ; preds = %161, %179
  %184 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %184, align 8
  br label %867

185:                                              ; preds = %179
  %186 = bitcast %struct.SkIRect* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %186) #10
  %187 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %33, i64 0, i32 0
  %188 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %33, i64 0, i32 1
  %189 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %33, i64 0, i32 2
  %190 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %33, i64 0, i32 3
  %191 = bitcast %struct.SkIRect* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %191, i8 -86, i64 16, i1 false)
  %192 = call zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base* %39, %"class.skif::Context"* dereferenceable(136) %2, %struct.SkIRect* nonnull dereferenceable(16) %32, %struct.SkIRect* nonnull %33) #10
  br i1 %192, label %195, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %194, align 8
  br label %866

195:                                              ; preds = %185
  %196 = load i32, i32* %187, align 4
  %197 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %196, i32* %197, align 4
  %198 = load i32, i32* %188, align 4
  %199 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %198, i32* %199, align 4
  %200 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %201 = load %class.SkSpecialImage*, %class.SkSpecialImage** %200, align 8
  %202 = call zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage* %201) #10
  br i1 %202, label %203, label %757

203:                                              ; preds = %195
  br i1 %43, label %207, label %204

204:                                              ; preds = %203
  %205 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %42, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = atomicrmw add i32* %205, i32 1 monotonic
  br label %207

207:                                              ; preds = %203, %204
  br i1 %67, label %211, label %208

208:                                              ; preds = %207
  %209 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %66, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = atomicrmw add i32* %209, i32 1 monotonic
  br label %211

211:                                              ; preds = %207, %208
  %212 = bitcast %class.GrSurfaceProxyView* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %212)
  %213 = bitcast %class.GrSurfaceProxyView* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %213)
  %214 = bitcast %class.GrImageInfo* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %214)
  %215 = bitcast %class.GrSurfaceProxyView* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %215)
  %216 = bitcast %class.sk_sp.14* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216)
  %217 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRect*
  %218 = bitcast { <2 x float>, <2 x float> }* %16 to %struct.SkRect*
  %219 = bitcast { i64, i64 }* %21 to %struct.SkIRect*
  %220 = bitcast { i64, i64 }* %22 to %struct.SkIRect*
  %221 = load %class.SkSpecialImage*, %class.SkSpecialImage** %200, align 8, !noalias !24
  %222 = call %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage* %221) #10, !noalias !24
  %223 = bitcast %class.GrSurfaceProxyView* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %223) #10, !noalias !24
  %224 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 0, i32 0
  %225 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 1
  %226 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %223, i8 -86, i64 16, i1 false) #10, !noalias !24
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %224, align 8, !noalias !24
  store i32 0, i32* %225, align 8, !noalias !24
  %227 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 2
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %227, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #10, !noalias !24
  %228 = bitcast %class.GrSurfaceProxyView* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %228) #10, !noalias !24
  %229 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 0, i32 0
  %230 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 1
  %231 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 -86, i64 16, i1 false) #10, !noalias !24
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %229, align 8, !noalias !24
  store i32 0, i32* %230, align 8, !noalias !24
  %232 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %232, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #10, !noalias !24
  br i1 %43, label %275, label %233

233:                                              ; preds = %211
  %234 = bitcast %class.GrSurfaceProxyView* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %234) #10, !noalias !24
  call void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* nonnull sret %11, %class.SkSpecialImage* nonnull %42, %class.GrRecordingContext* %222) #10
  %235 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 0, i32 0
  %236 = bitcast %class.GrSurfaceProxyView* %11 to i64*
  %237 = load i64, i64* %236, align 8, !noalias !24
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %235, align 8, !noalias !24
  %238 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %224, align 8, !noalias !24
  %239 = bitcast %class.GrSurfaceProxyView* %9 to i64*
  store i64 %237, i64* %239, align 8, !noalias !24
  %240 = icmp eq %class.GrSurfaceProxy* %238, null
  br i1 %240, label %255, label %241

241:                                              ; preds = %233
  %242 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %238, i64 0, i32 1
  %243 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %242, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = atomicrmw add i32* %243, i32 -1 acq_rel
  %245 = icmp eq i32 %244, 1
  br i1 %245, label %246, label %253

246:                                              ; preds = %241
  %247 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %242, i64 -2
  %248 = bitcast %class.SkNVRefCnt.135* %247 to %class.GrSurfaceProxy*
  %249 = bitcast %class.SkNVRefCnt.135* %247 to void (%class.GrSurfaceProxy*)***
  %250 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %249, align 8
  %251 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %250, i64 1
  %252 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %251, align 8
  call void %252(%class.GrSurfaceProxy* nonnull %248) #10
  br label %253

253:                                              ; preds = %246, %241
  %254 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %235, align 8, !noalias !24
  br label %255

255:                                              ; preds = %253, %233
  %256 = phi %class.GrSurfaceProxy* [ %254, %253 ], [ null, %233 ]
  %257 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 1
  %258 = load i32, i32* %257, align 8, !noalias !24
  store i32 %258, i32* %225, align 8, !noalias !24
  %259 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 2, i32 0
  %260 = load i16, i16* %259, align 4, !noalias !24
  store i16 %260, i16* %226, align 4, !noalias !24
  %261 = icmp eq %class.GrSurfaceProxy* %256, null
  br i1 %261, label %274, label %262

262:                                              ; preds = %255
  %263 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %256, i64 0, i32 1
  %264 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %263, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = atomicrmw add i32* %264, i32 -1 acq_rel
  %266 = icmp eq i32 %265, 1
  br i1 %266, label %267, label %274

267:                                              ; preds = %262
  %268 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %263, i64 -2
  %269 = bitcast %class.SkNVRefCnt.135* %268 to %class.GrSurfaceProxy*
  %270 = bitcast %class.SkNVRefCnt.135* %268 to void (%class.GrSurfaceProxy*)***
  %271 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %270, align 8
  %272 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %271, i64 1
  %273 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %272, align 8
  call void %273(%class.GrSurfaceProxy* nonnull %269) #10
  br label %274

274:                                              ; preds = %267, %262, %255
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %234) #10, !noalias !24
  br label %275

275:                                              ; preds = %274, %211
  br i1 %67, label %318, label %276

276:                                              ; preds = %275
  %277 = bitcast %class.GrSurfaceProxyView* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %277) #10, !noalias !24
  call void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* nonnull sret %12, %class.SkSpecialImage* nonnull %66, %class.GrRecordingContext* %222) #10
  %278 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 0, i32 0
  %279 = bitcast %class.GrSurfaceProxyView* %12 to i64*
  %280 = load i64, i64* %279, align 8, !noalias !24
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %278, align 8, !noalias !24
  %281 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %229, align 8, !noalias !24
  %282 = bitcast %class.GrSurfaceProxyView* %10 to i64*
  store i64 %280, i64* %282, align 8, !noalias !24
  %283 = icmp eq %class.GrSurfaceProxy* %281, null
  br i1 %283, label %298, label %284

284:                                              ; preds = %276
  %285 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %281, i64 0, i32 1
  %286 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %285, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = atomicrmw add i32* %286, i32 -1 acq_rel
  %288 = icmp eq i32 %287, 1
  br i1 %288, label %289, label %296

289:                                              ; preds = %284
  %290 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %285, i64 -2
  %291 = bitcast %class.SkNVRefCnt.135* %290 to %class.GrSurfaceProxy*
  %292 = bitcast %class.SkNVRefCnt.135* %290 to void (%class.GrSurfaceProxy*)***
  %293 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %292, align 8
  %294 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %293, i64 1
  %295 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %294, align 8
  call void %295(%class.GrSurfaceProxy* nonnull %291) #10
  br label %296

296:                                              ; preds = %289, %284
  %297 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %278, align 8, !noalias !24
  br label %298

298:                                              ; preds = %296, %276
  %299 = phi %class.GrSurfaceProxy* [ %297, %296 ], [ null, %276 ]
  %300 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 1
  %301 = load i32, i32* %300, align 8, !noalias !24
  store i32 %301, i32* %230, align 8, !noalias !24
  %302 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 2, i32 0
  %303 = load i16, i16* %302, align 4, !noalias !24
  store i16 %303, i16* %231, align 4, !noalias !24
  %304 = icmp eq %class.GrSurfaceProxy* %299, null
  br i1 %304, label %317, label %305

305:                                              ; preds = %298
  %306 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %299, i64 0, i32 1
  %307 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %306, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = atomicrmw add i32* %307, i32 -1 acq_rel
  %309 = icmp eq i32 %308, 1
  br i1 %309, label %310, label %317

310:                                              ; preds = %305
  %311 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %306, i64 -2
  %312 = bitcast %class.SkNVRefCnt.135* %311 to %class.GrSurfaceProxy*
  %313 = bitcast %class.SkNVRefCnt.135* %311 to void (%class.GrSurfaceProxy*)***
  %314 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %313, align 8
  %315 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %314, i64 1
  %316 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %315, align 8
  call void %316(%class.GrSurfaceProxy* nonnull %312) #10
  br label %317

317:                                              ; preds = %310, %305, %298
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %277) #10, !noalias !24
  br label %318

318:                                              ; preds = %317, %275
  %319 = load %class.SkSpecialImage*, %class.SkSpecialImage** %200, align 8, !noalias !24
  %320 = call %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage* %319) #10, !noalias !24
  %321 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %320, i64 0, i32 0, i32 0
  %322 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %321) #10, !noalias !24
  %323 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %224, align 8, !noalias !24
  %324 = icmp eq %class.GrSurfaceProxy* %323, null
  br i1 %324, label %400, label %325

325:                                              ; preds = %318
  %326 = bitcast %class.GrSurfaceProxy* %323 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %327 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %326, align 8
  %328 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %327, i64 3
  %329 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %328, align 8
  %330 = call %class.GrTextureProxy* %329(%class.GrSurfaceProxy* nonnull %323) #10
  %331 = icmp eq %class.GrTextureProxy* %330, null
  br i1 %331, label %400, label %332

332:                                              ; preds = %325
  %333 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %333) #10, !noalias !24
  %334 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %42, i64 0, i32 2, i32 0
  %335 = load i32, i32* %334, align 4
  %336 = sitofp i32 %335 to float
  %337 = insertelement <2 x float> undef, float %336, i32 0
  %338 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %42, i64 0, i32 2, i32 1
  %339 = load i32, i32* %338, align 4
  %340 = sitofp i32 %339 to float
  %341 = insertelement <2 x float> %337, float %340, i32 1
  %342 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %42, i64 0, i32 2, i32 2
  %343 = load i32, i32* %342, align 4
  %344 = sitofp i32 %343 to float
  %345 = insertelement <2 x float> undef, float %344, i32 0
  %346 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %42, i64 0, i32 2, i32 3
  %347 = load i32, i32* %346, align 4
  %348 = sitofp i32 %347 to float
  %349 = insertelement <2 x float> %345, float %348, i32 1
  %350 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  store <2 x float> %341, <2 x float>* %350, align 8, !noalias !24
  %351 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  store <2 x float> %349, <2 x float>* %351, align 8, !noalias !24
  %352 = bitcast %class.SkMatrix* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %352) #10, !noalias !24
  %353 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %14, i64 0, i32 1
  %354 = sitofp i32 %62 to float
  %355 = fsub float %336, %354
  %356 = sitofp i32 %63 to float
  %357 = fsub float %340, %356
  %358 = bitcast %class.SkMatrix* %14 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %358, align 16, !alias.scope !27, !noalias !24
  %359 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %14, i64 0, i32 0, i64 4
  %360 = bitcast float* %359 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %360, align 16, !alias.scope !27, !noalias !24
  %361 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %14, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %361, align 16, !alias.scope !27, !noalias !24
  store i32 16, i32* %353, align 4, !alias.scope !27, !noalias !24
  %362 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %14, float %355, float %357) #10
  %363 = bitcast %class.GrSurfaceProxyView* %9 to i64*
  %364 = load i64, i64* %363, align 8, !noalias !24
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %224, align 8, !noalias !24
  %365 = bitcast %class.GrSurfaceProxyView* %15 to i64*
  store i64 %364, i64* %365, align 8, !noalias !24
  %366 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 1
  %367 = load i32, i32* %225, align 8, !noalias !24
  store i32 %367, i32* %366, align 8, !noalias !24
  %368 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 2, i32 0
  %369 = load i16, i16* %226, align 4, !noalias !24
  store i16 %369, i16* %368, align 4, !noalias !24
  %370 = bitcast %class.SkSpecialImage* %42 to i32 (%class.SkSpecialImage*)***
  %371 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %370, align 8
  %372 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %371, i64 3
  %373 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %372, align 8
  %374 = call i32 %373(%class.SkSpecialImage* %42) #10
  %375 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView* nonnull %15, i32 %374, %class.SkMatrix* nonnull dereferenceable(40) %14, i64 2863268611, i32 0, %struct.SkRect* nonnull dereferenceable(16) %217, %class.GrCaps* dereferenceable(232) %322, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0), i1 zeroext false) #10
  %376 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 0, i32 0
  %377 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %376, align 8, !noalias !24
  %378 = icmp eq %class.GrSurfaceProxy* %377, null
  br i1 %378, label %391, label %379

379:                                              ; preds = %332
  %380 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %377, i64 0, i32 1
  %381 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %380, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %382 = atomicrmw add i32* %381, i32 -1 acq_rel
  %383 = icmp eq i32 %382, 1
  br i1 %383, label %384, label %391

384:                                              ; preds = %379
  %385 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %380, i64 -2
  %386 = bitcast %class.SkNVRefCnt.135* %385 to %class.GrSurfaceProxy*
  %387 = bitcast %class.SkNVRefCnt.135* %385 to void (%class.GrSurfaceProxy*)***
  %388 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %387, align 8
  %389 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %388, i64 1
  %390 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %389, align 8
  call void %390(%class.GrSurfaceProxy* nonnull %386) #10
  br label %391

391:                                              ; preds = %384, %379, %332
  %392 = call %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage* %42) #10
  %393 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %370, align 8
  %394 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %393, i64 3
  %395 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %394, align 8
  %396 = call i32 %395(%class.SkSpecialImage* %42) #10
  %397 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %398 = load %class.SkColorSpace*, %class.SkColorSpace** %397, align 8, !noalias !24
  %399 = call %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor* %375, %class.SkColorSpace* %392, i32 %396, %class.SkColorSpace* %398, i32 2) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %352) #10, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %333) #10, !noalias !24
  br label %402

400:                                              ; preds = %325, %318
  %401 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor9MakeColorE8SkRGBA4fIL11SkAlphaType2EE(<2 x float> zeroinitializer, <2 x float> zeroinitializer) #10
  br label %402

402:                                              ; preds = %400, %391
  %403 = phi %class.GrFragmentProcessor* [ %401, %400 ], [ %399, %391 ]
  %404 = ptrtoint %class.GrFragmentProcessor* %403 to i64
  %405 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %229, align 8, !noalias !24
  %406 = icmp eq %class.GrSurfaceProxy* %405, null
  br i1 %406, label %486, label %407

407:                                              ; preds = %402
  %408 = bitcast %class.GrSurfaceProxy* %405 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %409 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %408, align 8
  %410 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %409, i64 3
  %411 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %410, align 8
  %412 = call %class.GrTextureProxy* %411(%class.GrSurfaceProxy* nonnull %405) #10
  %413 = icmp eq %class.GrTextureProxy* %412, null
  br i1 %413, label %486, label %414

414:                                              ; preds = %407
  %415 = bitcast { <2 x float>, <2 x float> }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %415) #10, !noalias !24
  %416 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %66, i64 0, i32 2, i32 0
  %417 = load i32, i32* %416, align 4
  %418 = sitofp i32 %417 to float
  %419 = insertelement <2 x float> undef, float %418, i32 0
  %420 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %66, i64 0, i32 2, i32 1
  %421 = load i32, i32* %420, align 4
  %422 = sitofp i32 %421 to float
  %423 = insertelement <2 x float> %419, float %422, i32 1
  %424 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %66, i64 0, i32 2, i32 2
  %425 = load i32, i32* %424, align 4
  %426 = sitofp i32 %425 to float
  %427 = insertelement <2 x float> undef, float %426, i32 0
  %428 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %66, i64 0, i32 2, i32 3
  %429 = load i32, i32* %428, align 4
  %430 = sitofp i32 %429 to float
  %431 = insertelement <2 x float> %427, float %430, i32 1
  %432 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 0
  store <2 x float> %423, <2 x float>* %432, align 8, !noalias !24
  %433 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 1
  store <2 x float> %431, <2 x float>* %433, align 8, !noalias !24
  %434 = bitcast %class.SkMatrix* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %434) #10, !noalias !24
  %435 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 1
  %436 = sitofp i32 %122 to float
  %437 = fsub float %418, %436
  %438 = sitofp i32 %123 to float
  %439 = fsub float %422, %438
  %440 = bitcast %class.SkMatrix* %17 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %440, align 16, !alias.scope !30, !noalias !24
  %441 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 0, i64 4
  %442 = bitcast float* %441 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %442, align 16, !alias.scope !30, !noalias !24
  %443 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %443, align 16, !alias.scope !30, !noalias !24
  store i32 16, i32* %435, align 4, !alias.scope !30, !noalias !24
  %444 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %17, float %437, float %439) #10
  %445 = bitcast %class.GrSurfaceProxyView* %10 to i64*
  %446 = load i64, i64* %445, align 8, !noalias !24
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %229, align 8, !noalias !24
  %447 = bitcast %class.GrSurfaceProxyView* %18 to i64*
  store i64 %446, i64* %447, align 8, !noalias !24
  %448 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 1
  %449 = load i32, i32* %230, align 8, !noalias !24
  store i32 %449, i32* %448, align 8, !noalias !24
  %450 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 2, i32 0
  %451 = load i16, i16* %231, align 4, !noalias !24
  store i16 %451, i16* %450, align 4, !noalias !24
  %452 = bitcast %class.SkSpecialImage* %66 to i32 (%class.SkSpecialImage*)***
  %453 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %452, align 8
  %454 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %453, i64 3
  %455 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %454, align 8
  %456 = call i32 %455(%class.SkSpecialImage* %66) #10
  %457 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView* nonnull %18, i32 %456, %class.SkMatrix* nonnull dereferenceable(40) %17, i64 2863268611, i32 0, %struct.SkRect* nonnull dereferenceable(16) %218, %class.GrCaps* dereferenceable(232) %322, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0), i1 zeroext false) #10
  %458 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 0, i32 0
  %459 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %458, align 8, !noalias !24
  %460 = icmp eq %class.GrSurfaceProxy* %459, null
  br i1 %460, label %473, label %461

461:                                              ; preds = %414
  %462 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %459, i64 0, i32 1
  %463 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %462, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %464 = atomicrmw add i32* %463, i32 -1 acq_rel
  %465 = icmp eq i32 %464, 1
  br i1 %465, label %466, label %473

466:                                              ; preds = %461
  %467 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %462, i64 -2
  %468 = bitcast %class.SkNVRefCnt.135* %467 to %class.GrSurfaceProxy*
  %469 = bitcast %class.SkNVRefCnt.135* %467 to void (%class.GrSurfaceProxy*)***
  %470 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %469, align 8
  %471 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %470, i64 1
  %472 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %471, align 8
  call void %472(%class.GrSurfaceProxy* nonnull %468) #10
  br label %473

473:                                              ; preds = %466, %461, %414
  %474 = call %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage* %66) #10
  %475 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %452, align 8
  %476 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %475, i64 3
  %477 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %476, align 8
  %478 = call i32 %477(%class.SkSpecialImage* %66) #10
  %479 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %480 = load %class.SkColorSpace*, %class.SkColorSpace** %479, align 8, !noalias !24
  %481 = call %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor* %457, %class.SkColorSpace* %474, i32 %478, %class.SkColorSpace* %480, i32 2) #10
  %482 = getelementptr inbounds %"class.(anonymous namespace)::SkBlendImageFilter", %"class.(anonymous namespace)::SkBlendImageFilter"* %1, i64 0, i32 1
  %483 = load i32, i32* %482, align 4, !noalias !24
  %484 = call %class.GrFragmentProcessor* @_ZN24GrBlendFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEES5_11SkBlendModeNS_13BlendBehaviorE(%class.GrFragmentProcessor* %481, %class.GrFragmentProcessor* %403, i32 %483, i32 0) #10
  %485 = ptrtoint %class.GrFragmentProcessor* %484 to i64
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %434) #10, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %415) #10, !noalias !24
  br label %486

486:                                              ; preds = %473, %407, %402
  %487 = phi i64 [ %404, %407 ], [ %485, %473 ], [ %404, %402 ]
  %488 = bitcast %class.GrImageInfo* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %488) #10, !noalias !24
  %489 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %19, i64 0, i32 0, i32 0, i32 0
  %490 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %19, i64 0, i32 0, i32 1, i32 0
  %491 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %488, i8 -86, i64 32, i1 false) #10, !noalias !24
  %492 = load i32, i32* %491, align 8, !noalias !24
  %493 = icmp ult i32 %492, 21
  br i1 %493, label %495, label %494

494:                                              ; preds = %486
  call void @llvm.trap() #10
  unreachable

495:                                              ; preds = %486
  %496 = sext i32 %492 to i64
  %497 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK12_GLOBAL__N_118SkBlendImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint, i64 0, i64 %496
  %498 = load i32, i32* %497, align 4
  %499 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %500 = load %class.SkColorSpace*, %class.SkColorSpace** %499, align 8, !noalias !33
  %501 = icmp eq %class.SkColorSpace* %500, null
  br i1 %501, label %505, label %502

502:                                              ; preds = %495
  %503 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %500, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %504 = atomicrmw add i32* %503, i32 1 monotonic, !noalias !36
  br label %505

505:                                              ; preds = %502, %495
  %506 = ptrtoint %class.SkColorSpace* %500 to i64
  %507 = load i32, i32* %189, align 4, !noalias !24
  %508 = load i32, i32* %187, align 4, !noalias !24
  %509 = sub i32 %507, %508
  %510 = load i32, i32* %190, align 4, !noalias !24
  %511 = load i32, i32* %188, align 4, !noalias !24
  %512 = sub i32 %510, %511
  %513 = zext i32 %512 to i64
  %514 = shl nuw i64 %513, 32
  %515 = zext i32 %509 to i64
  %516 = or i64 %514, %515
  %517 = bitcast %class.sk_sp.14* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %517) #10, !noalias !24
  %518 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %19, i64 0, i32 0
  %519 = bitcast %class.sk_sp.14* %5 to i64*
  store i64 %506, i64* %519, align 8, !noalias !24
  call void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo* nonnull %518, i32 %498, i32 2, %class.sk_sp.14* nonnull %5) #10, !noalias !24
  %520 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %5, i64 0, i32 0
  %521 = load %class.SkColorSpace*, %class.SkColorSpace** %520, align 8, !noalias !24
  %522 = icmp eq %class.SkColorSpace* %521, null
  br i1 %522, label %529, label %523

523:                                              ; preds = %505
  %524 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %521, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %525 = atomicrmw add i32* %524, i32 -1 acq_rel
  %526 = icmp eq i32 %525, 1
  br i1 %526, label %527, label %529

527:                                              ; preds = %523
  %528 = bitcast %class.SkColorSpace* %521 to i8*
  call void @_ZdlPv(i8* %528) #11
  br label %529

529:                                              ; preds = %527, %523, %505
  %530 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %19, i64 0, i32 1
  %531 = bitcast %struct.SkISize* %530 to i64*
  store i64 %516, i64* %531, align 8, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %517) #10, !noalias !24
  %532 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %20, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %532, %class.GrColorInfo* nonnull dereferenceable(24) %518) #10, !noalias !24
  %533 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %20, i64 0, i32 1
  %534 = bitcast %struct.SkISize* %533 to i64*
  %535 = load i64, i64* %531, align 8, !noalias !24
  store i64 %535, i64* %534, align 8, !noalias !24
  %536 = call %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %222, %class.GrImageInfo* nonnull %20, i32 0, i32 1, i1 zeroext false, i1 zeroext false, i32 0, i1 zeroext true) #10, !noalias !24
  %537 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %20, i64 0, i32 0, i32 1, i32 0
  %538 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %537, align 8, !noalias !24
  %539 = icmp eq %class.GrColorSpaceXform* %538, null
  br i1 %539, label %550, label %540

540:                                              ; preds = %529
  %541 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %538, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %542 = atomicrmw add i32* %541, i32 -1 acq_rel
  %543 = icmp eq i32 %542, 1
  br i1 %543, label %544, label %550

544:                                              ; preds = %540
  %545 = bitcast %class.GrColorSpaceXform* %538 to %class.SkRefCntBase*
  %546 = bitcast %class.GrColorSpaceXform* %538 to void (%class.SkRefCntBase*)***
  %547 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %546, align 8
  %548 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %547, i64 2
  %549 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %548, align 8
  call void %549(%class.SkRefCntBase* nonnull %545) #10
  br label %550

550:                                              ; preds = %544, %540, %529
  %551 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %20, i64 0, i32 0, i32 0, i32 0
  %552 = load %class.SkColorSpace*, %class.SkColorSpace** %551, align 8, !noalias !24
  %553 = icmp eq %class.SkColorSpace* %552, null
  br i1 %553, label %560, label %554

554:                                              ; preds = %550
  %555 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %552, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %556 = atomicrmw add i32* %555, i32 -1 acq_rel
  %557 = icmp eq i32 %556, 1
  br i1 %557, label %558, label %560

558:                                              ; preds = %554
  %559 = bitcast %class.SkColorSpace* %552 to i8*
  call void @_ZdlPv(i8* %559) #11
  br label %560

560:                                              ; preds = %558, %554, %550
  %561 = icmp eq %class.GrSurfaceFillContext* %536, null
  br i1 %561, label %562, label %564

562:                                              ; preds = %560
  %563 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %563, align 8, !alias.scope !24
  br label %674

564:                                              ; preds = %560
  %565 = bitcast { i64, i64 }* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %565) #10, !noalias !24
  %566 = load i32, i32* %189, align 4, !noalias !24
  %567 = load i32, i32* %187, align 4, !noalias !24
  %568 = sub i32 %566, %567
  %569 = load i32, i32* %190, align 4, !noalias !24
  %570 = load i32, i32* %188, align 4, !noalias !24
  %571 = sub i32 %569, %570
  %572 = zext i32 %571 to i64
  %573 = shl nuw i64 %572, 32
  %574 = zext i32 %568 to i64
  %575 = or i64 %573, %574
  %576 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 0
  store i64 0, i64* %576, align 8, !noalias !24
  %577 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 1
  store i64 %575, i64* %577, align 8, !noalias !24
  %578 = inttoptr i64 %487 to %class.GrFragmentProcessor*
  %579 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %580 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %580) #10, !noalias !24
  %581 = sitofp i32 %567 to float
  %582 = insertelement <2 x float> undef, float %581, i32 0
  %583 = sitofp i32 %570 to float
  %584 = insertelement <2 x float> %582, float %583, i32 1
  %585 = sitofp i32 %566 to float
  %586 = insertelement <2 x float> undef, float %585, i32 0
  %587 = sitofp i32 %569 to float
  %588 = insertelement <2 x float> %586, float %587, i32 1
  %589 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  store <2 x float> %584, <2 x float>* %589, align 8, !noalias !24
  %590 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %588, <2 x float>* %590, align 8, !noalias !24
  %591 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %592 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %592) #10, !noalias !24
  %593 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %594 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %594) #10, !noalias !24
  %595 = sitofp i32 %568 to float
  %596 = insertelement <2 x float> undef, float %595, i32 0
  %597 = sitofp i32 %571 to float
  %598 = insertelement <2 x float> %596, float %597, i32 1
  %599 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %599, align 8, !noalias !24
  %600 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %598, <2 x float>* %600, align 8, !noalias !24
  %601 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %601, align 16, !alias.scope !39, !noalias !24
  %602 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %603 = bitcast float* %602 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %603, align 16, !alias.scope !39, !noalias !24
  %604 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %604, align 16, !alias.scope !39, !noalias !24
  store i32 16, i32* %593, align 4, !alias.scope !39, !noalias !24
  %605 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %6, %struct.SkRect* nonnull dereferenceable(16) %591, %struct.SkRect* nonnull dereferenceable(16) %579, i32 0) #10, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %594) #10, !noalias !24
  %606 = call %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* nonnull dereferenceable(40) %6, %class.GrFragmentProcessor* %578) #10, !noalias !24
  call void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext* nonnull %536, %struct.SkIRect* nonnull dereferenceable(16) %219, %class.GrFragmentProcessor* %606) #10, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %592) #10, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %580) #10, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %565) #10, !noalias !24
  %607 = bitcast { i64, i64 }* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %607) #10, !noalias !24
  %608 = load i32, i32* %189, align 4, !noalias !24
  %609 = load i32, i32* %187, align 4, !noalias !24
  %610 = sub i32 %608, %609
  %611 = load i32, i32* %190, align 4, !noalias !24
  %612 = load i32, i32* %188, align 4, !noalias !24
  %613 = sub i32 %611, %612
  %614 = zext i32 %613 to i64
  %615 = shl nuw i64 %614, 32
  %616 = zext i32 %610 to i64
  %617 = or i64 %615, %616
  %618 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i64 0, i32 0
  store i64 0, i64* %618, align 8, !noalias !24
  %619 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i64 0, i32 1
  store i64 %617, i64* %619, align 8, !noalias !24
  %620 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %23, i64 0, i32 0, i32 0
  %621 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %536, i64 0, i32 0, i32 2, i32 0, i32 0
  %622 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %621, align 8, !noalias !44
  %623 = icmp eq %class.GrSurfaceProxy* %622, null
  br i1 %623, label %627, label %624

624:                                              ; preds = %564
  %625 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %622, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %626 = atomicrmw add i32* %625, i32 1 monotonic, !noalias !47
  br label %627

627:                                              ; preds = %624, %564
  store %class.GrSurfaceProxy* %622, %class.GrSurfaceProxy** %620, align 8, !alias.scope !47, !noalias !24
  %628 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %23, i64 0, i32 1
  %629 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %536, i64 0, i32 0, i32 2, i32 1
  %630 = load i32, i32* %629, align 8, !noalias !44
  store i32 %630, i32* %628, align 8, !alias.scope !47, !noalias !24
  %631 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %23, i64 0, i32 2, i32 0
  %632 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %536, i64 0, i32 0, i32 2, i32 2, i32 0
  %633 = load i16, i16* %632, align 2, !noalias !44
  store i16 %633, i16* %631, align 4, !alias.scope !47, !noalias !24
  %634 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %536, i64 0, i32 0, i32 3, i32 2
  %635 = load i32, i32* %634, align 8, !noalias !24
  %636 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %24, i64 0, i32 0
  %637 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %536, i64 0, i32 0, i32 3, i32 0, i32 0
  %638 = load %class.SkColorSpace*, %class.SkColorSpace** %637, align 8, !noalias !48
  %639 = icmp eq %class.SkColorSpace* %638, null
  br i1 %639, label %643, label %640

640:                                              ; preds = %627
  %641 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %638, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %642 = atomicrmw add i32* %641, i32 1 monotonic, !noalias !51
  br label %643

643:                                              ; preds = %640, %627
  store %class.SkColorSpace* %638, %class.SkColorSpace** %636, align 8, !alias.scope !51, !noalias !24
  %644 = load %class.SkSpecialImage*, %class.SkSpecialImage** %200, align 8, !noalias !24
  %645 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %644, i64 0, i32 1
  call void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.18* sret %0, %class.GrRecordingContext* %222, %struct.SkIRect* nonnull dereferenceable(16) %220, i32 0, %class.GrSurfaceProxyView* nonnull %23, i32 %635, %class.sk_sp.14* nonnull %24, %class.SkSurfaceProps* dereferenceable(8) %645, i32 2) #10
  %646 = load %class.SkColorSpace*, %class.SkColorSpace** %636, align 8, !noalias !24
  %647 = icmp eq %class.SkColorSpace* %646, null
  br i1 %647, label %654, label %648

648:                                              ; preds = %643
  %649 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %646, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %650 = atomicrmw add i32* %649, i32 -1 acq_rel
  %651 = icmp eq i32 %650, 1
  br i1 %651, label %652, label %654

652:                                              ; preds = %648
  %653 = bitcast %class.SkColorSpace* %646 to i8*
  call void @_ZdlPv(i8* %653) #11
  br label %654

654:                                              ; preds = %652, %648, %643
  %655 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %620, align 8, !noalias !24
  %656 = icmp eq %class.GrSurfaceProxy* %655, null
  br i1 %656, label %669, label %657

657:                                              ; preds = %654
  %658 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %655, i64 0, i32 1
  %659 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %658, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %660 = atomicrmw add i32* %659, i32 -1 acq_rel
  %661 = icmp eq i32 %660, 1
  br i1 %661, label %662, label %669

662:                                              ; preds = %657
  %663 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %658, i64 -2
  %664 = bitcast %class.SkNVRefCnt.135* %663 to %class.GrSurfaceProxy*
  %665 = bitcast %class.SkNVRefCnt.135* %663 to void (%class.GrSurfaceProxy*)***
  %666 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %665, align 8
  %667 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %666, i64 1
  %668 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %667, align 8
  call void %668(%class.GrSurfaceProxy* nonnull %664) #10
  br label %669

669:                                              ; preds = %662, %657, %654
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %607) #10, !noalias !24
  %670 = bitcast %class.GrSurfaceFillContext* %536 to void (%class.GrSurfaceFillContext*)***
  %671 = load void (%class.GrSurfaceFillContext*)**, void (%class.GrSurfaceFillContext*)*** %670, align 8
  %672 = getelementptr inbounds void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %671, i64 1
  %673 = load void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %672, align 8
  call void %673(%class.GrSurfaceFillContext* nonnull %536) #10
  br label %674

674:                                              ; preds = %669, %562
  %675 = phi i64 [ %487, %562 ], [ 0, %669 ]
  %676 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %490, align 8, !noalias !24
  %677 = icmp eq %class.GrColorSpaceXform* %676, null
  br i1 %677, label %688, label %678

678:                                              ; preds = %674
  %679 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %676, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %680 = atomicrmw add i32* %679, i32 -1 acq_rel
  %681 = icmp eq i32 %680, 1
  br i1 %681, label %682, label %688

682:                                              ; preds = %678
  %683 = bitcast %class.GrColorSpaceXform* %676 to %class.SkRefCntBase*
  %684 = bitcast %class.GrColorSpaceXform* %676 to void (%class.SkRefCntBase*)***
  %685 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %684, align 8
  %686 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %685, i64 2
  %687 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %686, align 8
  call void %687(%class.SkRefCntBase* nonnull %683) #10
  br label %688

688:                                              ; preds = %682, %678, %674
  %689 = load %class.SkColorSpace*, %class.SkColorSpace** %489, align 8, !noalias !24
  %690 = icmp eq %class.SkColorSpace* %689, null
  br i1 %690, label %697, label %691

691:                                              ; preds = %688
  %692 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %689, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %693 = atomicrmw add i32* %692, i32 -1 acq_rel
  %694 = icmp eq i32 %693, 1
  br i1 %694, label %695, label %697

695:                                              ; preds = %691
  %696 = bitcast %class.SkColorSpace* %689 to i8*
  call void @_ZdlPv(i8* %696) #11
  br label %697

697:                                              ; preds = %695, %691, %688
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %488) #10, !noalias !24
  %698 = icmp eq i64 %675, 0
  br i1 %698, label %705, label %699

699:                                              ; preds = %697
  %700 = inttoptr i64 %675 to %class.GrFragmentProcessor*
  %701 = inttoptr i64 %675 to void (%class.GrFragmentProcessor*)***
  %702 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %701, align 8
  %703 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %702, i64 1
  %704 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %703, align 8
  call void %704(%class.GrFragmentProcessor* nonnull %700) #10
  br label %705

705:                                              ; preds = %699, %697
  %706 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %229, align 8, !noalias !24
  %707 = icmp eq %class.GrSurfaceProxy* %706, null
  br i1 %707, label %720, label %708

708:                                              ; preds = %705
  %709 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %706, i64 0, i32 1
  %710 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %709, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %711 = atomicrmw add i32* %710, i32 -1 acq_rel
  %712 = icmp eq i32 %711, 1
  br i1 %712, label %713, label %720

713:                                              ; preds = %708
  %714 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %709, i64 -2
  %715 = bitcast %class.SkNVRefCnt.135* %714 to %class.GrSurfaceProxy*
  %716 = bitcast %class.SkNVRefCnt.135* %714 to void (%class.GrSurfaceProxy*)***
  %717 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %716, align 8
  %718 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %717, i64 1
  %719 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %718, align 8
  call void %719(%class.GrSurfaceProxy* nonnull %715) #10
  br label %720

720:                                              ; preds = %713, %708, %705
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %228) #10, !noalias !24
  %721 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %224, align 8, !noalias !24
  %722 = icmp eq %class.GrSurfaceProxy* %721, null
  br i1 %722, label %735, label %723

723:                                              ; preds = %720
  %724 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %721, i64 0, i32 1
  %725 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %724, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %726 = atomicrmw add i32* %725, i32 -1 acq_rel
  %727 = icmp eq i32 %726, 1
  br i1 %727, label %728, label %735

728:                                              ; preds = %723
  %729 = getelementptr inbounds %class.SkNVRefCnt.135, %class.SkNVRefCnt.135* %724, i64 -2
  %730 = bitcast %class.SkNVRefCnt.135* %729 to %class.GrSurfaceProxy*
  %731 = bitcast %class.SkNVRefCnt.135* %729 to void (%class.GrSurfaceProxy*)***
  %732 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %731, align 8
  %733 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %732, i64 1
  %734 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %733, align 8
  call void %734(%class.GrSurfaceProxy* nonnull %730) #10
  br label %735

735:                                              ; preds = %720, %723, %728
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %223) #10, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %212)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %213)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %214)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %216)
  br i1 %67, label %746, label %736

736:                                              ; preds = %735
  %737 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %66, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %738 = atomicrmw add i32* %737, i32 -1 acq_rel
  %739 = icmp eq i32 %738, 1
  br i1 %739, label %740, label %746

740:                                              ; preds = %736
  %741 = bitcast %class.SkSpecialImage* %66 to %class.SkRefCntBase*
  %742 = bitcast %class.SkSpecialImage* %66 to void (%class.SkRefCntBase*)***
  %743 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %742, align 8
  %744 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %743, i64 2
  %745 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %744, align 8
  call void %745(%class.SkRefCntBase* nonnull %741) #10
  br label %746

746:                                              ; preds = %735, %736, %740
  br i1 %43, label %866, label %747

747:                                              ; preds = %746
  %748 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %42, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %749 = atomicrmw add i32* %748, i32 -1 acq_rel
  %750 = icmp eq i32 %749, 1
  br i1 %750, label %751, label %866

751:                                              ; preds = %747
  %752 = bitcast %class.SkSpecialImage* %42 to %class.SkRefCntBase*
  %753 = bitcast %class.SkSpecialImage* %42 to void (%class.SkRefCntBase*)***
  %754 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %753, align 8
  %755 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %754, i64 2
  %756 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %755, align 8
  call void %756(%class.SkRefCntBase* nonnull %752) #10
  br label %866

757:                                              ; preds = %195
  %758 = bitcast %class.sk_sp.20* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %758) #10
  %759 = getelementptr inbounds %class.sk_sp.20, %class.sk_sp.20* %34, i64 0, i32 0
  store %class.SkSpecialSurface* inttoptr (i64 -6148914691236517206 to %class.SkSpecialSurface*), %class.SkSpecialSurface** %759, align 8
  %760 = bitcast i64* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %760) #10
  %761 = load i32, i32* %189, align 4
  %762 = load i32, i32* %187, align 4
  %763 = sub i32 %761, %762
  %764 = load i32, i32* %190, align 4
  %765 = load i32, i32* %188, align 4
  %766 = sub i32 %764, %765
  %767 = zext i32 %766 to i64
  %768 = shl nuw i64 %767, 32
  %769 = zext i32 %763 to i64
  %770 = or i64 %768, %769
  store i64 %770, i64* %35, align 8
  %771 = load %class.SkSpecialImage*, %class.SkSpecialImage** %200, align 8, !noalias !52
  %772 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %771, i64 0, i32 1
  %773 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %774 = load i32, i32* %773, align 8, !noalias !52
  %775 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %776 = load %class.SkColorSpace*, %class.SkColorSpace** %775, align 8, !noalias !52
  call void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.20* nonnull sret %34, %class.SkSpecialImage* %771, i32 %774, %class.SkColorSpace* %776, %struct.SkISize* nonnull dereferenceable(8) %36, i32 2, %class.SkSurfaceProps* dereferenceable(8) %772) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %760) #10
  %777 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %759, align 8
  %778 = icmp eq %class.SkSpecialSurface* %777, null
  br i1 %778, label %779, label %781

779:                                              ; preds = %757
  %780 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %780, align 8
  br label %865

781:                                              ; preds = %757
  %782 = call %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface* nonnull %777) #10
  %783 = bitcast { <2 x float>, <2 x float> }* %25 to %struct.SkRGBA4f*
  %784 = bitcast { <2 x float>, <2 x float> }* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %784) #10
  %785 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #10
  %786 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %25, i64 0, i32 0
  %787 = extractvalue { <2 x float>, <2 x float> } %785, 0
  store <2 x float> %787, <2 x float>* %786, align 8
  %788 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %25, i64 0, i32 1
  %789 = extractvalue { <2 x float>, <2 x float> } %785, 1
  store <2 x float> %789, <2 x float>* %788, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %782, %struct.SkRGBA4f* nonnull dereferenceable(16) %783, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %784) #10
  %790 = load i32, i32* %187, align 4
  %791 = sub nsw i32 0, %790
  %792 = sitofp i32 %791 to float
  %793 = load i32, i32* %188, align 4
  %794 = sub nsw i32 0, %793
  %795 = sitofp i32 %794 to float
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %782, float %792, float %795) #10
  br i1 %125, label %796, label %805

796:                                              ; preds = %781
  %797 = bitcast %class.SkPaint* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %797) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %797, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK12_GLOBAL__N_118SkBlendImageFilter14drawForegroundEP8SkCanvasP14SkSpecialImageRK7SkIRect.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %37) #10
  %798 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %37, i64 0, i32 8, i32 0, i32 0
  %799 = load i32, i32* %798, align 8
  %800 = and i32 %799, -261121
  %801 = or i32 %800, 1024
  store i32 %801, i32* %798, align 8
  %802 = sitofp i32 %62 to float
  %803 = sitofp i32 %63 to float
  %804 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %38, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %804) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %804, i8 0, i64 20, i1 false)
  call void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage* nonnull %42, %class.SkCanvas* %782, float %802, float %803, %struct.SkSamplingOptions* nonnull dereferenceable(20) %38, %class.SkPaint* nonnull %37) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %804) #10
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %37) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %797) #10
  br label %805

805:                                              ; preds = %796, %781
  %806 = bitcast { <2 x float>, <2 x float> }* %28 to %struct.SkRect*
  %807 = bitcast %class.SkPaint* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %807) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %807, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK12_GLOBAL__N_118SkBlendImageFilter14drawForegroundEP8SkCanvasP14SkSpecialImageRK7SkIRect.paint to i8*), i64 72, i1 false) #10
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %26) #10
  %808 = getelementptr inbounds %"class.(anonymous namespace)::SkBlendImageFilter", %"class.(anonymous namespace)::SkBlendImageFilter"* %1, i64 0, i32 1
  %809 = load i32, i32* %808, align 4
  %810 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %26, i64 0, i32 8, i32 0, i32 0
  %811 = load i32, i32* %810, align 8
  %812 = shl i32 %809, 10
  %813 = and i32 %812, 261120
  %814 = and i32 %811, -261121
  %815 = or i32 %814, %813
  store i32 %815, i32* %810, align 8
  br i1 %67, label %824, label %816

816:                                              ; preds = %805
  %817 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %31, i64 0, i32 0
  %818 = load i32, i32* %817, align 8
  %819 = sitofp i32 %818 to float
  %820 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %31, i64 0, i32 1
  %821 = load i32, i32* %820, align 4
  %822 = sitofp i32 %821 to float
  %823 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %27, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %823) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %823, i8 0, i64 20, i1 false) #10
  call void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage* nonnull %66, %class.SkCanvas* %782, float %819, float %822, %struct.SkSamplingOptions* nonnull dereferenceable(20) %27, %class.SkPaint* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %823) #10
  br label %824

824:                                              ; preds = %816, %805
  %825 = icmp eq %class.SkCanvas* %782, null
  br i1 %825, label %829, label %826

826:                                              ; preds = %824
  %827 = call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* nonnull %782) #10
  %828 = call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* nonnull %782) #10
  br label %829

829:                                              ; preds = %826, %824
  %830 = phi i32 [ 0, %824 ], [ %827, %826 ]
  %831 = bitcast { <2 x float>, <2 x float> }* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %831) #10
  %832 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %31, i64 0, i32 0
  %833 = load i32, i32* %832, align 8
  %834 = sitofp i32 %833 to float
  %835 = insertelement <2 x float> undef, float %834, i32 0
  %836 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %31, i64 0, i32 1
  %837 = load i32, i32* %836, align 4
  %838 = sitofp i32 %837 to float
  %839 = insertelement <2 x float> %835, float %838, i32 1
  %840 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %31, i64 0, i32 2
  %841 = load i32, i32* %840, align 8
  %842 = sitofp i32 %841 to float
  %843 = insertelement <2 x float> undef, float %842, i32 0
  %844 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %31, i64 0, i32 3
  %845 = load i32, i32* %844, align 4
  %846 = sitofp i32 %845 to float
  %847 = insertelement <2 x float> %843, float %846, i32 1
  %848 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %28, i64 0, i32 0
  store <2 x float> %839, <2 x float>* %848, align 8
  %849 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %28, i64 0, i32 1
  store <2 x float> %847, <2 x float>* %849, align 8
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %782, %struct.SkRect* nonnull dereferenceable(16) %806, i32 0, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %831) #10
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* nonnull %26, i32 0) #10
  call void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas* %782, %class.SkPaint* nonnull dereferenceable(72) %26) #10
  br i1 %825, label %851, label %850

850:                                              ; preds = %829
  call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* nonnull %782, i32 %830) #10
  br label %851

851:                                              ; preds = %850, %829
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %807) #10
  %852 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %759, align 8
  call void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret %0, %class.SkSpecialSurface* %852) #10
  %853 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %759, align 8
  %854 = icmp eq %class.SkSpecialSurface* %853, null
  br i1 %854, label %865, label %855

855:                                              ; preds = %851
  %856 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %853, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %857 = atomicrmw add i32* %856, i32 -1 acq_rel
  %858 = icmp eq i32 %857, 1
  br i1 %858, label %859, label %865

859:                                              ; preds = %855
  %860 = bitcast %class.SkSpecialSurface* %853 to %class.SkRefCntBase*
  %861 = bitcast %class.SkSpecialSurface* %853 to void (%class.SkRefCntBase*)***
  %862 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %861, align 8
  %863 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %862, i64 2
  %864 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %863, align 8
  call void %864(%class.SkRefCntBase* nonnull %860) #10
  br label %865

865:                                              ; preds = %779, %851, %855, %859
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %758) #10
  br label %866

866:                                              ; preds = %751, %747, %746, %865, %193
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %186) #10
  br label %867

867:                                              ; preds = %866, %183
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #10
  br i1 %67, label %878, label %868

868:                                              ; preds = %867
  %869 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %66, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %870 = atomicrmw add i32* %869, i32 -1 acq_rel
  %871 = icmp eq i32 %870, 1
  br i1 %871, label %872, label %878

872:                                              ; preds = %868
  %873 = bitcast %class.SkSpecialImage* %66 to %class.SkRefCntBase*
  %874 = bitcast %class.SkSpecialImage* %66 to void (%class.SkRefCntBase*)***
  %875 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %874, align 8
  %876 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %875, i64 2
  %877 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %876, align 8
  call void %877(%class.SkRefCntBase* nonnull %873) #10
  br label %878

878:                                              ; preds = %867, %868, %872
  br i1 %43, label %889, label %879

879:                                              ; preds = %878
  %880 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %42, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %881 = atomicrmw add i32* %880, i32 -1 acq_rel
  %882 = icmp eq i32 %881, 1
  br i1 %882, label %883, label %889

883:                                              ; preds = %879
  %884 = bitcast %class.SkSpecialImage* %42 to %class.SkRefCntBase*
  %885 = bitcast %class.SkSpecialImage* %42 to void (%class.SkRefCntBase*)***
  %886 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %885, align 8
  %887 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %886, i64 2
  %888 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %887, align 8
  call void %888(%class.SkRefCntBase* nonnull %884) #10
  br label %889

889:                                              ; preds = %878, %879, %883
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZNK12_GLOBAL__N_118SkBlendImageFilter14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_(%"class.(anonymous namespace)::SkBlendImageFilter"*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #0 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %struct.SkIRect*
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %struct.SkIRect*
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %struct.SkIRect*
  %14 = icmp eq i32 %3, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %5
  %16 = bitcast %"class.(anonymous namespace)::SkBlendImageFilter"* %0 to %class.SkImageFilter_Base*
  %17 = tail call { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base* %16, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 1, %struct.SkIRect* %4) #10
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %19 = extractvalue { i64, i64 } %17, 0
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %21 = extractvalue { i64, i64 } %17, 1
  store i64 %21, i64* %20, align 8
  br label %153

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.(anonymous namespace)::SkBlendImageFilter", %"class.(anonymous namespace)::SkBlendImageFilter"* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  switch i32 %24, label %113 [
    i32 0, label %25
    i32 1, label %27
    i32 10, label %27
    i32 2, label %47
    i32 9, label %47
    i32 5, label %67
    i32 6, label %67
  ]

25:                                               ; preds = %22
  %26 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false)
  br label %153

27:                                               ; preds = %22, %22
  %28 = bitcast %"class.(anonymous namespace)::SkBlendImageFilter"* %0 to %class.SkImageFilter*
  %29 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %28, i32 1) #10
  %30 = icmp eq %class.SkImageFilter* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %28, i32 1) #10
  %33 = tail call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* %32, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 %3, %struct.SkIRect* %4) #10
  %34 = extractvalue { i64, i64 } %33, 0
  %35 = extractvalue { i64, i64 } %33, 1
  br label %42

36:                                               ; preds = %27
  %37 = bitcast %struct.SkIRect* %1 to i64*
  %38 = load i64, i64* %37, align 4
  %39 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %40 = bitcast i32* %39 to i64*
  %41 = load i64, i64* %40, align 4
  br label %42

42:                                               ; preds = %31, %36
  %43 = phi i64 [ %34, %31 ], [ %38, %36 ]
  %44 = phi i64 [ %35, %31 ], [ %41, %36 ]
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %44, i64* %46, align 8
  br label %153

47:                                               ; preds = %22, %22
  %48 = bitcast %"class.(anonymous namespace)::SkBlendImageFilter"* %0 to %class.SkImageFilter*
  %49 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %48, i32 0) #10
  %50 = icmp eq %class.SkImageFilter* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %48, i32 0) #10
  %53 = tail call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* %52, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 %3, %struct.SkIRect* %4) #10
  %54 = extractvalue { i64, i64 } %53, 0
  %55 = extractvalue { i64, i64 } %53, 1
  br label %62

56:                                               ; preds = %47
  %57 = bitcast %struct.SkIRect* %1 to i64*
  %58 = load i64, i64* %57, align 4
  %59 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %60 = bitcast i32* %59 to i64*
  %61 = load i64, i64* %60, align 4
  br label %62

62:                                               ; preds = %51, %56
  %63 = phi i64 [ %54, %51 ], [ %58, %56 ]
  %64 = phi i64 [ %55, %51 ], [ %61, %56 ]
  %65 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %64, i64* %66, align 8
  br label %153

67:                                               ; preds = %22, %22
  %68 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #10
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %70 = bitcast %"class.(anonymous namespace)::SkBlendImageFilter"* %0 to %class.SkImageFilter*
  %71 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 16, i1 false)
  %72 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %70, i32 0) #10
  %73 = icmp eq %class.SkImageFilter* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %67
  %75 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %70, i32 0) #10
  %76 = tail call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* %75, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 %3, %struct.SkIRect* %4) #10
  %77 = extractvalue { i64, i64 } %76, 0
  %78 = extractvalue { i64, i64 } %76, 1
  br label %85

79:                                               ; preds = %67
  %80 = bitcast %struct.SkIRect* %1 to i64*
  %81 = load i64, i64* %80, align 4
  %82 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %83 = bitcast i32* %82 to i64*
  %84 = load i64, i64* %83, align 4
  br label %85

85:                                               ; preds = %74, %79
  %86 = phi i64 [ %77, %74 ], [ %81, %79 ]
  %87 = phi i64 [ %78, %74 ], [ %84, %79 ]
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  store i64 %86, i64* %88, align 8
  store i64 %87, i64* %69, align 8
  %89 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #10
  %90 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %70, i32 1) #10
  %91 = icmp eq %class.SkImageFilter* %90, null
  br i1 %91, label %97, label %92

92:                                               ; preds = %85
  %93 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %70, i32 1) #10
  %94 = tail call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* %93, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 %3, %struct.SkIRect* %4) #10
  %95 = extractvalue { i64, i64 } %94, 0
  %96 = extractvalue { i64, i64 } %94, 1
  br label %103

97:                                               ; preds = %85
  %98 = bitcast %struct.SkIRect* %1 to i64*
  %99 = load i64, i64* %98, align 4
  %100 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %101 = bitcast i32* %100 to i64*
  %102 = load i64, i64* %101, align 4
  br label %103

103:                                              ; preds = %92, %97
  %104 = phi i64 [ %95, %92 ], [ %99, %97 ]
  %105 = phi i64 [ %96, %92 ], [ %102, %97 ]
  %106 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  store i64 %104, i64* %106, align 8
  %107 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  store i64 %105, i64* %107, align 8
  %108 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %9, %struct.SkIRect* nonnull dereferenceable(16) %9, %struct.SkIRect* nonnull dereferenceable(16) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #10
  %109 = bitcast { i64, i64 }* %6 to i8*
  br i1 %108, label %111, label %110

110:                                              ; preds = %103
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 16, i1 false)
  br label %112

111:                                              ; preds = %103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %109, i8* nonnull align 8 %68, i64 16, i1 false)
  br label %112

112:                                              ; preds = %111, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #10
  br label %153

113:                                              ; preds = %22
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %115 = bitcast %"class.(anonymous namespace)::SkBlendImageFilter"* %0 to %class.SkImageFilter*
  %116 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 -86, i64 16, i1 false)
  %117 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %115, i32 0) #10
  %118 = icmp eq %class.SkImageFilter* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %113
  %120 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %115, i32 0) #10
  %121 = tail call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* %120, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 %3, %struct.SkIRect* %4) #10
  %122 = extractvalue { i64, i64 } %121, 0
  %123 = extractvalue { i64, i64 } %121, 1
  br label %130

124:                                              ; preds = %113
  %125 = bitcast %struct.SkIRect* %1 to i64*
  %126 = load i64, i64* %125, align 4
  %127 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %128 = bitcast i32* %127 to i64*
  %129 = load i64, i64* %128, align 4
  br label %130

130:                                              ; preds = %119, %124
  %131 = phi i64 [ %122, %119 ], [ %126, %124 ]
  %132 = phi i64 [ %123, %119 ], [ %129, %124 ]
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %131, i64* %133, align 8
  store i64 %132, i64* %114, align 8
  %134 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %134) #10
  %135 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %115, i32 1) #10
  %136 = icmp eq %class.SkImageFilter* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %130
  %138 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %115, i32 1) #10
  %139 = tail call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* %138, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 %3, %struct.SkIRect* %4) #10
  %140 = extractvalue { i64, i64 } %139, 0
  %141 = extractvalue { i64, i64 } %139, 1
  br label %148

142:                                              ; preds = %130
  %143 = bitcast %struct.SkIRect* %1 to i64*
  %144 = load i64, i64* %143, align 4
  %145 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %146 = bitcast i32* %145 to i64*
  %147 = load i64, i64* %146, align 4
  br label %148

148:                                              ; preds = %137, %142
  %149 = phi i64 [ %140, %137 ], [ %144, %142 ]
  %150 = phi i64 [ %141, %137 ], [ %147, %142 ]
  %151 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 %149, i64* %151, align 8
  %152 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  store i64 %150, i64* %152, align 8
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %7, %struct.SkIRect* nonnull dereferenceable(16) %13) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %134) #10
  br label %153

153:                                              ; preds = %25, %42, %62, %112, %148, %15
  %154 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = insertvalue { i64, i64 } undef, i64 %155, 0
  %157 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %158 = load i64, i64* %157, align 8
  %159 = insertvalue { i64, i64 } %156, i64 %158, 1
  ret { i64, i64 } %159
}

declare { i64, i64 } @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #3

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN7SkIRect4joinERKS_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136), %struct.SkIRect* dereferenceable(16), %struct.SkIRect*) local_unnamed_addr #3

declare %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface*) local_unnamed_addr #3

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #3

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #3

declare void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #4

declare void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret, %class.SkSpecialSurface*) local_unnamed_addr #3

declare void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #3

declare zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage*) local_unnamed_addr #3

declare void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* sret, %class.SkSpecialImage*, %class.GrRecordingContext*) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i64, i32, %struct.SkRect* dereferenceable(16), %class.GrCaps* dereferenceable(232), float*, i1 zeroext) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) local_unnamed_addr #3

declare %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage*) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor9MakeColorE8SkRGBA4fIL11SkAlphaType2EE(<2 x float>, <2 x float>) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN24GrBlendFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEES5_11SkBlendModeNS_13BlendBehaviorE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i32, i32) local_unnamed_addr #3

declare %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext*, %class.GrImageInfo*, i32, i32, i1 zeroext, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #3

declare void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.18* sret, %class.GrRecordingContext*, %struct.SkIRect* dereferenceable(16), i32, %class.GrSurfaceProxyView*, i32, %class.sk_sp.14*, %class.SkSurfaceProps* dereferenceable(8), i32) local_unnamed_addr #3

declare %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #10
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #10
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #10
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo*, i32, i32, %class.sk_sp.14*) unnamed_addr #3

declare void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo*, %class.GrColorInfo* dereferenceable(24)) unnamed_addr #3

declare zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* dereferenceable(40), %class.GrFragmentProcessor*) local_unnamed_addr #3

declare void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext*, %struct.SkIRect* dereferenceable(16), %class.GrFragmentProcessor*) local_unnamed_addr #3

declare void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.20* sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #3

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #3

declare void @_ZN7SkPaint8setColorEj(%class.SkPaint*, i32) local_unnamed_addr #3

declare void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #3

declare i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas*) local_unnamed_addr #3

declare i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas*) local_unnamed_addr #3

declare void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #3

declare void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas*, i32) local_unnamed_addr #3

declare { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #3

declare %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter*, i32) local_unnamed_addr #3

declare { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) local_unnamed_addr #3

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #3

declare i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer*) local_unnamed_addr #3

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!5 = distinct !{!5, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!8 = distinct !{!8, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN14SkImageFilters5BlendE11SkBlendMode5sk_spI13SkImageFilterES3_RKNS_8CropRectE: argument 0"}
!11 = distinct !{!11, !"_ZN14SkImageFilters5BlendE11SkBlendMode5sk_spI13SkImageFilterES3_RKNS_8CropRectE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!14 = distinct !{!14, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!15 = !{!16, !13}
!16 = distinct !{!16, !17, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!17 = distinct !{!17, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!20 = distinct !{!20, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!21 = !{!22, !19}
!22 = distinct !{!22, !23, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!23 = distinct !{!23, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK12_GLOBAL__N_118SkBlendImageFilter14filterImageGPUERKN4skif7ContextE5sk_spI14SkSpecialImageERK8SkIPointS7_SA_RK7SkIRect: argument 0"}
!26 = distinct !{!26, !"_ZNK12_GLOBAL__N_118SkBlendImageFilter14filterImageGPUERKN4skif7ContextE5sk_spI14SkSpecialImageERK8SkIPointS7_SA_RK7SkIRect"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!29 = distinct !{!29, !"_ZN8SkMatrix9TranslateEff"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!32 = distinct !{!32, !"_ZN8SkMatrix9TranslateEff"}
!33 = !{!34, !25}
!34 = distinct !{!34, !35, !"_ZNK4skif7Context13refColorSpaceEv: argument 0"}
!35 = distinct !{!35, !"_ZNK4skif7Context13refColorSpaceEv"}
!36 = !{!37, !34}
!37 = distinct !{!37, !38, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!38 = distinct !{!38, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!39 = !{!40, !42}
!40 = distinct !{!40, !41, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!41 = distinct !{!41, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!42 = distinct !{!42, !43, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!43 = distinct !{!43, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!44 = !{!45, !25}
!45 = distinct !{!45, !46, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!46 = distinct !{!46, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!47 = !{!45}
!48 = !{!49, !25}
!49 = distinct !{!49, !50, !"_ZNK11GrColorInfo13refColorSpaceEv: argument 0"}
!50 = distinct !{!50, !"_ZNK11GrColorInfo13refColorSpaceEv"}
!51 = !{!49}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps: argument 0"}
!54 = distinct !{!54, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps"}
