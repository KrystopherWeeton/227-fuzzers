; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/internal/quantization_util.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/internal/quantization_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite18QuantizeMultiplierEdPiS0_(double, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %4 = fcmp oeq double %0, 0.000000e+00
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  store i32 0, i32* %1, align 4
  store i32 0, i32* %2, align 4
  br label %26

6:                                                ; preds = %3
  %7 = tail call double @frexp(double %0, i32* %2) #9
  %8 = fmul double %7, 0x41E0000000000000
  %9 = tail call double @llvm.round.f64(double %8) #9
  %10 = fptosi double %9 to i64
  %11 = icmp slt i64 %10, 2147483649
  br i1 %11, label %13, label %12

12:                                               ; preds = %6
  tail call void @abort() #10
  unreachable

13:                                               ; preds = %6
  %14 = icmp eq i64 %10, 2147483648
  %15 = load i32, i32* %2, align 4
  %16 = zext i1 %14 to i32
  %17 = add nsw i32 %15, %16
  %18 = select i1 %14, i64 1073741824, i64 %10
  %19 = icmp slt i32 %17, -31
  %20 = or i1 %14, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %13
  %22 = select i1 %19, i32 0, i32 %17
  store i32 %22, i32* %2, align 4
  br label %23

23:                                               ; preds = %13, %21
  %24 = trunc i64 %18 to i32
  %25 = select i1 %19, i32 0, i32 %24
  store i32 %25, i32* %1, align 4
  br label %26

26:                                               ; preds = %23, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare double @frexp(double, i32* nocapture) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite32QuantizeMultiplierGreaterThanOneEdPiS0_(double, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %4 = fcmp ogt double %0, 1.000000e+00
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void @abort() #10
  unreachable

6:                                                ; preds = %3
  %7 = fcmp oeq double %0, 0.000000e+00
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  store i32 0, i32* %1, align 4
  store i32 0, i32* %2, align 4
  br label %32

9:                                                ; preds = %6
  %10 = tail call double @frexp(double %0, i32* %2) #9
  %11 = fmul double %10, 0x41E0000000000000
  %12 = tail call double @llvm.round.f64(double %11) #9
  %13 = fptosi double %12 to i64
  %14 = icmp slt i64 %13, 2147483649
  br i1 %14, label %16, label %15

15:                                               ; preds = %9
  tail call void @abort() #10
  unreachable

16:                                               ; preds = %9
  %17 = icmp eq i64 %13, 2147483648
  %18 = load i32, i32* %2, align 4
  %19 = zext i1 %17 to i32
  %20 = add nsw i32 %18, %19
  %21 = select i1 %17, i64 1073741824, i64 %13
  %22 = icmp slt i32 %20, -31
  %23 = or i1 %17, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = select i1 %22, i32 0, i32 %20
  store i32 %25, i32* %2, align 4
  br label %26

26:                                               ; preds = %16, %24
  %27 = trunc i64 %21 to i32
  %28 = select i1 %22, i32 0, i32 %27
  store i32 %28, i32* %1, align 4
  %29 = load i32, i32* %2, align 4
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  tail call void @abort() #10
  unreachable

32:                                               ; preds = %8, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = fcmp olt double %0, 1.000000e+00
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @abort() #10
  unreachable

7:                                                ; preds = %3
  %8 = fcmp ogt double %0, 0.000000e+00
  br i1 %8, label %10, label %9

9:                                                ; preds = %7
  tail call void @abort() #10
  unreachable

10:                                               ; preds = %7
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #9
  store i32 -1431655766, i32* %4, align 4
  %12 = fcmp oeq double %0, 0.000000e+00
  br i1 %12, label %13, label %14

13:                                               ; preds = %10
  store i32 0, i32* %1, align 4
  store i32 0, i32* %4, align 4
  br label %37

14:                                               ; preds = %10
  %15 = call double @frexp(double %0, i32* nonnull %4) #9
  %16 = fmul double %15, 0x41E0000000000000
  %17 = tail call double @llvm.round.f64(double %16) #9
  %18 = fptosi double %17 to i64
  %19 = icmp slt i64 %18, 2147483649
  br i1 %19, label %21, label %20

20:                                               ; preds = %14
  tail call void @abort() #10
  unreachable

21:                                               ; preds = %14
  %22 = icmp eq i64 %18, 2147483648
  %23 = load i32, i32* %4, align 4
  %24 = zext i1 %22 to i32
  %25 = add nsw i32 %23, %24
  %26 = select i1 %22, i64 1073741824, i64 %18
  %27 = icmp slt i32 %25, -31
  %28 = or i1 %22, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %21
  %30 = select i1 %27, i32 0, i32 %25
  store i32 %30, i32* %4, align 4
  br label %31

31:                                               ; preds = %21, %29
  %32 = phi i32 [ %30, %29 ], [ %23, %21 ]
  %33 = trunc i64 %26 to i32
  %34 = select i1 %27, i32 0, i32 %33
  store i32 %34, i32* %1, align 4
  %35 = icmp slt i32 %32, 1
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  tail call void @abort() #10
  unreachable

37:                                               ; preds = %13, %31
  %38 = phi i32 [ 0, %13 ], [ %32, %31 ]
  store i32 %38, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i64 @_ZN6tflite12IntegerFrExpEdPi(double, i32* nocapture) local_unnamed_addr #4 {
  %3 = bitcast double %0 to i64
  %4 = and i64 %3, 9223372036854775807
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i32 0, i32* %1, align 4
  br label %30

7:                                                ; preds = %2
  %8 = lshr i64 %3, 52
  %9 = trunc i64 %8 to i32
  %10 = and i32 %9, 2047
  %11 = icmp eq i32 %10, 2047
  br i1 %11, label %12, label %18

12:                                               ; preds = %7
  store i32 2147483647, i32* %1, align 4
  %13 = and i64 %3, 4503599623176192
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %30

15:                                               ; preds = %12
  %16 = icmp slt i64 %3, 0
  %17 = select i1 %16, i64 -9223372036854775808, i64 9223372036854775807
  ret i64 %17

18:                                               ; preds = %7
  %19 = add nsw i32 %10, -1022
  store i32 %19, i32* %1, align 4
  %20 = lshr i64 %3, 22
  %21 = and i64 %20, 1073741823
  %22 = or i64 %21, 1073741824
  %23 = and i64 %3, 4194303
  %24 = icmp ugt i64 %23, 2097152
  %25 = zext i1 %24 to i64
  %26 = add nuw nsw i64 %22, %25
  %27 = icmp slt i64 %3, 0
  %28 = sub nsw i64 0, %26
  %29 = select i1 %27, i64 %28, i64 %26
  br label %30

30:                                               ; preds = %12, %18, %6
  %31 = phi i64 [ 0, %6 ], [ 0, %12 ], [ %29, %18 ]
  ret i64 %31
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @_ZN6tflite26DoubleFromFractionAndShiftEli(i64, i32) local_unnamed_addr #5 {
  %3 = icmp eq i32 %1, 2147483647
  %4 = icmp eq i64 %0, 0
  br i1 %3, label %5, label %9

5:                                                ; preds = %2
  br i1 %4, label %46, label %6

6:                                                ; preds = %5
  %7 = icmp sgt i64 %0, 0
  %8 = select i1 %7, double 0x7FF0000000000000, double 0xFFF0000000000000
  ret double %8

9:                                                ; preds = %2
  br i1 %4, label %46, label %10

10:                                               ; preds = %9
  %11 = icmp slt i64 %0, 0
  %12 = sub nsw i64 0, %0
  %13 = select i1 %11, i64 %12, i64 %0
  %14 = add nsw i32 %1, -1
  %15 = sext i32 %14 to i64
  %16 = icmp ult i64 %13, 1073741824
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = icmp sgt i64 %13, 2147483648
  br i1 %18, label %25, label %31

19:                                               ; preds = %10, %19
  %20 = phi i64 [ %23, %19 ], [ %15, %10 ]
  %21 = phi i64 [ %22, %19 ], [ %13, %10 ]
  %22 = shl nsw i64 %21, 1
  %23 = add nsw i64 %20, -1
  %24 = icmp ult i64 %22, 1073741824
  br i1 %24, label %19, label %31

25:                                               ; preds = %17, %25
  %26 = phi i64 [ %29, %25 ], [ %15, %17 ]
  %27 = phi i64 [ %28, %25 ], [ %13, %17 ]
  %28 = lshr i64 %27, 1
  %29 = add nsw i64 %26, 1
  %30 = icmp ugt i64 %27, 4294967297
  br i1 %30, label %25, label %31

31:                                               ; preds = %25, %19, %17
  %32 = phi i64 [ %13, %17 ], [ %22, %19 ], [ %28, %25 ]
  %33 = phi i64 [ %15, %17 ], [ %23, %19 ], [ %29, %25 ]
  %34 = icmp slt i64 %33, -1022
  %35 = icmp slt i64 %33, 1023
  %36 = select i1 %35, i64 %33, i64 1023
  %37 = and i64 %0, -9223372036854775808
  %38 = shl i64 %36, 52
  %39 = add i64 %38, 4607182418800017408
  %40 = select i1 %34, i64 0, i64 %39
  %41 = shl i64 %32, 22
  %42 = add i64 %41, -4503599627370496
  %43 = or i64 %42, %37
  %44 = or i64 %43, %40
  %45 = bitcast i64 %44 to double
  br label %46

46:                                               ; preds = %5, %9, %31
  %47 = phi double [ %45, %31 ], [ 0.000000e+00, %9 ], [ 0x7FF8000000000000, %5 ]
  ret double %47
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden double @_ZN6tflite21IntegerDoubleMultiplyEdd(double, double) local_unnamed_addr #6 {
  %3 = bitcast double %0 to i64
  %4 = and i64 %3, 9223372036854775807
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = lshr i64 %3, 52
  %8 = trunc i64 %7 to i32
  %9 = and i32 %8, 2047
  %10 = icmp eq i32 %9, 2047
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = and i64 %3, 4503599623176192
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %29

14:                                               ; preds = %11
  %15 = icmp slt i64 %3, 0
  %16 = select i1 %15, i64 -9223372036854775808, i64 9223372036854775807
  br label %29

17:                                               ; preds = %6
  %18 = add nsw i32 %9, -1022
  %19 = lshr i64 %3, 22
  %20 = and i64 %19, 1073741823
  %21 = or i64 %20, 1073741824
  %22 = and i64 %3, 4194303
  %23 = icmp ugt i64 %22, 2097152
  %24 = zext i1 %23 to i64
  %25 = add nuw nsw i64 %21, %24
  %26 = icmp slt i64 %3, 0
  %27 = sub nsw i64 0, %25
  %28 = select i1 %26, i64 %27, i64 %25
  br label %29

29:                                               ; preds = %11, %17, %2, %14
  %30 = phi i32 [ 2147483647, %14 ], [ 2147483647, %11 ], [ %18, %17 ], [ 0, %2 ]
  %31 = phi i64 [ %16, %14 ], [ 0, %11 ], [ %28, %17 ], [ 0, %2 ]
  %32 = bitcast double %1 to i64
  %33 = and i64 %32, 9223372036854775807
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %52, label %35

35:                                               ; preds = %29
  %36 = lshr i64 %32, 52
  %37 = trunc i64 %36 to i32
  %38 = and i32 %37, 2047
  %39 = icmp eq i32 %38, 2047
  br i1 %39, label %94, label %40

40:                                               ; preds = %35
  %41 = add nsw i32 %38, -1022
  %42 = lshr i64 %32, 22
  %43 = and i64 %42, 1073741823
  %44 = or i64 %43, 1073741824
  %45 = and i64 %32, 4194303
  %46 = icmp ugt i64 %45, 2097152
  %47 = zext i1 %46 to i64
  %48 = add nuw nsw i64 %44, %47
  %49 = icmp slt i64 %32, 0
  %50 = sub nsw i64 0, %48
  %51 = select i1 %49, i64 %50, i64 %48
  br label %52

52:                                               ; preds = %40, %29
  %53 = phi i32 [ %41, %40 ], [ 0, %29 ]
  %54 = phi i64 [ %51, %40 ], [ 0, %29 ]
  %55 = icmp eq i32 %30, 2147483647
  br i1 %55, label %94, label %56

56:                                               ; preds = %52
  %57 = add nsw i32 %53, %30
  %58 = mul nsw i64 %54, %31
  %59 = ashr i64 %58, 32
  %60 = icmp eq i32 %57, 2147483646
  %61 = icmp eq i64 %59, 0
  br i1 %60, label %62, label %66

62:                                               ; preds = %56
  br i1 %61, label %94, label %63

63:                                               ; preds = %62
  %64 = icmp sgt i64 %58, 4294967295
  %65 = select i1 %64, double 0x7FF0000000000000, double 0xFFF0000000000000
  br label %94

66:                                               ; preds = %56
  br i1 %61, label %94, label %67

67:                                               ; preds = %66
  %68 = icmp slt i64 %59, 0
  %69 = sub nsw i64 0, %59
  %70 = select i1 %68, i64 %69, i64 %59
  %71 = sext i32 %57 to i64
  %72 = icmp ult i64 %70, 1073741824
  br i1 %72, label %73, label %79

73:                                               ; preds = %67, %73
  %74 = phi i64 [ %77, %73 ], [ %71, %67 ]
  %75 = phi i64 [ %76, %73 ], [ %70, %67 ]
  %76 = shl nsw i64 %75, 1
  %77 = add nsw i64 %74, -1
  %78 = icmp ult i64 %76, 1073741824
  br i1 %78, label %73, label %79

79:                                               ; preds = %73, %67
  %80 = phi i64 [ %70, %67 ], [ %76, %73 ]
  %81 = phi i64 [ %71, %67 ], [ %77, %73 ]
  %82 = icmp slt i64 %81, -1022
  %83 = icmp slt i64 %81, 1023
  %84 = select i1 %83, i64 %81, i64 1023
  %85 = and i64 %59, -9223372036854775808
  %86 = shl i64 %84, 52
  %87 = add i64 %86, 4607182418800017408
  %88 = select i1 %82, i64 0, i64 %87
  %89 = shl i64 %80, 22
  %90 = add nsw i64 %89, -4503599627370496
  %91 = or i64 %90, %85
  %92 = or i64 %91, %88
  %93 = bitcast i64 %92 to double
  br label %94

94:                                               ; preds = %35, %63, %79, %66, %62, %52
  %95 = phi double [ 0x7FF8000000000000, %52 ], [ %65, %63 ], [ %93, %79 ], [ 0.000000e+00, %66 ], [ 0x7FF8000000000000, %62 ], [ 0x7FF8000000000000, %35 ]
  ret double %95
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @_ZN6tflite20IntegerDoubleCompareEdd(double, double) local_unnamed_addr #6 {
  %3 = bitcast double %0 to i64
  %4 = and i64 %3, 9223372036854775807
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = lshr i64 %3, 52
  %8 = trunc i64 %7 to i32
  %9 = and i32 %8, 2047
  %10 = icmp eq i32 %9, 2047
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = and i64 %3, 4503599623176192
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %29

14:                                               ; preds = %11
  %15 = icmp slt i64 %3, 0
  %16 = select i1 %15, i64 -9223372036854775808, i64 9223372036854775807
  br label %29

17:                                               ; preds = %6
  %18 = add nsw i32 %9, -1022
  %19 = lshr i64 %3, 22
  %20 = and i64 %19, 1073741823
  %21 = or i64 %20, 1073741824
  %22 = and i64 %3, 4194303
  %23 = icmp ugt i64 %22, 2097152
  %24 = zext i1 %23 to i64
  %25 = add nuw nsw i64 %21, %24
  %26 = icmp slt i64 %3, 0
  %27 = sub nsw i64 0, %25
  %28 = select i1 %26, i64 %27, i64 %25
  br label %29

29:                                               ; preds = %11, %17, %2, %14
  %30 = phi i32 [ 2147483647, %14 ], [ 2147483647, %11 ], [ %18, %17 ], [ 0, %2 ]
  %31 = phi i64 [ %16, %14 ], [ 0, %11 ], [ %28, %17 ], [ 0, %2 ]
  %32 = bitcast double %1 to i64
  %33 = and i64 %32, 9223372036854775807
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %52, label %35

35:                                               ; preds = %29
  %36 = lshr i64 %32, 52
  %37 = trunc i64 %36 to i32
  %38 = and i32 %37, 2047
  %39 = icmp eq i32 %38, 2047
  br i1 %39, label %73, label %40

40:                                               ; preds = %35
  %41 = add nsw i32 %38, -1022
  %42 = lshr i64 %32, 22
  %43 = and i64 %42, 1073741823
  %44 = or i64 %43, 1073741824
  %45 = and i64 %32, 4194303
  %46 = icmp ugt i64 %45, 2097152
  %47 = zext i1 %46 to i64
  %48 = add nuw nsw i64 %44, %47
  %49 = icmp slt i64 %32, 0
  %50 = sub nsw i64 0, %48
  %51 = select i1 %49, i64 %50, i64 %48
  br label %52

52:                                               ; preds = %40, %29
  %53 = phi i32 [ %41, %40 ], [ 0, %29 ]
  %54 = phi i64 [ %51, %40 ], [ 0, %29 ]
  %55 = icmp eq i32 %30, 2147483647
  br i1 %55, label %73, label %56

56:                                               ; preds = %52
  %57 = icmp eq i64 %31, 0
  %58 = icmp slt i64 %54, 0
  %59 = and i1 %57, %58
  br i1 %59, label %73, label %60

60:                                               ; preds = %56
  %61 = icmp slt i64 %31, 0
  %62 = icmp eq i64 %54, 0
  %63 = and i1 %61, %62
  %64 = icmp slt i32 %30, %53
  %65 = or i1 %64, %63
  br i1 %65, label %73, label %66

66:                                               ; preds = %60
  %67 = icmp sgt i32 %30, %53
  br i1 %67, label %73, label %68

68:                                               ; preds = %66
  %69 = icmp slt i64 %31, %54
  br i1 %69, label %73, label %70

70:                                               ; preds = %68
  %71 = icmp sgt i64 %31, %54
  %72 = zext i1 %71 to i32
  br label %73

73:                                               ; preds = %35, %70, %68, %66, %60, %56, %52
  %74 = phi i32 [ 1, %52 ], [ 1, %56 ], [ -1, %60 ], [ 1, %66 ], [ -1, %68 ], [ %72, %70 ], [ 1, %35 ]
  ret i32 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite24PreprocessSoftmaxScalingEddiPiS0_(double, double, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %6 = fmul double %0, %1
  %7 = lshr i32 -2147483648, %2
  %8 = sitofp i32 %7 to double
  %9 = fmul double %6, %8
  %10 = fcmp ogt double %9, 0x41DFFFFFFFC00000
  %11 = select i1 %10, double 0x41DFFFFFFFC00000, double %9
  %12 = fcmp ogt double %11, 1.000000e+00
  br i1 %12, label %14, label %13

13:                                               ; preds = %5
  tail call void @abort() #10
  unreachable

14:                                               ; preds = %5
  %15 = fcmp oeq double %11, 0.000000e+00
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %40

17:                                               ; preds = %14
  %18 = tail call double @frexp(double %11, i32* %4) #9
  %19 = fmul double %18, 0x41E0000000000000
  %20 = tail call double @llvm.round.f64(double %19) #9
  %21 = fptosi double %20 to i64
  %22 = icmp slt i64 %21, 2147483649
  br i1 %22, label %24, label %23

23:                                               ; preds = %17
  tail call void @abort() #10
  unreachable

24:                                               ; preds = %17
  %25 = icmp eq i64 %21, 2147483648
  %26 = load i32, i32* %4, align 4
  %27 = zext i1 %25 to i32
  %28 = add nsw i32 %26, %27
  %29 = select i1 %25, i64 1073741824, i64 %21
  %30 = icmp slt i32 %28, -31
  %31 = or i1 %25, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %24
  %33 = select i1 %30, i32 0, i32 %28
  store i32 %33, i32* %4, align 4
  br label %34

34:                                               ; preds = %32, %24
  %35 = trunc i64 %29 to i32
  %36 = select i1 %30, i32 0, i32 %35
  store i32 %36, i32* %3, align 4
  %37 = load i32, i32* %4, align 4
  %38 = icmp sgt i32 %37, -1
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  tail call void @abort() #10
  unreachable

40:                                               ; preds = %16, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite30PreprocessLogSoftmaxScalingExpEddiPiS0_S0_S0_(double, double, i32, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  tail call void @_ZN6tflite24PreprocessSoftmaxScalingEddiPiS0_(double %0, double %1, i32 %2, i32* %3, i32* %4)
  %8 = load i32, i32* %4, align 4
  %9 = lshr i32 -2147483648, %8
  %10 = sitofp i32 %9 to double
  %11 = load i32, i32* %3, align 4
  %12 = sitofp i32 %11 to double
  %13 = fdiv double %10, %12
  tail call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %13, i32* %5, i32* %6)
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @_ZN6tflite20CalculateInputRadiusEiii(i32, i32, i32) local_unnamed_addr #6 {
  %4 = shl nsw i32 -1, %0
  %5 = xor i32 %4, -1
  %6 = sitofp i32 %5 to double
  %7 = sub nsw i32 %2, %0
  %8 = zext i32 %7 to i64
  %9 = shl i64 1, %8
  %10 = sitofp i64 %9 to double
  %11 = fmul double %6, %10
  %12 = zext i32 %1 to i64
  %13 = shl i64 1, %12
  %14 = sitofp i64 %13 to double
  %15 = fdiv double %11, %14
  %16 = tail call double @llvm.floor.f64(double %15)
  %17 = fptosi double %16 to i32
  ret i32 %17
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #7

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6tflite22NudgeQuantizationRangeEffiiPfS0_S0_(float, float, i32, i32, float* nocapture, float* nocapture, float* nocapture) local_unnamed_addr #8 {
  %8 = sitofp i32 %2 to float
  %9 = sitofp i32 %3 to float
  %10 = fsub float %1, %0
  %11 = fsub float %9, %8
  %12 = fdiv float %10, %11
  store float %12, float* %6, align 4
  %13 = fdiv float %0, %12
  %14 = fsub float %8, %13
  %15 = fcmp olt float %14, %8
  br i1 %15, label %16, label %18

16:                                               ; preds = %7
  %17 = trunc i32 %2 to i16
  br label %25

18:                                               ; preds = %7
  %19 = fcmp ogt float %14, %9
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = trunc i32 %3 to i16
  br label %25

22:                                               ; preds = %18
  %23 = tail call float @llvm.round.f32(float %14) #9
  %24 = fptoui float %23 to i16
  br label %25

25:                                               ; preds = %20, %22, %16
  %26 = phi i16 [ %17, %16 ], [ %21, %20 ], [ %24, %22 ]
  %27 = uitofp i16 %26 to float
  %28 = fsub float %8, %27
  %29 = fmul float %12, %28
  store float %29, float* %4, align 4
  %30 = fsub float %9, %27
  %31 = load float, float* %6, align 4
  %32 = fmul float %30, %31
  store float %32, float* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite17FakeQuantizeArrayEfffPKfPff(float, float, float, float* nocapture readonly, float* nocapture, float) local_unnamed_addr #0 {
  %7 = fdiv float 1.000000e+00, %0
  %8 = fcmp ogt float %5, 0.000000e+00
  br i1 %8, label %10, label %9

9:                                                ; preds = %10, %6
  ret void

10:                                               ; preds = %6, %10
  %11 = phi i64 [ %24, %10 ], [ 0, %6 ]
  %12 = getelementptr inbounds float, float* %3, i64 %11
  %13 = load float, float* %12, align 4
  %14 = fcmp ogt float %13, %1
  %15 = select i1 %14, float %13, float %1
  %16 = fcmp olt float %15, %2
  %17 = select i1 %16, float %15, float %2
  %18 = fsub float %17, %1
  %19 = fmul float %7, %18
  %20 = tail call float @llvm.round.f32(float %19) #9
  %21 = fmul float %20, %0
  %22 = fadd float %21, %1
  %23 = getelementptr inbounds float, float* %4, i64 %11
  store float %22, float* %23, align 4
  %24 = add nuw i64 %11, 1
  %25 = trunc i64 %24 to i32
  %26 = sitofp i32 %25 to float
  %27 = fcmp olt float %26, %5
  br i1 %27, label %10, label %9
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN6tflite11CheckedLog2EfPi(float, i32* nocapture) local_unnamed_addr #8 {
  %3 = tail call float @logf(float %0) #9
  %4 = fmul float %3, 0x3FF7154760000000
  %5 = tail call float @llvm.round.f32(float %4) #9
  %6 = fsub float %4, %5
  %7 = fptosi float %5 to i32
  store i32 %7, i32* %1, align 4
  %8 = tail call float @llvm.fabs.f32(float %6) #9
  %9 = fcmp olt float %8, 0x3F50624DE0000000
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite23QuantizeMultiplierArrayEPKdmPiS2_(double* nocapture readonly, i64, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %35, %4
  ret void

7:                                                ; preds = %4, %35
  %8 = phi i64 [ %36, %35 ], [ 0, %4 ]
  %9 = getelementptr inbounds double, double* %0, i64 %8
  %10 = load double, double* %9, align 8
  %11 = getelementptr inbounds i32, i32* %2, i64 %8
  %12 = getelementptr inbounds i32, i32* %3, i64 %8
  %13 = fcmp oeq double %10, 0.000000e+00
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  br label %35

15:                                               ; preds = %7
  %16 = tail call double @frexp(double %10, i32* %12) #9
  %17 = fmul double %16, 0x41E0000000000000
  %18 = tail call double @llvm.round.f64(double %17) #9
  %19 = fptosi double %18 to i64
  %20 = icmp slt i64 %19, 2147483649
  br i1 %20, label %22, label %21

21:                                               ; preds = %15
  tail call void @abort() #10
  unreachable

22:                                               ; preds = %15
  %23 = icmp eq i64 %19, 2147483648
  %24 = load i32, i32* %12, align 4
  %25 = zext i1 %23 to i32
  %26 = add nsw i32 %24, %25
  %27 = select i1 %23, i64 1073741824, i64 %19
  %28 = icmp slt i32 %26, -31
  %29 = or i1 %23, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %22
  %31 = select i1 %28, i32 0, i32 %26
  store i32 %31, i32* %12, align 4
  br label %32

32:                                               ; preds = %30, %22
  %33 = trunc i64 %27 to i32
  %34 = select i1 %28, i32 0, i32 %33
  store i32 %34, i32* %11, align 4
  br label %35

35:                                               ; preds = %14, %32
  %36 = add nuw i64 %8, 1
  %37 = icmp eq i64 %36, %1
  br i1 %37, label %6, label %7
}

; Function Attrs: nofree nounwind
declare float @logf(float) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
