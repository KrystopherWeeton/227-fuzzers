; ModuleID = 'gen/services/network/public/mojom/http_raw_request_response_info.mojom-blink.cc'
source_filename = "gen/services/network/public/mojom/http_raw_request_response_info.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::mojom::blink::HttpRawRequestResponseInfo" = type { i32, %"class.WTF::String", %"class.WTF::Vector", %"class.WTF::Vector", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.mojo::InlinedStructPtr"*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::blink::HttpRawHeaderPair" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.13", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.7"*, %"class.mojo::ScopedHandleBase.7"*, %"class.std::__1::__compressed_pair.8" }
%"class.mojo::ScopedHandleBase.7" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.mojo::ScopedHandleBase.7"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.16" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.29, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.22" }
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.27 }
%class.scoped_refptr.27 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.28", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.28" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.29 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.30" }>
%"class.base::RefCountedThreadSafe.30" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.network::mojom::internal::HttpRawRequestResponseInfo_Data" = type { %"struct.mojo::internal::StructHeader", i32, [4 x i8], %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.31", %"struct.mojo::internal::Pointer.31", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer.31" = type { i64 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.network::mojom::blink::HttpRawRequestResponseInfo"* }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.mojo::internal::Array_Data.43" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.perfetto::TracedArray" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.network::mojom::internal::HttpRawHeaderPair_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN8perfetto20WriteIntoTracedValueIRKN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEELj0ENS1_18PartitionAllocatorEEEEEvNS_11TracedValueEOT_ = comdat any

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN7network5mojom25HttpRawHeaderPairDataViewEEEN3WTF6VectorINS_16InlinedStructPtrINS4_5blink17HttpRawHeaderPairEEELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal22HttpRawHeaderPair_DataEEEEEPSE_PNS_7MessageE = comdat any

$_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEEEEmm = comdat any

$_ZN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEE4SwapEPS5_ = comdat any

$_ZN7network5mojom5blink17HttpRawHeaderPairaSERKS2_ = comdat any

$_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEELj0ENS_18PartitionAllocatorEE6resizeEj = comdat any

$_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [17 x i8] c"http_status_code\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"http_status_text\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"request_headers\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"response_headers\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"request_headers_text\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"response_headers_text\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::InlinedStructPtr<network::mojom::blink::HttpRawHeaderPair>]\00", align 1
@.str.10 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN7network5mojom5blink26HttpRawRequestResponseInfoC1Ev = hidden unnamed_addr alias void (%"class.network::mojom::blink::HttpRawRequestResponseInfo"*), void (%"class.network::mojom::blink::HttpRawRequestResponseInfo"*)* @_ZN7network5mojom5blink26HttpRawRequestResponseInfoC2Ev
@_ZN7network5mojom5blink26HttpRawRequestResponseInfoC1EiRKN3WTF6StringENS3_6VectorIN4mojo16InlinedStructPtrINS1_17HttpRawHeaderPairEEELj0ENS3_18PartitionAllocatorEEESD_S6_S6_ = hidden unnamed_addr alias void (%"class.network::mojom::blink::HttpRawRequestResponseInfo"*, i32, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.WTF::Vector"*, %"class.WTF::String"*, %"class.WTF::String"*), void (%"class.network::mojom::blink::HttpRawRequestResponseInfo"*, i32, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.WTF::Vector"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN7network5mojom5blink26HttpRawRequestResponseInfoC2EiRKN3WTF6StringENS3_6VectorIN4mojo16InlinedStructPtrINS1_17HttpRawHeaderPairEEELj0ENS3_18PartitionAllocatorEEESD_S6_S6_
@_ZN7network5mojom5blink26HttpRawRequestResponseInfoD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::blink::HttpRawRequestResponseInfo"*), void (%"class.network::mojom::blink::HttpRawRequestResponseInfo"*)* @_ZN7network5mojom5blink26HttpRawRequestResponseInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink26HttpRawRequestResponseInfoC2Ev(%"class.network::mojom::blink::HttpRawRequestResponseInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 1
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink26HttpRawRequestResponseInfoC2EiRKN3WTF6StringENS3_6VectorIN4mojo16InlinedStructPtrINS1_17HttpRawHeaderPairEEELj0ENS3_18PartitionAllocatorEEESD_S6_S6_(%"class.network::mojom::blink::HttpRawRequestResponseInfo"* nocapture, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::Vector"* nocapture, %"class.WTF::Vector"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #9
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #9
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %7, %13, %28
  %31 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 2
  %32 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %34 = bitcast %"class.WTF::Vector"* %3 to i64*
  %35 = bitcast %"class.WTF::Vector"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #9
  %36 = load i64, i64* %34, align 8
  %37 = bitcast %"class.WTF::Vector"* %31 to i64*
  store atomic i64 0, i64* %34 monotonic, align 8
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 1
  %39 = load i32, i32* %32, align 4
  %40 = load i32, i32* %38, align 4
  store i32 %40, i32* %32, align 4
  store i32 %39, i32* %38, align 4
  %41 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %33, align 4
  %43 = load i32, i32* %41, align 4
  store i32 %43, i32* %33, align 4
  store i32 %42, i32* %41, align 4
  %44 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 3
  %45 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %47 = bitcast %"class.WTF::Vector"* %4 to i64*
  %48 = bitcast %"class.WTF::Vector"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #9
  %49 = load i64, i64* %47, align 8
  %50 = bitcast %"class.WTF::Vector"* %44 to i64*
  store atomic i64 0, i64* %47 monotonic, align 8
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %52 = load i32, i32* %45, align 4
  %53 = load i32, i32* %51, align 4
  store i32 %53, i32* %45, align 4
  store i32 %52, i32* %51, align 4
  %54 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %55 = load i32, i32* %46, align 4
  %56 = load i32, i32* %54, align 4
  store i32 %56, i32* %46, align 4
  store i32 %55, i32* %54, align 4
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %59, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %60, label %78, label %61

61:                                               ; preds = %30
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i33
  %70 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #9
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !2

75:                                               ; preds = %66
  tail call void @llvm.trap() #9
  unreachable

76:                                               ; preds = %66
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %67, align 4
  br label %78

78:                                               ; preds = %30, %61, %76
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %81, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #9
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !2

97:                                               ; preds = %88
  tail call void @llvm.trap() #9
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %78, %83, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink26HttpRawRequestResponseInfoD2Ev(%"class.network::mojom::blink::HttpRawRequestResponseInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #9
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 4, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 3
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %37, align 8
  %39 = icmp eq %"class.mojo::InlinedStructPtr"* %38, null
  br i1 %39, label %58, label %40, !prof !3

40:                                               ; preds = %35
  %41 = bitcast %"class.mojo::InlinedStructPtr"* %38 to i8*
  %42 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %56, label %45, !prof !2

45:                                               ; preds = %40
  %46 = zext i32 %43 to i64
  %47 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %38, i64 %46
  br label %48

48:                                               ; preds = %48, %45
  %49 = phi %"class.mojo::InlinedStructPtr"* [ %51, %48 ], [ %38, %45 ]
  %50 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %49, i64 0, i32 0
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairD1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %50) #9
  %51 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %49, i64 1
  %52 = icmp eq %"class.mojo::InlinedStructPtr"* %51, %47
  br i1 %52, label %53, label %48

53:                                               ; preds = %48
  store i32 0, i32* %42, align 4
  %54 = bitcast %"class.WTF::Vector"* %36 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %40
  %57 = phi i8* [ %55, %53 ], [ %41, %40 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #9
  store %"class.mojo::InlinedStructPtr"* null, %"class.mojo::InlinedStructPtr"** %37, align 8
  br label %58

58:                                               ; preds = %35, %56
  %59 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 2
  %60 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %60, align 8
  %62 = icmp eq %"class.mojo::InlinedStructPtr"* %61, null
  br i1 %62, label %81, label %63, !prof !3

63:                                               ; preds = %58
  %64 = bitcast %"class.mojo::InlinedStructPtr"* %61 to i8*
  %65 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %79, label %68, !prof !2

68:                                               ; preds = %63
  %69 = zext i32 %66 to i64
  %70 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %61, i64 %69
  br label %71

71:                                               ; preds = %71, %68
  %72 = phi %"class.mojo::InlinedStructPtr"* [ %74, %71 ], [ %61, %68 ]
  %73 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %72, i64 0, i32 0
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairD1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %73) #9
  %74 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %72, i64 1
  %75 = icmp eq %"class.mojo::InlinedStructPtr"* %74, %70
  br i1 %75, label %76, label %71

76:                                               ; preds = %71
  store i32 0, i32* %65, align 4
  %77 = bitcast %"class.WTF::Vector"* %59 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %63
  %80 = phi i8* [ %78, %76 ], [ %64, %63 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #9
  store %"class.mojo::InlinedStructPtr"* null, %"class.mojo::InlinedStructPtr"** %60, align 8
  br label %81

81:                                               ; preds = %58, %79
  %82 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 1, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #9
  br label %98

98:                                               ; preds = %81, %94, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7network5mojom5blink26HttpRawRequestResponseInfo14WriteIntoTraceEN8perfetto11TracedValueE(%"class.network::mojom::blink::HttpRawRequestResponseInfo"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedDictionary", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.perfetto::TracedValue", align 8
  %15 = alloca %"class.perfetto::TracedValue", align 8
  %16 = bitcast %"class.perfetto::TracedDictionary"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  %17 = bitcast %"class.perfetto::TracedDictionary"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %9, %"class.perfetto::TracedValue"* %1) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %10, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #9
  %18 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 0
  %19 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  %20 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %19, i64 16, i1 false) #9
  %21 = load i32, i32* %18, align 4
  %22 = sext i32 %21 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %7, i64 %22) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %11, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #9
  %23 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 1
  %24 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  %25 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %24, i64 16, i1 false) #9
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %23, %"class.perfetto::TracedValue"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %12, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)) #9
  %26 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 2
  %27 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27)
  %28 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %28, i64 16, i1 false) #9
  call void @_ZN8perfetto20WriteIntoTracedValueIRKN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEELj0ENS1_18PartitionAllocatorEEEEEvNS_11TracedValueEOT_(%"class.perfetto::TracedValue"* nonnull %5, %"class.WTF::Vector"* dereferenceable(16) %26) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #9
  %29 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 3
  %30 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30)
  %31 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %31, i64 16, i1 false) #9
  call void @_ZN8perfetto20WriteIntoTracedValueIRKN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEELj0ENS1_18PartitionAllocatorEEEEEvNS_11TracedValueEOT_(%"class.perfetto::TracedValue"* nonnull %4, %"class.WTF::Vector"* dereferenceable(16) %29) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %14, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)) #9
  %32 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 4
  %33 = bitcast %"class.perfetto::TracedValue"* %14 to i8*
  %34 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %33, i64 16, i1 false) #9
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %32, %"class.perfetto::TracedValue"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %15, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0)) #9
  %35 = getelementptr inbounds %"class.network::mojom::blink::HttpRawRequestResponseInfo", %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %0, i64 0, i32 5
  %36 = bitcast %"class.perfetto::TracedValue"* %15 to i8*
  %37 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %36, i64 16, i1 false) #9
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %35, %"class.perfetto::TracedValue"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7network5mojom5blink26HttpRawRequestResponseInfo8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN7network5mojom8internal31HttpRawRequestResponseInfo_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #9
  ret i1 %3
}

declare zeroext i1 @_ZN7network5mojom8internal31HttpRawRequestResponseInfo_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN7network5mojom34HttpRawRequestResponseInfoDataViewENS_9StructPtrINS2_5blink26HttpRawRequestResponseInfoEEEE4ReadES3_PS7_(%"class.network::mojom::internal::HttpRawRequestResponseInfo_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 64) #10, !noalias !4
  %5 = bitcast i8* %4 to i32*
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 56, i1 false) #9, !noalias !4
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.network::mojom::internal::HttpRawRequestResponseInfo_Data", %"class.network::mojom::internal::HttpRawRequestResponseInfo_Data"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 1
  store i32 %9, i32* %5, align 8
  %10 = bitcast i8* %6 to %"class.WTF::String"*
  %11 = getelementptr inbounds %"class.network::mojom::internal::HttpRawRequestResponseInfo_Data", %"class.network::mojom::internal::HttpRawRequestResponseInfo_Data"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %11, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %3
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %10) #9
  br label %24

16:                                               ; preds = %3
  %17 = bitcast %"struct.mojo::internal::Pointer"* %11 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %13
  %19 = bitcast i8* %18 to %"class.mojo::internal::Array_Data"*
  %20 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %19, %"class.WTF::String"* %10) #9
  br i1 %20, label %21, label %130

21:                                               ; preds = %16
  %22 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %10) #9
  br i1 %22, label %24, label %23

23:                                               ; preds = %21
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #9
  br label %24

24:                                               ; preds = %15, %23, %21
  %25 = getelementptr inbounds i8, i8* %4, i64 16
  %26 = getelementptr inbounds %"class.network::mojom::internal::HttpRawRequestResponseInfo_Data", %"class.network::mojom::internal::HttpRawRequestResponseInfo_Data"* %0, i64 0, i32 4
  %27 = getelementptr inbounds %"struct.mojo::internal::Pointer.31", %"struct.mojo::internal::Pointer.31"* %26, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %55

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %4, i64 24
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %61, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds i8, i8* %4, i64 28
  %37 = bitcast i8* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %51, label %40

40:                                               ; preds = %35
  %41 = bitcast i8* %25 to %"class.mojo::InlinedStructPtr"**
  %42 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %41, align 8
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %42, i64 %43
  br label %45

45:                                               ; preds = %45, %40
  %46 = phi %"class.mojo::InlinedStructPtr"* [ %48, %45 ], [ %42, %40 ]
  %47 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %46, i64 0, i32 0
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairD1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %47) #9
  %48 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %46, i64 1
  %49 = icmp eq %"class.mojo::InlinedStructPtr"* %48, %44
  br i1 %49, label %50, label %45

50:                                               ; preds = %45
  store i32 0, i32* %37, align 4
  br label %51

51:                                               ; preds = %50, %35
  %52 = bitcast i8* %25 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast i8* %25 to i64*
  store atomic i64 0, i64* %54 monotonic, align 8
  store i32 0, i32* %32, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %53) #9
  br label %61

55:                                               ; preds = %24
  %56 = bitcast i8* %25 to %"class.WTF::Vector"*
  %57 = bitcast %"struct.mojo::internal::Pointer.31"* %26 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 %28
  %59 = bitcast i8* %58 to %"class.mojo::internal::Array_Data.43"*
  %60 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN7network5mojom25HttpRawHeaderPairDataViewEEEN3WTF6VectorINS_16InlinedStructPtrINS4_5blink17HttpRawHeaderPairEEELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal22HttpRawHeaderPair_DataEEEEEPSE_PNS_7MessageE(%"class.mojo::internal::Array_Data.43"* nonnull %59, %"class.WTF::Vector"* %56, %"class.mojo::Message"* %1) #9
  br i1 %60, label %61, label %130

61:                                               ; preds = %51, %30, %55
  %62 = getelementptr inbounds i8, i8* %4, i64 32
  %63 = getelementptr inbounds %"class.network::mojom::internal::HttpRawRequestResponseInfo_Data", %"class.network::mojom::internal::HttpRawRequestResponseInfo_Data"* %0, i64 0, i32 5
  %64 = getelementptr inbounds %"struct.mojo::internal::Pointer.31", %"struct.mojo::internal::Pointer.31"* %63, i64 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %92

67:                                               ; preds = %61
  %68 = getelementptr inbounds i8, i8* %4, i64 40
  %69 = bitcast i8* %68 to i32*
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %98, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds i8, i8* %4, i64 44
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %88, label %77

77:                                               ; preds = %72
  %78 = bitcast i8* %62 to %"class.mojo::InlinedStructPtr"**
  %79 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %78, align 8
  %80 = zext i32 %75 to i64
  %81 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %79, i64 %80
  br label %82

82:                                               ; preds = %82, %77
  %83 = phi %"class.mojo::InlinedStructPtr"* [ %85, %82 ], [ %79, %77 ]
  %84 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %83, i64 0, i32 0
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairD1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %84) #9
  %85 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %83, i64 1
  %86 = icmp eq %"class.mojo::InlinedStructPtr"* %85, %81
  br i1 %86, label %87, label %82

87:                                               ; preds = %82
  store i32 0, i32* %74, align 4
  br label %88

88:                                               ; preds = %87, %72
  %89 = bitcast i8* %62 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = bitcast i8* %62 to i64*
  store atomic i64 0, i64* %91 monotonic, align 8
  store i32 0, i32* %69, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  br label %98

92:                                               ; preds = %61
  %93 = bitcast i8* %62 to %"class.WTF::Vector"*
  %94 = bitcast %"struct.mojo::internal::Pointer.31"* %63 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 %65
  %96 = bitcast i8* %95 to %"class.mojo::internal::Array_Data.43"*
  %97 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN7network5mojom25HttpRawHeaderPairDataViewEEEN3WTF6VectorINS_16InlinedStructPtrINS4_5blink17HttpRawHeaderPairEEELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal22HttpRawHeaderPair_DataEEEEEPSE_PNS_7MessageE(%"class.mojo::internal::Array_Data.43"* nonnull %96, %"class.WTF::Vector"* %93, %"class.mojo::Message"* %1) #9
  br i1 %97, label %98, label %130

98:                                               ; preds = %88, %67, %92
  %99 = getelementptr inbounds i8, i8* %4, i64 48
  %100 = bitcast i8* %99 to %"class.WTF::String"*
  %101 = getelementptr inbounds %"class.network::mojom::internal::HttpRawRequestResponseInfo_Data", %"class.network::mojom::internal::HttpRawRequestResponseInfo_Data"* %0, i64 0, i32 6
  %102 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %101, i64 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %98
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %100) #9
  br label %114

106:                                              ; preds = %98
  %107 = bitcast %"struct.mojo::internal::Pointer"* %101 to i8*
  %108 = getelementptr inbounds i8, i8* %107, i64 %103
  %109 = bitcast i8* %108 to %"class.mojo::internal::Array_Data"*
  %110 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %109, %"class.WTF::String"* %100) #9
  br i1 %110, label %111, label %130

111:                                              ; preds = %106
  %112 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %100) #9
  br i1 %112, label %114, label %113

113:                                              ; preds = %111
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #9
  br label %114

114:                                              ; preds = %105, %113, %111
  %115 = getelementptr inbounds i8, i8* %4, i64 56
  %116 = bitcast i8* %115 to %"class.WTF::String"*
  %117 = getelementptr inbounds %"class.network::mojom::internal::HttpRawRequestResponseInfo_Data", %"class.network::mojom::internal::HttpRawRequestResponseInfo_Data"* %0, i64 0, i32 7
  %118 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %117, i64 0, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %114
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %116) #9
  br label %130

122:                                              ; preds = %114
  %123 = bitcast %"struct.mojo::internal::Pointer"* %117 to i8*
  %124 = getelementptr inbounds i8, i8* %123, i64 %119
  %125 = bitcast i8* %124 to %"class.mojo::internal::Array_Data"*
  %126 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %125, %"class.WTF::String"* %116) #9
  br i1 %126, label %127, label %130

127:                                              ; preds = %122
  %128 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %116) #9
  br i1 %128, label %130, label %129

129:                                              ; preds = %127
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #9
  br label %130

130:                                              ; preds = %106, %92, %16, %55, %122, %121, %129, %127
  %131 = phi i8 [ 0, %122 ], [ 1, %121 ], [ 1, %129 ], [ 1, %127 ], [ 0, %55 ], [ 0, %16 ], [ 0, %92 ], [ 0, %106 ]
  %132 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"class.network::mojom::blink::HttpRawRequestResponseInfo"*, %"class.network::mojom::blink::HttpRawRequestResponseInfo"** %132, align 8
  store %"class.network::mojom::blink::HttpRawRequestResponseInfo"* null, %"class.network::mojom::blink::HttpRawRequestResponseInfo"** %132, align 8
  %134 = icmp eq %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %133, null
  br i1 %134, label %135, label %138

135:                                              ; preds = %130
  %136 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %7, i64* %136, align 8
  %137 = icmp ne i8 %131, 0
  br label %146

138:                                              ; preds = %130
  tail call void @_ZN7network5mojom5blink26HttpRawRequestResponseInfoD2Ev(%"class.network::mojom::blink::HttpRawRequestResponseInfo"* nonnull %133) #9
  %139 = bitcast %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %133 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  %140 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %141 = load %"class.network::mojom::blink::HttpRawRequestResponseInfo"*, %"class.network::mojom::blink::HttpRawRequestResponseInfo"** %132, align 8
  store i64 %7, i64* %140, align 8
  %142 = icmp ne i8 %131, 0
  %143 = icmp eq %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %141, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %138
  tail call void @_ZN7network5mojom5blink26HttpRawRequestResponseInfoD2Ev(%"class.network::mojom::blink::HttpRawRequestResponseInfo"* nonnull %141) #9
  %145 = bitcast %"class.network::mojom::blink::HttpRawRequestResponseInfo"* %141 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  br label %146

146:                                              ; preds = %135, %138, %144
  %147 = phi i1 [ %137, %135 ], [ %142, %138 ], [ %142, %144 ]
  ret i1 %147
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink17HttpRawHeaderPairD1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"*) unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto20WriteIntoTracedValueIRKN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEELj0ENS1_18PartitionAllocatorEEEEEvNS_11TracedValueEOT_(%"class.perfetto::TracedValue"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedArray", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  %9 = bitcast %"class.perfetto::TracedValue"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = bitcast %"class.perfetto::TracedArray"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false) #9
  call void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* nonnull sret %6, %"class.perfetto::TracedValue"* nonnull %7) #9
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %12, i64 %15
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %35, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  %20 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  %21 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  br label %22

22:                                               ; preds = %32, %18
  %23 = phi %"class.mojo::InlinedStructPtr"* [ %12, %18 ], [ %33, %32 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #9
  call void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* nonnull sret %5, %"class.perfetto::TracedArray"* nonnull %6) #9
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %23, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %19, i64 16, i1 false) #9
  %27 = icmp eq %"class.mojo::InlinedStructPtr"* %23, null
  %28 = or i1 %27, %26
  br i1 %28, label %29, label %30

29:                                               ; preds = %22
  call void @_ZNO8perfetto11TracedValue12WritePointerEPKv(%"class.perfetto::TracedValue"* nonnull %4, i8* null) #9
  br label %32

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %23, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %20, i64 16, i1 false) #9
  call void @_ZNK7network5mojom5blink17HttpRawHeaderPair14WriteIntoTraceEN8perfetto11TracedValueE(%"class.network::mojom::blink::HttpRawHeaderPair"* nonnull %31, %"class.perfetto::TracedValue"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #9
  br label %32

32:                                               ; preds = %30, %29
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #9
  %33 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %23, i64 1
  %34 = icmp eq %"class.mojo::InlinedStructPtr"* %33, %16
  br i1 %34, label %35, label %22

35:                                               ; preds = %32, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret void
}

declare void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedArray"*) local_unnamed_addr #2

declare void @_ZNO8perfetto11TracedValue12WritePointerEPKv(%"class.perfetto::TracedValue"*, i8*) local_unnamed_addr #2

declare void @_ZNK7network5mojom5blink17HttpRawHeaderPair14WriteIntoTraceEN8perfetto11TracedValueE(%"class.network::mojom::blink::HttpRawHeaderPair"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"*, %"class.WTF::String"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #2

declare void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN7network5mojom25HttpRawHeaderPairDataViewEEEN3WTF6VectorINS_16InlinedStructPtrINS4_5blink17HttpRawHeaderPairEEELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal22HttpRawHeaderPair_DataEEEEEPSE_PNS_7MessageE(%"class.mojo::internal::Array_Data.43"*, %"class.WTF::Vector"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.43", %"class.mojo::internal::Array_Data.43"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  tail call void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"* %1, i32 %5) #9
  %6 = load i32, i32* %4, align 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.mojo::internal::Array_Data.43", %"class.mojo::internal::Array_Data.43"* %0, i64 1
  br label %10

10:                                               ; preds = %8, %29
  %11 = phi i64 [ 0, %8 ], [ %18, %29 ]
  %12 = getelementptr inbounds %"class.mojo::internal::Array_Data.43", %"class.mojo::internal::Array_Data.43"* %9, i64 %11
  %13 = bitcast %"class.mojo::internal::Array_Data.43"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  %16 = bitcast %"class.mojo::internal::Array_Data.43"* %12 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %14
  %18 = add nuw nsw i64 %11, 1
  %19 = trunc i64 %11 to i32
  %20 = tail call dereferenceable(24) %"class.mojo::InlinedStructPtr"* @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %19) #9
  %21 = icmp eq i8* %17, null
  %22 = or i1 %15, %21
  br i1 %22, label %23, label %26

23:                                               ; preds = %10
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %20, i64 0, i32 1
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %20, i64 0, i32 0
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairD1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %25) #9
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairC1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %25) #9
  br label %29

26:                                               ; preds = %10
  %27 = bitcast i8* %17 to %"class.network::mojom::internal::HttpRawHeaderPair_Data"*
  %28 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN7network5mojom25HttpRawHeaderPairDataViewENS_16InlinedStructPtrINS2_5blink17HttpRawHeaderPairEEEE4ReadES3_PS7_(%"class.network::mojom::internal::HttpRawHeaderPair_Data"* nonnull %27, %"class.mojo::Message"* %2, %"class.mojo::InlinedStructPtr"* %20) #9
  br i1 %28, label %29, label %33

29:                                               ; preds = %23, %26
  %30 = load i32, i32* %4, align 1
  %31 = zext i32 %30 to i64
  %32 = icmp ult i64 %18, %31
  br i1 %32, label %10, label %33

33:                                               ; preds = %29, %26, %3
  %34 = phi i1 [ true, %3 ], [ false, %26 ], [ true, %29 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %25

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.mojo::InlinedStructPtr"* [ %21, %14 ], [ %6, %4 ]
  %16 = phi %"class.mojo::InlinedStructPtr"* [ %20, %14 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %16, i64 0, i32 0
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairC1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %17) #9
  %18 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %16, i64 0, i32 1
  store i32 0, i32* %18, align 8
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairD1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %17) #9
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairC1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %17) #9
  tail call void @_ZN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEE4SwapEPS5_(%"class.mojo::InlinedStructPtr"* %16, %"class.mojo::InlinedStructPtr"* %15) #9
  %19 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %15, i64 0, i32 0
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairD1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %19) #9
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %16, i64 1
  %21 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %15, i64 1
  %22 = icmp eq %"class.mojo::InlinedStructPtr"* %21, %10
  br i1 %22, label %23, label %14

23:                                               ; preds = %14, %4
  %24 = bitcast %"class.mojo::InlinedStructPtr"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %24) #9
  br label %59

25:                                               ; preds = %2
  %26 = zext i32 %1 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEEEEPKcv, i64 0, i64 0)) #9
  %29 = udiv i64 %27, 24
  %30 = ptrtoint i8* %28 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %32, i64 %35
  %37 = icmp eq i32 %34, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %25
  %39 = bitcast %"class.mojo::InlinedStructPtr"* %32 to i8*
  br label %54

40:                                               ; preds = %25
  %41 = bitcast i8* %28 to %"class.mojo::InlinedStructPtr"*
  br label %42

42:                                               ; preds = %40, %42
  %43 = phi %"class.mojo::InlinedStructPtr"* [ %49, %42 ], [ %32, %40 ]
  %44 = phi %"class.mojo::InlinedStructPtr"* [ %48, %42 ], [ %41, %40 ]
  %45 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %44, i64 0, i32 0
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairC1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %45) #9
  %46 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %44, i64 0, i32 1
  store i32 0, i32* %46, align 8
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairD1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %45) #9
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairC1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %45) #9
  tail call void @_ZN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEE4SwapEPS5_(%"class.mojo::InlinedStructPtr"* %44, %"class.mojo::InlinedStructPtr"* %43) #9
  %47 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %43, i64 0, i32 0
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairD1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %47) #9
  %48 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %44, i64 1
  %49 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %43, i64 1
  %50 = icmp eq %"class.mojo::InlinedStructPtr"* %49, %36
  br i1 %50, label %51, label %42

51:                                               ; preds = %42
  %52 = bitcast %"class.WTF::Vector"* %0 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %38, %51
  %55 = phi i8* [ %53, %51 ], [ %39, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #9
  %56 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %56 monotonic, align 8
  %57 = trunc i64 %29 to i32
  %58 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %57, i32* %58, align 8
  br label %59

59:                                               ; preds = %54, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN7network5mojom5blink17HttpRawHeaderPairC1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEE4SwapEPS5_(%"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.network::mojom::blink::HttpRawHeaderPair", align 8
  %4 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0
  %6 = bitcast %"class.network::mojom::blink::HttpRawHeaderPair"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.network::mojom::blink::HttpRawHeaderPair", %"class.network::mojom::blink::HttpRawHeaderPair"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.network::mojom::blink::HttpRawHeaderPair", %"class.network::mojom::blink::HttpRawHeaderPair"* %3, i64 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.network::mojom::blink::HttpRawHeaderPair", %"class.network::mojom::blink::HttpRawHeaderPair"* %3, i64 0, i32 1
  %11 = bitcast %"class.WTF::String"* %10 to i64*
  store i64 -6148914691236517206, i64* %11, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %7, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #9
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #9
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %29, %14, %2
  %32 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %8, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #9
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #9
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %31, %35, %50
  %53 = tail call dereferenceable(16) %"class.network::mojom::blink::HttpRawHeaderPair"* @_ZN7network5mojom5blink17HttpRawHeaderPairaSERKS2_(%"class.network::mojom::blink::HttpRawHeaderPair"* %4, %"class.network::mojom::blink::HttpRawHeaderPair"* dereferenceable(16) %5) #9
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #9
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !2

70:                                               ; preds = %61
  tail call void @llvm.trap() #9
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %71, %56, %52
  %74 = ptrtoint %"class.WTF::StringImpl"* %54 to i64
  %75 = bitcast %"class.mojo::InlinedStructPtr"* %1 to i64*
  %76 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  store i64 %74, i64* %75, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #9
  br label %92

92:                                               ; preds = %91, %88, %73
  %93 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0, i32 1
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %113, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %113

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i33
  %105 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %104, i33 1) #9
  %106 = extractvalue { i33, i1 } %105, 1
  %107 = extractvalue { i33, i1 } %105, 0
  %108 = icmp slt i33 %107, 0
  %109 = or i1 %106, %108
  br i1 %109, label %110, label %111, !prof !2

110:                                              ; preds = %101
  tail call void @llvm.trap() #9
  unreachable

111:                                              ; preds = %101
  %112 = trunc i33 %107 to i32
  store i32 %112, i32* %102, align 4
  br label %113

113:                                              ; preds = %111, %96, %92
  %114 = ptrtoint %"class.WTF::StringImpl"* %94 to i64
  %115 = bitcast %"class.WTF::String"* %93 to i64*
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %93, i64 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  store i64 %114, i64* %115, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #9
  br label %132

132:                                              ; preds = %113, %128, %131
  call void @_ZN7network5mojom5blink17HttpRawHeaderPairD1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  %133 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %0, i64 0, i32 1
  %134 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 1
  %135 = load i32, i32* %133, align 4
  %136 = load i32, i32* %134, align 4
  store i32 %136, i32* %133, align 4
  store i32 %135, i32* %134, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.network::mojom::blink::HttpRawHeaderPair"* @_ZN7network5mojom5blink17HttpRawHeaderPairaSERKS2_(%"class.network::mojom::blink::HttpRawHeaderPair"*, %"class.network::mojom::blink::HttpRawHeaderPair"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::blink::HttpRawHeaderPair", %"class.network::mojom::blink::HttpRawHeaderPair"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #9
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #9
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"class.network::mojom::blink::HttpRawHeaderPair"* %0 to i64*
  %26 = getelementptr inbounds %"class.network::mojom::blink::HttpRawHeaderPair", %"class.network::mojom::blink::HttpRawHeaderPair"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"class.network::mojom::blink::HttpRawHeaderPair", %"class.network::mojom::blink::HttpRawHeaderPair"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.network::mojom::blink::HttpRawHeaderPair", %"class.network::mojom::blink::HttpRawHeaderPair"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #9
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #9
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::String"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #9
  br label %83

83:                                               ; preds = %64, %79, %82
  ret %"class.network::mojom::blink::HttpRawHeaderPair"* %0
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %7, align 8
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 %9
  %11 = icmp eq i32 %4, %1
  br i1 %11, label %63, label %12

12:                                               ; preds = %6
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 %13
  br label %15

15:                                               ; preds = %12, %15
  %16 = phi %"class.mojo::InlinedStructPtr"* [ %18, %15 ], [ %14, %12 ]
  %17 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %16, i64 0, i32 0
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairD1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %17) #9
  %18 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %16, i64 1
  %19 = icmp eq %"class.mojo::InlinedStructPtr"* %18, %10
  br i1 %19, label %63, label %15

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp ult i32 %22, %1
  br i1 %23, label %24, label %46

24:                                               ; preds = %20
  %25 = lshr i32 %22, 2
  %26 = add nuw i32 %22, 1
  %27 = add i32 %26, %25
  %28 = icmp ugt i32 %27, 4
  %29 = select i1 %28, i32 %27, i32 4
  %30 = icmp ugt i32 %29, %1
  %31 = select i1 %30, i32 %29, i32 %1
  %32 = icmp ult i32 %22, %31
  br i1 %32, label %33, label %46, !prof !3

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %34, align 8
  %36 = icmp eq %"class.mojo::InlinedStructPtr"* %35, null
  br i1 %36, label %37, label %45

37:                                               ; preds = %33
  %38 = zext i32 %31 to i64
  %39 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEEEEmm(i64 %38) #9
  %40 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %39, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEEEEPKcv, i64 0, i64 0)) #9
  %41 = ptrtoint i8* %40 to i64
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %41, i64* %42 monotonic, align 8
  %43 = udiv i64 %39, 24
  %44 = trunc i64 %43 to i32
  store i32 %44, i32* %21, align 8
  br label %46

45:                                               ; preds = %33
  tail call void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %31) #9
  br label %46

46:                                               ; preds = %45, %37, %24, %20
  %47 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %47, align 8
  %49 = load i32, i32* %3, align 4
  %50 = zext i32 %1 to i64
  %51 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %48, i64 %50
  %52 = icmp eq i32 %49, %1
  br i1 %52, label %63, label %53

53:                                               ; preds = %46
  %54 = zext i32 %49 to i64
  %55 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %48, i64 %54
  br label %56

56:                                               ; preds = %53, %56
  %57 = phi %"class.mojo::InlinedStructPtr"* [ %61, %56 ], [ %55, %53 ]
  %58 = bitcast %"class.mojo::InlinedStructPtr"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #9
  %59 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %57, i64 0, i32 0
  tail call void @_ZN7network5mojom5blink17HttpRawHeaderPairC1Ev(%"class.network::mojom::blink::HttpRawHeaderPair"* %59) #9
  %60 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %57, i64 0, i32 1
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %57, i64 1
  %62 = icmp eq %"class.mojo::InlinedStructPtr"* %61, %51
  br i1 %62, label %63, label %56

63:                                               ; preds = %15, %56, %6, %46
  store i32 %1, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN4mojo12StructTraitsIN7network5mojom25HttpRawHeaderPairDataViewENS_16InlinedStructPtrINS2_5blink17HttpRawHeaderPairEEEE4ReadES3_PS7_(%"class.network::mojom::internal::HttpRawHeaderPair_Data"*, %"class.mojo::Message"*, %"class.mojo::InlinedStructPtr"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.mojo::InlinedStructPtr"* @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink17HttpRawHeaderPairEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %24, i64 %25
  ret %"class.mojo::InlinedStructPtr"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN7network5mojom5blink26HttpRawRequestResponseInfo3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZN7network5mojom5blink26HttpRawRequestResponseInfo3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
