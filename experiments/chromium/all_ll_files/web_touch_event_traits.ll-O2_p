; ModuleID = '../../content/common/input/web_touch_event_traits.cc'
source_filename = "../../content/common/input/web_touch_event_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WebTouchEvent" = type { %"class.blink::WebInputEvent", i32, [16 x %"class.blink::WebTouchPoint"], i32, i8, i8, i8, i32 }
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::WebTouchPoint" = type { %"class.blink::WebPointerProperties", i32, float, float, float }
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::PointF" = type { float, float }

@switch.table._ZN7content19WebTouchEventTraits23ResetTypeAndTouchStatesEN5blink5mojom9EventTypeEN4base9TimeTicksEPNS1_13WebTouchEventE = private unnamed_addr constant [4 x i32] [i32 2, i32 3, i32 1, i32 5], align 4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN7content19WebTouchEventTraits23AllTouchPointsHaveStateERKN5blink13WebTouchEventENS1_5mojom10TouchStateE(%"class.blink::WebTouchEvent"* nocapture readonly dereferenceable(1272), i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = zext i32 %4 to i64
  br label %10

8:                                                ; preds = %10
  %9 = icmp eq i64 %15, %7
  br i1 %9, label %16, label %10

10:                                               ; preds = %8, %6
  %11 = phi i64 [ %15, %8 ], [ 0, %6 ]
  %12 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %11, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, %1
  %15 = add nuw nsw i64 %11, 1
  br i1 %14, label %8, label %16

16:                                               ; preds = %10, %8, %2
  %17 = phi i1 [ false, %2 ], [ false, %10 ], [ true, %8 ]
  ret i1 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN7content19WebTouchEventTraits20IsTouchSequenceStartERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* nocapture readonly dereferenceable(1272)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 28
  br i1 %4, label %5, label %19

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %13

11:                                               ; preds = %13
  %12 = icmp eq i64 %18, %10
  br i1 %12, label %19, label %13

13:                                               ; preds = %11, %9
  %14 = phi i64 [ %18, %11 ], [ 0, %9 ]
  %15 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %14, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 2
  %18 = add nuw nsw i64 %14, 1
  br i1 %17, label %11, label %19

19:                                               ; preds = %13, %11, %5, %1
  %20 = phi i1 [ false, %1 ], [ false, %5 ], [ true, %11 ], [ false, %13 ]
  ret i1 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN7content19WebTouchEventTraits18IsTouchSequenceEndERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* nocapture readonly dereferenceable(1272)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, -2
  %5 = icmp eq i32 %4, 30
  br i1 %5, label %6, label %19

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %16, %10
  %13 = phi i64 [ %17, %16 ], [ 0, %10 ]
  %14 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %13, i32 1
  %15 = load i32, i32* %14, align 4
  switch i32 %15, label %19 [
    i32 1, label %16
    i32 5, label %16
  ]

16:                                               ; preds = %12, %12
  %17 = add nuw nsw i64 %13, 1
  %18 = icmp eq i64 %17, %11
  br i1 %18, label %19, label %12

19:                                               ; preds = %12, %16, %1, %6
  %20 = phi i1 [ true, %6 ], [ false, %1 ], [ false, %12 ], [ true, %16 ]
  ret i1 %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content19WebTouchEventTraits9ResetTypeEN5blink5mojom9EventTypeEN4base9TimeTicksEPNS1_13WebTouchEventE(i32, i64, %"class.blink::WebTouchEvent"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 0, i32 4
  store i32 %0, i32* %4, align 8
  %5 = icmp eq i32 %0, 31
  %6 = zext i1 %5 to i32
  %7 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 3
  store i32 %6, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %1, i64* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7content19WebTouchEventTraits23ResetTypeAndTouchStatesEN5blink5mojom9EventTypeEN4base9TimeTicksEPNS1_13WebTouchEventE(i32, i64, %"class.blink::WebTouchEvent"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 0, i32 4
  store i32 %0, i32* %4, align 8
  %5 = icmp eq i32 %0, 31
  %6 = zext i1 %5 to i32
  %7 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 3
  store i32 %6, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %1, i64* %8, align 8
  %9 = add i32 %0, -28
  %10 = icmp ult i32 %9, 4
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN7content19WebTouchEventTraits23ResetTypeAndTouchStatesEN5blink5mojom9EventTypeEN4base9TimeTicksEPNS1_13WebTouchEventE, i64 0, i64 %12
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %11, %3
  %16 = phi i32 [ 0, %3 ], [ %14, %11 ]
  %17 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %37, label %20

20:                                               ; preds = %15
  %21 = zext i32 %18 to i64
  %22 = add nsw i64 %21, -1
  %23 = and i64 %21, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = sub nsw i64 %21, %23
  br label %38

27:                                               ; preds = %38, %20
  %28 = phi i64 [ 0, %20 ], [ %48, %38 ]
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %27, %30
  %31 = phi i64 [ %34, %30 ], [ %28, %27 ]
  %32 = phi i64 [ %35, %30 ], [ %23, %27 ]
  %33 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 2, i64 %31, i32 1
  store i32 %16, i32* %33, align 4
  %34 = add nuw nsw i64 %31, 1
  %35 = add i64 %32, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %30, !llvm.loop !2

37:                                               ; preds = %27, %30, %15
  ret void

38:                                               ; preds = %38, %25
  %39 = phi i64 [ 0, %25 ], [ %48, %38 ]
  %40 = phi i64 [ %26, %25 ], [ %49, %38 ]
  %41 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 2, i64 %39, i32 1
  store i32 %16, i32* %41, align 4
  %42 = or i64 %39, 1
  %43 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 2, i64 %42, i32 1
  store i32 %16, i32* %43, align 4
  %44 = or i64 %39, 2
  %45 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 2, i64 %44, i32 1
  store i32 %16, i32* %45, align 4
  %46 = or i64 %39, 3
  %47 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 2, i64 %46, i32 1
  store i32 %16, i32* %47, align 4
  %48 = add nuw nsw i64 %39, 4
  %49 = add i64 %40, -4
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %27, label %38
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
