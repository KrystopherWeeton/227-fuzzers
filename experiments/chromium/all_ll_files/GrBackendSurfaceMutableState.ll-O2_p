; ModuleID = '../../third_party/skia/src/gpu/GrBackendSurfaceMutableState.cpp'
source_filename = "../../third_party/skia/src/gpu/GrBackendSurfaceMutableState.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.GrBackendSurfaceMutableState = type <{ %union.anon, i32, i8, [3 x i8] }>
%union.anon = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic.0" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::atomic.0" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i32 }

@_ZN28GrBackendSurfaceMutableStateC1ERKS_ = hidden unnamed_addr alias void (%class.GrBackendSurfaceMutableState*, %class.GrBackendSurfaceMutableState*), void (%class.GrBackendSurfaceMutableState*, %class.GrBackendSurfaceMutableState*)* @_ZN28GrBackendSurfaceMutableStateC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28GrBackendSurfaceMutableStateC2ERKS_(%class.GrBackendSurfaceMutableState* nocapture, %class.GrBackendSurfaceMutableState* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %3, align 4
  %6 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %1, i64 0, i32 2
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  store i8 %8, i8* %6, align 4
  br i1 %9, label %20, label %10

10:                                               ; preds = %2
  %11 = icmp eq i32 %5, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %10
  %13 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 seq_cst, align 4
  %15 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %14, i32* %15 seq_cst, align 4
  %16 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 seq_cst, align 4
  %18 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %17, i32* %18 seq_cst, align 4
  br label %20

19:                                               ; preds = %10
  tail call void @llvm.trap()
  unreachable

20:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.GrBackendSurfaceMutableState* @_ZN28GrBackendSurfaceMutableStateaSERKS_(%class.GrBackendSurfaceMutableState* returned, %class.GrBackendSurfaceMutableState* readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.GrBackendSurfaceMutableState* %0, %1
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %5, align 4
  %8 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  store i8 %10, i8* %8, align 4
  br i1 %11, label %22, label %12

12:                                               ; preds = %4
  %13 = icmp eq i32 %7, 1
  br i1 %13, label %14, label %21

14:                                               ; preds = %12
  %15 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 seq_cst, align 4
  %17 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %16, i32* %17 seq_cst, align 4
  %18 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 seq_cst, align 4
  %20 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %19, i32* %20 seq_cst, align 4
  br label %22

21:                                               ; preds = %12
  tail call void @llvm.trap() #2
  unreachable

22:                                               ; preds = %14, %4, %2
  ret %class.GrBackendSurfaceMutableState* %0
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold noreturn nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
