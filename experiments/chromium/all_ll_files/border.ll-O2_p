; ModuleID = '../../ui/views/border.cc'
source_filename = "../../ui/views/border.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::PaintFlags" = type <{ %class.sk_sp.836, %class.sk_sp.837, %class.sk_sp.861, %class.sk_sp.862, %class.sk_sp.863, %class.sk_sp, i32, float, float, i32, %union.anon.864, [4 x i8] }>
%class.sk_sp.836 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.837 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.838", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.368, i32, %"class.absl::optional.848", %"class.std::__1::vector.533", %"class.std::__1::vector.853", %class.sk_sp.860, %class.sk_sp.843, i32, [4 x i8] }>
%"class.absl::optional.838" = type { %"class.absl::optional_internal::optional_data.839" }
%"class.absl::optional_internal::optional_data.839" = type { %"class.absl::optional_internal::optional_data_base.840" }
%"class.absl::optional_internal::optional_data_base.840" = type { %"class.absl::optional_internal::optional_data_dtor_base.841" }
%"class.absl::optional_internal::optional_data_dtor_base.841" = type { i8, %union.anon.842 }
%union.anon.842 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.843, %class.sk_sp.368, %"class.gfx::Rect", i32, %class.sk_sp.844, %class.sk_sp.845, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.843, %class.scoped_refptr.846 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.844 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.845 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.scoped_refptr.846 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.847", [4 x i8] }>
%"class.base::RefCountedThreadSafe.847" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.368 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.369", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { i8* }
%"class.absl::optional.848" = type { %"class.absl::optional_internal::optional_data.849" }
%"class.absl::optional_internal::optional_data.849" = type { %"class.absl::optional_internal::optional_data_base.850" }
%"class.absl::optional_internal::optional_data_base.850" = type { %"class.absl::optional_internal::optional_data_dtor_base.851" }
%"class.absl::optional_internal::optional_data_dtor_base.851" = type { i8, %union.anon.852 }
%union.anon.852 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.533" = type { %"class.std::__1::__vector_base.534" }
%"class.std::__1::__vector_base.534" = type { i32*, i32*, %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { i32* }
%"class.std::__1::vector.853" = type { %"class.std::__1::__vector_base.854" }
%"class.std::__1::__vector_base.854" = type { float*, float*, %"class.std::__1::__compressed_pair.855" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.856" = type { float* }
%class.sk_sp.860 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.347", [7 x i8] }>
%"struct.std::__1::atomic.347" = type { %"struct.std::__1::__atomic_base.348" }
%"struct.std::__1::__atomic_base.348" = type { %"struct.std::__1::__cxx_atomic_impl.349" }
%"struct.std::__1::__cxx_atomic_impl.349" = type { %"struct.std::__1::__cxx_atomic_base_impl.350" }
%"struct.std::__1::__cxx_atomic_base_impl.350" = type { i8 }
%class.sk_sp.843 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.804, i32, i32 }
%class.sk_sp.804 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.805, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.805 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.162" }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.861 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.862 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.863 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.92, i32, %"class.absl::optional", i8, i32 }
%class.sk_sp.92 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%union.anon.864 = type { i32 }
%"class.views::Border" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.views::Painter" = type { i32 (...)** }
%"class.views::(anonymous namespace)::BorderPainter" = type { %"class.views::Border.base", %"class.std::__1::unique_ptr.25", %"class.gfx::Insets" }
%"class.views::Border.base" = type <{ i32 (...)**, i32 }>
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.views::Painter"* }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.325", i8, [3 x i8], %"class.absl::optional.332", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.337", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.351", %"class.absl::optional.357", i8, [7 x i8], %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.373", i8, i8, [3 x i8], %"class.std::__1::vector.222", %"class.std::__1::unique_ptr.378", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.384", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.391", %"class.std::__1::unique_ptr.397", %"class.base::ObserverList.403", i32, [4 x i8] }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.37", %"class.ui::Layer"*, %"class.base::ObserverList.289" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type { %"class.ui::LayerAnimationDelegate", %"class.cc::ContentLayerClient", %"class.cc::TextureLayerClient", i32, %"class.ui::Compositor"*, %"class.ui::Layer"*, %"class.std::__1::vector.222", %"class.std::__1::vector.229", %"class.ui::Layer"*, %"class.base::internal::flat_tree.237", i8, i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.238", i8, i8, i8, i8, %"class.cc::Region", %"class.cc::Region", float, float, float, float, i8, float, %"class.ui::Layer"*, %"class.ui::Layer"*, float, i32, %"class.std::__1::unique_ptr.244", %"class.std::__1::basic_string", %"class.ui::LayerDelegate"*, %"class.base::ObserverList.250", %"class.ui::LayerOwner"*, %class.scoped_refptr.254, %class.scoped_refptr.255, %class.scoped_refptr.256, %class.scoped_refptr.257, %class.scoped_refptr.258, %class.scoped_refptr.259, %class.scoped_refptr.260, %"class.cc::Layer"*, float, %"class.gfx::ImageSkia", %"class.gfx::Rect", %"struct.viz::TransferableResource", %"class.base::OnceCallback", %"class.gfx::Size", i32, i32, float, i32, %"class.base::WeakPtrFactory.285" }
%"class.ui::LayerAnimationDelegate" = type { i32 (...)** }
%"class.cc::ContentLayerClient" = type { i32 (...)** }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%"class.ui::Compositor" = type { %"class.cc::LayerTreeHostClient", %"class.cc::LayerTreeHostSingleThreadClient", %"class.viz::HostFrameSinkClient", %"class.ui::ThroughputTrackerHost", %"class.gfx::Size", %"class.ui::ContextFactory"*, %"class.viz::mojom::DisplayPrivate"*, %"class.viz::mojom::ExternalBeginFrameController"*, %"class.std::__1::unique_ptr.40", %"class.ui::Layer"*, %"class.base::ObserverList", %"class.base::ObserverList.49", i32, i32, float, [4 x i8], %"class.std::__1::unordered_set", i8, i8, %"class.viz::FrameSinkId", %class.scoped_refptr, %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.base::WeakPtr", %class.scoped_refptr.167, %"class.base::TimeTicks", %"class.base::TimeDelta", i8, i8, i8, float, %"class.ui::LayerAnimatorCollection", %class.scoped_refptr.177, %"class.std::__1::unique_ptr.178", %class.SkMatrix44, %"class.gfx::DisplayColorSpaces", i8, i8, %"class.ui::CompositorLockManager", %"class.std::__1::unique_ptr.205", i8, i64, %"class.base::flat_map.211", %"class.base::WeakPtrFactory.221", %"class.base::WeakPtrFactory.221" }
%"class.cc::LayerTreeHostClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSingleThreadClient" = type { i32 (...)** }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.ui::ThroughputTrackerHost" = type { i32 (...)** }
%"class.ui::ContextFactory" = type { i32 (...)** }
%"class.viz::mojom::DisplayPrivate" = type opaque
%"class.viz::mojom::ExternalBeginFrameController" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.ui::PendingBeginFrameArgs"* }
%"struct.ui::PendingBeginFrameArgs" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.46" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.49" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.50", i64, i32, [4 x i8] }>
%"class.base::LinkedList.50" = type { %"class.base::LinkNode.51" }
%"class.base::LinkNode.51" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.53", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.69", [4 x i8] }>
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55", %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { i64 }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { float }
%"class.viz::FrameSinkId" = type { i32, i32 }
%class.scoped_refptr = type { %"class.cc::Layer"* }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.cc::AnimationHost"* }
%"class.cc::AnimationHost" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.cc::LayerTreeHost"* }
%"class.cc::LayerTreeHost" = type { %"class.cc::MutatorHostClient", %"class.cc::MicroBenchmarkController", %"class.base::WeakPtr.415", %class.scoped_refptr.416, %"class.std::__1::unique_ptr.417", i32, %"class.std::__1::unique_ptr.423", %"class.cc::LayerTreeHostClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.435", i32, %"class.std::__1::unique_ptr.441", %"class.cc::SwapPromiseManager", %"class.std::__1::unique_ptr.470", %"class.std::__1::unique_ptr.470", %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeDebugState", i8, i8, i8, i32, i8, i8, i8, %"class.cc::TaskGraphRunner"*, %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"*, i32, %class.scoped_refptr, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.cc::OverscrollBehavior", %"struct.cc::BrowserControlsParams", float, float, float, float, float, float, float, float, float, i8, i8, %"class.gfx::DisplayColorSpaces", i8, %"class.viz::LocalSurfaceId", i8, i32, i32, i32, %"struct.viz::Selection", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", i8, i8, [4 x i32], %"class.std::__1::unique_ptr.485", i8, %"class.cc::PropertyTrees", i8, i8, %"class.gfx::Vector2dF", %class.scoped_refptr.633, %"class.base::flat_map.634", %"class.base::internal::flat_tree.644", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.675", i8, i8, %"class.cc::MutatorHost"*, %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::vector.701", %"class.std::__1::unordered_map.709", %"class.std::__1::vector.733", %"struct.cc::LayerTreeHost::ScrollAnimationState", %"class.std::__1::unique_ptr.742", %"class.base::TimeTicks", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.773", %"class.std::__1::vector.779", %"class.base::flat_map.787", %"class.base::WeakPtrFactory.797" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::MicroBenchmarkController" = type { %"class.cc::LayerTreeHost"*, %"class.std::__1::vector.407", %class.scoped_refptr.167 }
%"class.std::__1::vector.407" = type { %"class.std::__1::__vector_base.408" }
%"class.std::__1::__vector_base.408" = type { %"class.std::__1::unique_ptr.409"*, %"class.std::__1::unique_ptr.409"*, %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::unique_ptr.409" = type opaque
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.std::__1::unique_ptr.409"* }
%"class.base::WeakPtr.415" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.160 }
%class.scoped_refptr.160 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.161", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.161" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.162" }
%class.scoped_refptr.416 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.168" }>
%"class.base::RefCountedThreadSafe.168" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.cc::UkmRecorderFactory"* }
%"class.cc::UkmRecorderFactory" = type opaque
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.cc::UIResourceManager"* }
%"class.cc::UIResourceManager" = type opaque
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.cc::Proxy"* }
%"class.cc::Proxy" = type { i32 (...)** }
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.cc::TaskRunnerProvider"* }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr.167, %class.scoped_refptr.167 }
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.cc::RenderingStatsInstrumentation"* }
%"class.cc::RenderingStatsInstrumentation" = type opaque
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector.447", %"class.std::__1::set.460" }
%"class.std::__1::vector.447" = type { %"class.std::__1::__vector_base.448" }
%"class.std::__1::__vector_base.448" = type { %"class.std::__1::unique_ptr.449"*, %"class.std::__1::unique_ptr.449"*, %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.std::__1::unique_ptr.449"* }
%"class.std::__1::set.460" = type { %"class.std::__1::__tree.461" }
%"class.std::__1::__tree.461" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.462", %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.cc::LayerTreeFrameSink"* }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.473, %class.scoped_refptr.474, %class.scoped_refptr.167, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.475", i64, %"class.base::WeakPtrFactory.481" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type opaque
%class.scoped_refptr.473 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.474 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory.481" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.204 }
%class.scoped_refptr.204 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.cc::TaskGraphRunner" = type opaque
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.491", %"class.base::flat_map.491", %"class.base::flat_map.491", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.491" = type { %"class.base::internal::flat_tree.492" }
%"class.base::internal::flat_tree.492" = type { %"class.std::__1::vector.493" }
%"class.std::__1::vector.493" = type { %"class.std::__1::__vector_base.494" }
%"class.std::__1::__vector_base.494" = type { %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"*, %"class.std::__1::__compressed_pair.496" }
%"struct.std::__1::pair.495" = type opaque
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"struct.std::__1::pair.495"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.508", %"class.std::__1::vector.515", %"class.std::__1::vector.522" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.501", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.501" = type { %"class.std::__1::__vector_base.502" }
%"class.std::__1::__vector_base.502" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.503" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.508" = type { %"class.std::__1::__vector_base.509" }
%"class.std::__1::__vector_base.509" = type { i32*, i32*, %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { i32* }
%"class.std::__1::vector.515" = type { %"class.std::__1::__vector_base.516" }
%"class.std::__1::__vector_base.516" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.517" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.522" = type { %"class.std::__1::__vector_base.523" }
%"class.std::__1::__vector_base.523" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.524" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.529", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.568" }
%"class.cc::PropertyTree.529" = type { i32 (...)**, %"class.std::__1::vector.530", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.530" = type { %"class.std::__1::__vector_base.531" }
%"class.std::__1::__vector_base.531" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.540" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.105", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.89" }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.100" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.93", i32, [4 x i8] }>
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.105" = type { %"class.absl::optional_internal::optional_data.106" }
%"class.absl::optional_internal::optional_data.106" = type { %"class.absl::optional_internal::optional_data_base.107" }
%"class.absl::optional_internal::optional_data_base.107" = type { %"class.absl::optional_internal::optional_data_dtor_base.108" }
%"class.absl::optional_internal::optional_data_dtor_base.108" = type { i8, %union.anon.109 }
%union.anon.109 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.532" }
%"class.base::internal::flat_tree.532" = type { %"class.std::__1::vector.533" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.545" }
%"class.std::__1::__hash_table.545" = type <{ %"class.std::__1::unique_ptr.546", %"class.std::__1::__compressed_pair.556", %"class.std::__1::__compressed_pair.561", %"class.std::__1::__compressed_pair.563", [4 x i8] }>
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548", %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"struct.std::__1::__hash_node_base.549"** }
%"struct.std::__1::__hash_node_base.549" = type { %"struct.std::__1::__hash_node_base.549"* }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.std::__1::__bucket_list_deallocator.551" }
%"class.std::__1::__bucket_list_deallocator.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"struct.std::__1::__hash_node_base.549" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.568" = type { %"class.std::__1::__vector_base.569" }
%"class.std::__1::__vector_base.569" = type { %"class.std::__1::unique_ptr.570"*, %"class.std::__1::unique_ptr.570"*, %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type opaque
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"class.std::__1::unique_ptr.570"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.581" }
%"class.cc::PropertyTree.581" = type { i32 (...)**, %"class.std::__1::vector.582", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.582" = type { %"class.std::__1::__vector_base.583" }
%"class.std::__1::__vector_base.583" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.584" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.589", i32, %"class.base::flat_map.597", %"class.base::flat_map.607", %"class.base::WeakPtr.617" }
%"class.cc::PropertyTree.589" = type { i32 (...)**, %"class.std::__1::vector.590", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.590" = type { %"class.std::__1::__vector_base.591" }
%"class.std::__1::__vector_base.591" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.592" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.597" = type { %"class.base::internal::flat_tree.598" }
%"class.base::internal::flat_tree.598" = type { %"class.std::__1::vector.599" }
%"class.std::__1::vector.599" = type { %"class.std::__1::__vector_base.600" }
%"class.std::__1::__vector_base.600" = type { %"struct.std::__1::pair.601"*, %"struct.std::__1::pair.601"*, %"class.std::__1::__compressed_pair.602" }
%"struct.std::__1::pair.601" = type opaque
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"struct.std::__1::pair.601"* }
%"class.base::flat_map.607" = type { %"class.base::internal::flat_tree.608" }
%"class.base::internal::flat_tree.608" = type { %"class.std::__1::vector.609" }
%"class.std::__1::vector.609" = type { %"class.std::__1::__vector_base.610" }
%"class.std::__1::__vector_base.610" = type { %"struct.std::__1::pair.611"*, %"struct.std::__1::pair.611"*, %"class.std::__1::__compressed_pair.612" }
%"struct.std::__1::pair.611" = type opaque
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"struct.std::__1::pair.611"* }
%"class.base::WeakPtr.617" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.618", %"class.std::__1::vector.625" }
%"class.std::__1::vector.618" = type { %"class.std::__1::__vector_base.619" }
%"class.std::__1::__vector_base.619" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.620" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.625" = type { %"class.std::__1::__vector_base.626" }
%"class.std::__1::__vector_base.626" = type { %"class.std::__1::vector.627"*, %"class.std::__1::vector.627"*, %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::vector.627" = type opaque
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"class.std::__1::vector.627"* }
%"class.gfx::Vector2dF" = type { float, float }
%class.scoped_refptr.633 = type { %"class.cc::HeadsUpDisplayLayer"* }
%"class.cc::HeadsUpDisplayLayer" = type opaque
%"class.base::flat_map.634" = type { %"class.base::internal::flat_tree.635" }
%"class.base::internal::flat_tree.635" = type { %"class.std::__1::vector.636" }
%"class.std::__1::vector.636" = type { %"class.std::__1::__vector_base.637" }
%"class.std::__1::__vector_base.637" = type { %"struct.std::__1::pair.638"*, %"struct.std::__1::pair.638"*, %"class.std::__1::__compressed_pair.639" }
%"struct.std::__1::pair.638" = type opaque
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"struct.std::__1::pair.638"* }
%"class.base::internal::flat_tree.644" = type { %"class.std::__1::vector.645" }
%"class.std::__1::vector.645" = type { %"class.std::__1::__vector_base.646" }
%"class.std::__1::__vector_base.646" = type { %"class.cc::Layer"**, %"class.cc::Layer"**, %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.cc::Layer"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.652" }
%"class.std::__1::__hash_table.652" = type <{ %"class.std::__1::unique_ptr.653", %"class.std::__1::__compressed_pair.663", %"class.std::__1::__compressed_pair.668", %"class.std::__1::__compressed_pair.671", [4 x i8] }>
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655", %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"struct.std::__1::__hash_node_base.656"** }
%"struct.std::__1::__hash_node_base.656" = type { %"struct.std::__1::__hash_node_base.656"* }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.std::__1::__bucket_list_deallocator.658" }
%"class.std::__1::__bucket_list_deallocator.658" = type { %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"struct.std::__1::__hash_node_base.656" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.675" = type { %"class.std::__1::__hash_table.676" }
%"class.std::__1::__hash_table.676" = type <{ %"class.std::__1::unique_ptr.677", %"class.std::__1::__compressed_pair.687", %"class.std::__1::__compressed_pair.692", %"class.std::__1::__compressed_pair.695", [4 x i8] }>
%"class.std::__1::unique_ptr.677" = type { %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679", %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"struct.std::__1::__hash_node_base.680"** }
%"struct.std::__1::__hash_node_base.680" = type { %"struct.std::__1::__hash_node_base.680"* }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.std::__1::__bucket_list_deallocator.682" }
%"class.std::__1::__bucket_list_deallocator.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"struct.std::__1::__hash_node_base.680" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::vector.701" = type { %"class.std::__1::__vector_base.702" }
%"class.std::__1::__vector_base.702" = type { %"struct.std::__1::pair.703"*, %"struct.std::__1::pair.703"*, %"class.std::__1::__compressed_pair.704" }
%"struct.std::__1::pair.703" = type opaque
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"struct.std::__1::pair.703"* }
%"class.std::__1::unordered_map.709" = type { %"class.std::__1::__hash_table.710" }
%"class.std::__1::__hash_table.710" = type <{ %"class.std::__1::unique_ptr.711", %"class.std::__1::__compressed_pair.721", %"class.std::__1::__compressed_pair.726", %"class.std::__1::__compressed_pair.729", [4 x i8] }>
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713", %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"struct.std::__1::__hash_node_base.714"** }
%"struct.std::__1::__hash_node_base.714" = type { %"struct.std::__1::__hash_node_base.714"* }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.std::__1::__bucket_list_deallocator.716" }
%"class.std::__1::__bucket_list_deallocator.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"struct.std::__1::__hash_node_base.714" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.733" = type { %"class.std::__1::__vector_base.734" }
%"class.std::__1::__vector_base.734" = type { %"class.base::OnceCallback.735"*, %"class.base::OnceCallback.735"*, %"class.std::__1::__compressed_pair.736" }
%"class.base::OnceCallback.735" = type opaque
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.base::OnceCallback.735"* }
%"struct.cc::LayerTreeHost::ScrollAnimationState" = type { i8, %"class.base::OnceCallback.741" }
%"class.base::OnceCallback.741" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.110 }
%class.scoped_refptr.110 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"struct.cc::BeginMainFrameMetrics"* }
%"struct.cc::BeginMainFrameMetrics" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.748", %"class.std::__1::vector.755" }
%"class.std::__1::vector.748" = type { %"class.std::__1::__vector_base.749" }
%"class.std::__1::__vector_base.749" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.750" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::vector.755" = type { %"class.std::__1::__vector_base.756" }
%"class.std::__1::__vector_base.756" = type { %"class.std::__1::unique_ptr.757"*, %"class.std::__1::unique_ptr.757"*, %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.760", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.760" = type { %"class.absl::optional_internal::optional_data.761" }
%"class.absl::optional_internal::optional_data.761" = type { %"class.absl::optional_internal::optional_data_base.762" }
%"class.absl::optional_internal::optional_data_base.762" = type { %"class.absl::optional_internal::optional_data_dtor_base.763" }
%"class.absl::optional_internal::optional_data_dtor_base.763" = type { i8, %union.anon.764 }
%union.anon.764 = type { i32 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.std::__1::unique_ptr.757"* }
%"class.std::__1::unique_ptr.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.779" = type { %"class.std::__1::__vector_base.780" }
%"class.std::__1::__vector_base.780" = type { %"class.std::__1::unique_ptr.781"*, %"class.std::__1::unique_ptr.781"*, %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::unique_ptr.781" = type opaque
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.std::__1::unique_ptr.781"* }
%"class.base::flat_map.787" = type { %"class.base::internal::flat_tree.788" }
%"class.base::internal::flat_tree.788" = type { %"class.std::__1::vector.789" }
%"class.std::__1::vector.789" = type { %"class.std::__1::__vector_base.790" }
%"class.std::__1::__vector_base.790" = type { %"struct.std::__1::pair.791"*, %"struct.std::__1::pair.791"*, %"class.std::__1::__compressed_pair.792" }
%"struct.std::__1::pair.791" = type opaque
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.793" }
%"struct.std::__1::__compressed_pair_elem.793" = type { %"struct.std::__1::pair.791"* }
%"class.base::WeakPtrFactory.797" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.167 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.ui::LayerAnimatorCollection" = type { %"class.ui::CompositorAnimationObserver", %"class.ui::Compositor"*, %"class.base::TimeTicks", %"class.std::__1::set" }
%"class.ui::CompositorAnimationObserver" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%class.scoped_refptr.177 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.ui::ScopedAnimationDurationScaleMode"* }
%"class.ui::ScopedAnimationDurationScaleMode" = type opaque
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.184" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.184" = type { %"class.absl::optional_internal::optional_data.185" }
%"class.absl::optional_internal::optional_data.185" = type { %"class.absl::optional_internal::optional_data_base.186" }
%"class.absl::optional_internal::optional_data_base.186" = type { %"class.absl::optional_internal::optional_data_dtor_base.187" }
%"class.absl::optional_internal::optional_data_dtor_base.187" = type { i8, %union.anon.188 }
%union.anon.188 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.ui::CompositorLockManager" = type { %class.scoped_refptr.167, %"class.base::TimeTicks", i8, %"class.std::__1::vector.189", %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory" }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"**, %"class.std::__1::__compressed_pair.199" }
%"class.ui::CompositorLock" = type { %"class.ui::CompositorLockClient"*, %"class.std::__1::unique_ptr.191", %"class.base::WeakPtr.198" }
%"class.ui::CompositorLockClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.cc::ScopedDeferMainFrameUpdate"* }
%"class.cc::ScopedDeferMainFrameUpdate" = type { %"class.base::WeakPtr.194" }
%"class.base::WeakPtr.194" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.198" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.ui::CompositorLock"** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.ui::ScrollInputHandler"* }
%"class.ui::ScrollInputHandler" = type opaque
%"class.base::flat_map.211" = type { %"class.base::internal::flat_tree.212" }
%"class.base::internal::flat_tree.212" = type { %"class.std::__1::vector.213" }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.std::__1::pair.215"*, %"struct.std::__1::pair.215"*, %"class.std::__1::__compressed_pair.216" }
%"struct.std::__1::pair.215" = type opaque
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.std::__1::pair.215"* }
%"class.base::WeakPtrFactory.221" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.229" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"*, %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::unique_ptr.231" = type opaque
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.std::__1::unique_ptr.231"* }
%"class.base::internal::flat_tree.237" = type { %"class.std::__1::vector.222" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.ui::Layer::SubpixelPositionOffsetCache"* }
%"class.ui::Layer::SubpixelPositionOffsetCache" = type opaque
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.std::__1::vector.93"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.127 }
%union.anon.127 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ObserverList.250" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.251", i64, i32, [4 x i8] }>
%"class.base::LinkedList.251" = type { %"class.base::LinkNode.252" }
%"class.base::LinkNode.252" = type { %"class.base::internal::LinkNodeBase" }
%class.scoped_refptr.254 = type { %"class.ui::LayerAnimator"* }
%"class.ui::LayerAnimator" = type opaque
%class.scoped_refptr.255 = type { %"class.cc::PictureLayer"* }
%"class.cc::PictureLayer" = type opaque
%class.scoped_refptr.256 = type { %"class.cc::MirrorLayer"* }
%"class.cc::MirrorLayer" = type opaque
%class.scoped_refptr.257 = type { %"class.cc::NinePatchLayer"* }
%"class.cc::NinePatchLayer" = type opaque
%class.scoped_refptr.258 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%class.scoped_refptr.259 = type { %"class.cc::SolidColorLayer"* }
%"class.cc::SolidColorLayer" = type opaque
%class.scoped_refptr.260 = type { %"class.cc::SurfaceLayer"* }
%"class.cc::SurfaceLayer" = type <{ %"class.cc::Layer", %"class.base::RepeatingCallback.261", i8, [7 x i8], %"class.viz::SurfaceRange", %"class.absl::optional.267", i8, i8, i8, i8, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.86", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.122" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.72", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %class.scoped_refptr* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.79" }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.81" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.105", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.111" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { %"class.std::__1::unique_ptr.113"*, %"class.std::__1::unique_ptr.113"*, %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::unique_ptr.113" = type opaque
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.std::__1::unique_ptr.113"* }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.131", %"class.std::__1::vector.131", %"class.std::__1::vector.138" }
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { i8**, i8**, %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { i8** }
%"class.std::__1::vector.138" = type { %"class.std::__1::__vector_base.139" }
%"class.std::__1::__vector_base.139" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.140" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.base::RepeatingCallback.261" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.262", %"class.viz::SurfaceId" }
%"class.absl::optional.262" = type { %"class.absl::optional_internal::optional_data.263" }
%"class.absl::optional_internal::optional_data.263" = type { %"class.absl::optional_internal::optional_data_base.264" }
%"class.absl::optional_internal::optional_data_base.264" = type { %"class.absl::optional_internal::optional_data_dtor_base.265" }
%"class.absl::optional_internal::optional_data_dtor_base.265" = type { i8, %union.anon.266 }
%union.anon.266 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.absl::optional.267" = type { %"class.absl::optional_internal::optional_data.268" }
%"class.absl::optional_internal::optional_data.268" = type { %"class.absl::optional_internal::optional_data_base.269" }
%"class.absl::optional_internal::optional_data_base.269" = type { %"class.absl::optional_internal::optional_data_dtor_base.270" }
%"class.absl::optional_internal::optional_data_dtor_base.270" = type { i8, %union.anon.271 }
%union.anon.271 = type { i32 }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.272 }
%class.scoped_refptr.272 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"struct.viz::TransferableResource" = type { %"class.util::IdType", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.275", i8, i32, i8, [7 x i8], %"class.absl::optional.280" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.273", i64 }
%"class.util::IdType.273" = type { %"class.base::StrongAlias.274" }
%"class.base::StrongAlias.274" = type { i64 }
%"class.absl::optional.275" = type { %"class.absl::optional_internal::optional_data.276" }
%"class.absl::optional_internal::optional_data.276" = type { %"class.absl::optional_internal::optional_data_base.277" }
%"class.absl::optional_internal::optional_data_base.277" = type { %"class.absl::optional_internal::optional_data_dtor_base.278" }
%"class.absl::optional_internal::optional_data_dtor_base.278" = type { i8, %union.anon.279 }
%union.anon.279 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.280" = type { %"class.absl::optional_internal::optional_data.281" }
%"class.absl::optional_internal::optional_data.281" = type { %"class.absl::optional_internal::optional_data_base.282" }
%"class.absl::optional_internal::optional_data_base.282" = type { %"class.absl::optional_internal::optional_data_dtor_base.283" }
%"class.absl::optional_internal::optional_data_dtor_base.283" = type { i8, [7 x i8], %union.anon.284 }
%union.anon.284 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.285" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ObserverList.289" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.290", i64, i32, [4 x i8] }>
%"class.base::LinkedList.290" = type { %"class.base::LinkNode.291" }
%"class.base::LinkNode.291" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.293", %"class.std::__1::vector.300", %"class.ui::EventHandler"* }
%"class.std::__1::vector.293" = type { %"class.std::__1::__vector_base.294" }
%"class.std::__1::__vector_base.294" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.295" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.300" = type { %"class.std::__1::__vector_base.301" }
%"class.std::__1::__vector_base.301" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.307" }
%"class.std::__1::__tree.307" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.308", %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.316" }
%"class.std::__1::map.316" = type { %"class.std::__1::__tree.317" }
%"class.std::__1::__tree.317" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.318", %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.views::View"** }
%"class.absl::optional.332" = type { %"class.absl::optional_internal::optional_data.333" }
%"class.absl::optional_internal::optional_data.333" = type { %"class.absl::optional_internal::optional_data_base.334" }
%"class.absl::optional_internal::optional_data_base.334" = type { %"class.absl::optional_internal::optional_data_dtor_base.335" }
%"class.absl::optional_internal::optional_data_dtor_base.335" = type { i8, %union.anon.336 }
%union.anon.336 = type { %"class.gfx::Size" }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.std::__1::vector.325"* }
%class.SkPath = type <{ %class.sk_sp.343, i32, %"struct.std::__1::atomic.162", %"struct.std::__1::atomic.162", i8, i8 }>
%class.sk_sp.343 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.344, %class.SkTDArray.345, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.344 = type { i8*, i32, i32 }
%class.SkTDArray.345 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.346 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.346 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.347", [3 x i8] }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.357" = type { %"class.absl::optional_internal::optional_data.358" }
%"class.absl::optional_internal::optional_data.358" = type { %"class.absl::optional_internal::optional_data_base.359" }
%"class.absl::optional_internal::optional_data_base.359" = type { %"class.absl::optional_internal::optional_data_dtor_base.360" }
%"class.absl::optional_internal::optional_data_dtor_base.360" = type { i8, %union.anon.361 }
%union.anon.361 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.views::Border"* }
%"class.ui::PaintCache" = type <{ %class.sk_sp.368, float, [4 x i8] }>
%"class.ui::NativeTheme" = type opaque
%"class.absl::optional.373" = type { %"class.absl::optional_internal::optional_data.374" }
%"class.absl::optional_internal::optional_data.374" = type { %"class.absl::optional_internal::optional_data_base.375" }
%"class.absl::optional_internal::optional_data_base.375" = type { %"class.absl::optional_internal::optional_data_dtor_base.376" }
%"class.absl::optional_internal::optional_data_dtor_base.376" = type { i8, %union.anon.377 }
%union.anon.377 = type { i8 }
%"class.std::__1::vector.222" = type { %"class.std::__1::__vector_base.223" }
%"class.std::__1::__vector_base.223" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type opaque
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.std::__1::vector.387"* }
%"class.std::__1::vector.387" = type opaque
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.views::ViewTargeterDelegate" = type opaque
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.403" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.404", i64, i32, [4 x i8] }>
%"class.base::LinkedList.404" = type { %"class.base::LinkNode.405" }
%"class.base::LinkNode.405" = type { %"class.base::internal::LinkNodeBase" }
%"class.gfx::Canvas" = type { i32 (...)**, float, %"class.absl::optional.798", %"class.absl::optional.807", %"class.cc::PaintCanvas"* }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %class.SkBitmap }
%class.SkBitmap = type { %class.sk_sp.803, %class.SkPixmap, %class.sk_sp.806 }
%class.sk_sp.803 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.806 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.absl::optional.807" = type { %"class.absl::optional_internal::optional_data.808" }
%"class.absl::optional_internal::optional_data.808" = type { %"class.absl::optional_internal::optional_data_base.809" }
%"class.absl::optional_internal::optional_data_base.809" = type { %"class.absl::optional_internal::optional_data_dtor_base.810" }
%"class.absl::optional_internal::optional_data_dtor_base.810" = type { i8, [7 x i8], %union.anon.811 }
%union.anon.811 = type { %"class.cc::SkiaPaintCanvas" }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.826", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.812, [384 x i64], %class.sk_sp.813, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.814", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.820" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.812 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.813 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.814" = type { %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.820" = type { %"class.std::__1::__compressed_pair.821" }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::unique_ptr.826" = type { %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.views::(anonymous namespace)::SolidSidedBorder" = type { %"class.views::Border.base", %"class.gfx::Insets", [4 x i8] }
%"class.gfx::ScopedCanvas" = type { i32 (...)**, %"class.gfx::Canvas"* }
%"class.gfx::InsetsF" = type { float, float, float, float }
%"class.views::(anonymous namespace)::EmptyBorder" = type { %"class.views::Border.base", %"class.gfx::Insets", [4 x i8] }
%"class.views::(anonymous namespace)::RoundedRectBorder" = type { %"class.views::Border.base", i32, i32, %"class.gfx::Insets", [4 x i8] }
%"class.views::(anonymous namespace)::ExtraInsetsBorder" = type { %"class.views::Border.base", %"class.std::__1::unique_ptr", %"class.gfx::Insets" }

$_ZN3gfx6InsetspLERKS0_ = comdat any

@_ZTVN5views6BorderE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::Border"*)* @_ZN5views6BorderD2Ev to i8*), i8* bitcast (void (%"class.views::Border"*)* @_ZN5views6BorderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5views12_GLOBAL__N_113BorderPainterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::(anonymous namespace)::BorderPainter"*)* @_ZN5views12_GLOBAL__N_113BorderPainterD2Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::BorderPainter"*)* @_ZN5views12_GLOBAL__N_113BorderPainterD0Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::BorderPainter"*, %"class.views::View"*, %"class.gfx::Canvas"*)* @_ZN5views12_GLOBAL__N_113BorderPainter5PaintERKNS_4ViewEPN3gfx6CanvasE to i8*), i8* bitcast ({ i64, i64 } (%"class.views::(anonymous namespace)::BorderPainter"*)* @_ZNK5views12_GLOBAL__N_113BorderPainter9GetInsetsEv to i8*), i8* bitcast (i64 (%"class.views::(anonymous namespace)::BorderPainter"*)* @_ZNK5views12_GLOBAL__N_113BorderPainter14GetMinimumSizeEv to i8*)] }, align 8
@_ZTVN5views12_GLOBAL__N_116SolidSidedBorderE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::Border"*)* @_ZN5views6BorderD2Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::SolidSidedBorder"*)* @_ZN5views12_GLOBAL__N_116SolidSidedBorderD0Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::SolidSidedBorder"*, %"class.views::View"*, %"class.gfx::Canvas"*)* @_ZN5views12_GLOBAL__N_116SolidSidedBorder5PaintERKNS_4ViewEPN3gfx6CanvasE to i8*), i8* bitcast ({ i64, i64 } (%"class.views::(anonymous namespace)::SolidSidedBorder"*)* @_ZNK5views12_GLOBAL__N_116SolidSidedBorder9GetInsetsEv to i8*), i8* bitcast (i64 (%"class.views::(anonymous namespace)::SolidSidedBorder"*)* @_ZNK5views12_GLOBAL__N_116SolidSidedBorder14GetMinimumSizeEv to i8*)] }, align 8
@_ZTVN5views12_GLOBAL__N_111EmptyBorderE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::Border"*)* @_ZN5views6BorderD2Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::EmptyBorder"*)* @_ZN5views12_GLOBAL__N_111EmptyBorderD0Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::EmptyBorder"*, %"class.views::View"*, %"class.gfx::Canvas"*)* @_ZN5views12_GLOBAL__N_111EmptyBorder5PaintERKNS_4ViewEPN3gfx6CanvasE to i8*), i8* bitcast ({ i64, i64 } (%"class.views::(anonymous namespace)::EmptyBorder"*)* @_ZNK5views12_GLOBAL__N_111EmptyBorder9GetInsetsEv to i8*), i8* bitcast (i64 (%"class.views::(anonymous namespace)::EmptyBorder"*)* @_ZNK5views12_GLOBAL__N_111EmptyBorder14GetMinimumSizeEv to i8*)] }, align 8
@_ZTVN5views12_GLOBAL__N_117RoundedRectBorderE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::Border"*)* @_ZN5views6BorderD2Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::RoundedRectBorder"*)* @_ZN5views12_GLOBAL__N_117RoundedRectBorderD0Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::RoundedRectBorder"*, %"class.views::View"*, %"class.gfx::Canvas"*)* @_ZN5views12_GLOBAL__N_117RoundedRectBorder5PaintERKNS_4ViewEPN3gfx6CanvasE to i8*), i8* bitcast ({ i64, i64 } (%"class.views::(anonymous namespace)::RoundedRectBorder"*)* @_ZNK5views12_GLOBAL__N_117RoundedRectBorder9GetInsetsEv to i8*), i8* bitcast (i64 (%"class.views::(anonymous namespace)::RoundedRectBorder"*)* @_ZNK5views12_GLOBAL__N_117RoundedRectBorder14GetMinimumSizeEv to i8*)] }, align 8
@__const._ZN5views12_GLOBAL__N_117RoundedRectBorder5PaintERKNS_4ViewEPN3gfx6CanvasE.flags = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.836 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.837 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.861 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.862 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.863 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.864 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN5views12_GLOBAL__N_117ExtraInsetsBorderE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::(anonymous namespace)::ExtraInsetsBorder"*)* @_ZN5views12_GLOBAL__N_117ExtraInsetsBorderD2Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::ExtraInsetsBorder"*)* @_ZN5views12_GLOBAL__N_117ExtraInsetsBorderD0Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::ExtraInsetsBorder"*, %"class.views::View"*, %"class.gfx::Canvas"*)* @_ZN5views12_GLOBAL__N_117ExtraInsetsBorder5PaintERKNS_4ViewEPN3gfx6CanvasE to i8*), i8* bitcast ({ i64, i64 } (%"class.views::(anonymous namespace)::ExtraInsetsBorder"*)* @_ZNK5views12_GLOBAL__N_117ExtraInsetsBorder9GetInsetsEv to i8*), i8* bitcast (i64 (%"class.views::(anonymous namespace)::ExtraInsetsBorder"*)* @_ZNK5views12_GLOBAL__N_117ExtraInsetsBorder14GetMinimumSizeEv to i8*)] }, align 8

@_ZN5views6BorderD1Ev = hidden unnamed_addr alias void (%"class.views::Border"*), void (%"class.views::Border"*)* @_ZN5views6BorderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views6BorderC2Ev(%"class.views::Border"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::Border", %"class.views::Border"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views6BorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::Border", %"class.views::Border"* %0, i64 0, i32 1
  store i32 -65536, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views6BorderC2Ej(%"class.views::Border"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::Border", %"class.views::Border"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views6BorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.views::Border", %"class.views::Border"* %0, i64 0, i32 1
  store i32 %1, i32* %4, align 8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5views6BorderD0Ev(%"class.views::Border"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.views::Border"* @_ZN5views10NullBorderEv() local_unnamed_addr #3 {
  ret %"class.views::Border"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::Border"* @_ZN5views17CreateSolidBorderEij(i32, i32) local_unnamed_addr #4 {
  %3 = icmp sgt i32 %0, 0
  %4 = sub nuw nsw i32 2147483647, %0
  %5 = icmp ult i32 %4, %0
  %6 = and i1 %3, %5
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = icmp slt i32 %0, 0
  %9 = sub nsw i32 -2147483648, %0
  %10 = icmp sgt i32 %9, %0
  %11 = and i1 %8, %10
  %12 = select i1 %11, i32 %9, i32 %0
  br label %13

13:                                               ; preds = %7, %2
  %14 = phi i32 [ %12, %7 ], [ %4, %2 ]
  %15 = tail call i8* @_Znwm(i64 32) #15
  %16 = bitcast i8* %15 to i32 (...)***
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = bitcast i8* %17 to i32*
  store i32 %1, i32* %18, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views12_GLOBAL__N_116SolidSidedBorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 %0, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %15, i64 16
  %22 = bitcast i8* %21 to i32*
  store i32 %0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %15, i64 20
  %24 = bitcast i8* %23 to i32*
  store i32 %14, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %15, i64 24
  %26 = bitcast i8* %25 to i32*
  store i32 %14, i32* %26, align 4
  %27 = bitcast i8* %15 to %"class.views::Border"*
  ret %"class.views::Border"* %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::Border"* @_ZN5views17CreateEmptyBorderERKN3gfx6InsetsE(%"class.gfx::Insets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 {
  %2 = tail call i8* @_Znwm(i64 32) #15
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 -65536, i32* %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views12_GLOBAL__N_111EmptyBorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 12
  %7 = bitcast %"class.gfx::Insets"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 16, i1 false) #16
  %8 = bitcast i8* %2 to %"class.views::Border"*
  ret %"class.views::Border"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.views::Border"* @_ZN5views23CreateRoundedRectBorderEiij(i32, i32, i32) local_unnamed_addr #4 {
  %4 = tail call i8* @_Znwm(i64 40) #15
  %5 = bitcast i8* %4 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 %2, i32* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views12_GLOBAL__N_117RoundedRectBorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 12
  %9 = bitcast i8* %8 to i32*
  store i32 %0, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %4, i64 16
  %11 = bitcast i8* %10 to i32*
  store i32 %1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 20
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 16, i1 false)
  %13 = bitcast i8* %4 to %"class.views::Border"*
  ret %"class.views::Border"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::Border"* @_ZN5views23CreateRoundedRectBorderEiiRKN3gfx6InsetsEj(i32, i32, %"class.gfx::Insets"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #4 {
  %5 = tail call i8* @_Znwm(i64 40) #15
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 %3, i32* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views12_GLOBAL__N_117RoundedRectBorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 12
  %10 = bitcast i8* %9 to i32*
  store i32 %0, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %5, i64 16
  %12 = bitcast i8* %11 to i32*
  store i32 %1, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 20
  %14 = bitcast %"class.gfx::Insets"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 16, i1 false) #16
  %15 = bitcast i8* %5 to %"class.views::Border"*
  ret %"class.views::Border"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.views::Border"* @_ZN5views17CreateEmptyBorderEiiii(i32, i32, i32, i32) local_unnamed_addr #4 {
  %5 = icmp sgt i32 %0, 0
  %6 = icmp sgt i32 %2, 0
  %7 = and i1 %5, %6
  %8 = sub nuw nsw i32 2147483647, %0
  %9 = icmp ult i32 %8, %2
  %10 = and i1 %9, %7
  br i1 %10, label %18, label %11

11:                                               ; preds = %4
  %12 = and i32 %2, %0
  %13 = icmp slt i32 %12, 0
  %14 = sub nsw i32 -2147483648, %0
  %15 = icmp sgt i32 %14, %2
  %16 = and i1 %15, %13
  %17 = select i1 %16, i32 %14, i32 %2
  br label %18

18:                                               ; preds = %11, %4
  %19 = phi i32 [ %17, %11 ], [ %8, %4 ]
  %20 = icmp sgt i32 %1, 0
  %21 = icmp sgt i32 %3, 0
  %22 = and i1 %20, %21
  %23 = sub nuw nsw i32 2147483647, %1
  %24 = icmp ult i32 %23, %3
  %25 = and i1 %24, %22
  br i1 %25, label %33, label %26

26:                                               ; preds = %18
  %27 = and i32 %3, %1
  %28 = icmp slt i32 %27, 0
  %29 = sub nsw i32 -2147483648, %1
  %30 = icmp sgt i32 %29, %3
  %31 = and i1 %30, %28
  %32 = select i1 %31, i32 %29, i32 %3
  br label %33

33:                                               ; preds = %18, %26
  %34 = phi i32 [ %32, %26 ], [ %23, %18 ]
  %35 = tail call i8* @_Znwm(i64 32) #15
  %36 = bitcast i8* %35 to i32 (...)***
  %37 = getelementptr inbounds i8, i8* %35, i64 8
  %38 = bitcast i8* %37 to i32*
  store i32 -65536, i32* %38, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views12_GLOBAL__N_111EmptyBorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %39 = getelementptr inbounds i8, i8* %35, i64 12
  %40 = bitcast i8* %39 to i32*
  store i32 %0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %35, i64 16
  %42 = bitcast i8* %41 to i32*
  store i32 %1, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %35, i64 20
  %44 = bitcast i8* %43 to i32*
  store i32 %19, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %35, i64 24
  %46 = bitcast i8* %45 to i32*
  store i32 %34, i32* %46, align 4
  %47 = bitcast i8* %35 to %"class.views::Border"*
  ret %"class.views::Border"* %47
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::Border"* @_ZN5views22CreateSolidSidedBorderEiiiij(i32, i32, i32, i32, i32) local_unnamed_addr #4 {
  %6 = icmp sgt i32 %0, 0
  %7 = icmp sgt i32 %2, 0
  %8 = and i1 %6, %7
  %9 = sub nuw nsw i32 2147483647, %0
  %10 = icmp ult i32 %9, %2
  %11 = and i1 %10, %8
  br i1 %11, label %19, label %12

12:                                               ; preds = %5
  %13 = and i32 %2, %0
  %14 = icmp slt i32 %13, 0
  %15 = sub nsw i32 -2147483648, %0
  %16 = icmp sgt i32 %15, %2
  %17 = and i1 %16, %14
  %18 = select i1 %17, i32 %15, i32 %2
  br label %19

19:                                               ; preds = %12, %5
  %20 = phi i32 [ %18, %12 ], [ %9, %5 ]
  %21 = icmp sgt i32 %1, 0
  %22 = icmp sgt i32 %3, 0
  %23 = and i1 %21, %22
  %24 = sub nuw nsw i32 2147483647, %1
  %25 = icmp ult i32 %24, %3
  %26 = and i1 %25, %23
  br i1 %26, label %34, label %27

27:                                               ; preds = %19
  %28 = and i32 %3, %1
  %29 = icmp slt i32 %28, 0
  %30 = sub nsw i32 -2147483648, %1
  %31 = icmp sgt i32 %30, %3
  %32 = and i1 %31, %29
  %33 = select i1 %32, i32 %30, i32 %3
  br label %34

34:                                               ; preds = %27, %19
  %35 = phi i32 [ %33, %27 ], [ %24, %19 ]
  %36 = tail call i8* @_Znwm(i64 32) #15
  %37 = bitcast i8* %36 to i32 (...)***
  %38 = getelementptr inbounds i8, i8* %36, i64 8
  %39 = bitcast i8* %38 to i32*
  store i32 %4, i32* %39, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views12_GLOBAL__N_116SolidSidedBorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %40 = getelementptr inbounds i8, i8* %36, i64 12
  %41 = bitcast i8* %40 to i32*
  store i32 %0, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %36, i64 16
  %43 = bitcast i8* %42 to i32*
  store i32 %1, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %36, i64 20
  %45 = bitcast i8* %44 to i32*
  store i32 %20, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %36, i64 24
  %47 = bitcast i8* %46 to i32*
  store i32 %35, i32* %47, align 4
  %48 = bitcast i8* %36 to %"class.views::Border"*
  ret %"class.views::Border"* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::Border"* @_ZN5views18CreatePaddedBorderENSt3__110unique_ptrINS_6BorderENS0_14default_deleteIS2_EEEERKN3gfx6InsetsE(%"class.views::Border"*, %"class.gfx::Insets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 {
  %3 = ptrtoint %"class.views::Border"* %0 to i64
  %4 = tail call i8* @_Znwm(i64 40) #15
  %5 = getelementptr inbounds %"class.views::Border", %"class.views::Border"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = bitcast i8* %4 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %4, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 %6, i32* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views12_GLOBAL__N_117ExtraInsetsBorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 16
  %11 = bitcast i8* %10 to i64*
  store i64 %3, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 24
  %13 = bitcast %"class.gfx::Insets"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 4 %13, i64 16, i1 false) #16
  %14 = bitcast i8* %4 to %"class.views::Border"*
  ret %"class.views::Border"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::Border"* @_ZN5views19CreateBorderPainterENSt3__110unique_ptrINS_7PainterENS0_14default_deleteIS2_EEEERKN3gfx6InsetsE(%"class.views::Painter"*, %"class.gfx::Insets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 {
  %3 = ptrtoint %"class.views::Painter"* %0 to i64
  %4 = tail call i8* @_Znwm(i64 40) #15
  %5 = bitcast i8* %4 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 -65536, i32* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views12_GLOBAL__N_113BorderPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 16
  %9 = bitcast i8* %8 to i64*
  store i64 %3, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 24
  %11 = bitcast %"class.gfx::Insets"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 16, i1 false) #16
  %12 = bitcast i8* %4 to %"class.views::Border"*
  ret %"class.views::Border"* %12
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_113BorderPainterD2Ev(%"class.views::(anonymous namespace)::BorderPainter"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::BorderPainter", %"class.views::(anonymous namespace)::BorderPainter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views12_GLOBAL__N_113BorderPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::(anonymous namespace)::BorderPainter", %"class.views::(anonymous namespace)::BorderPainter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.views::Painter"*, %"class.views::Painter"** %3, align 8
  store %"class.views::Painter"* null, %"class.views::Painter"** %3, align 8
  %5 = icmp eq %"class.views::Painter"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.views::Painter"* %4 to void (%"class.views::Painter"*)***
  %8 = load void (%"class.views::Painter"*)**, void (%"class.views::Painter"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.views::Painter"*)*, void (%"class.views::Painter"*)** %8, i64 1
  %10 = load void (%"class.views::Painter"*)*, void (%"class.views::Painter"*)** %9, align 8
  tail call void %10(%"class.views::Painter"* nonnull %4) #16
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_113BorderPainterD0Ev(%"class.views::(anonymous namespace)::BorderPainter"*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::BorderPainter", %"class.views::(anonymous namespace)::BorderPainter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views12_GLOBAL__N_113BorderPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::(anonymous namespace)::BorderPainter", %"class.views::(anonymous namespace)::BorderPainter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.views::Painter"*, %"class.views::Painter"** %3, align 8
  store %"class.views::Painter"* null, %"class.views::Painter"** %3, align 8
  %5 = icmp eq %"class.views::Painter"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.views::Painter"* %4 to void (%"class.views::Painter"*)***
  %8 = load void (%"class.views::Painter"*)**, void (%"class.views::Painter"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.views::Painter"*)*, void (%"class.views::Painter"*)** %8, i64 1
  %10 = load void (%"class.views::Painter"*)*, void (%"class.views::Painter"*)** %9, align 8
  tail call void %10(%"class.views::Painter"* nonnull %4) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.views::(anonymous namespace)::BorderPainter"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_113BorderPainter5PaintERKNS_4ViewEPN3gfx6CanvasE(%"class.views::(anonymous namespace)::BorderPainter"* nocapture readonly, %"class.views::View"* dereferenceable(664), %"class.gfx::Canvas"*) unnamed_addr #4 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %6 = getelementptr inbounds %"class.views::(anonymous namespace)::BorderPainter", %"class.views::(anonymous namespace)::BorderPainter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.views::Painter"*, %"class.views::Painter"** %6, align 8
  %8 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #16
  %9 = tail call { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"* %1) #16
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %11 = extractvalue { i64, i64 } %9, 0
  store i64 %11, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %13 = extractvalue { i64, i64 } %9, 1
  store i64 %13, i64* %12, align 8
  call void @_ZN5views7Painter14PaintPainterAtEPN3gfx6CanvasEPS0_RKNS1_4RectE(%"class.gfx::Canvas"* %2, %"class.views::Painter"* %7, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal { i64, i64 } @_ZNK5views12_GLOBAL__N_113BorderPainter9GetInsetsEv(%"class.views::(anonymous namespace)::BorderPainter"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::BorderPainter", %"class.views::(anonymous namespace)::BorderPainter"* %0, i64 0, i32 2
  %3 = bitcast %"class.gfx::Insets"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.views::(anonymous namespace)::BorderPainter", %"class.views::(anonymous namespace)::BorderPainter"* %0, i64 0, i32 2, i32 2
  %6 = bitcast i32* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %4, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK5views12_GLOBAL__N_113BorderPainter14GetMinimumSizeEv(%"class.views::(anonymous namespace)::BorderPainter"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::BorderPainter", %"class.views::(anonymous namespace)::BorderPainter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.views::Painter"*, %"class.views::Painter"** %2, align 8
  %4 = bitcast %"class.views::Painter"* %3 to i64 (%"class.views::Painter"*)***
  %5 = load i64 (%"class.views::Painter"*)**, i64 (%"class.views::Painter"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.views::Painter"*)*, i64 (%"class.views::Painter"*)** %5, i64 2
  %7 = load i64 (%"class.views::Painter"*)*, i64 (%"class.views::Painter"*)** %6, align 8
  %8 = tail call i64 %7(%"class.views::Painter"* %3) #16
  ret i64 %8
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN5views7Painter14PaintPainterAtEPN3gfx6CanvasEPS0_RKNS1_4RectE(%"class.gfx::Canvas"*, %"class.views::Painter"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #10

declare { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"*) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_116SolidSidedBorderD0Ev(%"class.views::(anonymous namespace)::SolidSidedBorder"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.views::(anonymous namespace)::SolidSidedBorder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_116SolidSidedBorder5PaintERKNS_4ViewEPN3gfx6CanvasE(%"class.views::(anonymous namespace)::SolidSidedBorder"*, %"class.views::View"* dereferenceable(664), %"class.gfx::Canvas"*) unnamed_addr #11 align 2 {
  %4 = alloca %"class.gfx::ScopedCanvas", align 8
  %5 = alloca %"class.gfx::RectF", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %"class.gfx::InsetsF"*
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %"class.gfx::InsetsF"*
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %11 to %struct.SkRect*
  %13 = bitcast %"class.gfx::ScopedCanvas"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #16
  %14 = bitcast %"class.gfx::ScopedCanvas"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  call void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"* nonnull %4, %"class.gfx::Canvas"* %2) #16
  %15 = call float @_ZN3gfx6Canvas21UndoDeviceScaleFactorEv(%"class.gfx::Canvas"* %2) #16
  %16 = bitcast %"class.gfx::RectF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false) #16
  %17 = getelementptr inbounds %"class.views::View", %"class.views::View"* %1, i64 0, i32 2, i32 2
  %18 = load %"class.ui::Layer"*, %"class.ui::Layer"** %17, align 8
  %19 = icmp eq %"class.ui::Layer"* %18, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %3
  %21 = bitcast { i64, i64 }* %6 to %"class.gfx::Rect"*
  %22 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #16
  %23 = call { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"* %1) #16
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %25 = extractvalue { i64, i64 } %23, 0
  store i64 %25, i64* %24, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %27 = extractvalue { i64, i64 } %23, 1
  store i64 %27, i64* %26, align 8
  %28 = load %"class.ui::Layer"*, %"class.ui::Layer"** %17, align 8
  %29 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %28, i64 0, i32 43
  %30 = load float, float* %29, align 8
  %31 = call { <2 x float>, <2 x float> } @_ZN3gfx19ConvertRectToPixelsERKNS_4RectEf(%"class.gfx::Rect"* nonnull dereferenceable(16) %21, float %30) #16
  %32 = extractvalue { <2 x float>, <2 x float> } %31, 0
  %33 = extractvalue { <2 x float>, <2 x float> } %31, 1
  %34 = bitcast %"class.gfx::RectF"* %5 to <2 x float>*
  store <2 x float> %32, <2 x float>* %34, align 8
  %35 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1
  %36 = bitcast %"class.gfx::SizeF"* %35 to <2 x float>*
  store <2 x float> %33, <2 x float>* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #16
  br label %65

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 1
  %40 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 1
  %42 = call { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"* %1) #16
  %43 = extractvalue { i64, i64 } %42, 0
  %44 = trunc i64 %43 to i32
  %45 = lshr i64 %43, 32
  %46 = trunc i64 %45 to i32
  %47 = extractvalue { i64, i64 } %42, 1
  %48 = sitofp i32 %44 to float
  %49 = sitofp i32 %46 to float
  %50 = trunc i64 %47 to i32
  %51 = lshr i64 %47, 32
  %52 = trunc i64 %51 to i32
  %53 = icmp sgt i32 %50, 0
  %54 = select i1 %53, i32 %50, i32 0
  %55 = sitofp i32 %54 to float
  %56 = icmp sgt i32 %52, 0
  %57 = select i1 %56, i32 %52, i32 0
  %58 = sitofp i32 %57 to float
  store float %48, float* %38, align 8
  store float %49, float* %41, align 4
  store float %55, float* %40, align 8
  store float %58, float* %39, align 4
  %59 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0
  %60 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %59, float %15, float %15) #16
  %61 = bitcast %"class.gfx::RectF"* %5 to <2 x float>*
  store <2 x float> %60, <2 x float>* %61, align 8
  %62 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1
  %63 = call <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* dereferenceable(8) %62, float %15, float %15) #16
  %64 = bitcast %"class.gfx::SizeF"* %62 to <2 x float>*
  store <2 x float> %63, <2 x float>* %64, align 8
  br label %65

65:                                               ; preds = %37, %20
  %66 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #16
  %67 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidSidedBorder", %"class.views::(anonymous namespace)::SolidSidedBorder"* %0, i64 0, i32 1
  %68 = call { <2 x float>, <2 x float> } @_ZN3gfx21ConvertInsetsToPixelsERKNS_6InsetsEf(%"class.gfx::Insets"* dereferenceable(16) %67, float %15) #16
  %69 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %70 = extractvalue { <2 x float>, <2 x float> } %68, 0
  store <2 x float> %70, <2 x float>* %69, align 8
  %71 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %72 = extractvalue { <2 x float>, <2 x float> } %68, 1
  store <2 x float> %72, <2 x float>* %71, align 8
  %73 = call { i64, i64 } @_ZN3gfx15ToFlooredInsetsERKNS_7InsetsFE(%"class.gfx::InsetsF"* nonnull dereferenceable(16) %8) #16
  %74 = extractvalue { i64, i64 } %73, 0
  %75 = trunc i64 %74 to i32
  %76 = lshr i64 %74, 32
  %77 = trunc i64 %76 to i32
  %78 = extractvalue { i64, i64 } %73, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #16
  %79 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #16
  %80 = sitofp i32 %75 to float
  %81 = sitofp i32 %77 to float
  %82 = trunc i64 %78 to i32
  %83 = sitofp i32 %82 to float
  %84 = lshr i64 %78, 32
  %85 = trunc i64 %84 to i32
  %86 = sitofp i32 %85 to float
  %87 = insertelement <2 x float> undef, float %80, i32 0
  %88 = insertelement <2 x float> %87, float %81, i32 1
  %89 = insertelement <2 x float> undef, float %83, i32 0
  %90 = insertelement <2 x float> %89, float %86, i32 1
  %91 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> %88, <2 x float>* %91, align 8
  %92 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %90, <2 x float>* %92, align 8
  call void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"* nonnull %5, %"class.gfx::InsetsF"* nonnull dereferenceable(16) %10) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #16
  %93 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %2, i64 0, i32 4
  %94 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %93, align 8
  %95 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #16
  %96 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %5) #16
  %97 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  %98 = extractvalue { <2 x float>, <2 x float> } %96, 0
  store <2 x float> %98, <2 x float>* %97, align 8
  %99 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  %100 = extractvalue { <2 x float>, <2 x float> } %96, 1
  store <2 x float> %100, <2 x float>* %99, align 8
  %101 = bitcast %"class.cc::PaintCanvas"* %94 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)***
  %102 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)** %102, i64 18
  %104 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)** %103, align 8
  call void %104(%"class.cc::PaintCanvas"* %94, %struct.SkRect* nonnull dereferenceable(16) %12, i32 0, i1 zeroext true) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #16
  %105 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidSidedBorder", %"class.views::(anonymous namespace)::SolidSidedBorder"* %0, i64 0, i32 0, i32 1
  %106 = load i32, i32* %105, align 8
  call void @_ZN3gfx6Canvas9DrawColorEj(%"class.gfx::Canvas"* %2, i32 %106) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  call void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal { i64, i64 } @_ZNK5views12_GLOBAL__N_116SolidSidedBorder9GetInsetsEv(%"class.views::(anonymous namespace)::SolidSidedBorder"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidSidedBorder", %"class.views::(anonymous namespace)::SolidSidedBorder"* %0, i64 0, i32 1
  %3 = bitcast %"class.gfx::Insets"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidSidedBorder", %"class.views::(anonymous namespace)::SolidSidedBorder"* %0, i64 0, i32 1, i32 2
  %6 = bitcast i32* %5 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = insertvalue { i64, i64 } undef, i64 %4, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK5views12_GLOBAL__N_116SolidSidedBorder14GetMinimumSizeEv(%"class.views::(anonymous namespace)::SolidSidedBorder"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidSidedBorder", %"class.views::(anonymous namespace)::SolidSidedBorder"* %0, i64 0, i32 1, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidSidedBorder", %"class.views::(anonymous namespace)::SolidSidedBorder"* %0, i64 0, i32 1, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, %3
  %7 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidSidedBorder", %"class.views::(anonymous namespace)::SolidSidedBorder"* %0, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidSidedBorder", %"class.views::(anonymous namespace)::SolidSidedBorder"* %0, i64 0, i32 1, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, %8
  %12 = icmp sgt i32 %6, 0
  %13 = select i1 %12, i32 %6, i32 0
  %14 = icmp sgt i32 %11, 0
  %15 = select i1 %14, i32 %11, i32 0
  %16 = zext i32 %15 to i64
  %17 = shl nuw nsw i64 %16, 32
  %18 = zext i32 %13 to i64
  %19 = or i64 %17, %18
  ret i64 %19
}

declare void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"*, %"class.gfx::Canvas"*) unnamed_addr #10

declare float @_ZN3gfx6Canvas21UndoDeviceScaleFactorEv(%"class.gfx::Canvas"*) local_unnamed_addr #10

declare { <2 x float>, <2 x float> } @_ZN3gfx19ConvertRectToPixelsERKNS_4RectEf(%"class.gfx::Rect"* dereferenceable(16), float) local_unnamed_addr #10

declare { i64, i64 } @_ZN3gfx15ToFlooredInsetsERKNS_7InsetsFE(%"class.gfx::InsetsF"* dereferenceable(16)) local_unnamed_addr #10

declare { <2 x float>, <2 x float> } @_ZN3gfx21ConvertInsetsToPixelsERKNS_6InsetsEf(%"class.gfx::Insets"* dereferenceable(16), float) local_unnamed_addr #10

declare void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"*, %"class.gfx::InsetsF"* dereferenceable(16)) local_unnamed_addr #10

declare { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #10

declare void @_ZN3gfx6Canvas9DrawColorEj(%"class.gfx::Canvas"*, i32) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"*) unnamed_addr #12

declare <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8), float, float) local_unnamed_addr #10

declare <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* dereferenceable(8), float, float) local_unnamed_addr #10

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5views6BorderD2Ev(%"class.views::Border"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_111EmptyBorderD0Ev(%"class.views::(anonymous namespace)::EmptyBorder"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.views::(anonymous namespace)::EmptyBorder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_111EmptyBorder5PaintERKNS_4ViewEPN3gfx6CanvasE(%"class.views::(anonymous namespace)::EmptyBorder"* nocapture, %"class.views::View"* nocapture dereferenceable(664), %"class.gfx::Canvas"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal { i64, i64 } @_ZNK5views12_GLOBAL__N_111EmptyBorder9GetInsetsEv(%"class.views::(anonymous namespace)::EmptyBorder"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::EmptyBorder", %"class.views::(anonymous namespace)::EmptyBorder"* %0, i64 0, i32 1
  %3 = bitcast %"class.gfx::Insets"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = getelementptr inbounds %"class.views::(anonymous namespace)::EmptyBorder", %"class.views::(anonymous namespace)::EmptyBorder"* %0, i64 0, i32 1, i32 2
  %6 = bitcast i32* %5 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = insertvalue { i64, i64 } undef, i64 %4, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZNK5views12_GLOBAL__N_111EmptyBorder14GetMinimumSizeEv(%"class.views::(anonymous namespace)::EmptyBorder"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i64 0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_117RoundedRectBorderD0Ev(%"class.views::(anonymous namespace)::RoundedRectBorder"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.views::(anonymous namespace)::RoundedRectBorder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_117RoundedRectBorder5PaintERKNS_4ViewEPN3gfx6CanvasE(%"class.views::(anonymous namespace)::RoundedRectBorder"* nocapture readonly, %"class.views::View"* dereferenceable(664), %"class.gfx::Canvas"*) unnamed_addr #4 align 2 {
  %4 = alloca %"class.cc::PaintFlags", align 8
  %5 = alloca %"class.gfx::RectF", align 4
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.gfx::InsetsF"*
  %8 = bitcast %"class.cc::PaintFlags"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN5views12_GLOBAL__N_117RoundedRectBorder5PaintERKNS_4ViewEPN3gfx6CanvasE.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %4) #16
  %9 = getelementptr inbounds %"class.views::(anonymous namespace)::RoundedRectBorder", %"class.views::(anonymous namespace)::RoundedRectBorder"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = sitofp i32 %10 to float
  %12 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %4, i64 0, i32 7
  store float %11, float* %12, align 4
  %13 = getelementptr inbounds %"class.views::(anonymous namespace)::RoundedRectBorder", %"class.views::(anonymous namespace)::RoundedRectBorder"* %0, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %4, i64 0, i32 6
  store i32 %14, i32* %15, align 8
  %16 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %4, i64 0, i32 10
  %17 = bitcast %union.anon.864* %16 to i16*
  %18 = load i16, i16* %17, align 8
  %19 = and i16 %18, -194
  %20 = or i16 %19, 65
  store i16 %20, i16* %17, align 8
  %21 = fmul float %11, 5.000000e-01
  %22 = bitcast %"class.gfx::RectF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #16
  %23 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 1
  %27 = call { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"* %1) #16
  %28 = extractvalue { i64, i64 } %27, 0
  %29 = trunc i64 %28 to i32
  %30 = lshr i64 %28, 32
  %31 = trunc i64 %30 to i32
  %32 = extractvalue { i64, i64 } %27, 1
  %33 = sitofp i32 %29 to float
  %34 = sitofp i32 %31 to float
  %35 = trunc i64 %32 to i32
  %36 = lshr i64 %32, 32
  %37 = trunc i64 %36 to i32
  store float %33, float* %23, align 4
  store float %34, float* %24, align 4
  %38 = icmp sgt i32 %35, 0
  %39 = select i1 %38, i32 %35, i32 0
  %40 = sitofp i32 %39 to float
  store float %40, float* %25, align 4
  %41 = icmp sgt i32 %37, 0
  %42 = select i1 %41, i32 %37, i32 0
  %43 = sitofp i32 %42 to float
  store float %43, float* %26, align 4
  %44 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #16
  %45 = getelementptr inbounds %"class.views::(anonymous namespace)::RoundedRectBorder", %"class.views::(anonymous namespace)::RoundedRectBorder"* %0, i64 0, i32 3, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = sitofp i32 %46 to float
  %48 = getelementptr inbounds %"class.views::(anonymous namespace)::RoundedRectBorder", %"class.views::(anonymous namespace)::RoundedRectBorder"* %0, i64 0, i32 3, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = sitofp i32 %49 to float
  %51 = getelementptr inbounds %"class.views::(anonymous namespace)::RoundedRectBorder", %"class.views::(anonymous namespace)::RoundedRectBorder"* %0, i64 0, i32 3, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = sitofp i32 %52 to float
  %54 = getelementptr inbounds %"class.views::(anonymous namespace)::RoundedRectBorder", %"class.views::(anonymous namespace)::RoundedRectBorder"* %0, i64 0, i32 3, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = sitofp i32 %55 to float
  %57 = insertelement <2 x float> undef, float %47, i32 0
  %58 = insertelement <2 x float> %57, float %50, i32 1
  %59 = insertelement <2 x float> undef, float %53, i32 0
  %60 = insertelement <2 x float> %59, float %56, i32 1
  %61 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %58, <2 x float>* %61, align 8
  %62 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %60, <2 x float>* %62, align 8
  call void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"* nonnull %5, %"class.gfx::InsetsF"* nonnull dereferenceable(16) %7) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #16
  call void @_ZN3gfx5RectF5InsetEffff(%"class.gfx::RectF"* nonnull %5, float %21, float %21, float %21, float %21) #16
  %63 = getelementptr inbounds %"class.views::(anonymous namespace)::RoundedRectBorder", %"class.views::(anonymous namespace)::RoundedRectBorder"* %0, i64 0, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = sitofp i32 %64 to float
  call void @_ZN3gfx6Canvas13DrawRoundRectERKNS_5RectFEfRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %2, %"class.gfx::RectF"* nonnull dereferenceable(16) %5, float %65, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #16
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZNK5views12_GLOBAL__N_117RoundedRectBorder9GetInsetsEv(%"class.views::(anonymous namespace)::RoundedRectBorder"*) unnamed_addr #4 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds %"class.views::(anonymous namespace)::RoundedRectBorder", %"class.views::(anonymous namespace)::RoundedRectBorder"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  %6 = sub nuw nsw i32 2147483647, %4
  %7 = icmp ult i32 %6, %4
  %8 = and i1 %5, %7
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = icmp slt i32 %4, 0
  %11 = sub nsw i32 -2147483648, %4
  %12 = icmp sgt i32 %11, %4
  %13 = and i1 %10, %12
  %14 = select i1 %13, i32 %11, i32 %4
  br label %15

15:                                               ; preds = %1, %9
  %16 = phi i32 [ %14, %9 ], [ %6, %1 ]
  %17 = getelementptr inbounds %"class.views::(anonymous namespace)::RoundedRectBorder", %"class.views::(anonymous namespace)::RoundedRectBorder"* %0, i64 0, i32 3
  %18 = zext i32 %4 to i64
  %19 = shl nuw i64 %18, 32
  %20 = or i64 %19, %18
  %21 = zext i32 %16 to i64
  %22 = shl nuw i64 %21, 32
  %23 = or i64 %22, %21
  %24 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24)
  %25 = bitcast { i64, i64 }* %2 to %"class.gfx::Insets"*
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 %20, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  store i64 %23, i64* %27, align 8
  call void @_ZN3gfx6InsetspLERKS0_(%"class.gfx::Insets"* nonnull %25, %"class.gfx::Insets"* dereferenceable(16) %17) #16
  %28 = load i64, i64* %26, align 8
  %29 = load i64, i64* %27, align 8
  %30 = insertvalue { i64, i64 } undef, i64 %28, 0
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24)
  ret { i64, i64 } %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK5views12_GLOBAL__N_117RoundedRectBorder14GetMinimumSizeEv(%"class.views::(anonymous namespace)::RoundedRectBorder"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::RoundedRectBorder", %"class.views::(anonymous namespace)::RoundedRectBorder"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = shl nsw i32 %3, 1
  %5 = icmp sgt i32 %4, 0
  %6 = select i1 %5, i32 %4, i32 0
  %7 = zext i32 %6 to i64
  %8 = shl nuw nsw i64 %7, 32
  %9 = or i64 %8, %7
  ret i64 %9
}

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #10

declare void @_ZN3gfx6Canvas13DrawRoundRectERKNS_5RectFEfRKN2cc10PaintFlagsE(%"class.gfx::Canvas"*, %"class.gfx::RectF"* dereferenceable(16), float, %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #12

declare void @_ZN3gfx5RectF5InsetEffff(%"class.gfx::RectF"*, float, float, float, float) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx6InsetspLERKS0_(%"class.gfx::Insets"*, %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  %8 = select i1 %7, i32 -2147483648, i32 2147483647
  %9 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 %6) #16
  %10 = extractvalue { i32, i1 } %9, 1
  %11 = extractvalue { i32, i1 } %9, 0
  %12 = select i1 %10, i32 %8, i32 %11, !prof !2
  store i32 %12, i32* %3, align 4
  %13 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %16) #16
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !2
  store i32 %22, i32* %13, align 4
  %23 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 %26) #16
  %30 = extractvalue { i32, i1 } %29, 1
  %31 = extractvalue { i32, i1 } %29, 0
  %32 = select i1 %30, i32 %28, i32 %31, !prof !2
  %33 = icmp sgt i32 %12, 0
  %34 = icmp sgt i32 %32, 0
  %35 = and i1 %33, %34
  %36 = sub nuw nsw i32 2147483647, %12
  %37 = icmp ult i32 %36, %32
  %38 = and i1 %37, %35
  br i1 %38, label %46, label %39

39:                                               ; preds = %2
  %40 = and i32 %32, %12
  %41 = icmp slt i32 %40, 0
  %42 = sub nsw i32 -2147483648, %12
  %43 = icmp sgt i32 %42, %32
  %44 = and i1 %43, %41
  %45 = select i1 %44, i32 %42, i32 %32
  br label %46

46:                                               ; preds = %2, %39
  %47 = phi i32 [ %45, %39 ], [ %36, %2 ]
  store i32 %47, i32* %23, align 4
  %48 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %51, 0
  %53 = select i1 %52, i32 -2147483648, i32 2147483647
  %54 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 %51) #16
  %55 = extractvalue { i32, i1 } %54, 1
  %56 = extractvalue { i32, i1 } %54, 0
  %57 = select i1 %55, i32 %53, i32 %56, !prof !2
  %58 = icmp sgt i32 %22, 0
  %59 = icmp sgt i32 %57, 0
  %60 = and i1 %58, %59
  %61 = sub nuw nsw i32 2147483647, %22
  %62 = icmp ult i32 %61, %57
  %63 = and i1 %62, %60
  br i1 %63, label %71, label %64

64:                                               ; preds = %46
  %65 = and i32 %57, %22
  %66 = icmp slt i32 %65, 0
  %67 = sub nsw i32 -2147483648, %22
  %68 = icmp sgt i32 %67, %57
  %69 = and i1 %68, %66
  %70 = select i1 %69, i32 %67, i32 %57
  br label %71

71:                                               ; preds = %46, %64
  %72 = phi i32 [ %70, %64 ], [ %61, %46 ]
  store i32 %72, i32* %48, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #13

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_117ExtraInsetsBorderD2Ev(%"class.views::(anonymous namespace)::ExtraInsetsBorder"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::ExtraInsetsBorder", %"class.views::(anonymous namespace)::ExtraInsetsBorder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views12_GLOBAL__N_117ExtraInsetsBorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::(anonymous namespace)::ExtraInsetsBorder", %"class.views::(anonymous namespace)::ExtraInsetsBorder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.views::Border"*, %"class.views::Border"** %3, align 8
  store %"class.views::Border"* null, %"class.views::Border"** %3, align 8
  %5 = icmp eq %"class.views::Border"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.views::Border"* %4 to void (%"class.views::Border"*)***
  %8 = load void (%"class.views::Border"*)**, void (%"class.views::Border"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.views::Border"*)*, void (%"class.views::Border"*)** %8, i64 1
  %10 = load void (%"class.views::Border"*)*, void (%"class.views::Border"*)** %9, align 8
  tail call void %10(%"class.views::Border"* nonnull %4) #16
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_117ExtraInsetsBorderD0Ev(%"class.views::(anonymous namespace)::ExtraInsetsBorder"*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::ExtraInsetsBorder", %"class.views::(anonymous namespace)::ExtraInsetsBorder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views12_GLOBAL__N_117ExtraInsetsBorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::(anonymous namespace)::ExtraInsetsBorder", %"class.views::(anonymous namespace)::ExtraInsetsBorder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.views::Border"*, %"class.views::Border"** %3, align 8
  store %"class.views::Border"* null, %"class.views::Border"** %3, align 8
  %5 = icmp eq %"class.views::Border"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.views::Border"* %4 to void (%"class.views::Border"*)***
  %8 = load void (%"class.views::Border"*)**, void (%"class.views::Border"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.views::Border"*)*, void (%"class.views::Border"*)** %8, i64 1
  %10 = load void (%"class.views::Border"*)*, void (%"class.views::Border"*)** %9, align 8
  tail call void %10(%"class.views::Border"* nonnull %4) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.views::(anonymous namespace)::ExtraInsetsBorder"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_117ExtraInsetsBorder5PaintERKNS_4ViewEPN3gfx6CanvasE(%"class.views::(anonymous namespace)::ExtraInsetsBorder"* nocapture readonly, %"class.views::View"* dereferenceable(664), %"class.gfx::Canvas"*) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.views::(anonymous namespace)::ExtraInsetsBorder", %"class.views::(anonymous namespace)::ExtraInsetsBorder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.views::Border"*, %"class.views::Border"** %4, align 8
  %6 = bitcast %"class.views::Border"* %5 to void (%"class.views::Border"*, %"class.views::View"*, %"class.gfx::Canvas"*)***
  %7 = load void (%"class.views::Border"*, %"class.views::View"*, %"class.gfx::Canvas"*)**, void (%"class.views::Border"*, %"class.views::View"*, %"class.gfx::Canvas"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.views::Border"*, %"class.views::View"*, %"class.gfx::Canvas"*)*, void (%"class.views::Border"*, %"class.views::View"*, %"class.gfx::Canvas"*)** %7, i64 2
  %9 = load void (%"class.views::Border"*, %"class.views::View"*, %"class.gfx::Canvas"*)*, void (%"class.views::Border"*, %"class.views::View"*, %"class.gfx::Canvas"*)** %8, align 8
  tail call void %9(%"class.views::Border"* %5, %"class.views::View"* dereferenceable(664) %1, %"class.gfx::Canvas"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZNK5views12_GLOBAL__N_117ExtraInsetsBorder9GetInsetsEv(%"class.views::(anonymous namespace)::ExtraInsetsBorder"*) unnamed_addr #4 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds %"class.views::(anonymous namespace)::ExtraInsetsBorder", %"class.views::(anonymous namespace)::ExtraInsetsBorder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.views::Border"*, %"class.views::Border"** %3, align 8
  %5 = bitcast %"class.views::Border"* %4 to { i64, i64 } (%"class.views::Border"*)***
  %6 = load { i64, i64 } (%"class.views::Border"*)**, { i64, i64 } (%"class.views::Border"*)*** %5, align 8
  %7 = getelementptr inbounds { i64, i64 } (%"class.views::Border"*)*, { i64, i64 } (%"class.views::Border"*)** %6, i64 3
  %8 = load { i64, i64 } (%"class.views::Border"*)*, { i64, i64 } (%"class.views::Border"*)** %7, align 8
  %9 = tail call { i64, i64 } %8(%"class.views::Border"* %4) #16
  %10 = extractvalue { i64, i64 } %9, 0
  %11 = extractvalue { i64, i64 } %9, 1
  %12 = getelementptr inbounds %"class.views::(anonymous namespace)::ExtraInsetsBorder", %"class.views::(anonymous namespace)::ExtraInsetsBorder"* %0, i64 0, i32 2
  %13 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  %14 = bitcast { i64, i64 }* %2 to %"class.gfx::Insets"*
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 %10, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  store i64 %11, i64* %16, align 8
  call void @_ZN3gfx6InsetspLERKS0_(%"class.gfx::Insets"* nonnull %14, %"class.gfx::Insets"* dereferenceable(16) %12) #16
  %17 = load i64, i64* %15, align 8
  %18 = load i64, i64* %16, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %17, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  ret { i64, i64 } %20
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK5views12_GLOBAL__N_117ExtraInsetsBorder14GetMinimumSizeEv(%"class.views::(anonymous namespace)::ExtraInsetsBorder"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"class.gfx::Size"*
  %4 = bitcast i64* %2 to i32*
  store i32 -1431655766, i32* %4, align 8
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 1
  store i32 -1431655766, i32* %5, align 4
  %6 = getelementptr inbounds %"class.views::(anonymous namespace)::ExtraInsetsBorder", %"class.views::(anonymous namespace)::ExtraInsetsBorder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.views::Border"*, %"class.views::Border"** %6, align 8
  %8 = bitcast %"class.views::Border"* %7 to i64 (%"class.views::Border"*)***
  %9 = load i64 (%"class.views::Border"*)**, i64 (%"class.views::Border"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.views::Border"*)*, i64 (%"class.views::Border"*)** %9, i64 4
  %11 = load i64 (%"class.views::Border"*)*, i64 (%"class.views::Border"*)** %10, align 8
  %12 = tail call i64 %11(%"class.views::Border"* %7) #16
  store i64 %12, i64* %2, align 8
  %13 = getelementptr inbounds %"class.views::(anonymous namespace)::ExtraInsetsBorder", %"class.views::(anonymous namespace)::ExtraInsetsBorder"* %0, i64 0, i32 2, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.views::(anonymous namespace)::ExtraInsetsBorder", %"class.views::(anonymous namespace)::ExtraInsetsBorder"* %0, i64 0, i32 2, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, %14
  %18 = getelementptr inbounds %"class.views::(anonymous namespace)::ExtraInsetsBorder", %"class.views::(anonymous namespace)::ExtraInsetsBorder"* %0, i64 0, i32 2, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.views::(anonymous namespace)::ExtraInsetsBorder", %"class.views::(anonymous namespace)::ExtraInsetsBorder"* %0, i64 0, i32 2, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, %19
  call void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"* nonnull %3, i32 %17, i32 %22) #16
  %23 = load i64, i64* %2, align 8
  ret i64 %23
}

declare void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"*, i32, i32) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
