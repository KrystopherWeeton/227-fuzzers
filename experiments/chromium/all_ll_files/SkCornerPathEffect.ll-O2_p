; ModuleID = '../../third_party/skia/src/effects/SkCornerPathEffect.cpp'
source_filename = "../../third_party/skia/src/effects/SkCornerPathEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.10 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.2*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.10*, %class.SkReadBuffer*)* }
%class.sk_sp.2 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkDeserialProcs = type { {}*, i8*, {}*, i8*, void (%class.sk_sp.2*, i8*, i64, i8*)*, i8* }
%class.SkCornerPathEffectImpl = type { %class.SkPathEffectBase.base, float }
%class.SkPathEffectBase.base = type { %class.SkPathEffect.base }
%class.SkPathEffect.base = type { %class.SkFlattenable.base }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.15*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.15*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.15*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.15 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.11", [7 x i8] }>
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.16, i32, i32 }
%class.sk_sp.16 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.17, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.SkPathEffectBase = type { %class.SkPathEffect.base, [4 x i8] }
%class.SkPath = type <{ %class.sk_sp.18, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp.18 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.19, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.20, %class.SkTDArray.21, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.19 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.20 = type { i8*, i32, i32 }
%class.SkTDArray.21 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.22 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.22 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.11", [3 x i8] }
%class.SkStrokeRec = type { float, float, float, i32 }
%"class.SkPath::Iter" = type <{ %struct.SkPoint*, i8*, i8*, float*, %struct.SkPoint, %struct.SkPoint, i8, i8, i8, [5 x i8] }>
%"class.SkPathEffectBase::PointData" = type { i32, %struct.SkPoint*, i32, %struct.SkPoint, %struct.SkRect, [4 x i8], %class.SkPath, %class.SkPath, %class.SkPath }
%class.SkMatrix = type { [9 x float], i32 }
%"struct.SkPathEffect::DashInfo" = type { float*, i32, float }

$_ZN22SkCornerPathEffectImpl10CreateProcER12SkReadBuffer = comdat any

$_ZN22SkCornerPathEffectImplD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK22SkCornerPathEffectImpl10getFactoryEv = comdat any

$_ZNK22SkCornerPathEffectImpl11getTypeNameEv = comdat any

$_ZNK22SkCornerPathEffectImpl7flattenER13SkWriteBuffer = comdat any

$_ZNK16SkPathEffectBase18getFlattenableTypeEv = comdat any

$_ZNK22SkCornerPathEffectImpl12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect = comdat any

$_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect = comdat any

$_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE = comdat any

$_ZNK22SkCornerPathEffectImpl17computeFastBoundsEP6SkRect = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZTV22SkCornerPathEffectImpl = comdat any

@.str = private unnamed_addr constant [19 x i8] c"SkCornerPathEffect\00", align 1
@_ZTV22SkCornerPathEffectImpl = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkCornerPathEffectImpl*)* @_ZN22SkCornerPathEffectImplD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.10*, %class.SkReadBuffer*)* (%class.SkCornerPathEffectImpl*)* @_ZNK22SkCornerPathEffectImpl10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkCornerPathEffectImpl*)* @_ZNK22SkCornerPathEffectImpl11getTypeNameEv to i8*), i8* bitcast (void (%class.SkCornerPathEffectImpl*, %class.SkWriteBuffer*)* @_ZNK22SkCornerPathEffectImpl7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*)* @_ZNK16SkPathEffectBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkCornerPathEffectImpl*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)* @_ZNK22SkCornerPathEffectImpl12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect to i8*), i8* bitcast (i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)* @_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)* @_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE to i8*), i8* bitcast (i1 (%class.SkCornerPathEffectImpl*, %struct.SkRect*)* @_ZNK22SkCornerPathEffectImpl17computeFastBoundsEP6SkRect to i8*)] }, comdat, align 8

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN18SkCornerPathEffect4MakeEf(%class.sk_sp* noalias nocapture sret, float) local_unnamed_addr #0 align 2 {
  %3 = bitcast float %1 to i32
  %4 = and i32 %3, 2139095040
  %5 = icmp ne i32 %4, 2139095040
  %6 = fcmp ogt float %1, 0.000000e+00
  %7 = and i1 %6, %5
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = tail call i8* @_Znwm(i64 16) #8
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4
  %12 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV22SkCornerPathEffectImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 12
  %14 = bitcast i8* %13 to float*
  store float %1, float* %14, align 4
  %15 = bitcast %class.sk_sp* %0 to i8**
  store i8* %9, i8** %15, align 8
  br label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %17, align 8
  br label %18

18:                                               ; preds = %16, %8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkCornerPathEffect20RegisterFlattenablesEv() local_unnamed_addr #2 align 2 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.10*, %class.SkReadBuffer*)* nonnull @_ZN22SkCornerPathEffectImpl10CreateProcER12SkReadBuffer) #9
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.10*, %class.SkReadBuffer*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkCornerPathEffectImpl10CreateProcER12SkReadBuffer(%class.sk_sp.10* noalias sret, %class.SkReadBuffer* dereferenceable(136)) #2 comdat align 2 {
  %3 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #9
  %4 = bitcast float %3 to i32
  %5 = and i32 %4, 2139095040
  %6 = icmp ne i32 %5, 2139095040
  %7 = fcmp ogt float %3, 0.000000e+00
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = tail call i8* @_Znwm(i64 16) #8, !noalias !2
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 4, !noalias !2
  %13 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV22SkCornerPathEffectImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !noalias !2
  %14 = getelementptr inbounds i8, i8* %10, i64 12
  %15 = bitcast i8* %14 to float*
  store float %3, float* %15, align 4, !noalias !2
  %16 = ptrtoint i8* %10 to i64
  br label %17

17:                                               ; preds = %9, %2
  %18 = phi i64 [ %16, %9 ], [ 0, %2 ]
  %19 = bitcast %class.sk_sp.10* %0 to i64*
  store i64 %18, i64* %19, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkCornerPathEffectImplD0Ev(%class.SkCornerPathEffectImpl*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkCornerPathEffectImpl* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #2 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #9
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.10*, %class.SkReadBuffer*)* @_ZNK22SkCornerPathEffectImpl10getFactoryEv(%class.SkCornerPathEffectImpl*) unnamed_addr #2 comdat align 2 {
  ret void (%class.sk_sp.10*, %class.SkReadBuffer*)* @_ZN22SkCornerPathEffectImpl10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK22SkCornerPathEffectImpl11getTypeNameEv(%class.SkCornerPathEffectImpl*) unnamed_addr #2 comdat align 2 {
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK22SkCornerPathEffectImpl7flattenER13SkWriteBuffer(%class.SkCornerPathEffectImpl*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.SkCornerPathEffectImpl, %class.SkCornerPathEffectImpl* %0, i64 0, i32 1
  %4 = load float, float* %3, align 4
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %6 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %6, i64 5
  %8 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, float %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK16SkPathEffectBase18getFlattenableTypeEv(%class.SkPathEffectBase*) unnamed_addr #2 comdat align 2 {
  ret i32 5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkCornerPathEffectImpl12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkCornerPathEffectImpl*, %class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec*, %struct.SkRect*) unnamed_addr #6 comdat align 2 {
  %6 = alloca %"class.SkPath::Iter", align 8
  %7 = alloca [4 x %struct.SkPoint], align 16
  %8 = getelementptr inbounds %class.SkCornerPathEffectImpl, %class.SkCornerPathEffectImpl* %0, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = fcmp ugt float %9, 0.000000e+00
  br i1 %10, label %11, label %198

11:                                               ; preds = %5
  %12 = bitcast %"class.SkPath::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %6, i64 0, i32 3
  %14 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %6, i64 0, i32 4, i32 0
  %15 = bitcast %"class.SkPath::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %6, i64 0, i32 6
  %17 = bitcast float* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 -1, i64 16, i1 false)
  %18 = bitcast i8* %16 to i64*
  store i64 -6148914691236517206, i64* %18, align 8
  call void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"* nonnull %6, %class.SkPath* dereferenceable(16) %2, i1 zeroext false) #9
  %19 = bitcast [4 x %struct.SkPoint]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #9
  %20 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 0
  %21 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 0, i32 0
  %22 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 0, i32 1
  %23 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 1
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %23, i64 0, i32 0
  %25 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 1, i32 1
  %26 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 2
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 0, i32 0
  %28 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 2, i32 1
  %29 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 3
  %30 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %29, i64 0, i32 0
  %31 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 3, i32 1
  %32 = bitcast [4 x %struct.SkPoint]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 -1, i64 32, i1 false)
  %33 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %29, i64 0, i32 0
  %34 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 0, i32 0
  %35 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 0, i32 0
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %23, i64 0, i32 0
  %37 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 0, i32 0
  br label %38

38:                                               ; preds = %182, %11
  %39 = phi float [ 0.000000e+00, %11 ], [ %183, %182 ]
  %40 = phi float [ 0.000000e+00, %11 ], [ %184, %182 ]
  %41 = phi float [ 0.000000e+00, %11 ], [ %185, %182 ]
  %42 = phi float [ 0.000000e+00, %11 ], [ %194, %182 ]
  %43 = phi float [ 0.000000e+00, %11 ], [ %195, %182 ]
  %44 = phi <2 x float> [ zeroinitializer, %11 ], [ %188, %182 ]
  %45 = phi float [ 0.000000e+00, %11 ], [ %189, %182 ]
  %46 = phi i32 [ 6, %11 ], [ %48, %182 ]
  %47 = phi i8 [ 1, %11 ], [ %190, %182 ]
  %48 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %6, %struct.SkPoint* nonnull %20) #9
  switch i32 %48, label %196 [
    i32 0, label %49
    i32 1, label %62
    i32 2, label %115
    i32 3, label %131
    i32 4, label %149
    i32 5, label %167
    i32 6, label %177
  ]

49:                                               ; preds = %38
  %50 = icmp eq i32 %46, 1
  br i1 %50, label %51, label %53

51:                                               ; preds = %49
  %52 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %1, float %41, float %40) #9
  br label %53

53:                                               ; preds = %51, %49
  %54 = call zeroext i1 @_ZNK6SkPath4Iter15isClosedContourEv(%"class.SkPath::Iter"* nonnull %6) #9
  br i1 %54, label %55, label %58

55:                                               ; preds = %53
  %56 = load float, float* %37, align 16
  %57 = load float, float* %22, align 4
  br label %182

58:                                               ; preds = %53
  %59 = load float, float* %21, align 16
  %60 = load float, float* %22, align 4
  %61 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %1, float %59, float %60) #9
  br label %182

62:                                               ; preds = %38
  %63 = load float, float* %8, align 4
  %64 = load float, float* %21, align 16
  %65 = load float, float* %24, align 8
  %66 = fsub float %64, %65
  %67 = load float, float* %22, align 4
  %68 = load float, float* %25, align 4
  %69 = fsub float %67, %68
  %70 = call float @_ZN7SkPoint6LengthEff(float %66, float %69) #9
  %71 = load float, float* %24, align 8
  %72 = load float, float* %21, align 16
  %73 = fsub float %71, %72
  %74 = load float, float* %25, align 4
  %75 = load float, float* %22, align 4
  %76 = fsub float %74, %75
  %77 = fmul float %63, 2.000000e+00
  %78 = fcmp ugt float %70, %77
  br i1 %78, label %83, label %79

79:                                               ; preds = %62
  %80 = fmul float %73, 5.000000e-01
  %81 = insertelement <2 x float> undef, float %80, i32 0
  %82 = fmul float %76, 5.000000e-01
  br label %88

83:                                               ; preds = %62
  %84 = fdiv float %63, %70
  %85 = fmul float %84, %73
  %86 = insertelement <2 x float> undef, float %85, i32 0
  %87 = fmul float %84, %76
  br label %88

88:                                               ; preds = %79, %83
  %89 = phi float [ %82, %79 ], [ %87, %83 ]
  %90 = phi <2 x float> [ %81, %79 ], [ %86, %83 ]
  %91 = phi i1 [ false, %79 ], [ true, %83 ]
  %92 = insertelement <2 x float> %90, float %89, i32 1
  %93 = and i8 %47, 1
  %94 = icmp eq i8 %93, 0
  %95 = extractelement <2 x float> %90, i32 0
  br i1 %94, label %96, label %100

96:                                               ; preds = %88
  %97 = fadd float %39, %95
  %98 = fadd float %45, %89
  %99 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %1, float %97, float %98) #9
  br label %104

100:                                              ; preds = %88
  %101 = fadd float %95, %72
  %102 = fadd float %89, %75
  %103 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %1, float %72, float %75, float %101, float %102) #9
  br label %104

104:                                              ; preds = %100, %96
  br i1 %91, label %105, label %112

105:                                              ; preds = %104
  %106 = load float, float* %24, align 8
  %107 = extractelement <2 x float> %90, i32 0
  %108 = fsub float %106, %107
  %109 = load float, float* %25, align 4
  %110 = fsub float %109, %89
  %111 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %1, float %108, float %110) #9
  br label %112

112:                                              ; preds = %105, %104
  %113 = load float, float* %36, align 8
  %114 = load float, float* %25, align 4
  br label %182

115:                                              ; preds = %38
  %116 = and i8 %47, 1
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %115
  %119 = load float, float* %21, align 16
  %120 = load float, float* %22, align 4
  %121 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %1, float %119, float %120) #9
  br label %122

122:                                              ; preds = %115, %118
  %123 = phi i8 [ %47, %115 ], [ 1, %118 ]
  %124 = load float, float* %24, align 8
  %125 = load float, float* %25, align 4
  %126 = load float, float* %27, align 16
  %127 = load float, float* %28, align 4
  %128 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %1, float %124, float %125, float %126, float %127) #9
  %129 = load float, float* %35, align 16
  %130 = load float, float* %28, align 4
  br label %182

131:                                              ; preds = %38
  %132 = and i8 %47, 1
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %138

134:                                              ; preds = %131
  %135 = load float, float* %21, align 16
  %136 = load float, float* %22, align 4
  %137 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %1, float %135, float %136) #9
  br label %138

138:                                              ; preds = %131, %134
  %139 = phi i8 [ %47, %131 ], [ 1, %134 ]
  %140 = load float*, float** %13, align 8
  %141 = load float, float* %140, align 4
  %142 = load float, float* %24, align 8
  %143 = load float, float* %25, align 4
  %144 = load float, float* %27, align 16
  %145 = load float, float* %28, align 4
  %146 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %1, float %142, float %143, float %144, float %145, float %141) #9
  %147 = load float, float* %34, align 16
  %148 = load float, float* %28, align 4
  br label %182

149:                                              ; preds = %38
  %150 = and i8 %47, 1
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %156

152:                                              ; preds = %149
  %153 = load float, float* %21, align 16
  %154 = load float, float* %22, align 4
  %155 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %1, float %153, float %154) #9
  br label %156

156:                                              ; preds = %149, %152
  %157 = phi i8 [ %47, %149 ], [ 1, %152 ]
  %158 = load float, float* %24, align 8
  %159 = load float, float* %25, align 4
  %160 = load float, float* %27, align 16
  %161 = load float, float* %28, align 4
  %162 = load float, float* %30, align 8
  %163 = load float, float* %31, align 4
  %164 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath* %1, float %158, float %159, float %160, float %161, float %162, float %163) #9
  %165 = load float, float* %33, align 8
  %166 = load float, float* %31, align 4
  br label %182

167:                                              ; preds = %38
  %168 = fcmp une float %43, 0.000000e+00
  %169 = fcmp une float %42, 0.000000e+00
  %170 = or i1 %169, %168
  br i1 %170, label %171, label %175

171:                                              ; preds = %167
  %172 = fadd float %41, %43
  %173 = fadd float %40, %42
  %174 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %1, float %41, float %40, float %172, float %173) #9
  br label %175

175:                                              ; preds = %167, %171
  %176 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath* %1) #9
  br label %182

177:                                              ; preds = %38
  %178 = and i8 %47, 1
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %196, label %180

180:                                              ; preds = %177
  %181 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %1, float %41, float %40) #9
  br label %196

182:                                              ; preds = %55, %58, %175, %156, %138, %122, %112
  %183 = phi float [ %39, %175 ], [ %39, %156 ], [ %39, %138 ], [ %39, %122 ], [ %39, %112 ], [ %56, %55 ], [ %39, %58 ]
  %184 = phi float [ %40, %175 ], [ %166, %156 ], [ %148, %138 ], [ %130, %122 ], [ %114, %112 ], [ %40, %55 ], [ %40, %58 ]
  %185 = phi float [ %41, %175 ], [ %165, %156 ], [ %147, %138 ], [ %129, %122 ], [ %113, %112 ], [ %41, %55 ], [ %41, %58 ]
  %186 = phi float [ %42, %175 ], [ 0.000000e+00, %156 ], [ 0.000000e+00, %138 ], [ 0.000000e+00, %122 ], [ %42, %112 ], [ %42, %55 ], [ %42, %58 ]
  %187 = phi float [ %43, %175 ], [ 0.000000e+00, %156 ], [ 0.000000e+00, %138 ], [ 0.000000e+00, %122 ], [ %43, %112 ], [ %43, %55 ], [ %43, %58 ]
  %188 = phi <2 x float> [ %44, %175 ], [ %44, %156 ], [ %44, %138 ], [ %44, %122 ], [ %92, %112 ], [ %44, %55 ], [ %44, %58 ]
  %189 = phi float [ %45, %175 ], [ %45, %156 ], [ %45, %138 ], [ %45, %122 ], [ %45, %112 ], [ %57, %55 ], [ %45, %58 ]
  %190 = phi i8 [ 0, %175 ], [ %157, %156 ], [ %139, %138 ], [ %123, %122 ], [ 1, %112 ], [ 0, %55 ], [ 1, %58 ]
  %191 = icmp eq i32 %46, 0
  %192 = extractelement <2 x float> %188, i32 0
  %193 = extractelement <2 x float> %188, i32 1
  %194 = select i1 %191, float %193, float %186
  %195 = select i1 %191, float %192, float %187
  br label %38

196:                                              ; preds = %38, %180, %177
  %197 = phi i1 [ true, %177 ], [ true, %180 ], [ false, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %12) #9
  br label %198

198:                                              ; preds = %5, %196
  %199 = phi i1 [ %197, %196 ], [ false, %5 ]
  ret i1 %199
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect(%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkRect*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE(%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkCornerPathEffectImpl17computeFastBoundsEP6SkRect(%class.SkCornerPathEffectImpl*, %struct.SkRect*) unnamed_addr #2 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"*, %class.SkPath* dereferenceable(16), i1 zeroext) unnamed_addr #3

declare i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"*, %struct.SkPoint*) local_unnamed_addr #3

declare zeroext i1 @_ZNK6SkPath4Iter15isClosedContourEv(%"class.SkPath::Iter"*) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath*, float, float, float, float) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath*, float, float) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath*) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath*, float, float) local_unnamed_addr #3

declare float @_ZN7SkPoint6LengthEff(float, float) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath*, float, float, float, float, float) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath*, float, float, float, float, float, float) local_unnamed_addr #3

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN18SkCornerPathEffect4MakeEf: argument 0"}
!4 = distinct !{!4, !"_ZN18SkCornerPathEffect4MakeEf"}
