; ModuleID = '../../third_party/blink/renderer/platform/fonts/font_fallback_iterator.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/font_fallback_iterator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FontFallbackIterator" = type <{ %"class.blink::FontDescription"*, %class.scoped_refptr.21, i32, i32, i32, [4 x i8], %"class.WTF::HashSet", %"class.WTF::HashSet.237", %class.scoped_refptr.241, %"class.WTF::Vector.252", i32, [4 x i8] }>
%class.scoped_refptr.21 = type { %"class.blink::FontFallbackList"* }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.237" = type { %"class.WTF::HashTable.238" }
%"class.WTF::HashTable.238" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.241 = type { %"class.blink::FontDataForRangeSet"* }
%"class.blink::FontDataForRangeSet" = type { i32 (...)**, %"class.WTF::RefCounted.242", %class.scoped_refptr.46, %class.scoped_refptr.244 }
%"class.WTF::RefCounted.242" = type { %"class.base::RefCounted.243" }
%"class.base::RefCounted.243" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.46 = type { %"class.blink::SimpleFontData"* }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.48, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.28" }>
%"class.WTF::RefCounted.28" = type { %"class.base::RefCounted.29" }
%"class.base::RefCounted.29" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.32 }
%union.anon.32 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.43, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.33" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.33" }>
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.38" }
%"struct.std::__1::atomic.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.43 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.46, %class.scoped_refptr.46 }
%class.scoped_refptr.48 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.49", [4 x i8] }>
%"class.WTF::RefCounted.49" = type { %"class.base::RefCounted.50" }
%"class.base::RefCounted.50" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%class.scoped_refptr.244 = type { %"class.blink::UnicodeRangeSet"* }
%"class.blink::UnicodeRangeSet" = type { %"class.WTF::RefCounted.245", %"class.WTF::Vector.247" }
%"class.WTF::RefCounted.245" = type { %"class.base::RefCounted.246" }
%"class.base::RefCounted.246" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.247" = type { %"class.WTF::VectorBuffer.248" }
%"class.WTF::VectorBuffer.248" = type { %"class.WTF::VectorBufferBase.249" }
%"class.WTF::VectorBufferBase.249" = type { %"struct.blink::UnicodeRange"*, i32, i32 }
%"struct.blink::UnicodeRange" = type { i32, i32 }
%"class.WTF::Vector.252" = type { %"class.WTF::VectorBuffer.253" }
%"class.WTF::VectorBuffer.253" = type { %"class.WTF::VectorBufferBase.254" }
%"class.WTF::VectorBufferBase.254" = type { %class.scoped_refptr.241*, i32, i32 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.2, %class.scoped_refptr.3, %class.scoped_refptr.13, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.20 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.262", [4 x i8] }>
%"class.WTF::RefCounted.262" = type { %"class.base::RefCounted.263" }
%"class.base::RefCounted.263" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.3 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.4", %"class.WTF::RefCounted.11", [4 x i8] }>
%"class.blink::FontSettings.4" = type { %"class.WTF::Vector.5" }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { %"class.blink::FontTagValuePair.8"*, i32, i32 }
%"class.blink::FontTagValuePair.8" = type { i32, float }
%"class.WTF::RefCounted.11" = type { %"class.base::RefCounted.12" }
%"class.base::RefCounted.12" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.13 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.14", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.17, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.14" = type { %"class.base::RefCounted.15" }
%"class.base::RefCounted.15" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.17 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.18", [4 x i8] }>
%"class.WTF::RefCounted.18" = type { %"class.base::RefCounted.19" }
%"class.base::RefCounted.19" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.20 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.22", %"class.WTF::Vector.24", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.24" = type { %"class.WTF::VectorBuffer.25" }
%"class.WTF::VectorBuffer.25" = type { %"class.WTF::VectorBufferBase.26", [8 x i8] }
%"class.WTF::VectorBufferBase.26" = type { %class.scoped_refptr.27*, i32, i32 }
%class.scoped_refptr.27 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.28", [4 x i8] }>
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.51", i32, [4 x i8], %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.189", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.223", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.230", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.169", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i64 }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::Worklist.98"* }
%"class.blink::Worklist.98" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::Worklist.105"* }
%"class.blink::Worklist.105" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::Worklist.112"* }
%"class.blink::Worklist.112" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::Worklist.119"* }
%"class.blink::Worklist.119" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::Worklist.126"* }
%"class.blink::Worklist.126" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::Worklist.133"* }
%"class.blink::Worklist.133" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::Worklist.140"* }
%"class.blink::Worklist.140" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.147", %"class.std::__1::__compressed_pair.156", %"class.std::__1::__compressed_pair.161", %"class.std::__1::__compressed_pair.163", [4 x i8] }>
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149", %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { i64 }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { float }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.172", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.181" }
%"class.WTF::Vector.181" = type { %"class.WTF::VectorBuffer.182" }
%"class.WTF::VectorBuffer.182" = type { %"class.WTF::VectorBufferBase.183" }
%"class.WTF::VectorBufferBase.183" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.197" }
%"class.WTF::VectorBuffer.197" = type { %"class.WTF::VectorBufferBase.198" }
%"class.WTF::VectorBufferBase.198" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.211" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.98"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.105"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.112"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.119"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.126"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.257" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.229 }
%class.scoped_refptr.229 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.230" = type { %"struct.std::__1::__atomic_base.231" }
%"struct.std::__1::__atomic_base.231" = type { %"struct.std::__1::__cxx_atomic_impl.232" }
%"struct.std::__1::__cxx_atomic_impl.232" = type { %"struct.std::__1::__cxx_atomic_base_impl.233" }
%"struct.std::__1::__cxx_atomic_base_impl.233" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.234 }
%class.scoped_refptr.234 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.33" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.38" }
%"class.WTF::Vector.264" = type { %"class.WTF::VectorBuffer.265" }
%"class.WTF::VectorBuffer.265" = type { %"class.WTF::VectorBufferBase.266" }
%"class.WTF::VectorBufferBase.266" = type { i32*, i32, i32 }
%"class.blink::FontSelector" = type { %"class.blink::FontCacheClient", %"class.blink::Member" }
%"class.blink::FontCacheClient" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FontFallbackMap"* }
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp.269, i16, i8, [5 x i8], %"class.blink::Persistent", %"class.WTF::HashMap", %"class.WTF::HashMap.275", %"class.blink::FontDataCache", %"class.blink::Persistent.295", float, [4 x i8] }>
%class.sk_sp.269 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.270" }
%"class.blink::PersistentBase.270" = type { %"class.blink::HeapHashSet"*, %"class.blink::PersistentNodePtr.271" }
%"class.blink::HeapHashSet" = type opaque
%"class.blink::PersistentNodePtr.271" = type { %"class.blink::PersistentNode"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.272" }
%"class.WTF::HashTable.272" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.275" = type { %"class.WTF::HashTable.276" }
%"class.WTF::HashTable.276" = type <{ %"struct.WTF::KeyValuePair.279"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.279" = type opaque
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.280", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap.280" = type { %"class.WTF::HashTable.281" }
%"class.WTF::HashTable.281" = type <{ %"struct.WTF::KeyValuePair.284"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.284" = type opaque
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.285", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.285" = type { %"class.WTF::HashTable.286" }
%"class.WTF::HashTable.286" = type <{ %"struct.WTF::KeyValuePair.289"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.289" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.290", i32, i32 }
%"class.WTF::Vector.290" = type { %"class.WTF::VectorBuffer.291" }
%"class.WTF::VectorBuffer.291" = type { %"class.WTF::VectorBufferBase.292" }
%"class.WTF::VectorBufferBase.292" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::Persistent.295" = type { %"class.blink::PersistentBase.296" }
%"class.blink::PersistentBase.296" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.271" }
%"class.WTF::Vector.298" = type { %"class.WTF::VectorBuffer.299" }
%"class.WTF::VectorBuffer.299" = type { %"class.WTF::VectorBufferBase.254", [8 x i8] }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink19FontDataForRangeSetD2Ev = comdat any

$_ZN5blink19FontDataForRangeSetD0Ev = comdat any

$_ZNK3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKjRjEENS_18HashTableAddResultIS7_jEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6ExpandEPj = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE8RehashToEPjjS8_ = comdat any

$_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink19FontDataForRangeSetEEEEmm = comdat any

$_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiRiEENS_18HashTableAddResultIS7_iEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi = comdat any

$_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_ = comdat any

$_ZTVN5blink19FontDataForRangeSetE = comdat any

@_ZTVN5blink19FontDataForRangeSetE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FontDataForRangeSet"*)* @_ZN5blink19FontDataForRangeSetD2Ev to i8*), i8* bitcast (void (%"class.blink::FontDataForRangeSet"*)* @_ZN5blink19FontDataForRangeSetD0Ev to i8*)] }, comdat, align 8
@_ZTVN5blink28FontDataForRangeSetFromCacheE = external unnamed_addr constant { [4 x i8*] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink19FontDataForRangeSetEEEEPKcv = private unnamed_addr constant [89 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::FontDataForRangeSet>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1

@_ZN5blink20FontFallbackIteratorC1ERKNS_15FontDescriptionE13scoped_refptrINS_16FontFallbackListEENS_20FontFallbackPriorityE = hidden unnamed_addr alias void (%"class.blink::FontFallbackIterator"*, %"class.blink::FontDescription"*, %"class.blink::FontFallbackList"*, i32), void (%"class.blink::FontFallbackIterator"*, %"class.blink::FontDescription"*, %"class.blink::FontFallbackList"*, i32)* @_ZN5blink20FontFallbackIteratorC2ERKNS_15FontDescriptionE13scoped_refptrINS_16FontFallbackListEENS_20FontFallbackPriorityE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20FontFallbackIteratorC2ERKNS_15FontDescriptionE13scoped_refptrINS_16FontFallbackListEENS_20FontFallbackPriorityE(%"class.blink::FontFallbackIterator"* nocapture, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::FontFallbackList"*, i32) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.blink::FontFallbackList"* %2 to i64
  %6 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 0
  store %"class.blink::FontDescription"* %1, %"class.blink::FontDescription"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 1
  %8 = bitcast %class.scoped_refptr.21* %7 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 3
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 4
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 6
  %13 = bitcast %"class.WTF::HashSet"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #6
  %14 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 7
  %15 = bitcast %"class.WTF::HashSet.237"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #6
  %16 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 8, i32 0
  %17 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 10
  %18 = bitcast %"class.blink::FontDataForRangeSet"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false)
  store i32 %3, i32* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20FontFallbackIterator30AlreadyLoadingRangeForHintCharEi(%"class.blink::FontFallbackIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %2
  %8 = load %class.scoped_refptr.241*, %class.scoped_refptr.241** %3, align 8
  br label %15

9:                                                ; preds = %22
  %10 = load %class.scoped_refptr.241*, %class.scoped_refptr.241** %3, align 8
  %11 = load i32, i32* %4, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %10, i64 %12
  %14 = icmp eq %class.scoped_refptr.241* %24, %13
  br i1 %14, label %25, label %15

15:                                               ; preds = %7, %9
  %16 = phi %class.scoped_refptr.241* [ %24, %9 ], [ %8, %7 ]
  %17 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %16, i64 0, i32 0
  %18 = load %"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %18, i64 0, i32 3, i32 0
  %20 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %19, align 8
  %21 = icmp eq %"class.blink::UnicodeRangeSet"* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %15
  %23 = tail call zeroext i1 @_ZNK5blink15UnicodeRangeSet8ContainsEi(%"class.blink::UnicodeRangeSet"* nonnull %20, i32 %1) #6
  %24 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %16, i64 1
  br i1 %23, label %25, label %9

25:                                               ; preds = %9, %22, %15, %2
  %26 = phi i1 [ false, %2 ], [ true, %15 ], [ true, %22 ], [ false, %9 ]
  ret i1 %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20FontFallbackIterator26RangeSetContributesForHintERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEEPKNS_19FontDataForRangeSetE(%"class.blink::FontFallbackIterator"* nocapture readonly, %"class.WTF::Vector.264"* nocapture readonly dereferenceable(16), %"class.blink::FontDataForRangeSet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.264", %"class.WTF::Vector.264"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.264", %"class.WTF::Vector.264"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %59, label %8

8:                                                ; preds = %3
  %9 = load i32*, i32** %4, align 8
  %10 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %2, i64 0, i32 3, i32 0
  %11 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %2, i64 0, i32 2, i32 0
  %12 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  br label %14

14:                                               ; preds = %8, %52
  %15 = phi i32* [ %9, %8 ], [ %53, %52 ]
  %16 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %10, align 8
  %17 = icmp eq %"class.blink::UnicodeRangeSet"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = load i32, i32* %15, align 4
  %20 = tail call zeroext i1 @_ZNK5blink15UnicodeRangeSet8ContainsEi(%"class.blink::UnicodeRangeSet"* nonnull %16, i32 %19) #6
  br i1 %20, label %21, label %52

21:                                               ; preds = %14, %18
  %22 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %11, align 8
  %23 = icmp eq %"class.blink::SimpleFontData"* %22, null
  br i1 %23, label %59, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.blink::SimpleFontData"* %22 to i1 (%"class.blink::SimpleFontData"*)***
  %26 = load i1 (%"class.blink::SimpleFontData"*)**, i1 (%"class.blink::SimpleFontData"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %26, i64 5
  %28 = load i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::SimpleFontData"* nonnull %22) #6
  br i1 %29, label %30, label %59

30:                                               ; preds = %24
  %31 = load i32, i32* %15, align 4
  %32 = load i32, i32* %13, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %59, label %34

34:                                               ; preds = %30
  %35 = load %class.scoped_refptr.241*, %class.scoped_refptr.241** %12, align 8
  br label %42

36:                                               ; preds = %49
  %37 = load %class.scoped_refptr.241*, %class.scoped_refptr.241** %12, align 8
  %38 = load i32, i32* %13, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %37, i64 %39
  %41 = icmp eq %class.scoped_refptr.241* %51, %40
  br i1 %41, label %59, label %42

42:                                               ; preds = %36, %34
  %43 = phi %class.scoped_refptr.241* [ %51, %36 ], [ %35, %34 ]
  %44 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %43, i64 0, i32 0
  %45 = load %"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %45, i64 0, i32 3, i32 0
  %47 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %46, align 8
  %48 = icmp eq %"class.blink::UnicodeRangeSet"* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %42
  %50 = tail call zeroext i1 @_ZNK5blink15UnicodeRangeSet8ContainsEi(%"class.blink::UnicodeRangeSet"* nonnull %47, i32 %31) #6
  %51 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %43, i64 1
  br i1 %50, label %52, label %36

52:                                               ; preds = %49, %42, %18
  %53 = getelementptr inbounds i32, i32* %15, i64 1
  %54 = load i32*, i32** %4, align 8
  %55 = load i32, i32* %5, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i32, i32* %54, i64 %56
  %58 = icmp eq i32* %53, %57
  br i1 %58, label %59, label %14

59:                                               ; preds = %52, %24, %30, %21, %36, %3
  %60 = phi i1 [ false, %3 ], [ true, %36 ], [ false, %52 ], [ true, %24 ], [ true, %30 ], [ true, %21 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20FontFallbackIterator12WillUseRangeERKN3WTF12AtomicStringERKNS_19FontDataForRangeSetE(%"class.blink::FontFallbackIterator"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::FontDataForRangeSet"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.blink::FontFallbackList"*, %"class.blink::FontFallbackList"** %4, align 8
  %6 = tail call %"class.blink::FontSelector"* @_ZNK5blink16FontFallbackList15GetFontSelectorEv(%"class.blink::FontFallbackList"* %5) #6
  %7 = icmp eq %"class.blink::FontSelector"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 0
  %10 = load %"class.blink::FontDescription"*, %"class.blink::FontDescription"** %9, align 8
  %11 = bitcast %"class.blink::FontSelector"* %6 to void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*, %"class.blink::FontDataForRangeSet"*)***
  %12 = load void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*, %"class.blink::FontDataForRangeSet"*)**, void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*, %"class.blink::FontDataForRangeSet"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*, %"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*, %"class.blink::FontDataForRangeSet"*)** %12, i64 6
  %14 = load void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*, %"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*, %"class.blink::FontDataForRangeSet"*)** %13, align 8
  tail call void %14(%"class.blink::FontSelector"* nonnull %6, %"class.blink::FontDescription"* dereferenceable(80) %10, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::FontDataForRangeSet"* dereferenceable(32) %2) #6
  br label %15

15:                                               ; preds = %3, %8
  ret void
}

declare %"class.blink::FontSelector"* @_ZNK5blink16FontFallbackList15GetFontSelectorEv(%"class.blink::FontFallbackList"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator12UniqueOrNextE13scoped_refptrINS_19FontDataForRangeSetEERKN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"*, %"class.blink::FontDataForRangeSet"*, %"class.WTF::Vector.264"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = ptrtoint %"class.blink::FontDataForRangeSet"* %1 to i64
  %6 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %1, i64 0, i32 2, i32 0
  %7 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %6, align 8
  %8 = icmp eq %"class.blink::SimpleFontData"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator4NextERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"* %0, %"class.WTF::Vector.264"* dereferenceable(16) %2)
  %11 = ptrtoint %"class.blink::FontDataForRangeSet"* %10 to i64
  br label %126

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %7, i64 0, i32 5
  %14 = tail call %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"* %13) #6
  %15 = icmp eq %class.SkTypeface* %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %12
  %17 = tail call %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator4NextERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"* %0, %"class.WTF::Vector.264"* dereferenceable(16) %2)
  %18 = ptrtoint %"class.blink::FontDataForRangeSet"* %17 to i64
  br label %126

19:                                               ; preds = %12
  %20 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #6
  %21 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %14, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %4, align 4
  %23 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 7
  %24 = getelementptr inbounds %"class.WTF::HashSet.237", %"class.WTF::HashSet.237"* %23, i64 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  br i1 %26, label %85, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 7, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, -1
  %31 = zext i32 %30 to i64
  %32 = shl i32 %22, 15
  %33 = xor i32 %32, -1
  %34 = add i32 %22, %33
  %35 = lshr i32 %34, 10
  %36 = xor i32 %35, %34
  %37 = mul i32 %36, 9
  %38 = lshr i32 %37, 6
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 11
  %41 = xor i32 %40, -1
  %42 = add i32 %39, %41
  %43 = lshr i32 %42, 16
  %44 = xor i32 %43, %42
  %45 = and i32 %30, %44
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i32, i32* %25, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %22
  br i1 %49, label %79, label %50

50:                                               ; preds = %27
  %51 = xor i32 %44, -1
  %52 = lshr i32 %42, 23
  %53 = add i32 %52, %51
  %54 = shl i32 %53, 12
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 7
  %57 = xor i32 %56, %55
  %58 = shl i32 %57, 2
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 20
  %61 = xor i32 %60, %59
  %62 = or i32 %61, 1
  %63 = zext i32 %62 to i64
  br label %64

64:                                               ; preds = %69, %50
  %65 = phi i32 [ %48, %50 ], [ %75, %69 ]
  %66 = phi i64 [ %46, %50 ], [ %73, %69 ]
  %67 = phi i64 [ 0, %50 ], [ %71, %69 ]
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %85, label %69

69:                                               ; preds = %64
  %70 = icmp eq i64 %67, 0
  %71 = select i1 %70, i64 %63, i64 %67
  %72 = add i64 %71, %66
  %73 = and i64 %72, %31
  %74 = getelementptr inbounds i32, i32* %25, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, %22
  br i1 %76, label %77, label %64

77:                                               ; preds = %69
  %78 = getelementptr inbounds i32, i32* %25, i64 %73
  br label %79

79:                                               ; preds = %77, %27
  %80 = phi i32* [ %47, %27 ], [ %78, %77 ]
  %81 = icmp eq i32* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %79
  %83 = tail call %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator4NextERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"* %0, %"class.WTF::Vector.264"* dereferenceable(16) %2)
  %84 = ptrtoint %"class.blink::FontDataForRangeSet"* %83 to i64
  br label %123

85:                                               ; preds = %64, %79, %19
  %86 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %1, i64 0, i32 3, i32 0
  %87 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %86, align 8
  %88 = icmp eq %"class.blink::UnicodeRangeSet"* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %87, i64 0, i32 1, i32 0, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %85, %89
  %94 = getelementptr inbounds %"class.WTF::HashSet.237", %"class.WTF::HashSet.237"* %23, i64 0, i32 0
  %95 = call { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKjRjEENS_18HashTableAddResultIS7_jEEOT0_OT1_(%"class.WTF::HashTable.238"* %94, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %4) #6
  br label %96

96:                                               ; preds = %93, %89
  %97 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 8
  %98 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %97, i64 0, i32 0
  %99 = load %"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"** %98, align 8
  %100 = icmp eq %"class.blink::FontDataForRangeSet"* %99, null
  br i1 %100, label %101, label %123

101:                                              ; preds = %96
  %102 = icmp eq %"class.blink::FontDataForRangeSet"* %1, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %101
  %104 = bitcast %class.scoped_refptr.241* %97 to i64*
  store i64 %5, i64* %104, align 8
  br label %123

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %1, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %106) #6
  %107 = load %"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"** %98, align 8
  %108 = bitcast %class.scoped_refptr.241* %97 to i64*
  store i64 %5, i64* %108, align 8
  %109 = icmp eq %"class.blink::FontDataForRangeSet"* %107, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %107, i64 0, i32 1, i32 0
  %112 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %111, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %112) #6
  %113 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %111, i64 0, i32 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %123

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %111, i64 -2
  %118 = bitcast %"class.base::RefCounted.243"* %117 to %"class.blink::FontDataForRangeSet"*
  %119 = bitcast %"class.base::RefCounted.243"* %117 to void (%"class.blink::FontDataForRangeSet"*)***
  %120 = load void (%"class.blink::FontDataForRangeSet"*)**, void (%"class.blink::FontDataForRangeSet"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %120, i64 1
  %122 = load void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %121, align 8
  call void %122(%"class.blink::FontDataForRangeSet"* nonnull %118) #6
  br label %123

123:                                              ; preds = %96, %103, %105, %110, %116, %82
  %124 = phi %"class.blink::FontDataForRangeSet"* [ %1, %82 ], [ null, %116 ], [ null, %110 ], [ null, %105 ], [ null, %103 ], [ null, %96 ]
  %125 = phi i64 [ %84, %82 ], [ %5, %116 ], [ %5, %110 ], [ %5, %105 ], [ %5, %103 ], [ %5, %96 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #6
  br label %126

126:                                              ; preds = %16, %123, %9
  %127 = phi %"class.blink::FontDataForRangeSet"* [ %1, %16 ], [ %124, %123 ], [ %1, %9 ]
  %128 = phi i64 [ %18, %16 ], [ %125, %123 ], [ %11, %9 ]
  %129 = icmp eq %"class.blink::FontDataForRangeSet"* %127, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %127, i64 0, i32 1, i32 0
  %132 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %131, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %132) #6
  %133 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %131, i64 0, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %143

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %131, i64 -2
  %138 = bitcast %"class.base::RefCounted.243"* %137 to %"class.blink::FontDataForRangeSet"*
  %139 = bitcast %"class.base::RefCounted.243"* %137 to void (%"class.blink::FontDataForRangeSet"*)***
  %140 = load void (%"class.blink::FontDataForRangeSet"*)**, void (%"class.blink::FontDataForRangeSet"*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %140, i64 1
  %142 = load void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %141, align 8
  call void %142(%"class.blink::FontDataForRangeSet"* nonnull %138) #6
  br label %143

143:                                              ; preds = %126, %130, %136
  %144 = inttoptr i64 %128 to %"class.blink::FontDataForRangeSet"*
  ret %"class.blink::FontDataForRangeSet"* %144
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator4NextERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"*, %"class.WTF::Vector.264"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.241, align 8
  %4 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %142 [
    i32 6, label %6
    i32 0, label %13
    i32 4, label %43
    i32 5, label %130
  ]

6:                                                ; preds = %2
  %7 = tail call noalias i8* @malloc(i64 32) #6
  %8 = bitcast i8* %7 to %"class.blink::FontDataForRangeSet"*
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink19FontDataForRangeSetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %342

13:                                               ; preds = %2
  store i32 4, i32* %4, align 8
  %14 = tail call noalias i8* @malloc(i64 32) #6
  %15 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.264"* %1, i32 0) #6
  %16 = load i32, i32* %15, align 4
  %17 = tail call %"class.blink::SimpleFontData"* @_ZN5blink20FontFallbackIterator20FallbackPriorityFontEi(%"class.blink::FontFallbackIterator"* %0, i32 %16)
  %18 = ptrtoint %"class.blink::SimpleFontData"* %17 to i64
  %19 = getelementptr inbounds i8, i8* %14, i64 8
  %20 = bitcast i8* %19 to i32*
  store i32 1, i32* %20, align 4
  %21 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink19FontDataForRangeSetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %14, i64 16
  %23 = bitcast i8* %22 to i64*
  store i64 %18, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %14, i64 24
  %25 = bitcast i8* %24 to i64*
  store i64 0, i64* %25, align 8
  %26 = icmp eq %"class.blink::SimpleFontData"* %17, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %13
  %28 = bitcast i8* %14 to %"class.blink::FontDataForRangeSet"*
  %29 = tail call %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator12UniqueOrNextE13scoped_refptrINS_19FontDataForRangeSetEERKN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"* %0, %"class.blink::FontDataForRangeSet"* %28, %"class.WTF::Vector.264"* dereferenceable(16) %1)
  br label %342

30:                                               ; preds = %13
  %31 = tail call %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator4NextERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"* %0, %"class.WTF::Vector.264"* dereferenceable(16) %1)
  %32 = icmp eq i8* %14, null
  br i1 %32, label %342, label %33

33:                                               ; preds = %30
  %34 = bitcast i8* %19 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %34) #6
  %35 = load i32, i32* %20, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %342

37:                                               ; preds = %33
  %38 = bitcast i8* %14 to %"class.blink::FontDataForRangeSet"*
  %39 = bitcast i8* %14 to void (%"class.blink::FontDataForRangeSet"*)***
  %40 = load void (%"class.blink::FontDataForRangeSet"*)**, void (%"class.blink::FontDataForRangeSet"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %40, i64 1
  %42 = load void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %41, align 8
  tail call void %42(%"class.blink::FontDataForRangeSet"* nonnull %38) #6
  br label %342

43:                                               ; preds = %2
  %44 = tail call %"class.blink::SimpleFontData"* @_ZN5blink20FontFallbackIterator27UniqueSystemFontForHintListERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"* %0, %"class.WTF::Vector.264"* dereferenceable(16) %1)
  %45 = icmp eq %"class.blink::SimpleFontData"* %44, null
  br i1 %45, label %46, label %105

46:                                               ; preds = %43
  %47 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #6
  store i32 5, i32* %4, align 8
  %48 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 0
  %49 = load %"class.blink::FontDescription"*, %"class.blink::FontDescription"** %48, align 8
  %50 = tail call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainE(%"class.blink::FontCache"* %47, %"class.blink::FontDescription"* dereferenceable(80) %49, i32 0) #6
  %51 = icmp eq %"class.blink::SimpleFontData"* %50, null
  br i1 %51, label %66, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %50, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %53) #6
  %54 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %50, i64 0, i32 0, i32 1, i32 0
  %55 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %54, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #6
  %56 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %54, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %66

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %54, i64 -2
  %61 = bitcast %"class.base::RefCounted.29"* %60 to %"class.blink::FontData"*
  %62 = bitcast %"class.base::RefCounted.29"* %60 to void (%"class.blink::FontData"*)***
  %63 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %63, i64 1
  %65 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %64, align 8
  tail call void %65(%"class.blink::FontData"* nonnull %61) #6
  br label %66

66:                                               ; preds = %46, %52, %59
  %67 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 1, i32 0
  %68 = load %"class.blink::FontFallbackList"*, %"class.blink::FontFallbackList"** %67, align 8
  %69 = tail call %"class.blink::FontSelector"* @_ZNK5blink16FontFallbackList15GetFontSelectorEv(%"class.blink::FontFallbackList"* %68) #6
  %70 = icmp eq %"class.blink::FontSelector"* %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %66
  %72 = load %"class.blink::FontDescription"*, %"class.blink::FontDescription"** %48, align 8
  %73 = bitcast %"class.blink::FontSelector"* %69 to void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)***
  %74 = load void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)**, void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)*, void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)** %74, i64 15
  %76 = load void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)*, void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)** %75, align 8
  tail call void %76(%"class.blink::FontSelector"* nonnull %69, %"class.blink::FontDescription"* dereferenceable(80) %72, %"class.blink::SimpleFontData"* %50) #6
  br label %77

77:                                               ; preds = %66, %71
  %78 = tail call noalias i8* @malloc(i64 32) #6
  br i1 %51, label %81, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %50, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %80) #6
  br label %81

81:                                               ; preds = %79, %77
  %82 = ptrtoint %"class.blink::SimpleFontData"* %50 to i64
  %83 = getelementptr inbounds i8, i8* %78, i64 8
  %84 = bitcast i8* %83 to i32*
  store i32 1, i32* %84, align 4
  %85 = bitcast i8* %78 to i32 (...)***
  %86 = getelementptr inbounds i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to i64*
  store i64 %82, i64* %87, align 8
  %88 = getelementptr inbounds i8, i8* %78, i64 24
  %89 = bitcast i8* %88 to i64*
  store i64 0, i64* %89, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink28FontDataForRangeSetFromCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %90 = bitcast i8* %78 to %"class.blink::FontDataForRangeSet"*
  %91 = tail call %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator12UniqueOrNextE13scoped_refptrINS_19FontDataForRangeSetEERKN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"* %0, %"class.blink::FontDataForRangeSet"* %90, %"class.WTF::Vector.264"* dereferenceable(16) %1)
  br i1 %51, label %342, label %92

92:                                               ; preds = %81
  %93 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %50, i64 0, i32 0, i32 1, i32 0
  %94 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %93, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %94) #6
  %95 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %93, i64 0, i32 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %342

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %93, i64 -2
  %100 = bitcast %"class.base::RefCounted.29"* %99 to %"class.blink::FontData"*
  %101 = bitcast %"class.base::RefCounted.29"* %99 to void (%"class.blink::FontData"*)***
  %102 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %102, i64 1
  %104 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %103, align 8
  tail call void %104(%"class.blink::FontData"* nonnull %100) #6
  br label %342

105:                                              ; preds = %43
  %106 = tail call noalias i8* @malloc(i64 32) #6
  %107 = bitcast i8* %106 to %"class.blink::FontDataForRangeSet"*
  %108 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %44, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %108) #6
  %109 = ptrtoint %"class.blink::SimpleFontData"* %44 to i64
  %110 = getelementptr inbounds i8, i8* %106, i64 8
  %111 = bitcast i8* %110 to i32*
  store i32 1, i32* %111, align 4
  %112 = bitcast i8* %106 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink19FontDataForRangeSetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %113 = getelementptr inbounds i8, i8* %106, i64 16
  %114 = bitcast i8* %113 to i64*
  store i64 %109, i64* %114, align 8
  %115 = getelementptr inbounds i8, i8* %106, i64 24
  %116 = bitcast i8* %115 to i64*
  store i64 0, i64* %116, align 8
  %117 = tail call %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator12UniqueOrNextE13scoped_refptrINS_19FontDataForRangeSetEERKN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"* %0, %"class.blink::FontDataForRangeSet"* %107, %"class.WTF::Vector.264"* dereferenceable(16) %1)
  %118 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %44, i64 0, i32 0, i32 1, i32 0
  %119 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %118, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %119) #6
  %120 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %118, i64 0, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %342

123:                                              ; preds = %105
  %124 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %118, i64 -2
  %125 = bitcast %"class.base::RefCounted.29"* %124 to %"class.blink::FontData"*
  %126 = bitcast %"class.base::RefCounted.29"* %124 to void (%"class.blink::FontData"*)***
  %127 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %127, i64 1
  %129 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %128, align 8
  tail call void %129(%"class.blink::FontData"* nonnull %125) #6
  br label %342

130:                                              ; preds = %2
  store i32 6, i32* %4, align 8
  %131 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 8, i32 0
  %132 = load %"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"** %131, align 8
  %133 = icmp eq %"class.blink::FontDataForRangeSet"* %132, null
  br i1 %133, label %134, label %139

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 0
  %136 = load %"class.blink::FontDescription"*, %"class.blink::FontDescription"** %135, align 8
  tail call void @_ZN5blink9FontCache17CrashWithFontInfoEPKNS_15FontDescriptionE(%"class.blink::FontDescription"* %136) #6
  %137 = load %"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"** %131, align 8
  %138 = icmp eq %"class.blink::FontDataForRangeSet"* %137, null
  br i1 %138, label %342, label %139

139:                                              ; preds = %130, %134
  %140 = phi %"class.blink::FontDataForRangeSet"* [ %137, %134 ], [ %132, %130 ]
  %141 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %140, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %141) #6
  br label %342

142:                                              ; preds = %2
  %143 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 1, i32 0
  %144 = load %"class.blink::FontFallbackList"*, %"class.blink::FontFallbackList"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 0
  %146 = load %"class.blink::FontDescription"*, %"class.blink::FontDescription"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 2
  %148 = load i32, i32* %147, align 8
  %149 = tail call %"class.blink::FontData"* @_ZN5blink16FontFallbackList10FontDataAtERKNS_15FontDescriptionEj(%"class.blink::FontFallbackList"* %144, %"class.blink::FontDescription"* dereferenceable(80) %146, i32 %148) #6
  %150 = icmp eq %"class.blink::FontData"* %149, null
  br i1 %150, label %151, label %157

151:                                              ; preds = %142
  %152 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 10
  %153 = load i32, i32* %152, align 8
  %154 = tail call zeroext i1 @_ZN5blink25IsNonTextFallbackPriorityENS_20FontFallbackPriorityE(i32 %153) #6
  %155 = select i1 %154, i32 0, i32 4
  store i32 %155, i32* %4, align 8
  %156 = tail call %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator4NextERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"* %0, %"class.WTF::Vector.264"* dereferenceable(16) %1)
  br label %342

157:                                              ; preds = %142
  %158 = bitcast %"class.blink::FontData"* %149 to i1 (%"class.blink::FontData"*)***
  %159 = load i1 (%"class.blink::FontData"*)**, i1 (%"class.blink::FontData"*)*** %158, align 8
  %160 = getelementptr inbounds i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %159, i64 6
  %161 = load i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %160, align 8
  %162 = tail call zeroext i1 %161(%"class.blink::FontData"* nonnull %149) #6
  br i1 %162, label %197, label %163

163:                                              ; preds = %157
  %164 = load i32, i32* %147, align 8
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %147, align 8
  %166 = load i1 (%"class.blink::FontData"*)**, i1 (%"class.blink::FontData"*)*** %158, align 8
  %167 = getelementptr inbounds i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %166, i64 4
  %168 = load i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %167, align 8
  %169 = tail call zeroext i1 %168(%"class.blink::FontData"* nonnull %149) #6
  br i1 %169, label %195, label %170

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"class.blink::FontData", %"class.blink::FontData"* %149, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %171) #6
  %172 = tail call noalias i8* @malloc(i64 32) #6
  %173 = bitcast i8* %172 to %"class.blink::FontDataForRangeSet"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %171) #6
  %174 = ptrtoint %"class.blink::FontData"* %149 to i64
  %175 = getelementptr inbounds i8, i8* %172, i64 8
  %176 = bitcast i8* %175 to i32*
  store i32 1, i32* %176, align 4
  %177 = bitcast i8* %172 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink19FontDataForRangeSetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %177, align 8
  %178 = getelementptr inbounds i8, i8* %172, i64 16
  %179 = bitcast i8* %178 to i64*
  store i64 %174, i64* %179, align 8
  %180 = getelementptr inbounds i8, i8* %172, i64 24
  %181 = bitcast i8* %180 to i64*
  store i64 0, i64* %181, align 8
  %182 = tail call %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator12UniqueOrNextE13scoped_refptrINS_19FontDataForRangeSetEERKN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"* %0, %"class.blink::FontDataForRangeSet"* %173, %"class.WTF::Vector.264"* dereferenceable(16) %1)
  %183 = getelementptr inbounds %"class.blink::FontData", %"class.blink::FontData"* %149, i64 0, i32 1, i32 0
  %184 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %183, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %184) #6
  %185 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %183, i64 0, i32 0, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %342

188:                                              ; preds = %170
  %189 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %183, i64 -2
  %190 = bitcast %"class.base::RefCounted.29"* %189 to %"class.blink::FontData"*
  %191 = bitcast %"class.base::RefCounted.29"* %189 to void (%"class.blink::FontData"*)***
  %192 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %192, i64 1
  %194 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %193, align 8
  tail call void %194(%"class.blink::FontData"* nonnull %190) #6
  br label %342

195:                                              ; preds = %163
  %196 = tail call %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator4NextERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"* %0, %"class.WTF::Vector.264"* dereferenceable(16) %1)
  br label %342

197:                                              ; preds = %157
  %198 = load i32, i32* %4, align 8
  %199 = icmp eq i32 %198, 2
  %200 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 3
  br i1 %199, label %201, label %203

201:                                              ; preds = %197
  %202 = load i32, i32* %200, align 4
  br label %204

203:                                              ; preds = %197
  store i32 0, i32* %200, align 4
  store i32 2, i32* %4, align 8
  br label %204

204:                                              ; preds = %201, %203
  %205 = phi i32 [ %202, %201 ], [ 0, %203 ]
  %206 = bitcast %class.scoped_refptr.241* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %206) #6
  %207 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %3, i64 0, i32 0
  store %"class.blink::FontDataForRangeSet"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontDataForRangeSet"*), %"class.blink::FontDataForRangeSet"** %207, align 8
  %208 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 3
  %209 = getelementptr inbounds %"class.blink::FontData", %"class.blink::FontData"* %149, i64 1
  %210 = bitcast %"class.blink::FontData"* %209 to %"class.WTF::Vector.298"*
  %211 = tail call dereferenceable(8) %class.scoped_refptr.241* @_ZNK3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.298"* %210, i32 %205) #6
  %212 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %211, i64 0, i32 0
  %213 = load %"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"** %212, align 8
  %214 = icmp eq %"class.blink::FontDataForRangeSet"* %213, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %204
  %216 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %213, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %216) #6
  br label %217

217:                                              ; preds = %204, %215
  store %"class.blink::FontDataForRangeSet"* %213, %"class.blink::FontDataForRangeSet"** %207, align 8
  %218 = load i32, i32* %208, align 4
  %219 = add i32 %218, 1
  store i32 %219, i32* %208, align 4
  %220 = getelementptr inbounds %"class.blink::FontData", %"class.blink::FontData"* %149, i64 1, i32 2
  %221 = bitcast [4 x i8]* %220 to i32*
  %222 = load i32, i32* %221, align 4
  %223 = icmp eq i32 %219, %222
  br i1 %223, label %224, label %227

224:                                              ; preds = %217
  store i32 1, i32* %4, align 8
  %225 = load i32, i32* %147, align 8
  %226 = add nsw i32 %225, 1
  store i32 %226, i32* %147, align 8
  br label %227

227:                                              ; preds = %224, %217
  %228 = getelementptr inbounds %"class.WTF::Vector.264", %"class.WTF::Vector.264"* %1, i64 0, i32 0, i32 0, i32 0
  %229 = getelementptr inbounds %"class.WTF::Vector.264", %"class.WTF::Vector.264"* %1, i64 0, i32 0, i32 0, i32 2
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %321, label %232

232:                                              ; preds = %227
  %233 = load i32*, i32** %228, align 8
  %234 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %213, i64 0, i32 3, i32 0
  %235 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %213, i64 0, i32 2, i32 0
  %236 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %237 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  br label %238

238:                                              ; preds = %276, %232
  %239 = phi i32* [ %233, %232 ], [ %277, %276 ]
  %240 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %234, align 8
  %241 = icmp eq %"class.blink::UnicodeRangeSet"* %240, null
  br i1 %241, label %245, label %242

242:                                              ; preds = %238
  %243 = load i32, i32* %239, align 4
  %244 = tail call zeroext i1 @_ZNK5blink15UnicodeRangeSet8ContainsEi(%"class.blink::UnicodeRangeSet"* nonnull %240, i32 %243) #6
  br i1 %244, label %245, label %276

245:                                              ; preds = %242, %238
  %246 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %235, align 8
  %247 = icmp eq %"class.blink::SimpleFontData"* %246, null
  br i1 %247, label %283, label %248

248:                                              ; preds = %245
  %249 = bitcast %"class.blink::SimpleFontData"* %246 to i1 (%"class.blink::SimpleFontData"*)***
  %250 = load i1 (%"class.blink::SimpleFontData"*)**, i1 (%"class.blink::SimpleFontData"*)*** %249, align 8
  %251 = getelementptr inbounds i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %250, i64 5
  %252 = load i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %251, align 8
  %253 = tail call zeroext i1 %252(%"class.blink::SimpleFontData"* nonnull %246) #6
  br i1 %253, label %254, label %283

254:                                              ; preds = %248
  %255 = load i32, i32* %239, align 4
  %256 = load i32, i32* %237, align 4
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %283, label %258

258:                                              ; preds = %254
  %259 = load %class.scoped_refptr.241*, %class.scoped_refptr.241** %236, align 8
  br label %266

260:                                              ; preds = %273
  %261 = load %class.scoped_refptr.241*, %class.scoped_refptr.241** %236, align 8
  %262 = load i32, i32* %237, align 4
  %263 = zext i32 %262 to i64
  %264 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %261, i64 %263
  %265 = icmp eq %class.scoped_refptr.241* %275, %264
  br i1 %265, label %283, label %266

266:                                              ; preds = %260, %258
  %267 = phi %class.scoped_refptr.241* [ %275, %260 ], [ %259, %258 ]
  %268 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %267, i64 0, i32 0
  %269 = load %"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"** %268, align 8
  %270 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %269, i64 0, i32 3, i32 0
  %271 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %270, align 8
  %272 = icmp eq %"class.blink::UnicodeRangeSet"* %271, null
  br i1 %272, label %276, label %273

273:                                              ; preds = %266
  %274 = tail call zeroext i1 @_ZNK5blink15UnicodeRangeSet8ContainsEi(%"class.blink::UnicodeRangeSet"* nonnull %271, i32 %255) #6
  %275 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %267, i64 1
  br i1 %274, label %276, label %260

276:                                              ; preds = %273, %266, %242
  %277 = getelementptr inbounds i32, i32* %239, i64 1
  %278 = load i32*, i32** %228, align 8
  %279 = load i32, i32* %229, align 4
  %280 = zext i32 %279 to i64
  %281 = getelementptr inbounds i32, i32* %278, i64 %280
  %282 = icmp eq i32* %277, %281
  br i1 %282, label %321, label %238

283:                                              ; preds = %248, %254, %245, %260
  %284 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %235, align 8
  %285 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %284, i64 0, i32 11, i32 0
  %286 = load %"class.blink::CustomFontData"*, %"class.blink::CustomFontData"** %285, align 8
  %287 = icmp eq %"class.blink::CustomFontData"* %286, null
  br i1 %287, label %293, label %288

288:                                              ; preds = %283
  %289 = bitcast %"class.blink::CustomFontData"* %286 to void (%"class.blink::CustomFontData"*)***
  %290 = load void (%"class.blink::CustomFontData"*)**, void (%"class.blink::CustomFontData"*)*** %289, align 8
  %291 = getelementptr inbounds void (%"class.blink::CustomFontData"*)*, void (%"class.blink::CustomFontData"*)** %290, i64 2
  %292 = load void (%"class.blink::CustomFontData"*)*, void (%"class.blink::CustomFontData"*)** %291, align 8
  tail call void %292(%"class.blink::CustomFontData"* nonnull %286) #6
  br label %293

293:                                              ; preds = %283, %288
  %294 = bitcast %"class.blink::SimpleFontData"* %284 to i1 (%"class.blink::SimpleFontData"*)***
  %295 = load i1 (%"class.blink::SimpleFontData"*)**, i1 (%"class.blink::SimpleFontData"*)*** %294, align 8
  %296 = getelementptr inbounds i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %295, i64 4
  %297 = load i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %296, align 8
  %298 = tail call zeroext i1 %297(%"class.blink::SimpleFontData"* %284) #6
  br i1 %298, label %304, label %299

299:                                              ; preds = %293
  br i1 %214, label %302, label %300

300:                                              ; preds = %299
  %301 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %213, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %301) #6
  br label %302

302:                                              ; preds = %299, %300
  %303 = tail call %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator12UniqueOrNextE13scoped_refptrINS_19FontDataForRangeSetEERKN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"* %0, %"class.blink::FontDataForRangeSet"* %213, %"class.WTF::Vector.264"* dereferenceable(16) %1)
  br label %324

304:                                              ; preds = %293
  %305 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 9
  %306 = load i32, i32* %237, align 4
  %307 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %308 = load i32, i32* %307, align 8
  %309 = icmp eq i32 %306, %308
  br i1 %309, label %320, label %310, !prof !2

310:                                              ; preds = %304
  %311 = getelementptr inbounds %"class.WTF::Vector.252", %"class.WTF::Vector.252"* %305, i64 0, i32 0, i32 0, i32 0
  %312 = load %class.scoped_refptr.241*, %class.scoped_refptr.241** %311, align 8
  %313 = zext i32 %306 to i64
  %314 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %312, i64 %313, i32 0
  store %"class.blink::FontDataForRangeSet"* %213, %"class.blink::FontDataForRangeSet"** %314, align 8
  br i1 %214, label %317, label %315

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %213, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %316) #6
  br label %317

317:                                              ; preds = %315, %310
  %318 = load i32, i32* %237, align 4
  %319 = add i32 %318, 1
  store i32 %319, i32* %237, align 4
  br label %321

320:                                              ; preds = %304
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.252"* %305, %class.scoped_refptr.241* nonnull dereferenceable(8) %3) #6
  br label %321

321:                                              ; preds = %276, %320, %317, %227
  %322 = call %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator4NextERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"* %0, %"class.WTF::Vector.264"* dereferenceable(16) %1)
  %323 = load %"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"** %207, align 8
  br label %324

324:                                              ; preds = %302, %321
  %325 = phi %"class.blink::FontDataForRangeSet"* [ %323, %321 ], [ %213, %302 ]
  %326 = phi %"class.blink::FontDataForRangeSet"* [ %322, %321 ], [ %303, %302 ]
  %327 = icmp eq %"class.blink::FontDataForRangeSet"* %325, null
  br i1 %327, label %341, label %328

328:                                              ; preds = %324
  %329 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %325, i64 0, i32 1, i32 0
  %330 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %329, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %330) #6
  %331 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %329, i64 0, i32 0, i32 0
  %332 = load i32, i32* %331, align 4
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %341

334:                                              ; preds = %328
  %335 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %329, i64 -2
  %336 = bitcast %"class.base::RefCounted.243"* %335 to %"class.blink::FontDataForRangeSet"*
  %337 = bitcast %"class.base::RefCounted.243"* %335 to void (%"class.blink::FontDataForRangeSet"*)***
  %338 = load void (%"class.blink::FontDataForRangeSet"*)**, void (%"class.blink::FontDataForRangeSet"*)*** %337, align 8
  %339 = getelementptr inbounds void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %338, i64 1
  %340 = load void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %339, align 8
  call void %340(%"class.blink::FontDataForRangeSet"* nonnull %336) #6
  br label %341

341:                                              ; preds = %324, %328, %334
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %206) #6
  br label %342

342:                                              ; preds = %81, %92, %98, %188, %170, %139, %134, %123, %105, %37, %33, %30, %27, %151, %195, %341, %6
  %343 = phi %"class.blink::FontDataForRangeSet"* [ %156, %151 ], [ %326, %341 ], [ %196, %195 ], [ %8, %6 ], [ %29, %27 ], [ %31, %30 ], [ %31, %33 ], [ %31, %37 ], [ %117, %105 ], [ %117, %123 ], [ null, %134 ], [ %140, %139 ], [ %182, %170 ], [ %182, %188 ], [ %91, %98 ], [ %91, %92 ], [ %91, %81 ]
  ret %"class.blink::FontDataForRangeSet"* %343
}

declare %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20FontFallbackIterator13NeedsHintListEv(%"class.blink::FontFallbackIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %4 [
    i32 2, label %20
    i32 1, label %5
  ]

4:                                                ; preds = %1
  br label %20

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::FontFallbackList"*, %"class.blink::FontFallbackList"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 0
  %9 = load %"class.blink::FontDescription"*, %"class.blink::FontDescription"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = tail call %"class.blink::FontData"* @_ZN5blink16FontFallbackList10FontDataAtERKNS_15FontDescriptionEj(%"class.blink::FontFallbackList"* %7, %"class.blink::FontDescription"* dereferenceable(80) %9, i32 %11) #6
  %13 = icmp eq %"class.blink::FontData"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %5
  %15 = bitcast %"class.blink::FontData"* %12 to i1 (%"class.blink::FontData"*)***
  %16 = load i1 (%"class.blink::FontData"*)**, i1 (%"class.blink::FontData"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %16, i64 6
  %18 = load i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::FontData"* nonnull %12) #6
  br label %20

20:                                               ; preds = %14, %5, %1, %4
  %21 = phi i1 [ false, %4 ], [ true, %1 ], [ %19, %14 ], [ false, %5 ]
  ret i1 %21
}

declare %"class.blink::FontData"* @_ZN5blink16FontFallbackList10FontDataAtERKNS_15FontDescriptionEj(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink20FontFallbackIterator20FallbackPriorityFontEi(%"class.blink::FontFallbackIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #6
  %4 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 0
  %5 = load %"class.blink::FontDescription"*, %"class.blink::FontDescription"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::FontFallbackList"*, %"class.blink::FontFallbackList"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %7, i64 0, i32 2
  %9 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %8, align 8
  %10 = icmp eq %"class.blink::SimpleFontData"* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %7, %"class.blink::FontDescription"* dereferenceable(80) %5) #6
  store %"class.blink::SimpleFontData"* %12, %"class.blink::SimpleFontData"** %8, align 8
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi %"class.blink::SimpleFontData"* [ %9, %2 ], [ %12, %11 ]
  %15 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 10
  %16 = load i32, i32* %15, align 8
  %17 = tail call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache24FallbackFontForCharacterERKNS_15FontDescriptionEiPKNS_14SimpleFontDataENS_20FontFallbackPriorityE(%"class.blink::FontCache"* %3, %"class.blink::FontDescription"* dereferenceable(80) %5, i32 %1, %"class.blink::SimpleFontData"* %14, i32 %16) #6
  %18 = load %"class.blink::FontFallbackList"*, %"class.blink::FontFallbackList"** %6, align 8
  %19 = tail call %"class.blink::FontSelector"* @_ZNK5blink16FontFallbackList15GetFontSelectorEv(%"class.blink::FontFallbackList"* %18) #6
  %20 = icmp eq %"class.blink::FontSelector"* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %13
  %22 = load i32, i32* %15, align 8
  %23 = load %"class.blink::FontDescription"*, %"class.blink::FontDescription"** %4, align 8
  %24 = bitcast %"class.blink::FontSelector"* %19 to void (%"class.blink::FontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)***
  %25 = load void (%"class.blink::FontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)**, void (%"class.blink::FontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::FontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)*, void (%"class.blink::FontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)** %25, i64 14
  %27 = load void (%"class.blink::FontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)*, void (%"class.blink::FontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)** %26, align 8
  tail call void %27(%"class.blink::FontSelector"* nonnull %19, i32 %1, i32 %22, %"class.blink::FontDescription"* dereferenceable(80) %23, %"class.blink::SimpleFontData"* %17) #6
  br label %28

28:                                               ; preds = %21, %13
  ret %"class.blink::SimpleFontData"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink20FontFallbackIterator27UniqueSystemFontForHintListERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"*, %"class.WTF::Vector.264"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.WTF::Vector.264", %"class.WTF::Vector.264"* %1, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %115, label %7

7:                                                ; preds = %2
  %8 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #6
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #6
  store i32 -1431655766, i32* %3, align 4
  %10 = load i32, i32* %4, align 4
  %11 = icmp ugt i32 %10, 1
  br i1 %11, label %12, label %21

12:                                               ; preds = %7, %17
  %13 = phi i32 [ %18, %17 ], [ 1, %7 ]
  %14 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.264"* %1, i32 %13) #6
  %15 = load i32, i32* %14, align 4
  %16 = tail call zeroext i1 @_ZN5blink9Character17HasDefiniteScriptEi(i32 %15) #6
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = add nuw i32 %13, 1
  %19 = load i32, i32* %4, align 4
  %20 = icmp ult i32 %18, %19
  br i1 %20, label %12, label %21

21:                                               ; preds = %12, %17, %7
  %22 = phi i32 [ 0, %7 ], [ 0, %17 ], [ %13, %12 ]
  %23 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.264"* %1, i32 %22) #6
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %3, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %113, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 6
  %28 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %27, i64 0, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = icmp eq i32* %29, null
  br i1 %30, label %86, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 6, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, -1
  %35 = zext i32 %34 to i64
  %36 = shl i32 %24, 15
  %37 = xor i32 %36, -1
  %38 = add i32 %24, %37
  %39 = lshr i32 %38, 10
  %40 = xor i32 %39, %38
  %41 = mul i32 %40, 9
  %42 = lshr i32 %41, 6
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 11
  %45 = xor i32 %44, -1
  %46 = add i32 %43, %45
  %47 = lshr i32 %46, 16
  %48 = xor i32 %47, %46
  %49 = and i32 %34, %48
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %29, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %24
  br i1 %53, label %83, label %54

54:                                               ; preds = %31
  %55 = xor i32 %48, -1
  %56 = lshr i32 %46, 23
  %57 = add i32 %56, %55
  %58 = shl i32 %57, 12
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 7
  %61 = xor i32 %60, %59
  %62 = shl i32 %61, 2
  %63 = xor i32 %62, %61
  %64 = lshr i32 %63, 20
  %65 = xor i32 %64, %63
  %66 = or i32 %65, 1
  %67 = zext i32 %66 to i64
  br label %68

68:                                               ; preds = %73, %54
  %69 = phi i32 [ %52, %54 ], [ %79, %73 ]
  %70 = phi i64 [ %50, %54 ], [ %77, %73 ]
  %71 = phi i64 [ 0, %54 ], [ %75, %73 ]
  %72 = icmp eq i32 %69, 0
  br i1 %72, label %86, label %73

73:                                               ; preds = %68
  %74 = icmp eq i64 %71, 0
  %75 = select i1 %74, i64 %67, i64 %71
  %76 = add i64 %75, %70
  %77 = and i64 %76, %35
  %78 = getelementptr inbounds i32, i32* %29, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, %24
  br i1 %80, label %81, label %68

81:                                               ; preds = %73
  %82 = getelementptr inbounds i32, i32* %29, i64 %77
  br label %83

83:                                               ; preds = %81, %31
  %84 = phi i32* [ %51, %31 ], [ %82, %81 ]
  %85 = icmp eq i32* %84, null
  br i1 %85, label %86, label %113

86:                                               ; preds = %68, %83, %26
  %87 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %27, i64 0, i32 0
  %88 = call { i32*, i8 } @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiRiEENS_18HashTableAddResultIS7_iEEOT0_OT1_(%"class.WTF::HashTable"* %87, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #6
  %89 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 0
  %90 = load %"class.blink::FontDescription"*, %"class.blink::FontDescription"** %89, align 8
  %91 = load i32, i32* %3, align 4
  %92 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 1, i32 0
  %93 = load %"class.blink::FontFallbackList"*, %"class.blink::FontFallbackList"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %93, i64 0, i32 2
  %95 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %94, align 8
  %96 = icmp eq %"class.blink::SimpleFontData"* %95, null
  br i1 %96, label %97, label %99

97:                                               ; preds = %86
  %98 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %93, %"class.blink::FontDescription"* dereferenceable(80) %90) #6
  store %"class.blink::SimpleFontData"* %98, %"class.blink::SimpleFontData"** %94, align 8
  br label %99

99:                                               ; preds = %86, %97
  %100 = phi %"class.blink::SimpleFontData"* [ %95, %86 ], [ %98, %97 ]
  %101 = call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache24FallbackFontForCharacterERKNS_15FontDescriptionEiPKNS_14SimpleFontDataENS_20FontFallbackPriorityE(%"class.blink::FontCache"* %8, %"class.blink::FontDescription"* dereferenceable(80) %90, i32 %91, %"class.blink::SimpleFontData"* %100, i32 0) #6
  %102 = ptrtoint %"class.blink::SimpleFontData"* %101 to i64
  %103 = load %"class.blink::FontFallbackList"*, %"class.blink::FontFallbackList"** %92, align 8
  %104 = call %"class.blink::FontSelector"* @_ZNK5blink16FontFallbackList15GetFontSelectorEv(%"class.blink::FontFallbackList"* %103) #6
  %105 = icmp eq %"class.blink::FontSelector"* %104, null
  br i1 %105, label %113, label %106

106:                                              ; preds = %99
  %107 = load i32, i32* %3, align 4
  %108 = load %"class.blink::FontDescription"*, %"class.blink::FontDescription"** %89, align 8
  %109 = bitcast %"class.blink::FontSelector"* %104 to void (%"class.blink::FontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)***
  %110 = load void (%"class.blink::FontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)**, void (%"class.blink::FontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.blink::FontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)*, void (%"class.blink::FontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)** %110, i64 14
  %112 = load void (%"class.blink::FontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)*, void (%"class.blink::FontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)** %111, align 8
  call void %112(%"class.blink::FontSelector"* nonnull %104, i32 %107, i32 0, %"class.blink::FontDescription"* dereferenceable(80) %108, %"class.blink::SimpleFontData"* %101) #6
  br label %113

113:                                              ; preds = %83, %99, %106, %21
  %114 = phi i64 [ 0, %21 ], [ 0, %83 ], [ %102, %106 ], [ %102, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #6
  br label %115

115:                                              ; preds = %2, %113
  %116 = phi i64 [ %114, %113 ], [ 0, %2 ]
  %117 = inttoptr i64 %116 to %"class.blink::SimpleFontData"*
  ret %"class.blink::SimpleFontData"* %117
}

declare %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32) local_unnamed_addr #2

declare %"class.blink::SimpleFontData"* @_ZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), i32) local_unnamed_addr #2

declare void @_ZN5blink9FontCache17CrashWithFontInfoEPKNS_15FontDescriptionE(%"class.blink::FontDescription"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink25IsNonTextFallbackPriorityENS_20FontFallbackPriorityE(i32) local_unnamed_addr #2

declare %"class.blink::SimpleFontData"* @_ZN5blink9FontCache24FallbackFontForCharacterERKNS_15FontDescriptionEiPKNS_14SimpleFontDataENS_20FontFallbackPriorityE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), i32, %"class.blink::SimpleFontData"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink15UnicodeRangeSet8ContainsEi(%"class.blink::UnicodeRangeSet"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19FontDataForRangeSetD2Ev(%"class.blink::FontDataForRangeSet"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink19FontDataForRangeSetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %3, align 8
  %5 = icmp eq %"class.blink::UnicodeRangeSet"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #6
  %9 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.246", %"class.base::RefCounted.246"* %7, i64 2
  %14 = bitcast %"class.base::RefCounted.246"* %13 to %"struct.blink::UnicodeRange"**
  %15 = load %"struct.blink::UnicodeRange"*, %"struct.blink::UnicodeRange"** %14, align 8
  %16 = icmp eq %"struct.blink::UnicodeRange"* %15, null
  %17 = bitcast %"struct.blink::UnicodeRange"* %15 to i8*
  br i1 %16, label %24, label %18, !prof !3

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.base::RefCounted.246", %"class.base::RefCounted.246"* %7, i64 5, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !2

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #6
  br label %24

24:                                               ; preds = %23, %12
  %25 = bitcast %"class.blink::UnicodeRangeSet"* %4 to i8*
  tail call void @free(i8* %25) #6
  br label %26

26:                                               ; preds = %1, %6, %24
  %27 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %0, i64 0, i32 2, i32 0
  %28 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %27, align 8
  %29 = icmp eq %"class.blink::SimpleFontData"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %28, i64 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %31, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %32) #6
  %33 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %31, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %43

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %31, i64 -2
  %38 = bitcast %"class.base::RefCounted.29"* %37 to %"class.blink::FontData"*
  %39 = bitcast %"class.base::RefCounted.29"* %37 to void (%"class.blink::FontData"*)***
  %40 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %40, i64 1
  %42 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %41, align 8
  tail call void %42(%"class.blink::FontData"* nonnull %38) #6
  br label %43

43:                                               ; preds = %26, %30, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19FontDataForRangeSetD0Ev(%"class.blink::FontDataForRangeSet"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink19FontDataForRangeSetD2Ev(%"class.blink::FontDataForRangeSet"* %0) #6
  %2 = bitcast %"class.blink::FontDataForRangeSet"* %0 to i8*
  tail call void @free(i8* %2) #6
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.241* @_ZNK3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.298"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.298", %"class.WTF::Vector.298"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector.298", %"class.WTF::Vector.298"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.241*, %class.scoped_refptr.241** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %24, i64 %25
  ret %class.scoped_refptr.241* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink9Character17HasDefiniteScriptEi(i32) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKjRjEENS_18HashTableAddResultIS7_jEEOT0_OT1_(%"class.WTF::HashTable.238"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.238"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %11, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %75, label %35

35:                                               ; preds = %10
  %36 = xor i32 %29, -1
  %37 = lshr i32 %27, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %35, %56
  %50 = phi i32 [ %33, %35 ], [ %64, %56 ]
  %51 = phi i32* [ %32, %35 ], [ %63, %56 ]
  %52 = phi i32* [ null, %35 ], [ %58, %56 ]
  %53 = phi i64 [ %31, %35 ], [ %62, %56 ]
  %54 = phi i64 [ 0, %35 ], [ %60, %56 ]
  %55 = icmp eq i32 %50, %16
  br i1 %55, label %89, label %56

56:                                               ; preds = %49
  %57 = icmp eq i32 %50, -1
  %58 = select i1 %57, i32* %51, i32* %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %48, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %15
  %63 = getelementptr inbounds i32, i32* %11, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %56
  %67 = icmp eq i32* %58, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %66
  store i32 0, i32* %58, align 4
  %69 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, 2147483647
  %72 = and i32 %71, 2147483647
  %73 = and i32 %70, -2147483648
  %74 = or i32 %72, %73
  store i32 %74, i32* %69, align 8
  br label %75

75:                                               ; preds = %10, %66, %68
  %76 = phi i32* [ %58, %68 ], [ %63, %66 ], [ %32, %10 ]
  %77 = load i32, i32* %2, align 4
  store i32 %77, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, %80
  %84 = shl i32 %83, 1
  %85 = load i32, i32* %12, align 8
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %75
  %88 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.238"* %0, i32* %76)
  br label %89

89:                                               ; preds = %49, %75, %87
  %90 = phi i8 [ 1, %75 ], [ 1, %87 ], [ 0, %49 ]
  %91 = phi i32* [ %76, %75 ], [ %88, %87 ], [ %51, %49 ]
  %92 = insertvalue { i32*, i8 } undef, i32* %91, 0
  %93 = insertvalue { i32*, i8 } %92, i8 %90, 1
  ret { i32*, i8 } %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.238"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #6
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #6
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #6
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #6
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #6
  %36 = bitcast i8* %35 to i32*
  %37 = call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE8RehashToEPjjS8_(%"class.WTF::HashTable.238"* %0, i32* %36, i32 %32, i32* %1) #6
  ret i32* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE8RehashToEPjjS8_(%"class.WTF::HashTable.238"*, i32*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.238"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i32*, i32** %9, align 8
  %17 = ptrtoint i32* %16 to i64
  br label %31

18:                                               ; preds = %112
  %19 = bitcast %"class.WTF::HashTable.238"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %113, %18 ]
  %23 = phi i32* [ null, %10 ], [ %116, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #6
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i32* %23

31:                                               ; preds = %13, %112
  %32 = phi i64 [ %17, %13 ], [ %113, %112 ]
  %33 = phi i32 [ %7, %13 ], [ %114, %112 ]
  %34 = phi i32* [ %16, %13 ], [ %115, %112 ]
  %35 = phi i32* [ null, %13 ], [ %116, %112 ]
  %36 = phi i32 [ 0, %13 ], [ %117, %112 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  %41 = icmp ult i32 %40, 2
  br i1 %41, label %112, label %42

42:                                               ; preds = %31
  %43 = shl i32 %39, 15
  %44 = xor i32 %43, -1
  %45 = add i32 %39, %44
  %46 = lshr i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = mul i32 %47, 9
  %49 = lshr i32 %48, 6
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 11
  %52 = xor i32 %51, -1
  %53 = add i32 %50, %52
  %54 = lshr i32 %53, 16
  %55 = xor i32 %54, %53
  %56 = and i32 %55, %14
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %1, i64 %57
  %59 = ptrtoint i32* %58 to i64
  %60 = load i32, i32* %58, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %79, label %62

62:                                               ; preds = %42
  %63 = xor i32 %55, -1
  %64 = lshr i32 %53, 23
  %65 = add i32 %64, %63
  %66 = shl i32 %65, 12
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 7
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 2
  %71 = xor i32 %70, %69
  %72 = lshr i32 %71, 20
  %73 = xor i32 %72, %71
  %74 = or i32 %73, 1
  %75 = zext i32 %74 to i64
  br label %85

76:                                               ; preds = %92
  %77 = ptrtoint i32* %99 to i64
  %78 = inttoptr i64 %94 to i32*
  br label %79

79:                                               ; preds = %76, %42
  %80 = phi i64 [ %77, %76 ], [ %59, %42 ]
  %81 = phi i32* [ %78, %76 ], [ null, %42 ]
  %82 = icmp eq i32* %81, null
  %83 = ptrtoint i32* %81 to i64
  %84 = select i1 %82, i64 %80, i64 %83
  br label %103

85:                                               ; preds = %92, %62
  %86 = phi i64 [ 0, %62 ], [ %94, %92 ]
  %87 = phi i32 [ %60, %62 ], [ %101, %92 ]
  %88 = phi i64 [ %59, %62 ], [ %100, %92 ]
  %89 = phi i64 [ %57, %62 ], [ %98, %92 ]
  %90 = phi i64 [ 0, %62 ], [ %96, %92 ]
  %91 = icmp eq i32 %87, %39
  br i1 %91, label %103, label %92

92:                                               ; preds = %85
  %93 = icmp eq i32 %87, -1
  %94 = select i1 %93, i64 %88, i64 %86
  %95 = icmp eq i64 %90, 0
  %96 = select i1 %95, i64 %75, i64 %90
  %97 = add i64 %96, %89
  %98 = and i64 %97, %15
  %99 = getelementptr inbounds i32, i32* %1, i64 %98
  %100 = ptrtoint i32* %99 to i64
  %101 = load i32, i32* %99, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %76, label %85

103:                                              ; preds = %85, %79
  %104 = phi i64 [ %84, %79 ], [ %88, %85 ]
  %105 = inttoptr i64 %104 to i32*
  store i32 %39, i32* %105, align 4
  %106 = load i32*, i32** %9, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %37
  %108 = icmp eq i32* %107, %3
  %109 = select i1 %108, i32* %105, i32* %35
  %110 = load i32, i32* %6, align 8
  %111 = ptrtoint i32* %106 to i64
  br label %112

112:                                              ; preds = %31, %103
  %113 = phi i64 [ %32, %31 ], [ %111, %103 ]
  %114 = phi i32 [ %33, %31 ], [ %110, %103 ]
  %115 = phi i32* [ %34, %31 ], [ %106, %103 ]
  %116 = phi i32* [ %35, %31 ], [ %109, %103 ]
  %117 = add i32 %36, 1
  %118 = icmp eq i32 %117, %114
  br i1 %118, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.264"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.264", %"class.WTF::Vector.264"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector.264", %"class.WTF::Vector.264"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.252"*, %class.scoped_refptr.241* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.252", %"class.WTF::Vector.252"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.252", %"class.WTF::Vector.252"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr.241*, %class.scoped_refptr.241** %6, align 8
  %8 = icmp ugt %class.scoped_refptr.241* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %7, i64 %10
  %12 = icmp ugt %class.scoped_refptr.241* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.252", %"class.WTF::Vector.252"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %class.scoped_refptr.241* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink19FontDataForRangeSetEEEEmm(i64 %26) #6
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink19FontDataForRangeSetEEEEPKcv, i64 0, i64 0)) #6
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.252"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %class.scoped_refptr.241*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %class.scoped_refptr.241*, %class.scoped_refptr.241** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %class.scoped_refptr.241* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %class.scoped_refptr.241* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #6
  %47 = bitcast %"class.WTF::Vector.252"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #6
  %51 = bitcast %"class.WTF::Vector.252"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %class.scoped_refptr.241*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %class.scoped_refptr.241* %1 to i64
  %56 = ptrtoint %class.scoped_refptr.241* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.252", %"class.WTF::Vector.252"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %class.scoped_refptr.241* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink19FontDataForRangeSetEEEEmm(i64 %71) #6
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink19FontDataForRangeSetEEEEPKcv, i64 0, i64 0)) #6
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.252"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %class.scoped_refptr.241*, %class.scoped_refptr.241** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %class.scoped_refptr.241* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %class.scoped_refptr.241* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #6
  %87 = bitcast %"class.WTF::Vector.252"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #6
  %91 = bitcast %"class.WTF::Vector.252"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %class.scoped_refptr.241*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %class.scoped_refptr.241* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %class.scoped_refptr.241* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %class.scoped_refptr.241* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %101, i64 0, i32 0
  %105 = load %"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"** %104, align 8
  %106 = getelementptr inbounds %class.scoped_refptr.241, %class.scoped_refptr.241* %100, i64 %103, i32 0
  store %"class.blink::FontDataForRangeSet"* %105, %"class.blink::FontDataForRangeSet"** %106, align 8
  %107 = icmp eq %"class.blink::FontDataForRangeSet"* %105, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %105, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %109) #6
  br label %110

110:                                              ; preds = %99, %108
  %111 = load i32, i32* %3, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink19FontDataForRangeSetEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiRiEENS_18HashTableAddResultIS7_iEEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi(%"class.WTF::HashTable"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %11, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %75, label %35

35:                                               ; preds = %10
  %36 = xor i32 %29, -1
  %37 = lshr i32 %27, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %35, %56
  %50 = phi i32 [ %33, %35 ], [ %64, %56 ]
  %51 = phi i32* [ %32, %35 ], [ %63, %56 ]
  %52 = phi i32* [ null, %35 ], [ %58, %56 ]
  %53 = phi i64 [ %31, %35 ], [ %62, %56 ]
  %54 = phi i64 [ 0, %35 ], [ %60, %56 ]
  %55 = icmp eq i32 %50, %16
  br i1 %55, label %89, label %56

56:                                               ; preds = %49
  %57 = icmp eq i32 %50, -1
  %58 = select i1 %57, i32* %51, i32* %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %48, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %15
  %63 = getelementptr inbounds i32, i32* %11, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %56
  %67 = icmp eq i32* %58, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %66
  store i32 0, i32* %58, align 4
  %69 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, 2147483647
  %72 = and i32 %71, 2147483647
  %73 = and i32 %70, -2147483648
  %74 = or i32 %72, %73
  store i32 %74, i32* %69, align 8
  br label %75

75:                                               ; preds = %10, %66, %68
  %76 = phi i32* [ %58, %68 ], [ %63, %66 ], [ %32, %10 ]
  %77 = load i32, i32* %2, align 4
  store i32 %77, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, %80
  %84 = shl i32 %83, 1
  %85 = load i32, i32* %12, align 8
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %75
  %88 = tail call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi(%"class.WTF::HashTable"* %0, i32* %76)
  br label %89

89:                                               ; preds = %49, %75, %87
  %90 = phi i8 [ 1, %75 ], [ 1, %87 ], [ 0, %49 ]
  %91 = phi i32* [ %76, %75 ], [ %88, %87 ], [ %51, %49 ]
  %92 = insertvalue { i32*, i8 } undef, i32* %91, 0
  %93 = insertvalue { i32*, i8 } %92, i8 %90, 1
  ret { i32*, i8 } %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi(%"class.WTF::HashTable"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #6
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #6
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #6
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #6
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #6
  %36 = bitcast i8* %35 to i32*
  %37 = call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_(%"class.WTF::HashTable"* %0, i32* %36, i32 %32, i32* %1) #6
  ret i32* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_(%"class.WTF::HashTable"*, i32*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i32*, i32** %9, align 8
  %17 = ptrtoint i32* %16 to i64
  br label %31

18:                                               ; preds = %112
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %113, %18 ]
  %23 = phi i32* [ null, %10 ], [ %116, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #6
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i32* %23

31:                                               ; preds = %13, %112
  %32 = phi i64 [ %17, %13 ], [ %113, %112 ]
  %33 = phi i32 [ %7, %13 ], [ %114, %112 ]
  %34 = phi i32* [ %16, %13 ], [ %115, %112 ]
  %35 = phi i32* [ null, %13 ], [ %116, %112 ]
  %36 = phi i32 [ 0, %13 ], [ %117, %112 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  %41 = icmp ult i32 %40, 2
  br i1 %41, label %112, label %42

42:                                               ; preds = %31
  %43 = shl i32 %39, 15
  %44 = xor i32 %43, -1
  %45 = add i32 %39, %44
  %46 = lshr i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = mul i32 %47, 9
  %49 = lshr i32 %48, 6
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 11
  %52 = xor i32 %51, -1
  %53 = add i32 %50, %52
  %54 = lshr i32 %53, 16
  %55 = xor i32 %54, %53
  %56 = and i32 %55, %14
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %1, i64 %57
  %59 = ptrtoint i32* %58 to i64
  %60 = load i32, i32* %58, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %79, label %62

62:                                               ; preds = %42
  %63 = xor i32 %55, -1
  %64 = lshr i32 %53, 23
  %65 = add i32 %64, %63
  %66 = shl i32 %65, 12
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 7
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 2
  %71 = xor i32 %70, %69
  %72 = lshr i32 %71, 20
  %73 = xor i32 %72, %71
  %74 = or i32 %73, 1
  %75 = zext i32 %74 to i64
  br label %85

76:                                               ; preds = %92
  %77 = ptrtoint i32* %99 to i64
  %78 = inttoptr i64 %94 to i32*
  br label %79

79:                                               ; preds = %76, %42
  %80 = phi i64 [ %77, %76 ], [ %59, %42 ]
  %81 = phi i32* [ %78, %76 ], [ null, %42 ]
  %82 = icmp eq i32* %81, null
  %83 = ptrtoint i32* %81 to i64
  %84 = select i1 %82, i64 %80, i64 %83
  br label %103

85:                                               ; preds = %92, %62
  %86 = phi i64 [ 0, %62 ], [ %94, %92 ]
  %87 = phi i32 [ %60, %62 ], [ %101, %92 ]
  %88 = phi i64 [ %59, %62 ], [ %100, %92 ]
  %89 = phi i64 [ %57, %62 ], [ %98, %92 ]
  %90 = phi i64 [ 0, %62 ], [ %96, %92 ]
  %91 = icmp eq i32 %87, %39
  br i1 %91, label %103, label %92

92:                                               ; preds = %85
  %93 = icmp eq i32 %87, -1
  %94 = select i1 %93, i64 %88, i64 %86
  %95 = icmp eq i64 %90, 0
  %96 = select i1 %95, i64 %75, i64 %90
  %97 = add i64 %96, %89
  %98 = and i64 %97, %15
  %99 = getelementptr inbounds i32, i32* %1, i64 %98
  %100 = ptrtoint i32* %99 to i64
  %101 = load i32, i32* %99, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %76, label %85

103:                                              ; preds = %85, %79
  %104 = phi i64 [ %84, %79 ], [ %88, %85 ]
  %105 = inttoptr i64 %104 to i32*
  store i32 %39, i32* %105, align 4
  %106 = load i32*, i32** %9, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %37
  %108 = icmp eq i32* %107, %3
  %109 = select i1 %108, i32* %105, i32* %35
  %110 = load i32, i32* %6, align 8
  %111 = ptrtoint i32* %106 to i64
  br label %112

112:                                              ; preds = %31, %103
  %113 = phi i64 [ %32, %31 ], [ %111, %103 ]
  %114 = phi i32 [ %33, %31 ], [ %110, %103 ]
  %115 = phi i32* [ %34, %31 ], [ %106, %103 ]
  %116 = phi i32* [ %35, %31 ], [ %109, %103 ]
  %117 = add i32 %36, 1
  %118 = icmp eq i32 %117, %114
  br i1 %118, label %18, label %31
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
