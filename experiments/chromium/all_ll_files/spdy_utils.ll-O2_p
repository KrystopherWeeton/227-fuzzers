; ModuleID = '../../net/third_party/quiche/src/quic/core/http/spdy_utils.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/http/spdy_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.spdy::Http2HeaderBlock" = type { %"class.quiche::QuicheLinkedHashMap", %"class.spdy::SpdyHeaderStorage", i64, i64 }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"struct.std::__1::pair"**, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"struct.std::__1::pair" = type { %"class.absl::string_view", %"class.std::__1::__list_iterator" }
%"class.absl::string_view" = type { i8*, i64 }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.spdy::SpdyHeaderStorage" = type { %"class.spdy::SpdySimpleArena" }
%"class.spdy::SpdySimpleArena" = type { i64, %"class.std::__1::vector", %"class.spdy::SpdySimpleArena::Status" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spdy::SpdySimpleArena::Block"*, %"struct.spdy::SpdySimpleArena::Block"*, %"class.std::__1::__compressed_pair.10" }
%"struct.spdy::SpdySimpleArena::Block" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i8* }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.spdy::SpdySimpleArena::Block"* }
%"class.spdy::SpdySimpleArena::Status" = type { i64 }
%"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer" = type { i8 }
%"class.spdy::Http2HeaderBlock::iterator" = type { %"class.std::__1::__list_const_iterator" }
%"class.std::__1::__list_const_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.absl::string_view"*, %"class.absl::string_view"*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.absl::string_view"* }
%"class.absl::strings_internal::Splitter" = type <{ %"class.absl::string_view", %"class.absl::ByChar", %"struct.absl::AllowEmpty", [6 x i8] }>
%"class.absl::ByChar" = type { i8 }
%"struct.absl::AllowEmpty" = type { i8 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.std::__1::pair.45" }
%"struct.std::__1::pair.45" = type { %"class.absl::string_view", %"class.spdy::Http2HeaderBlock::HeaderValue" }
%"class.spdy::Http2HeaderBlock::HeaderValue" = type { %"class.spdy::SpdyHeaderStorage"*, %"class.std::__1::vector.16", %"struct.std::__1::pair.15", i64, i64 }
%"struct.std::__1::pair.15" = type { %"class.absl::string_view", %"class.absl::string_view" }
%"class.quic::QuicHeaderList" = type { %"class.spdy::SpdyHeadersHandlerInterface", %"class.quiche::QuicheCircularDeque", i64, i64, i64, i64 }
%"class.spdy::SpdyHeadersHandlerInterface" = type { i32 (...)** }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, 3, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, 3, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::AllocatorAndData" = type { %"struct.std::__1::pair.25"*, i64 }
%"struct.std::__1::pair.25" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.spdy::Http2HeaderBlock::ValueProxy" = type <{ %"class.spdy::Http2HeaderBlock"*, %"class.std::__1::__list_iterator", %"class.absl::string_view", i64*, i8, [7 x i8] }>
%"class.std::__1::allocator.29" = type { i8 }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"struct.spdy::Http2HeaderBlock::StringPieceCaseHash" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::array" = type { [16 x %struct.raw_view] }
%struct.raw_view = type { i8*, i64 }
%"class.absl::strings_internal::SplitIterator" = type <{ i64, i32, [4 x i8], %"class.absl::string_view", %"class.absl::strings_internal::Splitter"*, %"class.absl::ByChar", %"struct.absl::AllowEmpty", [6 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_8iteratorERSH_ = comdat any

$_ZNK4spdy16Http2HeaderBlock19StringPieceCaseHashclEN4absl11string_viewE = comdat any

$_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm = comdat any

$_ZNK4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_14const_iteratorERSH_ = comdat any

$_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_ = comdat any

$_ZNSt3__16vectorIN4absl11string_viewENS_9allocatorIS2_EEE6insertIPZNKS1_16strings_internal8SplitterINS1_6ByCharENS1_10AllowEmptyES2_E18ConvertToContainerIS5_S2_Lb0EEclERKSB_E8raw_viewEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISJ_E9referenceEEE5valueENS_11__wrap_iterIPS2_EEE4typeENSN_IPKS2_EESJ_SJ_ = comdat any

$_ZN4base8internal12ContainsImplIN4spdy16Http2HeaderBlockEA15_cEEDTnecldtfp_4findfp0_Ecldtfp_3endEERKT_RKT0_NS0_12priority_tagILm1EEE = comdat any

@.str = private unnamed_addr constant [15 x i8] c"content-length\00", align 1
@_ZN4quic21kFinalOffsetHeaderKeyE = external local_unnamed_addr constant i8*, align 8
@.str.1 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c":method\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"://\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c":scheme\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c":authority\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c":path\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"datagram-flow-id\00", align 1
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8
@_ZN4absl14ascii_internal13kPropertyBitsE = external local_unnamed_addr constant [256 x i8], align 16
@.str.11 = private unnamed_addr constant [26 x i8] c"absl::string_view::substr\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic9SpdyUtils31ExtractContentLengthFromHeadersEPlPN4spdy16Http2HeaderBlockE(i64* nocapture, %"class.spdy::Http2HeaderBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", align 1
  %4 = alloca i64, align 8
  %5 = alloca %"class.absl::string_view", align 8
  %6 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %7 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %8 = alloca %"class.std::__1::vector.16", align 8
  %9 = alloca %"class.absl::strings_internal::Splitter", align 16
  %10 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #5
  %11 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %6, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__list_node_base"*), %"struct.std::__1::__list_node_base"** %11, align 8
  %12 = bitcast %"class.absl::string_view"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12)
  %13 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8** %13, align 8, !noalias !2
  %14 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 1
  store i64 14, i64* %14, align 8, !noalias !2
  %15 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = call { i8*, %"struct.std::__1::pair"** } @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set"* %15, %"class.absl::string_view"* nonnull dereferenceable(16) %5) #5, !noalias !2
  %17 = extractvalue { i8*, %"struct.std::__1::pair"** } %16, 0
  %18 = extractvalue { i8*, %"struct.std::__1::pair"** } %16, 1
  %19 = icmp eq i8* %17, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %2
  %21 = load i8, i8* %17, align 1
  %22 = icmp sgt i8 %21, -1
  br i1 %22, label %26, label %23, !prof !5

23:                                               ; preds = %20
  call void @llvm.trap() #5
  unreachable

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %30

26:                                               ; preds = %20
  %27 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 1, i32 0
  %29 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %28, align 8
  br label %30

30:                                               ; preds = %24, %26
  %31 = phi %"struct.std::__1::__list_node_base"* [ %25, %24 ], [ %29, %26 ]
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %6, %"struct.std::__1::__list_node_base"* %31) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12)
  %32 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #5
  %33 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %7, %"struct.std::__1::__list_node_base"* %33) #5
  %34 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %35 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %7, i64 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__list_node_base"* %34, %36
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #5
  br i1 %37, label %101, label %38

38:                                               ; preds = %30
  %39 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %6 to %"struct.std::__1::__list_node"**
  %40 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %40, i64 0, i32 1, i32 1
  %42 = call dereferenceable(32) %"struct.std::__1::pair.15"* @_ZNK4spdy16Http2HeaderBlock11HeaderValue7as_pairEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %41) #5
  %43 = getelementptr inbounds %"struct.std::__1::pair.15", %"struct.std::__1::pair.15"* %42, i64 0, i32 1, i32 0
  %44 = bitcast i8** %43 to <2 x i64>*
  %45 = load <2 x i64>, <2 x i64>* %44, align 8
  %46 = bitcast %"class.std::__1::vector.16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #5
  %47 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %8, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %8, i64 0, i32 0, i32 1
  %49 = bitcast %"class.absl::strings_internal::Splitter"* %9 to i8*
  %50 = bitcast %"class.std::__1::vector.16"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #5
  %51 = bitcast %"class.absl::strings_internal::Splitter"* %9 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %51, align 16, !alias.scope !6
  %52 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %9, i64 0, i32 1, i32 0
  store i8 0, i8* %52, align 16, !alias.scope !6
  %53 = getelementptr inbounds %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %53) #5, !noalias !9
  call void @_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_(%"class.std::__1::vector.16"* nonnull sret %8, %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* nonnull %3, %"class.absl::strings_internal::Splitter"* nonnull dereferenceable(24) %9) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %53) #5, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #5
  %54 = load %"class.absl::string_view"*, %"class.absl::string_view"** %47, align 8
  %55 = load %"class.absl::string_view"*, %"class.absl::string_view"** %48, align 8
  %56 = icmp eq %"class.absl::string_view"* %54, %55
  br i1 %56, label %92, label %57

57:                                               ; preds = %38
  %58 = bitcast i64* %4 to i8*
  br label %59

59:                                               ; preds = %57, %86
  %60 = phi %"class.absl::string_view"* [ %54, %57 ], [ %87, %86 ]
  %61 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %60, i64 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %60, i64 0, i32 1
  %64 = load i64, i64* %63, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #5
  store i64 -6148914691236517206, i64* %4, align 8
  %65 = call zeroext i1 @_ZN4absl16numbers_internal18safe_strtou64_baseENS_11string_viewEPmi(i8* %62, i64 %64, i64* nonnull %4, i32 10) #5
  %66 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #5
  br i1 %65, label %67, label %89

67:                                               ; preds = %59
  %68 = load i8*, i8** %61, align 8
  %69 = load i64, i64* %63, align 8
  %70 = getelementptr inbounds i8, i8* %68, i64 %69
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %80, label %74

72:                                               ; preds = %74
  %73 = icmp eq i8* %79, %70
  br i1 %73, label %80, label %74

74:                                               ; preds = %67, %72
  %75 = phi i8* [ %79, %72 ], [ %68, %67 ]
  %76 = load i8, i8* %75, align 1
  %77 = add i8 %76, -48
  %78 = icmp ult i8 %77, 10
  %79 = getelementptr inbounds i8, i8* %75, i64 1
  br i1 %78, label %72, label %89

80:                                               ; preds = %72, %67
  %81 = load i64, i64* %0, align 8
  %82 = icmp slt i64 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  store i64 %66, i64* %0, align 8
  br label %86

84:                                               ; preds = %80
  %85 = icmp eq i64 %66, %81
  br i1 %85, label %86, label %89

86:                                               ; preds = %84, %83
  %87 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %60, i64 1
  %88 = icmp eq %"class.absl::string_view"* %87, %55
  br i1 %88, label %89, label %59

89:                                               ; preds = %86, %84, %59, %74
  %90 = phi i1 [ false, %74 ], [ true, %86 ], [ false, %84 ], [ false, %59 ]
  %91 = load %"class.absl::string_view"*, %"class.absl::string_view"** %47, align 8
  br label %92

92:                                               ; preds = %89, %38
  %93 = phi %"class.absl::string_view"* [ %91, %89 ], [ %54, %38 ]
  %94 = phi i1 [ %90, %89 ], [ true, %38 ]
  %95 = icmp eq %"class.absl::string_view"* %93, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = ptrtoint %"class.absl::string_view"* %93 to i64
  %98 = bitcast %"class.absl::string_view"** %48 to i64*
  store i64 %97, i64* %98, align 8
  %99 = bitcast %"class.absl::string_view"* %93 to i8*
  call void @_ZdlPv(i8* %99) #15
  br label %100

100:                                              ; preds = %92, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #5
  br label %101

101:                                              ; preds = %30, %100
  %102 = phi i1 [ %94, %100 ], [ false, %30 ]
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #5
  ret i1 %102
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic9SpdyUtils22CopyAndValidateHeadersERKNS_14QuicHeaderListEPlPN4spdy16Http2HeaderBlockE(%"class.quic::QuicHeaderList"* dereferenceable(72), i64* nocapture, %"class.spdy::Http2HeaderBlock"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %0, i64 0, i32 1, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %0, i64 0, i32 1, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %93, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %0, i64 0, i32 1, i32 2, i32 0
  %11 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %0, i64 0, i32 1, i32 2, i32 1
  br label %12

12:                                               ; preds = %9, %82
  %13 = phi i64 [ %5, %9 ], [ %91, %82 ]
  %14 = load %"struct.std::__1::pair.25"*, %"struct.std::__1::pair.25"** %10, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %14, i64 %13
  %16 = bitcast %"struct.std::__1::pair.25"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %14, i64 %13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  br label %25

23:                                               ; preds = %12
  %24 = zext i8 %18 to i64
  br label %25

25:                                               ; preds = %20, %23
  %26 = phi i64 [ %22, %20 ], [ %24, %23 ]
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %98, label %28

28:                                               ; preds = %25
  br i1 %19, label %32, label %29

29:                                               ; preds = %28
  %30 = zext i8 %18 to i64
  %31 = ptrtoint %"struct.std::__1::pair.25"* %15 to i64
  br label %39

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::pair.25"* %15 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %14, i64 %13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp sgt i64 %36, -1
  br i1 %37, label %39, label %38, !prof !5

38:                                               ; preds = %32
  tail call void @llvm.trap() #5
  unreachable

39:                                               ; preds = %29, %32
  %40 = phi i64 [ %34, %32 ], [ %31, %29 ]
  %41 = phi i64 [ %36, %32 ], [ %30, %29 ]
  %42 = inttoptr i64 %40 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 %41
  %44 = icmp eq i64 %41, 0
  br i1 %44, label %53, label %47

45:                                               ; preds = %47
  %46 = icmp eq i8* %52, %43
  br i1 %46, label %53, label %47

47:                                               ; preds = %39, %45
  %48 = phi i8* [ %52, %45 ], [ %42, %39 ]
  %49 = load i8, i8* %48, align 1
  %50 = add i8 %49, -65
  %51 = icmp ult i8 %50, 26
  %52 = getelementptr inbounds i8, i8* %48, i64 1
  br i1 %51, label %98, label %45

53:                                               ; preds = %45, %39
  br i1 %19, label %57, label %54

54:                                               ; preds = %53
  %55 = zext i8 %18 to i64
  %56 = ptrtoint %"struct.std::__1::pair.25"* %15 to i64
  br label %64

57:                                               ; preds = %53
  %58 = bitcast %"struct.std::__1::pair.25"* %15 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %14, i64 %13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = icmp sgt i64 %61, -1
  br i1 %62, label %64, label %63, !prof !5

63:                                               ; preds = %57
  tail call void @llvm.trap() #5
  unreachable

64:                                               ; preds = %54, %57
  %65 = phi i64 [ %59, %57 ], [ %56, %54 ]
  %66 = phi i64 [ %61, %57 ], [ %55, %54 ]
  %67 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %14, i64 %13, i32 1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %64
  %73 = zext i8 %70 to i64
  %74 = ptrtoint %"class.std::__1::basic_string"* %67 to i64
  br label %82

75:                                               ; preds = %64
  %76 = bitcast %"class.std::__1::basic_string"* %67 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %14, i64 %13, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = icmp sgt i64 %79, -1
  br i1 %80, label %82, label %81, !prof !5

81:                                               ; preds = %75
  tail call void @llvm.trap() #5
  unreachable

82:                                               ; preds = %72, %75
  %83 = phi i64 [ %77, %75 ], [ %74, %72 ]
  %84 = phi i64 [ %79, %75 ], [ %73, %72 ]
  %85 = inttoptr i64 %65 to i8*
  %86 = inttoptr i64 %83 to i8*
  tail call void @_ZN4spdy16Http2HeaderBlock22AppendValueOrAddHeaderEN4absl11string_viewES2_(%"class.spdy::Http2HeaderBlock"* %2, i8* %85, i64 %66, i8* %86, i64 %84) #5
  %87 = load i64, i64* %11, align 8
  %88 = add i64 %87, -1
  %89 = icmp eq i64 %88, %13
  %90 = add i64 %13, 1
  %91 = select i1 %89, i64 0, i64 %90
  %92 = icmp eq i64 %91, %7
  br i1 %92, label %93, label %12

93:                                               ; preds = %82, %3
  %94 = tail call zeroext i1 @_ZN4base8internal12ContainsImplIN4spdy16Http2HeaderBlockEA15_cEEDTnecldtfp_4findfp0_Ecldtfp_3endEERKT_RKT0_NS0_12priority_tagILm1EEE(%"class.spdy::Http2HeaderBlock"* dereferenceable(120) %2, [15 x i8]* nonnull dereferenceable(15) @.str) #5
  br i1 %94, label %95, label %97

95:                                               ; preds = %93
  %96 = tail call zeroext i1 @_ZN4quic9SpdyUtils31ExtractContentLengthFromHeadersEPlPN4spdy16Http2HeaderBlockE(i64* %1, %"class.spdy::Http2HeaderBlock"* %2)
  br i1 %96, label %97, label %98

97:                                               ; preds = %95, %93
  br label %98

98:                                               ; preds = %25, %47, %95, %97
  %99 = phi i1 [ true, %97 ], [ false, %95 ], [ false, %47 ], [ false, %25 ]
  ret i1 %99
}

declare void @_ZN4spdy16Http2HeaderBlock22AppendValueOrAddHeaderEN4absl11string_viewES2_(%"class.spdy::Http2HeaderBlock"*, i8*, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic9SpdyUtils23CopyAndValidateTrailersERKNS_14QuicHeaderListEbPmPN4spdy16Http2HeaderBlockE(%"class.quic::QuicHeaderList"* dereferenceable(72), i1 zeroext, i64* nocapture, %"class.spdy::Http2HeaderBlock"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %0, i64 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %0, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %153, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %0, i64 0, i32 1, i32 2, i32 0
  %13 = load i8*, i8** @_ZN4quic21kFinalOffsetHeaderKeyE, align 8
  %14 = bitcast i64* %5 to i8*
  %15 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %0, i64 0, i32 1, i32 2, i32 1
  br label %16

16:                                               ; preds = %11, %145
  %17 = phi i8 [ 0, %11 ], [ %146, %145 ]
  %18 = phi i64 [ %7, %11 ], [ %151, %145 ]
  %19 = load %"struct.std::__1::pair.25"*, %"struct.std::__1::pair.25"** %12, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %19, i64 %18
  %21 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %20, i64 0, i32 0
  %22 = and i8 %17, 1
  %23 = icmp eq i8 %22, 0
  %24 = and i1 %23, %1
  br i1 %24, label %27, label %25

25:                                               ; preds = %16
  %26 = bitcast %"struct.std::__1::pair.25"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %63

27:                                               ; preds = %16
  %28 = call i64 @strlen(i8* %13) #5
  %29 = bitcast %"struct.std::__1::pair.25"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %19, i64 %18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %31 to i64
  %36 = select i1 %32, i64 %34, i64 %35
  %37 = icmp eq i64 %28, %36
  br i1 %37, label %38, label %63

38:                                               ; preds = %27
  %39 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %21, i64 0, i64 -1, i8* %13, i64 %28) #5
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %63

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %19, i64 %18, i32 1
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = zext i8 %45 to i64
  %49 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %57

50:                                               ; preds = %41
  %51 = bitcast %"class.std::__1::basic_string"* %42 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %19, i64 %18, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp sgt i64 %54, -1
  br i1 %55, label %57, label %56, !prof !5

56:                                               ; preds = %50
  call void @llvm.trap() #5
  unreachable

57:                                               ; preds = %47, %50
  %58 = phi i64 [ %52, %50 ], [ %49, %47 ]
  %59 = phi i64 [ %54, %50 ], [ %48, %47 ]
  %60 = inttoptr i64 %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  store i64 -6148914691236517206, i64* %5, align 8
  %61 = call zeroext i1 @_ZN4absl16numbers_internal18safe_strtou64_baseENS_11string_viewEPmi(i8* %60, i64 %59, i64* nonnull %5, i32 10) #5
  %62 = load i64, i64* %5, align 8
  store i64 %62, i64* %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  br i1 %61, label %145, label %63

63:                                               ; preds = %25, %27, %38, %57
  %64 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %26, %25 ], [ %29, %27 ], [ %29, %38 ], [ %29, %57 ]
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %19, i64 %18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  br label %73

71:                                               ; preds = %63
  %72 = zext i8 %66 to i64
  br label %73

73:                                               ; preds = %68, %71
  %74 = phi i64 [ %70, %68 ], [ %72, %71 ]
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %159, label %76

76:                                               ; preds = %73
  br i1 %67, label %77, label %80

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  br label %82

80:                                               ; preds = %76
  %81 = bitcast %"struct.std::__1::pair.25"* %20 to i8*
  br label %82

82:                                               ; preds = %77, %80
  %83 = phi i8* [ %79, %77 ], [ %81, %80 ]
  %84 = load i8, i8* %83, align 1
  %85 = icmp eq i8 %84, 58
  br i1 %85, label %159, label %86

86:                                               ; preds = %82
  br i1 %67, label %90, label %87

87:                                               ; preds = %86
  %88 = zext i8 %66 to i64
  %89 = ptrtoint %"struct.std::__1::pair.25"* %20 to i64
  br label %97

90:                                               ; preds = %86
  %91 = bitcast %"struct.std::__1::pair.25"* %20 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %19, i64 %18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = icmp sgt i64 %94, -1
  br i1 %95, label %97, label %96, !prof !5

96:                                               ; preds = %90
  call void @llvm.trap() #5
  unreachable

97:                                               ; preds = %87, %90
  %98 = phi i64 [ %92, %90 ], [ %89, %87 ]
  %99 = phi i64 [ %94, %90 ], [ %88, %87 ]
  %100 = inttoptr i64 %98 to i8*
  %101 = getelementptr inbounds i8, i8* %100, i64 %99
  %102 = icmp eq i64 %99, 0
  br i1 %102, label %111, label %105

103:                                              ; preds = %105
  %104 = icmp eq i8* %110, %101
  br i1 %104, label %111, label %105

105:                                              ; preds = %97, %103
  %106 = phi i8* [ %110, %103 ], [ %100, %97 ]
  %107 = load i8, i8* %106, align 1
  %108 = add i8 %107, -65
  %109 = icmp ult i8 %108, 26
  %110 = getelementptr inbounds i8, i8* %106, i64 1
  br i1 %109, label %159, label %103

111:                                              ; preds = %103, %97
  br i1 %67, label %115, label %112

112:                                              ; preds = %111
  %113 = zext i8 %66 to i64
  %114 = ptrtoint %"struct.std::__1::pair.25"* %20 to i64
  br label %122

115:                                              ; preds = %111
  %116 = bitcast %"struct.std::__1::pair.25"* %20 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %19, i64 %18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = icmp sgt i64 %119, -1
  br i1 %120, label %122, label %121, !prof !5

121:                                              ; preds = %115
  call void @llvm.trap() #5
  unreachable

122:                                              ; preds = %112, %115
  %123 = phi i64 [ %117, %115 ], [ %114, %112 ]
  %124 = phi i64 [ %119, %115 ], [ %113, %112 ]
  %125 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %19, i64 %18, i32 1
  %126 = bitcast %"class.std::__1::basic_string"* %125 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %122
  %131 = zext i8 %128 to i64
  %132 = ptrtoint %"class.std::__1::basic_string"* %125 to i64
  br label %140

133:                                              ; preds = %122
  %134 = bitcast %"class.std::__1::basic_string"* %125 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %19, i64 %18, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = icmp sgt i64 %137, -1
  br i1 %138, label %140, label %139, !prof !5

139:                                              ; preds = %133
  call void @llvm.trap() #5
  unreachable

140:                                              ; preds = %130, %133
  %141 = phi i64 [ %135, %133 ], [ %132, %130 ]
  %142 = phi i64 [ %137, %133 ], [ %131, %130 ]
  %143 = inttoptr i64 %123 to i8*
  %144 = inttoptr i64 %141 to i8*
  call void @_ZN4spdy16Http2HeaderBlock22AppendValueOrAddHeaderEN4absl11string_viewES2_(%"class.spdy::Http2HeaderBlock"* %3, i8* %143, i64 %124, i8* %144, i64 %142) #5
  br label %145

145:                                              ; preds = %140, %57
  %146 = phi i8 [ %17, %140 ], [ 1, %57 ]
  %147 = load i64, i64* %15, align 8
  %148 = add i64 %147, -1
  %149 = icmp eq i64 %148, %18
  %150 = add i64 %18, 1
  %151 = select i1 %149, i64 0, i64 %150
  %152 = icmp eq i64 %151, %9
  br i1 %152, label %153, label %16

153:                                              ; preds = %145, %4
  %154 = phi i8 [ 0, %4 ], [ %146, %145 ]
  %155 = and i8 %154, 1
  %156 = icmp eq i8 %155, 0
  %157 = and i1 %156, %1
  %158 = xor i1 %157, true
  ret i1 %158

159:                                              ; preds = %73, %82, %105
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic9SpdyUtils26PopulateHeaderBlockFromUrlENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4spdy16Http2HeaderBlockE(%"class.std::__1::basic_string"*, %"class.spdy::Http2HeaderBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spdy::Http2HeaderBlock::ValueProxy", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.spdy::Http2HeaderBlock::ValueProxy", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.spdy::Http2HeaderBlock::ValueProxy", align 8
  %8 = alloca %"class.spdy::Http2HeaderBlock::ValueProxy", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.spdy::Http2HeaderBlock::ValueProxy", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.spdy::Http2HeaderBlock::ValueProxy", align 8
  %13 = bitcast %"class.spdy::Http2HeaderBlock::ValueProxy"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #5
  call void @_ZN4spdy16Http2HeaderBlockixEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull sret %3, %"class.spdy::Http2HeaderBlock"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7) #5
  %14 = call dereferenceable(48) %"class.spdy::Http2HeaderBlock::ValueProxy"* @_ZN4spdy16Http2HeaderBlock10ValueProxyaSEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3) #5
  call void @_ZN4spdy16Http2HeaderBlock10ValueProxyD1Ev(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #5
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  br label %27

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %26 = zext i8 %17 to i64
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i8* [ %21, %19 ], [ %25, %24 ]
  %29 = phi i64 [ %23, %19 ], [ %26, %24 ]
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = ptrtoint i8* %28 to i64
  %33 = icmp slt i64 %29, 3
  br i1 %33, label %213, label %34

34:                                               ; preds = %27, %45
  %35 = phi i64 [ %48, %45 ], [ %29, %27 ]
  %36 = phi i8* [ %46, %45 ], [ %28, %27 ]
  %37 = add nsw i64 %35, -2
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %213, label %39

39:                                               ; preds = %34
  %40 = call i8* @memchr(i8* %36, i32 58, i64 %37) #5
  %41 = icmp eq i8* %40, null
  br i1 %41, label %213, label %42

42:                                               ; preds = %39
  %43 = call i32 @bcmp(i8* nonnull %40, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3) #5
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds i8, i8* %40, i64 1
  %47 = ptrtoint i8* %46 to i64
  %48 = sub i64 %31, %47
  %49 = icmp slt i64 %48, 3
  br i1 %49, label %213, label %34

50:                                               ; preds = %42
  %51 = ptrtoint i8* %40 to i64
  %52 = icmp eq i8* %40, %30
  %53 = sub i64 %51, %32
  %54 = icmp eq i64 %53, -1
  %55 = or i1 %52, %54
  br i1 %55, label %213, label %56

56:                                               ; preds = %50
  %57 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #5
  %58 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator.29"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 0, i64 %53, %"class.std::__1::allocator.29"* dereferenceable(1) %58) #5
  %59 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %56
  %64 = zext i8 %61 to i64
  %65 = ptrtoint %"class.std::__1::basic_string"* %4 to i64
  br label %73

66:                                               ; preds = %56
  %67 = bitcast %"class.std::__1::basic_string"* %4 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp sgt i64 %70, -1
  br i1 %71, label %73, label %72, !prof !5

72:                                               ; preds = %66
  call void @llvm.trap() #5
  unreachable

73:                                               ; preds = %63, %66
  %74 = phi i64 [ %68, %66 ], [ %65, %63 ]
  %75 = phi i64 [ %70, %66 ], [ %64, %63 ]
  %76 = bitcast %"class.spdy::Http2HeaderBlock::ValueProxy"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %76) #5
  call void @_ZN4spdy16Http2HeaderBlockixEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull sret %5, %"class.spdy::Http2HeaderBlock"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i64 7) #5
  %77 = inttoptr i64 %74 to i8*
  %78 = call dereferenceable(48) %"class.spdy::Http2HeaderBlock::ValueProxy"* @_ZN4spdy16Http2HeaderBlock10ValueProxyaSEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %5, i8* %77, i64 %75) #5
  call void @_ZN4spdy16Http2HeaderBlock10ValueProxyD1Ev(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %76) #5
  %79 = load i8, i8* %60, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %73, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #5
  %85 = add i64 %53, 3
  %86 = load i8, i8* %16, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %93

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  br label %96

93:                                               ; preds = %84
  %94 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %95 = zext i8 %86 to i64
  br label %96

96:                                               ; preds = %93, %88
  %97 = phi i8* [ %90, %88 ], [ %94, %93 ]
  %98 = phi i64 [ %92, %88 ], [ %95, %93 ]
  %99 = icmp ult i64 %98, %85
  br i1 %99, label %127, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds i8, i8* %97, i64 %85
  %102 = getelementptr inbounds i8, i8* %97, i64 %98
  %103 = ptrtoint i8* %102 to i64
  %104 = ptrtoint i8* %101 to i64
  %105 = sub i64 %103, %104
  %106 = icmp slt i64 %105, 1
  br i1 %106, label %127, label %107

107:                                              ; preds = %100, %115
  %108 = phi i64 [ %118, %115 ], [ %105, %100 ]
  %109 = phi i8* [ %116, %115 ], [ %101, %100 ]
  %110 = call i8* @memchr(i8* %109, i32 47, i64 %108) #5
  %111 = icmp eq i8* %110, null
  br i1 %111, label %127, label %112

112:                                              ; preds = %107
  %113 = load i8, i8* %110, align 1
  %114 = icmp eq i8 %113, 47
  br i1 %114, label %120, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds i8, i8* %110, i64 1
  %117 = ptrtoint i8* %116 to i64
  %118 = sub i64 %103, %117
  %119 = icmp slt i64 %118, 1
  br i1 %119, label %127, label %107

120:                                              ; preds = %112
  %121 = ptrtoint i8* %110 to i64
  %122 = icmp eq i8* %110, %102
  %123 = ptrtoint i8* %97 to i64
  %124 = sub i64 %121, %123
  %125 = icmp eq i64 %124, -1
  %126 = or i1 %122, %125
  br i1 %126, label %127, label %157

127:                                              ; preds = %115, %107, %100, %120, %96
  %128 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #5
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %85, i64 -1, %"class.std::__1::allocator.29"* dereferenceable(1) %58) #5
  %129 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %127
  %134 = zext i8 %131 to i64
  %135 = ptrtoint %"class.std::__1::basic_string"* %6 to i64
  br label %143

136:                                              ; preds = %127
  %137 = bitcast %"class.std::__1::basic_string"* %6 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = icmp sgt i64 %140, -1
  br i1 %141, label %143, label %142, !prof !5

142:                                              ; preds = %136
  call void @llvm.trap() #5
  unreachable

143:                                              ; preds = %133, %136
  %144 = phi i64 [ %138, %136 ], [ %135, %133 ]
  %145 = phi i64 [ %140, %136 ], [ %134, %133 ]
  %146 = bitcast %"class.spdy::Http2HeaderBlock::ValueProxy"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %146) #5
  call void @_ZN4spdy16Http2HeaderBlockixEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull sret %7, %"class.spdy::Http2HeaderBlock"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i64 10) #5
  %147 = inttoptr i64 %144 to i8*
  %148 = call dereferenceable(48) %"class.spdy::Http2HeaderBlock::ValueProxy"* @_ZN4spdy16Http2HeaderBlock10ValueProxyaSEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %7, i8* %147, i64 %145) #5
  call void @_ZN4spdy16Http2HeaderBlock10ValueProxyD1Ev(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %146) #5
  %149 = load i8, i8* %130, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %143
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #15
  br label %154

154:                                              ; preds = %143, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #5
  %155 = bitcast %"class.spdy::Http2HeaderBlock::ValueProxy"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %155) #5
  call void @_ZN4spdy16Http2HeaderBlockixEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull sret %8, %"class.spdy::Http2HeaderBlock"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i64 5) #5
  %156 = call dereferenceable(48) %"class.spdy::Http2HeaderBlock::ValueProxy"* @_ZN4spdy16Http2HeaderBlock10ValueProxyaSEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #5
  call void @_ZN4spdy16Http2HeaderBlock10ValueProxyD1Ev(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %155) #5
  br label %213

157:                                              ; preds = %120
  %158 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %158) #5
  %159 = sub i64 %124, %85
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %9, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %85, i64 %159, %"class.std::__1::allocator.29"* dereferenceable(1) %58) #5
  %160 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %167, label %164

164:                                              ; preds = %157
  %165 = zext i8 %162 to i64
  %166 = ptrtoint %"class.std::__1::basic_string"* %9 to i64
  br label %174

167:                                              ; preds = %157
  %168 = bitcast %"class.std::__1::basic_string"* %9 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %171 = load i64, i64* %170, align 8
  %172 = icmp sgt i64 %171, -1
  br i1 %172, label %174, label %173, !prof !5

173:                                              ; preds = %167
  call void @llvm.trap() #5
  unreachable

174:                                              ; preds = %164, %167
  %175 = phi i64 [ %169, %167 ], [ %166, %164 ]
  %176 = phi i64 [ %171, %167 ], [ %165, %164 ]
  %177 = bitcast %"class.spdy::Http2HeaderBlock::ValueProxy"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %177) #5
  call void @_ZN4spdy16Http2HeaderBlockixEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull sret %10, %"class.spdy::Http2HeaderBlock"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i64 10) #5
  %178 = inttoptr i64 %175 to i8*
  %179 = call dereferenceable(48) %"class.spdy::Http2HeaderBlock::ValueProxy"* @_ZN4spdy16Http2HeaderBlock10ValueProxyaSEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %10, i8* %178, i64 %176) #5
  call void @_ZN4spdy16Http2HeaderBlock10ValueProxyD1Ev(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %177) #5
  %180 = load i8, i8* %161, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %174
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %184) #15
  br label %185

185:                                              ; preds = %174, %182
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %158) #5
  %186 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #5
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %11, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %124, i64 -1, %"class.std::__1::allocator.29"* dereferenceable(1) %58) #5
  %187 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %187, i64 0, i32 1, i32 0
  %189 = load i8, i8* %188, align 1
  %190 = icmp slt i8 %189, 0
  br i1 %190, label %194, label %191

191:                                              ; preds = %185
  %192 = zext i8 %189 to i64
  %193 = ptrtoint %"class.std::__1::basic_string"* %11 to i64
  br label %201

194:                                              ; preds = %185
  %195 = bitcast %"class.std::__1::basic_string"* %11 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = icmp sgt i64 %198, -1
  br i1 %199, label %201, label %200, !prof !5

200:                                              ; preds = %194
  call void @llvm.trap() #5
  unreachable

201:                                              ; preds = %191, %194
  %202 = phi i64 [ %196, %194 ], [ %193, %191 ]
  %203 = phi i64 [ %198, %194 ], [ %192, %191 ]
  %204 = bitcast %"class.spdy::Http2HeaderBlock::ValueProxy"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %204) #5
  call void @_ZN4spdy16Http2HeaderBlockixEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull sret %12, %"class.spdy::Http2HeaderBlock"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i64 5) #5
  %205 = inttoptr i64 %202 to i8*
  %206 = call dereferenceable(48) %"class.spdy::Http2HeaderBlock::ValueProxy"* @_ZN4spdy16Http2HeaderBlock10ValueProxyaSEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %12, i8* %205, i64 %203) #5
  call void @_ZN4spdy16Http2HeaderBlock10ValueProxyD1Ev(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %204) #5
  %207 = load i8, i8* %188, align 1
  %208 = icmp slt i8 %207, 0
  br i1 %208, label %209, label %212

209:                                              ; preds = %201
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  call void @_ZdlPv(i8* %211) #15
  br label %212

212:                                              ; preds = %201, %209
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #5
  br label %213

213:                                              ; preds = %45, %39, %34, %27, %50, %154, %212
  %214 = phi i1 [ true, %212 ], [ true, %154 ], [ false, %50 ], [ false, %27 ], [ false, %34 ], [ false, %39 ], [ false, %45 ]
  ret i1 %214
}

declare void @_ZN4spdy16Http2HeaderBlockixEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* sret, %"class.spdy::Http2HeaderBlock"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(48) %"class.spdy::Http2HeaderBlock::ValueProxy"* @_ZN4spdy16Http2HeaderBlock10ValueProxyaSEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4spdy16Http2HeaderBlock10ValueProxyD1Ev(%"class.spdy::Http2HeaderBlock::ValueProxy"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN4quic9SpdyUtils25ParseDatagramFlowIdHeaderERKN4spdy16Http2HeaderBlockE(%"class.spdy::Http2HeaderBlock"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", align 1
  %3 = alloca %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", align 1
  %4 = alloca i64, align 8
  %5 = alloca %"class.absl::string_view", align 8
  %6 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %7 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %8 = alloca %"class.std::__1::vector.16", align 8
  %9 = alloca %"class.absl::strings_internal::Splitter", align 16
  %10 = alloca %"class.std::__1::vector.16", align 8
  %11 = alloca %"class.absl::strings_internal::Splitter", align 16
  %12 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #5
  %13 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %6, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__list_node_base"*), %"struct.std::__1::__list_node_base"** %13, align 8
  %14 = bitcast %"class.absl::string_view"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  %15 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8** %15, align 8, !noalias !12
  %16 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 1
  store i64 16, i64* %16, align 8, !noalias !12
  %17 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = call { i8*, %"struct.std::__1::pair"** } @_ZNK4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_14const_iteratorERSH_(%"class.absl::container_internal::raw_hash_set"* %17, %"class.absl::string_view"* nonnull dereferenceable(16) %5) #5, !noalias !12
  %19 = extractvalue { i8*, %"struct.std::__1::pair"** } %18, 0
  %20 = extractvalue { i8*, %"struct.std::__1::pair"** } %18, 1
  %21 = icmp eq i8* %19, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %1
  %23 = load i8, i8* %19, align 1
  %24 = icmp sgt i8 %23, -1
  br i1 %24, label %29, label %25, !prof !5

25:                                               ; preds = %22
  call void @llvm.trap() #5
  unreachable

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %28 = ptrtoint %"struct.std::__1::__list_node_base"* %27 to i64
  br label %34

29:                                               ; preds = %22
  %30 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 0, i32 1
  %32 = bitcast %"class.std::__1::__list_iterator"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  br label %34

34:                                               ; preds = %26, %29
  %35 = phi i64 [ %28, %26 ], [ %33, %29 ]
  %36 = inttoptr i64 %35 to %"struct.std::__1::__list_node_base"*
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %6, %"struct.std::__1::__list_node_base"* %36) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  %37 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #5
  %38 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %7, %"struct.std::__1::__list_node_base"* %38) #5
  %39 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %13, align 8
  %40 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %7, i64 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__list_node_base"* %39, %41
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #5
  br i1 %42, label %178, label %43

43:                                               ; preds = %34
  %44 = bitcast %"class.std::__1::vector.16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #5
  %45 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %8, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %8, i64 0, i32 0, i32 1
  %47 = bitcast %"class.absl::strings_internal::Splitter"* %9 to i8*
  %48 = bitcast %"class.std::__1::vector.16"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #5
  %49 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %6 to %"struct.std::__1::__list_node"**
  %50 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %49, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %50, i64 0, i32 1, i32 1
  %52 = call dereferenceable(32) %"struct.std::__1::pair.15"* @_ZNK4spdy16Http2HeaderBlock11HeaderValue7as_pairEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %51) #5
  %53 = getelementptr inbounds %"struct.std::__1::pair.15", %"struct.std::__1::pair.15"* %52, i64 0, i32 1, i32 0
  %54 = bitcast i8** %53 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8
  %56 = bitcast %"class.absl::strings_internal::Splitter"* %9 to <2 x i64>*
  store <2 x i64> %55, <2 x i64>* %56, align 16, !alias.scope !15
  %57 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %9, i64 0, i32 1, i32 0
  store i8 44, i8* %57, align 16, !alias.scope !15
  %58 = getelementptr inbounds %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %58) #5, !noalias !18
  call void @_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_(%"class.std::__1::vector.16"* nonnull sret %8, %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* nonnull %3, %"class.absl::strings_internal::Splitter"* nonnull dereferenceable(24) %9) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %58) #5, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #5
  %59 = load %"class.absl::string_view"*, %"class.absl::string_view"** %45, align 8
  %60 = load %"class.absl::string_view"*, %"class.absl::string_view"** %46, align 8
  %61 = icmp eq %"class.absl::string_view"* %59, %60
  br i1 %61, label %168, label %62

62:                                               ; preds = %43
  %63 = bitcast %"class.std::__1::vector.16"* %10 to i8*
  %64 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %10, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %10, i64 0, i32 0, i32 1
  %66 = bitcast %"class.absl::strings_internal::Splitter"* %11 to i8*
  %67 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %11, i64 0, i32 1, i32 0
  %68 = getelementptr inbounds %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* %2, i64 0, i32 0
  %69 = bitcast i64* %4 to i8*
  %70 = bitcast %"class.absl::string_view"** %65 to i64*
  %71 = bitcast %"class.std::__1::vector.16"* %10 to i64*
  %72 = bitcast %"class.std::__1::vector.16"* %10 to i8*
  %73 = bitcast %"class.absl::strings_internal::Splitter"* %11 to <2 x i64>*
  br label %74

74:                                               ; preds = %62, %161
  %75 = phi i64 [ undef, %62 ], [ %154, %161 ]
  %76 = phi i64 [ -6148914691236517206, %62 ], [ %153, %161 ]
  %77 = phi i8 [ 0, %62 ], [ %152, %161 ]
  %78 = phi %"class.absl::string_view"* [ %59, %62 ], [ %162, %161 ]
  %79 = bitcast %"class.absl::string_view"* %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #5
  store <2 x i64> %80, <2 x i64>* %73, align 16, !alias.scope !21
  store i8 59, i8* %67, align 16, !alias.scope !21
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %68) #5, !noalias !24
  call void @_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_(%"class.std::__1::vector.16"* nonnull sret %10, %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* nonnull %2, %"class.absl::strings_internal::Splitter"* nonnull dereferenceable(24) %11) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %68) #5, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #5
  %81 = load %"class.absl::string_view"*, %"class.absl::string_view"** %64, align 8
  %82 = load %"class.absl::string_view"*, %"class.absl::string_view"** %65, align 8
  %83 = icmp eq %"class.absl::string_view"* %81, %82
  br i1 %83, label %150, label %84

84:                                               ; preds = %74
  %85 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %81, i64 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %81, i64 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds i8, i8* %86, i64 %88
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %102, label %91

91:                                               ; preds = %84, %99
  %92 = phi i8* [ %100, %99 ], [ %86, %84 ]
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i64
  %95 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN4absl14ascii_internal13kPropertyBitsE, i64 0, i64 %94
  %96 = load i8, i8* %95, align 1
  %97 = and i8 %96, 8
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %91
  %100 = getelementptr inbounds i8, i8* %92, i64 1
  %101 = icmp eq i8* %100, %89
  br i1 %101, label %102, label %91

102:                                              ; preds = %99, %91, %84
  %103 = phi i8* [ %86, %84 ], [ %89, %99 ], [ %92, %91 ]
  %104 = ptrtoint i8* %103 to i64
  %105 = ptrtoint i8* %86 to i64
  %106 = sub i64 %104, %105
  %107 = icmp ult i64 %88, %106
  br i1 %107, label %108, label %109, !prof !27

108:                                              ; preds = %102
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0)) #16
  unreachable

109:                                              ; preds = %102
  %110 = sub i64 %88, %106
  %111 = icmp sgt i64 %110, -1
  br i1 %111, label %113, label %112, !prof !5

112:                                              ; preds = %109
  call void @llvm.trap() #5
  unreachable

113:                                              ; preds = %109
  %114 = getelementptr inbounds i8, i8* %103, i64 %110
  br label %115

115:                                              ; preds = %118, %113
  %116 = phi i8* [ %114, %113 ], [ %119, %118 ]
  %117 = icmp eq i8* %116, %103
  br i1 %117, label %128, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds i8, i8* %116, i64 -1
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i64
  %122 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN4absl14ascii_internal13kPropertyBitsE, i64 0, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = and i8 %123, 8
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %115

126:                                              ; preds = %118
  %127 = ptrtoint i8* %116 to i64
  br label %128

128:                                              ; preds = %115, %126
  %129 = phi i64 [ %127, %126 ], [ %104, %115 ]
  %130 = sub i64 %129, %104
  %131 = icmp ult i64 %130, %110
  %132 = select i1 %131, i64 %130, i64 %110
  %133 = icmp sgt i64 %132, -1
  br i1 %133, label %135, label %134, !prof !5

134:                                              ; preds = %128
  call void @llvm.trap() #5
  unreachable

135:                                              ; preds = %128
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #5
  store i64 -6148914691236517206, i64* %4, align 8
  %136 = call zeroext i1 @_ZN4absl16numbers_internal18safe_strtou64_baseENS_11string_viewEPmi(i8* %103, i64 %132, i64* nonnull %4, i32 10) #5
  %137 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #5
  br i1 %136, label %140, label %138

138:                                              ; preds = %135
  %139 = load %"class.absl::string_view"*, %"class.absl::string_view"** %64, align 8
  br label %150

140:                                              ; preds = %135
  %141 = load i64, i64* %70, align 8
  %142 = load i64, i64* %71, align 8
  %143 = sub i64 %141, %142
  %144 = icmp eq i64 %143, 16
  %145 = inttoptr i64 %142 to %"class.absl::string_view"*
  br i1 %144, label %150, label %146

146:                                              ; preds = %140
  %147 = icmp eq i8 %77, 0
  %148 = select i1 %147, i8 1, i8 %77
  %149 = select i1 %147, i64 %137, i64 %76
  br label %150

150:                                              ; preds = %146, %138, %140, %74
  %151 = phi %"class.absl::string_view"* [ %145, %140 ], [ %81, %74 ], [ %139, %138 ], [ %145, %146 ]
  %152 = phi i8 [ %77, %140 ], [ %77, %74 ], [ %77, %138 ], [ %148, %146 ]
  %153 = phi i64 [ %76, %140 ], [ %76, %74 ], [ %76, %138 ], [ %149, %146 ]
  %154 = phi i64 [ %137, %140 ], [ %75, %74 ], [ %75, %138 ], [ %75, %146 ]
  %155 = phi i32 [ 1, %140 ], [ 3, %74 ], [ 3, %138 ], [ 0, %146 ]
  %156 = icmp eq %"class.absl::string_view"* %151, null
  br i1 %156, label %160, label %157

157:                                              ; preds = %150
  %158 = ptrtoint %"class.absl::string_view"* %151 to i64
  store i64 %158, i64* %70, align 8
  %159 = bitcast %"class.absl::string_view"* %151 to i8*
  call void @_ZdlPv(i8* %159) #15
  br label %160

160:                                              ; preds = %150, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #5
  switch i32 %155, label %164 [
    i32 0, label %161
    i32 3, label %161
  ]

161:                                              ; preds = %160, %160
  %162 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %78, i64 1
  %163 = icmp eq %"class.absl::string_view"* %162, %60
  br i1 %163, label %164, label %74

164:                                              ; preds = %161, %160
  %165 = phi i8 [ 1, %160 ], [ %152, %161 ]
  %166 = phi i64 [ %154, %160 ], [ %153, %161 ]
  %167 = load %"class.absl::string_view"*, %"class.absl::string_view"** %45, align 8
  br label %168

168:                                              ; preds = %164, %43
  %169 = phi %"class.absl::string_view"* [ %59, %43 ], [ %167, %164 ]
  %170 = phi i8 [ 0, %43 ], [ %165, %164 ]
  %171 = phi i64 [ -6148914691236517206, %43 ], [ %166, %164 ]
  %172 = icmp eq %"class.absl::string_view"* %169, null
  br i1 %172, label %177, label %173

173:                                              ; preds = %168
  %174 = ptrtoint %"class.absl::string_view"* %169 to i64
  %175 = bitcast %"class.absl::string_view"** %46 to i64*
  store i64 %174, i64* %175, align 8
  %176 = bitcast %"class.absl::string_view"* %169 to i8*
  call void @_ZdlPv(i8* %176) #15
  br label %177

177:                                              ; preds = %168, %173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #5
  br label %178

178:                                              ; preds = %34, %177
  %179 = phi i8 [ %170, %177 ], [ 0, %34 ]
  %180 = phi i64 [ %171, %177 ], [ undef, %34 ]
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #5
  %181 = insertvalue { i8, i64 } undef, i8 %179, 0
  %182 = insertvalue { i8, i64 } %181, i64 %180, 1
  ret { i8, i64 } %182
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic9SpdyUtils23AddDatagramFlowIdHeaderEPN4spdy16Http2HeaderBlockEm(%"class.spdy::Http2HeaderBlock"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.spdy::Http2HeaderBlock::ValueProxy", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #5
  %7 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #5
  %8 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 1, i64 0
  %9 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %1, i8* %8) #5
  %10 = ptrtoint i8* %9 to i64
  %11 = ptrtoint i8* %8 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* %8, i8** %13, align 8
  %14 = icmp sgt i64 %12, -1
  br i1 %14, label %16, label %15, !prof !5

15:                                               ; preds = %2
  call void @llvm.trap() #5
  unreachable

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 %12, i64* %17, align 8
  %18 = icmp ult i64 %12, 23
  br i1 %18, label %28, label %19

19:                                               ; preds = %16
  %20 = add nuw i64 %12, 16
  %21 = and i64 %20, -16
  %22 = call i8* @_Znwm(i64 %21) #15
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8, !alias.scope !28
  %24 = or i64 %21, -9223372036854775808
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %24, i64* %25, align 8, !alias.scope !28
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %12, i64* %26, align 8, !alias.scope !28
  %27 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %33

28:                                               ; preds = %16
  %29 = trunc i64 %12 to i8
  %30 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1, !alias.scope !28
  %32 = icmp eq i64 %12, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28, %19
  %34 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %30, %28 ], [ %27, %19 ]
  %35 = phi i8* [ %6, %28 ], [ %22, %19 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* align 8 %8, i64 %12, i1 false) #5
  br label %36

36:                                               ; preds = %28, %33
  %37 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %30, %28 ], [ %34, %33 ]
  %38 = phi i8* [ %6, %28 ], [ %35, %33 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %12
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %36
  %44 = zext i8 %41 to i64
  %45 = ptrtoint %"class.std::__1::basic_string"* %3 to i64
  br label %53

46:                                               ; preds = %36
  %47 = bitcast %"class.std::__1::basic_string"* %3 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp sgt i64 %50, -1
  br i1 %51, label %53, label %52, !prof !5

52:                                               ; preds = %46
  call void @llvm.trap() #5
  unreachable

53:                                               ; preds = %43, %46
  %54 = phi i64 [ %48, %46 ], [ %45, %43 ]
  %55 = phi i64 [ %50, %46 ], [ %44, %43 ]
  %56 = bitcast %"class.spdy::Http2HeaderBlock::ValueProxy"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %56) #5
  call void @_ZN4spdy16Http2HeaderBlockixEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull sret %5, %"class.spdy::Http2HeaderBlock"* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i64 16) #5
  %57 = inttoptr i64 %54 to i8*
  %58 = call dereferenceable(48) %"class.spdy::Http2HeaderBlock::ValueProxy"* @_ZN4spdy16Http2HeaderBlock10ValueProxyaSEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %5, i8* %57, i64 %55) #5
  call void @_ZN4spdy16Http2HeaderBlock10ValueProxyD1Ev(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %56) #5
  %59 = load i8, i8* %40, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #15
  br label %64

64:                                               ; preds = %53, %61
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #5
  ret void
}

declare void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"*, %"struct.std::__1::__list_node_base"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"struct.std::__1::pair"** } @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set"*, %"class.absl::string_view"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4
  %4 = bitcast %"class.absl::container_internal::CompressedTuple"* %3 to %"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"*
  %5 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @_ZNK4spdy16Http2HeaderBlock19StringPieceCaseHashclEN4absl11string_viewE(%"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"* %4, i8* %6, i64 %8)
  %10 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %11 = bitcast %"class.absl::container_internal::raw_hash_set"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %9, 7
  %16 = lshr i64 %12, 12
  %17 = xor i64 %16, %15
  %18 = trunc i64 %9 to i8
  %19 = and i8 %18, 127
  %20 = insertelement <16 x i8> undef, i8 %19, i32 0
  %21 = shufflevector <16 x i8> %20, <16 x i8> undef, <16 x i32> zeroinitializer
  %22 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %23 = inttoptr i64 %12 to i8*
  br label %24

24:                                               ; preds = %67, %2
  %25 = phi i8* [ %23, %2 ], [ %70, %67 ]
  %26 = phi i64 [ %17, %2 ], [ %69, %67 ]
  %27 = phi i64 [ 0, %2 ], [ %68, %67 ]
  %28 = and i64 %26, %14
  %29 = getelementptr inbounds i8, i8* %25, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %21, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %63, label %35

35:                                               ; preds = %24
  %36 = zext i16 %33 to i32
  br label %37

37:                                               ; preds = %53, %35
  %38 = phi i32 [ %55, %53 ], [ %36, %35 ]
  %39 = tail call i32 @llvm.cttz.i32(i32 %38, i1 false) #5, !range !31
  %40 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %22, align 8
  %41 = zext i32 %39 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %14
  %44 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %40, i64 %43
  %45 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = load i8*, i8** %5, align 8
  %51 = load i64, i64* %7, align 8
  %52 = tail call zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8* %47, i64 %49, i8* %50, i64 %51) #5
  br i1 %52, label %57, label %53, !prof !5

53:                                               ; preds = %37
  %54 = add i32 %38, -1
  %55 = and i32 %54, %38
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %63, label %37

57:                                               ; preds = %37
  %58 = load i8*, i8** %10, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %43
  %60 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %22, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %60, i64 %43
  %62 = icmp ne i8* %59, null
  tail call void @llvm.assume(i1 %62) #5
  br label %71

63:                                               ; preds = %53, %24
  %64 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %71, !prof !27

67:                                               ; preds = %63
  %68 = add i64 %27, 16
  %69 = add i64 %68, %28
  %70 = load i8*, i8** %10, align 8
  br label %24

71:                                               ; preds = %63, %57
  %72 = phi %"struct.std::__1::pair"** [ %61, %57 ], [ undef, %63 ]
  %73 = phi i8* [ %59, %57 ], [ null, %63 ]
  %74 = insertvalue { i8*, %"struct.std::__1::pair"** } undef, i8* %73, 0
  %75 = insertvalue { i8*, %"struct.std::__1::pair"** } %74, %"struct.std::__1::pair"** %72, 1
  ret { i8*, %"struct.std::__1::pair"** } %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4spdy16Http2HeaderBlock19StringPieceCaseHashclEN4absl11string_viewE(%"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = icmp eq i8* %1, null
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  br i1 %9, label %11, label %12

11:                                               ; preds = %3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #5, !alias.scope !32
  br label %33

12:                                               ; preds = %3
  %13 = icmp ugt i64 %2, -17
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %15) #16
  unreachable

16:                                               ; preds = %12
  %17 = icmp ult i64 %2, 23
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %2, 16
  %20 = and i64 %19, -16
  %21 = tail call i8* @_Znwm(i64 %20) #15
  store i8* %21, i8** %6, align 8, !alias.scope !32
  %22 = or i64 %20, -9223372036854775808
  store i64 %22, i64* %8, align 8, !alias.scope !32
  store i64 %2, i64* %7, align 8, !alias.scope !32
  br label %28

23:                                               ; preds = %16
  %24 = trunc i64 %2 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 %24, i8* %26, align 1, !alias.scope !32
  %27 = icmp eq i64 %2, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %23, %18
  %29 = phi i8* [ %21, %18 ], [ %5, %23 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %1, i64 %2, i1 false) #5
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %5, %23 ], [ %29, %28 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %2
  store i8 0, i8* %32, align 1
  br label %33

33:                                               ; preds = %11, %30
  call void @_ZN4absl15AsciiStrToLowerEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %4) #5
  %34 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = zext i8 %36 to i64
  %40 = ptrtoint %"class.std::__1::basic_string"* %4 to i64
  br label %47

41:                                               ; preds = %33
  %42 = bitcast %"class.std::__1::basic_string"* %4 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = load i64, i64* %7, align 8
  %45 = icmp sgt i64 %44, -1
  br i1 %45, label %47, label %46, !prof !5

46:                                               ; preds = %41
  call void @llvm.trap() #5
  unreachable

47:                                               ; preds = %38, %41
  %48 = phi i64 [ %43, %41 ], [ %40, %38 ]
  %49 = phi i64 [ %44, %41 ], [ %39, %38 ]
  %50 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %51 = inttoptr i64 %48 to i8*
  %52 = call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %50, i8* %51, i64 %49) #5
  %53 = add i64 %52, %49
  %54 = zext i64 %53 to i128
  %55 = mul nuw i128 %54, 11376068507788127593
  %56 = lshr i128 %55, 64
  %57 = xor i128 %56, %55
  %58 = trunc i128 %57 to i64
  %59 = load i8, i8* %35, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %47
  %62 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %62) #15
  br label %63

63:                                               ; preds = %47, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5
  ret i64 %58
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #6

; Function Attrs: nounwind
declare zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8*, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN4absl15AsciiStrToLowerEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i64 %2, 16
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, 1024
  br i1 %6, label %7, label %9, !prof !27

7:                                                ; preds = %5
  %8 = tail call i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64 %0, i8* %1, i64 %2) #5
  br label %75

9:                                                ; preds = %5
  %10 = tail call i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8* %1, i64 %2) #5
  br label %66

11:                                               ; preds = %3
  %12 = icmp ugt i64 %2, 8
  br i1 %12, label %13, label %29

13:                                               ; preds = %11
  %14 = bitcast i8* %1 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = shl i64 %2, 3
  %21 = sub nuw nsw i64 128, %20
  %22 = lshr i64 %19, %21
  %23 = add i64 %15, %0
  %24 = zext i64 %23 to i128
  %25 = mul nuw i128 %24, 11376068507788127593
  %26 = lshr i128 %25, 64
  %27 = xor i128 %26, %25
  %28 = trunc i128 %27 to i64
  br label %66

29:                                               ; preds = %11
  %30 = icmp ugt i64 %2, 3
  br i1 %30, label %31, label %44

31:                                               ; preds = %29
  %32 = bitcast i8* %1 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = getelementptr inbounds i8, i8* %1, i64 %2
  %35 = getelementptr inbounds i8, i8* %34, i64 -4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = zext i32 %37 to i64
  %39 = shl i64 %2, 3
  %40 = add nsw i64 %39, -32
  %41 = shl i64 %38, %40
  %42 = zext i32 %33 to i64
  %43 = or i64 %41, %42
  br label %66

44:                                               ; preds = %29
  %45 = icmp eq i64 %2, 0
  br i1 %45, label %75, label %46

46:                                               ; preds = %44
  %47 = load i8, i8* %1, align 1
  %48 = lshr i64 %2, 1
  %49 = getelementptr inbounds i8, i8* %1, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = add nsw i64 %2, -1
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %47 to i32
  %55 = zext i8 %50 to i32
  %56 = shl i64 %48, 3
  %57 = trunc i64 %56 to i32
  %58 = shl i32 %55, %57
  %59 = or i32 %58, %54
  %60 = zext i8 %53 to i32
  %61 = trunc i64 %51 to i32
  %62 = shl i32 %61, 3
  %63 = shl i32 %60, %62
  %64 = or i32 %59, %63
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %46, %31, %13, %9
  %67 = phi i64 [ %10, %9 ], [ %22, %13 ], [ %43, %31 ], [ %65, %46 ]
  %68 = phi i64 [ %0, %9 ], [ %28, %13 ], [ %0, %31 ], [ %0, %46 ]
  %69 = add i64 %68, %67
  %70 = zext i64 %69 to i128
  %71 = mul nuw i128 %70, 11376068507788127593
  %72 = lshr i128 %71, 64
  %73 = xor i128 %72, %71
  %74 = trunc i128 %73 to i64
  br label %75

75:                                               ; preds = %7, %44, %66
  %76 = phi i64 [ %8, %7 ], [ %74, %66 ], [ %0, %44 ]
  ret i64 %76
}

declare i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64, i8*, i64) local_unnamed_addr #3

declare i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8*, i64) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare dereferenceable(32) %"struct.std::__1::pair.15"* @_ZNK4spdy16Http2HeaderBlock11HeaderValue7as_pairEv(%"class.spdy::Http2HeaderBlock::HeaderValue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"struct.std::__1::pair"** } @_ZNK4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_14const_iteratorERSH_(%"class.absl::container_internal::raw_hash_set"*, %"class.absl::string_view"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4
  %4 = bitcast %"class.absl::container_internal::CompressedTuple"* %3 to %"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"*
  %5 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @_ZNK4spdy16Http2HeaderBlock19StringPieceCaseHashclEN4absl11string_viewE(%"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"* %4, i8* %6, i64 %8)
  %10 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %11 = bitcast %"class.absl::container_internal::raw_hash_set"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %9, 7
  %16 = lshr i64 %12, 12
  %17 = xor i64 %16, %15
  %18 = trunc i64 %9 to i8
  %19 = and i8 %18, 127
  %20 = insertelement <16 x i8> undef, i8 %19, i32 0
  %21 = shufflevector <16 x i8> %20, <16 x i8> undef, <16 x i32> zeroinitializer
  %22 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %23 = inttoptr i64 %12 to i8*
  br label %24

24:                                               ; preds = %67, %2
  %25 = phi i8* [ %23, %2 ], [ %70, %67 ]
  %26 = phi i64 [ %17, %2 ], [ %69, %67 ]
  %27 = phi i64 [ 0, %2 ], [ %68, %67 ]
  %28 = and i64 %26, %14
  %29 = getelementptr inbounds i8, i8* %25, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %21, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %63, label %35

35:                                               ; preds = %24
  %36 = zext i16 %33 to i32
  br label %37

37:                                               ; preds = %53, %35
  %38 = phi i32 [ %55, %53 ], [ %36, %35 ]
  %39 = tail call i32 @llvm.cttz.i32(i32 %38, i1 false) #5, !range !31
  %40 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %22, align 8
  %41 = zext i32 %39 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %14
  %44 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %40, i64 %43
  %45 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = load i8*, i8** %5, align 8
  %51 = load i64, i64* %7, align 8
  %52 = tail call zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8* %47, i64 %49, i8* %50, i64 %51) #5
  br i1 %52, label %57, label %53, !prof !5

53:                                               ; preds = %37
  %54 = add i32 %38, -1
  %55 = and i32 %54, %38
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %63, label %37

57:                                               ; preds = %37
  %58 = load i8*, i8** %10, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %43
  %60 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %22, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %60, i64 %43
  %62 = icmp ne i8* %59, null
  tail call void @llvm.assume(i1 %62) #5
  br label %71

63:                                               ; preds = %53, %24
  %64 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %71, !prof !27

67:                                               ; preds = %63
  %68 = add i64 %27, 16
  %69 = add i64 %68, %28
  %70 = load i8*, i8** %10, align 8
  br label %24

71:                                               ; preds = %63, %57
  %72 = phi %"struct.std::__1::pair"** [ %61, %57 ], [ undef, %63 ]
  %73 = phi i8* [ %59, %57 ], [ null, %63 ]
  %74 = insertvalue { i8*, %"struct.std::__1::pair"** } undef, i8* %73, 0
  %75 = insertvalue { i8*, %"struct.std::__1::pair"** } %74, %"struct.std::__1::pair"** %72, 1
  ret { i8*, %"struct.std::__1::pair"** } %75
}

; Function Attrs: noreturn
declare void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8*) local_unnamed_addr #7

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_(%"class.std::__1::vector.16"* noalias sret, %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"*, %"class.absl::strings_internal::Splitter"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::array", align 8
  %5 = alloca %"class.absl::strings_internal::SplitIterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::vector.16"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #5
  %8 = bitcast %"struct.std::__1::array"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 256, i1 false)
  %9 = bitcast %"class.absl::strings_internal::SplitIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  %10 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 0
  store i64 0, i64* %10, align 8, !alias.scope !37
  %11 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 1
  store i32 0, i32* %11, align 8, !alias.scope !37
  %12 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3
  %13 = bitcast %"class.absl::string_view"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #5, !alias.scope !37
  %14 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 4
  store %"class.absl::strings_internal::Splitter"* %2, %"class.absl::strings_internal::Splitter"** %14, align 8, !alias.scope !37
  %15 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 5, i32 0
  %16 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %2, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1, !noalias !37
  store i8 %17, i8* %15, align 8, !alias.scope !37
  %18 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %2, i64 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8, !noalias !37
  %20 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %2, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8, !noalias !37
  %22 = icmp eq i8* %19, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %3
  store i32 2, i32* %11, align 8, !alias.scope !37
  store i64 %21, i64* %10, align 8, !alias.scope !37
  br label %59

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 5
  %26 = call { i8*, i64 } @_ZNK4absl6ByChar4FindENS_11string_viewEm(%"class.absl::ByChar"* %25, i8* nonnull %19, i64 %21, i64 0) #5
  %27 = extractvalue { i8*, i64 } %26, 0
  %28 = extractvalue { i8*, i64 } %26, 1
  %29 = getelementptr inbounds i8, i8* %19, i64 %21
  %30 = icmp eq i8* %27, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %24
  store i32 1, i32* %11, align 8, !alias.scope !37
  br label %32

32:                                               ; preds = %31, %24
  %33 = load i64, i64* %10, align 8, !alias.scope !37
  %34 = getelementptr inbounds i8, i8* %19, i64 %33
  %35 = ptrtoint i8* %27 to i64
  %36 = ptrtoint i8* %34 to i64
  %37 = sub i64 %35, %36
  %38 = icmp ult i64 %21, %33
  br i1 %38, label %39, label %40, !prof !27

39:                                               ; preds = %32
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0)) #16
  unreachable

40:                                               ; preds = %32
  %41 = sub i64 %21, %33
  %42 = icmp ugt i64 %41, %37
  %43 = select i1 %42, i64 %37, i64 %41
  %44 = icmp sgt i64 %43, -1
  br i1 %44, label %46, label %45, !prof !5

45:                                               ; preds = %40
  call void @llvm.trap() #5
  unreachable

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 0
  store i8* %34, i8** %47, align 8, !alias.scope !37
  %48 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 1
  store i64 %43, i64* %48, align 8, !alias.scope !37
  %49 = add i64 %33, %28
  %50 = add i64 %49, %43
  %51 = load i32, i32* %11, align 8
  store i64 %50, i64* %10, align 8, !alias.scope !37
  %52 = icmp eq i32 %51, 2
  br i1 %52, label %59, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.absl::string_view"* %12 to i64*
  %55 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 1
  %56 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 5
  %57 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 0
  br label %60

59:                                               ; preds = %111, %23, %46
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %8) #5
  ret void

60:                                               ; preds = %106, %53
  %61 = phi i32 [ %51, %53 ], [ %107, %106 ]
  %62 = phi i64 [ %43, %53 ], [ %108, %106 ]
  %63 = phi i64 [ %36, %53 ], [ %109, %106 ]
  %64 = phi i64 [ 0, %53 ], [ %110, %106 ]
  %65 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %64
  %66 = bitcast %struct.raw_view* %65 to i64*
  store i64 %63, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %64, i32 1
  store i64 %62, i64* %67, align 8
  %68 = icmp eq i32 %61, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %60
  store i32 2, i32* %11, align 8
  %70 = add nuw nsw i64 %64, 1
  br label %111

71:                                               ; preds = %60
  %72 = load %"class.absl::strings_internal::Splitter"*, %"class.absl::strings_internal::Splitter"** %14, align 8
  %73 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %72, i64 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %72, i64 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %10, align 8
  %78 = call { i8*, i64 } @_ZNK4absl6ByChar4FindENS_11string_viewEm(%"class.absl::ByChar"* %56, i8* %74, i64 %76, i64 %77) #5
  %79 = extractvalue { i8*, i64 } %78, 0
  %80 = extractvalue { i8*, i64 } %78, 1
  %81 = getelementptr inbounds i8, i8* %74, i64 %76
  %82 = icmp eq i8* %79, %81
  br i1 %82, label %83, label %84

83:                                               ; preds = %71
  store i32 1, i32* %11, align 8
  br label %84

84:                                               ; preds = %83, %71
  %85 = load i64, i64* %10, align 8
  %86 = getelementptr inbounds i8, i8* %74, i64 %85
  %87 = ptrtoint i8* %79 to i64
  %88 = ptrtoint i8* %86 to i64
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %76, %85
  br i1 %90, label %91, label %92, !prof !27

91:                                               ; preds = %84
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0)) #16
  unreachable

92:                                               ; preds = %84
  %93 = sub i64 %76, %85
  %94 = icmp ugt i64 %93, %89
  %95 = select i1 %94, i64 %89, i64 %93
  %96 = icmp sgt i64 %95, -1
  br i1 %96, label %98, label %97, !prof !5

97:                                               ; preds = %92
  call void @llvm.trap() #5
  unreachable

98:                                               ; preds = %92
  store i8* %86, i8** %57, align 8
  store i64 %95, i64* %55, align 8
  %99 = add i64 %85, %80
  %100 = add i64 %99, %95
  store i64 %100, i64* %10, align 8
  %101 = load i32, i32* %11, align 8
  %102 = add nuw nsw i64 %64, 1
  %103 = icmp eq i64 %102, 16
  %104 = icmp eq i32 %101, 2
  %105 = or i1 %103, %104
  br i1 %105, label %111, label %106

106:                                              ; preds = %98, %118
  %107 = phi i32 [ %101, %98 ], [ %116, %118 ]
  %108 = phi i64 [ %95, %98 ], [ %120, %118 ]
  %109 = phi i64 [ %88, %98 ], [ %119, %118 ]
  %110 = phi i64 [ %102, %98 ], [ 0, %118 ]
  br label %60

111:                                              ; preds = %98, %69
  %112 = phi i64 [ %70, %69 ], [ %102, %98 ]
  %113 = load %"class.absl::string_view"*, %"class.absl::string_view"** %6, align 8
  %114 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %112
  %115 = call %"class.absl::string_view"* @_ZNSt3__16vectorIN4absl11string_viewENS_9allocatorIS2_EEE6insertIPZNKS1_16strings_internal8SplitterINS1_6ByCharENS1_10AllowEmptyES2_E18ConvertToContainerIS5_S2_Lb0EEclERKSB_E8raw_viewEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISJ_E9referenceEEE5valueENS_11__wrap_iterIPS2_EEE4typeENSN_IPKS2_EESJ_SJ_(%"class.std::__1::vector.16"* %0, %"class.absl::string_view"* %113, %struct.raw_view* nonnull %58, %struct.raw_view* %114)
  %116 = load i32, i32* %11, align 8
  %117 = icmp eq i32 %116, 2
  br i1 %117, label %59, label %118

118:                                              ; preds = %111
  %119 = load i64, i64* %54, align 8
  %120 = load i64, i64* %55, align 8
  br label %106
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.absl::string_view"* @_ZNSt3__16vectorIN4absl11string_viewENS_9allocatorIS2_EEE6insertIPZNKS1_16strings_internal8SplitterINS1_6ByCharENS1_10AllowEmptyES2_E18ConvertToContainerIS5_S2_Lb0EEclERKSB_E8raw_viewEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISJ_E9referenceEEE5valueENS_11__wrap_iterIPS2_EEE4typeENSN_IPKS2_EESJ_SJ_(%"class.std::__1::vector.16"*, %"class.absl::string_view"*, %struct.raw_view*, %struct.raw_view*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.absl::string_view"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %struct.raw_view* %3 to i64
  %8 = ptrtoint %struct.raw_view* %2 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %256

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.absl::string_view"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.absl::string_view"*, %"class.absl::string_view"** %16, align 8
  %18 = ptrtoint %"class.absl::string_view"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.absl::string_view"** %16 to i64*
  br i1 %21, label %136, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = ashr exact i64 %24, 4
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %52

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %2, i64 %25
  %29 = icmp eq %struct.raw_view* %28, %3
  br i1 %29, label %47, label %30

30:                                               ; preds = %27, %37
  %31 = phi %"class.absl::string_view"* [ %43, %37 ], [ %17, %27 ]
  %32 = phi %struct.raw_view* [ %42, %37 ], [ %28, %27 ]
  %33 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %32, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp sgt i64 %34, -1
  br i1 %35, label %37, label %36, !prof !5

36:                                               ; preds = %30
  tail call void @llvm.trap() #5
  unreachable

37:                                               ; preds = %30
  %38 = bitcast %struct.raw_view* %32 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.absl::string_view"* %31 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %31, i64 0, i32 1
  store i64 %34, i64* %41, align 8
  %42 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %32, i64 1
  %43 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %31, i64 1
  %44 = icmp eq %struct.raw_view* %42, %3
  br i1 %44, label %45, label %30

45:                                               ; preds = %37
  %46 = ptrtoint %"class.absl::string_view"* %43 to i64
  br label %47

47:                                               ; preds = %45, %27
  %48 = phi i64 [ %18, %27 ], [ %46, %45 ]
  store i64 %48, i64* %22, align 8
  %49 = icmp sgt i64 %24, 0
  br i1 %49, label %50, label %256

50:                                               ; preds = %47
  %51 = inttoptr i64 %48 to %"class.absl::string_view"*
  br label %52

52:                                               ; preds = %50, %23
  %53 = phi i64 [ %48, %50 ], [ %18, %23 ]
  %54 = phi %"class.absl::string_view"* [ %51, %50 ], [ %17, %23 ]
  %55 = phi %struct.raw_view* [ %28, %50 ], [ %3, %23 ]
  %56 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 %10
  %57 = ptrtoint %"class.absl::string_view"* %56 to i64
  %58 = sub i64 %53, %57
  %59 = ashr exact i64 %58, 4
  %60 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 %59
  %61 = icmp ult %"class.absl::string_view"* %60, %17
  br i1 %61, label %62, label %91

62:                                               ; preds = %52
  %63 = sub nsw i64 0, %59
  %64 = getelementptr %"class.absl::string_view", %"class.absl::string_view"* %17, i64 %63, i32 0
  %65 = bitcast i8** %64 to i8*
  %66 = xor i64 %5, -1
  %67 = getelementptr i8, i8* %65, i64 %66
  %68 = ptrtoint i8* %67 to i64
  %69 = lshr i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %62, %73
  %74 = phi %"class.absl::string_view"* [ %80, %73 ], [ %54, %62 ]
  %75 = phi %"class.absl::string_view"* [ %79, %73 ], [ %60, %62 ]
  %76 = phi i64 [ %81, %73 ], [ %71, %62 ]
  %77 = bitcast %"class.absl::string_view"* %74 to i8*
  %78 = bitcast %"class.absl::string_view"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false) #5
  %79 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %75, i64 1
  %80 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %74, i64 1
  %81 = add i64 %76, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %73, !llvm.loop !40

83:                                               ; preds = %73, %62
  %84 = phi %"class.absl::string_view"* [ %54, %62 ], [ %80, %73 ]
  %85 = phi %"class.absl::string_view"* [ %60, %62 ], [ %79, %73 ]
  %86 = phi %"class.absl::string_view"* [ undef, %62 ], [ %80, %73 ]
  %87 = icmp ult i8* %67, inttoptr (i64 48 to i8*)
  br i1 %87, label %88, label %99

88:                                               ; preds = %99, %83
  %89 = phi %"class.absl::string_view"* [ %86, %83 ], [ %117, %99 ]
  %90 = ptrtoint %"class.absl::string_view"* %89 to i64
  br label %91

91:                                               ; preds = %88, %52
  %92 = phi i64 [ %90, %88 ], [ %53, %52 ]
  store i64 %92, i64* %22, align 8
  %93 = icmp eq i64 %58, 0
  br i1 %93, label %119, label %94

94:                                               ; preds = %91
  %95 = sub nsw i64 0, %59
  %96 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %54, i64 %95
  %97 = bitcast %"class.absl::string_view"* %96 to i8*
  %98 = bitcast %"class.absl::string_view"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 %58, i1 false) #5
  br label %119

99:                                               ; preds = %83, %99
  %100 = phi %"class.absl::string_view"* [ %117, %99 ], [ %84, %83 ]
  %101 = phi %"class.absl::string_view"* [ %116, %99 ], [ %85, %83 ]
  %102 = bitcast %"class.absl::string_view"* %100 to i8*
  %103 = bitcast %"class.absl::string_view"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 16, i1 false) #5
  %104 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 1
  %105 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 1
  %106 = bitcast %"class.absl::string_view"* %105 to i8*
  %107 = bitcast %"class.absl::string_view"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 16, i1 false) #5
  %108 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 2
  %109 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 2
  %110 = bitcast %"class.absl::string_view"* %109 to i8*
  %111 = bitcast %"class.absl::string_view"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 16, i1 false) #5
  %112 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 3
  %113 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 3
  %114 = bitcast %"class.absl::string_view"* %113 to i8*
  %115 = bitcast %"class.absl::string_view"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 16, i1 false) #5
  %116 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 4
  %117 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 4
  %118 = icmp ult %"class.absl::string_view"* %116, %17
  br i1 %118, label %99, label %88

119:                                              ; preds = %91, %94
  %120 = icmp eq %struct.raw_view* %55, %2
  br i1 %120, label %256, label %121

121:                                              ; preds = %119, %128
  %122 = phi %struct.raw_view* [ %133, %128 ], [ %2, %119 ]
  %123 = phi %"class.absl::string_view"* [ %134, %128 ], [ %1, %119 ]
  %124 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %122, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp sgt i64 %125, -1
  br i1 %126, label %128, label %127, !prof !5

127:                                              ; preds = %121
  tail call void @llvm.trap() #5
  unreachable

128:                                              ; preds = %121
  %129 = bitcast %struct.raw_view* %122 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.absl::string_view"* %123 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %123, i64 0, i32 1
  store i64 %125, i64* %132, align 8
  %133 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %122, i64 1
  %134 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %123, i64 1
  %135 = icmp eq %struct.raw_view* %133, %55
  br i1 %135, label %256, label %121

136:                                              ; preds = %12
  %137 = bitcast %"class.std::__1::vector.16"* %0 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %18, %138
  %140 = ashr exact i64 %139, 4
  %141 = add nsw i64 %140, %10
  %142 = icmp ugt i64 %141, 1152921504606846975
  br i1 %142, label %143, label %145

143:                                              ; preds = %136
  %144 = bitcast %"class.std::__1::vector.16"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %144) #16
  unreachable

145:                                              ; preds = %136
  %146 = sub i64 %15, %138
  %147 = ashr exact i64 %146, 4
  %148 = icmp ult i64 %147, 576460752303423487
  br i1 %148, label %152, label %149

149:                                              ; preds = %145
  %150 = sub i64 %5, %138
  %151 = ashr exact i64 %150, 4
  br label %162

152:                                              ; preds = %145
  %153 = ashr exact i64 %146, 3
  %154 = icmp ult i64 %153, %141
  %155 = select i1 %154, i64 %141, i64 %153
  %156 = sub i64 %5, %138
  %157 = ashr exact i64 %156, 4
  %158 = icmp eq i64 %155, 0
  br i1 %158, label %168, label %159

159:                                              ; preds = %152
  %160 = icmp ugt i64 %155, 1152921504606846975
  br i1 %160, label %161, label %162

161:                                              ; preds = %159
  tail call void @abort() #16
  unreachable

162:                                              ; preds = %149, %159
  %163 = phi i64 [ 1152921504606846975, %149 ], [ %155, %159 ]
  %164 = phi i64 [ %151, %149 ], [ %157, %159 ]
  %165 = shl i64 %163, 4
  %166 = tail call i8* @_Znwm(i64 %165) #15
  %167 = bitcast i8* %166 to %"class.absl::string_view"*
  br label %168

168:                                              ; preds = %162, %152
  %169 = phi i64 [ %164, %162 ], [ %157, %152 ]
  %170 = phi i64 [ %163, %162 ], [ 0, %152 ]
  %171 = phi %"class.absl::string_view"* [ %167, %162 ], [ null, %152 ]
  %172 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %171, i64 %169
  %173 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %171, i64 %170
  %174 = ptrtoint %"class.absl::string_view"* %173 to i64
  %175 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %172, i64 %10
  br label %176

176:                                              ; preds = %168, %183
  %177 = phi %"class.absl::string_view"* [ %188, %183 ], [ %172, %168 ]
  %178 = phi %struct.raw_view* [ %189, %183 ], [ %2, %168 ]
  %179 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %178, i64 0, i32 1
  %180 = load i64, i64* %179, align 8
  %181 = icmp sgt i64 %180, -1
  br i1 %181, label %183, label %182, !prof !5

182:                                              ; preds = %176
  tail call void @llvm.trap() #5
  unreachable

183:                                              ; preds = %176
  %184 = bitcast %struct.raw_view* %178 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.absl::string_view"* %177 to i64*
  store i64 %185, i64* %186, align 8
  %187 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %177, i64 0, i32 1
  store i64 %180, i64* %187, align 8
  %188 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %177, i64 1
  %189 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %178, i64 1
  %190 = icmp eq %"class.absl::string_view"* %175, %188
  br i1 %190, label %191, label %176

191:                                              ; preds = %183
  %192 = load %"class.absl::string_view"*, %"class.absl::string_view"** %6, align 8
  %193 = ptrtoint %"class.absl::string_view"* %192 to i64
  %194 = sub i64 %5, %193
  %195 = ashr exact i64 %194, 4
  %196 = sub nsw i64 0, %195
  %197 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %172, i64 %196
  %198 = ptrtoint %"class.absl::string_view"* %197 to i64
  %199 = icmp sgt i64 %194, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %191
  %201 = bitcast %"class.absl::string_view"* %197 to i8*
  %202 = bitcast %"class.absl::string_view"* %192 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %201, i8* align 8 %202, i64 %194, i1 false) #5
  br label %203

203:                                              ; preds = %200, %191
  %204 = load %"class.absl::string_view"*, %"class.absl::string_view"** %16, align 8
  %205 = icmp eq %"class.absl::string_view"* %204, %1
  br i1 %205, label %249, label %206

206:                                              ; preds = %203
  %207 = getelementptr %"class.absl::string_view", %"class.absl::string_view"* %204, i64 -1, i32 0
  %208 = ptrtoint i8** %207 to i64
  %209 = sub i64 %208, %5
  %210 = lshr i64 %209, 4
  %211 = add nuw nsw i64 %210, 1
  %212 = and i64 %211, 3
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %224, label %214

214:                                              ; preds = %206, %214
  %215 = phi %"class.absl::string_view"* [ %221, %214 ], [ %175, %206 ]
  %216 = phi %"class.absl::string_view"* [ %220, %214 ], [ %1, %206 ]
  %217 = phi i64 [ %222, %214 ], [ %212, %206 ]
  %218 = bitcast %"class.absl::string_view"* %215 to i8*
  %219 = bitcast %"class.absl::string_view"* %216 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 16, i1 false) #5
  %220 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %216, i64 1
  %221 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %215, i64 1
  %222 = add i64 %217, -1
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %214, !llvm.loop !42

224:                                              ; preds = %214, %206
  %225 = phi %"class.absl::string_view"* [ undef, %206 ], [ %221, %214 ]
  %226 = phi %"class.absl::string_view"* [ %175, %206 ], [ %221, %214 ]
  %227 = phi %"class.absl::string_view"* [ %1, %206 ], [ %220, %214 ]
  %228 = icmp ult i64 %209, 48
  br i1 %228, label %249, label %229

229:                                              ; preds = %224, %229
  %230 = phi %"class.absl::string_view"* [ %247, %229 ], [ %226, %224 ]
  %231 = phi %"class.absl::string_view"* [ %246, %229 ], [ %227, %224 ]
  %232 = bitcast %"class.absl::string_view"* %230 to i8*
  %233 = bitcast %"class.absl::string_view"* %231 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %232, i8* align 8 %233, i64 16, i1 false) #5
  %234 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 1
  %235 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 1
  %236 = bitcast %"class.absl::string_view"* %235 to i8*
  %237 = bitcast %"class.absl::string_view"* %234 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* align 8 %237, i64 16, i1 false) #5
  %238 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 2
  %239 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 2
  %240 = bitcast %"class.absl::string_view"* %239 to i8*
  %241 = bitcast %"class.absl::string_view"* %238 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* align 8 %241, i64 16, i1 false) #5
  %242 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 3
  %243 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 3
  %244 = bitcast %"class.absl::string_view"* %243 to i8*
  %245 = bitcast %"class.absl::string_view"* %242 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %244, i8* align 8 %245, i64 16, i1 false) #5
  %246 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 4
  %247 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 4
  %248 = icmp eq %"class.absl::string_view"* %246, %204
  br i1 %248, label %249, label %229

249:                                              ; preds = %224, %229, %203
  %250 = phi %"class.absl::string_view"* [ %175, %203 ], [ %225, %224 ], [ %247, %229 ]
  %251 = ptrtoint %"class.absl::string_view"* %250 to i64
  %252 = load %"class.absl::string_view"*, %"class.absl::string_view"** %6, align 8
  store i64 %198, i64* %137, align 8
  store i64 %251, i64* %22, align 8
  store i64 %174, i64* %14, align 8
  %253 = icmp eq %"class.absl::string_view"* %252, null
  br i1 %253, label %256, label %254

254:                                              ; preds = %249
  %255 = bitcast %"class.absl::string_view"* %252 to i8*
  tail call void @_ZdlPv(i8* %255) #15
  br label %256

256:                                              ; preds = %128, %254, %249, %47, %119, %4
  %257 = phi %"class.absl::string_view"* [ %1, %4 ], [ %1, %119 ], [ %1, %47 ], [ %172, %249 ], [ %172, %254 ], [ %1, %128 ]
  ret %"class.absl::string_view"* %257
}

declare { i8*, i64 } @_ZNK4absl6ByChar4FindENS_11string_viewEm(%"class.absl::ByChar"*, i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare zeroext i1 @_ZN4absl16numbers_internal18safe_strtou64_baseENS_11string_viewEPmi(i8*, i64, i64*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal12ContainsImplIN4spdy16Http2HeaderBlockEA15_cEEDTnecldtfp_4findfp0_Ecldtfp_3endEERKT_RKT0_NS0_12priority_tagILm1EEE(%"class.spdy::Http2HeaderBlock"* dereferenceable(120), [15 x i8]* dereferenceable(15)) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.absl::string_view", align 8
  %4 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %5 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %6 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 0
  %8 = icmp eq [15 x i8]* %1, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @strlen(i8* nonnull %7) #5
  %11 = icmp sgt i64 %10, -1
  br i1 %11, label %13, label %12, !prof !5

12:                                               ; preds = %9
  tail call void @llvm.trap() #5
  unreachable

13:                                               ; preds = %2, %9
  %14 = phi i64 [ 0, %2 ], [ %10, %9 ]
  %15 = bitcast %"class.absl::string_view"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15)
  %16 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 0
  store i8* %7, i8** %16, align 8, !noalias !43
  %17 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 1
  store i64 %14, i64* %17, align 8, !noalias !43
  %18 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = call { i8*, %"struct.std::__1::pair"** } @_ZNK4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_14const_iteratorERSH_(%"class.absl::container_internal::raw_hash_set"* %18, %"class.absl::string_view"* nonnull dereferenceable(16) %3) #5, !noalias !43
  %20 = extractvalue { i8*, %"struct.std::__1::pair"** } %19, 0
  %21 = extractvalue { i8*, %"struct.std::__1::pair"** } %19, 1
  %22 = icmp eq i8* %20, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %13
  %24 = load i8, i8* %20, align 1
  %25 = icmp sgt i8 %24, -1
  br i1 %25, label %30, label %26, !prof !5

26:                                               ; preds = %23
  call void @llvm.trap() #5
  unreachable

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %29 = ptrtoint %"struct.std::__1::__list_node_base"* %28 to i64
  br label %35

30:                                               ; preds = %23
  %31 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %21, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 0, i32 1
  %33 = bitcast %"class.std::__1::__list_iterator"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  br label %35

35:                                               ; preds = %27, %30
  %36 = phi i64 [ %29, %27 ], [ %34, %30 ]
  %37 = inttoptr i64 %36 to %"struct.std::__1::__list_node_base"*
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %4, %"struct.std::__1::__list_node_base"* %37) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15)
  %38 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #5
  %39 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %5, %"struct.std::__1::__list_node_base"* %39) #5
  %40 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %4, i64 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %40, align 8
  %42 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %5, i64 0, i32 0, i32 0
  %43 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %42, align 8
  %44 = icmp ne %"struct.std::__1::__list_node_base"* %41, %43
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #5
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  ret i1 %44
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #13

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.29"* dereferenceable(1)) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4spdy16Http2HeaderBlock4findEN4absl11string_viewE: argument 0"}
!4 = distinct !{!4, !"_ZN4spdy16Http2HeaderBlock4findEN4absl11string_viewE"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_: argument 0"}
!8 = distinct !{!8, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK4spdy16Http2HeaderBlock4findEN4absl11string_viewE: argument 0"}
!14 = distinct !{!14, !"_ZNK4spdy16Http2HeaderBlock4findEN4absl11string_viewE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_: argument 0"}
!17 = distinct !{!17, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv: argument 0"}
!20 = distinct !{!20, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_: argument 0"}
!23 = distinct !{!23, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv: argument 0"}
!26 = distinct !{!26, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv"}
!27 = !{!"branch_weights", i32 1, i32 2000}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN4absl6StrCatERKNS_8AlphaNumE: argument 0"}
!30 = distinct !{!30, !"_ZN4absl6StrCatERKNS_8AlphaNumE"}
!31 = !{i32 0, i32 33}
!32 = !{!33, !35}
!33 = distinct !{!33, !34, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!34 = distinct !{!34, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!35 = distinct !{!35, !36, !"_ZN4absl15AsciiStrToLowerENS_11string_viewE: argument 0"}
!36 = distinct !{!36, !"_ZN4absl15AsciiStrToLowerENS_11string_viewE"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE5beginEv: argument 0"}
!39 = distinct !{!39, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE5beginEv"}
!40 = distinct !{!40, !41}
!41 = !{!"llvm.loop.unroll.disable"}
!42 = distinct !{!42, !41}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK4spdy16Http2HeaderBlock4findEN4absl11string_viewE: argument 0"}
!45 = distinct !{!45, !"_ZNK4spdy16Http2HeaderBlock4findEN4absl11string_viewE"}
