; ModuleID = '../../ui/events/gesture_detection/snap_scroll_controller.cc'
source_filename = "../../ui/events/gesture_detection/snap_scroll_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::SnapScrollController" = type { float, float, i32, %"class.gfx::PointF", %"class.gfx::Vector2dF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.ui::MotionEvent" = type { i32 (...)** }

@_ZN2ui20SnapScrollControllerC1EfRKN3gfx5SizeFE = hidden unnamed_addr alias void (%"class.ui::SnapScrollController"*, float, %"class.gfx::SizeF"*), void (%"class.ui::SnapScrollController"*, float, %"class.gfx::SizeF"*)* @_ZN2ui20SnapScrollControllerC2EfRKN3gfx5SizeFE
@_ZN2ui20SnapScrollControllerD1Ev = hidden unnamed_addr alias void (%"class.ui::SnapScrollController"*), void (%"class.ui::SnapScrollController"*)* @_ZN2ui20SnapScrollControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20SnapScrollControllerC2EfRKN3gfx5SizeFE(%"class.ui::SnapScrollController"* nocapture, float, %"class.gfx::SizeF"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 0
  store float %1, float* %4, align 4
  %5 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 1
  %6 = fmul float %1, 1.500000e+00
  %7 = fmul float %6, 3.000000e+00
  %8 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %2, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp une float %9, 0.000000e+00
  br i1 %10, label %11, label %24

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %2, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = fcmp oeq float %13, 0.000000e+00
  br i1 %14, label %24, label %15

15:                                               ; preds = %11
  %16 = fdiv float %6, 4.800000e+02
  %17 = tail call float @hypotf(float %9, float %13) #7
  %18 = tail call float @llvm.fabs.f32(float %17) #7
  %19 = fmul float %16, %18
  %20 = fcmp olt float %19, %7
  %21 = select i1 %20, float %19, float %7
  %22 = fcmp olt float %6, %21
  %23 = select i1 %22, float %21, float %6
  br label %24

24:                                               ; preds = %3, %11, %15
  %25 = phi float [ %23, %15 ], [ %6, %11 ], [ %6, %3 ]
  store float %25, float* %5, align 4
  %26 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 2
  %27 = bitcast i32* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui20SnapScrollControllerD2Ev(%"class.ui::SnapScrollController"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20SnapScrollController17SetSnapScrollModeERKNS_11MotionEventEb(%"class.ui::SnapScrollController"* nocapture, %"class.ui::MotionEvent"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*)***
  %5 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %5, i64 3
  %7 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %6, align 8
  %8 = tail call i32 %7(%"class.ui::MotionEvent"* %1) #7
  switch i32 %8, label %80 [
    i32 1, label %9
    i32 3, label %22
    i32 2, label %77
    i32 4, label %77
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 2
  store i32 1, i32* %10, align 4
  %11 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %12 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %11, align 8
  %13 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %12, i64 7
  %14 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %13, align 8
  %15 = tail call float %14(%"class.ui::MotionEvent"* %1, i64 0) #7
  %16 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 3, i32 0
  store float %15, float* %16, align 4
  %17 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %11, align 8
  %18 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %17, i64 8
  %19 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %18, align 8
  %20 = tail call float %19(%"class.ui::MotionEvent"* %1, i64 0) #7
  %21 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 3, i32 1
  store float %20, float* %21, align 4
  br label %80

22:                                               ; preds = %3
  br i1 %2, label %80, label %23

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %80

27:                                               ; preds = %23
  %28 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %29 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %28, align 8
  %30 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %29, i64 7
  %31 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %30, align 8
  %32 = tail call float %31(%"class.ui::MotionEvent"* %1, i64 0) #7
  %33 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 3, i32 0
  %34 = load float, float* %33, align 4
  %35 = fsub float %32, %34
  %36 = tail call float @llvm.fabs.f32(float %35) #7
  %37 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %28, align 8
  %38 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %37, i64 8
  %39 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %38, align 8
  %40 = tail call float %39(%"class.ui::MotionEvent"* %1, i64 0) #7
  %41 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 3, i32 1
  %42 = load float, float* %41, align 4
  %43 = fsub float %40, %42
  %44 = tail call float @llvm.fabs.f32(float %43) #7
  %45 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 0
  %46 = load float, float* %45, align 4
  %47 = fmul float %46, 2.000000e+00
  %48 = fmul float %35, %35
  %49 = fmul float %43, %43
  %50 = fadd float %48, %49
  %51 = fmul float %46, %46
  %52 = fcmp ogt float %50, %51
  br i1 %52, label %53, label %69

53:                                               ; preds = %27
  %54 = fcmp une float %43, 0.000000e+00
  br i1 %54, label %55, label %60

55:                                               ; preds = %53
  %56 = fdiv float %36, %44
  %57 = fcmp ogt float %56, 1.250000e+00
  %58 = fcmp olt float %44, %47
  %59 = and i1 %58, %57
  br i1 %59, label %60, label %61

60:                                               ; preds = %55, %53
  store i32 2, i32* %24, align 4
  br label %69

61:                                               ; preds = %55
  %62 = fcmp une float %35, 0.000000e+00
  br i1 %62, label %63, label %68

63:                                               ; preds = %61
  %64 = fdiv float %44, %36
  %65 = fcmp ogt float %64, 1.250000e+00
  %66 = fcmp olt float %36, %47
  %67 = and i1 %66, %65
  br i1 %67, label %68, label %69

68:                                               ; preds = %63, %61
  store i32 3, i32* %24, align 4
  br label %69

69:                                               ; preds = %60, %68, %63, %27
  %70 = load i32, i32* %24, align 4
  %71 = icmp eq i32 %70, 1
  %72 = fcmp ogt float %36, %47
  %73 = and i1 %72, %71
  %74 = fcmp ogt float %44, %47
  %75 = and i1 %74, %73
  br i1 %75, label %76, label %80

76:                                               ; preds = %69
  store i32 0, i32* %24, align 4
  br label %80

77:                                               ; preds = %3, %3
  %78 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 3
  %79 = bitcast %"class.gfx::PointF"* %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %79, i8 0, i64 16, i1 false)
  br label %80

80:                                               ; preds = %69, %76, %23, %3, %22, %77, %9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20SnapScrollController20UpdateSnapScrollModeEff(%"class.ui::SnapScrollController"*, float, float) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Vector2dF", align 4
  %5 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = or i32 %6, 1
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %9, label %45

9:                                                ; preds = %3
  %10 = bitcast %"class.gfx::Vector2dF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7
  %11 = tail call float @llvm.fabs.f32(float %1) #7
  %12 = tail call float @llvm.fabs.f32(float %2) #7
  %13 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %4, i64 0, i32 0
  store float %11, float* %13, align 4
  %14 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %4, i64 0, i32 1
  store float %12, float* %14, align 4
  %15 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 4
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* %15, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7
  %16 = load i32, i32* %5, align 4
  switch i32 %16, label %45 [
    i32 2, label %17
    i32 3, label %31
  ]

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 4, i32 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = fcmp ogt float %19, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %45

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %15, i64 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fcmp ogt float %26, %21
  br i1 %27, label %28, label %45

28:                                               ; preds = %24
  %29 = bitcast %"class.gfx::Vector2dF"* %15 to i32*
  store i32 0, i32* %29, align 4
  %30 = bitcast float* %18 to i32*
  store i32 0, i32* %30, align 4
  br label %45

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %15, i64 0, i32 0
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 1
  %35 = load float, float* %34, align 4
  %36 = fcmp ogt float %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %31
  store i32 0, i32* %5, align 4
  br label %45

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 4, i32 1
  %40 = load float, float* %39, align 4
  %41 = fcmp ogt float %40, %35
  br i1 %41, label %42, label %45

42:                                               ; preds = %38
  %43 = bitcast %"class.gfx::Vector2dF"* %15 to i32*
  store i32 0, i32* %43, align 4
  %44 = bitcast float* %39 to i32*
  store i32 0, i32* %44, align 4
  br label %45

45:                                               ; preds = %9, %38, %42, %37, %23, %28, %24, %3
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui20SnapScrollController17IsSnappingScrollsEv(%"class.ui::SnapScrollController"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = or i32 %3, 1
  %5 = icmp eq i32 %4, 3
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui20SnapScrollController14IsSnapVerticalEv(%"class.ui::SnapScrollController"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 3
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui20SnapScrollController16IsSnapHorizontalEv(%"class.ui::SnapScrollController"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.ui::SnapScrollController", %"class.ui::SnapScrollController"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 2
  ret i1 %4
}

; Function Attrs: nounwind
declare float @hypotf(float, float) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #5

declare void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
