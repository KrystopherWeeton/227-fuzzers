; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/convert_to_half_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/convert_to_half_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::ConvertToHalfPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8], %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910" }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_set.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.929", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::vector.932" = type { %"class.std::__1::__vector_base.933" }
%"class.std::__1::__vector_base.933" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.spvtools::opt::Instruction"** }
%"struct.std::__1::default_delete.150" = type { i8 }
%"class.spvtools::opt::analysis::Float" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"class.spvtools::opt::analysis::Vector" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Matrix" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.spvtools::opt::InstructionBuilder" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::InstructionList::iterator", i32, [4 x i8] }>
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::tuple.1034" = type { i8 }
%"class.std::__1::function.939" = type { %"class.std::__1::__function::__policy_func.943" }
%"class.std::__1::__function::__policy_func.943" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.944", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.944" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::function.1049" = type { %"class.std::__1::__function::__policy_func.1053" }
%"class.std::__1::__function::__policy_func.1053" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1054", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1054" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.945" = type { %"class.std::__1::__function::__policy_func.949" }
%"class.std::__1::__function::__policy_func.949" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.950", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.950" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.955" = type { %"class.std::__1::__function::__policy_func.959" }
%"class.std::__1::__function::__policy_func.959" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.960", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.960" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::function.962" = type { %"class.std::__1::__function::__policy_func.966" }
%"class.std::__1::__function::__policy_func.966" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.967", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.967" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* }
%"class.std::__1::function.971" = type { %"class.std::__1::__function::__policy_func.975" }
%"class.std::__1::__function::__policy_func.975" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.976", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.976" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* }
%"struct.std::__1::__hash_node.1075" = type <{ %"struct.std::__1::__hash_node_base.915", i64, i32, [4 x i8] }>
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.spvtools::opt::analysis::Void" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Bool" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Integer" = type <{ %"class.spvtools::opt::analysis::Type.base", i32, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Image" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, i32, i32, i8, i8, i32, i32, i32 }
%"class.spvtools::opt::analysis::Sampler" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::SampledImage" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Array" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"struct.spvtools::opt::analysis::Array::LengthInfo" }
%"struct.spvtools::opt::analysis::Array::LengthInfo" = type { i32, %"class.std::__1::vector.3" }
%"class.spvtools::opt::analysis::RuntimeArray" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Struct" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::vector.978", %"class.std::__1::map.985" }
%"class.std::__1::vector.978" = type { %"class.std::__1::__vector_base.979" }
%"class.std::__1::__vector_base.979" = type { %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"**, %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.spvtools::opt::analysis::Type"** }
%"class.std::__1::map.985" = type { %"class.std::__1::__tree.986" }
%"class.std::__1::__tree.986" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.987", %"class.std::__1::__compressed_pair.991" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::analysis::Opaque" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.spvtools::opt::analysis::Pointer" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Function" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.978" }
%"class.spvtools::opt::analysis::Event" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::DeviceEvent" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::ReserveId" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Queue" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Pipe" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::ForwardPointer" = type { %"class.spvtools::opt::analysis::Type.base", i32, i32, %"class.spvtools::opt::analysis::Pointer"* }
%"class.spvtools::opt::analysis::PipeStorage" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::NamedBarrier" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::AccelerationStructureNV" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::CooperativeMatrixNV" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, i32, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::RayQueryKHR" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.std::__1::__tree_node.1011" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1012" }
%"struct.std::__1::pair.1012" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::function.1023" = type { %"class.std::__1::__function::__policy_func.1027" }
%"class.std::__1::__function::__policy_func.1027" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1028", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1028" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__function::__default_alloc_func.1093" = type { %class.anon.951 }
%class.anon.951 = type { %"class.spvtools::opt::Instruction"**, i8*, %"class.spvtools::opt::ConvertToHalfPass"* }
%"class.std::__1::__function::__default_alloc_func.1095" = type { %class.anon.952 }
%class.anon.952 = type { i32*, i32**, %"class.spvtools::opt::ConvertToHalfPass"* }
%"class.std::__1::__function::__default_alloc_func.1097" = type { %class.anon.953 }
%class.anon.953 = type { %"class.spvtools::opt::Instruction"**, i8*, %"class.spvtools::opt::ConvertToHalfPass"* }

$_ZN8spvtools3opt8analysis4TypeD2Ev = comdat any

$_ZN8spvtools3opt18InstructionBuilder12AddNullaryOpEj6SpvOp_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j = comdat any

$_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE = comdat any

$_ZN8spvtools3opt9IRContext13AddCapabilityE14SpvCapability_ = comdat any

$_ZN8spvtools3opt17ConvertToHalfPassD2Ev = comdat any

$_ZN8spvtools3opt17ConvertToHalfPassD0Ev = comdat any

$_ZNK8spvtools3opt17ConvertToHalfPass4nameEv = comdat any

$_ZN8spvtools3opt17ConvertToHalfPass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt8analysis4TypeD0Ev = comdat any

$_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZNK8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt9IRContext13AddCapabilityEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEj = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE15__assign_uniqueIPKjEEvT_SB_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE28__node_insert_unique_prepareEmRj = comdat any

$_ZTVN8spvtools3opt8analysis4TypeE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@.ref.tmp = private constant [36 x i32] [i32 77, i32 78, i32 79, i32 80, i32 82, i32 81, i32 83, i32 84, i32 111, i32 112, i32 127, i32 129, i32 131, i32 133, i32 136, i32 141, i32 142, i32 143, i32 144, i32 145, i32 146, i32 147, i32 148, i32 169, i32 180, i32 181, i32 182, i32 183, i32 184, i32 185, i32 186, i32 187, i32 188, i32 189, i32 190, i32 191], align 4
@.ref.tmp.1 = private constant [50 x i32] [i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 37, i32 40, i32 43, i32 46, i32 48, i32 49, i32 50, i32 53, i32 66, i32 67, i32 68, i32 69, i32 70, i32 71, i32 72, i32 79, i32 80, i32 81], align 4
@.ref.tmp.2 = private constant [25 x i32] [i32 87, i32 88, i32 89, i32 90, i32 91, i32 92, i32 93, i32 94, i32 95, i32 96, i32 97, i32 98, i32 305, i32 306, i32 307, i32 308, i32 309, i32 310, i32 311, i32 312, i32 313, i32 314, i32 315, i32 316, i32 320], align 4
@.ref.tmp.3 = private constant [10 x i32] [i32 89, i32 90, i32 93, i32 94, i32 97, i32 307, i32 308, i32 311, i32 312, i32 315], align 4
@.ref.tmp.4 = private constant [9 x i32] [i32 77, i32 78, i32 79, i32 80, i32 82, i32 81, i32 83, i32 84, i32 245], align 4
@_ZTVN8spvtools3opt17ConvertToHalfPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::ConvertToHalfPass"*)* @_ZN8spvtools3opt17ConvertToHalfPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::ConvertToHalfPass"*)* @_ZN8spvtools3opt17ConvertToHalfPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::ConvertToHalfPass"*)* @_ZNK8spvtools3opt17ConvertToHalfPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::ConvertToHalfPass"*)* @_ZN8spvtools3opt17ConvertToHalfPass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::ConvertToHalfPass"*)* @_ZN8spvtools3opt17ConvertToHalfPass7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools3opt8analysis5FloatE = external unnamed_addr constant { [61 x i8*] }, align 8
@_ZTVN8spvtools3opt8analysis4TypeE = linkonce_odr hidden unnamed_addr constant { [61 x i8*] } { [61 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@.str.5 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp.7 = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.8 = private unnamed_addr constant [21 x i8] c"convert-to-half-pass\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass23RemoveRelaxedDecorationEjE3$_0FbRKNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass12GenHalfArithEPNS5_11InstructionEE3$_1FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass12GenHalfArithEPNS5_11InstructionEE3$_1FvPjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass12GenHalfArithEPNS5_11InstructionEE3$_1FvPjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass10ProcessPhiEPNS5_11InstructionEE3$_2FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass10ProcessPhiEPNS5_11InstructionEE3$_2FvPjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass10ProcessPhiEPNS5_11InstructionEE3$_2FvPjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14ProcessDefaultEPNS5_11InstructionEE3$_3FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14ProcessDefaultEPNS5_11InstructionEE3$_3FvPjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14ProcessDefaultEPNS5_11InstructionEE3$_3FvPjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14CloseRelaxInstEPNS5_11InstructionEE3$_4FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14CloseRelaxInstEPNS5_11InstructionEE3$_5FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass15ProcessFunctionEPNS5_8FunctionEE3$_6FvPNS5_10BasicBlockEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass15ProcessFunctionEPNS5_8FunctionEE3$_7FvPNS5_10BasicBlockEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass15ProcessFunctionEPNS5_8FunctionEE3$_8FvPNS5_10BasicBlockEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass11ProcessImplEvE3$_9FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass12IsArithmeticEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %57, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"* %24, null
  br i1 %25, label %57, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.915"* %28, null
  br i1 %29, label %57, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.915"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %57

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.915"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %159, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.915"* %55, null
  br i1 %56, label %57, label %32

57:                                               ; preds = %53, %45, %19, %2, %26
  %58 = icmp eq i32 %4, 12
  br i1 %58, label %59, label %159

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %61 = load i8, i8* %60, align 4, !range !3
  %62 = icmp eq i8 %61, 0
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %64 = load i8, i8* %63, align 1, !range !3
  %65 = icmp eq i8 %64, 0
  %66 = select i1 %65, i32 1, i32 2
  %67 = xor i1 %65, true
  %68 = zext i1 %67 to i32
  %69 = select i1 %62, i32 %68, i32 %66
  %70 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %69) #11
  %71 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %72 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %71, align 8
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %72, i64 0, i32 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %74, align 8
  %76 = icmp eq %"class.spvtools::opt::FeatureManager"* %75, null
  br i1 %76, label %77, label %88

77:                                               ; preds = %59
  %78 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %72, i64 0, i32 1
  %79 = tail call i8* @_Znwm(i64 48) #12
  %80 = bitcast i8* %79 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %78, %"class.spvtools::AssemblyGrammar"** %80, align 8
  %81 = getelementptr inbounds i8, i8* %79, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 40, i1 false) #11
  %82 = ptrtoint i8* %79 to i64
  %83 = bitcast %"class.std::__1::unique_ptr.152"* %73 to i64*
  store i64 %82, i64* %83, align 8
  %84 = bitcast i8* %79 to %"class.spvtools::opt::FeatureManager"*
  %85 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %72, i64 0, i32 4, i32 0, i32 0, i32 0
  %86 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %85, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* nonnull %84, %"class.spvtools::opt::Module"* %86) #11
  %87 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %74, align 8
  br label %88

88:                                               ; preds = %59, %77
  %89 = phi %"class.spvtools::opt::FeatureManager"* [ %75, %59 ], [ %87, %77 ]
  %90 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %89, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %70, %91
  br i1 %92, label %93, label %159

93:                                               ; preds = %88
  %94 = load i8, i8* %60, align 4, !range !3
  %95 = icmp eq i8 %94, 0
  %96 = load i8, i8* %63, align 1, !range !3
  %97 = icmp eq i8 %96, 0
  %98 = select i1 %97, i32 1, i32 2
  %99 = xor i1 %97, true
  %100 = zext i1 %99 to i32
  %101 = select i1 %95, i32 %100, i32 %98
  %102 = add nuw nsw i32 %101, 1
  %103 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %102) #11
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %156, label %108

108:                                              ; preds = %93
  %109 = tail call i64 @llvm.ctpop.i64(i64 %106) #11, !range !2
  %110 = icmp ugt i64 %109, 1
  br i1 %110, label %114, label %111

111:                                              ; preds = %108
  %112 = add i64 %106, 4294967295
  %113 = and i64 %112, %104
  br label %118

114:                                              ; preds = %108
  %115 = icmp ugt i64 %106, %104
  br i1 %115, label %118, label %116

116:                                              ; preds = %114
  %117 = urem i64 %104, %106
  br label %118

118:                                              ; preds = %116, %114, %111
  %119 = phi i64 [ %113, %111 ], [ %117, %116 ], [ %104, %114 ]
  %120 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %121, i64 %119
  %123 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %122, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.915"* %123, null
  br i1 %124, label %156, label %125

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %123, i64 0, i32 0
  %127 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %126, align 8
  %128 = icmp eq %"struct.std::__1::__hash_node_base.915"* %127, null
  br i1 %128, label %156, label %129

129:                                              ; preds = %125
  %130 = add i64 %106, -1
  br label %131

131:                                              ; preds = %152, %129
  %132 = phi %"struct.std::__1::__hash_node_base.915"* [ %127, %129 ], [ %154, %152 ]
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %132, i64 1
  %134 = bitcast %"struct.std::__1::__hash_node_base.915"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = icmp eq i64 %135, %104
  br i1 %136, label %147, label %137

137:                                              ; preds = %131
  br i1 %110, label %140, label %138

138:                                              ; preds = %137
  %139 = and i64 %135, %130
  br label %144

140:                                              ; preds = %137
  %141 = icmp ult i64 %135, %106
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %135, %106
  br label %144

144:                                              ; preds = %142, %140, %138
  %145 = phi i64 [ %139, %138 ], [ %143, %142 ], [ %135, %140 ]
  %146 = icmp eq i64 %145, %119
  br i1 %146, label %152, label %156

147:                                              ; preds = %131
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %132, i64 2
  %149 = bitcast %"struct.std::__1::__hash_node_base.915"* %148 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, %103
  br i1 %151, label %156, label %152

152:                                              ; preds = %147, %144
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %132, i64 0, i32 0
  %154 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %153, align 8
  %155 = icmp eq %"struct.std::__1::__hash_node_base.915"* %154, null
  br i1 %155, label %156, label %131

156:                                              ; preds = %144, %147, %152, %93, %118, %125
  %157 = phi %"struct.std::__1::__hash_node_base.915"* [ null, %118 ], [ null, %93 ], [ null, %125 ], [ null, %144 ], [ null, %152 ], [ %132, %147 ]
  %158 = icmp ne %"struct.std::__1::__hash_node_base.915"* %157, null
  br label %159

159:                                              ; preds = %48, %57, %88, %156
  %160 = phi i1 [ false, %88 ], [ false, %57 ], [ %158, %156 ], [ true, %48 ]
  ret i1 %160
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass7IsFloatEPNS0_11InstructionEj(%"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %5 = load i8, i8* %4, align 4, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = bitcast %"class.spvtools::opt::ConvertToHalfPass"* %0 to %"class.spvtools::opt::Pass"*
  %12 = tail call zeroext i1 @_ZN8spvtools3opt4Pass7IsFloatEjj(%"class.spvtools::opt::Pass"* %11, i32 %8, i32 %2) #11
  br label %13

13:                                               ; preds = %3, %7, %10
  %14 = phi i1 [ %12, %10 ], [ false, %7 ], [ false, %3 ]
  ret i1 %14
}

declare zeroext i1 @_ZN8spvtools3opt4Pass7IsFloatEjj(%"class.spvtools::opt::Pass"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass18IsDecoratedRelaxedEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.932", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %5 = load i8, i8* %4, align 1, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %9 = load i8, i8* %8, align 4, !range !3
  %10 = zext i8 %9 to i32
  %11 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %10) #11
  br label %12

12:                                               ; preds = %2, %7
  %13 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %14 = bitcast %"class.std::__1::vector.932"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %16 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 11
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %42

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %23 = bitcast %"class.spvtools::opt::Module"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = tail call i8* @_Znwm(i64 48) #12
  %26 = bitcast i8* %25 to %"class.spvtools::opt::analysis::DecorationManager"*
  %27 = getelementptr inbounds i8, i8* %25, i64 32
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %25, i64 40
  %30 = bitcast i8* %29 to i64*
  store i64 %24, i64* %30, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %26) #11
  %31 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 7
  %32 = ptrtoint i8* %25 to i64
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %31, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %33, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.122"* %31 to i64*
  store i64 %32, i64* %35, align 8
  %36 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %34, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %21
  %38 = bitcast %"class.std::__1::unique_ptr.122"* %31 to %"struct.std::__1::default_delete.150"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %38, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %34) #11
  br label %39

39:                                               ; preds = %37, %21
  %40 = load i32, i32* %17, align 8
  %41 = or i32 %40, 4
  store i32 %41, i32* %17, align 8
  br label %42

42:                                               ; preds = %12, %39
  %43 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 7, i32 0, i32 0, i32 0
  %44 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %43, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager17GetDecorationsForEjb(%"class.std::__1::vector.932"* nonnull sret %3, %"class.spvtools::opt::analysis::DecorationManager"* %44, i32 %13, i1 zeroext false) #11
  %45 = getelementptr inbounds %"class.std::__1::vector.932", %"class.std::__1::vector.932"* %3, i64 0, i32 0, i32 0
  %46 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::vector.932", %"class.std::__1::vector.932"* %3, i64 0, i32 0, i32 1
  %48 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %47, align 8
  %49 = icmp eq %"class.spvtools::opt::Instruction"** %46, %48
  br i1 %49, label %76, label %50

50:                                               ; preds = %42, %70
  %51 = phi %"class.spvtools::opt::Instruction"** [ %71, %70 ], [ %46, %42 ]
  %52 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %51, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 71
  br i1 %55, label %56, label %70

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 3
  %58 = load i8, i8* %57, align 4, !range !3
  %59 = icmp eq i8 %58, 0
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 4
  %61 = load i8, i8* %60, align 1, !range !3
  %62 = icmp eq i8 %61, 0
  %63 = select i1 %62, i32 1, i32 2
  %64 = xor i1 %62, true
  %65 = zext i1 %64 to i32
  %66 = select i1 %59, i32 %65, i32 %63
  %67 = add nuw nsw i32 %66, 1
  %68 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %52, i32 %67) #11
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %50, %56
  %71 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %51, i64 1
  %72 = icmp eq %"class.spvtools::opt::Instruction"** %71, %48
  br i1 %72, label %73, label %50

73:                                               ; preds = %70, %56
  %74 = phi i32 [ 1, %56 ], [ 2, %70 ]
  %75 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %45, align 8
  br label %76

76:                                               ; preds = %73, %42
  %77 = phi %"class.spvtools::opt::Instruction"** [ %46, %42 ], [ %75, %73 ]
  %78 = phi i32 [ 2, %42 ], [ %74, %73 ]
  %79 = icmp eq %"class.spvtools::opt::Instruction"** %77, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %76
  %81 = ptrtoint %"class.spvtools::opt::Instruction"** %77 to i64
  %82 = bitcast %"class.spvtools::opt::Instruction"*** %47 to i64*
  store i64 %81, i64* %82, align 8
  %83 = bitcast %"class.spvtools::opt::Instruction"** %77 to i8*
  call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %76, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  %85 = icmp ne i32 %78, 2
  ret i1 %85
}

declare void @_ZN8spvtools3opt8analysis17DecorationManager17GetDecorationsForEjb(%"class.std::__1::vector.932"* sret, %"class.spvtools::opt::analysis::DecorationManager"*, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass9IsRelaxedEj(%"class.spvtools::opt::ConvertToHalfPass"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %55, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #11, !range !2
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, 4294967295
  %12 = and i64 %11, %3
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %3
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %3, %5
  br label %17

17:                                               ; preds = %15, %13, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %3, %13 ]
  %19 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.915"* %22, null
  br i1 %23, label %55, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %22, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %24
  %29 = add i64 %5, -1
  br label %30

30:                                               ; preds = %51, %28
  %31 = phi %"struct.std::__1::__hash_node_base.915"* [ %26, %28 ], [ %53, %51 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 1
  %33 = bitcast %"struct.std::__1::__hash_node_base.915"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  br i1 %9, label %39, label %37

37:                                               ; preds = %36
  %38 = and i64 %34, %29
  br label %43

39:                                               ; preds = %36
  %40 = icmp ult i64 %34, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %34, %5
  br label %43

43:                                               ; preds = %41, %39, %37
  %44 = phi i64 [ %38, %37 ], [ %42, %41 ], [ %34, %39 ]
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %51, label %55

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base.915"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base.915"* %53, null
  br i1 %54, label %55, label %30

55:                                               ; preds = %43, %46, %51, %2, %17, %24
  %56 = phi %"struct.std::__1::__hash_node_base.915"* [ null, %17 ], [ null, %2 ], [ null, %24 ], [ null, %43 ], [ null, %51 ], [ %31, %46 ]
  %57 = icmp ne %"struct.std::__1::__hash_node_base.915"* %56, null
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt17ConvertToHalfPass10AddRelaxedEj(%"class.spvtools::opt::ConvertToHalfPass"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0
  %5 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %4, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt17ConvertToHalfPass15FloatScalarTypeEj(%"class.spvtools::opt::ConvertToHalfPass"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::opt::analysis::Float", align 8
  %4 = bitcast %"class.spvtools::opt::analysis::Float"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %7 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %3, i64 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %3, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::vector.463"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #11
  store i32 3, i32* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis5FloatE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 %1, i32* %8, align 4
  %11 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = trunc i32 %14 to i16
  %16 = icmp slt i16 %15, 0
  br i1 %16, label %32, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 5
  %19 = tail call i8* @_Znwm(i64 240) #12
  %20 = bitcast i8* %19 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %20, %"class.std::__1::function"* dereferenceable(32) %18, %"class.spvtools::opt::IRContext"* %12) #11
  %21 = ptrtoint i8* %19 to i64
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 20
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %23, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.480"* %22 to i64*
  store i64 %21, i64* %25, align 8
  %26 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %24, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %17
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %24) #11
  %28 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %24 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %27, %17
  %30 = load i32, i32* %13, align 8
  %31 = or i32 %30, 32768
  store i32 %31, i32* %13, align 8
  br label %32

32:                                               ; preds = %2, %29
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 20, i32 0, i32 0, i32 0
  %34 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %33, align 8
  %35 = bitcast %"class.spvtools::opt::analysis::Float"* %3 to %"class.spvtools::opt::analysis::Type"*
  %36 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %34, %"class.spvtools::opt::analysis::Type"* nonnull %35) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %9, i64 0, i32 0, i32 0
  %38 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %37, align 8
  %39 = icmp eq %"class.std::__1::vector.3"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.std::__1::vector.3"* %38 to i8*
  %42 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %6, align 8
  %43 = icmp eq %"class.std::__1::vector.3"* %42, %38
  br i1 %43, label %60, label %44

44:                                               ; preds = %40, %55
  %45 = phi %"class.std::__1::vector.3"* [ %46, %55 ], [ %42, %40 ]
  %46 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %45, i64 -1
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %46, i64 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %44
  %51 = ptrtoint i32* %48 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %45, i64 -1, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast i32* %48 to i8*
  call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %50, %44
  %56 = icmp eq %"class.std::__1::vector.3"* %46, %38
  br i1 %56, label %57, label %44

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::vector.463"* %9 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %40
  %61 = phi i8* [ %59, %57 ], [ %41, %40 ]
  store %"class.std::__1::vector.3"* %38, %"class.std::__1::vector.3"** %6, align 8
  call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %32, %60
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #11
  ret %"class.spvtools::opt::analysis::Type"* %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD2Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.3"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.3"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.3"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.463"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.3"* %5, %"class.std::__1::vector.3"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt17ConvertToHalfPass15FloatVectorTypeEjj(%"class.spvtools::opt::ConvertToHalfPass"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.spvtools::opt::analysis::Vector", align 8
  %5 = tail call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt17ConvertToHalfPass15FloatScalarTypeEj(%"class.spvtools::opt::ConvertToHalfPass"* %0, i32 %2)
  %6 = bitcast %"class.spvtools::opt::analysis::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  call void @_ZN8spvtools3opt8analysis6VectorC1EPKNS1_4TypeEj(%"class.spvtools::opt::analysis::Vector"* nonnull %4, %"class.spvtools::opt::analysis::Type"* %5, i32 %1) #11
  %7 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = trunc i32 %10 to i16
  %12 = icmp slt i16 %11, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 5
  %15 = call i8* @_Znwm(i64 240) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %16, %"class.std::__1::function"* dereferenceable(32) %14, %"class.spvtools::opt::IRContext"* %8) #11
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 20
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.480"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %20) #11
  %24 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %20 to i8*
  call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %13
  %26 = load i32, i32* %9, align 8
  %27 = or i32 %26, 32768
  store i32 %27, i32* %9, align 8
  br label %28

28:                                               ; preds = %3, %25
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 20, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %29, align 8
  %31 = bitcast %"class.spvtools::opt::analysis::Vector"* %4 to %"class.spvtools::opt::analysis::Type"*
  %32 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %30, %"class.spvtools::opt::analysis::Type"* nonnull %31) #11
  %33 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %4, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %35, align 8
  %37 = icmp eq %"class.std::__1::vector.3"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %28
  %39 = bitcast %"class.std::__1::vector.3"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %41 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %40, align 8
  %42 = icmp eq %"class.std::__1::vector.3"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.std::__1::vector.3"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %44, i64 -1
  %46 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %45, i64 0, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = icmp eq i32* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = ptrtoint i32* %47 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %44, i64 -1, i32 0, i32 1
  %52 = bitcast i32** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast i32* %47 to i8*
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.std::__1::vector.3"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.463"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.std::__1::vector.3"* %36, %"class.std::__1::vector.3"** %40, align 8
  call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %28, %59
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #11
  ret %"class.spvtools::opt::analysis::Type"* %32
}

declare void @_ZN8spvtools3opt8analysis6VectorC1EPKNS1_4TypeEj(%"class.spvtools::opt::analysis::Vector"*, %"class.spvtools::opt::analysis::Type"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt17ConvertToHalfPass15FloatMatrixTypeEjjj(%"class.spvtools::opt::ConvertToHalfPass"* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.spvtools::opt::analysis::Matrix", align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %36

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i8* @_Znwm(i64 104) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::DefUseManager"*
  %17 = getelementptr inbounds i8, i8* %15, i64 32
  %18 = bitcast i8* %17 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %15, i64 48
  %20 = getelementptr inbounds i8, i8* %15, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #11
  %21 = bitcast i8* %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 64
  %23 = getelementptr inbounds i8, i8* %15, i64 96
  %24 = bitcast i8* %23 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %24, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %16, %"class.spvtools::opt::Module"* %14) #11
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 6
  %26 = ptrtoint i8* %15 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %25, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %27, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.62"* %25 to i64*
  store i64 %26, i64* %29, align 8
  %30 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %28, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %12
  %32 = bitcast %"class.std::__1::unique_ptr.62"* %25 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %32, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %28) #11
  br label %33

33:                                               ; preds = %31, %12
  %34 = load i32, i32* %8, align 8
  %35 = or i32 %34, 1
  store i32 %35, i32* %8, align 8
  br label %36

36:                                               ; preds = %4, %33
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 6, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %37, align 8
  %39 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %38, i32 %2) #11
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 3
  %41 = load i8, i8* %40, align 4, !range !3
  %42 = icmp eq i8 %41, 0
  %43 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 4
  %44 = load i8, i8* %43, align 1, !range !3
  %45 = icmp eq i8 %44, 0
  %46 = select i1 %45, i32 1, i32 2
  %47 = xor i1 %45, true
  %48 = zext i1 %47 to i32
  %49 = select i1 %42, i32 %48, i32 %46
  %50 = add nuw nsw i32 %49, 1
  %51 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %39, i32 %50) #11
  %52 = tail call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt17ConvertToHalfPass15FloatVectorTypeEjj(%"class.spvtools::opt::ConvertToHalfPass"* %0, i32 %51, i32 %3)
  %53 = bitcast %"class.spvtools::opt::analysis::Matrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %53) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 56, i1 false)
  call void @_ZN8spvtools3opt8analysis6MatrixC1EPKNS1_4TypeEj(%"class.spvtools::opt::analysis::Matrix"* nonnull %5, %"class.spvtools::opt::analysis::Type"* %52, i32 %1) #11
  %54 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %55 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %54, i64 0, i32 11
  %56 = load i32, i32* %55, align 8
  %57 = trunc i32 %56 to i16
  %58 = icmp slt i16 %57, 0
  br i1 %58, label %74, label %59

59:                                               ; preds = %36
  %60 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %54, i64 0, i32 5
  %61 = call i8* @_Znwm(i64 240) #12
  %62 = bitcast i8* %61 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %62, %"class.std::__1::function"* dereferenceable(32) %60, %"class.spvtools::opt::IRContext"* %54) #11
  %63 = ptrtoint i8* %61 to i64
  %64 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %54, i64 0, i32 20
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %65, align 8
  %67 = bitcast %"class.std::__1::unique_ptr.480"* %64 to i64*
  store i64 %63, i64* %67, align 8
  %68 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %66, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %59
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %66) #11
  %70 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %66 to i8*
  call void @_ZdlPv(i8* %70) #12
  br label %71

71:                                               ; preds = %69, %59
  %72 = load i32, i32* %55, align 8
  %73 = or i32 %72, 32768
  store i32 %73, i32* %55, align 8
  br label %74

74:                                               ; preds = %36, %71
  %75 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %54, i64 0, i32 20, i32 0, i32 0, i32 0
  %76 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %75, align 8
  %77 = bitcast %"class.spvtools::opt::analysis::Matrix"* %5 to %"class.spvtools::opt::analysis::Type"*
  %78 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %76, %"class.spvtools::opt::analysis::Type"* nonnull %77) #11
  %79 = getelementptr inbounds %"class.spvtools::opt::analysis::Matrix", %"class.spvtools::opt::analysis::Matrix"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8
  %80 = getelementptr inbounds %"class.spvtools::opt::analysis::Matrix", %"class.spvtools::opt::analysis::Matrix"* %5, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %81, align 8
  %83 = icmp eq %"class.std::__1::vector.3"* %82, null
  br i1 %83, label %107, label %84

84:                                               ; preds = %74
  %85 = bitcast %"class.std::__1::vector.3"* %82 to i8*
  %86 = getelementptr inbounds %"class.spvtools::opt::analysis::Matrix", %"class.spvtools::opt::analysis::Matrix"* %5, i64 0, i32 0, i32 1, i32 0, i32 1
  %87 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %86, align 8
  %88 = icmp eq %"class.std::__1::vector.3"* %87, %82
  br i1 %88, label %105, label %89

89:                                               ; preds = %84, %100
  %90 = phi %"class.std::__1::vector.3"* [ %91, %100 ], [ %87, %84 ]
  %91 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %90, i64 -1
  %92 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %91, i64 0, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = icmp eq i32* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %89
  %96 = ptrtoint i32* %93 to i64
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %90, i64 -1, i32 0, i32 1
  %98 = bitcast i32** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = bitcast i32* %93 to i8*
  call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %95, %89
  %101 = icmp eq %"class.std::__1::vector.3"* %91, %82
  br i1 %101, label %102, label %89

102:                                              ; preds = %100
  %103 = bitcast %"class.std::__1::vector.463"* %80 to i8**
  %104 = load i8*, i8** %103, align 8
  br label %105

105:                                              ; preds = %102, %84
  %106 = phi i8* [ %104, %102 ], [ %85, %84 ]
  store %"class.std::__1::vector.3"* %82, %"class.std::__1::vector.3"** %86, align 8
  call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %74, %105
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %53) #11
  ret %"class.spvtools::opt::analysis::Type"* %78
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis6MatrixC1EPKNS1_4TypeEj(%"class.spvtools::opt::analysis::Matrix"*, %"class.spvtools::opt::analysis::Type"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt17ConvertToHalfPass16EquivFloatTypeIdEjj(%"class.spvtools::opt::ConvertToHalfPass"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %34

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 104) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::DefUseManager"*
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = getelementptr inbounds i8, i8* %13, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #11
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 64
  %21 = getelementptr inbounds i8, i8* %13, i64 96
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %22, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %14, %"class.spvtools::opt::Module"* %12) #11
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6
  %24 = ptrtoint i8* %13 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %23 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %10
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %23 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %30, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %26) #11
  br label %31

31:                                               ; preds = %29, %10
  %32 = load i32, i32* %6, align 8
  %33 = or i32 %32, 1
  store i32 %33, i32* %6, align 8
  br label %34

34:                                               ; preds = %3, %31
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %35, align 8
  %37 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %36, i32 %1) #11
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 2
  %39 = load i32, i32* %38, align 8
  switch i32 %39, label %77 [
    i32 24, label %40
    i32 23, label %63
  ]

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 3
  %42 = load i8, i8* %41, align 4, !range !3
  %43 = icmp eq i8 %42, 0
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 4
  %45 = load i8, i8* %44, align 1, !range !3
  %46 = icmp eq i8 %45, 0
  %47 = select i1 %46, i32 1, i32 2
  %48 = xor i1 %46, true
  %49 = zext i1 %48 to i32
  %50 = select i1 %43, i32 %49, i32 %47
  %51 = add nuw nsw i32 %50, 1
  %52 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %37, i32 %51) #11
  %53 = load i8, i8* %41, align 4, !range !3
  %54 = icmp eq i8 %53, 0
  %55 = load i8, i8* %44, align 1, !range !3
  %56 = icmp eq i8 %55, 0
  %57 = select i1 %56, i32 1, i32 2
  %58 = xor i1 %56, true
  %59 = zext i1 %58 to i32
  %60 = select i1 %54, i32 %59, i32 %57
  %61 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %37, i32 %60) #11
  %62 = tail call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt17ConvertToHalfPass15FloatMatrixTypeEjjj(%"class.spvtools::opt::ConvertToHalfPass"* %0, i32 %52, i32 %61, i32 %2)
  br label %79

63:                                               ; preds = %34
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 3
  %65 = load i8, i8* %64, align 4, !range !3
  %66 = icmp eq i8 %65, 0
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 4
  %68 = load i8, i8* %67, align 1, !range !3
  %69 = icmp eq i8 %68, 0
  %70 = select i1 %69, i32 1, i32 2
  %71 = xor i1 %69, true
  %72 = zext i1 %71 to i32
  %73 = select i1 %66, i32 %72, i32 %70
  %74 = add nuw nsw i32 %73, 1
  %75 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %37, i32 %74) #11
  %76 = tail call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt17ConvertToHalfPass15FloatVectorTypeEjj(%"class.spvtools::opt::ConvertToHalfPass"* %0, i32 %75, i32 %2)
  br label %79

77:                                               ; preds = %34
  %78 = tail call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt17ConvertToHalfPass15FloatScalarTypeEj(%"class.spvtools::opt::ConvertToHalfPass"* %0, i32 %2)
  br label %79

79:                                               ; preds = %63, %77, %40
  %80 = phi %"class.spvtools::opt::analysis::Type"* [ %62, %40 ], [ %76, %63 ], [ %78, %77 ]
  %81 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %81, i64 0, i32 11
  %83 = load i32, i32* %82, align 8
  %84 = trunc i32 %83 to i16
  %85 = icmp slt i16 %84, 0
  br i1 %85, label %101, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %81, i64 0, i32 5
  %88 = tail call i8* @_Znwm(i64 240) #12
  %89 = bitcast i8* %88 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %89, %"class.std::__1::function"* dereferenceable(32) %87, %"class.spvtools::opt::IRContext"* %81) #11
  %90 = ptrtoint i8* %88 to i64
  %91 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %81, i64 0, i32 20
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %92, align 8
  %94 = bitcast %"class.std::__1::unique_ptr.480"* %91 to i64*
  store i64 %90, i64* %94, align 8
  %95 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %93, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %86
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %93) #11
  %97 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %93 to i8*
  tail call void @_ZdlPv(i8* %97) #12
  br label %98

98:                                               ; preds = %96, %86
  %99 = load i32, i32* %82, align 8
  %100 = or i32 %99, 32768
  store i32 %100, i32* %82, align 8
  br label %101

101:                                              ; preds = %79, %98
  %102 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %81, i64 0, i32 20, i32 0, i32 0, i32 0
  %103 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %102, align 8
  %104 = tail call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %103, %"class.spvtools::opt::analysis::Type"* %80) #11
  ret i32 %104
}

declare i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt17ConvertToHalfPass10GenConvertEPjjPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* nocapture readonly, i32* nocapture, i32, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %36

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i8* @_Znwm(i64 104) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::DefUseManager"*
  %17 = getelementptr inbounds i8, i8* %15, i64 32
  %18 = bitcast i8* %17 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %15, i64 48
  %20 = getelementptr inbounds i8, i8* %15, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #11
  %21 = bitcast i8* %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 64
  %23 = getelementptr inbounds i8, i8* %15, i64 96
  %24 = bitcast i8* %23 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %24, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %16, %"class.spvtools::opt::Module"* %14) #11
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 6
  %26 = ptrtoint i8* %15 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %25, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %27, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.62"* %25 to i64*
  store i64 %26, i64* %29, align 8
  %30 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %28, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %12
  %32 = bitcast %"class.std::__1::unique_ptr.62"* %25 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %32, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %28) #11
  br label %33

33:                                               ; preds = %31, %12
  %34 = load i32, i32* %8, align 8
  %35 = or i32 %34, 1
  store i32 %35, i32* %8, align 8
  br label %36

36:                                               ; preds = %4, %33
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 6, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %37, align 8
  %39 = load i32, i32* %1, align 4
  %40 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %38, i32 %39) #11
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %40, i64 0, i32 3
  %42 = load i8, i8* %41, align 4, !range !3
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %36
  %45 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %40, i32 0) #11
  br label %46

46:                                               ; preds = %36, %44
  %47 = phi i32 [ %45, %44 ], [ 0, %36 ]
  %48 = tail call i32 @_ZN8spvtools3opt17ConvertToHalfPass16EquivFloatTypeIdEjj(%"class.spvtools::opt::ConvertToHalfPass"* %0, i32 %47, i32 %2)
  %49 = icmp eq i32 %48, %47
  br i1 %49, label %81, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.spvtools::opt::InstructionBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #11
  %52 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 0
  %53 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 1
  %54 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 3
  %55 = bitcast %"class.spvtools::opt::InstructionBuilder"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 32, i1 false)
  %56 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %57 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %56, %"class.spvtools::opt::Instruction"* %3) #11
  %58 = ptrtoint %"class.spvtools::opt::Instruction"* %3 to i64
  store %"class.spvtools::opt::IRContext"* %56, %"class.spvtools::opt::IRContext"** %52, align 8
  store %"class.spvtools::opt::BasicBlock"* %57, %"class.spvtools::opt::BasicBlock"** %53, align 8
  %59 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 2
  %60 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %59 to i64*
  store i64 %58, i64* %60, align 8
  store i32 3, i32* %54, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %40, i64 0, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %66

64:                                               ; preds = %50
  %65 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder12AddNullaryOpEj6SpvOp_(%"class.spvtools::opt::InstructionBuilder"* nonnull %5, i32 %48, i32 1)
  br label %69

66:                                               ; preds = %50
  %67 = load i32, i32* %1, align 4
  %68 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"* nonnull %5, i32 %48, i32 115, i32 %67)
  br label %69

69:                                               ; preds = %66, %64
  %70 = phi %"class.spvtools::opt::Instruction"* [ %65, %64 ], [ %68, %66 ]
  %71 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %70, i64 0, i32 4
  %72 = load i8, i8* %71, align 1, !range !3
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %70, i64 0, i32 3
  %76 = load i8, i8* %75, align 4, !range !3
  %77 = zext i8 %76 to i32
  %78 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %70, i32 %77) #11
  br label %79

79:                                               ; preds = %69, %74
  %80 = phi i32 [ %78, %74 ], [ 0, %69 ]
  store i32 %80, i32* %1, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #11
  br label %81

81:                                               ; preds = %46, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder12AddNullaryOpEj6SpvOp_(%"class.spvtools::opt::InstructionBuilder"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.21", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %10, align 8
  %12 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %11) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 5, i32 0, i32 2
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 2
  %18 = load i8, i8* %17, align 8, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %80

20:                                               ; preds = %14
  %21 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #11
  %22 = getelementptr inbounds i8, i8* %21, i64 37
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 5, i32 0, i32 1, i32 0
  %24 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 5, i32 0, i32 0
  tail call void %24(%"union.std::__1::__function::__policy_storage"* %25, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.7, i8* nonnull %21) #11
  tail call void @_ZdlPv(i8* nonnull %21) #12
  br label %80

26:                                               ; preds = %7, %3
  %27 = phi i32 [ 0, %3 ], [ %12, %7 ]
  %28 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %4, i64 0, i32 0, i32 0, i32 0
  %30 = tail call i8* @_Znwm(i64 112) #12
  %31 = bitcast i8* %30 to %"class.spvtools::opt::Instruction"*
  %32 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %33 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #11
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %31, %"class.spvtools::opt::IRContext"* %33, i32 %2, i32 %1, i32 %27, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #11
  %35 = ptrtoint i8* %30 to i64
  %36 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %38 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %37, align 8
  %39 = icmp eq %"struct.spvtools::opt::Operand"* %38, null
  br i1 %39, label %70, label %40

40:                                               ; preds = %26
  %41 = bitcast %"struct.spvtools::opt::Operand"* %38 to i8*
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %43 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %42, align 8
  %44 = icmp eq %"struct.spvtools::opt::Operand"* %43, %38
  br i1 %44, label %68, label %45

45:                                               ; preds = %40, %63
  %46 = phi %"struct.spvtools::opt::Operand"* [ %47, %63 ], [ %43, %40 ]
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %46, i64 -1
  %48 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %46, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %46, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %49, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %49, align 8
  %51 = icmp eq %"class.std::__1::vector.3"* %50, null
  br i1 %51, label %63, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %50, i64 0, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = icmp eq i32* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = ptrtoint i32* %54 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %50, i64 0, i32 0, i32 1
  %59 = bitcast i32** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = bitcast i32* %54 to i8*
  call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %56, %52
  %62 = bitcast %"class.std::__1::vector.3"* %50 to i8*
  call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %61, %45
  %64 = icmp eq %"struct.spvtools::opt::Operand"* %47, %38
  br i1 %64, label %65, label %45

65:                                               ; preds = %63
  %66 = bitcast %"class.std::__1::vector"* %5 to i8**
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %65, %40
  %69 = phi i8* [ %67, %65 ], [ %41, %40 ]
  store %"struct.spvtools::opt::Operand"* %38, %"struct.spvtools::opt::Operand"** %42, align 8
  call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %26, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  %71 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %4)
  %72 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %29, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %29, align 8
  %73 = icmp eq %"class.spvtools::opt::Instruction"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = bitcast %"class.spvtools::opt::Instruction"* %72 to void (%"class.spvtools::opt::Instruction"*)***
  %76 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %76, i64 1
  %78 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, align 8
  call void %78(%"class.spvtools::opt::Instruction"* nonnull %72) #11
  br label %79

79:                                               ; preds = %70, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %80

80:                                               ; preds = %20, %14, %79
  %81 = phi %"class.spvtools::opt::Instruction"* [ %71, %79 ], [ null, %14 ], [ null, %20 ]
  ret %"class.spvtools::opt::Instruction"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.21", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %14) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 5, i32 0, i32 2
  %19 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %19, i64 0, i32 2
  %21 = load i8, i8* %20, align 8, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %156

23:                                               ; preds = %17
  %24 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %24, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #11
  %25 = getelementptr inbounds i8, i8* %24, i64 37
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 5, i32 0, i32 1, i32 0
  %27 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %26, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 5, i32 0, i32 0
  tail call void %27(%"union.std::__1::__function::__policy_storage"* %28, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.7, i8* nonnull %24) #11
  tail call void @_ZdlPv(i8* nonnull %24) #12
  br label %156

29:                                               ; preds = %10, %4
  %30 = phi i32 [ 0, %4 ], [ %15, %10 ]
  %31 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %5, i64 0, i32 0, i32 0, i32 0
  %33 = tail call i8* @_Znwm(i64 112) #12
  %34 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %35 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %36 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %37 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #11
  %38 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %38) #11
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %43 = bitcast i32** %41 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %42, %"struct.std::__1::aligned_storage<4, 4>::type"** %43, align 8
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %45 = bitcast %"class.std::__1::unique_ptr.0"* %44 to i64*
  store i64 0, i64* %45, align 8
  %46 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %42 to i32*
  store i64 1, i64* %40, align 8
  store i32 %3, i32* %46, align 8
  %47 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  store i32 1, i32* %47, align 8
  %48 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %49 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %48, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 2
  %52 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 3, i64 0
  %53 = bitcast i32** %51 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %52, %"struct.std::__1::aligned_storage<4, 4>::type"** %53, align 8
  %54 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4
  %55 = bitcast %"class.std::__1::unique_ptr.0"* %54 to i64*
  store i64 0, i64* %55, align 8
  %56 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %48, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %57 = call i8* @_Znwm(i64 48) #12
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %59 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %57, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %57, i64 48
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %"struct.spvtools::opt::Operand"** %61 to i8**
  store i8* %60, i8** %62, align 8
  %63 = bitcast i8* %57 to i32*
  %64 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  %65 = load i32, i32* %64, align 8
  store i32 %65, i32* %63, align 8
  %66 = getelementptr inbounds i8, i8* %57, i64 8
  %67 = bitcast i8* %66 to %"class.spvtools::utils::SmallVector"*
  %68 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %69 = bitcast i8* %66 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = getelementptr inbounds i8, i8* %57, i64 16
  %71 = bitcast i8* %70 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds i8, i8* %57, i64 24
  %73 = getelementptr inbounds i8, i8* %57, i64 32
  %74 = bitcast i8* %72 to i8**
  store i8* %73, i8** %74, align 8
  %75 = getelementptr inbounds i8, i8* %57, i64 40
  %76 = bitcast i8* %75 to i64*
  store i64 0, i64* %76, align 8
  %77 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %67, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %68) #11
  %78 = getelementptr inbounds i8, i8* %57, i64 48
  %79 = bitcast i8* %33 to %"class.spvtools::opt::Instruction"*
  %80 = bitcast %"struct.spvtools::opt::Operand"** %58 to i64*
  %81 = ptrtoint i8* %78 to i64
  store i64 %81, i64* %80, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %79, %"class.spvtools::opt::IRContext"* %35, i32 %2, i32 %1, i32 %30, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #11
  %82 = ptrtoint i8* %33 to i64
  %83 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %85 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %84, align 8
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %85, null
  br i1 %86, label %115, label %87

87:                                               ; preds = %29
  %88 = bitcast %"struct.spvtools::opt::Operand"* %85 to i8*
  %89 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %58, align 8
  %90 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %90, label %113, label %91

91:                                               ; preds = %87, %109
  %92 = phi %"struct.spvtools::opt::Operand"* [ %93, %109 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %92, i64 -1
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %92, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %95 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %92, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %96 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %95, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %95, align 8
  %97 = icmp eq %"class.std::__1::vector.3"* %96, null
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %96, i64 0, i32 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = icmp eq i32* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %98
  %103 = ptrtoint i32* %100 to i64
  %104 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %96, i64 0, i32 0, i32 1
  %105 = bitcast i32** %104 to i64*
  store i64 %103, i64* %105, align 8
  %106 = bitcast i32* %100 to i8*
  call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %102, %98
  %108 = bitcast %"class.std::__1::vector.3"* %96 to i8*
  call void @_ZdlPv(i8* %108) #12
  br label %109

109:                                              ; preds = %107, %91
  %110 = icmp eq %"struct.spvtools::opt::Operand"* %93, %85
  br i1 %110, label %111, label %91

111:                                              ; preds = %109
  %112 = load i8*, i8** %59, align 8
  br label %113

113:                                              ; preds = %111, %87
  %114 = phi i8* [ %112, %111 ], [ %88, %87 ]
  store %"struct.spvtools::opt::Operand"* %85, %"struct.spvtools::opt::Operand"** %58, align 8
  call void @_ZdlPv(i8* %114) #12
  br label %115

115:                                              ; preds = %29, %113
  %116 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %117 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %118 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %117, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %117, align 8
  %119 = icmp eq %"class.std::__1::vector.3"* %118, null
  br i1 %119, label %131, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %118, i64 0, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = icmp eq i32* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %120
  %125 = ptrtoint i32* %122 to i64
  %126 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %118, i64 0, i32 0, i32 1
  %127 = bitcast i32** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = bitcast i32* %122 to i8*
  call void @_ZdlPv(i8* %128) #12
  br label %129

129:                                              ; preds = %124, %120
  %130 = bitcast %"class.std::__1::vector.3"* %118 to i8*
  call void @_ZdlPv(i8* %130) #12
  br label %131

131:                                              ; preds = %115, %129
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %132 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %133 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %132, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %132, align 8
  %134 = icmp eq %"class.std::__1::vector.3"* %133, null
  br i1 %134, label %146, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %133, i64 0, i32 0, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = icmp eq i32* %137, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %135
  %140 = ptrtoint i32* %137 to i64
  %141 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %133, i64 0, i32 0, i32 1
  %142 = bitcast i32** %141 to i64*
  store i64 %140, i64* %142, align 8
  %143 = bitcast i32* %137 to i8*
  call void @_ZdlPv(i8* %143) #12
  br label %144

144:                                              ; preds = %139, %135
  %145 = bitcast %"class.std::__1::vector.3"* %133 to i8*
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %131, %144
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  %147 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %5)
  %148 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %32, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %32, align 8
  %149 = icmp eq %"class.spvtools::opt::Instruction"* %148, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %146
  %151 = bitcast %"class.spvtools::opt::Instruction"* %148 to void (%"class.spvtools::opt::Instruction"*)***
  %152 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %152, i64 1
  %154 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %153, align 8
  call void %154(%"class.spvtools::opt::Instruction"* nonnull %148) #11
  br label %155

155:                                              ; preds = %146, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %156

156:                                              ; preds = %23, %17, %155
  %157 = phi %"class.spvtools::opt::Instruction"* [ %147, %155 ], [ null, %17 ], [ null, %23 ]
  ret %"class.spvtools::opt::Instruction"* %157
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass17MatConvertCleanupEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"struct.spvtools::opt::Operand", align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"class.std::__1::unique_ptr.21", align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 115
  br i1 %11, label %12, label %431

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi i32 [ %17, %16 ], [ 0, %12 ]
  %20 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %21 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %21, i64 0, i32 11
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %50

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %21, i64 0, i32 4, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %27, align 8
  %29 = tail call i8* @_Znwm(i64 104) #12
  %30 = bitcast i8* %29 to %"class.spvtools::opt::analysis::DefUseManager"*
  %31 = getelementptr inbounds i8, i8* %29, i64 32
  %32 = bitcast i8* %31 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %29, i64 48
  %34 = getelementptr inbounds i8, i8* %29, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #11
  %35 = bitcast i8* %34 to i8**
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %29, i64 64
  %37 = getelementptr inbounds i8, i8* %29, i64 96
  %38 = bitcast i8* %37 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %38, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %30, %"class.spvtools::opt::Module"* %28) #11
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %21, i64 0, i32 6
  %40 = ptrtoint i8* %29 to i64
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %39, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %41, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.62"* %39 to i64*
  store i64 %40, i64* %43, align 8
  %44 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %42, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %26
  %46 = bitcast %"class.std::__1::unique_ptr.62"* %39 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %46, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %42) #11
  br label %47

47:                                               ; preds = %45, %26
  %48 = load i32, i32* %22, align 8
  %49 = or i32 %48, 1
  store i32 %49, i32* %22, align 8
  br label %50

50:                                               ; preds = %18, %47
  %51 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %21, i64 0, i32 6, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %51, align 8
  %53 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %52, i32 %19) #11
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 24
  br i1 %56, label %57, label %431

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 3
  %59 = load i8, i8* %58, align 4, !range !3
  %60 = icmp eq i8 %59, 0
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 4
  %62 = load i8, i8* %61, align 1, !range !3
  %63 = icmp eq i8 %62, 0
  %64 = select i1 %63, i32 1, i32 2
  %65 = xor i1 %63, true
  %66 = zext i1 %65 to i32
  %67 = select i1 %60, i32 %66, i32 %64
  %68 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %53, i32 %67) #11
  %69 = load i8, i8* %58, align 4, !range !3
  %70 = icmp eq i8 %69, 0
  %71 = load i8, i8* %61, align 1, !range !3
  %72 = icmp eq i8 %71, 0
  %73 = select i1 %72, i32 1, i32 2
  %74 = xor i1 %72, true
  %75 = zext i1 %74 to i32
  %76 = select i1 %70, i32 %75, i32 %73
  %77 = add nuw nsw i32 %76, 1
  %78 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %53, i32 %77) #11
  %79 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %80 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %79, i64 0, i32 11
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %108

84:                                               ; preds = %57
  %85 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %79, i64 0, i32 4, i32 0, i32 0, i32 0
  %86 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %85, align 8
  %87 = tail call i8* @_Znwm(i64 104) #12
  %88 = bitcast i8* %87 to %"class.spvtools::opt::analysis::DefUseManager"*
  %89 = getelementptr inbounds i8, i8* %87, i64 32
  %90 = bitcast i8* %89 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %90, align 4
  %91 = getelementptr inbounds i8, i8* %87, i64 48
  %92 = getelementptr inbounds i8, i8* %87, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 16, i1 false) #11
  %93 = bitcast i8* %92 to i8**
  store i8* %91, i8** %93, align 8
  %94 = getelementptr inbounds i8, i8* %87, i64 64
  %95 = getelementptr inbounds i8, i8* %87, i64 96
  %96 = bitcast i8* %95 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %96, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %88, %"class.spvtools::opt::Module"* %86) #11
  %97 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %79, i64 0, i32 6
  %98 = ptrtoint i8* %87 to i64
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %97, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %99, align 8
  %101 = bitcast %"class.std::__1::unique_ptr.62"* %97 to i64*
  store i64 %98, i64* %101, align 8
  %102 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %100, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %84
  %104 = bitcast %"class.std::__1::unique_ptr.62"* %97 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %104, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %100) #11
  br label %105

105:                                              ; preds = %103, %84
  %106 = load i32, i32* %80, align 8
  %107 = or i32 %106, 1
  store i32 %107, i32* %80, align 8
  br label %108

108:                                              ; preds = %57, %105
  %109 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %79, i64 0, i32 6, i32 0, i32 0, i32 0
  %110 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %109, align 8
  %111 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %110, i32 %68) #11
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %111, i64 0, i32 3
  %113 = load i8, i8* %112, align 4, !range !3
  %114 = icmp eq i8 %113, 0
  %115 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %111, i64 0, i32 4
  %116 = load i8, i8* %115, align 1, !range !3
  %117 = icmp eq i8 %116, 0
  %118 = select i1 %117, i32 1, i32 2
  %119 = xor i1 %117, true
  %120 = zext i1 %119 to i32
  %121 = select i1 %114, i32 %120, i32 %118
  %122 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %111, i32 %121) #11
  %123 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %123, i64 0, i32 11
  %125 = load i32, i32* %124, align 8
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %152

128:                                              ; preds = %108
  %129 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %123, i64 0, i32 4, i32 0, i32 0, i32 0
  %130 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %129, align 8
  %131 = tail call i8* @_Znwm(i64 104) #12
  %132 = bitcast i8* %131 to %"class.spvtools::opt::analysis::DefUseManager"*
  %133 = getelementptr inbounds i8, i8* %131, i64 32
  %134 = bitcast i8* %133 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %134, align 4
  %135 = getelementptr inbounds i8, i8* %131, i64 48
  %136 = getelementptr inbounds i8, i8* %131, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 16, i1 false) #11
  %137 = bitcast i8* %136 to i8**
  store i8* %135, i8** %137, align 8
  %138 = getelementptr inbounds i8, i8* %131, i64 64
  %139 = getelementptr inbounds i8, i8* %131, i64 96
  %140 = bitcast i8* %139 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %140, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %132, %"class.spvtools::opt::Module"* %130) #11
  %141 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %123, i64 0, i32 6
  %142 = ptrtoint i8* %131 to i64
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %141, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %143, align 8
  %145 = bitcast %"class.std::__1::unique_ptr.62"* %141 to i64*
  store i64 %142, i64* %145, align 8
  %146 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %144, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %128
  %148 = bitcast %"class.std::__1::unique_ptr.62"* %141 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %148, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %144) #11
  br label %149

149:                                              ; preds = %147, %128
  %150 = load i32, i32* %124, align 8
  %151 = or i32 %150, 1
  store i32 %151, i32* %124, align 8
  br label %152

152:                                              ; preds = %108, %149
  %153 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %123, i64 0, i32 6, i32 0, i32 0, i32 0
  %154 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %153, align 8
  %155 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %154, i32 %122) #11
  %156 = bitcast %"class.spvtools::opt::InstructionBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %156) #11
  %157 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %4, i64 0, i32 0
  %158 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %4, i64 0, i32 1
  %159 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %4, i64 0, i32 3
  %160 = bitcast %"class.spvtools::opt::InstructionBuilder"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 32, i1 false)
  %161 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %162 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %161, %"class.spvtools::opt::Instruction"* %1) #11
  %163 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  store %"class.spvtools::opt::IRContext"* %161, %"class.spvtools::opt::IRContext"** %157, align 8
  store %"class.spvtools::opt::BasicBlock"* %162, %"class.spvtools::opt::BasicBlock"** %158, align 8
  %164 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %4, i64 0, i32 2
  %165 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %164 to i64*
  store i64 %163, i64* %165, align 8
  store i32 3, i32* %159, align 8
  %166 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %155, i64 0, i32 3
  %167 = load i8, i8* %166, align 4, !range !3
  %168 = icmp eq i8 %167, 0
  %169 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %155, i64 0, i32 4
  %170 = load i8, i8* %169, align 1, !range !3
  %171 = icmp eq i8 %170, 0
  %172 = select i1 %171, i32 1, i32 2
  %173 = xor i1 %171, true
  %174 = zext i1 %173 to i32
  %175 = select i1 %168, i32 %174, i32 %172
  %176 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %155, i32 %175) #11
  %177 = icmp eq i32 %176, 16
  %178 = select i1 %177, i32 32, i32 16
  %179 = load i8, i8* %13, align 4, !range !3
  %180 = icmp eq i8 %179, 0
  %181 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %182 = load i8, i8* %181, align 1, !range !3
  %183 = icmp eq i8 %182, 0
  %184 = select i1 %183, i32 1, i32 2
  %185 = xor i1 %183, true
  %186 = zext i1 %185 to i32
  %187 = select i1 %180, i32 %186, i32 %184
  %188 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %187) #11
  %189 = tail call i32 @_ZN8spvtools3opt17ConvertToHalfPass16EquivFloatTypeIdEjj(%"class.spvtools::opt::ConvertToHalfPass"* %0, i32 %68, i32 %178)
  %190 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #11
  %191 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %192 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %193 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %190, i8 0, i64 24, i1 false) #11
  %194 = icmp eq i32 %78, 0
  br i1 %194, label %219, label %195

195:                                              ; preds = %152
  %196 = bitcast %"struct.spvtools::opt::Operand"* %6 to i8*
  %197 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  %198 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  %199 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %200 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %201 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %202 = bitcast i32** %200 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %203 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %204 = bitcast %"class.std::__1::unique_ptr.0"* %203 to i64*
  %205 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %201 to i32*
  %206 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 0
  %207 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1
  %208 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %207, i64 0, i32 0
  %209 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 1
  %210 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 2
  %211 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 3, i64 0
  %212 = bitcast i32** %210 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %213 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 4
  %214 = bitcast %"class.std::__1::unique_ptr.0"* %213 to i64*
  %215 = bitcast %"struct.spvtools::opt::Operand"** %192 to i64*
  %216 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 0
  %217 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %218 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %357

219:                                              ; preds = %428, %152
  %220 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %221 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %220, i64 0, i32 4, i32 0, i32 0, i32 0
  %222 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %221, align 8
  %223 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %222) #11
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %237

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %220, i64 0, i32 5, i32 0, i32 2
  %227 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %226, align 8
  %228 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %227, i64 0, i32 2
  %229 = load i8, i8* %228, align 8, !range !3
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %231, label %237

231:                                              ; preds = %225
  %232 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %232, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #11
  %233 = getelementptr inbounds i8, i8* %232, i64 37
  store i8 0, i8* %233, align 1
  %234 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %220, i64 0, i32 5, i32 0, i32 1, i32 0
  %235 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %234, align 8
  %236 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %220, i64 0, i32 5, i32 0, i32 0
  call void %235(%"union.std::__1::__function::__policy_storage"* %236, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.7, i8* nonnull %232) #11
  call void @_ZdlPv(i8* nonnull %232) #12
  br label %237

237:                                              ; preds = %219, %225, %231
  %238 = bitcast %"class.std::__1::unique_ptr.21"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %238) #11
  %239 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %8, i64 0, i32 0, i32 0, i32 0
  %240 = call i8* @_Znwm(i64 112) #12
  %241 = bitcast i8* %240 to %"class.spvtools::opt::Instruction"*
  %242 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %241, %"class.spvtools::opt::IRContext"* %242, i32 80, i32 %19, i32 %223, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #11
  %243 = ptrtoint i8* %240 to i64
  %244 = bitcast %"class.std::__1::unique_ptr.21"* %8 to i64*
  store i64 %243, i64* %244, align 8
  %245 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* nonnull %4, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %8)
  %246 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %247 = load i8, i8* %181, align 1, !range !3
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %253, label %249

249:                                              ; preds = %237
  %250 = load i8, i8* %13, align 4, !range !3
  %251 = zext i8 %250 to i32
  %252 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %251) #11
  br label %253

253:                                              ; preds = %237, %249
  %254 = phi i32 [ %252, %249 ], [ 0, %237 ]
  %255 = call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %246, i32 %254, i32 %223) #11
  store i32 83, i32* %9, align 8
  %256 = call i32 @_ZN8spvtools3opt17ConvertToHalfPass16EquivFloatTypeIdEjj(%"class.spvtools::opt::ConvertToHalfPass"* %0, i32 %19, i32 %178)
  %257 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %257) #11
  %258 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %258, align 8
  %259 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %260 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %261 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %262 = bitcast i32** %260 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %261, %"struct.std::__1::aligned_storage<4, 4>::type"** %262, align 8
  %263 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %264 = bitcast %"class.std::__1::unique_ptr.0"* %263 to i64*
  store i64 0, i64* %264, align 8
  %265 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %261 to i32*
  store i64 1, i64* %259, align 8
  store i32 %256, i32* %265, align 8
  %266 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %267 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %266, align 8
  %268 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %267, i64 0, i32 1
  %269 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %268, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %258, align 8
  %270 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %271 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %270, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %270, align 8
  %272 = icmp eq %"class.std::__1::vector.3"* %271, null
  br i1 %272, label %284, label %273

273:                                              ; preds = %253
  %274 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %271, i64 0, i32 0, i32 0
  %275 = load i32*, i32** %274, align 8
  %276 = icmp eq i32* %275, null
  br i1 %276, label %282, label %277

277:                                              ; preds = %273
  %278 = ptrtoint i32* %275 to i64
  %279 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %271, i64 0, i32 0, i32 1
  %280 = bitcast i32** %279 to i64*
  store i64 %278, i64* %280, align 8
  %281 = bitcast i32* %275 to i8*
  call void @_ZdlPv(i8* %281) #12
  br label %282

282:                                              ; preds = %277, %273
  %283 = bitcast %"class.std::__1::vector.3"* %271 to i8*
  call void @_ZdlPv(i8* %283) #12
  br label %284

284:                                              ; preds = %253, %282
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %257) #11
  %285 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %286 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %285, i64 0, i32 11
  %287 = load i32, i32* %286, align 8
  %288 = and i32 %287, 1
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %314

290:                                              ; preds = %284
  %291 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %285, i64 0, i32 4, i32 0, i32 0, i32 0
  %292 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %291, align 8
  %293 = call i8* @_Znwm(i64 104) #12
  %294 = bitcast i8* %293 to %"class.spvtools::opt::analysis::DefUseManager"*
  %295 = getelementptr inbounds i8, i8* %293, i64 32
  %296 = bitcast i8* %295 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %293, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %296, align 4
  %297 = getelementptr inbounds i8, i8* %293, i64 48
  %298 = getelementptr inbounds i8, i8* %293, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %297, i8 0, i64 16, i1 false) #11
  %299 = bitcast i8* %298 to i8**
  store i8* %297, i8** %299, align 8
  %300 = getelementptr inbounds i8, i8* %293, i64 64
  %301 = getelementptr inbounds i8, i8* %293, i64 96
  %302 = bitcast i8* %301 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %300, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %302, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %294, %"class.spvtools::opt::Module"* %292) #11
  %303 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %285, i64 0, i32 6
  %304 = ptrtoint i8* %293 to i64
  %305 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %303, i64 0, i32 0, i32 0, i32 0
  %306 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %305, align 8
  %307 = bitcast %"class.std::__1::unique_ptr.62"* %303 to i64*
  store i64 %304, i64* %307, align 8
  %308 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %306, null
  br i1 %308, label %311, label %309

309:                                              ; preds = %290
  %310 = bitcast %"class.std::__1::unique_ptr.62"* %303 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %310, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %306) #11
  br label %311

311:                                              ; preds = %309, %290
  %312 = load i32, i32* %286, align 8
  %313 = or i32 %312, 1
  store i32 %313, i32* %286, align 8
  br label %314

314:                                              ; preds = %284, %311
  %315 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %285, i64 0, i32 6, i32 0, i32 0, i32 0
  %316 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %315, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %316, %"class.spvtools::opt::Instruction"* %1) #11
  %317 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %239, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %239, align 8
  %318 = icmp eq %"class.spvtools::opt::Instruction"* %317, null
  br i1 %318, label %324, label %319

319:                                              ; preds = %314
  %320 = bitcast %"class.spvtools::opt::Instruction"* %317 to void (%"class.spvtools::opt::Instruction"*)***
  %321 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %320, align 8
  %322 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %321, i64 1
  %323 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %322, align 8
  call void %323(%"class.spvtools::opt::Instruction"* nonnull %317) #11
  br label %324

324:                                              ; preds = %314, %319
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %238) #11
  %325 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %191, align 8
  %326 = icmp eq %"struct.spvtools::opt::Operand"* %325, null
  br i1 %326, label %356, label %327

327:                                              ; preds = %324
  %328 = bitcast %"struct.spvtools::opt::Operand"* %325 to i8*
  %329 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %192, align 8
  %330 = icmp eq %"struct.spvtools::opt::Operand"* %329, %325
  br i1 %330, label %354, label %331

331:                                              ; preds = %327, %349
  %332 = phi %"struct.spvtools::opt::Operand"* [ %333, %349 ], [ %329, %327 ]
  %333 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %332, i64 -1
  %334 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %332, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %334, align 8
  %335 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %332, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %336 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %335, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %335, align 8
  %337 = icmp eq %"class.std::__1::vector.3"* %336, null
  br i1 %337, label %349, label %338

338:                                              ; preds = %331
  %339 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %336, i64 0, i32 0, i32 0
  %340 = load i32*, i32** %339, align 8
  %341 = icmp eq i32* %340, null
  br i1 %341, label %347, label %342

342:                                              ; preds = %338
  %343 = ptrtoint i32* %340 to i64
  %344 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %336, i64 0, i32 0, i32 1
  %345 = bitcast i32** %344 to i64*
  store i64 %343, i64* %345, align 8
  %346 = bitcast i32* %340 to i8*
  call void @_ZdlPv(i8* %346) #12
  br label %347

347:                                              ; preds = %342, %338
  %348 = bitcast %"class.std::__1::vector.3"* %336 to i8*
  call void @_ZdlPv(i8* %348) #12
  br label %349

349:                                              ; preds = %347, %331
  %350 = icmp eq %"struct.spvtools::opt::Operand"* %333, %325
  br i1 %350, label %351, label %331

351:                                              ; preds = %349
  %352 = bitcast %"class.std::__1::vector"* %5 to i8**
  %353 = load i8*, i8** %352, align 8
  br label %354

354:                                              ; preds = %351, %327
  %355 = phi i8* [ %353, %351 ], [ %328, %327 ]
  store %"struct.spvtools::opt::Operand"* %325, %"struct.spvtools::opt::Operand"** %192, align 8
  call void @_ZdlPv(i8* %355) #12
  br label %356

356:                                              ; preds = %324, %354
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %156) #11
  br label %431

357:                                              ; preds = %428, %195
  %358 = phi i32 [ 0, %195 ], [ %429, %428 ]
  %359 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* nonnull %4, i32 %189, i32 81, i32 %188, i32 %358)
  %360 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %359, i64 0, i32 4
  %361 = load i8, i8* %360, align 1, !range !3
  %362 = icmp eq i8 %361, 0
  br i1 %362, label %368, label %363

363:                                              ; preds = %357
  %364 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %359, i64 0, i32 3
  %365 = load i8, i8* %364, align 4, !range !3
  %366 = zext i8 %365 to i32
  %367 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %359, i32 %366) #11
  br label %368

368:                                              ; preds = %357, %363
  %369 = phi i32 [ %367, %363 ], [ 0, %357 ]
  %370 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"* nonnull %4, i32 %68, i32 115, i32 %369)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %196) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %197) #11
  %371 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %370, i64 0, i32 4
  %372 = load i8, i8* %371, align 1, !range !3
  %373 = icmp eq i8 %372, 0
  br i1 %373, label %379, label %374

374:                                              ; preds = %368
  %375 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %370, i64 0, i32 3
  %376 = load i8, i8* %375, align 4, !range !3
  %377 = zext i8 %376 to i32
  %378 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %370, i32 %377) #11
  br label %379

379:                                              ; preds = %368, %374
  %380 = phi i32 [ %378, %374 ], [ 0, %368 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %198, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %201, %"struct.std::__1::aligned_storage<4, 4>::type"** %202, align 8
  store i64 0, i64* %204, align 8
  store i64 1, i64* %199, align 8
  store i32 %380, i32* %205, align 8
  store i32 1, i32* %206, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %208, align 8
  store i64 0, i64* %209, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %211, %"struct.std::__1::aligned_storage<4, 4>::type"** %212, align 8
  store i64 0, i64* %214, align 8
  %381 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %207, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #11
  %382 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %192, align 8
  %383 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %193, align 8
  %384 = icmp ult %"struct.spvtools::opt::Operand"* %382, %383
  br i1 %384, label %385, label %399

385:                                              ; preds = %379
  %386 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %382, i64 0, i32 0
  %387 = load i32, i32* %206, align 8
  store i32 %387, i32* %386, align 8
  %388 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %382, i64 0, i32 1
  %389 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %388, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %389, align 8
  %390 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %382, i64 0, i32 1, i32 1
  store i64 0, i64* %390, align 8
  %391 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %382, i64 0, i32 1, i32 2
  %392 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %382, i64 0, i32 1, i32 3, i64 0
  %393 = bitcast i32** %391 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %392, %"struct.std::__1::aligned_storage<4, 4>::type"** %393, align 8
  %394 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %382, i64 0, i32 1, i32 4
  %395 = bitcast %"class.std::__1::unique_ptr.0"* %394 to i64*
  store i64 0, i64* %395, align 8
  %396 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %388, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %207) #11
  %397 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %382, i64 1
  %398 = ptrtoint %"struct.spvtools::opt::Operand"* %397 to i64
  store i64 %398, i64* %215, align 8
  br label %400

399:                                              ; preds = %379
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %6) #11
  br label %400

400:                                              ; preds = %385, %399
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %216, align 8
  %401 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %217, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %217, align 8
  %402 = icmp eq %"class.std::__1::vector.3"* %401, null
  br i1 %402, label %414, label %403

403:                                              ; preds = %400
  %404 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %401, i64 0, i32 0, i32 0
  %405 = load i32*, i32** %404, align 8
  %406 = icmp eq i32* %405, null
  br i1 %406, label %412, label %407

407:                                              ; preds = %403
  %408 = ptrtoint i32* %405 to i64
  %409 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %401, i64 0, i32 0, i32 1
  %410 = bitcast i32** %409 to i64*
  store i64 %408, i64* %410, align 8
  %411 = bitcast i32* %405 to i8*
  call void @_ZdlPv(i8* %411) #12
  br label %412

412:                                              ; preds = %407, %403
  %413 = bitcast %"class.std::__1::vector.3"* %401 to i8*
  call void @_ZdlPv(i8* %413) #12
  br label %414

414:                                              ; preds = %400, %412
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %198, align 8
  %415 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %218, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %218, align 8
  %416 = icmp eq %"class.std::__1::vector.3"* %415, null
  br i1 %416, label %428, label %417

417:                                              ; preds = %414
  %418 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %415, i64 0, i32 0, i32 0
  %419 = load i32*, i32** %418, align 8
  %420 = icmp eq i32* %419, null
  br i1 %420, label %426, label %421

421:                                              ; preds = %417
  %422 = ptrtoint i32* %419 to i64
  %423 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %415, i64 0, i32 0, i32 1
  %424 = bitcast i32** %423 to i64*
  store i64 %422, i64* %424, align 8
  %425 = bitcast i32* %419 to i8*
  call void @_ZdlPv(i8* %425) #12
  br label %426

426:                                              ; preds = %421, %417
  %427 = bitcast %"class.std::__1::vector.3"* %415 to i8*
  call void @_ZdlPv(i8* %427) #12
  br label %428

428:                                              ; preds = %414, %426
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %197) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %196) #11
  %429 = add nuw i32 %358, 1
  %430 = icmp eq i32 %429, %78
  br i1 %430, label %219, label %357

431:                                              ; preds = %356, %50, %2
  %432 = phi i1 [ false, %2 ], [ true, %356 ], [ false, %50 ]
  ret i1 %432
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.21", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = icmp eq i32 %1, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %14 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %15, align 8
  %17 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %16) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 5, i32 0, i32 2
  %21 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %21, i64 0, i32 2
  %23 = load i8, i8* %22, align 8, !range !3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %209

25:                                               ; preds = %19
  %26 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #11
  %27 = getelementptr inbounds i8, i8* %26, i64 37
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 5, i32 0, i32 1, i32 0
  %29 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %28, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 5, i32 0, i32 0
  tail call void %29(%"union.std::__1::__function::__policy_storage"* %30, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.7, i8* nonnull %26) #11
  tail call void @_ZdlPv(i8* nonnull %26) #12
  br label %209

31:                                               ; preds = %12, %5
  %32 = phi i32 [ 0, %5 ], [ %17, %12 ]
  %33 = bitcast %"class.std::__1::unique_ptr.21"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %34, align 8
  %35 = tail call i8* @_Znwm(i64 112) #12
  %36 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %37 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %36, align 8
  %38 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #11
  %39 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %39) #11
  %40 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #11
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %45 = bitcast i32** %43 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %44, %"struct.std::__1::aligned_storage<4, 4>::type"** %45, align 8
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %47 = bitcast %"class.std::__1::unique_ptr.0"* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %44 to i32*
  store i64 1, i64* %42, align 8
  store i32 %3, i32* %48, align 8
  %49 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  store i32 1, i32* %49, align 8
  %50 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %51 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %50, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %52 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 2
  %54 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 3, i64 0
  %55 = bitcast i32** %53 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %54, %"struct.std::__1::aligned_storage<4, 4>::type"** %55, align 8
  %56 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4
  %57 = bitcast %"class.std::__1::unique_ptr.0"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %50, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #11
  %59 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59) #11
  %60 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %62 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %64 = bitcast i32** %62 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %63, %"struct.std::__1::aligned_storage<4, 4>::type"** %64, align 8
  %65 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %66 = bitcast %"class.std::__1::unique_ptr.0"* %65 to i64*
  store i64 0, i64* %66, align 8
  %67 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %63 to i32*
  store i64 1, i64* %61, align 8
  store i32 %4, i32* %67, align 8
  %68 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 0
  store i32 6, i32* %68, align 8
  %69 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1
  %70 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %69, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 2
  %73 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 3, i64 0
  %74 = bitcast i32** %72 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %73, %"struct.std::__1::aligned_storage<4, 4>::type"** %74, align 8
  %75 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 4
  %76 = bitcast %"class.std::__1::unique_ptr.0"* %75 to i64*
  store i64 0, i64* %76, align 8
  %77 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %69, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #11
  %78 = call i8* @_Znwm(i64 96) #12
  %79 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %80 = bitcast %"class.std::__1::vector"* %7 to i8**
  store i8* %78, i8** %80, align 8
  %81 = getelementptr inbounds i8, i8* %78, i64 96
  %82 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %83 = bitcast %"struct.spvtools::opt::Operand"** %82 to i8**
  store i8* %81, i8** %83, align 8
  %84 = bitcast i8* %78 to i32*
  %85 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  %86 = load i32, i32* %85, align 8
  store i32 %86, i32* %84, align 8
  %87 = getelementptr inbounds i8, i8* %78, i64 8
  %88 = bitcast i8* %87 to %"class.spvtools::utils::SmallVector"*
  %89 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %90 = bitcast i8* %87 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds i8, i8* %78, i64 16
  %92 = bitcast i8* %91 to i64*
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds i8, i8* %78, i64 24
  %94 = getelementptr inbounds i8, i8* %78, i64 32
  %95 = bitcast i8* %93 to i8**
  store i8* %94, i8** %95, align 8
  %96 = getelementptr inbounds i8, i8* %78, i64 40
  %97 = bitcast i8* %96 to i64*
  store i64 0, i64* %97, align 8
  %98 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %88, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %89) #11
  %99 = getelementptr inbounds i8, i8* %78, i64 48
  %100 = bitcast i8* %99 to i32*
  %101 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 0
  %102 = load i32, i32* %101, align 8
  store i32 %102, i32* %100, align 8
  %103 = getelementptr inbounds i8, i8* %78, i64 56
  %104 = bitcast i8* %103 to %"class.spvtools::utils::SmallVector"*
  %105 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1
  %106 = bitcast i8* %103 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8
  %107 = getelementptr inbounds i8, i8* %78, i64 64
  %108 = bitcast i8* %107 to i64*
  store i64 0, i64* %108, align 8
  %109 = getelementptr inbounds i8, i8* %78, i64 72
  %110 = getelementptr inbounds i8, i8* %78, i64 80
  %111 = bitcast i8* %109 to i8**
  store i8* %110, i8** %111, align 8
  %112 = getelementptr inbounds i8, i8* %78, i64 88
  %113 = bitcast i8* %112 to i64*
  store i64 0, i64* %113, align 8
  %114 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %104, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %105) #11
  %115 = getelementptr inbounds i8, i8* %78, i64 96
  %116 = bitcast i8* %35 to %"class.spvtools::opt::Instruction"*
  %117 = bitcast %"struct.spvtools::opt::Operand"** %79 to i64*
  %118 = ptrtoint i8* %115 to i64
  store i64 %118, i64* %117, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %116, %"class.spvtools::opt::IRContext"* %37, i32 %2, i32 %1, i32 %32, %"class.std::__1::vector"* nonnull dereferenceable(24) %7) #11
  %119 = ptrtoint i8* %35 to i64
  %120 = bitcast %"class.std::__1::unique_ptr.21"* %6 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %122 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %121, align 8
  %123 = icmp eq %"struct.spvtools::opt::Operand"* %122, null
  br i1 %123, label %152, label %124

124:                                              ; preds = %31
  %125 = bitcast %"struct.spvtools::opt::Operand"* %122 to i8*
  %126 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %79, align 8
  %127 = icmp eq %"struct.spvtools::opt::Operand"* %126, %122
  br i1 %127, label %150, label %128

128:                                              ; preds = %124, %146
  %129 = phi %"struct.spvtools::opt::Operand"* [ %130, %146 ], [ %126, %124 ]
  %130 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %129, i64 -1
  %131 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %129, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  %132 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %129, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %133 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %132, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %132, align 8
  %134 = icmp eq %"class.std::__1::vector.3"* %133, null
  br i1 %134, label %146, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %133, i64 0, i32 0, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = icmp eq i32* %137, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %135
  %140 = ptrtoint i32* %137 to i64
  %141 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %133, i64 0, i32 0, i32 1
  %142 = bitcast i32** %141 to i64*
  store i64 %140, i64* %142, align 8
  %143 = bitcast i32* %137 to i8*
  call void @_ZdlPv(i8* %143) #12
  br label %144

144:                                              ; preds = %139, %135
  %145 = bitcast %"class.std::__1::vector.3"* %133 to i8*
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %144, %128
  %147 = icmp eq %"struct.spvtools::opt::Operand"* %130, %122
  br i1 %147, label %148, label %128

148:                                              ; preds = %146
  %149 = load i8*, i8** %80, align 8
  br label %150

150:                                              ; preds = %148, %124
  %151 = phi i8* [ %149, %148 ], [ %125, %124 ]
  store %"struct.spvtools::opt::Operand"* %122, %"struct.spvtools::opt::Operand"** %79, align 8
  call void @_ZdlPv(i8* %151) #12
  br label %152

152:                                              ; preds = %31, %150
  %153 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %153, align 8
  %154 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %155 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %154, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %154, align 8
  %156 = icmp eq %"class.std::__1::vector.3"* %155, null
  br i1 %156, label %168, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %155, i64 0, i32 0, i32 0
  %159 = load i32*, i32** %158, align 8
  %160 = icmp eq i32* %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %157
  %162 = ptrtoint i32* %159 to i64
  %163 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %155, i64 0, i32 0, i32 1
  %164 = bitcast i32** %163 to i64*
  store i64 %162, i64* %164, align 8
  %165 = bitcast i32* %159 to i8*
  call void @_ZdlPv(i8* %165) #12
  br label %166

166:                                              ; preds = %161, %157
  %167 = bitcast %"class.std::__1::vector.3"* %155 to i8*
  call void @_ZdlPv(i8* %167) #12
  br label %168

168:                                              ; preds = %152, %166
  %169 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %169, align 8
  %170 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %171 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %170, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %170, align 8
  %172 = icmp eq %"class.std::__1::vector.3"* %171, null
  br i1 %172, label %222, label %211

173:                                              ; preds = %222
  %174 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %224, i64 0, i32 0, i32 0
  %175 = load i32*, i32** %174, align 8
  %176 = icmp eq i32* %175, null
  br i1 %176, label %182, label %177

177:                                              ; preds = %173
  %178 = ptrtoint i32* %175 to i64
  %179 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %224, i64 0, i32 0, i32 1
  %180 = bitcast i32** %179 to i64*
  store i64 %178, i64* %180, align 8
  %181 = bitcast i32* %175 to i8*
  call void @_ZdlPv(i8* %181) #12
  br label %182

182:                                              ; preds = %177, %173
  %183 = bitcast %"class.std::__1::vector.3"* %224 to i8*
  call void @_ZdlPv(i8* %183) #12
  br label %184

184:                                              ; preds = %222, %182
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %185 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %186 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %185, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %185, align 8
  %187 = icmp eq %"class.std::__1::vector.3"* %186, null
  br i1 %187, label %199, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %186, i64 0, i32 0, i32 0
  %190 = load i32*, i32** %189, align 8
  %191 = icmp eq i32* %190, null
  br i1 %191, label %197, label %192

192:                                              ; preds = %188
  %193 = ptrtoint i32* %190 to i64
  %194 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %186, i64 0, i32 0, i32 1
  %195 = bitcast i32** %194 to i64*
  store i64 %193, i64* %195, align 8
  %196 = bitcast i32* %190 to i8*
  call void @_ZdlPv(i8* %196) #12
  br label %197

197:                                              ; preds = %192, %188
  %198 = bitcast %"class.std::__1::vector.3"* %186 to i8*
  call void @_ZdlPv(i8* %198) #12
  br label %199

199:                                              ; preds = %184, %197
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #11
  %200 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %6)
  %201 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %34, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %34, align 8
  %202 = icmp eq %"class.spvtools::opt::Instruction"* %201, null
  br i1 %202, label %208, label %203

203:                                              ; preds = %199
  %204 = bitcast %"class.spvtools::opt::Instruction"* %201 to void (%"class.spvtools::opt::Instruction"*)***
  %205 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %205, i64 1
  %207 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %206, align 8
  call void %207(%"class.spvtools::opt::Instruction"* nonnull %201) #11
  br label %208

208:                                              ; preds = %199, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  br label %209

209:                                              ; preds = %25, %19, %208
  %210 = phi %"class.spvtools::opt::Instruction"* [ %200, %208 ], [ null, %19 ], [ null, %25 ]
  ret %"class.spvtools::opt::Instruction"* %210

211:                                              ; preds = %168
  %212 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %171, i64 0, i32 0, i32 0
  %213 = load i32*, i32** %212, align 8
  %214 = icmp eq i32* %213, null
  br i1 %214, label %220, label %215

215:                                              ; preds = %211
  %216 = ptrtoint i32* %213 to i64
  %217 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %171, i64 0, i32 0, i32 1
  %218 = bitcast i32** %217 to i64*
  store i64 %216, i64* %218, align 8
  %219 = bitcast i32* %213 to i8*
  call void @_ZdlPv(i8* %219) #12
  br label %220

220:                                              ; preds = %215, %211
  %221 = bitcast %"class.std::__1::vector.3"* %171 to i8*
  call void @_ZdlPv(i8* %221) #12
  br label %222

222:                                              ; preds = %220, %168
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %223 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %224 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %223, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %223, align 8
  %225 = icmp eq %"class.std::__1::vector.3"* %224, null
  br i1 %225, label %184, label %173
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1034", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 2
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %6, %"class.spvtools::opt::InstructionList::iterator"* %8, %"class.std::__1::unique_ptr.21"* dereferenceable(8) %1) #11
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 1
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::BasicBlock"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  store %"class.spvtools::opt::Instruction"* %10, %"class.spvtools::opt::Instruction"** %5, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 9, i32 0
  %29 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple.1034", %"class.std::__1::tuple.1034"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #11
  %32 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %28, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1034"* nonnull dereferenceable(1) %4) #11
  %33 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %33, i64 3
  %35 = bitcast %"struct.std::__1::__hash_node_base.178"* %34 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  store %"class.spvtools::opt::BasicBlock"* %24, %"class.spvtools::opt::BasicBlock"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %36 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  br label %39

39:                                               ; preds = %2, %17, %22, %26
  %40 = phi i32 [ %14, %2 ], [ %14, %17 ], [ %14, %22 ], [ %38, %26 ]
  %41 = phi %"class.spvtools::opt::IRContext"* [ %12, %2 ], [ %12, %17 ], [ %12, %22 ], [ %36, %26 ]
  %42 = and i32 %40, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 6, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %50, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %51, %"class.spvtools::opt::Instruction"* %10) #11
  br label %52

52:                                               ; preds = %39, %44, %49
  ret %"class.spvtools::opt::Instruction"* %10
}

declare zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"*, i32, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass23RemoveRelaxedDecorationEj(%"class.spvtools::opt::ConvertToHalfPass"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.939", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %31

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = bitcast %"class.spvtools::opt::Module"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = tail call i8* @_Znwm(i64 48) #12
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::DecorationManager"*
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %14, i64 40
  %19 = bitcast i8* %18 to i64*
  store i64 %13, i64* %19, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %15) #11
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 7
  %21 = ptrtoint i8* %14 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.122"* %20 to i64*
  store i64 %21, i64* %24, align 8
  %25 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %10
  %27 = bitcast %"class.std::__1::unique_ptr.122"* %20 to %"struct.std::__1::default_delete.150"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %27, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %23) #11
  br label %28

28:                                               ; preds = %26, %10
  %29 = load i32, i32* %6, align 8
  %30 = or i32 %29, 4
  store i32 %30, i32* %6, align 8
  br label %31

31:                                               ; preds = %2, %28
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 7, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %3, i64 0, i32 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17ConvertToHalfPass23RemoveRelaxedDecorationEjE3$_0S7_EEEEbPKNS0_16__policy_storageES6_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %34, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass23RemoveRelaxedDecorationEjE3$_0FbRKNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %35, align 8
  %36 = call zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager21RemoveDecorationsFromEjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"* %33, i32 %1, %"class.std::__1::function.939"* nonnull %3) #11
  %37 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %35, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %37, i64 0, i32 1
  %39 = load void (i8*)*, void (i8*)** %38, align 8
  %40 = icmp eq void (i8*)* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %3, i64 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void %39(i8* %43) #11
  br label %44

44:                                               ; preds = %31, %41
  ret i1 %36
}

declare zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager21RemoveDecorationsFromEjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"*, i32, %"class.std::__1::function.939"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass12GenHalfArithEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = alloca %"class.std::__1::function.1049", align 8
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::function.945", align 8
  %8 = alloca i32, align 4
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 0, i8* %6, align 1
  %9 = bitcast %"class.std::__1::function.945"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::function.945", %"class.std::__1::function.945"* %7, i64 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::function.945", %"class.std::__1::function.945"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass12GenHalfArithEPNS8_11InstructionEE3$_1S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %10, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass12GenHalfArithEPNS5_11InstructionEE3$_1FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %11, align 8
  %12 = tail call i8* @_Znwm(i64 24) #12, !noalias !4
  %13 = bitcast i8* %12 to %"class.spvtools::opt::Instruction"***
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to i8**
  store i8* %6, i8** %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 16
  %17 = bitcast i8* %16 to %"class.spvtools::opt::ConvertToHalfPass"**
  store %"class.spvtools::opt::ConvertToHalfPass"* %0, %"class.spvtools::opt::ConvertToHalfPass"** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::function.945", %"class.std::__1::function.945"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %18, align 8
  %19 = bitcast %"class.std::__1::function.1049"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #11
  %20 = ptrtoint %"class.std::__1::function.945"* %7 to i64
  %21 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %21, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %22, align 8
  %23 = bitcast %"class.std::__1::function.1049"* %4 to i64*
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %25 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %24, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %25, %27
  br i1 %28, label %51, label %29

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %46, %29
  %32 = phi %"struct.spvtools::opt::Operand"* [ %25, %29 ], [ %47, %46 ]
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %34) #11
  br i1 %35, label %36, label %46

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %37, align 8
  %39 = icmp eq %"class.std::__1::vector.3"* %38, null
  %40 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %38, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 1, i32 2
  %42 = select i1 %39, i32** %41, i32** %40
  %43 = load i32*, i32** %42, align 8
  %44 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %21, align 8
  %45 = call zeroext i1 %44(%"union.std::__1::__function::__policy_storage"* nonnull %30, i32* %43) #11
  br i1 %45, label %46, label %49

46:                                               ; preds = %36, %31
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 1
  %48 = icmp eq %"struct.spvtools::opt::Operand"* %47, %27
  br i1 %48, label %49, label %31

49:                                               ; preds = %46, %36
  %50 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %22, align 8
  br label %51

51:                                               ; preds = %49, %2
  %52 = phi %"struct.std::__1::__function::__policy"* [ %50, %49 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %2 ]
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void %54(i8* %58) #11
  br label %59

59:                                               ; preds = %51, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #11
  %60 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %11, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %60, i64 0, i32 1
  %62 = load void (i8*)*, void (i8*)** %61, align 8
  %63 = icmp eq void (i8*)* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %59
  %65 = load i8*, i8** %18, align 8
  call void %62(i8* %65) #11
  br label %66

66:                                               ; preds = %59, %64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #11
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %68 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %67, i64 0, i32 3
  %69 = load i8, i8* %68, align 4, !range !3
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %129, label %71

71:                                               ; preds = %66
  %72 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %67, i32 0) #11
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %129, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.spvtools::opt::ConvertToHalfPass"* %0 to %"class.spvtools::opt::Pass"*
  %76 = call zeroext i1 @_ZN8spvtools3opt4Pass7IsFloatEjj(%"class.spvtools::opt::Pass"* %75, i32 %72, i32 32) #11
  br i1 %76, label %77, label %129

77:                                               ; preds = %74
  %78 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %78, i64 0, i32 3
  %80 = load i8, i8* %79, align 4, !range !3
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %78, i32 0) #11
  br label %84

84:                                               ; preds = %77, %82
  %85 = phi i32 [ %83, %82 ], [ 0, %77 ]
  %86 = call i32 @_ZN8spvtools3opt17ConvertToHalfPass16EquivFloatTypeIdEjj(%"class.spvtools::opt::ConvertToHalfPass"* %0, i32 %85, i32 16)
  %87 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %87) #11
  %88 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %88, align 8
  %89 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %90 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %91 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %92 = bitcast i32** %90 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %91, %"struct.std::__1::aligned_storage<4, 4>::type"** %92, align 8
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %94 = bitcast %"class.std::__1::unique_ptr.0"* %93 to i64*
  store i64 0, i64* %94, align 8
  %95 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %91 to i32*
  store i64 1, i64* %89, align 8
  store i32 %86, i32* %95, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %78, i64 0, i32 6, i32 0, i32 0
  %97 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %96, align 8
  %98 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %97, i64 0, i32 1
  %99 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %98, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %88, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %101 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %100, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %100, align 8
  %102 = icmp eq %"class.std::__1::vector.3"* %101, null
  br i1 %102, label %114, label %103

103:                                              ; preds = %84
  %104 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %101, i64 0, i32 0, i32 0
  %105 = load i32*, i32** %104, align 8
  %106 = icmp eq i32* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %103
  %108 = ptrtoint i32* %105 to i64
  %109 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %101, i64 0, i32 0, i32 1
  %110 = bitcast i32** %109 to i64*
  store i64 %108, i64* %110, align 8
  %111 = bitcast i32* %105 to i8*
  call void @_ZdlPv(i8* %111) #12
  br label %112

112:                                              ; preds = %107, %103
  %113 = bitcast %"class.std::__1::vector.3"* %101 to i8*
  call void @_ZdlPv(i8* %113) #12
  br label %114

114:                                              ; preds = %84, %112
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %87) #11
  %115 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #11
  %116 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %117 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %116, i64 0, i32 4
  %118 = load i8, i8* %117, align 1, !range !3
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %125, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %116, i64 0, i32 3
  %122 = load i8, i8* %121, align 4, !range !3
  %123 = zext i8 %122 to i32
  %124 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %116, i32 %123) #11
  br label %125

125:                                              ; preds = %120, %114
  %126 = phi i32 [ %124, %120 ], [ 0, %114 ]
  store i32 %126, i32* %8, align 4
  %127 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 8, i32 0
  %128 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %127, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #11
  store i8 1, i8* %6, align 1
  br label %132

129:                                              ; preds = %66, %71, %74
  %130 = load i8, i8* %6, align 1
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %169, label %132

132:                                              ; preds = %125, %129
  %133 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %134 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %133, align 8
  %135 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %134, i64 0, i32 11
  %136 = load i32, i32* %135, align 8
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %163

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %134, i64 0, i32 4, i32 0, i32 0, i32 0
  %141 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %140, align 8
  %142 = call i8* @_Znwm(i64 104) #12
  %143 = bitcast i8* %142 to %"class.spvtools::opt::analysis::DefUseManager"*
  %144 = getelementptr inbounds i8, i8* %142, i64 32
  %145 = bitcast i8* %144 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %145, align 4
  %146 = getelementptr inbounds i8, i8* %142, i64 48
  %147 = getelementptr inbounds i8, i8* %142, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 16, i1 false) #11
  %148 = bitcast i8* %147 to i8**
  store i8* %146, i8** %148, align 8
  %149 = getelementptr inbounds i8, i8* %142, i64 64
  %150 = getelementptr inbounds i8, i8* %142, i64 96
  %151 = bitcast i8* %150 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %151, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %143, %"class.spvtools::opt::Module"* %141) #11
  %152 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %134, i64 0, i32 6
  %153 = ptrtoint i8* %142 to i64
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %152, i64 0, i32 0, i32 0, i32 0
  %155 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %154, align 8
  %156 = bitcast %"class.std::__1::unique_ptr.62"* %152 to i64*
  store i64 %153, i64* %156, align 8
  %157 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %155, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %139
  %159 = bitcast %"class.std::__1::unique_ptr.62"* %152 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %159, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %155) #11
  br label %160

160:                                              ; preds = %158, %139
  %161 = load i32, i32* %135, align 8
  %162 = or i32 %161, 1
  store i32 %162, i32* %135, align 8
  br label %163

163:                                              ; preds = %132, %160
  %164 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %134, i64 0, i32 6, i32 0, i32 0, i32 0
  %165 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %164, align 8
  %166 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %165, %"class.spvtools::opt::Instruction"* %166) #11
  %167 = load i8, i8* %6, align 1, !range !3
  %168 = icmp ne i8 %167, 0
  br label %169

169:                                              ; preds = %129, %163
  %170 = phi i1 [ false, %129 ], [ %168, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  ret i1 %170
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass10ProcessPhiEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = alloca %"class.std::__1::function.1049", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::__1::function.945", align 8
  %8 = alloca i32, align 4
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  store i32 0, i32* %5, align 4
  %10 = bitcast i32** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  store i32* inttoptr (i64 -6148914691236517206 to i32*), i32** %6, align 8
  %11 = bitcast %"class.std::__1::function.945"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::function.945", %"class.std::__1::function.945"* %7, i64 0, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.std::__1::function.945", %"class.std::__1::function.945"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass10ProcessPhiEPNS8_11InstructionEE3$_2S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %12, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass10ProcessPhiEPNS5_11InstructionEE3$_2FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %13, align 8
  %14 = tail call i8* @_Znwm(i64 24) #12, !noalias !9
  %15 = bitcast i8* %14 to i32**
  store i32* %5, i32** %15, align 8
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = bitcast i8* %16 to i32***
  store i32** %6, i32*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %14, i64 16
  %19 = bitcast i8* %18 to %"class.spvtools::opt::ConvertToHalfPass"**
  store %"class.spvtools::opt::ConvertToHalfPass"* %0, %"class.spvtools::opt::ConvertToHalfPass"** %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::function.945", %"class.std::__1::function.945"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %20, align 8
  %21 = bitcast %"class.std::__1::function.1049"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #11
  %22 = ptrtoint %"class.std::__1::function.945"* %7 to i64
  %23 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %23, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %24, align 8
  %25 = bitcast %"class.std::__1::function.1049"* %4 to i64*
  store i64 %22, i64* %25, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %29 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %28, align 8
  %30 = icmp eq %"struct.spvtools::opt::Operand"* %27, %29
  br i1 %30, label %53, label %31

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %48, %31
  %34 = phi %"struct.spvtools::opt::Operand"* [ %27, %31 ], [ %49, %48 ]
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %36) #11
  br i1 %37, label %38, label %48

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %39, align 8
  %41 = icmp eq %"class.std::__1::vector.3"* %40, null
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %40, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 2
  %44 = select i1 %41, i32** %43, i32** %42
  %45 = load i32*, i32** %44, align 8
  %46 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %23, align 8
  %47 = call zeroext i1 %46(%"union.std::__1::__function::__policy_storage"* nonnull %32, i32* %45) #11
  br i1 %47, label %48, label %51

48:                                               ; preds = %38, %33
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %50 = icmp eq %"struct.spvtools::opt::Operand"* %49, %29
  br i1 %50, label %51, label %33

51:                                               ; preds = %48, %38
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %24, align 8
  br label %53

53:                                               ; preds = %51, %2
  %54 = phi %"struct.std::__1::__function::__policy"* [ %52, %51 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %2 ]
  %55 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %54, i64 0, i32 1
  %56 = load void (i8*)*, void (i8*)** %55, align 8
  %57 = icmp eq void (i8*)* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void %56(i8* %60) #11
  br label %61

61:                                               ; preds = %53, %58
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #11
  %62 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %13, align 8
  %63 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %62, i64 0, i32 1
  %64 = load void (i8*)*, void (i8*)** %63, align 8
  %65 = icmp eq void (i8*)* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %61
  %67 = load i8*, i8** %20, align 8
  call void %64(i8* %67) #11
  br label %68

68:                                               ; preds = %61, %66
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %70 = load i8, i8* %69, align 4, !range !3
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  br label %74

74:                                               ; preds = %68, %72
  %75 = phi i32 [ %73, %72 ], [ 0, %68 ]
  %76 = call i32 @_ZN8spvtools3opt17ConvertToHalfPass16EquivFloatTypeIdEjj(%"class.spvtools::opt::ConvertToHalfPass"* %0, i32 %75, i32 16)
  %77 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %77) #11
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8
  %79 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %80 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %81 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %82 = bitcast i32** %80 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %81, %"struct.std::__1::aligned_storage<4, 4>::type"** %82, align 8
  %83 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %84 = bitcast %"class.std::__1::unique_ptr.0"* %83 to i64*
  store i64 0, i64* %84, align 8
  %85 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %81 to i32*
  store i64 1, i64* %79, align 8
  store i32 %76, i32* %85, align 8
  %86 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %87 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %86, i64 0, i32 1
  %88 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %87, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8
  %89 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %90 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %89, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %89, align 8
  %91 = icmp eq %"class.std::__1::vector.3"* %90, null
  br i1 %91, label %103, label %92

92:                                               ; preds = %74
  %93 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %90, i64 0, i32 0, i32 0
  %94 = load i32*, i32** %93, align 8
  %95 = icmp eq i32* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %92
  %97 = ptrtoint i32* %94 to i64
  %98 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %90, i64 0, i32 0, i32 1
  %99 = bitcast i32** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = bitcast i32* %94 to i8*
  call void @_ZdlPv(i8* %100) #12
  br label %101

101:                                              ; preds = %96, %92
  %102 = bitcast %"class.std::__1::vector.3"* %90 to i8*
  call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %74, %101
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %77) #11
  %104 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %105 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %104, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %105, i64 0, i32 11
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %134

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %105, i64 0, i32 4, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %111, align 8
  %113 = call i8* @_Znwm(i64 104) #12
  %114 = bitcast i8* %113 to %"class.spvtools::opt::analysis::DefUseManager"*
  %115 = getelementptr inbounds i8, i8* %113, i64 32
  %116 = bitcast i8* %115 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %116, align 4
  %117 = getelementptr inbounds i8, i8* %113, i64 48
  %118 = getelementptr inbounds i8, i8* %113, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 16, i1 false) #11
  %119 = bitcast i8* %118 to i8**
  store i8* %117, i8** %119, align 8
  %120 = getelementptr inbounds i8, i8* %113, i64 64
  %121 = getelementptr inbounds i8, i8* %113, i64 96
  %122 = bitcast i8* %121 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %122, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %114, %"class.spvtools::opt::Module"* %112) #11
  %123 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %105, i64 0, i32 6
  %124 = ptrtoint i8* %113 to i64
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %125, align 8
  %127 = bitcast %"class.std::__1::unique_ptr.62"* %123 to i64*
  store i64 %124, i64* %127, align 8
  %128 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %126, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %110
  %130 = bitcast %"class.std::__1::unique_ptr.62"* %123 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %130, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %126) #11
  br label %131

131:                                              ; preds = %129, %110
  %132 = load i32, i32* %106, align 8
  %133 = or i32 %132, 1
  store i32 %133, i32* %106, align 8
  br label %134

134:                                              ; preds = %103, %131
  %135 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %105, i64 0, i32 6, i32 0, i32 0, i32 0
  %136 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %135, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %136, %"class.spvtools::opt::Instruction"* %1) #11
  %137 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %137) #11
  %138 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %139 = load i8, i8* %138, align 1, !range !3
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %145, label %141

141:                                              ; preds = %134
  %142 = load i8, i8* %69, align 4, !range !3
  %143 = zext i8 %142 to i32
  %144 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %143) #11
  br label %145

145:                                              ; preds = %134, %141
  %146 = phi i32 [ %144, %141 ], [ 0, %134 ]
  store i32 %146, i32* %8, align 4
  %147 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 8, i32 0
  %148 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %147, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %137) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass14ProcessConvertEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %156, label %8

8:                                                ; preds = %2
  %9 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %156, label %11

11:                                               ; preds = %8
  %12 = bitcast %"class.spvtools::opt::ConvertToHalfPass"* %0 to %"class.spvtools::opt::Pass"*
  %13 = tail call zeroext i1 @_ZN8spvtools3opt4Pass7IsFloatEjj(%"class.spvtools::opt::Pass"* %12, i32 %9, i32 32) #11
  br i1 %13, label %14, label %156

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %16 = load i8, i8* %15, align 1, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = load i8, i8* %5, align 4, !range !3
  %20 = zext i8 %19 to i32
  %21 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %20) #11
  br label %22

22:                                               ; preds = %14, %18
  %23 = phi i32 [ %21, %18 ], [ 0, %14 ]
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %156, label %28

28:                                               ; preds = %22
  %29 = tail call i64 @llvm.ctpop.i64(i64 %26) #11, !range !2
  %30 = icmp ugt i64 %29, 1
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = add i64 %26, 4294967295
  %33 = and i64 %32, %24
  br label %38

34:                                               ; preds = %28
  %35 = icmp ugt i64 %26, %24
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = urem i64 %24, %26
  br label %38

38:                                               ; preds = %36, %34, %31
  %39 = phi i64 [ %33, %31 ], [ %37, %36 ], [ %24, %34 ]
  %40 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %41, i64 %39
  %43 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.915"* %43, null
  br i1 %44, label %156, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %43, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.915"* %47, null
  br i1 %48, label %156, label %49

49:                                               ; preds = %45
  %50 = add i64 %26, -1
  br label %51

51:                                               ; preds = %72, %49
  %52 = phi %"struct.std::__1::__hash_node_base.915"* [ %47, %49 ], [ %74, %72 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %52, i64 1
  %54 = bitcast %"struct.std::__1::__hash_node_base.915"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, %24
  br i1 %56, label %67, label %57

57:                                               ; preds = %51
  br i1 %30, label %60, label %58

58:                                               ; preds = %57
  %59 = and i64 %55, %50
  br label %64

60:                                               ; preds = %57
  %61 = icmp ult i64 %55, %26
  br i1 %61, label %64, label %62

62:                                               ; preds = %60
  %63 = urem i64 %55, %26
  br label %64

64:                                               ; preds = %62, %60, %58
  %65 = phi i64 [ %59, %58 ], [ %63, %62 ], [ %55, %60 ]
  %66 = icmp eq i64 %65, %39
  br i1 %66, label %72, label %156

67:                                               ; preds = %51
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %52, i64 2
  %69 = bitcast %"struct.std::__1::__hash_node_base.915"* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, %23
  br i1 %71, label %76, label %72

72:                                               ; preds = %67, %64
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %52, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.915"* %74, null
  br i1 %75, label %156, label %51

76:                                               ; preds = %67
  %77 = load i8, i8* %5, align 4, !range !3
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  br label %81

81:                                               ; preds = %76, %79
  %82 = phi i32 [ %80, %79 ], [ 0, %76 ]
  %83 = tail call i32 @_ZN8spvtools3opt17ConvertToHalfPass16EquivFloatTypeIdEjj(%"class.spvtools::opt::ConvertToHalfPass"* %0, i32 %82, i32 16)
  %84 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %84) #11
  %85 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %86 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %87 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %88 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %89 = bitcast i32** %87 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %88, %"struct.std::__1::aligned_storage<4, 4>::type"** %89, align 8
  %90 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %91 = bitcast %"class.std::__1::unique_ptr.0"* %90 to i64*
  store i64 0, i64* %91, align 8
  %92 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %88 to i32*
  store i64 1, i64* %86, align 8
  store i32 %83, i32* %92, align 8
  %93 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %94 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %93, align 8
  %95 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %94, i64 0, i32 1
  %96 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %95, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %97 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %98 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %97, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %97, align 8
  %99 = icmp eq %"class.std::__1::vector.3"* %98, null
  br i1 %99, label %111, label %100

100:                                              ; preds = %81
  %101 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %98, i64 0, i32 0, i32 0
  %102 = load i32*, i32** %101, align 8
  %103 = icmp eq i32* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %100
  %105 = ptrtoint i32* %102 to i64
  %106 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %98, i64 0, i32 0, i32 1
  %107 = bitcast i32** %106 to i64*
  store i64 %105, i64* %107, align 8
  %108 = bitcast i32* %102 to i8*
  call void @_ZdlPv(i8* %108) #12
  br label %109

109:                                              ; preds = %104, %100
  %110 = bitcast %"class.std::__1::vector.3"* %98 to i8*
  call void @_ZdlPv(i8* %110) #12
  br label %111

111:                                              ; preds = %81, %109
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %84) #11
  %112 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %113 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %112, align 8
  %114 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %113, i64 0, i32 11
  %115 = load i32, i32* %114, align 8
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %142

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %113, i64 0, i32 4, i32 0, i32 0, i32 0
  %120 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %119, align 8
  %121 = call i8* @_Znwm(i64 104) #12
  %122 = bitcast i8* %121 to %"class.spvtools::opt::analysis::DefUseManager"*
  %123 = getelementptr inbounds i8, i8* %121, i64 32
  %124 = bitcast i8* %123 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %124, align 4
  %125 = getelementptr inbounds i8, i8* %121, i64 48
  %126 = getelementptr inbounds i8, i8* %121, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 16, i1 false) #11
  %127 = bitcast i8* %126 to i8**
  store i8* %125, i8** %127, align 8
  %128 = getelementptr inbounds i8, i8* %121, i64 64
  %129 = getelementptr inbounds i8, i8* %121, i64 96
  %130 = bitcast i8* %129 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %130, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %122, %"class.spvtools::opt::Module"* %120) #11
  %131 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %113, i64 0, i32 6
  %132 = ptrtoint i8* %121 to i64
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %131, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %133, align 8
  %135 = bitcast %"class.std::__1::unique_ptr.62"* %131 to i64*
  store i64 %132, i64* %135, align 8
  %136 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %134, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %118
  %138 = bitcast %"class.std::__1::unique_ptr.62"* %131 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %138, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %134) #11
  br label %139

139:                                              ; preds = %137, %118
  %140 = load i32, i32* %114, align 8
  %141 = or i32 %140, 1
  store i32 %141, i32* %114, align 8
  br label %142

142:                                              ; preds = %111, %139
  %143 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %113, i64 0, i32 6, i32 0, i32 0, i32 0
  %144 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %143, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %144, %"class.spvtools::opt::Instruction"* %1) #11
  %145 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %145) #11
  %146 = load i8, i8* %15, align 1, !range !3
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %152, label %148

148:                                              ; preds = %142
  %149 = load i8, i8* %5, align 4, !range !3
  %150 = zext i8 %149 to i32
  %151 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %150) #11
  br label %152

152:                                              ; preds = %142, %148
  %153 = phi i32 [ %151, %148 ], [ 0, %142 ]
  store i32 %153, i32* %4, align 4
  %154 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 8, i32 0
  %155 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %154, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %145) #11
  br label %156

156:                                              ; preds = %72, %64, %45, %22, %38, %2, %8, %152, %11
  %157 = load i8, i8* %5, align 4, !range !3
  %158 = icmp eq i8 %157, 0
  %159 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %160 = load i8, i8* %159, align 1, !range !3
  %161 = icmp eq i8 %160, 0
  %162 = select i1 %161, i32 1, i32 2
  %163 = xor i1 %161, true
  %164 = zext i1 %163 to i32
  %165 = select i1 %158, i32 %164, i32 %162
  %166 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %165) #11
  %167 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %168 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %167, align 8
  %169 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %168, i64 0, i32 11
  %170 = load i32, i32* %169, align 8
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %197

173:                                              ; preds = %156
  %174 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %168, i64 0, i32 4, i32 0, i32 0, i32 0
  %175 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %174, align 8
  %176 = call i8* @_Znwm(i64 104) #12
  %177 = bitcast i8* %176 to %"class.spvtools::opt::analysis::DefUseManager"*
  %178 = getelementptr inbounds i8, i8* %176, i64 32
  %179 = bitcast i8* %178 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %179, align 4
  %180 = getelementptr inbounds i8, i8* %176, i64 48
  %181 = getelementptr inbounds i8, i8* %176, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 16, i1 false) #11
  %182 = bitcast i8* %181 to i8**
  store i8* %180, i8** %182, align 8
  %183 = getelementptr inbounds i8, i8* %176, i64 64
  %184 = getelementptr inbounds i8, i8* %176, i64 96
  %185 = bitcast i8* %184 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %185, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %177, %"class.spvtools::opt::Module"* %175) #11
  %186 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %168, i64 0, i32 6
  %187 = ptrtoint i8* %176 to i64
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %186, i64 0, i32 0, i32 0, i32 0
  %189 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %188, align 8
  %190 = bitcast %"class.std::__1::unique_ptr.62"* %186 to i64*
  store i64 %187, i64* %190, align 8
  %191 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %189, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %173
  %193 = bitcast %"class.std::__1::unique_ptr.62"* %186 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %193, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %189) #11
  br label %194

194:                                              ; preds = %192, %173
  %195 = load i32, i32* %169, align 8
  %196 = or i32 %195, 1
  store i32 %196, i32* %169, align 8
  br label %197

197:                                              ; preds = %156, %194
  %198 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %168, i64 0, i32 6, i32 0, i32 0, i32 0
  %199 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %198, align 8
  %200 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %199, i32 %166) #11
  %201 = load i8, i8* %5, align 4, !range !3
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %205, label %203

203:                                              ; preds = %197
  %204 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  br label %205

205:                                              ; preds = %197, %203
  %206 = phi i32 [ %204, %203 ], [ 0, %197 ]
  %207 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %200, i64 0, i32 3
  %208 = load i8, i8* %207, align 4, !range !3
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %212, label %210

210:                                              ; preds = %205
  %211 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %200, i32 0) #11
  br label %212

212:                                              ; preds = %205, %210
  %213 = phi i32 [ %211, %210 ], [ 0, %205 ]
  %214 = icmp eq i32 %206, %213
  br i1 %214, label %215, label %217

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  store i32 83, i32* %216, align 8
  br label %217

217:                                              ; preds = %215, %212
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass15ProcessImageRefEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %199, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %26, null
  br i1 %27, label %199, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"* %30, null
  br i1 %31, label %199, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  br label %34

34:                                               ; preds = %55, %32
  %35 = phi %"struct.std::__1::__hash_node_base.915"* [ %30, %32 ], [ %57, %55 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.915"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %33
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %45, %43, %41
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %55, label %199

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %35, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.915"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %59, label %55

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %35, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.915"* %57, null
  br i1 %58, label %199, label %34

59:                                               ; preds = %50
  %60 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #11
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %62 = load i8, i8* %61, align 4, !range !3
  %63 = icmp eq i8 %62, 0
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %65 = load i8, i8* %64, align 1, !range !3
  %66 = icmp eq i8 %65, 0
  %67 = select i1 %66, i32 1, i32 2
  %68 = xor i1 %66, true
  %69 = zext i1 %68 to i32
  %70 = select i1 %63, i32 %69, i32 %67
  %71 = add nuw nsw i32 %70, 2
  %72 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %71) #11
  store i32 %72, i32* %3, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %197, label %77

77:                                               ; preds = %59
  %78 = tail call i64 @llvm.ctpop.i64(i64 %75) #11, !range !2
  %79 = icmp ugt i64 %78, 1
  br i1 %79, label %83, label %80

80:                                               ; preds = %77
  %81 = add i64 %75, 4294967295
  %82 = and i64 %81, %73
  br label %87

83:                                               ; preds = %77
  %84 = icmp ugt i64 %75, %73
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  %86 = urem i64 %73, %75
  br label %87

87:                                               ; preds = %85, %83, %80
  %88 = phi i64 [ %82, %80 ], [ %86, %85 ], [ %73, %83 ]
  %89 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %90, i64 %88
  %92 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %91, align 8
  %93 = icmp eq %"struct.std::__1::__hash_node_base.915"* %92, null
  br i1 %93, label %197, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %92, i64 0, i32 0
  %96 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %95, align 8
  %97 = icmp eq %"struct.std::__1::__hash_node_base.915"* %96, null
  br i1 %97, label %197, label %98

98:                                               ; preds = %94
  %99 = add i64 %75, -1
  br label %100

100:                                              ; preds = %121, %98
  %101 = phi %"struct.std::__1::__hash_node_base.915"* [ %96, %98 ], [ %123, %121 ]
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %101, i64 1
  %103 = bitcast %"struct.std::__1::__hash_node_base.915"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = icmp eq i64 %104, %73
  br i1 %105, label %116, label %106

106:                                              ; preds = %100
  br i1 %79, label %109, label %107

107:                                              ; preds = %106
  %108 = and i64 %104, %99
  br label %113

109:                                              ; preds = %106
  %110 = icmp ult i64 %104, %75
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = urem i64 %104, %75
  br label %113

113:                                              ; preds = %111, %109, %107
  %114 = phi i64 [ %108, %107 ], [ %112, %111 ], [ %104, %109 ]
  %115 = icmp eq i64 %114, %88
  br i1 %115, label %121, label %197

116:                                              ; preds = %100
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %101, i64 2
  %118 = bitcast %"struct.std::__1::__hash_node_base.915"* %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, %72
  br i1 %120, label %125, label %121

121:                                              ; preds = %116, %113
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %101, i64 0, i32 0
  %123 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %122, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.915"* %123, null
  br i1 %124, label %197, label %100

125:                                              ; preds = %116
  call void @_ZN8spvtools3opt17ConvertToHalfPass10GenConvertEPjjPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* %0, i32* nonnull %3, i32 32, %"class.spvtools::opt::Instruction"* %1)
  %126 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %126) #11
  %127 = load i32, i32* %3, align 4
  %128 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8
  %129 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %130 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %131 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %132 = bitcast i32** %130 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %131, %"struct.std::__1::aligned_storage<4, 4>::type"** %132, align 8
  %133 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %134 = bitcast %"class.std::__1::unique_ptr.0"* %133 to i64*
  store i64 0, i64* %134, align 8
  %135 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %131 to i32*
  store i64 1, i64* %129, align 8
  store i32 %127, i32* %135, align 8
  %136 = load i8, i8* %61, align 4, !range !3
  %137 = icmp eq i8 %136, 0
  %138 = load i8, i8* %64, align 1, !range !3
  %139 = icmp eq i8 %138, 0
  %140 = select i1 %139, i64 1, i64 2
  %141 = xor i1 %139, true
  %142 = zext i1 %141 to i64
  %143 = select i1 %137, i64 %142, i64 %140
  %144 = add nuw nsw i64 %143, 2
  %145 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %146 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %145, align 8
  %147 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %146, i64 %144, i32 1
  %148 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %147, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8
  %149 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %149, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %149, align 8
  %151 = icmp eq %"class.std::__1::vector.3"* %150, null
  br i1 %151, label %163, label %152

152:                                              ; preds = %125
  %153 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %150, i64 0, i32 0, i32 0
  %154 = load i32*, i32** %153, align 8
  %155 = icmp eq i32* %154, null
  br i1 %155, label %161, label %156

156:                                              ; preds = %152
  %157 = ptrtoint i32* %154 to i64
  %158 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %150, i64 0, i32 0, i32 1
  %159 = bitcast i32** %158 to i64*
  store i64 %157, i64* %159, align 8
  %160 = bitcast i32* %154 to i8*
  call void @_ZdlPv(i8* %160) #12
  br label %161

161:                                              ; preds = %156, %152
  %162 = bitcast %"class.std::__1::vector.3"* %150 to i8*
  call void @_ZdlPv(i8* %162) #12
  br label %163

163:                                              ; preds = %125, %161
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %126) #11
  %164 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %165 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %164, align 8
  %166 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %165, i64 0, i32 11
  %167 = load i32, i32* %166, align 8
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %194

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %165, i64 0, i32 4, i32 0, i32 0, i32 0
  %172 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %171, align 8
  %173 = call i8* @_Znwm(i64 104) #12
  %174 = bitcast i8* %173 to %"class.spvtools::opt::analysis::DefUseManager"*
  %175 = getelementptr inbounds i8, i8* %173, i64 32
  %176 = bitcast i8* %175 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %176, align 4
  %177 = getelementptr inbounds i8, i8* %173, i64 48
  %178 = getelementptr inbounds i8, i8* %173, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 16, i1 false) #11
  %179 = bitcast i8* %178 to i8**
  store i8* %177, i8** %179, align 8
  %180 = getelementptr inbounds i8, i8* %173, i64 64
  %181 = getelementptr inbounds i8, i8* %173, i64 96
  %182 = bitcast i8* %181 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %182, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %174, %"class.spvtools::opt::Module"* %172) #11
  %183 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %165, i64 0, i32 6
  %184 = ptrtoint i8* %173 to i64
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %183, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %185, align 8
  %187 = bitcast %"class.std::__1::unique_ptr.62"* %183 to i64*
  store i64 %184, i64* %187, align 8
  %188 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %186, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %170
  %190 = bitcast %"class.std::__1::unique_ptr.62"* %183 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %190, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %186) #11
  br label %191

191:                                              ; preds = %189, %170
  %192 = load i32, i32* %166, align 8
  %193 = or i32 %192, 1
  store i32 %193, i32* %166, align 8
  br label %194

194:                                              ; preds = %163, %191
  %195 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %165, i64 0, i32 6, i32 0, i32 0, i32 0
  %196 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %195, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %196, %"class.spvtools::opt::Instruction"* %1) #11
  br label %197

197:                                              ; preds = %113, %121, %94, %59, %87, %194
  %198 = phi i1 [ true, %194 ], [ false, %87 ], [ false, %59 ], [ false, %94 ], [ false, %121 ], [ false, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #11
  br label %199

199:                                              ; preds = %47, %55, %28, %2, %21, %197
  %200 = phi i1 [ %198, %197 ], [ false, %21 ], [ false, %2 ], [ false, %28 ], [ false, %55 ], [ false, %47 ]
  ret i1 %200
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass14ProcessDefaultEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.1049", align 8
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::function.945", align 8
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 0, i8* %5, align 1
  %7 = bitcast %"class.std::__1::function.945"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::function.945", %"class.std::__1::function.945"* %6, i64 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::function.945", %"class.std::__1::function.945"* %6, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14ProcessDefaultEPNS8_11InstructionEE3$_3S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %8, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14ProcessDefaultEPNS5_11InstructionEE3$_3FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %9, align 8
  %10 = tail call i8* @_Znwm(i64 24) #12, !noalias !14
  %11 = bitcast i8* %10 to %"class.spvtools::opt::Instruction"***
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = bitcast i8* %12 to i8**
  store i8* %5, i8** %13, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 16
  %15 = bitcast i8* %14 to %"class.spvtools::opt::ConvertToHalfPass"**
  store %"class.spvtools::opt::ConvertToHalfPass"* %0, %"class.spvtools::opt::ConvertToHalfPass"** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::function.945", %"class.std::__1::function.945"* %6, i64 0, i32 0, i32 0, i32 0
  store i8* %10, i8** %16, align 8
  %17 = bitcast %"class.std::__1::function.1049"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #11
  %18 = ptrtoint %"class.std::__1::function.945"* %6 to i64
  %19 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %19, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %20, align 8
  %21 = bitcast %"class.std::__1::function.1049"* %3 to i64*
  store i64 %18, i64* %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %23 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %25 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %24, align 8
  %26 = icmp eq %"struct.spvtools::opt::Operand"* %23, %25
  br i1 %26, label %49, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %44, %27
  %30 = phi %"struct.spvtools::opt::Operand"* [ %23, %27 ], [ %45, %44 ]
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %32) #11
  br i1 %33, label %34, label %44

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %30, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %36 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %35, align 8
  %37 = icmp eq %"class.std::__1::vector.3"* %36, null
  %38 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %36, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %30, i64 0, i32 1, i32 2
  %40 = select i1 %37, i32** %39, i32** %38
  %41 = load i32*, i32** %40, align 8
  %42 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %19, align 8
  %43 = call zeroext i1 %42(%"union.std::__1::__function::__policy_storage"* nonnull %28, i32* %41) #11
  br i1 %43, label %44, label %47

44:                                               ; preds = %34, %29
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %30, i64 1
  %46 = icmp eq %"struct.spvtools::opt::Operand"* %45, %25
  br i1 %46, label %47, label %29

47:                                               ; preds = %44, %34
  %48 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %20, align 8
  br label %49

49:                                               ; preds = %47, %2
  %50 = phi %"struct.std::__1::__function::__policy"* [ %48, %47 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %2 ]
  %51 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %50, i64 0, i32 1
  %52 = load void (i8*)*, void (i8*)** %51, align 8
  %53 = icmp eq void (i8*)* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void %52(i8* %56) #11
  br label %57

57:                                               ; preds = %49, %54
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #11
  %58 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %9, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %58, i64 0, i32 1
  %60 = load void (i8*)*, void (i8*)** %59, align 8
  %61 = icmp eq void (i8*)* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = load i8*, i8** %16, align 8
  call void %60(i8* %63) #11
  br label %64

64:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #11
  %65 = load i8, i8* %5, align 1, !range !3
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %104, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %69 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %68, align 8
  %70 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %69, i64 0, i32 11
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %98

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %69, i64 0, i32 4, i32 0, i32 0, i32 0
  %76 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %75, align 8
  %77 = call i8* @_Znwm(i64 104) #12
  %78 = bitcast i8* %77 to %"class.spvtools::opt::analysis::DefUseManager"*
  %79 = getelementptr inbounds i8, i8* %77, i64 32
  %80 = bitcast i8* %79 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %80, align 4
  %81 = getelementptr inbounds i8, i8* %77, i64 48
  %82 = getelementptr inbounds i8, i8* %77, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #11
  %83 = bitcast i8* %82 to i8**
  store i8* %81, i8** %83, align 8
  %84 = getelementptr inbounds i8, i8* %77, i64 64
  %85 = getelementptr inbounds i8, i8* %77, i64 96
  %86 = bitcast i8* %85 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %86, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %78, %"class.spvtools::opt::Module"* %76) #11
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %69, i64 0, i32 6
  %88 = ptrtoint i8* %77 to i64
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %87, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %89, align 8
  %91 = bitcast %"class.std::__1::unique_ptr.62"* %87 to i64*
  store i64 %88, i64* %91, align 8
  %92 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %90, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %74
  %94 = bitcast %"class.std::__1::unique_ptr.62"* %87 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %94, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %90) #11
  br label %95

95:                                               ; preds = %93, %74
  %96 = load i32, i32* %70, align 8
  %97 = or i32 %96, 1
  store i32 %97, i32* %70, align 8
  br label %98

98:                                               ; preds = %67, %95
  %99 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %69, i64 0, i32 6, i32 0, i32 0, i32 0
  %100 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %99, align 8
  %101 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %100, %"class.spvtools::opt::Instruction"* %101) #11
  %102 = load i8, i8* %5, align 1, !range !3
  %103 = icmp ne i8 %102, 0
  br label %104

104:                                              ; preds = %64, %98
  %105 = phi i1 [ false, %64 ], [ %103, %98 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  ret i1 %105
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass11GenHalfInstEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %4 = load i8, i8* %3, align 1, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %8 = load i8, i8* %7, align 4, !range !3
  %9 = zext i8 %8 to i32
  %10 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %9) #11
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i32 [ %10, %6 ], [ 0, %2 ]
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %65, label %17

17:                                               ; preds = %11
  %18 = tail call i64 @llvm.ctpop.i64(i64 %15) #11, !range !2
  %19 = icmp ugt i64 %18, 1
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = add i64 %15, 4294967295
  %22 = and i64 %21, %13
  br label %27

23:                                               ; preds = %17
  %24 = icmp ugt i64 %15, %13
  br i1 %24, label %27, label %25

25:                                               ; preds = %23
  %26 = urem i64 %13, %15
  br label %27

27:                                               ; preds = %25, %23, %20
  %28 = phi i64 [ %22, %20 ], [ %26, %25 ], [ %13, %23 ]
  %29 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, i64 %28
  %32 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.915"* %32, null
  br i1 %33, label %65, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %32, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.915"* %36, null
  br i1 %37, label %65, label %38

38:                                               ; preds = %34
  %39 = add i64 %15, -1
  br label %40

40:                                               ; preds = %61, %38
  %41 = phi %"struct.std::__1::__hash_node_base.915"* [ %36, %38 ], [ %63, %61 ]
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %41, i64 1
  %43 = bitcast %"struct.std::__1::__hash_node_base.915"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, %13
  br i1 %45, label %56, label %46

46:                                               ; preds = %40
  br i1 %19, label %49, label %47

47:                                               ; preds = %46
  %48 = and i64 %44, %39
  br label %53

49:                                               ; preds = %46
  %50 = icmp ult i64 %44, %15
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = urem i64 %44, %15
  br label %53

53:                                               ; preds = %51, %49, %47
  %54 = phi i64 [ %48, %47 ], [ %52, %51 ], [ %44, %49 ]
  %55 = icmp eq i64 %54, %28
  br i1 %55, label %61, label %65

56:                                               ; preds = %40
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %41, i64 2
  %58 = bitcast %"struct.std::__1::__hash_node_base.915"* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %12
  br i1 %60, label %65, label %61

61:                                               ; preds = %56, %53
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %41, i64 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.915"* %63, null
  br i1 %64, label %65, label %40

65:                                               ; preds = %53, %56, %61, %11, %27, %34
  %66 = phi %"struct.std::__1::__hash_node_base.915"* [ null, %27 ], [ null, %11 ], [ null, %34 ], [ %41, %56 ], [ null, %61 ], [ null, %53 ]
  %67 = icmp eq %"struct.std::__1::__hash_node_base.915"* %66, null
  %68 = tail call zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass12IsArithmeticEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* %0, %"class.spvtools::opt::Instruction"* %1)
  %69 = xor i1 %68, true
  %70 = or i1 %67, %69
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = tail call zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass12GenHalfArithEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* %0, %"class.spvtools::opt::Instruction"* %1)
  br label %141

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %75 = load i32, i32* %74, align 8
  %76 = icmp ne i32 %75, 245
  %77 = or i1 %67, %76
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  %79 = tail call zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass10ProcessPhiEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* %0, %"class.spvtools::opt::Instruction"* %1)
  br label %141

80:                                               ; preds = %73
  %81 = icmp eq i32 %75, 115
  br i1 %81, label %82, label %84

82:                                               ; preds = %80
  %83 = tail call zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass14ProcessConvertEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* %0, %"class.spvtools::opt::Instruction"* %1)
  br label %141

84:                                               ; preds = %80
  %85 = zext i32 %75 to i64
  %86 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %139, label %89

89:                                               ; preds = %84
  %90 = tail call i64 @llvm.ctpop.i64(i64 %87) #11, !range !2
  %91 = icmp ugt i64 %90, 1
  br i1 %91, label %95, label %92

92:                                               ; preds = %89
  %93 = add i64 %87, 4294967295
  %94 = and i64 %93, %85
  br label %99

95:                                               ; preds = %89
  %96 = icmp ugt i64 %87, %85
  br i1 %96, label %99, label %97

97:                                               ; preds = %95
  %98 = urem i64 %85, %87
  br label %99

99:                                               ; preds = %97, %95, %92
  %100 = phi i64 [ %94, %92 ], [ %98, %97 ], [ %85, %95 ]
  %101 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %102, i64 %100
  %104 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.915"* %104, null
  br i1 %105, label %139, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %104, i64 0, i32 0
  %108 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.915"* %108, null
  br i1 %109, label %139, label %110

110:                                              ; preds = %106
  %111 = add i64 %87, -1
  br label %112

112:                                              ; preds = %133, %110
  %113 = phi %"struct.std::__1::__hash_node_base.915"* [ %108, %110 ], [ %135, %133 ]
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %113, i64 1
  %115 = bitcast %"struct.std::__1::__hash_node_base.915"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %116, %85
  br i1 %117, label %128, label %118

118:                                              ; preds = %112
  br i1 %91, label %121, label %119

119:                                              ; preds = %118
  %120 = and i64 %116, %111
  br label %125

121:                                              ; preds = %118
  %122 = icmp ult i64 %116, %87
  br i1 %122, label %125, label %123

123:                                              ; preds = %121
  %124 = urem i64 %116, %87
  br label %125

125:                                              ; preds = %123, %121, %119
  %126 = phi i64 [ %120, %119 ], [ %124, %123 ], [ %116, %121 ]
  %127 = icmp eq i64 %126, %100
  br i1 %127, label %133, label %139

128:                                              ; preds = %112
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %113, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.915"* %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, %75
  br i1 %132, label %137, label %133

133:                                              ; preds = %128, %125
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %113, i64 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.915"* %135, null
  br i1 %136, label %139, label %112

137:                                              ; preds = %128
  %138 = tail call zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass15ProcessImageRefEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* %0, %"class.spvtools::opt::Instruction"* %1)
  br label %141

139:                                              ; preds = %133, %125, %99, %84, %106
  %140 = tail call zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass14ProcessDefaultEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* %0, %"class.spvtools::opt::Instruction"* %1)
  br label %141

141:                                              ; preds = %78, %137, %139, %82, %71
  %142 = phi i1 [ %72, %71 ], [ true, %78 ], [ true, %82 ], [ %138, %137 ], [ %140, %139 ]
  ret i1 %142
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass14CloseRelaxInstEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::function.1049", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::__1::function.945", align 8
  %9 = alloca %"class.std::__1::function.955", align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %292, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %15 = load i8, i8* %14, align 4, !range !3
  %16 = zext i8 %15 to i32
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %16) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %292, label %19

19:                                               ; preds = %13
  %20 = load i8, i8* %10, align 1, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = load i8, i8* %14, align 4, !range !3
  %24 = zext i8 %23 to i32
  %25 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %24) #11
  br label %26

26:                                               ; preds = %19, %22
  %27 = phi i32 [ %25, %22 ], [ 0, %19 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %80, label %32

32:                                               ; preds = %26
  %33 = tail call i64 @llvm.ctpop.i64(i64 %30) #11, !range !2
  %34 = icmp ugt i64 %33, 1
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = add i64 %30, 4294967295
  %37 = and i64 %36, %28
  br label %42

38:                                               ; preds = %32
  %39 = icmp ugt i64 %30, %28
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %28, %30
  br label %42

42:                                               ; preds = %40, %38, %35
  %43 = phi i64 [ %37, %35 ], [ %41, %40 ], [ %28, %38 ]
  %44 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %45, i64 %43
  %47 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.915"* %47, null
  br i1 %48, label %80, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %47, i64 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.915"* %51, null
  br i1 %52, label %80, label %53

53:                                               ; preds = %49
  %54 = add i64 %30, -1
  br label %55

55:                                               ; preds = %76, %53
  %56 = phi %"struct.std::__1::__hash_node_base.915"* [ %51, %53 ], [ %78, %76 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %56, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.915"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %28
  br i1 %60, label %71, label %61

61:                                               ; preds = %55
  br i1 %34, label %64, label %62

62:                                               ; preds = %61
  %63 = and i64 %59, %54
  br label %68

64:                                               ; preds = %61
  %65 = icmp ult i64 %59, %30
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %59, %30
  br label %68

68:                                               ; preds = %66, %64, %62
  %69 = phi i64 [ %63, %62 ], [ %67, %66 ], [ %59, %64 ]
  %70 = icmp eq i64 %69, %43
  br i1 %70, label %76, label %80

71:                                               ; preds = %55
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %56, i64 2
  %73 = bitcast %"struct.std::__1::__hash_node_base.915"* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, %27
  br i1 %75, label %292, label %76

76:                                               ; preds = %71, %68
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %56, i64 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %77, align 8
  %79 = icmp eq %"struct.std::__1::__hash_node_base.915"* %78, null
  br i1 %79, label %80, label %55

80:                                               ; preds = %68, %76, %42, %26, %49
  %81 = load i8, i8* %14, align 4, !range !3
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %292, label %83

83:                                               ; preds = %80
  %84 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %292, label %86

86:                                               ; preds = %83
  %87 = bitcast %"class.spvtools::opt::ConvertToHalfPass"* %0 to %"class.spvtools::opt::Pass"*
  %88 = tail call zeroext i1 @_ZN8spvtools3opt4Pass7IsFloatEjj(%"class.spvtools::opt::Pass"* %87, i32 %84, i32 32) #11
  br i1 %88, label %89, label %292

89:                                               ; preds = %86
  %90 = tail call zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass18IsDecoratedRelaxedEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* %0, %"class.spvtools::opt::Instruction"* %1)
  br i1 %90, label %91, label %103

91:                                               ; preds = %89
  %92 = load i8, i8* %10, align 1, !range !3
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %98, label %94

94:                                               ; preds = %91
  %95 = load i8, i8* %14, align 4, !range !3
  %96 = zext i8 %95 to i32
  %97 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %96) #11
  br label %98

98:                                               ; preds = %91, %94
  %99 = phi i32 [ %97, %94 ], [ 0, %91 ]
  %100 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100)
  store i32 %99, i32* %5, align 4
  %101 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0
  %102 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %101, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100)
  br label %292

103:                                              ; preds = %89
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %105 = load i32, i32* %104, align 8
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %292, label %110

110:                                              ; preds = %103
  %111 = tail call i64 @llvm.ctpop.i64(i64 %108) #11, !range !2
  %112 = icmp ugt i64 %111, 1
  br i1 %112, label %116, label %113

113:                                              ; preds = %110
  %114 = add i64 %108, 4294967295
  %115 = and i64 %114, %106
  br label %120

116:                                              ; preds = %110
  %117 = icmp ugt i64 %108, %106
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = urem i64 %106, %108
  br label %120

120:                                              ; preds = %118, %116, %113
  %121 = phi i64 [ %115, %113 ], [ %119, %118 ], [ %106, %116 ]
  %122 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %122, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %123, i64 %121
  %125 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %124, align 8
  %126 = icmp eq %"struct.std::__1::__hash_node_base.915"* %125, null
  br i1 %126, label %292, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %125, i64 0, i32 0
  %129 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.915"* %129, null
  br i1 %130, label %292, label %131

131:                                              ; preds = %127
  %132 = add i64 %108, -1
  br label %133

133:                                              ; preds = %154, %131
  %134 = phi %"struct.std::__1::__hash_node_base.915"* [ %129, %131 ], [ %156, %154 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %134, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.915"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = icmp eq i64 %137, %106
  br i1 %138, label %149, label %139

139:                                              ; preds = %133
  br i1 %112, label %142, label %140

140:                                              ; preds = %139
  %141 = and i64 %137, %132
  br label %146

142:                                              ; preds = %139
  %143 = icmp ult i64 %137, %108
  br i1 %143, label %146, label %144

144:                                              ; preds = %142
  %145 = urem i64 %137, %108
  br label %146

146:                                              ; preds = %144, %142, %140
  %147 = phi i64 [ %141, %140 ], [ %145, %144 ], [ %137, %142 ]
  %148 = icmp eq i64 %147, %121
  br i1 %148, label %154, label %292

149:                                              ; preds = %133
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %134, i64 2
  %151 = bitcast %"struct.std::__1::__hash_node_base.915"* %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, %105
  br i1 %153, label %158, label %154

154:                                              ; preds = %149, %146
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %134, i64 0, i32 0
  %156 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %155, align 8
  %157 = icmp eq %"struct.std::__1::__hash_node_base.915"* %156, null
  br i1 %157, label %292, label %133

158:                                              ; preds = %149
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #11
  store i8 1, i8* %7, align 1
  %159 = bitcast %"class.std::__1::function.945"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %159) #11
  %160 = getelementptr inbounds %"class.std::__1::function.945", %"class.std::__1::function.945"* %8, i64 0, i32 0, i32 1, i32 0
  %161 = getelementptr inbounds %"class.std::__1::function.945", %"class.std::__1::function.945"* %8, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14CloseRelaxInstEPNS8_11InstructionEE3$_4S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %160, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14CloseRelaxInstEPNS5_11InstructionEE3$_4FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %161, align 8
  %162 = getelementptr inbounds %"class.std::__1::function.945", %"class.std::__1::function.945"* %8, i64 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %162, align 8
  %163 = getelementptr inbounds %"class.std::__1::function.945", %"class.std::__1::function.945"* %8, i64 0, i32 0, i32 0, i32 1
  %164 = bitcast [8 x i8]* %163 to %"class.spvtools::opt::ConvertToHalfPass"**
  store %"class.spvtools::opt::ConvertToHalfPass"* %0, %"class.spvtools::opt::ConvertToHalfPass"** %164, align 8
  %165 = bitcast %"class.std::__1::function.1049"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %165) #11
  %166 = ptrtoint %"class.std::__1::function.945"* %8 to i64
  %167 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 1, i32 0
  %168 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %167, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %168, align 8
  %169 = bitcast %"class.std::__1::function.1049"* %4 to i64*
  store i64 %166, i64* %169, align 8
  %170 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %171 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %170, align 8
  %172 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %173 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %172, align 8
  %174 = icmp eq %"struct.spvtools::opt::Operand"* %171, %173
  br i1 %174, label %197, label %175

175:                                              ; preds = %158
  %176 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 0
  br label %177

177:                                              ; preds = %192, %175
  %178 = phi %"struct.spvtools::opt::Operand"* [ %171, %175 ], [ %193, %192 ]
  %179 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 0
  %180 = load i32, i32* %179, align 8
  %181 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %180) #11
  br i1 %181, label %182, label %192

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %184 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %183, align 8
  %185 = icmp eq %"class.std::__1::vector.3"* %184, null
  %186 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %184, i64 0, i32 0, i32 0
  %187 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 1, i32 2
  %188 = select i1 %185, i32** %187, i32** %186
  %189 = load i32*, i32** %188, align 8
  %190 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %167, align 8
  %191 = call zeroext i1 %190(%"union.std::__1::__function::__policy_storage"* nonnull %176, i32* %189) #11
  br i1 %191, label %192, label %195

192:                                              ; preds = %182, %177
  %193 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 1
  %194 = icmp eq %"struct.spvtools::opt::Operand"* %193, %173
  br i1 %194, label %195, label %177

195:                                              ; preds = %192, %182
  %196 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %168, align 8
  br label %197

197:                                              ; preds = %195, %158
  %198 = phi %"struct.std::__1::__function::__policy"* [ %196, %195 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %158 ]
  %199 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %198, i64 0, i32 1
  %200 = load void (i8*)*, void (i8*)** %199, align 8
  %201 = icmp eq void (i8*)* %200, null
  br i1 %201, label %205, label %202

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8
  call void %200(i8* %204) #11
  br label %205

205:                                              ; preds = %197, %202
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %165) #11
  %206 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %161, align 8
  %207 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %206, i64 0, i32 1
  %208 = load void (i8*)*, void (i8*)** %207, align 8
  %209 = icmp eq void (i8*)* %208, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %205
  %211 = load i8*, i8** %162, align 8
  call void %208(i8* %211) #11
  br label %212

212:                                              ; preds = %205, %210
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %159) #11
  %213 = load i8, i8* %7, align 1, !range !3
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %227, label %215

215:                                              ; preds = %212
  %216 = load i8, i8* %10, align 1, !range !3
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %222, label %218

218:                                              ; preds = %215
  %219 = load i8, i8* %14, align 4, !range !3
  %220 = zext i8 %219 to i32
  %221 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %220) #11
  br label %222

222:                                              ; preds = %215, %218
  %223 = phi i32 [ %221, %218 ], [ 0, %215 ]
  %224 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %224)
  store i32 %223, i32* %3, align 4
  %225 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0
  %226 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %225, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #11
  br label %288

227:                                              ; preds = %212
  store i8 1, i8* %7, align 1
  %228 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %229 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %228, align 8
  %230 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %229, i64 0, i32 11
  %231 = load i32, i32* %230, align 8
  %232 = and i32 %231, 1
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %258

234:                                              ; preds = %227
  %235 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %229, i64 0, i32 4, i32 0, i32 0, i32 0
  %236 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %235, align 8
  %237 = call i8* @_Znwm(i64 104) #12
  %238 = bitcast i8* %237 to %"class.spvtools::opt::analysis::DefUseManager"*
  %239 = getelementptr inbounds i8, i8* %237, i64 32
  %240 = bitcast i8* %239 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %237, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %240, align 4
  %241 = getelementptr inbounds i8, i8* %237, i64 48
  %242 = getelementptr inbounds i8, i8* %237, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %241, i8 0, i64 16, i1 false) #11
  %243 = bitcast i8* %242 to i8**
  store i8* %241, i8** %243, align 8
  %244 = getelementptr inbounds i8, i8* %237, i64 64
  %245 = getelementptr inbounds i8, i8* %237, i64 96
  %246 = bitcast i8* %245 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %244, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %246, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %238, %"class.spvtools::opt::Module"* %236) #11
  %247 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %229, i64 0, i32 6
  %248 = ptrtoint i8* %237 to i64
  %249 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %247, i64 0, i32 0, i32 0, i32 0
  %250 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %249, align 8
  %251 = bitcast %"class.std::__1::unique_ptr.62"* %247 to i64*
  store i64 %248, i64* %251, align 8
  %252 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %250, null
  br i1 %252, label %255, label %253

253:                                              ; preds = %234
  %254 = bitcast %"class.std::__1::unique_ptr.62"* %247 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %254, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %250) #11
  br label %255

255:                                              ; preds = %253, %234
  %256 = load i32, i32* %230, align 8
  %257 = or i32 %256, 1
  store i32 %257, i32* %230, align 8
  br label %258

258:                                              ; preds = %227, %255
  %259 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %229, i64 0, i32 6, i32 0, i32 0, i32 0
  %260 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %259, align 8
  %261 = bitcast %"class.std::__1::function.955"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %261) #11
  %262 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %9, i64 0, i32 0, i32 1, i32 0
  %263 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %9, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17ConvertToHalfPass14CloseRelaxInstES5_E3$_5S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %262, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14CloseRelaxInstEPNS5_11InstructionEE3$_5FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %263, align 8
  %264 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %9, i64 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %264, align 8
  %265 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %9, i64 0, i32 0, i32 0, i32 1
  %266 = bitcast [8 x i8]* %265 to %"class.spvtools::opt::ConvertToHalfPass"**
  store %"class.spvtools::opt::ConvertToHalfPass"* %0, %"class.spvtools::opt::ConvertToHalfPass"** %266, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEPKNS0_11InstructionERKNSt3__18functionIFvPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"* %260, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.955"* nonnull dereferenceable(32) %9) #11
  %267 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %263, align 8
  %268 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %267, i64 0, i32 1
  %269 = load void (i8*)*, void (i8*)** %268, align 8
  %270 = icmp eq void (i8*)* %269, null
  br i1 %270, label %273, label %271

271:                                              ; preds = %258
  %272 = load i8*, i8** %264, align 8
  call void %269(i8* %272) #11
  br label %273

273:                                              ; preds = %258, %271
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %261) #11
  %274 = load i8, i8* %7, align 1, !range !3
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %290, label %276

276:                                              ; preds = %273
  %277 = load i8, i8* %10, align 1, !range !3
  %278 = icmp eq i8 %277, 0
  br i1 %278, label %283, label %279

279:                                              ; preds = %276
  %280 = load i8, i8* %14, align 4, !range !3
  %281 = zext i8 %280 to i32
  %282 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %281) #11
  br label %283

283:                                              ; preds = %276, %279
  %284 = phi i32 [ %282, %279 ], [ 0, %276 ]
  %285 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %285)
  store i32 %284, i32* %6, align 4
  %286 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0
  %287 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %286, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %6) #11
  br label %288

288:                                              ; preds = %222, %283
  %289 = phi i8* [ %285, %283 ], [ %224, %222 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %289)
  br label %290

290:                                              ; preds = %288, %273
  %291 = phi i1 [ false, %273 ], [ true, %288 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  br label %292

292:                                              ; preds = %71, %146, %154, %127, %103, %120, %80, %83, %2, %86, %13, %290, %98
  %293 = phi i1 [ true, %98 ], [ %291, %290 ], [ false, %13 ], [ false, %86 ], [ false, %2 ], [ false, %83 ], [ false, %80 ], [ false, %120 ], [ false, %103 ], [ false, %127 ], [ false, %154 ], [ false, %146 ], [ false, %71 ]
  ret i1 %293
}

declare void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEPKNS0_11InstructionERKNSt3__18functionIFvPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.955"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass15ProcessFunctionEPNS0_8FunctionE(%"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::Function"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.std::__1::function.962", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::function.962", align 8
  %7 = alloca %"class.std::__1::function.962", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  store i8 1, i8* %3, align 1
  %8 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %10 = bitcast %"class.std::__1::function.962"* %4 to i8*
  %11 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %4, i64 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %4, i64 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %4, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast [8 x i8]* %14 to %"class.spvtools::opt::ConvertToHalfPass"**
  br label %16

16:                                               ; preds = %2, %50
  store i8 0, i8* %3, align 1
  %17 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 11
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 16
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %38

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %23, align 8
  %25 = call i8* @_Znwm(i64 400) #12
  %26 = bitcast i8* %25 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %26, %"class.spvtools::opt::Module"* %24) #11
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 15
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %29, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.273"* %28 to i64*
  store i64 %27, i64* %31, align 8
  %32 = icmp eq %"class.spvtools::opt::CFG"* %30, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %22
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %30) #11
  %34 = bitcast %"class.spvtools::opt::CFG"* %30 to i8*
  call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %33, %22
  %36 = load i32, i32* %18, align 8
  %37 = or i32 %36, 16
  store i32 %37, i32* %18, align 8
  br label %38

38:                                               ; preds = %16, %35
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 15, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %39, align 8
  %41 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_17ConvertToHalfPass15ProcessFunctionEPNS3_8FunctionEE3$_6S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %11, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass15ProcessFunctionEPNS5_8FunctionEE3$_6FvPNS5_10BasicBlockEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %12, align 8
  store i8* %3, i8** %13, align 8
  store %"class.spvtools::opt::ConvertToHalfPass"* %0, %"class.spvtools::opt::ConvertToHalfPass"** %15, align 8
  call void @_ZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS0_10BasicBlockERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::CFG"* %40, %"class.spvtools::opt::BasicBlock"* %43, %"class.std::__1::function.962"* nonnull dereferenceable(32) %4) #11
  %44 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %12, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %44, i64 0, i32 1
  %46 = load void (i8*)*, void (i8*)** %45, align 8
  %47 = icmp eq void (i8*)* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %38
  %49 = load i8*, i8** %13, align 8
  call void %46(i8* %49) #11
  br label %50

50:                                               ; preds = %38, %48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  %51 = load i8, i8* %3, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %16

53:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 0, i8* %5, align 1
  %54 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %55 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %54, i64 0, i32 11
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 16
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %75

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  %61 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %60, align 8
  %62 = call i8* @_Znwm(i64 400) #12
  %63 = bitcast i8* %62 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %63, %"class.spvtools::opt::Module"* %61) #11
  %64 = ptrtoint i8* %62 to i64
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %54, i64 0, i32 15
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %66, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.273"* %65 to i64*
  store i64 %64, i64* %68, align 8
  %69 = icmp eq %"class.spvtools::opt::CFG"* %67, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %59
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %67) #11
  %71 = bitcast %"class.spvtools::opt::CFG"* %67 to i8*
  call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %70, %59
  %73 = load i32, i32* %55, align 8
  %74 = or i32 %73, 16
  store i32 %74, i32* %55, align 8
  br label %75

75:                                               ; preds = %53, %72
  %76 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %54, i64 0, i32 15, i32 0, i32 0, i32 0
  %77 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %76, align 8
  %78 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %79, align 8
  %81 = bitcast %"class.std::__1::function.962"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %81) #11
  %82 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %6, i64 0, i32 0, i32 1, i32 0
  %83 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %6, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_17ConvertToHalfPass15ProcessFunctionEPNS3_8FunctionEE3$_7S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %82, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass15ProcessFunctionEPNS5_8FunctionEE3$_7FvPNS5_10BasicBlockEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %6, i64 0, i32 0, i32 0, i32 0
  store i8* %5, i8** %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %6, i64 0, i32 0, i32 0, i32 1
  %86 = bitcast [8 x i8]* %85 to %"class.spvtools::opt::ConvertToHalfPass"**
  store %"class.spvtools::opt::ConvertToHalfPass"* %0, %"class.spvtools::opt::ConvertToHalfPass"** %86, align 8
  call void @_ZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS0_10BasicBlockERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::CFG"* %77, %"class.spvtools::opt::BasicBlock"* %80, %"class.std::__1::function.962"* nonnull dereferenceable(32) %6) #11
  %87 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %83, align 8
  %88 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %87, i64 0, i32 1
  %89 = load void (i8*)*, void (i8*)** %88, align 8
  %90 = icmp eq void (i8*)* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %75
  %92 = load i8*, i8** %84, align 8
  call void %89(i8* %92) #11
  br label %93

93:                                               ; preds = %75, %91
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %81) #11
  %94 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %95 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %94, i64 0, i32 11
  %96 = load i32, i32* %95, align 8
  %97 = and i32 %96, 16
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %115

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %94, i64 0, i32 4, i32 0, i32 0, i32 0
  %101 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %100, align 8
  %102 = call i8* @_Znwm(i64 400) #12
  %103 = bitcast i8* %102 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %103, %"class.spvtools::opt::Module"* %101) #11
  %104 = ptrtoint i8* %102 to i64
  %105 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %94, i64 0, i32 15
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %106, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.273"* %105 to i64*
  store i64 %104, i64* %108, align 8
  %109 = icmp eq %"class.spvtools::opt::CFG"* %107, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %99
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %107) #11
  %111 = bitcast %"class.spvtools::opt::CFG"* %107 to i8*
  call void @_ZdlPv(i8* %111) #12
  br label %112

112:                                              ; preds = %110, %99
  %113 = load i32, i32* %95, align 8
  %114 = or i32 %113, 16
  store i32 %114, i32* %95, align 8
  br label %115

115:                                              ; preds = %93, %112
  %116 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %94, i64 0, i32 15, i32 0, i32 0, i32 0
  %117 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %116, align 8
  %118 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %118, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %119, align 8
  %121 = bitcast %"class.std::__1::function.962"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #11
  %122 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %7, i64 0, i32 0, i32 1, i32 0
  %123 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_17ConvertToHalfPass15ProcessFunctionEPNS3_8FunctionEE3$_8S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %122, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass15ProcessFunctionEPNS5_8FunctionEE3$_8FvPNS5_10BasicBlockEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %5, i8** %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %7, i64 0, i32 0, i32 0, i32 1
  %126 = bitcast [8 x i8]* %125 to %"class.spvtools::opt::ConvertToHalfPass"**
  store %"class.spvtools::opt::ConvertToHalfPass"* %0, %"class.spvtools::opt::ConvertToHalfPass"** %126, align 8
  call void @_ZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS0_10BasicBlockERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::CFG"* %117, %"class.spvtools::opt::BasicBlock"* %120, %"class.std::__1::function.962"* nonnull dereferenceable(32) %7) #11
  %127 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %123, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %127, i64 0, i32 1
  %129 = load void (i8*)*, void (i8*)** %128, align 8
  %130 = icmp eq void (i8*)* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %115
  %132 = load i8*, i8** %124, align 8
  call void %129(i8* %132) #11
  br label %133

133:                                              ; preds = %115, %131
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #11
  %134 = load i8, i8* %5, align 1, !range !3
  %135 = icmp ne i8 %134, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  ret i1 %135
}

declare void @_ZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS0_10BasicBlockERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.962"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt17ConvertToHalfPass11ProcessImplEv(%"class.spvtools::opt::ConvertToHalfPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.971", align 8
  %3 = bitcast %"class.std::__1::function.971"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.std::__1::function.971", %"class.std::__1::function.971"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::function.971", %"class.std::__1::function.971"* %2, i64 0, i32 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.std::__1::function.971", %"class.std::__1::function.971"* %2, i64 0, i32 0, i32 2
  %7 = ptrtoint %"class.spvtools::opt::ConvertToHalfPass"* %0 to i64
  %8 = getelementptr inbounds %"class.std::__1::function.971", %"class.std::__1::function.971"* %2, i64 0, i32 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17ConvertToHalfPass11ProcessImplEvE3$_9S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)** %5, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass11ProcessImplEvE3$_9FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %6, align 8
  %10 = bitcast %"class.std::__1::function.971"* %2 to i64*
  store i64 %7, i64* %10, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 2
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = call zeroext i1 @_ZN8spvtools3opt9IRContext25ProcessEntryPointCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"* %12, %"class.std::__1::function.971"* nonnull dereferenceable(32) %2) #11
  br i1 %13, label %14, label %16

14:                                               ; preds = %1
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  call void @_ZN8spvtools3opt9IRContext13AddCapabilityE14SpvCapability_(%"class.spvtools::opt::IRContext"* %15, i32 9)
  br label %16

16:                                               ; preds = %14, %1
  %17 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = bitcast %"struct.std::__1::__hash_node_base.915"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %33, %16
  %22 = phi i1 [ %13, %16 ], [ %40, %33 ]
  %23 = zext i1 %22 to i8
  %24 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %24, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %26, i64 0, i32 14, i32 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %26, i64 0, i32 14, i32 0, i32 1
  %29 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = inttoptr i64 %30 to %"class.spvtools::opt::Instruction"*
  %32 = icmp eq %"class.spvtools::opt::Instruction"* %28, %31
  br i1 %32, label %44, label %56

33:                                               ; preds = %16, %33
  %34 = phi i64 [ %42, %33 ], [ %19, %16 ]
  %35 = phi i1 [ %40, %33 ], [ %13, %16 ]
  %36 = inttoptr i64 %34 to %"struct.std::__1::__hash_node.1075"*
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node.1075", %"struct.std::__1::__hash_node.1075"* %36, i64 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = call zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass23RemoveRelaxedDecorationEj(%"class.spvtools::opt::ConvertToHalfPass"* %0, i32 %38)
  %40 = or i1 %35, %39
  %41 = inttoptr i64 %34 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %21, label %33

44:                                               ; preds = %74, %21
  %45 = phi i8 [ %23, %21 ], [ %75, %74 ]
  %46 = and i8 %45, 1
  %47 = icmp eq i8 %46, 0
  %48 = select i1 %47, i32 17, i32 16
  %49 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %6, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %49, i64 0, i32 1
  %51 = load void (i8*)*, void (i8*)** %50, align 8
  %52 = icmp eq void (i8*)* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %44
  %54 = load i8*, i8** %4, align 8
  call void %51(i8* %54) #11
  br label %55

55:                                               ; preds = %44, %53
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #11
  ret i32 %48

56:                                               ; preds = %21, %74
  %57 = phi %"class.spvtools::opt::Instruction"* [ %80, %74 ], [ %31, %21 ]
  %58 = phi i64 [ %79, %74 ], [ %30, %21 ]
  %59 = phi i8 [ %75, %74 ], [ %23, %21 ]
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %57, i64 0, i32 4
  %61 = load i8, i8* %60, align 1, !range !3
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %74, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %57, i64 0, i32 3
  %65 = load i8, i8* %64, align 4, !range !3
  %66 = zext i8 %65 to i32
  %67 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %57, i32 %66) #11
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %63
  %70 = call zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass23RemoveRelaxedDecorationEj(%"class.spvtools::opt::ConvertToHalfPass"* %0, i32 %67)
  %71 = zext i1 %70 to i8
  %72 = and i8 %59, 1
  %73 = or i8 %72, %71
  br label %74

74:                                               ; preds = %56, %63, %69
  %75 = phi i8 [ %73, %69 ], [ %59, %63 ], [ %59, %56 ]
  %76 = inttoptr i64 %58 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %77 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %76, i64 0, i32 1
  %78 = bitcast %"class.spvtools::opt::Instruction"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = inttoptr i64 %79 to %"class.spvtools::opt::Instruction"*
  %81 = icmp eq %"class.spvtools::opt::Instruction"* %28, %80
  br i1 %81, label %44, label %56
}

declare zeroext i1 @_ZN8spvtools3opt9IRContext25ProcessEntryPointCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"*, %"class.std::__1::function.971"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext13AddCapabilityE14SpvCapability_(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.21", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %8, align 8
  %10 = icmp eq %"class.spvtools::opt::FeatureManager"* %9, null
  br i1 %10, label %11, label %22

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 1
  %13 = tail call i8* @_Znwm(i64 48) #12
  %14 = bitcast i8* %13 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %12, %"class.spvtools::AssemblyGrammar"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 40, i1 false) #11
  %16 = ptrtoint i8* %13 to i64
  %17 = bitcast %"class.std::__1::unique_ptr.152"* %7 to i64*
  store i64 %16, i64* %17, align 8
  %18 = bitcast i8* %13 to %"class.spvtools::opt::FeatureManager"*
  %19 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %19, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* nonnull %18, %"class.spvtools::opt::Module"* %20) #11
  %21 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %8, align 8
  br label %22

22:                                               ; preds = %2, %11
  %23 = phi %"class.spvtools::opt::FeatureManager"* [ %9, %2 ], [ %21, %11 ]
  %24 = icmp ugt i32 %1, 63
  br i1 %24, label %25, label %55

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %23, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %26, align 8
  %28 = icmp eq %"class.std::__1::set.158"* %27, null
  br i1 %28, label %62, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %27, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node"**
  %32 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node"* %32, null
  br i1 %33, label %62, label %34

34:                                               ; preds = %29, %34
  %35 = phi %"class.std::__1::__tree_end_node"* [ %45, %34 ], [ %30, %29 ]
  %36 = phi %"class.std::__1::__tree_node"* [ %46, %34 ], [ %32, %29 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %36, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp ult i32 %38, %1
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %36, i64 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::__tree_node_base"** %40 to %"class.std::__1::__tree_node"**
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %36, i64 0, i32 0, i32 0
  %43 = bitcast %"class.std::__1::__tree_node"* %36 to %"class.std::__1::__tree_node"**
  %44 = select i1 %39, %"class.std::__1::__tree_node"** %41, %"class.std::__1::__tree_node"** %43
  %45 = select i1 %39, %"class.std::__1::__tree_end_node"* %35, %"class.std::__1::__tree_end_node"* %42
  %46 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %47 = icmp eq %"class.std::__1::__tree_node"* %46, null
  br i1 %47, label %48, label %34

48:                                               ; preds = %34
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %45, %30
  br i1 %49, label %62, label %50

50:                                               ; preds = %48
  %51 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree_node"*
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp ugt i32 %53, %1
  br i1 %54, label %62, label %185

55:                                               ; preds = %22
  %56 = zext i32 %1 to i64
  %57 = shl i64 1, %56
  %58 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %23, i64 0, i32 2, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, %57
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %185

62:                                               ; preds = %50, %55, %48, %29, %25
  %63 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %3, i64 0, i32 0, i32 0, i32 0
  %65 = tail call i8* @_Znwm(i64 112) #12
  %66 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #11
  %67 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %67) #11
  %68 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %68) #11
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %71 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %72 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %73 = bitcast i32** %71 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %72, %"struct.std::__1::aligned_storage<4, 4>::type"** %73, align 8
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %75 = bitcast %"class.std::__1::unique_ptr.0"* %74 to i64*
  store i64 0, i64* %75, align 8
  %76 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %72 to i32*
  store i64 1, i64* %70, align 8
  store i32 %1, i32* %76, align 8
  %77 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  store i32 32, i32* %77, align 8
  %78 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %79 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %78, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8
  %80 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 2
  %82 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 3, i64 0
  %83 = bitcast i32** %81 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %82, %"struct.std::__1::aligned_storage<4, 4>::type"** %83, align 8
  %84 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4
  %85 = bitcast %"class.std::__1::unique_ptr.0"* %84 to i64*
  store i64 0, i64* %85, align 8
  %86 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %78, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #11
  %87 = call i8* @_Znwm(i64 48) #12
  %88 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %89 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %87, i8** %89, align 8
  %90 = getelementptr inbounds i8, i8* %87, i64 48
  %91 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %92 = bitcast %"struct.spvtools::opt::Operand"** %91 to i8**
  store i8* %90, i8** %92, align 8
  %93 = bitcast i8* %87 to i32*
  %94 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  %95 = load i32, i32* %94, align 8
  store i32 %95, i32* %93, align 8
  %96 = getelementptr inbounds i8, i8* %87, i64 8
  %97 = bitcast i8* %96 to %"class.spvtools::utils::SmallVector"*
  %98 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %99 = bitcast i8* %96 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %99, align 8
  %100 = getelementptr inbounds i8, i8* %87, i64 16
  %101 = bitcast i8* %100 to i64*
  store i64 0, i64* %101, align 8
  %102 = getelementptr inbounds i8, i8* %87, i64 24
  %103 = getelementptr inbounds i8, i8* %87, i64 32
  %104 = bitcast i8* %102 to i8**
  store i8* %103, i8** %104, align 8
  %105 = getelementptr inbounds i8, i8* %87, i64 40
  %106 = bitcast i8* %105 to i64*
  store i64 0, i64* %106, align 8
  %107 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %97, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %98) #11
  %108 = getelementptr inbounds i8, i8* %87, i64 48
  %109 = bitcast i8* %65 to %"class.spvtools::opt::Instruction"*
  %110 = bitcast %"struct.spvtools::opt::Operand"** %88 to i64*
  %111 = ptrtoint i8* %108 to i64
  store i64 %111, i64* %110, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %109, %"class.spvtools::opt::IRContext"* %0, i32 17, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #11
  %112 = ptrtoint i8* %65 to i64
  %113 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %115 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %114, align 8
  %116 = icmp eq %"struct.spvtools::opt::Operand"* %115, null
  br i1 %116, label %145, label %117

117:                                              ; preds = %62
  %118 = bitcast %"struct.spvtools::opt::Operand"* %115 to i8*
  %119 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %88, align 8
  %120 = icmp eq %"struct.spvtools::opt::Operand"* %119, %115
  br i1 %120, label %143, label %121

121:                                              ; preds = %117, %139
  %122 = phi %"struct.spvtools::opt::Operand"* [ %123, %139 ], [ %119, %117 ]
  %123 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %122, i64 -1
  %124 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %122, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %124, align 8
  %125 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %122, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %126 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %125, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %125, align 8
  %127 = icmp eq %"class.std::__1::vector.3"* %126, null
  br i1 %127, label %139, label %128

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %126, i64 0, i32 0, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %128
  %133 = ptrtoint i32* %130 to i64
  %134 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %126, i64 0, i32 0, i32 1
  %135 = bitcast i32** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = bitcast i32* %130 to i8*
  call void @_ZdlPv(i8* %136) #12
  br label %137

137:                                              ; preds = %132, %128
  %138 = bitcast %"class.std::__1::vector.3"* %126 to i8*
  call void @_ZdlPv(i8* %138) #12
  br label %139

139:                                              ; preds = %137, %121
  %140 = icmp eq %"struct.spvtools::opt::Operand"* %123, %115
  br i1 %140, label %141, label %121

141:                                              ; preds = %139
  %142 = load i8*, i8** %89, align 8
  br label %143

143:                                              ; preds = %141, %117
  %144 = phi i8* [ %142, %141 ], [ %118, %117 ]
  store %"struct.spvtools::opt::Operand"* %115, %"struct.spvtools::opt::Operand"** %88, align 8
  call void @_ZdlPv(i8* %144) #12
  br label %145

145:                                              ; preds = %62, %143
  %146 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %146, align 8
  %147 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %148 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %147, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %147, align 8
  %149 = icmp eq %"class.std::__1::vector.3"* %148, null
  br i1 %149, label %161, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %148, i64 0, i32 0, i32 0
  %152 = load i32*, i32** %151, align 8
  %153 = icmp eq i32* %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %150
  %155 = ptrtoint i32* %152 to i64
  %156 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %148, i64 0, i32 0, i32 1
  %157 = bitcast i32** %156 to i64*
  store i64 %155, i64* %157, align 8
  %158 = bitcast i32* %152 to i8*
  call void @_ZdlPv(i8* %158) #12
  br label %159

159:                                              ; preds = %154, %150
  %160 = bitcast %"class.std::__1::vector.3"* %148 to i8*
  call void @_ZdlPv(i8* %160) #12
  br label %161

161:                                              ; preds = %145, %159
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %162 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %163 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %162, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %162, align 8
  %164 = icmp eq %"class.std::__1::vector.3"* %163, null
  br i1 %164, label %176, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %163, i64 0, i32 0, i32 0
  %167 = load i32*, i32** %166, align 8
  %168 = icmp eq i32* %167, null
  br i1 %168, label %174, label %169

169:                                              ; preds = %165
  %170 = ptrtoint i32* %167 to i64
  %171 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %163, i64 0, i32 0, i32 1
  %172 = bitcast i32** %171 to i64*
  store i64 %170, i64* %172, align 8
  %173 = bitcast i32* %167 to i8*
  call void @_ZdlPv(i8* %173) #12
  br label %174

174:                                              ; preds = %169, %165
  %175 = bitcast %"class.std::__1::vector.3"* %163 to i8*
  call void @_ZdlPv(i8* %175) #12
  br label %176

176:                                              ; preds = %161, %174
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %68) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %67) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #11
  call void @_ZN8spvtools3opt9IRContext13AddCapabilityEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::IRContext"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %3)
  %177 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %64, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %64, align 8
  %178 = icmp eq %"class.spvtools::opt::Instruction"* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %176
  %180 = bitcast %"class.spvtools::opt::Instruction"* %177 to void (%"class.spvtools::opt::Instruction"*)***
  %181 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %181, i64 1
  %183 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %182, align 8
  call void %183(%"class.spvtools::opt::Instruction"* nonnull %177) #11
  br label %184

184:                                              ; preds = %176, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  br label %185

185:                                              ; preds = %50, %55, %184
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt17ConvertToHalfPass7ProcessEv(%"class.spvtools::opt::ConvertToHalfPass"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8spvtools3opt17ConvertToHalfPass10InitializeEv(%"class.spvtools::opt::ConvertToHalfPass"* %0)
  %2 = tail call i32 @_ZN8spvtools3opt17ConvertToHalfPass11ProcessImplEv(%"class.spvtools::opt::ConvertToHalfPass"* %0)
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt17ConvertToHalfPass10InitializeEv(%"class.spvtools::opt::ConvertToHalfPass"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE15__assign_uniqueIPKjEEvT_SB_(%"class.std::__1::__hash_table.911"* %2, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @.ref.tmp, i64 0, i64 0), i32* getelementptr inbounds ([36 x i32], [36 x i32]* @.ref.tmp, i64 1, i64 0)) #11
  %3 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE15__assign_uniqueIPKjEEvT_SB_(%"class.std::__1::__hash_table.911"* %3, i32* getelementptr inbounds ([50 x i32], [50 x i32]* @.ref.tmp.1, i64 0, i64 0), i32* getelementptr inbounds ([50 x i32], [50 x i32]* @.ref.tmp.1, i64 1, i64 0)) #11
  %4 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE15__assign_uniqueIPKjEEvT_SB_(%"class.std::__1::__hash_table.911"* %4, i32* getelementptr inbounds ([25 x i32], [25 x i32]* @.ref.tmp.2, i64 0, i64 0), i32* getelementptr inbounds ([25 x i32], [25 x i32]* @.ref.tmp.2, i64 1, i64 0)) #11
  %5 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE15__assign_uniqueIPKjEEvT_SB_(%"class.std::__1::__hash_table.911"* %5, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.ref.tmp.3, i64 0, i64 0), i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.ref.tmp.3, i64 1, i64 0)) #11
  %6 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE15__assign_uniqueIPKjEEvT_SB_(%"class.std::__1::__hash_table.911"* %6, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @.ref.tmp.4, i64 0, i64 0), i32* getelementptr inbounds ([9 x i32], [9 x i32]* @.ref.tmp.4, i64 1, i64 0)) #11
  %7 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.915"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.915"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.915"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  %19 = icmp eq %"struct.std::__1::__hash_node_base.915"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !19

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %114, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.915"* %66, null
  br i1 %67, label %74, label %68

68:                                               ; preds = %64, %68
  %69 = phi %"struct.std::__1::__hash_node_base.915"* [ %71, %68 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %69, i64 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %70, align 8
  %72 = bitcast %"struct.std::__1::__hash_node_base.915"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #12
  %73 = icmp eq %"struct.std::__1::__hash_node_base.915"* %71, null
  br i1 %73, label %74, label %68

74:                                               ; preds = %68, %64
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %65, align 8
  %75 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %96, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = add i64 %76, -1
  %81 = and i64 %76, 3
  %82 = icmp ult i64 %80, 3
  br i1 %82, label %85, label %83

83:                                               ; preds = %78
  %84 = sub i64 %76, %81
  br label %97

85:                                               ; preds = %97, %78
  %86 = phi i64 [ 0, %78 ], [ %111, %97 ]
  %87 = icmp eq i64 %81, 0
  br i1 %87, label %96, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %93, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %94, %88 ], [ %81, %85 ]
  %91 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %79, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %91, i64 %89
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %92, align 8
  %93 = add nuw i64 %89, 1
  %94 = add i64 %90, -1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %88, !llvm.loop !21

96:                                               ; preds = %85, %88, %74
  store i64 0, i64* %61, align 8
  br label %114

97:                                               ; preds = %97, %83
  %98 = phi i64 [ 0, %83 ], [ %111, %97 ]
  %99 = phi i64 [ %84, %83 ], [ %112, %97 ]
  %100 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %79, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %100, i64 %98
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %101, align 8
  %102 = or i64 %98, 1
  %103 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %79, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %103, i64 %102
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %104, align 8
  %105 = or i64 %98, 2
  %106 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %79, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %106, i64 %105
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %107, align 8
  %108 = or i64 %98, 3
  %109 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %79, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %109, i64 %108
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %110, align 8
  %111 = add nuw i64 %98, 4
  %112 = add i64 %99, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %85, label %97

114:                                              ; preds = %60, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt17ConvertToHalfPassD2Ev(%"class.spvtools::opt::ConvertToHalfPass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt17ConvertToHalfPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.915"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.915"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.915"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  %11 = icmp eq %"struct.std::__1::__hash_node_base.915"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.915"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.915"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.915"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.915"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.915"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.915"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34, %38
  %39 = phi %"struct.std::__1::__hash_node_base.915"* [ %41, %38 ], [ %36, %34 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base.915"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base.915"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %34
  %45 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.915"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.915"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.915"* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %50, %54
  %55 = phi %"struct.std::__1::__hash_node_base.915"* [ %57, %54 ], [ %52, %50 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %55, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %56, align 8
  %58 = bitcast %"struct.std::__1::__hash_node_base.915"* %55 to i8*
  tail call void @_ZdlPv(i8* %58) #12
  %59 = icmp eq %"struct.std::__1::__hash_node_base.915"* %57, null
  br i1 %59, label %60, label %54

60:                                               ; preds = %54, %50
  %61 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %61, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %61, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base.915"** %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %60
  %65 = bitcast %"struct.std::__1::__hash_node_base.915"** %62 to i8*
  tail call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %60, %64
  %67 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.915"* %68, null
  br i1 %69, label %76, label %70

70:                                               ; preds = %66, %70
  %71 = phi %"struct.std::__1::__hash_node_base.915"* [ %73, %70 ], [ %68, %66 ]
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %71, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %72, align 8
  %74 = bitcast %"struct.std::__1::__hash_node_base.915"* %71 to i8*
  tail call void @_ZdlPv(i8* %74) #12
  %75 = icmp eq %"struct.std::__1::__hash_node_base.915"* %73, null
  br i1 %75, label %76, label %70

76:                                               ; preds = %70, %66
  %77 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %77, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %77, align 8
  %79 = icmp eq %"struct.std::__1::__hash_node_base.915"** %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = bitcast %"struct.std::__1::__hash_node_base.915"** %78 to i8*
  tail call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %76, %80
  %83 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %83, align 8
  %85 = icmp eq %"struct.std::__1::__hash_node_base.915"* %84, null
  br i1 %85, label %92, label %86

86:                                               ; preds = %82, %86
  %87 = phi %"struct.std::__1::__hash_node_base.915"* [ %89, %86 ], [ %84, %82 ]
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %87, i64 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %88, align 8
  %90 = bitcast %"struct.std::__1::__hash_node_base.915"* %87 to i8*
  tail call void @_ZdlPv(i8* %90) #12
  %91 = icmp eq %"struct.std::__1::__hash_node_base.915"* %89, null
  br i1 %91, label %92, label %86

92:                                               ; preds = %86, %82
  %93 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %93, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base.915"** %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = bitcast %"struct.std::__1::__hash_node_base.915"** %94 to i8*
  tail call void @_ZdlPv(i8* %97) #12
  br label %98

98:                                               ; preds = %92, %96
  %99 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.915"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %98, %102
  %103 = phi %"struct.std::__1::__hash_node_base.915"* [ %105, %102 ], [ %100, %98 ]
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %103, i64 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %104, align 8
  %106 = bitcast %"struct.std::__1::__hash_node_base.915"* %103 to i8*
  tail call void @_ZdlPv(i8* %106) #12
  %107 = icmp eq %"struct.std::__1::__hash_node_base.915"* %105, null
  br i1 %107, label %108, label %102

108:                                              ; preds = %102, %98
  %109 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %109, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %109, align 8
  %111 = icmp eq %"struct.std::__1::__hash_node_base.915"** %110, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %108
  %113 = bitcast %"struct.std::__1::__hash_node_base.915"** %110 to i8*
  tail call void @_ZdlPv(i8* %113) #12
  br label %114

114:                                              ; preds = %108, %112
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %116 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %115, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %116, i64 0, i32 1
  %118 = load void (i8*)*, void (i8*)** %117, align 8
  %119 = icmp eq void (i8*)* %118, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  tail call void %118(i8* %122) #11
  br label %123

123:                                              ; preds = %114, %120
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt17ConvertToHalfPassD0Ev(%"class.spvtools::opt::ConvertToHalfPass"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt17ConvertToHalfPassD2Ev(%"class.spvtools::opt::ConvertToHalfPass"* %0) #11
  %2 = bitcast %"class.spvtools::opt::ConvertToHalfPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt17ConvertToHalfPass4nameEv(%"class.spvtools::opt::ConvertToHalfPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt17ConvertToHalfPass20GetPreservedAnalysesEv(%"class.spvtools::opt::ConvertToHalfPass"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD0Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZN8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZN8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZN8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZN8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZN8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZNK8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZN8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZN8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZNK8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZN8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZN8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZNK8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZN8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZN8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, %3
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.std::__1::vector.3"* [ %9, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %13, %7
  %19 = icmp eq %"class.std::__1::vector.3"* %9, %3
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %"class.std::__1::vector.3"* %3, %"class.std::__1::vector.3"** %4, align 8
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.571"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.571"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.571", %"struct.std::__1::__hash_node_base.571"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.571"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  %10 = icmp eq %"struct.std::__1::__hash_node_base.571"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.571"**, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.571"** null, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.571"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.571"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.488"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.488"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.488"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  %26 = icmp eq %"struct.std::__1::__hash_node_base.488"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.488"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.488"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #11
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.553"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.536"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.536"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.536"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #11
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.536"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #12
  %80 = icmp eq %"struct.std::__1::__hash_node_base.536"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.536"**, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.536"** null, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.536"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.536"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #12
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.512"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.512"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.512", %"struct.std::__1::__hash_node_base.512"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.512"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #12
  %96 = icmp eq %"struct.std::__1::__hash_node_base.512"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.512"**, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.512"** null, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.512"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.512"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.488"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.488"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.488"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #12
  %112 = icmp eq %"struct.std::__1::__hash_node_base.488"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.488"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.488"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node.1011"**
  %34 = load %"class.std::__1::__tree_node.1011"*, %"class.std::__1::__tree_node.1011"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node.1011"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.1011"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1011"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1011"* %1 to %"class.std::__1::__tree_node.1011"**
  %6 = load %"class.std::__1::__tree_node.1011"*, %"class.std::__1::__tree_node.1011"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1011"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1011", %"class.std::__1::__tree_node.1011"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1011"**
  %9 = load %"class.std::__1::__tree_node.1011"*, %"class.std::__1::__tree_node.1011"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1011"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.1011"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %0)
  br label %9

9:                                                ; preds = %2, %8
  %10 = lshr i64 %3, 32
  %11 = shl i64 %3, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %78, label %26

26:                                               ; preds = %9
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #11, !range !2
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.178"* %41, null
  br i1 %42, label %78, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.178"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.178"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.178"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %78

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.178"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, %1
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.178"* %72, null
  br i1 %73, label %78, label %49

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.178"* %75 to %"class.spvtools::opt::BasicBlock"**
  %77 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %76, align 8
  br label %78

78:                                               ; preds = %70, %62, %43, %9, %36, %74
  %79 = phi %"class.spvtools::opt::BasicBlock"* [ %77, %74 ], [ null, %36 ], [ null, %9 ], [ null, %43 ], [ null, %62 ], [ null, %70 ]
  ret %"class.spvtools::opt::BasicBlock"* %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.1034", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.1023", align 8
  %6 = alloca %"class.std::__1::function.955", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.178"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.178"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.178"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  %19 = icmp eq %"struct.std::__1::__hash_node_base.178"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !22

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.28"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.955"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.955"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.1023"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.955"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.1023", %"class.std::__1::function.1023"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.1023", %"class.std::__1::function.1023"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.1023"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.1023", %"class.std::__1::function.1023"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.1023", %"class.std::__1::function.1023"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1034", %"class.std::__1::tuple.1034"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.28"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.28"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #11
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #11
  %113 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1034"* nonnull dereferenceable(1) %3) #11
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  %116 = bitcast %"struct.std::__1::__hash_node_base.178"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !3
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !3
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #11
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #11
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #11
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #11
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #11
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.40"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.955"**
  %4 = load %"class.std::__1::function.955"*, %"class.std::__1::function.955"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1034", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1034", %"class.std::__1::tuple.1034"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  %18 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1034"* nonnull dereferenceable(1) %4) #11
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %21 = bitcast %"struct.std::__1::__hash_node_base.178"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1034"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !2
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !23
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !23
  %75 = load i64, i64* %74, align 8, !noalias !23
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !23
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !23
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !23
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !23
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !2
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !2
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !2
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !26

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #11
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #13
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #12
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #11
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

declare void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* sret, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"*, %"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.130"* %6, null
  br i1 %7, label %44, label %8

8:                                                ; preds = %4, %41
  %9 = phi %"struct.std::__1::__hash_node_base.130"* [ %11, %41 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 9
  %13 = bitcast %"struct.std::__1::__hash_node_base.130"* %12 to %"class.spvtools::opt::Instruction"***
  %14 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %13, align 8
  %15 = icmp eq %"class.spvtools::opt::Instruction"** %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint %"class.spvtools::opt::Instruction"** %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 10
  %19 = bitcast %"struct.std::__1::__hash_node_base.130"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %16, %8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 6
  %23 = bitcast %"struct.std::__1::__hash_node_base.130"* %22 to %"class.spvtools::opt::Instruction"***
  %24 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::Instruction"** %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = ptrtoint %"class.spvtools::opt::Instruction"** %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 7
  %29 = bitcast %"struct.std::__1::__hash_node_base.130"* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.spvtools::opt::Instruction"** %24 to i8*
  tail call void @_ZdlPv(i8* %30) #12
  br label %31

31:                                               ; preds = %26, %21
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 3
  %33 = bitcast %"struct.std::__1::__hash_node_base.130"* %32 to %"class.spvtools::opt::Instruction"***
  %34 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, align 8
  %35 = icmp eq %"class.spvtools::opt::Instruction"** %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = ptrtoint %"class.spvtools::opt::Instruction"** %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 4
  %39 = bitcast %"struct.std::__1::__hash_node_base.130"* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.spvtools::opt::Instruction"** %34 to i8*
  tail call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %36, %31
  %42 = bitcast %"struct.std::__1::__hash_node_base.130"* %9 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base.130"* %11, null
  br i1 %43, label %44, label %8

44:                                               ; preds = %41, %4
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.130"**, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.130"** null, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.130"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.130"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DecorationManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.945"**
  %4 = load %"class.std::__1::function.945"*, %"class.std::__1::function.945"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.945", %"class.std::__1::function.945"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.945", %"class.std::__1::function.945"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #11
  ret i1 true
}

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.333"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.333"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.333"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  %10 = icmp eq %"struct.std::__1::__hash_node_base.333"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.309"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.309"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.309"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.309"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.309"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  %36 = icmp eq %"struct.std::__1::__hash_node_base.309"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.309"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.309"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !3
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #11
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #11
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !3
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !3
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #11
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !3
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #11
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #11
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !3
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #11
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #11
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !3
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !3
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #11
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !3
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #11
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #11
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.281"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.281"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.281"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.281"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #12
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.281"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #12
  %214 = icmp eq %"struct.std::__1::__hash_node_base.281"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.281"**, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.281"** null, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.281"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.281"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #12
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !3
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !3
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !3
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !3
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !3
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !3
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #11
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !3
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !3
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #11
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext13AddCapabilityEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !3
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, i32 1, i32 2
  %12 = xor i1 %10, true
  %13 = zext i1 %12 to i32
  %14 = select i1 %7, i32 %13, i32 %11
  %15 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %4, i32 %14) #11
  tail call void @_ZN8spvtools3opt9IRContext27AddCombinatorsForCapabilityEj(%"class.spvtools::opt::IRContext"* %0, i32 %15) #11
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %16, align 8
  %18 = icmp eq %"class.spvtools::opt::FeatureManager"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %2
  %20 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 3
  %22 = load i8, i8* %21, align 4, !range !3
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 4
  %25 = load i8, i8* %24, align 1, !range !3
  %26 = icmp eq i8 %25, 0
  %27 = select i1 %26, i32 1, i32 2
  %28 = xor i1 %26, true
  %29 = zext i1 %28 to i32
  %30 = select i1 %23, i32 %29, i32 %27
  %31 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %20, i32 %30) #11
  tail call void @_ZN8spvtools3opt14FeatureManager13AddCapabilityE14SpvCapability_(%"class.spvtools::opt::FeatureManager"* nonnull %17, i32 %31) #11
  br label %32

32:                                               ; preds = %2, %19
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %38, align 8
  %40 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %39, %"class.spvtools::opt::Instruction"* %40) #11
  br label %41

41:                                               ; preds = %32, %37
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %42, align 8
  %44 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %3, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %43, i64 0, i32 3, i32 0, i32 1
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %44, i64 0, i32 0, i32 1
  %47 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::Instruction"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %44, i64 0, i32 0, i32 2
  %51 = bitcast %"class.spvtools::opt::Instruction"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 0, i32 2
  %54 = bitcast %"class.spvtools::opt::Instruction"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %50 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %58 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %57, align 8
  %59 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %58, i64 0, i32 1
  %60 = bitcast %"class.spvtools::opt::Instruction"** %59 to i64*
  store i64 %56, i64* %60, align 8
  %61 = bitcast %"class.spvtools::opt::Instruction"** %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #11
  br label %62

62:                                               ; preds = %41, %49
  store %"class.spvtools::opt::Instruction"* %45, %"class.spvtools::opt::Instruction"** %46, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %43, i64 0, i32 3, i32 0, i32 1, i32 0, i32 2
  %64 = bitcast %"class.spvtools::opt::Instruction"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %44, i64 0, i32 0, i32 2
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %65, i64* %67, align 8
  store %"class.spvtools::opt::Instruction"* %44, %"class.spvtools::opt::Instruction"** %63, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %66 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %69 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %68, align 8
  %70 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %69, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %44, %"class.spvtools::opt::Instruction"** %70, align 8
  ret void
}

declare void @_ZN8spvtools3opt9IRContext27AddCombinatorsForCapabilityEj(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt14FeatureManager13AddCapabilityE14SpvCapability_(%"class.spvtools::opt::FeatureManager"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #11
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #11
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #12
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.915"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.915"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.915"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #12, !noalias !27
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !27
  store i32 %58, i32* %57, align 4, !noalias !27
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !27
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"**
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %61, align 8, !noalias !27
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !2
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #11
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #11, !range !2
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.915"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.915"* %104, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.915"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.915"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #11, !range !2
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.915"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.915"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } undef, %"struct.std::__1::__hash_node_base.915"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.915"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.911"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.915"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.915"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !30

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.915"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.915"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.915"* %36, %"struct.std::__1::__hash_node_base.915"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.915"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.915"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.915"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.915"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.915"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.915"* %82, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.915"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.915"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.915"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.915"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.915"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.915"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.915"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.915"* %80, %"struct.std::__1::__hash_node_base.915"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.915"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.915"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.915"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17ConvertToHalfPass23RemoveRelaxedDecorationEjE3$_0S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.spvtools::opt::Instruction"* dereferenceable(112)) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 71
  br i1 %5, label %6, label %20

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %8 = load i8, i8* %7, align 4, !range !3
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !3
  %12 = icmp eq i8 %11, 0
  %13 = select i1 %12, i32 1, i32 2
  %14 = xor i1 %12, true
  %15 = zext i1 %14 to i32
  %16 = select i1 %9, i32 %15, i32 %13
  %17 = add nuw nsw i32 %16, 1
  %18 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %17) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %6, %2
  br label %21

21:                                               ; preds = %6, %20
  %22 = phi i1 [ false, %20 ], [ true, %6 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass12GenHalfArithEPNS8_11InstructionEE3$_1S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1093"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1093"*, %"class.std::__1::__function::__default_alloc_func.1093"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1093", %"class.std::__1::__function::__default_alloc_func.1093"* %4, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::ConvertToHalfPass"** %5, align 8
  %7 = bitcast %"class.spvtools::opt::ConvertToHalfPass"* %6 to %"class.spvtools::opt::Pass"*
  %8 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %6, i64 0, i32 0, i32 2
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %38

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %15, align 8
  %17 = tail call i8* @_Znwm(i64 104) #12
  %18 = bitcast i8* %17 to %"class.spvtools::opt::analysis::DefUseManager"*
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = getelementptr inbounds i8, i8* %17, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #11
  %23 = bitcast i8* %22 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %17, i64 64
  %25 = getelementptr inbounds i8, i8* %17, i64 96
  %26 = bitcast i8* %25 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %26, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %18, %"class.spvtools::opt::Module"* %16) #11
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 6
  %28 = ptrtoint i8* %17 to i64
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %29, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %27 to i64*
  store i64 %28, i64* %31, align 8
  %32 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %30, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %14
  %34 = bitcast %"class.std::__1::unique_ptr.62"* %27 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %34, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %30) #11
  br label %35

35:                                               ; preds = %33, %14
  %36 = load i32, i32* %10, align 8
  %37 = or i32 %36, 1
  store i32 %37, i32* %10, align 8
  br label %38

38:                                               ; preds = %35, %2
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 6, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %39, align 8
  %41 = load i32, i32* %1, align 4
  %42 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %40, i32 %41) #11
  %43 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %42, i64 0, i32 3
  %44 = load i8, i8* %43, align 4, !range !3
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %57, label %46

46:                                               ; preds = %38
  %47 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %42, i32 0) #11
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %46
  %50 = tail call zeroext i1 @_ZN8spvtools3opt4Pass7IsFloatEjj(%"class.spvtools::opt::Pass"* %7, i32 %47, i32 32) #11
  br i1 %50, label %51, label %57

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1093", %"class.std::__1::__function::__default_alloc_func.1093"* %4, i64 0, i32 0, i32 0
  %53 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %52, align 8
  %54 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %53, align 8
  tail call void @_ZN8spvtools3opt17ConvertToHalfPass10GenConvertEPjjPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* %6, i32* %1, i32 16, %"class.spvtools::opt::Instruction"* %54) #11
  %55 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1093", %"class.std::__1::__function::__default_alloc_func.1093"* %4, i64 0, i32 0, i32 1
  %56 = load i8*, i8** %55, align 8
  store i8 1, i8* %56, align 1
  br label %57

57:                                               ; preds = %38, %46, %49, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass12GenHalfArithEPNS5_11InstructionEE3$_1FvPjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #12, !noalias !31
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass12GenHalfArithEPNS5_11InstructionEE3$_1FvPjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.915"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.915"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.915"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #12, !noalias !36
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !36
  store i32 %58, i32* %57, align 4, !noalias !36
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !36
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"**
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %61, align 8, !noalias !36
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !2
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #11
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #11, !range !2
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.915"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.915"* %104, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.915"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.915"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #11, !range !2
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.915"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.915"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } undef, %"struct.std::__1::__hash_node_base.915"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.915"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass10ProcessPhiEPNS8_11InstructionEE3$_2S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1095"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1095"*, %"class.std::__1::__function::__default_alloc_func.1095"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1095", %"class.std::__1::__function::__default_alloc_func.1095"* %4, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::ConvertToHalfPass"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1095", %"class.std::__1::__function::__default_alloc_func.1095"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1095", %"class.std::__1::__function::__default_alloc_func.1095"* %4, i64 0, i32 0, i32 1
  %14 = load i32**, i32*** %13, align 8
  store i32* %1, i32** %14, align 8
  br label %92

15:                                               ; preds = %2
  %16 = bitcast %"class.spvtools::opt::ConvertToHalfPass"* %6 to %"class.spvtools::opt::Pass"*
  %17 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %6, i64 0, i32 0, i32 2
  %18 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 11
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %47

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %24, align 8
  %26 = tail call i8* @_Znwm(i64 104) #12
  %27 = bitcast i8* %26 to %"class.spvtools::opt::analysis::DefUseManager"*
  %28 = getelementptr inbounds i8, i8* %26, i64 32
  %29 = bitcast i8* %28 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %26, i64 48
  %31 = getelementptr inbounds i8, i8* %26, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #11
  %32 = bitcast i8* %31 to i8**
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds i8, i8* %26, i64 64
  %34 = getelementptr inbounds i8, i8* %26, i64 96
  %35 = bitcast i8* %34 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %35, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %27, %"class.spvtools::opt::Module"* %25) #11
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 6
  %37 = ptrtoint i8* %26 to i64
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %36, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %38, align 8
  %40 = bitcast %"class.std::__1::unique_ptr.62"* %36 to i64*
  store i64 %37, i64* %40, align 8
  %41 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %39, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %23
  %43 = bitcast %"class.std::__1::unique_ptr.62"* %36 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %43, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %39) #11
  br label %44

44:                                               ; preds = %42, %23
  %45 = load i32, i32* %19, align 8
  %46 = or i32 %45, 1
  store i32 %46, i32* %19, align 8
  br label %47

47:                                               ; preds = %44, %15
  %48 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 6, i32 0, i32 0, i32 0
  %49 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1095", %"class.std::__1::__function::__default_alloc_func.1095"* %4, i64 0, i32 0, i32 1
  %51 = load i32**, i32*** %50, align 8
  %52 = load i32*, i32** %51, align 8
  %53 = load i32, i32* %52, align 4
  %54 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %49, i32 %53) #11
  %55 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %54, i64 0, i32 3
  %56 = load i8, i8* %55, align 4, !range !3
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %92, label %58

58:                                               ; preds = %47
  %59 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %54, i32 0) #11
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %92, label %61

61:                                               ; preds = %58
  %62 = tail call zeroext i1 @_ZN8spvtools3opt4Pass7IsFloatEjj(%"class.spvtools::opt::Pass"* %16, i32 %59, i32 32) #11
  br i1 %62, label %63, label %92

63:                                               ; preds = %61
  %64 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %65 = load i32, i32* %1, align 4
  %66 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"* %64, i32 %65) #11
  %67 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %66, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %68 = bitcast %"class.spvtools::opt::Instruction"** %67 to i64*
  %69 = load i64, i64* %68, align 8, !noalias !39
  %70 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %66, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %71 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %70, align 8, !noalias !42
  %72 = inttoptr i64 %69 to %"class.spvtools::opt::Instruction"*
  %73 = icmp eq %"class.spvtools::opt::Instruction"* %71, %72
  br i1 %73, label %88, label %74

74:                                               ; preds = %63
  %75 = inttoptr i64 %69 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %76 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %75, i64 0, i32 2
  %77 = bitcast %"class.spvtools::opt::Instruction"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = inttoptr i64 %78 to %"class.spvtools::opt::Instruction"*
  %80 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %79, i64 0, i32 2
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, -2
  %83 = icmp eq i32 %82, 246
  br i1 %83, label %88, label %84

84:                                               ; preds = %74
  %85 = inttoptr i64 %78 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %86 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %85, i64 0, i32 1
  %87 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %86, align 8
  br label %88

88:                                               ; preds = %84, %74, %63
  %89 = phi %"class.spvtools::opt::Instruction"* [ %71, %63 ], [ %79, %74 ], [ %87, %84 ]
  %90 = load i32**, i32*** %50, align 8
  %91 = load i32*, i32** %90, align 8
  tail call void @_ZN8spvtools3opt17ConvertToHalfPass10GenConvertEPjjPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* %6, i32* %91, i32 16, %"class.spvtools::opt::Instruction"* %89) #11
  br label %92

92:                                               ; preds = %12, %47, %58, %61, %88
  %93 = load i32*, i32** %7, align 8
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %8, align 8
  %10 = tail call i8* @_Znwm(i64 104) #12
  %11 = bitcast i8* %10 to %"class.spvtools::opt::analysis::DefUseManager"*
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %10, i64 48
  %15 = getelementptr inbounds i8, i8* %10, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #11
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %10, i64 64
  %18 = getelementptr inbounds i8, i8* %10, i64 96
  %19 = bitcast i8* %18 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %19, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %11, %"class.spvtools::opt::Module"* %9) #11
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6
  %21 = ptrtoint i8* %10 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.62"* %20 to i64*
  store i64 %21, i64* %24, align 8
  %25 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %7
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %20 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %27, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %23) #11
  br label %28

28:                                               ; preds = %26, %7
  %29 = load i32, i32* %3, align 8
  %30 = or i32 %29, 1
  store i32 %30, i32* %3, align 8
  br label %31

31:                                               ; preds = %2, %28
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %32, align 8
  %34 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %33, i32 %1) #11
  %35 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::Instruction"* %34)
  ret %"class.spvtools::opt::BasicBlock"* %35
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass10ProcessPhiEPNS5_11InstructionEE3$_2FvPjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #12, !noalias !49
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass10ProcessPhiEPNS5_11InstructionEE3$_2FvPjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14ProcessDefaultEPNS8_11InstructionEE3$_3S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1097"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1097"*, %"class.std::__1::__function::__default_alloc_func.1097"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1097", %"class.std::__1::__function::__default_alloc_func.1097"* %4, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::ConvertToHalfPass"** %5, align 8
  %7 = load i32, i32* %1, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %6, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %69, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #11, !range !2
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, 4294967295
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ugt i64 %10, %8
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %6, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.915"* %27, null
  br i1 %28, label %69, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %27, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.915"* %31, null
  br i1 %32, label %69, label %33

33:                                               ; preds = %29
  %34 = add i64 %10, -1
  br label %35

35:                                               ; preds = %56, %33
  %36 = phi %"struct.std::__1::__hash_node_base.915"* [ %31, %33 ], [ %58, %56 ]
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base.915"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %8
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  br i1 %14, label %44, label %42

42:                                               ; preds = %41
  %43 = and i64 %39, %34
  br label %48

44:                                               ; preds = %41
  %45 = icmp ult i64 %39, %10
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %39, %10
  br label %48

48:                                               ; preds = %46, %44, %42
  %49 = phi i64 [ %43, %42 ], [ %47, %46 ], [ %39, %44 ]
  %50 = icmp eq i64 %49, %23
  br i1 %50, label %56, label %69

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base.915"* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %7
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %48
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.915"* %58, null
  br i1 %59, label %69, label %35

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1097", %"class.std::__1::__function::__default_alloc_func.1097"* %4, i64 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %61, align 8
  %63 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %62, align 8
  tail call void @_ZN8spvtools3opt17ConvertToHalfPass10GenConvertEPjjPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* %6, i32* %1, i32 32, %"class.spvtools::opt::Instruction"* %63) #11
  %64 = load i32, i32* %1, align 4
  %65 = icmp eq i32 %64, %7
  br i1 %65, label %69, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1097", %"class.std::__1::__function::__default_alloc_func.1097"* %4, i64 0, i32 0, i32 1
  %68 = load i8*, i8** %67, align 8
  store i8 1, i8* %68, align 1
  br label %69

69:                                               ; preds = %48, %56, %2, %22, %29, %60, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14ProcessDefaultEPNS5_11InstructionEE3$_3FvPjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #12, !noalias !54
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14ProcessDefaultEPNS5_11InstructionEE3$_3FvPjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14CloseRelaxInstEPNS8_11InstructionEE3$_4S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %4 = bitcast [8 x i8]* %3 to %"class.spvtools::opt::ConvertToHalfPass"**
  %5 = load %"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::ConvertToHalfPass"** %4, align 8
  %6 = bitcast %"class.spvtools::opt::ConvertToHalfPass"* %5 to %"class.spvtools::opt::Pass"*
  %7 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %5, i64 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %37

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %14, align 8
  %16 = tail call i8* @_Znwm(i64 104) #12
  %17 = bitcast i8* %16 to %"class.spvtools::opt::analysis::DefUseManager"*
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = getelementptr inbounds i8, i8* %16, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #11
  %22 = bitcast i8* %21 to i8**
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds i8, i8* %16, i64 64
  %24 = getelementptr inbounds i8, i8* %16, i64 96
  %25 = bitcast i8* %24 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %25, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %17, %"class.spvtools::opt::Module"* %15) #11
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 6
  %27 = ptrtoint i8* %16 to i64
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %26, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %28, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %26 to i64*
  store i64 %27, i64* %30, align 8
  %31 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %29, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %13
  %33 = bitcast %"class.std::__1::unique_ptr.62"* %26 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %33, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %29) #11
  br label %34

34:                                               ; preds = %32, %13
  %35 = load i32, i32* %9, align 8
  %36 = or i32 %35, 1
  store i32 %36, i32* %9, align 8
  br label %37

37:                                               ; preds = %34, %2
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 6, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %38, align 8
  %40 = load i32, i32* %1, align 4
  %41 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %39, i32 %40) #11
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 3
  %43 = load i8, i8* %42, align 4, !range !3
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %107, label %45

45:                                               ; preds = %37
  %46 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %41, i32 0) #11
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %107, label %48

48:                                               ; preds = %45
  %49 = tail call zeroext i1 @_ZN8spvtools3opt4Pass7IsFloatEjj(%"class.spvtools::opt::Pass"* %6, i32 %46, i32 32) #11
  br i1 %49, label %50, label %107

50:                                               ; preds = %48
  %51 = load i32, i32* %1, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %104, label %56

56:                                               ; preds = %50
  %57 = tail call i64 @llvm.ctpop.i64(i64 %54) #11, !range !2
  %58 = icmp ugt i64 %57, 1
  br i1 %58, label %62, label %59

59:                                               ; preds = %56
  %60 = add i64 %54, 4294967295
  %61 = and i64 %60, %52
  br label %66

62:                                               ; preds = %56
  %63 = icmp ugt i64 %54, %52
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %52, %54
  br label %66

66:                                               ; preds = %64, %62, %59
  %67 = phi i64 [ %61, %59 ], [ %65, %64 ], [ %52, %62 ]
  %68 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %69, i64 %67
  %71 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.915"* %71, null
  br i1 %72, label %104, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %71, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.915"* %75, null
  br i1 %76, label %104, label %77

77:                                               ; preds = %73
  %78 = add i64 %54, -1
  br label %79

79:                                               ; preds = %100, %77
  %80 = phi %"struct.std::__1::__hash_node_base.915"* [ %75, %77 ], [ %102, %100 ]
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 1
  %82 = bitcast %"struct.std::__1::__hash_node_base.915"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %83, %52
  br i1 %84, label %95, label %85

85:                                               ; preds = %79
  br i1 %58, label %88, label %86

86:                                               ; preds = %85
  %87 = and i64 %83, %78
  br label %92

88:                                               ; preds = %85
  %89 = icmp ult i64 %83, %54
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %83, %54
  br label %92

92:                                               ; preds = %90, %88, %86
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %83, %88 ]
  %94 = icmp eq i64 %93, %67
  br i1 %94, label %100, label %104

95:                                               ; preds = %79
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 2
  %97 = bitcast %"struct.std::__1::__hash_node_base.915"* %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, %51
  br i1 %99, label %107, label %100

100:                                              ; preds = %95, %92
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.915"* %102, null
  br i1 %103, label %104, label %79

104:                                              ; preds = %100, %92, %73, %66, %50
  %105 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  %106 = load i8*, i8** %105, align 8
  store i8 0, i8* %106, align 1
  br label %107

107:                                              ; preds = %95, %37, %45, %48, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17ConvertToHalfPass14CloseRelaxInstES5_E3$_5S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %4 = bitcast [8 x i8]* %3 to %"class.spvtools::opt::ConvertToHalfPass"**
  %5 = load %"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::ConvertToHalfPass"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %7 = load i8, i8* %6, align 1, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %87, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %11 = load i8, i8* %10, align 4, !range !3
  %12 = zext i8 %11 to i32
  %13 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %12) #11
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %87, label %15

15:                                               ; preds = %9
  %16 = load i8, i8* %10, align 4, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %87, label %18

18:                                               ; preds = %15
  %19 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %87, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.spvtools::opt::ConvertToHalfPass"* %5 to %"class.spvtools::opt::Pass"*
  %23 = tail call zeroext i1 @_ZN8spvtools3opt4Pass7IsFloatEjj(%"class.spvtools::opt::Pass"* %22, i32 %19, i32 32) #11
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = tail call zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass18IsDecoratedRelaxedEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* %5, %"class.spvtools::opt::Instruction"* %1) #11
  br i1 %25, label %90, label %26

26:                                               ; preds = %24
  %27 = load i8, i8* %6, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = load i8, i8* %10, align 4, !range !3
  %31 = zext i8 %30 to i32
  %32 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %31) #11
  br label %33

33:                                               ; preds = %29, %26
  %34 = phi i32 [ %32, %29 ], [ 0, %26 ]
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %87, label %39

39:                                               ; preds = %33
  %40 = tail call i64 @llvm.ctpop.i64(i64 %37) #11, !range !2
  %41 = icmp ugt i64 %40, 1
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = add i64 %37, 4294967295
  %44 = and i64 %43, %35
  br label %49

45:                                               ; preds = %39
  %46 = icmp ugt i64 %37, %35
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %35, %37
  br label %49

49:                                               ; preds = %47, %45, %42
  %50 = phi i64 [ %44, %42 ], [ %48, %47 ], [ %35, %45 ]
  %51 = getelementptr inbounds %"class.spvtools::opt::ConvertToHalfPass", %"class.spvtools::opt::ConvertToHalfPass"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %52, i64 %50
  %54 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.915"* %54, null
  br i1 %55, label %87, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %54, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.915"* %58, null
  br i1 %59, label %87, label %60

60:                                               ; preds = %56
  %61 = add i64 %37, -1
  br label %62

62:                                               ; preds = %83, %60
  %63 = phi %"struct.std::__1::__hash_node_base.915"* [ %58, %60 ], [ %85, %83 ]
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %63, i64 1
  %65 = bitcast %"struct.std::__1::__hash_node_base.915"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, %35
  br i1 %67, label %78, label %68

68:                                               ; preds = %62
  br i1 %41, label %71, label %69

69:                                               ; preds = %68
  %70 = and i64 %66, %61
  br label %75

71:                                               ; preds = %68
  %72 = icmp ult i64 %66, %37
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = urem i64 %66, %37
  br label %75

75:                                               ; preds = %73, %71, %69
  %76 = phi i64 [ %70, %69 ], [ %74, %73 ], [ %66, %71 ]
  %77 = icmp eq i64 %76, %50
  br i1 %77, label %83, label %87

78:                                               ; preds = %62
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %63, i64 2
  %80 = bitcast %"struct.std::__1::__hash_node_base.915"* %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, %34
  br i1 %82, label %90, label %83

83:                                               ; preds = %78, %75
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %63, i64 0, i32 0
  %85 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %84, align 8
  %86 = icmp eq %"struct.std::__1::__hash_node_base.915"* %85, null
  br i1 %86, label %87, label %62

87:                                               ; preds = %83, %75, %56, %49, %33, %21, %18, %15, %9, %2
  %88 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  %89 = load i8*, i8** %88, align 8
  store i8 0, i8* %89, align 1
  br label %90

90:                                               ; preds = %78, %24, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_17ConvertToHalfPass15ProcessFunctionEPNS3_8FunctionEE3$_6S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::BasicBlock"*) #0 align 2 {
  %3 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %4 = bitcast [8 x i8]* %3 to %"class.spvtools::opt::ConvertToHalfPass"**
  %5 = load %"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::ConvertToHalfPass"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = bitcast %"class.spvtools::opt::Instruction"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  %10 = inttoptr i64 %8 to %"class.spvtools::opt::Instruction"*
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %9, %10
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"class.spvtools::opt::Instruction"* [ %10, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %8, %12 ], [ %25, %14 ]
  %17 = tail call zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass14CloseRelaxInstEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* %5, %"class.spvtools::opt::Instruction"* %15) #11
  %18 = zext i1 %17 to i8
  %19 = load i8*, i8** %13, align 8
  %20 = load i8, i8* %19, align 1, !range !3
  %21 = or i8 %20, %18
  store i8 %21, i8* %19, align 1
  %22 = inttoptr i64 %16 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %23 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %22, i64 0, i32 1
  %24 = bitcast %"class.spvtools::opt::Instruction"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = inttoptr i64 %25 to %"class.spvtools::opt::Instruction"*
  %27 = icmp eq %"class.spvtools::opt::Instruction"* %9, %26
  br i1 %27, label %28, label %14

28:                                               ; preds = %14, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_17ConvertToHalfPass15ProcessFunctionEPNS3_8FunctionEE3$_7S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::BasicBlock"*) #0 align 2 {
  %3 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %4 = bitcast [8 x i8]* %3 to %"class.spvtools::opt::ConvertToHalfPass"**
  %5 = load %"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::ConvertToHalfPass"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = bitcast %"class.spvtools::opt::Instruction"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  %10 = inttoptr i64 %8 to %"class.spvtools::opt::Instruction"*
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %9, %10
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"class.spvtools::opt::Instruction"* [ %10, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %8, %12 ], [ %25, %14 ]
  %17 = tail call zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass11GenHalfInstEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* %5, %"class.spvtools::opt::Instruction"* %15) #11
  %18 = zext i1 %17 to i8
  %19 = load i8*, i8** %13, align 8
  %20 = load i8, i8* %19, align 1, !range !3
  %21 = or i8 %20, %18
  store i8 %21, i8* %19, align 1
  %22 = inttoptr i64 %16 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %23 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %22, i64 0, i32 1
  %24 = bitcast %"class.spvtools::opt::Instruction"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = inttoptr i64 %25 to %"class.spvtools::opt::Instruction"*
  %27 = icmp eq %"class.spvtools::opt::Instruction"* %9, %26
  br i1 %27, label %28, label %14

28:                                               ; preds = %14, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_17ConvertToHalfPass15ProcessFunctionEPNS3_8FunctionEE3$_8S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::BasicBlock"*) #0 align 2 {
  %3 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %4 = bitcast [8 x i8]* %3 to %"class.spvtools::opt::ConvertToHalfPass"**
  %5 = load %"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::ConvertToHalfPass"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = bitcast %"class.spvtools::opt::Instruction"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  %10 = inttoptr i64 %8 to %"class.spvtools::opt::Instruction"*
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %9, %10
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"class.spvtools::opt::Instruction"* [ %10, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %8, %12 ], [ %25, %14 ]
  %17 = tail call zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass17MatConvertCleanupEPNS0_11InstructionE(%"class.spvtools::opt::ConvertToHalfPass"* %5, %"class.spvtools::opt::Instruction"* %15) #11
  %18 = zext i1 %17 to i8
  %19 = load i8*, i8** %13, align 8
  %20 = load i8, i8* %19, align 1, !range !3
  %21 = or i8 %20, %18
  store i8 %21, i8* %19, align 1
  %22 = inttoptr i64 %16 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %23 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %22, i64 0, i32 1
  %24 = bitcast %"class.spvtools::opt::Instruction"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = inttoptr i64 %25 to %"class.spvtools::opt::Instruction"*
  %27 = icmp eq %"class.spvtools::opt::Instruction"* %9, %26
  br i1 %27, label %28, label %14

28:                                               ; preds = %14, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17ConvertToHalfPass11ProcessImplEvE3$_9S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Function"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::ConvertToHalfPass"**
  %4 = load %"class.spvtools::opt::ConvertToHalfPass"*, %"class.spvtools::opt::ConvertToHalfPass"** %3, align 8
  %5 = tail call zeroext i1 @_ZN8spvtools3opt17ConvertToHalfPass15ProcessFunctionEPNS0_8FunctionE(%"class.spvtools::opt::ConvertToHalfPass"* %4, %"class.spvtools::opt::Function"* %1) #11
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE15__assign_uniqueIPKjEEvT_SB_(%"class.std::__1::__hash_table.911"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %131, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = add i64 %5, -1
  %10 = and i64 %5, 3
  %11 = icmp ult i64 %9, 3
  br i1 %11, label %31, label %12

12:                                               ; preds = %7
  %13 = sub i64 %5, %10
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i64 [ 0, %12 ], [ %28, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %29, %14 ]
  %17 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %8, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %17, i64 %15
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %18, align 8
  %19 = or i64 %15, 1
  %20 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %8, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %20, i64 %19
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %21, align 8
  %22 = or i64 %15, 2
  %23 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %8, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, i64 %22
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %24, align 8
  %25 = or i64 %15, 3
  %26 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %8, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %26, i64 %25
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %27, align 8
  %28 = add nuw i64 %15, 4
  %29 = add i64 %16, -4
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %14

31:                                               ; preds = %14, %7
  %32 = phi i64 [ 0, %7 ], [ %28, %14 ]
  %33 = icmp eq i64 %10, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %10, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %8, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !59

42:                                               ; preds = %34, %31
  %43 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %44, align 8
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.915"* %45, null
  %47 = icmp eq i32* %1, %2
  %48 = or i1 %46, %47
  br i1 %48, label %121, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %50, i64 0, i32 0
  %52 = bitcast %"struct.std::__1::__hash_node_base.915"* %50 to i64*
  br label %53

53:                                               ; preds = %49, %116
  %54 = phi i32* [ %1, %49 ], [ %117, %116 ]
  %55 = phi %"struct.std::__1::__hash_node_base.915"* [ %45, %49 ], [ %60, %116 ]
  %56 = load i32, i32* %54, align 4
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %55, i64 2
  %58 = bitcast %"struct.std::__1::__hash_node_base.915"* %57 to i32*
  store i32 %56, i32* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %55, i64 0, i32 0
  %60 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %59, align 8
  %61 = zext i32 %56 to i64
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %55, i64 1
  %63 = bitcast %"struct.std::__1::__hash_node_base.915"* %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = tail call %"struct.std::__1::__hash_node_base.915"* @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE28__node_insert_unique_prepareEmRj(%"class.std::__1::__hash_table.911"* %0, i64 %61, i32* dereferenceable(4) %58) #11
  %65 = icmp eq %"struct.std::__1::__hash_node_base.915"* %64, null
  br i1 %65, label %66, label %116

66:                                               ; preds = %53
  %67 = load i64, i64* %4, align 8
  %68 = load i64, i64* %63, align 8
  %69 = tail call i64 @llvm.ctpop.i64(i64 %67) #11, !range !2
  %70 = icmp ugt i64 %69, 1
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = add i64 %67, -1
  %73 = and i64 %72, %68
  br label %78

74:                                               ; preds = %66
  %75 = icmp ult i64 %68, %67
  br i1 %75, label %78, label %76

76:                                               ; preds = %74
  %77 = urem i64 %68, %67
  br label %78

78:                                               ; preds = %76, %74, %71
  %79 = phi i64 [ %73, %71 ], [ %77, %76 ], [ %68, %74 ]
  %80 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %8, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %80, i64 %79
  %82 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.915"* %82, null
  br i1 %83, label %84, label %106

84:                                               ; preds = %78
  %85 = load i64, i64* %52, align 8
  %86 = bitcast %"struct.std::__1::__hash_node_base.915"* %55 to i64*
  store i64 %85, i64* %86, align 8
  store %"struct.std::__1::__hash_node_base.915"* %55, %"struct.std::__1::__hash_node_base.915"** %51, align 8
  %87 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %8, align 8
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %87, i64 %79
  store %"struct.std::__1::__hash_node_base.915"* %50, %"struct.std::__1::__hash_node_base.915"** %88, align 8
  %89 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %59, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.915"* %89, null
  br i1 %90, label %113, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %89, i64 1
  %93 = bitcast %"struct.std::__1::__hash_node_base.915"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  br i1 %70, label %98, label %95

95:                                               ; preds = %91
  %96 = add i64 %67, -1
  %97 = and i64 %94, %96
  br label %102

98:                                               ; preds = %91
  %99 = icmp ult i64 %94, %67
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %94, %67
  br label %102

102:                                              ; preds = %100, %98, %95
  %103 = phi i64 [ %97, %95 ], [ %101, %100 ], [ %94, %98 ]
  %104 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %8, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %104, i64 %103
  br label %111

106:                                              ; preds = %78
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %82, i64 0, i32 0
  %108 = bitcast %"struct.std::__1::__hash_node_base.915"* %82 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::__hash_node_base.915"* %55 to i64*
  store i64 %109, i64* %110, align 8
  br label %111

111:                                              ; preds = %102, %106
  %112 = phi %"struct.std::__1::__hash_node_base.915"** [ %107, %106 ], [ %105, %102 ]
  store %"struct.std::__1::__hash_node_base.915"* %55, %"struct.std::__1::__hash_node_base.915"** %112, align 8
  br label %113

113:                                              ; preds = %111, %84
  %114 = load i64, i64* %43, align 8
  %115 = add i64 %114, 1
  store i64 %115, i64* %43, align 8
  br label %116

116:                                              ; preds = %53, %113
  %117 = getelementptr inbounds i32, i32* %54, i64 1
  %118 = icmp eq %"struct.std::__1::__hash_node_base.915"* %60, null
  %119 = icmp eq i32* %117, %2
  %120 = or i1 %118, %119
  br i1 %120, label %121, label %53

121:                                              ; preds = %116, %42
  %122 = phi %"struct.std::__1::__hash_node_base.915"* [ %45, %42 ], [ %60, %116 ]
  %123 = phi i32* [ %1, %42 ], [ %117, %116 ]
  %124 = phi i1 [ %46, %42 ], [ %118, %116 ]
  br i1 %124, label %131, label %125

125:                                              ; preds = %121, %125
  %126 = phi %"struct.std::__1::__hash_node_base.915"* [ %128, %125 ], [ %122, %121 ]
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %126, i64 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %127, align 8
  %129 = bitcast %"struct.std::__1::__hash_node_base.915"* %126 to i8*
  tail call void @_ZdlPv(i8* %129) #12
  %130 = icmp eq %"struct.std::__1::__hash_node_base.915"* %128, null
  br i1 %130, label %131, label %125

131:                                              ; preds = %125, %121, %3
  %132 = phi i32* [ %1, %3 ], [ %123, %121 ], [ %123, %125 ]
  %133 = icmp eq i32* %132, %2
  br i1 %133, label %139, label %134

134:                                              ; preds = %131, %134
  %135 = phi i32* [ %137, %134 ], [ %132, %131 ]
  %136 = tail call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %0, i32* dereferenceable(4) %135, i32* dereferenceable(4) %135) #11
  %137 = getelementptr inbounds i32, i32* %135, i64 1
  %138 = icmp eq i32* %137, %2
  br i1 %138, label %139, label %134

139:                                              ; preds = %134, %131
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.915"* @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE28__node_insert_unique_prepareEmRj(%"class.std::__1::__hash_table.911"*, i64, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %50, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #11, !range !2
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, -1
  %12 = and i64 %11, %1
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %1
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %1, %5
  br label %17

17:                                               ; preds = %10, %13, %15
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %1, %13 ]
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.915"* %22, null
  br i1 %23, label %50, label %24

24:                                               ; preds = %17
  %25 = add i64 %5, -1
  %26 = load i32, i32* %2, align 4
  br label %27

27:                                               ; preds = %24, %45
  %28 = phi %"struct.std::__1::__hash_node_base.915"* [ %30, %45 ], [ %22, %24 ]
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %28, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"* %30, null
  br i1 %31, label %50, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %30, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base.915"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  br i1 %9, label %38, label %36

36:                                               ; preds = %32
  %37 = and i64 %35, %25
  br label %42

38:                                               ; preds = %32
  %39 = icmp ult i64 %35, %5
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %35, %5
  br label %42

42:                                               ; preds = %36, %38, %40
  %43 = phi i64 [ %37, %36 ], [ %41, %40 ], [ %35, %38 ]
  %44 = icmp eq i64 %43, %18
  br i1 %44, label %45, label %50

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %30, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base.915"* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %26
  br i1 %49, label %74, label %27

50:                                               ; preds = %42, %27, %17, %3
  %51 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, 1
  %54 = uitofp i64 %53 to float
  %55 = uitofp i64 %5 to float
  %56 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %57 = load float, float* %56, align 4
  %58 = fmul float %57, %55
  %59 = fcmp olt float %58, %54
  %60 = or i1 %6, %59
  br i1 %60, label %61, label %74

61:                                               ; preds = %50
  %62 = shl i64 %5, 1
  %63 = icmp ult i64 %5, 3
  %64 = tail call i64 @llvm.ctpop.i64(i64 %5) #11, !range !2
  %65 = icmp ugt i64 %64, 1
  %66 = or i1 %63, %65
  %67 = zext i1 %66 to i64
  %68 = or i64 %62, %67
  %69 = fdiv float %54, %57
  %70 = tail call float @llvm.ceil.f32(float %69) #11
  %71 = fptoui float %70 to i64
  %72 = icmp ult i64 %68, %71
  %73 = select i1 %72, i64 %71, i64 %68
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %73)
  br label %74

74:                                               ; preds = %45, %61, %50
  %75 = phi %"struct.std::__1::__hash_node_base.915"* [ null, %50 ], [ null, %61 ], [ %30, %45 ]
  ret %"struct.std::__1::__hash_node_base.915"* %75
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{i8 0, i8 2}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!7 = distinct !{!7, !8, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass12GenHalfArithEPNS5_11InstructionEE3$_1FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass12GenHalfArithEPNS5_11InstructionEE3$_1FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!12 = distinct !{!12, !13, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass10ProcessPhiEPNS5_11InstructionEE3$_2FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass10ProcessPhiEPNS5_11InstructionEE3$_2FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!17 = distinct !{!17, !18, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14ProcessDefaultEPNS5_11InstructionEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14ProcessDefaultEPNS5_11InstructionEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = distinct !{!21, !20}
!22 = distinct !{!22, !20}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!26 = distinct !{!26, !20}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!30 = distinct !{!30, !20}
!31 = !{!32, !34}
!32 = distinct !{!32, !33, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!34 = distinct !{!34, !35, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass12GenHalfArithEPNS5_11InstructionEE3$_1FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass12GenHalfArithEPNS5_11InstructionEE3$_1FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!41 = distinct !{!41, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!42 = !{!43, !45, !47}
!43 = distinct !{!43, !44, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!44 = distinct !{!44, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!45 = distinct !{!45, !46, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!46 = distinct !{!46, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!47 = distinct !{!47, !48, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!48 = distinct !{!48, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!49 = !{!50, !52}
!50 = distinct !{!50, !51, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!52 = distinct !{!52, !53, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass10ProcessPhiEPNS5_11InstructionEE3$_2FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass10ProcessPhiEPNS5_11InstructionEE3$_2FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!54 = !{!55, !57}
!55 = distinct !{!55, !56, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!57 = distinct !{!57, !58, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14ProcessDefaultEPNS5_11InstructionEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!58 = distinct !{!58, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17ConvertToHalfPass14ProcessDefaultEPNS5_11InstructionEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!59 = distinct !{!59, !20}
