; ModuleID = '../../third_party/libyuv/source/convert_from.cc'
source_filename = "../../third_party/libyuv/source/convert_from.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@cpu_info_ = external local_unnamed_addr global i32, align 4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToI010(i8*, i32, i8*, i32, i8*, i32, i16*, i32, i16*, i32, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %15 = add nsw i32 %12, 1
  %16 = ashr i32 %15, 1
  %17 = icmp ne i8* %2, null
  %18 = icmp ne i8* %4, null
  %19 = and i1 %17, %18
  %20 = icmp ne i16* %8, null
  %21 = and i1 %19, %20
  %22 = icmp ne i16* %10, null
  %23 = and i1 %21, %22
  %24 = xor i1 %23, true
  %25 = icmp slt i32 %12, 1
  %26 = or i1 %25, %24
  %27 = icmp eq i32 %13, 0
  %28 = or i1 %26, %27
  br i1 %28, label %60, label %29

29:                                               ; preds = %14
  %30 = add nsw i32 %13, 1
  %31 = ashr i32 %30, 1
  %32 = icmp slt i32 %13, 0
  br i1 %32, label %33, label %51

33:                                               ; preds = %29
  %34 = sub nsw i32 0, %13
  %35 = sub i32 1, %13
  %36 = ashr i32 %35, 1
  %37 = xor i32 %13, -1
  %38 = mul nsw i32 %37, %1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %0, i64 %39
  %41 = add nsw i32 %36, -1
  %42 = mul nsw i32 %41, %3
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %2, i64 %43
  %45 = mul nsw i32 %41, %5
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %4, i64 %46
  %48 = sub nsw i32 0, %1
  %49 = sub nsw i32 0, %3
  %50 = sub nsw i32 0, %5
  br label %51

51:                                               ; preds = %33, %29
  %52 = phi i32 [ %50, %33 ], [ %5, %29 ]
  %53 = phi i8* [ %47, %33 ], [ %4, %29 ]
  %54 = phi i32 [ %49, %33 ], [ %3, %29 ]
  %55 = phi i8* [ %44, %33 ], [ %2, %29 ]
  %56 = phi i32 [ %48, %33 ], [ %1, %29 ]
  %57 = phi i8* [ %40, %33 ], [ %0, %29 ]
  %58 = phi i32 [ %34, %33 ], [ %13, %29 ]
  %59 = phi i32 [ %36, %33 ], [ %31, %29 ]
  tail call void @Convert8To16Plane(i8* %57, i32 %56, i16* %6, i32 %7, i32 1024, i32 %12, i32 %58) #2
  tail call void @Convert8To16Plane(i8* %55, i32 %54, i16* %8, i32 %9, i32 1024, i32 %16, i32 %59) #2
  tail call void @Convert8To16Plane(i8* %53, i32 %52, i16* %10, i32 %11, i32 1024, i32 %16, i32 %59) #2
  br label %60

60:                                               ; preds = %14, %51
  %61 = phi i32 [ 0, %51 ], [ -1, %14 ]
  ret i32 %61
}

declare void @Convert8To16Plane(i8*, i32, i16*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToI012(i8*, i32, i8*, i32, i8*, i32, i16*, i32, i16*, i32, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %15 = add nsw i32 %12, 1
  %16 = ashr i32 %15, 1
  %17 = icmp ne i8* %2, null
  %18 = icmp ne i8* %4, null
  %19 = and i1 %17, %18
  %20 = icmp ne i16* %8, null
  %21 = and i1 %19, %20
  %22 = icmp ne i16* %10, null
  %23 = and i1 %21, %22
  %24 = xor i1 %23, true
  %25 = icmp slt i32 %12, 1
  %26 = or i1 %25, %24
  %27 = icmp eq i32 %13, 0
  %28 = or i1 %26, %27
  br i1 %28, label %60, label %29

29:                                               ; preds = %14
  %30 = add nsw i32 %13, 1
  %31 = ashr i32 %30, 1
  %32 = icmp slt i32 %13, 0
  br i1 %32, label %33, label %51

33:                                               ; preds = %29
  %34 = sub nsw i32 0, %13
  %35 = sub i32 1, %13
  %36 = ashr i32 %35, 1
  %37 = xor i32 %13, -1
  %38 = mul nsw i32 %37, %1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %0, i64 %39
  %41 = add nsw i32 %36, -1
  %42 = mul nsw i32 %41, %3
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %2, i64 %43
  %45 = mul nsw i32 %41, %5
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %4, i64 %46
  %48 = sub nsw i32 0, %1
  %49 = sub nsw i32 0, %3
  %50 = sub nsw i32 0, %5
  br label %51

51:                                               ; preds = %33, %29
  %52 = phi i32 [ %50, %33 ], [ %5, %29 ]
  %53 = phi i8* [ %47, %33 ], [ %4, %29 ]
  %54 = phi i32 [ %49, %33 ], [ %3, %29 ]
  %55 = phi i8* [ %44, %33 ], [ %2, %29 ]
  %56 = phi i32 [ %48, %33 ], [ %1, %29 ]
  %57 = phi i8* [ %40, %33 ], [ %0, %29 ]
  %58 = phi i32 [ %34, %33 ], [ %13, %29 ]
  %59 = phi i32 [ %36, %33 ], [ %31, %29 ]
  tail call void @Convert8To16Plane(i8* %57, i32 %56, i16* %6, i32 %7, i32 4096, i32 %12, i32 %58) #2
  tail call void @Convert8To16Plane(i8* %55, i32 %54, i16* %8, i32 %9, i32 4096, i32 %16, i32 %59) #2
  tail call void @Convert8To16Plane(i8* %53, i32 %52, i16* %10, i32 %11, i32 4096, i32 %16, i32 %59) #2
  br label %60

60:                                               ; preds = %14, %51
  %61 = phi i32 [ 0, %51 ], [ -1, %14 ]
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToI422(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %15 = icmp slt i32 %12, 0
  %16 = sub nsw i32 0, %12
  %17 = select i1 %15, i32 %16, i32 %12
  %18 = add nuw nsw i32 %17, 1
  %19 = lshr i32 %18, 1
  %20 = icmp slt i32 %13, 0
  %21 = sub nsw i32 0, %13
  %22 = select i1 %20, i32 %21, i32 %13
  %23 = tail call fastcc i32 @_ZN6libyuvL10I420ToI4xxEPKhiS1_iS1_iPhiS2_iS2_iiiii(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, i8* %8, i32 %9, i8* %10, i32 %11, i32 %12, i32 %13, i32 %19, i32 %22)
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN6libyuvL10I420ToI4xxEPKhiS1_iS1_iPhiS2_iS2_iiiii(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32, i32) unnamed_addr #0 {
  %17 = icmp slt i32 %12, 0
  %18 = sub nsw i32 0, %12
  %19 = select i1 %17, i32 %18, i32 %12
  %20 = icmp slt i32 %13, 0
  %21 = sub nsw i32 0, %13
  %22 = select i1 %20, i32 %21, i32 %13
  br i1 %17, label %23, label %27

23:                                               ; preds = %16
  %24 = sub i32 1, %12
  %25 = ashr i32 %24, 1
  %26 = sub nsw i32 0, %25
  br label %30

27:                                               ; preds = %16
  %28 = add nuw nsw i32 %12, 1
  %29 = ashr i32 %28, 1
  br label %30

30:                                               ; preds = %27, %23
  %31 = phi i32 [ %26, %23 ], [ %29, %27 ]
  br i1 %20, label %32, label %36

32:                                               ; preds = %30
  %33 = sub i32 1, %13
  %34 = ashr i32 %33, 1
  %35 = sub nsw i32 0, %34
  br label %39

36:                                               ; preds = %30
  %37 = add nuw nsw i32 %13, 1
  %38 = ashr i32 %37, 1
  br label %39

39:                                               ; preds = %36, %32
  %40 = phi i32 [ %35, %32 ], [ %38, %36 ]
  %41 = icmp eq i32 %12, 0
  %42 = icmp eq i32 %13, 0
  %43 = or i1 %41, %42
  %44 = icmp slt i32 %14, 1
  %45 = or i1 %43, %44
  %46 = icmp slt i32 %15, 1
  %47 = or i1 %45, %46
  br i1 %47, label %52, label %48

48:                                               ; preds = %39
  %49 = icmp eq i8* %6, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %48
  tail call void @ScalePlane(i8* %0, i32 %1, i32 %12, i32 %13, i8* nonnull %6, i32 %7, i32 %19, i32 %22, i32 2) #2
  br label %51

51:                                               ; preds = %48, %50
  tail call void @ScalePlane(i8* %2, i32 %3, i32 %31, i32 %40, i8* %8, i32 %9, i32 %14, i32 %15, i32 2) #2
  tail call void @ScalePlane(i8* %4, i32 %5, i32 %31, i32 %40, i8* %10, i32 %11, i32 %14, i32 %15, i32 2) #2
  br label %52

52:                                               ; preds = %39, %51
  %53 = phi i32 [ 0, %51 ], [ -1, %39 ]
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToI444(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %15 = icmp slt i32 %12, 0
  %16 = sub nsw i32 0, %12
  %17 = select i1 %15, i32 %16, i32 %12
  %18 = icmp slt i32 %13, 0
  %19 = sub nsw i32 0, %13
  %20 = select i1 %18, i32 %19, i32 %13
  %21 = tail call fastcc i32 @_ZN6libyuvL10I420ToI4xxEPKhiS1_iS1_iPhiS2_iS2_iiiii(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, i8* %8, i32 %9, i8* %10, i32 %11, i32 %12, i32 %13, i32 %17, i32 %20)
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I010ToI410(i16*, i32, i16*, i32, i16*, i32, i16*, i32, i16*, i32, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %15 = icmp eq i32 %12, 0
  %16 = icmp eq i32 %13, 0
  %17 = or i1 %15, %16
  br i1 %17, label %70, label %18

18:                                               ; preds = %14
  %19 = icmp eq i16* %6, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %18
  %21 = icmp slt i32 %12, 0
  %22 = sub nsw i32 0, %12
  %23 = select i1 %21, i32 %22, i32 %12
  %24 = icmp slt i32 %13, 0
  %25 = sub nsw i32 0, %13
  %26 = select i1 %24, i32 %25, i32 %13
  tail call void @ScalePlane_12(i16* %0, i32 %1, i32 %12, i32 %13, i16* nonnull %6, i32 %7, i32 %23, i32 %26, i32 2) #2
  br label %27

27:                                               ; preds = %18, %20
  %28 = icmp slt i32 %12, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = sub i32 1, %12
  %31 = ashr i32 %30, 1
  %32 = sub nsw i32 0, %31
  br label %36

33:                                               ; preds = %27
  %34 = add nuw nsw i32 %12, 1
  %35 = ashr i32 %34, 1
  br label %36

36:                                               ; preds = %33, %29
  %37 = phi i32 [ %32, %29 ], [ %35, %33 ]
  %38 = icmp slt i32 %13, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %36
  %40 = sub i32 1, %13
  %41 = ashr i32 %40, 1
  %42 = sub nsw i32 0, %41
  br label %46

43:                                               ; preds = %36
  %44 = add nuw nsw i32 %13, 1
  %45 = ashr i32 %44, 1
  br label %46

46:                                               ; preds = %43, %39
  %47 = phi i32 [ %42, %39 ], [ %45, %43 ]
  %48 = sub nsw i32 0, %12
  %49 = select i1 %28, i32 %48, i32 %12
  %50 = sub nsw i32 0, %13
  %51 = select i1 %38, i32 %50, i32 %13
  tail call void @ScalePlane_12(i16* %2, i32 %3, i32 %37, i32 %47, i16* %8, i32 %9, i32 %49, i32 %51, i32 2) #2
  br i1 %28, label %52, label %56

52:                                               ; preds = %46
  %53 = sub i32 1, %12
  %54 = ashr i32 %53, 1
  %55 = sub nsw i32 0, %54
  br label %59

56:                                               ; preds = %46
  %57 = add nuw nsw i32 %12, 1
  %58 = ashr i32 %57, 1
  br label %59

59:                                               ; preds = %56, %52
  %60 = phi i32 [ %55, %52 ], [ %58, %56 ]
  br i1 %38, label %61, label %65

61:                                               ; preds = %59
  %62 = sub i32 1, %13
  %63 = ashr i32 %62, 1
  %64 = sub nsw i32 0, %63
  br label %68

65:                                               ; preds = %59
  %66 = add nuw nsw i32 %13, 1
  %67 = ashr i32 %66, 1
  br label %68

68:                                               ; preds = %65, %61
  %69 = phi i32 [ %64, %61 ], [ %67, %65 ]
  tail call void @ScalePlane_12(i16* %4, i32 %5, i32 %60, i32 %69, i16* %10, i32 %11, i32 %49, i32 %51, i32 2) #2
  br label %70

70:                                               ; preds = %14, %68
  %71 = phi i32 [ 0, %68 ], [ -1, %14 ]
  ret i32 %71
}

declare void @ScalePlane_12(i16*, i32, i32, i32, i16*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I210ToI410(i16*, i32, i16*, i32, i16*, i32, i16*, i32, i16*, i32, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %15 = icmp eq i32 %12, 0
  %16 = icmp eq i32 %13, 0
  %17 = or i1 %15, %16
  br i1 %17, label %52, label %18

18:                                               ; preds = %14
  %19 = icmp eq i16* %6, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %18
  %21 = icmp slt i32 %12, 0
  %22 = sub nsw i32 0, %12
  %23 = select i1 %21, i32 %22, i32 %12
  %24 = icmp slt i32 %13, 0
  %25 = sub nsw i32 0, %13
  %26 = select i1 %24, i32 %25, i32 %13
  tail call void @ScalePlane_12(i16* %0, i32 %1, i32 %12, i32 %13, i16* nonnull %6, i32 %7, i32 %23, i32 %26, i32 2) #2
  br label %27

27:                                               ; preds = %18, %20
  %28 = icmp slt i32 %12, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = sub i32 1, %12
  %31 = ashr i32 %30, 1
  %32 = sub nsw i32 0, %31
  br label %36

33:                                               ; preds = %27
  %34 = add nuw nsw i32 %12, 1
  %35 = ashr i32 %34, 1
  br label %36

36:                                               ; preds = %33, %29
  %37 = phi i32 [ %32, %29 ], [ %35, %33 ]
  %38 = sub nsw i32 0, %12
  %39 = select i1 %28, i32 %38, i32 %12
  %40 = icmp slt i32 %13, 0
  %41 = sub nsw i32 0, %13
  %42 = select i1 %40, i32 %41, i32 %13
  tail call void @ScalePlane_12(i16* %2, i32 %3, i32 %37, i32 %13, i16* %8, i32 %9, i32 %39, i32 %42, i32 2) #2
  br i1 %28, label %43, label %47

43:                                               ; preds = %36
  %44 = sub i32 1, %12
  %45 = ashr i32 %44, 1
  %46 = sub nsw i32 0, %45
  br label %50

47:                                               ; preds = %36
  %48 = add nuw nsw i32 %12, 1
  %49 = ashr i32 %48, 1
  br label %50

50:                                               ; preds = %47, %43
  %51 = phi i32 [ %46, %43 ], [ %49, %47 ]
  tail call void @ScalePlane_12(i16* %4, i32 %5, i32 %51, i32 %13, i16* %10, i32 %11, i32 %39, i32 %42, i32 2) #2
  br label %52

52:                                               ; preds = %14, %50
  %53 = phi i32 [ 0, %50 ], [ -1, %14 ]
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I422ToI444(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %15 = icmp eq i32 %12, 0
  %16 = icmp eq i32 %13, 0
  %17 = or i1 %15, %16
  br i1 %17, label %52, label %18

18:                                               ; preds = %14
  %19 = icmp eq i8* %6, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %18
  %21 = icmp slt i32 %12, 0
  %22 = sub nsw i32 0, %12
  %23 = select i1 %21, i32 %22, i32 %12
  %24 = icmp slt i32 %13, 0
  %25 = sub nsw i32 0, %13
  %26 = select i1 %24, i32 %25, i32 %13
  tail call void @ScalePlane(i8* %0, i32 %1, i32 %12, i32 %13, i8* nonnull %6, i32 %7, i32 %23, i32 %26, i32 2) #2
  br label %27

27:                                               ; preds = %18, %20
  %28 = icmp slt i32 %12, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = sub i32 1, %12
  %31 = ashr i32 %30, 1
  %32 = sub nsw i32 0, %31
  br label %36

33:                                               ; preds = %27
  %34 = add nuw nsw i32 %12, 1
  %35 = ashr i32 %34, 1
  br label %36

36:                                               ; preds = %33, %29
  %37 = phi i32 [ %32, %29 ], [ %35, %33 ]
  %38 = sub nsw i32 0, %12
  %39 = select i1 %28, i32 %38, i32 %12
  %40 = icmp slt i32 %13, 0
  %41 = sub nsw i32 0, %13
  %42 = select i1 %40, i32 %41, i32 %13
  tail call void @ScalePlane(i8* %2, i32 %3, i32 %37, i32 %13, i8* %8, i32 %9, i32 %39, i32 %42, i32 2) #2
  br i1 %28, label %43, label %47

43:                                               ; preds = %36
  %44 = sub i32 1, %12
  %45 = ashr i32 %44, 1
  %46 = sub nsw i32 0, %45
  br label %50

47:                                               ; preds = %36
  %48 = add nuw nsw i32 %12, 1
  %49 = ashr i32 %48, 1
  br label %50

50:                                               ; preds = %47, %43
  %51 = phi i32 [ %46, %43 ], [ %49, %47 ]
  tail call void @ScalePlane(i8* %4, i32 %5, i32 %51, i32 %13, i8* %10, i32 %11, i32 %39, i32 %42, i32 2) #2
  br label %52

52:                                               ; preds = %14, %50
  %53 = phi i32 [ 0, %50 ], [ -1, %14 ]
  ret i32 %53
}

declare void @ScalePlane(i8*, i32, i32, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I400Copy(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i8* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %27, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %25 = phi i8* [ %21, %16 ], [ %0, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  tail call void @CopyPlane(i8* %25, i32 %24, i8* nonnull %2, i32 %3, i32 %4, i32 %26) #2
  br label %27

27:                                               ; preds = %6, %23
  %28 = phi i32 [ 0, %23 ], [ -1, %6 ]
  ret i32 %28
}

declare void @CopyPlane(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I422ToYUY2(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = icmp ne i8* %0, null
  %12 = icmp ne i8* %2, null
  %13 = and i1 %11, %12
  %14 = icmp ne i8* %4, null
  %15 = and i1 %13, %14
  %16 = icmp ne i8* %6, null
  %17 = and i1 %15, %16
  %18 = xor i1 %17, true
  %19 = icmp slt i32 %8, 1
  %20 = or i1 %19, %18
  %21 = icmp eq i32 %9, 0
  %22 = or i1 %20, %21
  br i1 %22, label %99, label %23

23:                                               ; preds = %10
  %24 = icmp slt i32 %9, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %23
  %26 = sub nsw i32 0, %9
  %27 = xor i32 %9, -1
  %28 = mul nsw i32 %27, %7
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %6, i64 %29
  %31 = sub nsw i32 0, %7
  br label %32

32:                                               ; preds = %25, %23
  %33 = phi i8* [ %30, %25 ], [ %6, %23 ]
  %34 = phi i32 [ %31, %25 ], [ %7, %23 ]
  %35 = phi i32 [ %26, %25 ], [ %9, %23 ]
  %36 = icmp eq i32 %1, %8
  %37 = shl nsw i32 %3, 1
  %38 = icmp eq i32 %37, %8
  %39 = and i1 %36, %38
  %40 = shl nsw i32 %5, 1
  %41 = icmp eq i32 %40, %8
  %42 = and i1 %41, %39
  %43 = shl nsw i32 %8, 1
  %44 = icmp eq i32 %34, %43
  %45 = and i1 %42, %44
  %46 = select i1 %45, i32 %35, i32 1
  %47 = mul nsw i32 %46, %8
  %48 = select i1 %45, i32 1, i32 %35
  %49 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %32
  %52 = tail call i32 @InitCpuFlags() #2
  br label %53

53:                                               ; preds = %32, %51
  %54 = phi i32 [ %52, %51 ], [ %49, %32 ]
  %55 = and i32 %54, 32
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = and i32 %47, 15
  %59 = icmp eq i32 %58, 0
  %60 = select i1 %59, void (i8*, i8*, i8*, i8*, i32)* @I422ToYUY2Row_SSE2, void (i8*, i8*, i8*, i8*, i32)* @I422ToYUY2Row_Any_SSE2
  br label %61

61:                                               ; preds = %53, %57
  %62 = phi void (i8*, i8*, i8*, i8*, i32)* [ %60, %57 ], [ @I422ToYUY2Row_C, %53 ]
  %63 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = tail call i32 @InitCpuFlags() #2
  br label %67

67:                                               ; preds = %61, %65
  %68 = phi i32 [ %66, %65 ], [ %63, %61 ]
  %69 = and i32 %68, 1024
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %67
  %72 = and i32 %47, 31
  %73 = icmp eq i32 %72, 0
  %74 = select i1 %73, void (i8*, i8*, i8*, i8*, i32)* @I422ToYUY2Row_AVX2, void (i8*, i8*, i8*, i8*, i32)* @I422ToYUY2Row_Any_AVX2
  br label %75

75:                                               ; preds = %67, %71
  %76 = phi void (i8*, i8*, i8*, i8*, i32)* [ %74, %71 ], [ %62, %67 ]
  %77 = icmp sgt i32 %48, 0
  br i1 %77, label %78, label %99

78:                                               ; preds = %75
  %79 = sext i32 %1 to i64
  %80 = select i1 %45, i64 0, i64 %79
  %81 = sext i32 %3 to i64
  %82 = select i1 %45, i64 0, i64 %81
  %83 = sext i32 %5 to i64
  %84 = select i1 %45, i64 0, i64 %83
  %85 = sext i32 %34 to i64
  %86 = select i1 %45, i64 0, i64 %85
  br label %87

87:                                               ; preds = %87, %78
  %88 = phi i32 [ 0, %78 ], [ %97, %87 ]
  %89 = phi i8* [ %33, %78 ], [ %96, %87 ]
  %90 = phi i8* [ %4, %78 ], [ %95, %87 ]
  %91 = phi i8* [ %2, %78 ], [ %94, %87 ]
  %92 = phi i8* [ %0, %78 ], [ %93, %87 ]
  tail call void %76(i8* %92, i8* %91, i8* %90, i8* %89, i32 %47) #2
  %93 = getelementptr inbounds i8, i8* %92, i64 %80
  %94 = getelementptr inbounds i8, i8* %91, i64 %82
  %95 = getelementptr inbounds i8, i8* %90, i64 %84
  %96 = getelementptr inbounds i8, i8* %89, i64 %86
  %97 = add nuw nsw i32 %88, 1
  %98 = icmp eq i32 %97, %48
  br i1 %98, label %99, label %87

99:                                               ; preds = %87, %75, %10
  %100 = phi i32 [ -1, %10 ], [ 0, %75 ], [ 0, %87 ]
  ret i32 %100
}

declare void @I422ToYUY2Row_C(i8*, i8*, i8*, i8*, i32) local_unnamed_addr #1

declare void @I422ToYUY2Row_Any_SSE2(i8*, i8*, i8*, i8*, i32) local_unnamed_addr #1

declare void @I422ToYUY2Row_SSE2(i8*, i8*, i8*, i8*, i32) local_unnamed_addr #1

declare void @I422ToYUY2Row_Any_AVX2(i8*, i8*, i8*, i8*, i32) local_unnamed_addr #1

declare void @I422ToYUY2Row_AVX2(i8*, i8*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToYUY2(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = icmp ne i8* %0, null
  %12 = icmp ne i8* %2, null
  %13 = and i1 %11, %12
  %14 = icmp ne i8* %4, null
  %15 = and i1 %13, %14
  %16 = icmp ne i8* %6, null
  %17 = and i1 %15, %16
  %18 = xor i1 %17, true
  %19 = icmp slt i32 %8, 1
  %20 = or i1 %19, %18
  %21 = icmp eq i32 %9, 0
  %22 = or i1 %20, %21
  br i1 %22, label %97, label %23

23:                                               ; preds = %10
  %24 = icmp slt i32 %9, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %23
  %26 = sub nsw i32 0, %9
  %27 = xor i32 %9, -1
  %28 = mul nsw i32 %27, %7
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %6, i64 %29
  %31 = sub nsw i32 0, %7
  br label %32

32:                                               ; preds = %25, %23
  %33 = phi i8* [ %30, %25 ], [ %6, %23 ]
  %34 = phi i32 [ %31, %25 ], [ %7, %23 ]
  %35 = phi i32 [ %26, %25 ], [ %9, %23 ]
  %36 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = tail call i32 @InitCpuFlags() #2
  br label %40

40:                                               ; preds = %32, %38
  %41 = phi i32 [ %39, %38 ], [ %36, %32 ]
  %42 = and i32 %41, 32
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = and i32 %8, 15
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, void (i8*, i8*, i8*, i8*, i32)* @I422ToYUY2Row_SSE2, void (i8*, i8*, i8*, i8*, i32)* @I422ToYUY2Row_Any_SSE2
  br label %48

48:                                               ; preds = %40, %44
  %49 = phi void (i8*, i8*, i8*, i8*, i32)* [ %47, %44 ], [ @I422ToYUY2Row_C, %40 ]
  %50 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = tail call i32 @InitCpuFlags() #2
  br label %54

54:                                               ; preds = %48, %52
  %55 = phi i32 [ %53, %52 ], [ %50, %48 ]
  %56 = and i32 %55, 1024
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = and i32 %8, 31
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %60, void (i8*, i8*, i8*, i8*, i32)* @I422ToYUY2Row_AVX2, void (i8*, i8*, i8*, i8*, i32)* @I422ToYUY2Row_Any_AVX2
  br label %62

62:                                               ; preds = %54, %58
  %63 = phi void (i8*, i8*, i8*, i8*, i32)* [ %61, %58 ], [ %49, %54 ]
  %64 = add nsw i32 %35, -1
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %92

66:                                               ; preds = %62
  %67 = sext i32 %1 to i64
  %68 = sext i32 %34 to i64
  %69 = shl nsw i32 %1, 1
  %70 = sext i32 %69 to i64
  %71 = sext i32 %3 to i64
  %72 = sext i32 %5 to i64
  %73 = shl nsw i32 %34, 1
  %74 = sext i32 %73 to i64
  br label %75

75:                                               ; preds = %66, %75
  %76 = phi i32 [ 0, %66 ], [ %87, %75 ]
  %77 = phi i8* [ %33, %66 ], [ %86, %75 ]
  %78 = phi i8* [ %0, %66 ], [ %83, %75 ]
  %79 = phi i8* [ %4, %66 ], [ %85, %75 ]
  %80 = phi i8* [ %2, %66 ], [ %84, %75 ]
  tail call void %63(i8* %78, i8* %80, i8* %79, i8* %77, i32 %8) #2
  %81 = getelementptr inbounds i8, i8* %78, i64 %67
  %82 = getelementptr inbounds i8, i8* %77, i64 %68
  tail call void %63(i8* %81, i8* %80, i8* %79, i8* %82, i32 %8) #2
  %83 = getelementptr inbounds i8, i8* %78, i64 %70
  %84 = getelementptr inbounds i8, i8* %80, i64 %71
  %85 = getelementptr inbounds i8, i8* %79, i64 %72
  %86 = getelementptr inbounds i8, i8* %77, i64 %74
  %87 = add nuw nsw i32 %76, 2
  %88 = icmp slt i32 %87, %64
  br i1 %88, label %75, label %89

89:                                               ; preds = %75
  %90 = and i32 %35, 1
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %97, label %92

92:                                               ; preds = %62, %89
  %93 = phi i8* [ %86, %89 ], [ %33, %62 ]
  %94 = phi i8* [ %83, %89 ], [ %0, %62 ]
  %95 = phi i8* [ %85, %89 ], [ %4, %62 ]
  %96 = phi i8* [ %84, %89 ], [ %2, %62 ]
  tail call void %63(i8* %94, i8* %96, i8* %95, i8* %93, i32 %8) #2
  br label %97

97:                                               ; preds = %92, %89, %10
  %98 = phi i32 [ -1, %10 ], [ 0, %89 ], [ 0, %92 ]
  ret i32 %98
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I422ToUYVY(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = icmp ne i8* %0, null
  %12 = icmp ne i8* %2, null
  %13 = and i1 %11, %12
  %14 = icmp ne i8* %4, null
  %15 = and i1 %13, %14
  %16 = icmp ne i8* %6, null
  %17 = and i1 %15, %16
  %18 = xor i1 %17, true
  %19 = icmp slt i32 %8, 1
  %20 = or i1 %19, %18
  %21 = icmp eq i32 %9, 0
  %22 = or i1 %20, %21
  br i1 %22, label %99, label %23

23:                                               ; preds = %10
  %24 = icmp slt i32 %9, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %23
  %26 = sub nsw i32 0, %9
  %27 = xor i32 %9, -1
  %28 = mul nsw i32 %27, %7
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %6, i64 %29
  %31 = sub nsw i32 0, %7
  br label %32

32:                                               ; preds = %25, %23
  %33 = phi i8* [ %30, %25 ], [ %6, %23 ]
  %34 = phi i32 [ %31, %25 ], [ %7, %23 ]
  %35 = phi i32 [ %26, %25 ], [ %9, %23 ]
  %36 = icmp eq i32 %1, %8
  %37 = shl nsw i32 %3, 1
  %38 = icmp eq i32 %37, %8
  %39 = and i1 %36, %38
  %40 = shl nsw i32 %5, 1
  %41 = icmp eq i32 %40, %8
  %42 = and i1 %41, %39
  %43 = shl nsw i32 %8, 1
  %44 = icmp eq i32 %34, %43
  %45 = and i1 %42, %44
  %46 = select i1 %45, i32 %35, i32 1
  %47 = mul nsw i32 %46, %8
  %48 = select i1 %45, i32 1, i32 %35
  %49 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %32
  %52 = tail call i32 @InitCpuFlags() #2
  br label %53

53:                                               ; preds = %32, %51
  %54 = phi i32 [ %52, %51 ], [ %49, %32 ]
  %55 = and i32 %54, 32
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = and i32 %47, 15
  %59 = icmp eq i32 %58, 0
  %60 = select i1 %59, void (i8*, i8*, i8*, i8*, i32)* @I422ToUYVYRow_SSE2, void (i8*, i8*, i8*, i8*, i32)* @I422ToUYVYRow_Any_SSE2
  br label %61

61:                                               ; preds = %53, %57
  %62 = phi void (i8*, i8*, i8*, i8*, i32)* [ %60, %57 ], [ @I422ToUYVYRow_C, %53 ]
  %63 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = tail call i32 @InitCpuFlags() #2
  br label %67

67:                                               ; preds = %61, %65
  %68 = phi i32 [ %66, %65 ], [ %63, %61 ]
  %69 = and i32 %68, 1024
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %67
  %72 = and i32 %47, 31
  %73 = icmp eq i32 %72, 0
  %74 = select i1 %73, void (i8*, i8*, i8*, i8*, i32)* @I422ToUYVYRow_AVX2, void (i8*, i8*, i8*, i8*, i32)* @I422ToUYVYRow_Any_AVX2
  br label %75

75:                                               ; preds = %67, %71
  %76 = phi void (i8*, i8*, i8*, i8*, i32)* [ %74, %71 ], [ %62, %67 ]
  %77 = icmp sgt i32 %48, 0
  br i1 %77, label %78, label %99

78:                                               ; preds = %75
  %79 = sext i32 %1 to i64
  %80 = select i1 %45, i64 0, i64 %79
  %81 = sext i32 %3 to i64
  %82 = select i1 %45, i64 0, i64 %81
  %83 = sext i32 %5 to i64
  %84 = select i1 %45, i64 0, i64 %83
  %85 = sext i32 %34 to i64
  %86 = select i1 %45, i64 0, i64 %85
  br label %87

87:                                               ; preds = %87, %78
  %88 = phi i32 [ 0, %78 ], [ %97, %87 ]
  %89 = phi i8* [ %33, %78 ], [ %96, %87 ]
  %90 = phi i8* [ %4, %78 ], [ %95, %87 ]
  %91 = phi i8* [ %2, %78 ], [ %94, %87 ]
  %92 = phi i8* [ %0, %78 ], [ %93, %87 ]
  tail call void %76(i8* %92, i8* %91, i8* %90, i8* %89, i32 %47) #2
  %93 = getelementptr inbounds i8, i8* %92, i64 %80
  %94 = getelementptr inbounds i8, i8* %91, i64 %82
  %95 = getelementptr inbounds i8, i8* %90, i64 %84
  %96 = getelementptr inbounds i8, i8* %89, i64 %86
  %97 = add nuw nsw i32 %88, 1
  %98 = icmp eq i32 %97, %48
  br i1 %98, label %99, label %87

99:                                               ; preds = %87, %75, %10
  %100 = phi i32 [ -1, %10 ], [ 0, %75 ], [ 0, %87 ]
  ret i32 %100
}

declare void @I422ToUYVYRow_C(i8*, i8*, i8*, i8*, i32) local_unnamed_addr #1

declare void @I422ToUYVYRow_Any_SSE2(i8*, i8*, i8*, i8*, i32) local_unnamed_addr #1

declare void @I422ToUYVYRow_SSE2(i8*, i8*, i8*, i8*, i32) local_unnamed_addr #1

declare void @I422ToUYVYRow_Any_AVX2(i8*, i8*, i8*, i8*, i32) local_unnamed_addr #1

declare void @I422ToUYVYRow_AVX2(i8*, i8*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToUYVY(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = icmp ne i8* %0, null
  %12 = icmp ne i8* %2, null
  %13 = and i1 %11, %12
  %14 = icmp ne i8* %4, null
  %15 = and i1 %13, %14
  %16 = icmp ne i8* %6, null
  %17 = and i1 %15, %16
  %18 = xor i1 %17, true
  %19 = icmp slt i32 %8, 1
  %20 = or i1 %19, %18
  %21 = icmp eq i32 %9, 0
  %22 = or i1 %20, %21
  br i1 %22, label %97, label %23

23:                                               ; preds = %10
  %24 = icmp slt i32 %9, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %23
  %26 = sub nsw i32 0, %9
  %27 = xor i32 %9, -1
  %28 = mul nsw i32 %27, %7
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %6, i64 %29
  %31 = sub nsw i32 0, %7
  br label %32

32:                                               ; preds = %25, %23
  %33 = phi i8* [ %30, %25 ], [ %6, %23 ]
  %34 = phi i32 [ %31, %25 ], [ %7, %23 ]
  %35 = phi i32 [ %26, %25 ], [ %9, %23 ]
  %36 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = tail call i32 @InitCpuFlags() #2
  br label %40

40:                                               ; preds = %32, %38
  %41 = phi i32 [ %39, %38 ], [ %36, %32 ]
  %42 = and i32 %41, 32
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = and i32 %8, 15
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, void (i8*, i8*, i8*, i8*, i32)* @I422ToUYVYRow_SSE2, void (i8*, i8*, i8*, i8*, i32)* @I422ToUYVYRow_Any_SSE2
  br label %48

48:                                               ; preds = %40, %44
  %49 = phi void (i8*, i8*, i8*, i8*, i32)* [ %47, %44 ], [ @I422ToUYVYRow_C, %40 ]
  %50 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = tail call i32 @InitCpuFlags() #2
  br label %54

54:                                               ; preds = %48, %52
  %55 = phi i32 [ %53, %52 ], [ %50, %48 ]
  %56 = and i32 %55, 1024
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = and i32 %8, 31
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %60, void (i8*, i8*, i8*, i8*, i32)* @I422ToUYVYRow_AVX2, void (i8*, i8*, i8*, i8*, i32)* @I422ToUYVYRow_Any_AVX2
  br label %62

62:                                               ; preds = %54, %58
  %63 = phi void (i8*, i8*, i8*, i8*, i32)* [ %61, %58 ], [ %49, %54 ]
  %64 = add nsw i32 %35, -1
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %92

66:                                               ; preds = %62
  %67 = sext i32 %1 to i64
  %68 = sext i32 %34 to i64
  %69 = shl nsw i32 %1, 1
  %70 = sext i32 %69 to i64
  %71 = sext i32 %3 to i64
  %72 = sext i32 %5 to i64
  %73 = shl nsw i32 %34, 1
  %74 = sext i32 %73 to i64
  br label %75

75:                                               ; preds = %66, %75
  %76 = phi i32 [ 0, %66 ], [ %87, %75 ]
  %77 = phi i8* [ %33, %66 ], [ %86, %75 ]
  %78 = phi i8* [ %0, %66 ], [ %83, %75 ]
  %79 = phi i8* [ %4, %66 ], [ %85, %75 ]
  %80 = phi i8* [ %2, %66 ], [ %84, %75 ]
  tail call void %63(i8* %78, i8* %80, i8* %79, i8* %77, i32 %8) #2
  %81 = getelementptr inbounds i8, i8* %78, i64 %67
  %82 = getelementptr inbounds i8, i8* %77, i64 %68
  tail call void %63(i8* %81, i8* %80, i8* %79, i8* %82, i32 %8) #2
  %83 = getelementptr inbounds i8, i8* %78, i64 %70
  %84 = getelementptr inbounds i8, i8* %80, i64 %71
  %85 = getelementptr inbounds i8, i8* %79, i64 %72
  %86 = getelementptr inbounds i8, i8* %77, i64 %74
  %87 = add nuw nsw i32 %76, 2
  %88 = icmp slt i32 %87, %64
  br i1 %88, label %75, label %89

89:                                               ; preds = %75
  %90 = and i32 %35, 1
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %97, label %92

92:                                               ; preds = %62, %89
  %93 = phi i8* [ %86, %89 ], [ %33, %62 ]
  %94 = phi i8* [ %83, %89 ], [ %0, %62 ]
  %95 = phi i8* [ %85, %89 ], [ %4, %62 ]
  %96 = phi i8* [ %84, %89 ], [ %2, %62 ]
  tail call void %63(i8* %94, i8* %96, i8* %95, i8* %93, i32 %8) #2
  br label %97

97:                                               ; preds = %92, %89, %10
  %98 = phi i32 [ -1, %10 ], [ 0, %89 ], [ 0, %92 ]
  ret i32 %98
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToNV12(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %13 = add nsw i32 %10, 1
  %14 = sdiv i32 %13, 2
  %15 = icmp ne i8* %0, null
  %16 = icmp ne i8* %2, null
  %17 = and i1 %15, %16
  %18 = icmp ne i8* %4, null
  %19 = and i1 %17, %18
  %20 = icmp ne i8* %6, null
  %21 = and i1 %19, %20
  %22 = icmp ne i8* %8, null
  %23 = and i1 %21, %22
  %24 = xor i1 %23, true
  %25 = icmp slt i32 %10, 1
  %26 = or i1 %25, %24
  %27 = icmp eq i32 %11, 0
  %28 = or i1 %26, %27
  br i1 %28, label %62, label %29

29:                                               ; preds = %12
  %30 = add nsw i32 %11, 1
  %31 = sdiv i32 %30, 2
  %32 = icmp slt i32 %11, 0
  br i1 %32, label %33, label %51

33:                                               ; preds = %29
  %34 = sub nsw i32 0, %11
  %35 = sub i32 1, %11
  %36 = ashr i32 %35, 1
  %37 = xor i32 %11, -1
  %38 = mul nsw i32 %37, %1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %0, i64 %39
  %41 = add nsw i32 %36, -1
  %42 = mul nsw i32 %41, %3
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %2, i64 %43
  %45 = mul nsw i32 %41, %5
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %4, i64 %46
  %48 = sub nsw i32 0, %1
  %49 = sub nsw i32 0, %3
  %50 = sub nsw i32 0, %5
  br label %51

51:                                               ; preds = %33, %29
  %52 = phi i8* [ %47, %33 ], [ %4, %29 ]
  %53 = phi i32 [ %50, %33 ], [ %5, %29 ]
  %54 = phi i32 [ %49, %33 ], [ %3, %29 ]
  %55 = phi i8* [ %44, %33 ], [ %2, %29 ]
  %56 = phi i32 [ %48, %33 ], [ %1, %29 ]
  %57 = phi i8* [ %40, %33 ], [ %0, %29 ]
  %58 = phi i32 [ %34, %33 ], [ %11, %29 ]
  %59 = phi i32 [ %36, %33 ], [ %31, %29 ]
  br i1 %20, label %60, label %61

60:                                               ; preds = %51
  tail call void @CopyPlane(i8* %57, i32 %56, i8* nonnull %6, i32 %7, i32 %10, i32 %58) #2
  br label %61

61:                                               ; preds = %60, %51
  tail call void @MergeUVPlane(i8* %55, i32 %54, i8* %52, i32 %53, i8* %8, i32 %9, i32 %14, i32 %59) #2
  br label %62

62:                                               ; preds = %12, %61
  %63 = phi i32 [ 0, %61 ], [ -1, %12 ]
  ret i32 %63
}

declare void @MergeUVPlane(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToNV21(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %13 = add nsw i32 %10, 1
  %14 = sdiv i32 %13, 2
  %15 = icmp ne i8* %0, null
  %16 = icmp ne i8* %4, null
  %17 = and i1 %15, %16
  %18 = icmp ne i8* %2, null
  %19 = and i1 %18, %17
  %20 = icmp ne i8* %6, null
  %21 = and i1 %19, %20
  %22 = icmp ne i8* %8, null
  %23 = and i1 %21, %22
  %24 = xor i1 %23, true
  %25 = icmp slt i32 %10, 1
  %26 = or i1 %25, %24
  %27 = icmp eq i32 %11, 0
  %28 = or i1 %26, %27
  br i1 %28, label %62, label %29

29:                                               ; preds = %12
  %30 = add nsw i32 %11, 1
  %31 = sdiv i32 %30, 2
  %32 = icmp slt i32 %11, 0
  br i1 %32, label %33, label %51

33:                                               ; preds = %29
  %34 = sub nsw i32 0, %11
  %35 = sub i32 1, %11
  %36 = ashr i32 %35, 1
  %37 = xor i32 %11, -1
  %38 = mul nsw i32 %37, %1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %0, i64 %39
  %41 = add nsw i32 %36, -1
  %42 = mul nsw i32 %41, %5
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %4, i64 %43
  %45 = mul nsw i32 %41, %3
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = sub nsw i32 0, %1
  %49 = sub nsw i32 0, %5
  %50 = sub nsw i32 0, %3
  br label %51

51:                                               ; preds = %33, %29
  %52 = phi i8* [ %47, %33 ], [ %2, %29 ]
  %53 = phi i32 [ %50, %33 ], [ %3, %29 ]
  %54 = phi i32 [ %49, %33 ], [ %5, %29 ]
  %55 = phi i8* [ %44, %33 ], [ %4, %29 ]
  %56 = phi i32 [ %48, %33 ], [ %1, %29 ]
  %57 = phi i8* [ %40, %33 ], [ %0, %29 ]
  %58 = phi i32 [ %34, %33 ], [ %11, %29 ]
  %59 = phi i32 [ %36, %33 ], [ %31, %29 ]
  br i1 %20, label %60, label %61

60:                                               ; preds = %51
  tail call void @CopyPlane(i8* %57, i32 %56, i8* nonnull %6, i32 %7, i32 %10, i32 %58) #2
  br label %61

61:                                               ; preds = %60, %51
  tail call void @MergeUVPlane(i8* %55, i32 %54, i8* %52, i32 %53, i8* %8, i32 %9, i32 %14, i32 %59) #2
  br label %62

62:                                               ; preds = %12, %61
  %63 = phi i32 [ 0, %61 ], [ -1, %12 ]
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ConvertFromI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %12 = tail call i32 @CanonicalFourCC(i32 %10) #2
  %13 = icmp ne i8* %0, null
  %14 = icmp ne i8* %2, null
  %15 = and i1 %13, %14
  %16 = icmp ne i8* %4, null
  %17 = and i1 %15, %16
  %18 = icmp ne i8* %6, null
  %19 = and i1 %17, %18
  %20 = xor i1 %19, true
  %21 = icmp slt i32 %8, 1
  %22 = or i1 %21, %20
  %23 = icmp eq i32 %9, 0
  %24 = or i1 %22, %23
  br i1 %24, label %241, label %25

25:                                               ; preds = %11
  switch i32 %12, label %241 [
    i32 844715353, label %26
    i32 1498831189, label %31
    i32 1346520914, label %36
    i32 1329743698, label %41
    i32 875836498, label %46
    i32 1195521074, label %51
    i32 544694642, label %56
    i32 1111970369, label %61
    i32 1095911234, label %66
    i32 1380401729, label %71
    i32 1094862674, label %76
    i32 808669761, label %81
    i32 808465481, label %86
    i32 842094158, label %105
    i32 825382478, label %146
    i32 808596553, label %190
    i32 842094169, label %190
    i32 842150985, label %207
    i32 909203033, label %207
    i32 875836489, label %227
    i32 875714137, label %227
  ]

26:                                               ; preds = %25
  %27 = icmp eq i32 %7, 0
  %28 = shl nsw i32 %8, 1
  %29 = select i1 %27, i32 %28, i32 %7
  %30 = tail call i32 @I420ToYUY2(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %29, i32 %8, i32 %9)
  br label %241

31:                                               ; preds = %25
  %32 = icmp eq i32 %7, 0
  %33 = shl nsw i32 %8, 1
  %34 = select i1 %32, i32 %33, i32 %7
  %35 = tail call i32 @I420ToUYVY(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %34, i32 %8, i32 %9)
  br label %241

36:                                               ; preds = %25
  %37 = icmp eq i32 %7, 0
  %38 = shl nsw i32 %8, 1
  %39 = select i1 %37, i32 %38, i32 %7
  %40 = tail call i32 @I420ToRGB565(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %39, i32 %8, i32 %9) #2
  br label %241

41:                                               ; preds = %25
  %42 = icmp eq i32 %7, 0
  %43 = shl nsw i32 %8, 1
  %44 = select i1 %42, i32 %43, i32 %7
  %45 = tail call i32 @I420ToARGB1555(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %44, i32 %8, i32 %9) #2
  br label %241

46:                                               ; preds = %25
  %47 = icmp eq i32 %7, 0
  %48 = shl nsw i32 %8, 1
  %49 = select i1 %47, i32 %48, i32 %7
  %50 = tail call i32 @I420ToARGB4444(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %49, i32 %8, i32 %9) #2
  br label %241

51:                                               ; preds = %25
  %52 = icmp eq i32 %7, 0
  %53 = mul nsw i32 %8, 3
  %54 = select i1 %52, i32 %53, i32 %7
  %55 = tail call i32 @I420ToRGB24(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %54, i32 %8, i32 %9) #2
  br label %241

56:                                               ; preds = %25
  %57 = icmp eq i32 %7, 0
  %58 = mul nsw i32 %8, 3
  %59 = select i1 %57, i32 %58, i32 %7
  %60 = tail call i32 @I420ToRAW(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %59, i32 %8, i32 %9) #2
  br label %241

61:                                               ; preds = %25
  %62 = icmp eq i32 %7, 0
  %63 = shl nsw i32 %8, 2
  %64 = select i1 %62, i32 %63, i32 %7
  %65 = tail call i32 @I420ToARGB(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %64, i32 %8, i32 %9) #2
  br label %241

66:                                               ; preds = %25
  %67 = icmp eq i32 %7, 0
  %68 = shl nsw i32 %8, 2
  %69 = select i1 %67, i32 %68, i32 %7
  %70 = tail call i32 @I420ToBGRA(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %69, i32 %8, i32 %9) #2
  br label %241

71:                                               ; preds = %25
  %72 = icmp eq i32 %7, 0
  %73 = shl nsw i32 %8, 2
  %74 = select i1 %72, i32 %73, i32 %7
  %75 = tail call i32 @I420ToABGR(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %74, i32 %8, i32 %9) #2
  br label %241

76:                                               ; preds = %25
  %77 = icmp eq i32 %7, 0
  %78 = shl nsw i32 %8, 2
  %79 = select i1 %77, i32 %78, i32 %7
  %80 = tail call i32 @I420ToRGBA(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %79, i32 %8, i32 %9) #2
  br label %241

81:                                               ; preds = %25
  %82 = icmp eq i32 %7, 0
  %83 = shl nsw i32 %8, 2
  %84 = select i1 %82, i32 %83, i32 %7
  %85 = tail call i32 @I420ToAR30(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %84, i32 %8, i32 %9) #2
  br label %241

86:                                               ; preds = %25
  %87 = icmp eq i32 %7, 0
  %88 = select i1 %87, i32 %8, i32 %7
  %89 = icmp eq i8* %0, null
  %90 = icmp eq i8* %6, null
  %91 = or i1 %89, %90
  br i1 %91, label %241, label %92

92:                                               ; preds = %86
  %93 = icmp slt i32 %9, 0
  br i1 %93, label %94, label %101

94:                                               ; preds = %92
  %95 = sub nsw i32 0, %9
  %96 = xor i32 %9, -1
  %97 = mul nsw i32 %96, %1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %0, i64 %98
  %100 = sub nsw i32 0, %1
  br label %101

101:                                              ; preds = %94, %92
  %102 = phi i32 [ %100, %94 ], [ %1, %92 ]
  %103 = phi i8* [ %99, %94 ], [ %0, %92 ]
  %104 = phi i32 [ %95, %94 ], [ %9, %92 ]
  tail call void @CopyPlane(i8* %103, i32 %102, i8* nonnull %6, i32 %88, i32 %8, i32 %104) #2
  br label %241

105:                                              ; preds = %25
  %106 = mul nsw i32 %9, %8
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i8, i8* %6, i64 %107
  %109 = icmp eq i32 %7, 0
  %110 = select i1 %109, i32 %8, i32 %7
  %111 = add nuw nsw i32 %8, 1
  %112 = sdiv i32 %111, 2
  %113 = icmp ne i8* %108, null
  %114 = and i1 %19, %113
  br i1 %114, label %115, label %241

115:                                              ; preds = %105
  %116 = add nsw i32 %9, 1
  %117 = sdiv i32 %116, 2
  %118 = icmp slt i32 %9, 0
  br i1 %118, label %119, label %137

119:                                              ; preds = %115
  %120 = sub nsw i32 0, %9
  %121 = sub i32 1, %9
  %122 = ashr i32 %121, 1
  %123 = xor i32 %9, -1
  %124 = mul nsw i32 %123, %1
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %0, i64 %125
  %127 = add nsw i32 %122, -1
  %128 = mul nsw i32 %127, %3
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* %2, i64 %129
  %131 = mul nsw i32 %127, %5
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %4, i64 %132
  %134 = sub nsw i32 0, %1
  %135 = sub nsw i32 0, %3
  %136 = sub nsw i32 0, %5
  br label %137

137:                                              ; preds = %119, %115
  %138 = phi i8* [ %133, %119 ], [ %4, %115 ]
  %139 = phi i32 [ %136, %119 ], [ %5, %115 ]
  %140 = phi i32 [ %135, %119 ], [ %3, %115 ]
  %141 = phi i8* [ %130, %119 ], [ %2, %115 ]
  %142 = phi i32 [ %134, %119 ], [ %1, %115 ]
  %143 = phi i8* [ %126, %119 ], [ %0, %115 ]
  %144 = phi i32 [ %120, %119 ], [ %9, %115 ]
  %145 = phi i32 [ %122, %119 ], [ %117, %115 ]
  tail call void @CopyPlane(i8* %143, i32 %142, i8* nonnull %6, i32 %110, i32 %8, i32 %144) #2
  tail call void @MergeUVPlane(i8* %141, i32 %140, i8* %138, i32 %139, i8* nonnull %108, i32 %110, i32 %112, i32 %145) #2
  br label %241

146:                                              ; preds = %25
  %147 = mul nsw i32 %9, %8
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* %6, i64 %148
  %150 = icmp eq i32 %7, 0
  %151 = select i1 %150, i32 %8, i32 %7
  %152 = add nuw nsw i32 %8, 1
  %153 = sdiv i32 %152, 2
  %154 = and i1 %13, %16
  %155 = and i1 %14, %154
  %156 = and i1 %155, %18
  %157 = icmp ne i8* %149, null
  %158 = and i1 %156, %157
  br i1 %158, label %159, label %241

159:                                              ; preds = %146
  %160 = add nsw i32 %9, 1
  %161 = sdiv i32 %160, 2
  %162 = icmp slt i32 %9, 0
  br i1 %162, label %163, label %181

163:                                              ; preds = %159
  %164 = sub nsw i32 0, %9
  %165 = sub i32 1, %9
  %166 = ashr i32 %165, 1
  %167 = xor i32 %9, -1
  %168 = mul nsw i32 %167, %1
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i8, i8* %0, i64 %169
  %171 = add nsw i32 %166, -1
  %172 = mul nsw i32 %171, %5
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i8, i8* %4, i64 %173
  %175 = mul nsw i32 %171, %3
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i8, i8* %2, i64 %176
  %178 = sub nsw i32 0, %1
  %179 = sub nsw i32 0, %5
  %180 = sub nsw i32 0, %3
  br label %181

181:                                              ; preds = %163, %159
  %182 = phi i8* [ %177, %163 ], [ %2, %159 ]
  %183 = phi i32 [ %180, %163 ], [ %3, %159 ]
  %184 = phi i32 [ %179, %163 ], [ %5, %159 ]
  %185 = phi i8* [ %174, %163 ], [ %4, %159 ]
  %186 = phi i32 [ %178, %163 ], [ %1, %159 ]
  %187 = phi i8* [ %170, %163 ], [ %0, %159 ]
  %188 = phi i32 [ %164, %163 ], [ %9, %159 ]
  %189 = phi i32 [ %166, %163 ], [ %161, %159 ]
  tail call void @CopyPlane(i8* %187, i32 %186, i8* nonnull %6, i32 %151, i32 %8, i32 %188) #2
  tail call void @MergeUVPlane(i8* %185, i32 %184, i8* %182, i32 %183, i8* nonnull %149, i32 %151, i32 %153, i32 %189) #2
  br label %241

190:                                              ; preds = %25, %25
  %191 = icmp eq i32 %7, 0
  %192 = select i1 %191, i32 %8, i32 %7
  %193 = add nsw i32 %192, 1
  %194 = sdiv i32 %193, 2
  %195 = add nsw i32 %9, 1
  %196 = sdiv i32 %195, 2
  %197 = icmp eq i32 %12, 842094169
  %198 = mul nsw i32 %192, %9
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i8, i8* %6, i64 %199
  %201 = mul nsw i32 %194, %196
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds i8, i8* %200, i64 %202
  %204 = select i1 %197, i8* %203, i8* %200
  %205 = select i1 %197, i8* %200, i8* %203
  %206 = tail call i32 @I420Copy(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %192, i8* %204, i32 %194, i8* %205, i32 %194, i32 %8, i32 %9) #2
  br label %241

207:                                              ; preds = %25, %25
  %208 = icmp eq i32 %7, 0
  %209 = select i1 %208, i32 %8, i32 %7
  %210 = add nsw i32 %209, 1
  %211 = sdiv i32 %210, 2
  %212 = icmp eq i32 %12, 909203033
  %213 = mul nsw i32 %209, %9
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i8, i8* %6, i64 %214
  %216 = mul nsw i32 %211, %9
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds i8, i8* %215, i64 %217
  %219 = select i1 %212, i8* %218, i8* %215
  %220 = select i1 %212, i8* %215, i8* %218
  %221 = add nuw nsw i32 %8, 1
  %222 = lshr i32 %221, 1
  %223 = icmp slt i32 %9, 0
  %224 = sub nsw i32 0, %9
  %225 = select i1 %223, i32 %224, i32 %9
  %226 = tail call fastcc i32 @_ZN6libyuvL10I420ToI4xxEPKhiS1_iS1_iPhiS2_iS2_iiiii(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %209, i8* %219, i32 %211, i8* %220, i32 %211, i32 %8, i32 %9, i32 %222, i32 %225) #2
  br label %241

227:                                              ; preds = %25, %25
  %228 = icmp eq i32 %7, 0
  %229 = select i1 %228, i32 %8, i32 %7
  %230 = icmp eq i32 %12, 875714137
  %231 = mul nsw i32 %229, %9
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds i8, i8* %6, i64 %232
  %234 = getelementptr inbounds i8, i8* %233, i64 %232
  %235 = select i1 %230, i8* %234, i8* %233
  %236 = select i1 %230, i8* %233, i8* %234
  %237 = icmp slt i32 %9, 0
  %238 = sub nsw i32 0, %9
  %239 = select i1 %237, i32 %238, i32 %9
  %240 = tail call fastcc i32 @_ZN6libyuvL10I420ToI4xxEPKhiS1_iS1_iPhiS2_iS2_iiiii(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %229, i8* %235, i32 %229, i8* %236, i32 %229, i32 %8, i32 %9, i32 %8, i32 %239) #2
  br label %241

241:                                              ; preds = %105, %146, %181, %137, %101, %86, %26, %31, %36, %41, %46, %51, %56, %61, %66, %71, %76, %81, %190, %207, %227, %25, %11
  %242 = phi i32 [ -1, %11 ], [ -1, %25 ], [ %240, %227 ], [ %226, %207 ], [ %206, %190 ], [ %85, %81 ], [ %80, %76 ], [ %75, %71 ], [ %70, %66 ], [ %65, %61 ], [ %60, %56 ], [ %55, %51 ], [ %50, %46 ], [ %45, %41 ], [ %40, %36 ], [ %35, %31 ], [ %30, %26 ], [ 0, %101 ], [ -1, %86 ], [ 0, %137 ], [ -1, %105 ], [ 0, %181 ], [ -1, %146 ]
  ret i32 %242
}

declare i32 @CanonicalFourCC(i32) local_unnamed_addr #1

declare i32 @I420ToRGB565(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @I420ToARGB1555(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @I420ToARGB4444(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @I420ToRGB24(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @I420ToRAW(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @I420ToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @I420ToBGRA(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @I420ToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @I420ToRGBA(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @I420ToAR30(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @I420Copy(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @InitCpuFlags() local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
