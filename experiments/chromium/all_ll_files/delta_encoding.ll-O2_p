; ModuleID = '../../third_party/webrtc/logging/rtc_event_log/encoder/delta_encoding.cc'
source_filename = "../../third_party/webrtc/logging/rtc_event_log/encoder/delta_encoding.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.3 }
%union.anon.3 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.absl::optional"*, %"class.absl::optional"*, %"class.std::__1::__compressed_pair" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.absl::optional"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.rtc::BitBufferWriter" = type { %"class.rtc::BitBuffer", i8* }
%"class.rtc::BitBuffer" = type { i8*, i64, i64, i64 }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::vector.27" = type { i64*, i64, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [73 x i8] c"../../third_party/webrtc/logging/rtc_event_log/encoder/delta_encoding.cc\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"Could not decode delta-encoded stream.\00", align 1
@_ZN6webrtc12_GLOBAL__N_128g_force_unsigned_for_testingE = internal unnamed_addr global i8 0, align 1
@_ZN6webrtc12_GLOBAL__N_126g_force_signed_for_testingE = internal unnamed_addr global i8 0, align 1
@_ZN6webrtc21kMaxVarIntLengthBytesE = external local_unnamed_addr constant i64, align 8
@.str.4 = private unnamed_addr constant [28 x i8] c"Unrecognized encoding type.\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"Corrupt log; illegal encoding parameters.\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"Failed to read existence-indicating bit.\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"Failed to read first value.\00", align 1
@.str.8 = private unnamed_addr constant [37 x i8] c"Failed to read higher half of delta.\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"Failed to read lower half of delta.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12EncodeDeltasEN4absl8optionalImEERKNSt3__16vectorIS2_NS3_9allocatorIS2_EEEE(%"class.std::__1::basic_string"* noalias nocapture sret, i8, i64, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8, !noalias !2
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %9 = load %"class.absl::optional"*, %"class.absl::optional"** %8, align 8, !noalias !2
  %10 = icmp eq %"class.absl::optional"* %7, %9
  %11 = ptrtoint %"class.absl::optional"* %9 to i64
  %12 = ptrtoint %"class.absl::optional"* %7 to i64
  br i1 %10, label %34, label %13

13:                                               ; preds = %4
  %14 = icmp ne i8 %1, 0
  %15 = icmp eq i8 %1, 0
  br label %16

16:                                               ; preds = %31, %13
  %17 = phi %"class.absl::optional"* [ %7, %13 ], [ %32, %31 ]
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !noalias !2
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = load i64, i64* %20, align 8, !noalias !2
  %22 = icmp ne i8 %19, 0
  %23 = xor i1 %14, %22
  %24 = xor i1 %22, true
  %25 = or i1 %23, %24
  br i1 %25, label %30, label %26

26:                                               ; preds = %16
  br i1 %15, label %27, label %28, !prof !5

27:                                               ; preds = %26
  tail call void @llvm.trap() #10, !noalias !2
  unreachable

28:                                               ; preds = %26
  %29 = icmp eq i64 %21, %2
  br i1 %29, label %31, label %38

30:                                               ; preds = %16
  br i1 %23, label %36, label %31

31:                                               ; preds = %30, %28
  %32 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %17, i64 1
  %33 = icmp eq %"class.absl::optional"* %32, %9
  br i1 %33, label %34, label %16

34:                                               ; preds = %31, %4
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #10, !alias.scope !2
  br label %390

36:                                               ; preds = %30
  %37 = select i1 %15, i64 0, i64 %2
  br label %38

38:                                               ; preds = %28, %36
  %39 = phi i64 [ %37, %36 ], [ %2, %28 ]
  %40 = sub i64 %11, %12
  %41 = ashr exact i64 %40, 4
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %77, label %46

43:                                               ; preds = %64
  %44 = and i8 %68, 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %71, label %77

46:                                               ; preds = %38, %64
  %47 = phi i8 [ %68, %64 ], [ 1, %38 ]
  %48 = phi i64 [ %67, %64 ], [ 0, %38 ]
  %49 = phi i64 [ %66, %64 ], [ %39, %38 ]
  %50 = phi i64 [ %69, %64 ], [ 0, %38 ]
  %51 = phi i64 [ %65, %64 ], [ %39, %38 ]
  %52 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 %50, i32 0, i32 0, i32 0, i32 0
  %53 = load i8, i8* %52, align 8, !range !6, !noalias !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %46
  %56 = add i64 %48, 1
  %57 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 %50, i32 0, i32 0, i32 0, i32 1, i32 0
  %58 = load i64, i64* %57, align 8, !noalias !2
  %59 = icmp ule i64 %49, %58
  %60 = zext i1 %59 to i8
  %61 = and i8 %47, %60
  %62 = icmp ult i64 %51, %58
  %63 = select i1 %62, i64 %58, i64 %51
  br label %64

64:                                               ; preds = %55, %46
  %65 = phi i64 [ %63, %55 ], [ %51, %46 ]
  %66 = phi i64 [ %58, %55 ], [ %49, %46 ]
  %67 = phi i64 [ %56, %55 ], [ %48, %46 ]
  %68 = phi i8 [ %61, %55 ], [ %47, %46 ]
  %69 = add nuw i64 %50, 1
  %70 = icmp ult i64 %69, %41
  br i1 %70, label %46, label %43

71:                                               ; preds = %43, %71
  %72 = phi i64 [ %75, %71 ], [ %65, %43 ]
  %73 = phi i64 [ %74, %71 ], [ 0, %43 ]
  %74 = add nuw nsw i64 %73, 1
  %75 = lshr i64 %72, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %71

77:                                               ; preds = %71, %43, %38
  %78 = phi i64 [ %67, %43 ], [ 0, %38 ], [ %67, %71 ]
  %79 = phi i64 [ 64, %43 ], [ 64, %38 ], [ %74, %71 ]
  %80 = icmp eq i64 %79, 64
  %81 = shl nsw i64 -1, %79
  %82 = xor i64 %81, -1
  %83 = select i1 %80, i64 -1, i64 %82
  br label %84

84:                                               ; preds = %77, %112
  %85 = phi i64 [ %118, %112 ], [ 0, %77 ]
  %86 = phi i64 [ %117, %112 ], [ 0, %77 ]
  %87 = phi i64 [ %116, %112 ], [ 0, %77 ]
  %88 = phi i8 [ %115, %112 ], [ %1, %77 ]
  %89 = phi i64 [ %114, %112 ], [ %2, %77 ]
  %90 = phi i64 [ %113, %112 ], [ 0, %77 ]
  %91 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 %85, i32 0, i32 0, i32 0, i32 0
  %92 = load i8, i8* %91, align 8, !range !6, !noalias !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %112, label %94

94:                                               ; preds = %84
  %95 = icmp eq i8 %88, 0
  %96 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 %85, i32 0, i32 0, i32 0, i32 1, i32 0
  %97 = load i64, i64* %96, align 8, !noalias !2
  br i1 %95, label %112, label %98

98:                                               ; preds = %94
  %99 = sub i64 %97, %89
  %100 = and i64 %99, %83
  %101 = sub i64 %89, %97
  %102 = and i64 %101, %83
  %103 = icmp ult i64 %86, %100
  %104 = select i1 %103, i64 %100, i64 %86
  %105 = icmp ult i64 %100, %102
  %106 = icmp ult i64 %87, %100
  %107 = icmp ult i64 %90, %102
  %108 = select i1 %107, i64 %102, i64 %90
  %109 = select i1 %105, i64 %90, i64 %108
  %110 = and i1 %105, %106
  %111 = select i1 %110, i64 %100, i64 %87
  br label %112

112:                                              ; preds = %98, %94, %84
  %113 = phi i64 [ %109, %98 ], [ %90, %84 ], [ %90, %94 ]
  %114 = phi i64 [ %97, %98 ], [ %89, %84 ], [ %97, %94 ]
  %115 = phi i8 [ 1, %98 ], [ %88, %84 ], [ 1, %94 ]
  %116 = phi i64 [ %111, %98 ], [ %87, %84 ], [ %87, %94 ]
  %117 = phi i64 [ %104, %98 ], [ %86, %84 ], [ %86, %94 ]
  %118 = add nuw i64 %85, 1
  %119 = icmp ult i64 %118, %41
  br i1 %119, label %84, label %120

120:                                              ; preds = %112, %120
  %121 = phi i64 [ %124, %120 ], [ %117, %112 ]
  %122 = phi i64 [ %123, %120 ], [ 0, %112 ]
  %123 = add nuw nsw i64 %122, 1
  %124 = lshr i64 %121, 1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %120

126:                                              ; preds = %120
  %127 = icmp eq i64 %116, 0
  br i1 %127, label %131, label %128

128:                                              ; preds = %126
  %129 = tail call i64 @llvm.ctlz.i64(i64 %116, i1 true) #10, !range !7
  %130 = sub nuw nsw i64 64, %129
  br label %131

131:                                              ; preds = %128, %126
  %132 = phi i64 [ 0, %126 ], [ %130, %128 ]
  %133 = icmp eq i64 %113, 0
  br i1 %133, label %140, label %134

134:                                              ; preds = %131
  %135 = add i64 %113, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %134
  %138 = tail call i64 @llvm.ctlz.i64(i64 %135, i1 true) #10, !range !7
  %139 = sub nuw nsw i64 64, %138
  br label %140

140:                                              ; preds = %137, %134, %131
  %141 = phi i64 [ 0, %131 ], [ 0, %134 ], [ %139, %137 ]
  %142 = icmp ult i64 %132, %141
  %143 = select i1 %142, i64 %141, i64 %132
  %144 = add nsw i64 %143, 1
  %145 = icmp ule i64 %144, %122
  %146 = select i1 %145, i64 %144, i64 %123
  %147 = icmp ult i64 %78, %41
  %148 = or i1 %15, %147
  %149 = load i8, i8* @_ZN6webrtc12_GLOBAL__N_128g_force_unsigned_for_testingE, align 1, !range !6, !noalias !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %157, label %151

151:                                              ; preds = %140
  %152 = icmp eq i64 %123, 64
  %153 = shl i64 -2, %122
  %154 = xor i64 %153, -1
  %155 = select i1 %152, i64 -1, i64 %154
  %156 = xor i1 %148, true
  br label %172

157:                                              ; preds = %140
  %158 = icmp eq i64 %146, 64
  %159 = shl nsw i64 -1, %146
  %160 = xor i64 %159, -1
  %161 = select i1 %158, i64 -1, i64 %160
  %162 = load i8, i8* @_ZN6webrtc12_GLOBAL__N_126g_force_signed_for_testingE, align 1, !range !6, !noalias !2
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %170, label %164

164:                                              ; preds = %157
  %165 = icmp eq i64 %144, 64
  %166 = shl nsw i64 -1, %144
  %167 = xor i64 %166, -1
  %168 = select i1 %165, i64 -1, i64 %167
  %169 = xor i1 %148, true
  br label %177

170:                                              ; preds = %157
  %171 = xor i1 %148, true
  br i1 %145, label %177, label %172

172:                                              ; preds = %170, %151
  %173 = phi i1 [ %156, %151 ], [ %171, %170 ]
  %174 = phi i64 [ %155, %151 ], [ %161, %170 ]
  br i1 %148, label %188, label %175

175:                                              ; preds = %172
  %176 = select i1 %80, i64 8, i64 16
  br label %180

177:                                              ; preds = %170, %164
  %178 = phi i1 [ %169, %164 ], [ %171, %170 ]
  %179 = phi i64 [ %168, %164 ], [ %161, %170 ]
  br i1 %148, label %188, label %180

180:                                              ; preds = %177, %175
  %181 = phi i1 [ %178, %177 ], [ %173, %175 ]
  %182 = phi i1 [ false, %177 ], [ true, %175 ]
  %183 = phi i64 [ %179, %177 ], [ %174, %175 ]
  %184 = phi i64 [ 1, %177 ], [ 0, %175 ]
  %185 = phi i64 [ %144, %177 ], [ %123, %175 ]
  %186 = phi i64 [ 16, %177 ], [ %176, %175 ]
  %187 = mul i64 %185, %41
  br label %203

188:                                              ; preds = %177, %172
  %189 = phi i1 [ %173, %172 ], [ %178, %177 ]
  %190 = phi i1 [ true, %172 ], [ false, %177 ]
  %191 = phi i64 [ %174, %172 ], [ %179, %177 ]
  %192 = phi i64 [ 0, %172 ], [ 1, %177 ]
  %193 = phi i64 [ %123, %172 ], [ %144, %177 ]
  %194 = icmp ne i64 %78, 0
  %195 = and i1 %15, %194
  %196 = load i64, i64* @_ZN6webrtc21kMaxVarIntLengthBytesE, align 8, !noalias !2
  %197 = shl i64 %196, 3
  %198 = zext i1 %195 to i64
  %199 = sub i64 %78, %198
  %200 = mul i64 %193, %199
  %201 = add i64 %200, %41
  %202 = add i64 %201, %197
  br label %203

203:                                              ; preds = %188, %180
  %204 = phi i1 [ %189, %188 ], [ %181, %180 ]
  %205 = phi i1 [ %190, %188 ], [ %182, %180 ]
  %206 = phi i64 [ %191, %188 ], [ %183, %180 ]
  %207 = phi i64 [ %192, %188 ], [ %184, %180 ]
  %208 = phi i64 [ %193, %188 ], [ %185, %180 ]
  %209 = phi i64 [ 16, %188 ], [ %186, %180 ]
  %210 = phi i64 [ %202, %188 ], [ %187, %180 ]
  %211 = add i64 %210, %209
  %212 = lshr i64 %211, 3
  %213 = and i64 %211, 7
  %214 = icmp ne i64 %213, 0
  %215 = zext i1 %214 to i64
  %216 = add nuw nsw i64 %212, %215
  %217 = tail call i8* @_Znwm(i64 80) #11, !noalias !2
  %218 = icmp ult i64 %216, 23
  br i1 %218, label %230, label %219

219:                                              ; preds = %203
  %220 = add nuw nsw i64 %216, 16
  %221 = and i64 %220, 9223372036854775792
  %222 = tail call i8* @_Znwm(i64 %221) #11, !noalias !2
  %223 = bitcast i8* %217 to i8**
  store i8* %222, i8** %223, align 8, !noalias !2
  %224 = or i64 %221, -9223372036854775808
  %225 = getelementptr inbounds i8, i8* %217, i64 16
  %226 = bitcast i8* %225 to i64*
  store i64 %224, i64* %226, align 8, !noalias !2
  %227 = getelementptr inbounds i8, i8* %217, i64 8
  %228 = bitcast i8* %227 to i64*
  store i64 %216, i64* %228, align 8, !noalias !2
  %229 = bitcast i8* %217 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %235

230:                                              ; preds = %203
  %231 = trunc i64 %216 to i8
  %232 = bitcast i8* %217 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %233 = getelementptr inbounds i8, i8* %217, i64 23
  store i8 %231, i8* %233, align 1, !noalias !2
  %234 = icmp eq i64 %216, 0
  br i1 %234, label %238, label %235

235:                                              ; preds = %230, %219
  %236 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %232, %230 ], [ %229, %219 ]
  %237 = phi i8* [ %217, %230 ], [ %222, %219 ]
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %237, i8 0, i64 %216, i1 false) #10, !noalias !2
  br label %238

238:                                              ; preds = %235, %230
  %239 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %232, %230 ], [ %236, %235 ]
  %240 = phi i8* [ %217, %230 ], [ %237, %235 ]
  %241 = getelementptr inbounds i8, i8* %240, i64 %216
  store i8 0, i8* %241, align 1, !noalias !2
  %242 = getelementptr inbounds i8, i8* %217, i64 24
  %243 = bitcast i8* %242 to %"class.rtc::BitBufferWriter"*
  %244 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  %245 = load i8, i8* %244, align 1, !noalias !2
  %246 = icmp slt i8 %245, 0
  br i1 %246, label %247, label %253

247:                                              ; preds = %238
  %248 = bitcast i8* %217 to i8**
  %249 = load i8*, i8** %248, align 8, !noalias !2
  %250 = getelementptr inbounds i8, i8* %217, i64 8
  %251 = bitcast i8* %250 to i64*
  %252 = load i64, i64* %251, align 8, !noalias !2
  br label %255

253:                                              ; preds = %238
  %254 = zext i8 %245 to i64
  br label %255

255:                                              ; preds = %253, %247
  %256 = phi i8* [ %249, %247 ], [ %217, %253 ]
  %257 = phi i64 [ %252, %247 ], [ %254, %253 ]
  tail call void @_ZN3rtc15BitBufferWriterC1EPhm(%"class.rtc::BitBufferWriter"* %243, i8* %256, i64 %257) #10, !noalias !2
  %258 = getelementptr inbounds i8, i8* %217, i64 64
  %259 = bitcast i8* %258 to i64*
  store i64 0, i64* %259, align 8, !noalias !2
  %260 = getelementptr inbounds i8, i8* %217, i64 72
  store i8 1, i8* %260, align 8, !noalias !2
  %261 = and i1 %204, %205
  %262 = and i1 %80, %261
  %263 = xor i1 %262, true
  %264 = zext i1 %263 to i64
  %265 = tail call zeroext i1 @_ZN3rtc15BitBufferWriter9WriteBitsEmm(%"class.rtc::BitBufferWriter"* %243, i64 %264, i64 2) #10, !noalias !8
  %266 = load i64, i64* %259, align 8, !noalias !8
  %267 = add i64 %266, 2
  store i64 %267, i64* %259, align 8, !noalias !8
  %268 = add i64 %208, -1
  %269 = tail call zeroext i1 @_ZN3rtc15BitBufferWriter9WriteBitsEmm(%"class.rtc::BitBufferWriter"* %243, i64 %268, i64 6) #10, !noalias !8
  %270 = load i64, i64* %259, align 8, !noalias !8
  %271 = add i64 %270, 6
  store i64 %271, i64* %259, align 8, !noalias !8
  br i1 %262, label %285, label %272

272:                                              ; preds = %255
  %273 = and i64 %207, 255
  %274 = tail call zeroext i1 @_ZN3rtc15BitBufferWriter9WriteBitsEmm(%"class.rtc::BitBufferWriter"* %243, i64 %273, i64 1) #10, !noalias !8
  %275 = load i64, i64* %259, align 8, !noalias !8
  %276 = add i64 %275, 1
  store i64 %276, i64* %259, align 8, !noalias !8
  %277 = zext i1 %148 to i64
  %278 = tail call zeroext i1 @_ZN3rtc15BitBufferWriter9WriteBitsEmm(%"class.rtc::BitBufferWriter"* %243, i64 %277, i64 1) #10, !noalias !8
  %279 = load i64, i64* %259, align 8, !noalias !8
  %280 = add i64 %279, 1
  store i64 %280, i64* %259, align 8, !noalias !8
  %281 = add i64 %79, -1
  %282 = tail call zeroext i1 @_ZN3rtc15BitBufferWriter9WriteBitsEmm(%"class.rtc::BitBufferWriter"* %243, i64 %281, i64 6) #10, !noalias !8
  %283 = load i64, i64* %259, align 8, !noalias !8
  %284 = add i64 %283, 6
  store i64 %284, i64* %259, align 8, !noalias !8
  br label %285

285:                                              ; preds = %272, %255
  %286 = phi i64 [ %284, %272 ], [ %271, %255 ]
  br i1 %148, label %287, label %302

287:                                              ; preds = %285
  %288 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8, !noalias !8
  %289 = load %"class.absl::optional"*, %"class.absl::optional"** %8, align 8, !noalias !8
  %290 = icmp eq %"class.absl::optional"* %288, %289
  br i1 %290, label %302, label %291

291:                                              ; preds = %287, %291
  %292 = phi %"class.absl::optional"* [ %300, %291 ], [ %288, %287 ]
  %293 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %292, i64 0, i32 0, i32 0, i32 0, i32 0
  %294 = load i8, i8* %293, align 8, !noalias !8
  %295 = icmp ne i8 %294, 0
  %296 = zext i1 %295 to i64
  %297 = tail call zeroext i1 @_ZN3rtc15BitBufferWriter9WriteBitsEmm(%"class.rtc::BitBufferWriter"* %243, i64 %296, i64 1) #10, !noalias !8
  %298 = load i64, i64* %259, align 8, !noalias !8
  %299 = add i64 %298, 1
  store i64 %299, i64* %259, align 8, !noalias !8
  %300 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %292, i64 1
  %301 = icmp eq %"class.absl::optional"* %300, %289
  br i1 %301, label %302, label %291

302:                                              ; preds = %291, %287, %285
  %303 = phi i64 [ %286, %285 ], [ %286, %287 ], [ %299, %291 ]
  %304 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8, !noalias !8
  %305 = load %"class.absl::optional"*, %"class.absl::optional"** %8, align 8, !noalias !8
  %306 = icmp eq %"class.absl::optional"* %304, %305
  br i1 %306, label %375, label %307

307:                                              ; preds = %302
  %308 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %309 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %310 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %309, i64 0, i32 1, i32 0
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %313 = add i64 %206, 1
  br label %314

314:                                              ; preds = %368, %307
  %315 = phi %"class.absl::optional"* [ %304, %307 ], [ %371, %368 ]
  %316 = phi i8 [ %1, %307 ], [ %370, %368 ]
  %317 = phi i64 [ %2, %307 ], [ %369, %368 ]
  %318 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %315, i64 0, i32 0, i32 0, i32 0, i32 0
  %319 = load i8, i8* %318, align 8, !noalias !8
  %320 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %315, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %321 = load i64, i64* %320, align 8, !noalias !8
  %322 = icmp eq i8 %319, 0
  br i1 %322, label %368, label %323

323:                                              ; preds = %314
  %324 = icmp eq i8 %316, 0
  br i1 %324, label %325, label %352

325:                                              ; preds = %323
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %308) #10, !noalias !8
  call void @_ZN6webrtc12EncodeVarIntEm(%"class.std::__1::basic_string"* nonnull sret %5, i64 %321) #10, !noalias !8
  %326 = load i8, i8* %310, align 1, !noalias !8
  %327 = icmp slt i8 %326, 0
  %328 = load i8*, i8** %311, align 8, !noalias !8
  %329 = load i64, i64* %312, align 8, !noalias !8
  %330 = zext i8 %326 to i64
  %331 = select i1 %327, i8* %328, i8* %308
  %332 = select i1 %327, i64 %329, i64 %330
  %333 = getelementptr inbounds i8, i8* %331, i64 %332
  %334 = icmp eq i64 %332, 0
  br i1 %334, label %346, label %335

335:                                              ; preds = %325, %335
  %336 = phi i8* [ %342, %335 ], [ %331, %325 ]
  %337 = load i8, i8* %336, align 1, !noalias !8
  %338 = sext i8 %337 to i64
  %339 = call zeroext i1 @_ZN3rtc15BitBufferWriter9WriteBitsEmm(%"class.rtc::BitBufferWriter"* %243, i64 %338, i64 8) #10, !noalias !8
  %340 = load i64, i64* %259, align 8, !noalias !8
  %341 = add i64 %340, 8
  store i64 %341, i64* %259, align 8, !noalias !8
  %342 = getelementptr inbounds i8, i8* %336, i64 1
  %343 = icmp eq i8* %342, %333
  br i1 %343, label %344, label %335

344:                                              ; preds = %335
  %345 = load i8, i8* %310, align 1, !noalias !8
  br label %346

346:                                              ; preds = %344, %325
  %347 = phi i8 [ %345, %344 ], [ %326, %325 ]
  %348 = icmp slt i8 %347, 0
  br i1 %348, label %349, label %351

349:                                              ; preds = %346
  %350 = load i8*, i8** %311, align 8, !noalias !8
  call void @_ZdlPv(i8* %350) #11, !noalias !8
  br label %351

351:                                              ; preds = %349, %346
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %308) #10, !noalias !8
  br label %368

352:                                              ; preds = %323
  %353 = sub i64 %321, %317
  %354 = and i64 %353, %83
  br i1 %205, label %364, label %355

355:                                              ; preds = %352
  %356 = sub i64 %317, %321
  %357 = and i64 %356, %83
  %358 = icmp ugt i64 %354, %357
  %359 = sub i64 %313, %357
  %360 = select i1 %358, i64 %359, i64 %354
  %361 = call zeroext i1 @_ZN3rtc15BitBufferWriter9WriteBitsEmm(%"class.rtc::BitBufferWriter"* %243, i64 %360, i64 %208) #10, !noalias !8
  %362 = load i64, i64* %259, align 8, !noalias !8
  %363 = add i64 %362, %208
  store i64 %363, i64* %259, align 8, !noalias !8
  br label %368

364:                                              ; preds = %352
  %365 = call zeroext i1 @_ZN3rtc15BitBufferWriter9WriteBitsEmm(%"class.rtc::BitBufferWriter"* %243, i64 %354, i64 %208) #10, !noalias !8
  %366 = load i64, i64* %259, align 8, !noalias !8
  %367 = add i64 %366, %208
  store i64 %367, i64* %259, align 8, !noalias !8
  br label %368

368:                                              ; preds = %364, %355, %351, %314
  %369 = phi i64 [ %317, %314 ], [ %321, %364 ], [ %321, %355 ], [ %321, %351 ]
  %370 = phi i8 [ %316, %314 ], [ %319, %364 ], [ %319, %355 ], [ %319, %351 ]
  %371 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %315, i64 1
  %372 = icmp eq %"class.absl::optional"* %371, %305
  br i1 %372, label %373, label %314

373:                                              ; preds = %368
  %374 = load i64, i64* %259, align 8, !noalias !11
  br label %375

375:                                              ; preds = %373, %302
  %376 = phi i64 [ %374, %373 ], [ %303, %302 ]
  store i8 0, i8* %260, align 8, !noalias !11
  %377 = bitcast i8* %217 to %"class.std::__1::basic_string"*
  %378 = lshr i64 %376, 3
  %379 = and i64 %376, 7
  %380 = icmp ne i64 %379, 0
  %381 = zext i1 %380 to i64
  %382 = add nuw nsw i64 %378, %381
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* nonnull %377, i64 %382, i8 signext 0) #10, !noalias !11
  store i64 0, i64* %259, align 8, !noalias !11
  %383 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %384 = bitcast i8* %217 to <2 x i64>*
  %385 = load <2 x i64>, <2 x i64>* %384, align 8, !noalias !11
  %386 = getelementptr inbounds i8, i8* %217, i64 16
  %387 = bitcast i8* %386 to i64*
  %388 = load i64, i64* %387, align 8, !noalias !11
  %389 = bitcast %"class.std::__1::basic_string"* %0 to <2 x i64>*
  store <2 x i64> %385, <2 x i64>* %389, align 8, !alias.scope !11
  store i64 %388, i64* %383, align 8, !alias.scope !11
  call void @_ZdlPv(i8* nonnull %217) #11, !noalias !2
  br label %390

390:                                              ; preds = %34, %375
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12DecodeDeltasERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN4absl8optionalImEEm(%"class.std::__1::vector"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i8, i64, i64) local_unnamed_addr #0 {
  %6 = alloca %"class.rtc::BitBuffer", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %11 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %12 = alloca %"class.std::__1::vector.27", align 8
  %13 = alloca i32, align 4
  %14 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %15 = alloca %"class.std::__1::vector", align 8
  %16 = alloca i64, align 8
  %17 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %18 = alloca [7 x i8], align 1
  %19 = alloca i32, align 4
  %20 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %21 = alloca i32, align 4
  %22 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %23 = alloca [7 x i8], align 1
  %24 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %25 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  switch i64 %32, label %100 [
    i64 0, label %33
    i64 1, label %496
  ]

33:                                               ; preds = %5
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #10
  %38 = icmp eq i64 %4, 0
  br i1 %38, label %82, label %39

39:                                               ; preds = %33
  %40 = icmp ugt i64 %4, 1152921504606846975
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #12
  unreachable

43:                                               ; preds = %39
  %44 = shl i64 %4, 4
  %45 = tail call i8* @_Znwm(i64 %44) #11
  %46 = bitcast i8* %45 to %"class.absl::optional"*
  %47 = bitcast %"class.absl::optional"** %35 to i8**
  store i8* %45, i8** %47, align 8
  %48 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %45, i8** %48, align 8
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %46, i64 %4
  store %"class.absl::optional"* %49, %"class.absl::optional"** %36, align 8
  %50 = shl nsw i64 %4, 4
  %51 = add i64 %50, -16
  %52 = lshr exact i64 %51, 4
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 7
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %43, %56
  %57 = phi %"class.absl::optional"* [ %60, %56 ], [ %46, %43 ]
  %58 = phi i64 [ %61, %56 ], [ %54, %43 ]
  %59 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %57, i64 1
  %61 = add i64 %58, -1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %56, !llvm.loop !14

63:                                               ; preds = %56, %43
  %64 = phi %"class.absl::optional"* [ %46, %43 ], [ %60, %56 ]
  %65 = icmp ult i64 %51, 112
  br i1 %65, label %78, label %66

66:                                               ; preds = %63, %66
  %67 = phi %"class.absl::optional"* [ %76, %66 ], [ %64, %63 ]
  %68 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %68, align 8
  %69 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %69, align 8
  %70 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %70, align 8
  %71 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %71, align 8
  %72 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %72, align 8
  %73 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %73, align 8
  %74 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %74, align 8
  %75 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %75, align 8
  %76 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 8
  %77 = icmp eq %"class.absl::optional"* %76, %49
  br i1 %77, label %78, label %66

78:                                               ; preds = %66, %63
  %79 = bitcast %"class.absl::optional"** %35 to i64*
  %80 = ptrtoint %"class.absl::optional"* %49 to i64
  store i64 %80, i64* %79, align 8
  %81 = load %"class.absl::optional"*, %"class.absl::optional"** %34, align 8
  br label %82

82:                                               ; preds = %33, %78
  %83 = phi i64 [ %80, %78 ], [ 0, %33 ]
  %84 = phi %"class.absl::optional"* [ %81, %78 ], [ null, %33 ]
  %85 = ptrtoint %"class.absl::optional"* %84 to i64
  %86 = sub i64 %83, %85
  %87 = icmp sgt i64 %86, 0
  br i1 %87, label %88, label %502

88:                                               ; preds = %82
  %89 = lshr exact i64 %86, 4
  %90 = getelementptr inbounds [7 x i8], [7 x i8]* %23, i64 0, i64 0
  br label %91

91:                                               ; preds = %91, %88
  %92 = phi i64 [ %89, %88 ], [ %98, %91 ]
  %93 = phi %"class.absl::optional"* [ %84, %88 ], [ %97, %91 ]
  %94 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %2, i8* %94, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %95, i8* nonnull align 1 %90, i64 7, i1 false)
  %96 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %93, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %3, i64* %96, align 8
  %97 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %93, i64 1
  %98 = add nsw i64 %92, -1
  %99 = icmp sgt i64 %98, 0
  br i1 %99, label %91, label %502

100:                                              ; preds = %5
  %101 = bitcast %"class.rtc::BitBuffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %101) #10
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 32, i1 false) #10
  %103 = load i8*, i8** %102, align 8
  %104 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %105 = select i1 %28, i8* %103, i8* %104
  call void @_ZN3rtc9BitBufferC1EPKhm(%"class.rtc::BitBuffer"* nonnull %6, i8* %105, i64 2) #10
  %106 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #10
  store i32 -1431655766, i32* %7, align 4
  %107 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* nonnull %6, i64 2, i32* nonnull dereferenceable(4) %7) #10
  %108 = load i32, i32* %7, align 4
  %109 = icmp ult i32 %108, 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %101) #10
  br i1 %109, label %110, label %496

110:                                              ; preds = %100
  %111 = load i8, i8* %26, align 1, !noalias !16
  %112 = icmp slt i8 %111, 0
  %113 = load i64, i64* %29, align 8, !noalias !16
  %114 = zext i8 %111 to i64
  %115 = select i1 %112, i64 %113, i64 %114
  %116 = icmp ult i64 %115, 2
  br i1 %116, label %173, label %117

117:                                              ; preds = %110
  %118 = load i8*, i8** %102, align 8, !noalias !16
  %119 = select i1 %112, i8* %118, i8* %104
  %120 = call i8* @_Znwm(i64 32) #11, !noalias !16
  %121 = bitcast i8* %120 to %"class.rtc::BitBuffer"*
  call void @_ZN3rtc9BitBufferC1EPKhm(%"class.rtc::BitBuffer"* nonnull %121, i8* %119, i64 %115) #10, !noalias !16
  %122 = ptrtoint i8* %120 to i64
  %123 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %123) #10, !noalias !16
  store i32 -1431655766, i32* %19, align 4, !noalias !16
  %124 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* nonnull %121, i64 2, i32* nonnull dereferenceable(4) %19) #10, !noalias !16
  %125 = load i32, i32* %19, align 4, !noalias !16
  %126 = icmp ugt i32 %125, 1
  br i1 %126, label %127, label %132

127:                                              ; preds = %117
  %128 = bitcast %"class.rtc::DiagnosticLogMessage"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %128) #10, !noalias !16
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %20, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 738, i32 2, i32 0, i32 0) #10, !noalias !16
  %129 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %20, i64 0, i32 7
  %130 = bitcast %"class.std::__1::basic_ostringstream"* %129 to %"class.std::__1::basic_ostream"*
  %131 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %130, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i64 27) #10, !noalias !16
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %20) #10, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %128) #10, !noalias !16
  br label %172

132:                                              ; preds = %117
  %133 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %133) #10, !noalias !16
  store i32 -1431655766, i32* %21, align 4, !noalias !16
  %134 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* nonnull %121, i64 6, i32* nonnull dereferenceable(4) %21) #10, !noalias !16
  br i1 %134, label %135, label %171

135:                                              ; preds = %132
  %136 = load i32, i32* %21, align 4, !noalias !16
  %137 = add i32 %136, 1
  %138 = zext i32 %137 to i64
  %139 = icmp eq i32 %125, 0
  br i1 %139, label %156, label %140

140:                                              ; preds = %135
  %141 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* nonnull %121, i64 1, i32* nonnull dereferenceable(4) %21) #10, !noalias !16
  br i1 %141, label %142, label %171

142:                                              ; preds = %140
  %143 = load i32, i32* %21, align 4, !noalias !16
  %144 = icmp ne i32 %143, 0
  %145 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* nonnull %121, i64 1, i32* nonnull dereferenceable(4) %21) #10, !noalias !16
  br i1 %145, label %146, label %171

146:                                              ; preds = %142
  %147 = load i32, i32* %21, align 4, !noalias !16
  %148 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* nonnull %121, i64 6, i32* nonnull dereferenceable(4) %21) #10, !noalias !16
  br i1 %148, label %149, label %171

149:                                              ; preds = %146
  %150 = icmp ne i32 %147, 0
  %151 = load i32, i32* %21, align 4, !noalias !16
  %152 = add i32 %151, 1
  %153 = zext i32 %152 to i64
  %154 = zext i1 %144 to i8
  %155 = zext i1 %150 to i8
  br label %156

156:                                              ; preds = %149, %135
  %157 = phi i8 [ %154, %149 ], [ 0, %135 ]
  %158 = phi i8 [ %155, %149 ], [ 0, %135 ]
  %159 = phi i64 [ %153, %149 ], [ 64, %135 ]
  %160 = add nsw i64 %138, -1
  %161 = add nsw i64 %159, -1
  %162 = or i64 %161, %160
  %163 = icmp ult i64 %162, 64
  %164 = icmp uge i64 %159, %138
  %165 = and i1 %164, %163
  br i1 %165, label %175, label %166

166:                                              ; preds = %156
  %167 = bitcast %"class.rtc::DiagnosticLogMessage"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %167) #10, !noalias !16
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %22, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 787, i32 2, i32 0, i32 0) #10, !noalias !16
  %168 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %22, i64 0, i32 7
  %169 = bitcast %"class.std::__1::basic_ostringstream"* %168 to %"class.std::__1::basic_ostream"*
  %170 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %169, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i64 41) #10, !noalias !16
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %22) #10, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %167) #10, !noalias !16
  br label %171

171:                                              ; preds = %166, %146, %142, %140, %132
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %133) #10, !noalias !16
  br label %172

172:                                              ; preds = %171, %127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %123) #10, !noalias !16
  call void @_ZdlPv(i8* nonnull %120) #11, !noalias !16
  br label %173

173:                                              ; preds = %172, %110
  %174 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %174, i8 0, i64 24, i1 false) #10, !alias.scope !16
  br label %502

175:                                              ; preds = %156
  %176 = icmp eq i32 %137, 64
  %177 = shl nsw i64 -1, %138
  %178 = xor i64 %177, -1
  %179 = select i1 %176, i64 -1, i64 %178
  %180 = icmp eq i64 %159, 64
  %181 = shl nsw i64 -1, %159
  %182 = xor i64 %181, -1
  %183 = select i1 %180, i64 -1, i64 %182
  %184 = call i8* @_Znwm(i64 72) #11, !noalias !16
  %185 = bitcast i8* %184 to i64*
  store i64 %122, i64* %185, align 8, !noalias !16
  %186 = getelementptr inbounds i8, i8* %184, i64 8
  %187 = bitcast i8* %186 to i64*
  store i64 %138, i64* %187, align 8, !noalias !16
  %188 = getelementptr inbounds i8, i8* %184, i64 16
  store i8 %157, i8* %188, align 8, !noalias !16
  %189 = getelementptr inbounds i8, i8* %184, i64 17
  store i8 %158, i8* %189, align 1, !noalias !16
  %190 = getelementptr inbounds i8, i8* %184, i64 18
  call void @llvm.memset.p0i8.i64(i8* align 2 %190, i8 -86, i64 6, i1 false) #10, !noalias !16
  %191 = getelementptr inbounds i8, i8* %184, i64 24
  %192 = bitcast i8* %191 to i64*
  store i64 %159, i64* %192, align 8, !noalias !16
  %193 = getelementptr inbounds i8, i8* %184, i64 32
  %194 = bitcast i8* %193 to i64*
  store i64 %179, i64* %194, align 8, !noalias !16
  %195 = getelementptr inbounds i8, i8* %184, i64 40
  %196 = bitcast i8* %195 to i64*
  store i64 %183, i64* %196, align 8, !noalias !16
  %197 = getelementptr inbounds i8, i8* %184, i64 48
  store i8 %2, i8* %197, align 8, !noalias !16
  %198 = getelementptr inbounds i8, i8* %184, i64 56
  %199 = bitcast i8* %198 to i64*
  store i64 %3, i64* %199, align 8, !noalias !16
  %200 = getelementptr inbounds i8, i8* %184, i64 64
  %201 = bitcast i8* %200 to i64*
  store i64 %4, i64* %201, align 8, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %133) #10, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %123) #10, !noalias !16
  %202 = bitcast %"class.std::__1::vector.27"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %202) #10, !noalias !19
  %203 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %12, i64 0, i32 0
  %204 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %12, i64 0, i32 1
  %205 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %12, i64 0, i32 2, i32 0, i32 0
  %206 = icmp eq i64 %4, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 0, i64 24, i1 false) #10, !noalias !19
  br i1 %206, label %234, label %207

207:                                              ; preds = %175
  %208 = icmp slt i64 %4, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %207
  %210 = bitcast %"class.std::__1::vector.27"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %210) #12, !noalias !19
  unreachable

211:                                              ; preds = %207
  %212 = add nsw i64 %4, -1
  %213 = lshr i64 %212, 6
  %214 = add nuw nsw i64 %213, 1
  %215 = shl nuw nsw i64 %214, 3
  %216 = call i8* @_Znwm(i64 %215) #11, !noalias !19
  %217 = bitcast %"class.std::__1::vector.27"* %12 to i8**
  store i8* %216, i8** %217, align 8, !noalias !19
  store i64 %214, i64* %205, align 8, !noalias !19
  store i64 %4, i64* %204, align 8, !noalias !19
  %218 = icmp ult i64 %4, 65
  %219 = bitcast i8* %216 to i64*
  %220 = ptrtoint i8* %216 to i64
  %221 = getelementptr inbounds i64, i64* %219, i64 %213
  %222 = select i1 %218, i64* %219, i64* %221
  store i64 0, i64* %222, align 8, !noalias !19
  %223 = lshr i64 %4, 6
  %224 = shl nuw nsw i64 %223, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 0, i64 %224, i1 false) #10, !noalias !19
  %225 = and i64 %4, 63
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %234, label %227

227:                                              ; preds = %211
  %228 = getelementptr inbounds i64, i64* %219, i64 %223
  %229 = sub nuw nsw i64 64, %225
  %230 = lshr i64 -1, %229
  %231 = xor i64 %230, -1
  %232 = load i64, i64* %228, align 8, !noalias !19
  %233 = and i64 %232, %231
  store i64 %233, i64* %228, align 8, !noalias !19
  br label %234

234:                                              ; preds = %227, %211, %175
  %235 = phi i64 [ 0, %175 ], [ %220, %211 ], [ %220, %227 ]
  %236 = icmp eq i8 %158, 0
  br i1 %236, label %272, label %237

237:                                              ; preds = %234
  br i1 %206, label %294, label %238

238:                                              ; preds = %237
  %239 = bitcast i32* %13 to i8*
  %240 = bitcast i8* %184 to %"class.rtc::BitBuffer"**
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %239) #10, !noalias !19
  store i32 -1431655766, i32* %13, align 4, !noalias !19
  %241 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* nonnull %121, i64 1, i32* nonnull dereferenceable(4) %13) #10, !noalias !19
  br i1 %241, label %242, label %266

242:                                              ; preds = %238, %263
  %243 = phi i64 [ %260, %263 ], [ 0, %238 ]
  %244 = load i32, i32* %13, align 4, !noalias !19
  %245 = icmp eq i32 %244, 1
  %246 = load i64*, i64** %203, align 8, !noalias !19
  %247 = lshr i64 %243, 6
  %248 = getelementptr inbounds i64, i64* %246, i64 %247
  %249 = and i64 %243, 63
  %250 = shl i64 1, %249
  br i1 %245, label %251, label %254

251:                                              ; preds = %242
  %252 = load i64, i64* %248, align 8, !noalias !19
  %253 = or i64 %252, %250
  br label %258

254:                                              ; preds = %242
  %255 = xor i64 %250, -1
  %256 = load i64, i64* %248, align 8, !noalias !19
  %257 = and i64 %256, %255
  br label %258

258:                                              ; preds = %254, %251
  %259 = phi i64 [ %257, %254 ], [ %253, %251 ]
  store i64 %259, i64* %248, align 8, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %239) #10, !noalias !19
  %260 = add nuw i64 %243, 1
  %261 = load i64, i64* %201, align 8, !noalias !19
  %262 = icmp ult i64 %260, %261
  br i1 %262, label %263, label %294

263:                                              ; preds = %258
  %264 = load %"class.rtc::BitBuffer"*, %"class.rtc::BitBuffer"** %240, align 8, !noalias !19
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %239) #10, !noalias !19
  store i32 -1431655766, i32* %13, align 4, !noalias !19
  %265 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %264, i64 1, i32* nonnull dereferenceable(4) %13) #10, !noalias !19
  br i1 %265, label %242, label %266

266:                                              ; preds = %263, %238
  %267 = bitcast %"class.rtc::DiagnosticLogMessage"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %267) #10, !noalias !19
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %14, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 817, i32 2, i32 0, i32 0) #10, !noalias !19
  %268 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %14, i64 0, i32 7
  %269 = bitcast %"class.std::__1::basic_ostringstream"* %268 to %"class.std::__1::basic_ostream"*
  %270 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %269, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i64 40) #10, !noalias !19
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %14) #10, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %267) #10, !noalias !19
  %271 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %271, i8 0, i64 24, i1 false) #10, !alias.scope !19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %239) #10, !noalias !19
  br label %484

272:                                              ; preds = %234
  %273 = inttoptr i64 %235 to i64*
  %274 = lshr i64 %4, 6
  %275 = getelementptr inbounds i64, i64* %273, i64 %274
  %276 = and i64 %4, 63
  %277 = ptrtoint i64* %275 to i64
  %278 = sub i64 %277, %235
  %279 = shl i64 %278, 3
  %280 = add i64 %279, %276
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %294, label %282

282:                                              ; preds = %272
  %283 = inttoptr i64 %235 to i8*
  %284 = lshr i64 %280, 6
  %285 = shl nuw nsw i64 %284, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %283, i8 -1, i64 %285, i1 false) #10, !noalias !19
  %286 = and i64 %280, 63
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %294, label %288

288:                                              ; preds = %282
  %289 = getelementptr inbounds i64, i64* %273, i64 %284
  %290 = sub nuw nsw i64 64, %286
  %291 = lshr i64 -1, %290
  %292 = load i64, i64* %289, align 8, !noalias !19
  %293 = or i64 %292, %291
  store i64 %293, i64* %289, align 8, !noalias !19
  br label %294

294:                                              ; preds = %258, %288, %282, %272, %237
  %295 = load i8, i8* %197, align 8, !noalias !19
  %296 = load i64, i64* %199, align 8, !noalias !19
  %297 = bitcast %"class.std::__1::vector"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %297) #10, !noalias !19
  %298 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 0
  %299 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 1
  %300 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %301 = load i64, i64* %201, align 8, !noalias !19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %297, i8 0, i64 24, i1 false) #10, !noalias !19
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %466, label %303

303:                                              ; preds = %294
  %304 = icmp ugt i64 %301, 1152921504606846975
  br i1 %304, label %305, label %307

305:                                              ; preds = %303
  %306 = bitcast %"class.std::__1::vector"* %15 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %306) #12, !noalias !19
  unreachable

307:                                              ; preds = %303
  %308 = shl i64 %301, 4
  %309 = call i8* @_Znwm(i64 %308) #11, !noalias !19
  %310 = bitcast i8* %309 to %"class.absl::optional"*
  %311 = bitcast %"class.absl::optional"** %299 to i8**
  store i8* %309, i8** %311, align 8, !noalias !19
  %312 = bitcast %"class.std::__1::vector"* %15 to i8**
  store i8* %309, i8** %312, align 8, !noalias !19
  %313 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %310, i64 %301
  store %"class.absl::optional"* %313, %"class.absl::optional"** %300, align 8, !noalias !19
  %314 = shl nsw i64 %301, 4
  %315 = add i64 %314, -16
  %316 = lshr exact i64 %315, 4
  %317 = add nuw nsw i64 %316, 1
  %318 = and i64 %317, 7
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %327, label %320

320:                                              ; preds = %307, %320
  %321 = phi %"class.absl::optional"* [ %324, %320 ], [ %310, %307 ]
  %322 = phi i64 [ %325, %320 ], [ %318, %307 ]
  %323 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %321, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %323, align 8, !noalias !19
  %324 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %321, i64 1
  %325 = add i64 %322, -1
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %327, label %320, !llvm.loop !22

327:                                              ; preds = %320, %307
  %328 = phi %"class.absl::optional"* [ %310, %307 ], [ %324, %320 ]
  %329 = icmp ult i64 %315, 112
  br i1 %329, label %342, label %330

330:                                              ; preds = %327, %330
  %331 = phi %"class.absl::optional"* [ %340, %330 ], [ %328, %327 ]
  %332 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %331, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %332, align 8, !noalias !19
  %333 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %331, i64 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %333, align 8, !noalias !19
  %334 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %331, i64 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %334, align 8, !noalias !19
  %335 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %331, i64 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %335, align 8, !noalias !19
  %336 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %331, i64 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %336, align 8, !noalias !19
  %337 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %331, i64 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %337, align 8, !noalias !19
  %338 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %331, i64 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %338, align 8, !noalias !19
  %339 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %331, i64 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %339, align 8, !noalias !19
  %340 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %331, i64 8
  %341 = icmp eq %"class.absl::optional"* %340, %313
  br i1 %341, label %342, label %330

342:                                              ; preds = %330, %327
  %343 = ptrtoint i8* %309 to i64
  %344 = bitcast %"class.absl::optional"** %299 to i64*
  %345 = ptrtoint %"class.absl::optional"* %313 to i64
  store i64 %345, i64* %344, align 8, !noalias !19
  %346 = load i64, i64* %201, align 8, !noalias !19
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %466, label %348

348:                                              ; preds = %342
  %349 = bitcast i32* %8 to i8*
  %350 = bitcast i32* %9 to i8*
  %351 = bitcast i8* %184 to %"class.rtc::BitBuffer"**
  %352 = getelementptr inbounds [7 x i8], [7 x i8]* %18, i64 0, i64 0
  %353 = bitcast i64* %16 to i8*
  br label %354

354:                                              ; preds = %457, %348
  %355 = phi i64 [ %343, %348 ], [ %458, %457 ]
  %356 = phi i64 [ %346, %348 ], [ %459, %457 ]
  %357 = phi i64 [ 0, %348 ], [ %462, %457 ]
  %358 = phi i64 [ %296, %348 ], [ %461, %457 ]
  %359 = phi i8 [ %295, %348 ], [ %460, %457 ]
  %360 = load i64*, i64** %203, align 8, !noalias !19
  %361 = lshr i64 %357, 6
  %362 = getelementptr inbounds i64, i64* %360, i64 %361
  %363 = and i64 %357, 63
  %364 = shl i64 1, %363
  %365 = load i64, i64* %362, align 8, !noalias !19
  %366 = and i64 %365, %364
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %457, label %368

368:                                              ; preds = %354
  %369 = icmp eq i8 %359, 0
  br i1 %369, label %370, label %385

370:                                              ; preds = %368
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %353) #10, !noalias !19
  store i64 -6148914691236517206, i64* %16, align 8, !noalias !19
  %371 = load %"class.rtc::BitBuffer"*, %"class.rtc::BitBuffer"** %351, align 8, !noalias !19
  %372 = call i64 @_ZN6webrtc12DecodeVarIntEPN3rtc9BitBufferEPm(%"class.rtc::BitBuffer"* %371, i64* nonnull %16) #10, !noalias !19
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %379, label %374

374:                                              ; preds = %370
  %375 = load i64, i64* %16, align 8, !noalias !19
  %376 = load %"class.absl::optional"*, %"class.absl::optional"** %298, align 8, !noalias !19
  %377 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %376, i64 %357, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %377, align 8, !noalias !19
  %378 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %376, i64 %357, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %375, i64* %378, align 8, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %353) #10, !noalias !19
  br label %449

379:                                              ; preds = %370
  %380 = bitcast %"class.rtc::DiagnosticLogMessage"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %380) #10, !noalias !19
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %17, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 842, i32 2, i32 0, i32 0) #10, !noalias !19
  %381 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %17, i64 0, i32 7
  %382 = bitcast %"class.std::__1::basic_ostringstream"* %381 to %"class.std::__1::basic_ostream"*
  %383 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %382, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i64 27) #10, !noalias !19
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %17) #10, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %380) #10, !noalias !19
  %384 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %384, i8 0, i64 24, i1 false) #10, !alias.scope !19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %353) #10, !noalias !19
  br label %476

385:                                              ; preds = %368
  %386 = load i64, i64* %187, align 8, !noalias !19
  %387 = icmp ult i64 %386, 32
  %388 = select i1 %387, i64 %386, i64 32
  %389 = icmp ult i64 %386, 33
  %390 = add i64 %386, -32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %349) #10, !noalias !19
  store i32 -1431655766, i32* %8, align 4, !noalias !19
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %350) #10, !noalias !19
  store i32 -1431655766, i32* %9, align 4, !noalias !19
  %391 = icmp eq i64 %390, 0
  %392 = or i1 %389, %391
  br i1 %392, label %401, label %393

393:                                              ; preds = %385
  %394 = load %"class.rtc::BitBuffer"*, %"class.rtc::BitBuffer"** %351, align 8, !noalias !19
  %395 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %394, i64 %390, i32* nonnull dereferenceable(4) %9) #10, !noalias !19
  br i1 %395, label %402, label %396

396:                                              ; preds = %393
  %397 = bitcast %"class.rtc::DiagnosticLogMessage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %397) #10, !noalias !19
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %10, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 881, i32 2, i32 0, i32 0) #10, !noalias !19
  %398 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %10, i64 0, i32 7
  %399 = bitcast %"class.std::__1::basic_ostringstream"* %398 to %"class.std::__1::basic_ostream"*
  %400 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %399, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0), i64 36) #10, !noalias !19
  br label %445

401:                                              ; preds = %385
  store i32 0, i32* %9, align 4, !noalias !19
  br label %402

402:                                              ; preds = %401, %393
  %403 = load %"class.rtc::BitBuffer"*, %"class.rtc::BitBuffer"** %351, align 8, !noalias !19
  %404 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %403, i64 %388, i32* nonnull dereferenceable(4) %8) #10, !noalias !19
  br i1 %404, label %410, label %405

405:                                              ; preds = %402
  %406 = bitcast %"class.rtc::DiagnosticLogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %406) #10, !noalias !19
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %11, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 889, i32 2, i32 0, i32 0) #10, !noalias !19
  %407 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %11, i64 0, i32 7
  %408 = bitcast %"class.std::__1::basic_ostringstream"* %407 to %"class.std::__1::basic_ostream"*
  %409 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %408, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i64 0, i64 0), i64 35) #10, !noalias !19
  br label %445

410:                                              ; preds = %402
  %411 = load i32, i32* %8, align 4, !noalias !19
  %412 = zext i32 %411 to i64
  %413 = load i32, i32* %9, align 4, !noalias !19
  %414 = zext i32 %413 to i64
  %415 = shl nuw i64 %414, 32
  %416 = or i64 %415, %412
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %350) #10, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %349) #10, !noalias !19
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %352)
  %417 = load i8, i8* %188, align 8, !range !6, !noalias !19
  %418 = icmp eq i8 %417, 0
  br i1 %418, label %434, label %419

419:                                              ; preds = %410
  %420 = load i64, i64* %187, align 8, !noalias !19
  %421 = add i64 %420, -1
  %422 = shl i64 1, %421
  %423 = and i64 %422, %416
  %424 = icmp eq i64 %423, 0
  br i1 %424, label %425, label %428

425:                                              ; preds = %419
  %426 = add i64 %416, %358
  %427 = load i64, i64* %196, align 8, !noalias !19
  br label %437

428:                                              ; preds = %419
  %429 = load i64, i64* %194, align 8, !noalias !19
  %430 = xor i64 %429, -1
  %431 = or i64 %416, %430
  %432 = add i64 %431, %358
  %433 = load i64, i64* %196, align 8, !noalias !19
  br label %437

434:                                              ; preds = %410
  %435 = add i64 %416, %358
  %436 = load i64, i64* %196, align 8, !noalias !19
  br label %437

437:                                              ; preds = %434, %428, %425
  %438 = phi i64 [ %435, %434 ], [ %433, %428 ], [ %426, %425 ]
  %439 = phi i64 [ %436, %434 ], [ %432, %428 ], [ %427, %425 ]
  %440 = and i64 %439, %438
  %441 = load %"class.absl::optional"*, %"class.absl::optional"** %298, align 8, !noalias !19
  %442 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %441, i64 %357, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %442, align 8, !noalias !19
  %443 = getelementptr inbounds i8, i8* %442, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %443, i8* nonnull align 1 %352, i64 7, i1 false) #10, !noalias !19
  %444 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %441, i64 %357, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %440, i64* %444, align 8, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %352)
  br label %449

445:                                              ; preds = %405, %396
  %446 = phi %"class.rtc::DiagnosticLogMessage"* [ %11, %405 ], [ %10, %396 ]
  %447 = phi i8* [ %406, %405 ], [ %397, %396 ]
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %446) #10, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %447) #10, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %350) #10, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %349) #10, !noalias !19
  %448 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %448, i8 0, i64 24, i1 false) #10, !alias.scope !19
  br label %476

449:                                              ; preds = %437, %374
  %450 = load %"class.absl::optional"*, %"class.absl::optional"** %298, align 8, !noalias !19
  %451 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %450, i64 %357, i32 0, i32 0, i32 0, i32 0
  %452 = load i8, i8* %451, align 8, !noalias !19
  %453 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %450, i64 %357, i32 0, i32 0, i32 0, i32 1, i32 0
  %454 = load i64, i64* %453, align 8, !noalias !19
  %455 = load i64, i64* %201, align 8, !noalias !19
  %456 = ptrtoint %"class.absl::optional"* %450 to i64
  br label %457

457:                                              ; preds = %449, %354
  %458 = phi i64 [ %456, %449 ], [ %355, %354 ]
  %459 = phi i64 [ %455, %449 ], [ %356, %354 ]
  %460 = phi i8 [ %452, %449 ], [ %359, %354 ]
  %461 = phi i64 [ %454, %449 ], [ %358, %354 ]
  %462 = add nuw i64 %357, 1
  %463 = icmp ult i64 %462, %459
  br i1 %463, label %354, label %464

464:                                              ; preds = %457
  %465 = load i64, i64* %344, align 8, !noalias !19
  br label %466

466:                                              ; preds = %464, %342, %294
  %467 = phi i64 [ %465, %464 ], [ %345, %342 ], [ 0, %294 ]
  %468 = phi i64 [ %458, %464 ], [ %343, %342 ], [ 0, %294 ]
  %469 = bitcast %"class.std::__1::vector"* %0 to i64*
  store i64 %468, i64* %469, align 8, !alias.scope !19
  %470 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %471 = bitcast %"class.absl::optional"** %470 to i64*
  store i64 %467, i64* %471, align 8, !alias.scope !19
  %472 = bitcast %"class.absl::optional"** %300 to i64*
  %473 = load i64, i64* %472, align 8, !noalias !19
  %474 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %475 = bitcast %"class.absl::optional"** %474 to i64*
  store i64 %473, i64* %475, align 8, !alias.scope !19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %297, i8 0, i64 24, i1 false) #10, !noalias !19
  br label %476

476:                                              ; preds = %466, %445, %379
  %477 = load %"class.absl::optional"*, %"class.absl::optional"** %298, align 8, !noalias !19
  %478 = icmp eq %"class.absl::optional"* %477, null
  br i1 %478, label %483, label %479

479:                                              ; preds = %476
  %480 = ptrtoint %"class.absl::optional"* %477 to i64
  %481 = bitcast %"class.absl::optional"** %299 to i64*
  store i64 %480, i64* %481, align 8, !noalias !19
  %482 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %477, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %482) #11, !noalias !19
  br label %483

483:                                              ; preds = %479, %476
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %297) #10, !noalias !19
  br label %484

484:                                              ; preds = %483, %266
  %485 = load i64*, i64** %203, align 8, !noalias !19
  %486 = icmp eq i64* %485, null
  br i1 %486, label %489, label %487

487:                                              ; preds = %484
  %488 = bitcast i64* %485 to i8*
  call void @_ZdlPv(i8* %488) #11, !noalias !19
  br label %489

489:                                              ; preds = %487, %484
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %202) #10, !noalias !19
  %490 = bitcast i8* %184 to %"class.rtc::BitBuffer"**
  %491 = load %"class.rtc::BitBuffer"*, %"class.rtc::BitBuffer"** %490, align 8, !noalias !16
  store %"class.rtc::BitBuffer"* null, %"class.rtc::BitBuffer"** %490, align 8, !noalias !16
  %492 = icmp eq %"class.rtc::BitBuffer"* %491, null
  br i1 %492, label %495, label %493

493:                                              ; preds = %489
  %494 = bitcast %"class.rtc::BitBuffer"* %491 to i8*
  call void @_ZdlPv(i8* %494) #11, !noalias !16
  br label %495

495:                                              ; preds = %493, %489
  call void @_ZdlPv(i8* nonnull %184) #11, !noalias !16
  br label %502

496:                                              ; preds = %5, %100
  %497 = bitcast %"class.rtc::DiagnosticLogMessage"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %497) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %24, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 960, i32 2, i32 0, i32 0) #10
  %498 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %24, i64 0, i32 7
  %499 = bitcast %"class.std::__1::basic_ostringstream"* %498 to %"class.std::__1::basic_ostream"*
  %500 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %499, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i64 38) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %497) #10
  %501 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %501, i8 0, i64 24, i1 false) #10
  br label %502

502:                                              ; preds = %91, %495, %173, %82, %496
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc46SetFixedLengthEncoderDeltaSignednessForTestingEb(i1 zeroext) local_unnamed_addr #4 {
  %2 = zext i1 %0 to i8
  %3 = xor i1 %0, true
  %4 = zext i1 %3 to i8
  store i8 %4, i8* @_ZN6webrtc12_GLOBAL__N_128g_force_unsigned_for_testingE, align 1
  store i8 %2, i8* @_ZN6webrtc12_GLOBAL__N_126g_force_signed_for_testingE, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc48UnsetFixedLengthEncoderDeltaSignednessForTestingEv() local_unnamed_addr #4 {
  store i8 0, i8* @_ZN6webrtc12_GLOBAL__N_128g_force_unsigned_for_testingE, align 1
  store i8 0, i8* @_ZN6webrtc12_GLOBAL__N_126g_force_signed_for_testingE, align 1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN3rtc15BitBufferWriterC1EPhm(%"class.rtc::BitBufferWriter"*, i8*, i64) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN6webrtc12EncodeVarIntEm(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3rtc15BitBufferWriter9WriteBitsEmm(%"class.rtc::BitBufferWriter"*, i64, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

declare void @_ZN3rtc9BitBufferC1EPKhm(%"class.rtc::BitBuffer"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"*, i64, i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare i64 @_ZN6webrtc12DecodeVarIntEPN3rtc9BitBufferEPm(%"class.rtc::BitBuffer"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6webrtc12_GLOBAL__N_123FixedLengthDeltaEncoder12EncodeDeltasEN4absl8optionalImEERKNSt3__16vectorIS4_NS5_9allocatorIS4_EEEE: argument 0"}
!4 = distinct !{!4, !"_ZN6webrtc12_GLOBAL__N_123FixedLengthDeltaEncoder12EncodeDeltasEN4absl8optionalImEERKNSt3__16vectorIS4_NS5_9allocatorIS4_EEEE"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{i8 0, i8 2}
!7 = !{i64 0, i64 65}
!8 = !{!9, !3}
!9 = distinct !{!9, !10, !"_ZN6webrtc12_GLOBAL__N_123FixedLengthDeltaEncoder6EncodeEv: argument 0"}
!10 = distinct !{!10, !"_ZN6webrtc12_GLOBAL__N_123FixedLengthDeltaEncoder6EncodeEv"}
!11 = !{!12, !9, !3}
!12 = distinct !{!12, !13, !"_ZN6webrtc12_GLOBAL__N_19BitWriter9GetStringEv: argument 0"}
!13 = distinct !{!13, !"_ZN6webrtc12_GLOBAL__N_19BitWriter9GetStringEv"}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN6webrtc12_GLOBAL__N_123FixedLengthDeltaDecoder12DecodeDeltasERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4absl8optionalImEEm: argument 0"}
!18 = distinct !{!18, !"_ZN6webrtc12_GLOBAL__N_123FixedLengthDeltaDecoder12DecodeDeltasERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4absl8optionalImEEm"}
!19 = !{!20, !17}
!20 = distinct !{!20, !21, !"_ZN6webrtc12_GLOBAL__N_123FixedLengthDeltaDecoder6DecodeEv: argument 0"}
!21 = distinct !{!21, !"_ZN6webrtc12_GLOBAL__N_123FixedLengthDeltaDecoder6DecodeEv"}
!22 = distinct !{!22, !15}
