; ModuleID = '../../third_party/blink/renderer/modules/filesystem/file_writer_base.cc'
source_filename = "../../third_party/blink/renderer/modules/filesystem/file_writer_base.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FileWriterBase" = type { %"class.blink::GarbageCollectedMixin", i64, i64, %"class.blink::KURL", i32, i32 }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.2", i32, [4 x i8], %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.133", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.174", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.118", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i64 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::Worklist.91"* }
%"class.blink::Worklist.91" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.98", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.112", [4 x i8] }>
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100", %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { i64 }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { float }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.121", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.141" }
%"class.WTF::VectorBuffer.141" = type { %"class.WTF::VectorBufferBase.142" }
%"class.WTF::VectorBufferBase.142" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.77"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.178" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.173 }
%class.scoped_refptr.173 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.174" = type { %"struct.std::__1::__atomic_base.175" }
%"struct.std::__1::__atomic_base.175" = type { %"struct.std::__1::__cxx_atomic_impl.176" }
%"struct.std::__1::__cxx_atomic_impl.176" = type { %"struct.std::__1::__cxx_atomic_base_impl.177" }
%"struct.std::__1::__cxx_atomic_base_impl.177" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

$_ZNK5blink14FileWriterBase5TraceEPNS_7VisitorE = comdat any

@_ZTVN5blink14FileWriterBaseE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FileWriterBase"*, %"class.blink::Visitor"*)* @_ZNK5blink14FileWriterBase5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::FileWriterBase"*)* @_ZN5blink14FileWriterBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::FileWriterBase"*)* @_ZN5blink14FileWriterBaseD0Ev to i8*), i8* bitcast (void (%"class.blink::FileWriterBase"*, i64)* @_ZN5blink14FileWriterBase8TruncateEl to i8*), i8* bitcast (void (%"class.blink::FileWriterBase"*, i64, %"class.WTF::String"*)* @_ZN5blink14FileWriterBase5WriteElRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::FileWriterBase"*)* @_ZN5blink14FileWriterBase6CancelEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink14FileWriterBaseD1Ev = hidden unnamed_addr alias void (%"class.blink::FileWriterBase"*), void (%"class.blink::FileWriterBase"*)* @_ZN5blink14FileWriterBaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FileWriterBaseD2Ev(%"class.blink::FileWriterBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink14FileWriterBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 3
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %3) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink14FileWriterBaseD0Ev(%"class.blink::FileWriterBase"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FileWriterBase10InitializeERKNS_4KURLEl(%"class.blink::FileWriterBase"*, %"class.blink::KURL"* dereferenceable(112), i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 2
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 3
  %6 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %5, %"class.blink::KURL"* dereferenceable(112) %1) #6
  ret void
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FileWriterBaseC2Ev(%"class.blink::FileWriterBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink14FileWriterBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 3
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %4) #6
  %5 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 4
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 5
  store i32 0, i32* %6, align 4
  ret void
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink14FileWriterBase12SeekInternalEl(%"class.blink::FileWriterBase"* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp slt i64 %4, %1
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = icmp slt i64 %1, 0
  %8 = select i1 %7, i64 %4, i64 0
  %9 = add nsw i64 %8, %1
  br label %10

10:                                               ; preds = %6, %2
  %11 = phi i64 [ %4, %2 ], [ %9, %6 ]
  %12 = icmp sgt i64 %11, 0
  %13 = select i1 %12, i64 %11, i64 0
  %14 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 1
  store i64 %13, i64* %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FileWriterBase8TruncateEl(%"class.blink::FileWriterBase"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 4
  store i32 2, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 3
  %5 = bitcast %"class.blink::FileWriterBase"* %0 to void (%"class.blink::FileWriterBase"*, %"class.blink::KURL"*, i64)***
  %6 = load void (%"class.blink::FileWriterBase"*, %"class.blink::KURL"*, i64)**, void (%"class.blink::FileWriterBase"*, %"class.blink::KURL"*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::FileWriterBase"*, %"class.blink::KURL"*, i64)*, void (%"class.blink::FileWriterBase"*, %"class.blink::KURL"*, i64)** %6, i64 6
  %8 = load void (%"class.blink::FileWriterBase"*, %"class.blink::KURL"*, i64)*, void (%"class.blink::FileWriterBase"*, %"class.blink::KURL"*, i64)** %7, align 8
  tail call void %8(%"class.blink::FileWriterBase"* %0, %"class.blink::KURL"* dereferenceable(112) %4, i64 %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FileWriterBase5WriteElRKN3WTF6StringE(%"class.blink::FileWriterBase"*, i64, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 4
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 3
  %6 = bitcast %"class.blink::FileWriterBase"* %0 to void (%"class.blink::FileWriterBase"*, %"class.blink::KURL"*, %"class.WTF::String"*, i64)***
  %7 = load void (%"class.blink::FileWriterBase"*, %"class.blink::KURL"*, %"class.WTF::String"*, i64)**, void (%"class.blink::FileWriterBase"*, %"class.blink::KURL"*, %"class.WTF::String"*, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::FileWriterBase"*, %"class.blink::KURL"*, %"class.WTF::String"*, i64)*, void (%"class.blink::FileWriterBase"*, %"class.blink::KURL"*, %"class.WTF::String"*, i64)** %7, i64 7
  %9 = load void (%"class.blink::FileWriterBase"*, %"class.blink::KURL"*, %"class.WTF::String"*, i64)*, void (%"class.blink::FileWriterBase"*, %"class.blink::KURL"*, %"class.WTF::String"*, i64)** %8, align 8
  tail call void %9(%"class.blink::FileWriterBase"* %0, %"class.blink::KURL"* dereferenceable(112) %5, %"class.WTF::String"* dereferenceable(8) %2, i64 %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FileWriterBase6CancelEv(%"class.blink::FileWriterBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %6
  store i32 1, i32* %7, align 4
  %11 = bitcast %"class.blink::FileWriterBase"* %0 to void (%"class.blink::FileWriterBase"*)***
  %12 = load void (%"class.blink::FileWriterBase"*)**, void (%"class.blink::FileWriterBase"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::FileWriterBase"*)*, void (%"class.blink::FileWriterBase"*)** %12, i64 8
  %14 = load void (%"class.blink::FileWriterBase"*)*, void (%"class.blink::FileWriterBase"*)** %13, align 8
  tail call void %14(%"class.blink::FileWriterBase"* %0) #6
  br label %15

15:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FileWriterBase9DidFinishEN4base4File5ErrorE(%"class.blink::FileWriterBase"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  br i1 %3, label %6, label %20

6:                                                ; preds = %2
  switch i32 %5, label %34 [
    i32 0, label %7
    i32 1, label %13
    i32 2, label %14
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 4
  store i32 0, i32* %8, align 8
  %9 = bitcast %"class.blink::FileWriterBase"* %0 to void (%"class.blink::FileWriterBase"*)***
  %10 = load void (%"class.blink::FileWriterBase"*)**, void (%"class.blink::FileWriterBase"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::FileWriterBase"*)*, void (%"class.blink::FileWriterBase"*)** %10, i64 11
  %12 = load void (%"class.blink::FileWriterBase"*)*, void (%"class.blink::FileWriterBase"*)** %11, align 8
  tail call void %12(%"class.blink::FileWriterBase"* %0) #6
  br label %34

13:                                               ; preds = %6
  store i32 2, i32* %4, align 4
  br label %34

14:                                               ; preds = %6
  store i32 0, i32* %4, align 4
  %15 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 4
  store i32 0, i32* %15, align 8
  %16 = bitcast %"class.blink::FileWriterBase"* %0 to void (%"class.blink::FileWriterBase"*, i32)***
  %17 = load void (%"class.blink::FileWriterBase"*, i32)**, void (%"class.blink::FileWriterBase"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::FileWriterBase"*, i32)*, void (%"class.blink::FileWriterBase"*, i32)** %17, i64 10
  %19 = load void (%"class.blink::FileWriterBase"*, i32)*, void (%"class.blink::FileWriterBase"*, i32)** %18, align 8
  tail call void %19(%"class.blink::FileWriterBase"* %0, i32 -12) #6
  br label %34

20:                                               ; preds = %2
  switch i32 %5, label %34 [
    i32 0, label %21
    i32 1, label %27
    i32 2, label %28
  ]

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 4
  store i32 0, i32* %22, align 8
  %23 = bitcast %"class.blink::FileWriterBase"* %0 to void (%"class.blink::FileWriterBase"*, i32)***
  %24 = load void (%"class.blink::FileWriterBase"*, i32)**, void (%"class.blink::FileWriterBase"*, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::FileWriterBase"*, i32)*, void (%"class.blink::FileWriterBase"*, i32)** %24, i64 10
  %26 = load void (%"class.blink::FileWriterBase"*, i32)*, void (%"class.blink::FileWriterBase"*, i32)** %25, align 8
  tail call void %26(%"class.blink::FileWriterBase"* %0, i32 %1) #6
  br label %34

27:                                               ; preds = %20
  store i32 2, i32* %4, align 4
  br label %34

28:                                               ; preds = %20
  store i32 0, i32* %4, align 4
  %29 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 4
  store i32 0, i32* %29, align 8
  %30 = bitcast %"class.blink::FileWriterBase"* %0 to void (%"class.blink::FileWriterBase"*, i32)***
  %31 = load void (%"class.blink::FileWriterBase"*, i32)**, void (%"class.blink::FileWriterBase"*, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::FileWriterBase"*, i32)*, void (%"class.blink::FileWriterBase"*, i32)** %31, i64 10
  %33 = load void (%"class.blink::FileWriterBase"*, i32)*, void (%"class.blink::FileWriterBase"*, i32)** %32, align 8
  tail call void %33(%"class.blink::FileWriterBase"* %0, i32 -12) #6
  br label %34

34:                                               ; preds = %28, %27, %21, %20, %14, %13, %7, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FileWriterBase10DidSucceedEv(%"class.blink::FileWriterBase"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %17 [
    i32 0, label %4
    i32 1, label %10
    i32 2, label %11
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 4
  store i32 0, i32* %5, align 8
  %6 = bitcast %"class.blink::FileWriterBase"* %0 to void (%"class.blink::FileWriterBase"*)***
  %7 = load void (%"class.blink::FileWriterBase"*)**, void (%"class.blink::FileWriterBase"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::FileWriterBase"*)*, void (%"class.blink::FileWriterBase"*)** %7, i64 11
  %9 = load void (%"class.blink::FileWriterBase"*)*, void (%"class.blink::FileWriterBase"*)** %8, align 8
  tail call void %9(%"class.blink::FileWriterBase"* %0) #6
  br label %17

10:                                               ; preds = %1
  store i32 2, i32* %2, align 4
  br label %17

11:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  %12 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 4
  store i32 0, i32* %12, align 8
  %13 = bitcast %"class.blink::FileWriterBase"* %0 to void (%"class.blink::FileWriterBase"*, i32)***
  %14 = load void (%"class.blink::FileWriterBase"*, i32)**, void (%"class.blink::FileWriterBase"*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::FileWriterBase"*, i32)*, void (%"class.blink::FileWriterBase"*, i32)** %14, i64 10
  %16 = load void (%"class.blink::FileWriterBase"*, i32)*, void (%"class.blink::FileWriterBase"*, i32)** %15, align 8
  tail call void %16(%"class.blink::FileWriterBase"* %0, i32 -12) #6
  br label %17

17:                                               ; preds = %1, %11, %10, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FileWriterBase7DidFailEN4base4File5ErrorE(%"class.blink::FileWriterBase"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %18 [
    i32 0, label %5
    i32 1, label %11
    i32 2, label %12
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 4
  store i32 0, i32* %6, align 8
  %7 = bitcast %"class.blink::FileWriterBase"* %0 to void (%"class.blink::FileWriterBase"*, i32)***
  %8 = load void (%"class.blink::FileWriterBase"*, i32)**, void (%"class.blink::FileWriterBase"*, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::FileWriterBase"*, i32)*, void (%"class.blink::FileWriterBase"*, i32)** %8, i64 10
  %10 = load void (%"class.blink::FileWriterBase"*, i32)*, void (%"class.blink::FileWriterBase"*, i32)** %9, align 8
  tail call void %10(%"class.blink::FileWriterBase"* %0, i32 %1) #6
  br label %18

11:                                               ; preds = %2
  store i32 2, i32* %3, align 4
  br label %18

12:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  %13 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 4
  store i32 0, i32* %13, align 8
  %14 = bitcast %"class.blink::FileWriterBase"* %0 to void (%"class.blink::FileWriterBase"*, i32)***
  %15 = load void (%"class.blink::FileWriterBase"*, i32)**, void (%"class.blink::FileWriterBase"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::FileWriterBase"*, i32)*, void (%"class.blink::FileWriterBase"*, i32)** %15, i64 10
  %17 = load void (%"class.blink::FileWriterBase"*, i32)*, void (%"class.blink::FileWriterBase"*, i32)** %16, align 8
  tail call void %17(%"class.blink::FileWriterBase"* %0, i32 -12) #6
  br label %18

18:                                               ; preds = %2, %12, %11, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FileWriterBase8DidWriteElb(%"class.blink::FileWriterBase"*, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %16 [
    i32 0, label %6
    i32 1, label %14
  ]

6:                                                ; preds = %3
  br i1 %2, label %7, label %9

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 4
  store i32 0, i32* %8, align 8
  br label %9

9:                                                ; preds = %7, %6
  %10 = bitcast %"class.blink::FileWriterBase"* %0 to void (%"class.blink::FileWriterBase"*, i64, i1)***
  %11 = load void (%"class.blink::FileWriterBase"*, i64, i1)**, void (%"class.blink::FileWriterBase"*, i64, i1)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::FileWriterBase"*, i64, i1)*, void (%"class.blink::FileWriterBase"*, i64, i1)** %11, i64 9
  %13 = load void (%"class.blink::FileWriterBase"*, i64, i1)*, void (%"class.blink::FileWriterBase"*, i64, i1)** %12, align 8
  tail call void %13(%"class.blink::FileWriterBase"* %0, i64 %1, i1 zeroext %2) #6
  br label %16

14:                                               ; preds = %3
  br i1 %2, label %15, label %16

15:                                               ; preds = %14
  store i32 2, i32* %4, align 4
  br label %16

16:                                               ; preds = %3, %14, %15, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FileWriterBase12FinishCancelEv(%"class.blink::FileWriterBase"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 5
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.blink::FileWriterBase", %"class.blink::FileWriterBase"* %0, i64 0, i32 4
  store i32 0, i32* %3, align 8
  %4 = bitcast %"class.blink::FileWriterBase"* %0 to void (%"class.blink::FileWriterBase"*, i32)***
  %5 = load void (%"class.blink::FileWriterBase"*, i32)**, void (%"class.blink::FileWriterBase"*, i32)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FileWriterBase"*, i32)*, void (%"class.blink::FileWriterBase"*, i32)** %5, i64 10
  %7 = load void (%"class.blink::FileWriterBase"*, i32)*, void (%"class.blink::FileWriterBase"*, i32)** %6, align 8
  tail call void %7(%"class.blink::FileWriterBase"* %0, i32 -12) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14FileWriterBase5TraceEPNS_7VisitorE(%"class.blink::FileWriterBase"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
