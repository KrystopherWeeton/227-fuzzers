; ModuleID = '../../third_party/blink/renderer/platform/graphics/paint/effect_paint_property_node.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/paint/effect_paint_property_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted", i8, i8, %class.scoped_refptr, i32, i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.0, %class.scoped_refptr.1, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.0 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.25" }
%"class.blink::PaintPropertyNode.25" = type { %"class.WTF::RefCounted.26", i8, i8, %class.scoped_refptr.0, i32, i32 }
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.22" }
%"class.blink::PaintPropertyNode.22" = type { %"class.WTF::RefCounted.23", i8, i8, %class.scoped_refptr.1, i32, i32 }
%"class.WTF::RefCounted.23" = type { %"class.base::RefCounted.24" }
%"class.base::RefCounted.24" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.7" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.4", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.3, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.3 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.15" }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { i32*, i32*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i32* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.42" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.35, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.36", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.29" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.35 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.60", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.60" = type { %"class.WTF::RefCounted.61", i8, i8, %class.scoped_refptr.35, i32, i32 }
%"class.WTF::RefCounted.61" = type { %"class.base::RefCounted.62" }
%"class.base::RefCounted.62" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.63" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.68", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.70" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.96" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.0, %"class.absl::optional.75", %class.scoped_refptr.80, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.75" = type { %"class.absl::optional_internal::optional_data.76" }
%"class.absl::optional_internal::optional_data.76" = type { %"class.absl::optional_internal::optional_data_base.77" }
%"class.absl::optional_internal::optional_data_base.77" = type { %"class.absl::optional_internal::optional_data_dtor_base.78" }
%"class.absl::optional_internal::optional_data_dtor_base.78" = type { i8, [3 x i8], %union.anon.79 }
%union.anon.79 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%class.scoped_refptr.80 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.94", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.81, i32, %"struct.std::__1::atomic.84", %"struct.std::__1::atomic.84", i8, i8 }>
%class.sk_sp.81 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.82, %class.SkTDArray.83, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.82 = type { i8*, i32, i32 }
%class.SkTDArray.83 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.89 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.84" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.89 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.90", [3 x i8] }
%"struct.std::__1::atomic.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__cxx_atomic_impl.92" }
%"struct.std::__1::__cxx_atomic_impl.92" = type { %"struct.std::__1::__cxx_atomic_base_impl.93" }
%"struct.std::__1::__cxx_atomic_base_impl.93" = type { i8 }
%"struct.std::__1::atomic.84" = type { %"struct.std::__1::__atomic_base.85" }
%"struct.std::__1::__atomic_base.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__cxx_atomic_impl.87" }
%"struct.std::__1::__cxx_atomic_impl.87" = type { %"struct.std::__1::__cxx_atomic_base_impl.88" }
%"struct.std::__1::__cxx_atomic_base_impl.88" = type { i8 }
%"class.WTF::RefCounted.94" = type { %"class.base::RefCounted.95" }
%"class.base::RefCounted.95" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector", i32, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%"class.blink::PropertyTreeState" = type { %"class.blink::PropertyTreeStateOrAlias" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::JSONObject" = type { %"class.blink::JSONValue.base", [4 x i8], %"class.WTF::HashMap", %"class.WTF::Vector.107" }
%"class.blink::JSONValue.base" = type <{ i32 (...)**, i32 }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::Vector.107" = type { %"class.WTF::VectorBuffer.108" }
%"class.WTF::VectorBuffer.108" = type { %"class.WTF::VectorBufferBase.109" }
%"class.WTF::VectorBufferBase.109" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.110 }
%class.scoped_refptr.110 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.111" }
%"struct.std::__1::atomic.111" = type { %"struct.std::__1::__atomic_base.112" }
%"struct.std::__1::__atomic_base.112" = type { %"struct.std::__1::__atomic_base.113" }
%"struct.std::__1::__atomic_base.113" = type { %"struct.std::__1::__cxx_atomic_impl.114" }
%"struct.std::__1::__cxx_atomic_impl.114" = type { %"struct.std::__1::__cxx_atomic_base_impl.115" }
%"struct.std::__1::__cxx_atomic_base_impl.115" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.123 }
%union.anon.123 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNK5blink17PaintPropertyNodeINS_30EffectPaintPropertyNodeOrAliasENS_23EffectPaintPropertyNodeEE10ToJSONBaseEv = comdat any

$_ZNK4base10RefCountedIN5blink30EffectPaintPropertyNodeOrAliasENS1_33PaintPropertyNodeRefCountedTraitsIS2_NS1_23EffectPaintPropertyNodeEEEE7ReleaseEv = comdat any

$_ZN5blink23EffectPaintPropertyNodeD2Ev = comdat any

$_ZN13scoped_refptrIKN5blink30EffectPaintPropertyNodeOrAliasEED2Ev = comdat any

$_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev = comdat any

$_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev = comdat any

$_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEE7ReleaseEPS2_ = comdat any

$_ZN5blink26TransformPaintPropertyNodeD2Ev = comdat any

$_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_ = comdat any

@_ZZN5blink23EffectPaintPropertyNode4RootEvE4root = internal unnamed_addr global %"class.blink::EffectPaintPropertyNode"* null, align 8
@_ZGVZN5blink23EffectPaintPropertyNode4RootEvE4root = internal global i64 0, align 8
@.str = private unnamed_addr constant [20 x i8] c"localTransformSpace\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%p\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"outputClip\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"filter\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"backdrop_filter\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"opacity\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"blendMode\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"directCompositingReasons\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"compositorElementId\00", align 1
@_ZN2cc9ElementId17kInvalidElementIdE = external local_unnamed_addr constant i64, align 8
@.str.9 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"is_alias\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"changed\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(152) %"class.blink::EffectPaintPropertyNode"* @_ZN5blink23EffectPaintPropertyNode4RootEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"struct.blink::EffectPaintPropertyNode::State", align 16
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink23EffectPaintPropertyNode4RootEvE4root to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %81, !prof !2

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink23EffectPaintPropertyNode4RootEvE4root) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %81, label %7

7:                                                ; preds = %4
  %8 = tail call noalias i8* @malloc(i64 152) #9
  %9 = bitcast %"struct.blink::EffectPaintPropertyNode::State"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 0
  %11 = tail call dereferenceable(96) %"class.blink::TransformPaintPropertyNode"* @_ZN5blink26TransformPaintPropertyNode4RootEv() #9
  %12 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 0, i32 0
  store %"class.blink::TransformPaintPropertyNodeOrAlias"* %12, %"class.blink::TransformPaintPropertyNodeOrAlias"** %13, align 16
  %14 = icmp eq %"class.blink::TransformPaintPropertyNode"* %11, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %16) #9
  br label %17

17:                                               ; preds = %7, %15
  %18 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 1
  %19 = tail call dereferenceable(168) %"class.blink::ClipPaintPropertyNode"* @_ZN5blink21ClipPaintPropertyNode4RootEv() #9
  %20 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %19, i64 0, i32 0
  %21 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %18, i64 0, i32 0
  store %"class.blink::ClipPaintPropertyNodeOrAlias"* %20, %"class.blink::ClipPaintPropertyNodeOrAlias"** %21, align 8
  %22 = icmp eq %"class.blink::ClipPaintPropertyNode"* %19, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %24) #9
  br label %25

25:                                               ; preds = %17, %23
  %26 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 2
  %27 = bitcast %"class.blink::CompositorFilterOperations"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %27, i8 0, i64 40, i1 false)
  %28 = getelementptr inbounds %"class.blink::CompositorFilterOperations", %"class.blink::CompositorFilterOperations"* %26, i64 0, i32 0
  call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* %28) #9
  %29 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 2, i32 1
  %30 = bitcast %"class.blink::FloatRect"* %29 to i8*
  %31 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 3
  %32 = bitcast %"class.std::__1::unique_ptr"* %31 to i64*
  %33 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 4
  %34 = bitcast %"class.blink::FloatRect"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false)
  store float 1.000000e+00, float* %33, align 16
  %35 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 5
  store i32 3, i32* %35, align 4
  %36 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 6
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 7, i32 0
  %38 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %38, i64* %37, align 16
  %39 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 8
  call void @_ZN2cc33DocumentTransitionSharedElementIdC1Ev(%"class.cc::DocumentTransitionSharedElementId"* %39) #9
  %40 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 9
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 10
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 11
  store i8 0, i8* %42, align 2
  %43 = bitcast i8* %8 to i32*
  store i32 1, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 0, i8* %44, align 4
  %45 = getelementptr inbounds i8, i8* %8, i64 5
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds i8, i8* %8, i64 8
  %47 = bitcast i8* %46 to %"class.blink::EffectPaintPropertyNodeOrAlias"**
  store %"class.blink::EffectPaintPropertyNodeOrAlias"* null, %"class.blink::EffectPaintPropertyNodeOrAlias"** %47, align 8
  %48 = getelementptr inbounds i8, i8* %8, i64 16
  %49 = bitcast i8* %48 to i32*
  store i32 -1, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %8, i64 20
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %8, i64 24
  %53 = bitcast %"struct.blink::EffectPaintPropertyNode::State"* %1 to <2 x i64>*
  %54 = load <2 x i64>, <2 x i64>* %53, align 16
  store %"class.blink::TransformPaintPropertyNodeOrAlias"* null, %"class.blink::TransformPaintPropertyNodeOrAlias"** %13, align 16
  %55 = bitcast i8* %52 to <2 x i64>*
  store <2 x i64> %54, <2 x i64>* %55, align 8
  store %"class.blink::ClipPaintPropertyNodeOrAlias"* null, %"class.blink::ClipPaintPropertyNodeOrAlias"** %21, align 8
  %56 = getelementptr inbounds i8, i8* %8, i64 40
  %57 = bitcast i8* %56 to %"class.cc::FilterOperations"*
  %58 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 2, i32 0
  call void @_ZN2cc16FilterOperationsC1ERKS0_(%"class.cc::FilterOperations"* %57, %"class.cc::FilterOperations"* dereferenceable(24) %58) #9
  %59 = getelementptr inbounds i8, i8* %8, i64 64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %30, i64 16, i1 false) #9
  %60 = getelementptr inbounds i8, i8* %8, i64 80
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 0, i32 0, i32 0, i32 0
  %62 = load i64, i64* %32, align 8
  store %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* null, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %61, align 8
  %63 = bitcast i8* %60 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds i8, i8* %8, i64 88
  %65 = bitcast float* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 16 %65, i64 24, i1 false) #9
  %66 = getelementptr inbounds i8, i8* %8, i64 112
  %67 = bitcast i8* %66 to %"class.cc::DocumentTransitionSharedElementId"*
  call void @_ZN2cc33DocumentTransitionSharedElementIdC1EOS0_(%"class.cc::DocumentTransitionSharedElementId"* %67, %"class.cc::DocumentTransitionSharedElementId"* dereferenceable(32) %39) #9
  %68 = getelementptr inbounds i8, i8* %8, i64 144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %40, i64 3, i1 false) #9
  %69 = icmp eq i8* %8, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %25
  %71 = bitcast i8* %8 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %71) #9
  %72 = bitcast i8* %8 to %"class.base::RefCounted"*
  call void @_ZNK4base10RefCountedIN5blink30EffectPaintPropertyNodeOrAliasENS1_33PaintPropertyNodeRefCountedTraitsIS2_NS1_23EffectPaintPropertyNodeEEEE7ReleaseEv(%"class.base::RefCounted"* nonnull %72) #9
  br label %73

73:                                               ; preds = %25, %70
  call void @_ZN2cc33DocumentTransitionSharedElementIdD1Ev(%"class.cc::DocumentTransitionSharedElementId"* %39) #9
  %74 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::State", %"struct.blink::EffectPaintPropertyNode::State"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %75 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %74, align 8
  store %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* null, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %74, align 8
  %76 = icmp eq %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo", %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %75, i64 0, i32 0, i32 0
  call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* %78) #9
  %79 = bitcast %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %75 to i8*
  call void @_ZdlPv(i8* %79) #10
  br label %80

80:                                               ; preds = %73, %77
  call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* %58) #9
  call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.1* %18) #9
  call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %9) #9
  store i8* %8, i8** bitcast (%"class.blink::EffectPaintPropertyNode"** @_ZZN5blink23EffectPaintPropertyNode4RootEvE4root to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink23EffectPaintPropertyNode4RootEvE4root) #9
  br label %81

81:                                               ; preds = %4, %80, %0
  %82 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** @_ZZN5blink23EffectPaintPropertyNode4RootEvE4root, align 8
  ret %"class.blink::EffectPaintPropertyNode"* %82
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(96) %"class.blink::TransformPaintPropertyNode"* @_ZN5blink26TransformPaintPropertyNode4RootEv() local_unnamed_addr #3

declare dereferenceable(168) %"class.blink::ClipPaintPropertyNode"* @_ZN5blink21ClipPaintPropertyNode4RootEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2cc33DocumentTransitionSharedElementIdC1Ev(%"class.cc::DocumentTransitionSharedElementId"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink30EffectPaintPropertyNodeOrAlias7ChangedENS_23PaintPropertyChangeTypeERKNS_17PropertyTreeStateEPKNS_33TransformPaintPropertyNodeOrAliasE(%"class.blink::EffectPaintPropertyNodeOrAlias"*, i8 zeroext, %"class.blink::PropertyTreeState"* nocapture readonly dereferenceable(24), %"class.blink::TransformPaintPropertyNodeOrAlias"* readnone) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %2, i64 0, i32 0, i32 2
  %6 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %5 to %"class.blink::EffectPaintPropertyNode"**
  %7 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %6, align 8
  %8 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %0, null
  %9 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %7, i64 0, i32 0
  %10 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %9, %0
  %11 = or i1 %8, %10
  br i1 %11, label %43, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.blink::PropertyTreeState"* %2 to %"class.blink::TransformPaintPropertyNode"**
  %14 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %14, i64 0, i32 0
  br label %16

16:                                               ; preds = %12, %37
  %17 = phi %"class.blink::EffectPaintPropertyNodeOrAlias"* [ %0, %12 ], [ %39, %37 ]
  %18 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %17, i64 0, i32 0, i32 2
  %19 = load i8, i8* %18, align 1
  %20 = icmp ult i8 %19, %1
  br i1 %20, label %21, label %43

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %17, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 4, !range !3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %17, i64 1
  %27 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %26 to %"class.blink::TransformPaintPropertyNodeOrAlias"**
  %28 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %17, i64 1, i32 0, i32 4
  %30 = bitcast i32* %29 to %"class.blink::CompositorFilterOperations"*
  %31 = tail call zeroext i1 @_ZNK5blink26CompositorFilterOperations24HasFilterThatMovesPixelsEv(%"class.blink::CompositorFilterOperations"* %30) #9
  %32 = xor i1 %31, true
  %33 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %28, %3
  %34 = or i1 %33, %32
  br i1 %34, label %37, label %35

35:                                               ; preds = %25
  %36 = tail call zeroext i1 @_ZNK5blink33TransformPaintPropertyNodeOrAlias7ChangedENS_23PaintPropertyChangeTypeERKS0_(%"class.blink::TransformPaintPropertyNodeOrAlias"* %28, i8 zeroext %1, %"class.blink::TransformPaintPropertyNodeOrAlias"* dereferenceable(24) %15) #9
  br i1 %36, label %43, label %37

37:                                               ; preds = %21, %25, %35
  %38 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %17, i64 0, i32 0, i32 3, i32 0
  %39 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %38, align 8
  %40 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %39, null
  %41 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %39, %9
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %16

43:                                               ; preds = %37, %16, %35, %4
  %44 = phi i1 [ false, %4 ], [ true, %35 ], [ true, %16 ], [ false, %37 ]
  ret i1 %44
}

declare zeroext i1 @_ZNK5blink33TransformPaintPropertyNodeOrAlias7ChangedENS_23PaintPropertyChangeTypeERKS0_(%"class.blink::TransformPaintPropertyNodeOrAlias"*, i8 zeroext, %"class.blink::TransformPaintPropertyNodeOrAlias"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink23EffectPaintPropertyNode7MapRectERKNS_9FloatRectE(%"class.blink::EffectPaintPropertyNode"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 1, i32 2
  %4 = tail call zeroext i1 @_ZNK5blink26CompositorFilterOperations7IsEmptyEv(%"class.blink::CompositorFilterOperations"* %3) #9
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  %6 = bitcast %"class.blink::FloatRect"* %1 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1
  %9 = bitcast %"class.blink::FloatSize"* %8 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  br label %15

11:                                               ; preds = %2
  %12 = tail call { <2 x float>, <2 x float> } @_ZNK5blink26CompositorFilterOperations7MapRectERKNS_9FloatRectE(%"class.blink::CompositorFilterOperations"* %3, %"class.blink::FloatRect"* dereferenceable(16) %1) #9
  %13 = extractvalue { <2 x float>, <2 x float> } %12, 0
  %14 = extractvalue { <2 x float>, <2 x float> } %12, 1
  br label %15

15:                                               ; preds = %11, %5
  %16 = phi <2 x float> [ %7, %5 ], [ %13, %11 ]
  %17 = phi <2 x float> [ %10, %5 ], [ %14, %11 ]
  %18 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %16, 0
  %19 = insertvalue { <2 x float>, <2 x float> } %18, <2 x float> %17, 1
  ret { <2 x float>, <2 x float> } %19
}

declare zeroext i1 @_ZNK5blink26CompositorFilterOperations7IsEmptyEv(%"class.blink::CompositorFilterOperations"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare { <2 x float>, <2 x float> } @_ZNK5blink26CompositorFilterOperations7MapRectERKNS_9FloatRectE(%"class.blink::CompositorFilterOperations"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JSONObject"* @_ZNK5blink23EffectPaintPropertyNode6ToJSONEv(%"class.blink::EffectPaintPropertyNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 0, i32 0
  %19 = tail call %"class.blink::JSONObject"* @_ZNK5blink17PaintPropertyNodeINS_30EffectPaintPropertyNodeOrAliasENS_23EffectPaintPropertyNodeEE10ToJSONBaseEv(%"class.blink::PaintPropertyNode"* %18)
  %20 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 19) #9
  %21 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %22, align 8
  %24 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), %"class.blink::TransformPaintPropertyNodeOrAlias"* %23) #9
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %25, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %19, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #9
  br label %41

41:                                               ; preds = %1, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #9
  br label %58

58:                                               ; preds = %41, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  %59 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i64 10) #9
  %60 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #9
  %61 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 1, i32 1, i32 0
  %62 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %61, align 8
  %63 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), %"class.blink::ClipPaintPropertyNodeOrAlias"* %62) #9
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %19, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #9
  br label %80

80:                                               ; preds = %58, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #9
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #9
  br label %97

97:                                               ; preds = %80, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #9
  %98 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 1, i32 2
  %99 = call zeroext i1 @_ZNK5blink26CompositorFilterOperations7IsEmptyEv(%"class.blink::CompositorFilterOperations"* %98) #9
  br i1 %99, label %138, label %100

100:                                              ; preds = %97
  %101 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i64 6) #9
  %102 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #9
  %103 = call %"class.WTF::StringImpl"* @_ZNK5blink26CompositorFilterOperations8ToStringEv(%"class.blink::CompositorFilterOperations"* %98) #9
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %104, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %19, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #9
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #9
  br label %120

120:                                              ; preds = %100, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #9
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #9
  br label %137

137:                                              ; preds = %120, %133, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #9
  br label %138

138:                                              ; preds = %137, %97
  %139 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0
  %140 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %139, align 8
  %141 = icmp eq %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %140, null
  br i1 %141, label %181, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo", %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %140, i64 0, i32 0
  %144 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 15) #9
  %145 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #9
  %146 = call %"class.WTF::StringImpl"* @_ZNK5blink26CompositorFilterOperations8ToStringEv(%"class.blink::CompositorFilterOperations"* nonnull %143) #9
  %147 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %146, %"class.WTF::StringImpl"** %147, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %19, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #9
  br label %163

163:                                              ; preds = %142, %159, %162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #9
  %164 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #9
  br label %180

180:                                              ; preds = %163, %176, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #9
  br label %181

181:                                              ; preds = %138, %180
  %182 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 1, i32 4
  %183 = load float, float* %182, align 8
  %184 = fcmp une float %183, 1.000000e+00
  br i1 %184, label %185, label %206

185:                                              ; preds = %181
  %186 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i64 7) #9
  %187 = load float, float* %182, align 8
  %188 = fpext float %187 to double
  call void @_ZN5blink10JSONObject9SetDoubleERKN3WTF6StringEd(%"class.blink::JSONObject"* %19, %"class.WTF::String"* nonnull dereferenceable(8) %10, double %188) #9
  %189 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %205, label %192

192:                                              ; preds = %185
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  br i1 %196, label %199, label %201

199:                                              ; preds = %192
  %200 = add i32 %198, -1
  store i32 %200, i32* %197, align 4
  br label %201

201:                                              ; preds = %199, %192
  %202 = phi i32 [ %200, %199 ], [ %198, %192 ]
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %201
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %190) #9
  br label %205

205:                                              ; preds = %185, %201, %204
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #9
  br label %206

206:                                              ; preds = %205, %181
  %207 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 1, i32 5
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, 3
  br i1 %209, label %254, label %210

210:                                              ; preds = %206
  %211 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i64 9) #9
  %212 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %212) #9
  %213 = load i32, i32* %207, align 4
  %214 = call i8* @_Z16SkBlendMode_Name11SkBlendMode(i32 %213) #9
  %215 = icmp eq i8* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %210
  %217 = call i64 @strlen(i8* nonnull %214) #11
  br label %218

218:                                              ; preds = %210, %216
  %219 = phi i64 [ %217, %216 ], [ 0, %210 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* %214, i64 %219) #9
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %19, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::String"* nonnull dereferenceable(8) %12) #9
  %220 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #9
  br label %236

236:                                              ; preds = %218, %232, %235
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %212) #9
  %237 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #9
  br label %253

253:                                              ; preds = %236, %249, %252
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211) #9
  br label %254

254:                                              ; preds = %206, %253
  %255 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 1, i32 6
  %256 = load i64, i64* %255, align 8
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %297, label %258

258:                                              ; preds = %254
  %259 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %259) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0), i64 24) #9
  %260 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260) #9
  %261 = load i64, i64* %255, align 8
  %262 = call %"class.WTF::StringImpl"* @_ZN5blink17CompositingReason8ToStringEm(i64 %261) #9
  %263 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %262, %"class.WTF::StringImpl"** %263, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %19, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.WTF::String"* nonnull dereferenceable(8) %14) #9
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %263, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %265, label %279, label %266

266:                                              ; preds = %258
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 0
  %272 = load i32, i32* %271, align 4
  br i1 %270, label %273, label %275

273:                                              ; preds = %266
  %274 = add i32 %272, -1
  store i32 %274, i32* %271, align 4
  br label %275

275:                                              ; preds = %273, %266
  %276 = phi i32 [ %274, %273 ], [ %272, %266 ]
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %275
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %264) #9
  br label %279

279:                                              ; preds = %258, %275, %278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260) #9
  %280 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %279
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #9
  br label %296

296:                                              ; preds = %279, %292, %295
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %259) #9
  br label %297

297:                                              ; preds = %254, %296
  %298 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 1, i32 7
  %299 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %298, i64 0, i32 0
  %300 = load i64, i64* %299, align 8
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %360, label %302

302:                                              ; preds = %297
  %303 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %303) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i64 19) #9
  %304 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %304) #9
  %305 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %305) #9
  call void @_ZNK2cc9ElementId8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %17, %"struct.cc::ElementId"* %298) #9
  %306 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %307 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %306, i64 0, i32 1, i32 0
  %308 = load i8, i8* %307, align 1
  %309 = icmp slt i8 %308, 0
  br i1 %309, label %310, label %314

310:                                              ; preds = %302
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, null
  br i1 %313, label %317, label %314

314:                                              ; preds = %302, %310
  %315 = phi i8* [ %312, %310 ], [ %305, %302 ]
  %316 = call i64 @strlen(i8* nonnull %315) #11
  br label %317

317:                                              ; preds = %310, %314
  %318 = phi i8* [ %315, %314 ], [ null, %310 ]
  %319 = phi i64 [ %316, %314 ], [ 0, %310 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* %318, i64 %319) #9
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %19, %"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.WTF::String"* nonnull dereferenceable(8) %16) #9
  %320 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %320, align 8
  %322 = icmp eq %"class.WTF::StringImpl"* %321, null
  br i1 %322, label %336, label %323

323:                                              ; preds = %317
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 0
  %329 = load i32, i32* %328, align 4
  br i1 %327, label %330, label %332

330:                                              ; preds = %323
  %331 = add i32 %329, -1
  store i32 %331, i32* %328, align 4
  br label %332

332:                                              ; preds = %330, %323
  %333 = phi i32 [ %331, %330 ], [ %329, %323 ]
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %336

335:                                              ; preds = %332
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %321) #9
  br label %336

336:                                              ; preds = %317, %332, %335
  %337 = load i8, i8* %307, align 1
  %338 = icmp slt i8 %337, 0
  br i1 %338, label %339, label %342

339:                                              ; preds = %336
  %340 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load i8*, i8** %340, align 8
  call void @_ZdlPv(i8* %341) #10
  br label %342

342:                                              ; preds = %336, %339
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %305) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304) #9
  %343 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %344 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %343, align 8
  %345 = icmp eq %"class.WTF::StringImpl"* %344, null
  br i1 %345, label %359, label %346

346:                                              ; preds = %342
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %348 = load atomic i32, i32* %347 monotonic, align 4
  %349 = and i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 0
  %352 = load i32, i32* %351, align 4
  br i1 %350, label %353, label %355

353:                                              ; preds = %346
  %354 = add i32 %352, -1
  store i32 %354, i32* %351, align 4
  br label %355

355:                                              ; preds = %353, %346
  %356 = phi i32 [ %354, %353 ], [ %352, %346 ]
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %358, label %359

358:                                              ; preds = %355
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %344) #9
  br label %359

359:                                              ; preds = %342, %355, %358
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %303) #9
  br label %360

360:                                              ; preds = %297, %359
  ret %"class.blink::JSONObject"* %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::JSONObject"* @_ZNK5blink17PaintPropertyNodeINS_30EffectPaintPropertyNodeOrAliasENS_23EffectPaintPropertyNodeEE10ToJSONBaseEv(%"class.blink::PaintPropertyNode"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call noalias i8* @malloc(i64 56) #9
  %8 = bitcast i8* %7 to %"class.blink::JSONObject"*
  tail call void @_ZN5blink10JSONObjectC1Ev(%"class.blink::JSONObject"* %8) #9
  %9 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %0, i64 0, i32 3, i32 0
  %10 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %9, align 8
  %11 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %10, null
  br i1 %11, label %51, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i64 6) #9
  %14 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %9, align 8
  %16 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), %"class.blink::EffectPaintPropertyNodeOrAlias"* %15) #9
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #9
  br label %33

33:                                               ; preds = %12, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #9
  br label %50

50:                                               ; preds = %33, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  br label %51

51:                                               ; preds = %1, %50
  %52 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %0, i64 0, i32 1
  %53 = load i8, i8* %52, align 4, !range !3
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i64 8) #9
  call void @_ZN5blink10JSONObject10SetBooleanERKN3WTF6StringEb(%"class.blink::JSONObject"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, i1 zeroext true) #9
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #9
  br label %73

73:                                               ; preds = %55, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %74

74:                                               ; preds = %51, %73
  %75 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %0, i64 0, i32 2
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %122, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i64 7) #9
  %80 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #9
  %81 = load i8, i8* %75, align 1
  %82 = call i8* @_ZN5blink31PaintPropertyChangeTypeToStringENS_23PaintPropertyChangeTypeE(i8 zeroext %81) #9
  %83 = icmp eq i8* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %78
  %85 = call i64 @strlen(i8* nonnull %82) #11
  br label %86

86:                                               ; preds = %78, %84
  %87 = phi i64 [ %85, %84 ], [ 0, %78 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %82, i64 %87) #9
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #9
  br label %104

104:                                              ; preds = %86, %100, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #9
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #9
  br label %121

121:                                              ; preds = %104, %117, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #9
  br label %122

122:                                              ; preds = %121, %74
  ret %"class.blink::JSONObject"* %8
}

declare void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink26CompositorFilterOperations8ToStringEv(%"class.blink::CompositorFilterOperations"*) local_unnamed_addr #3

declare void @_ZN5blink10JSONObject9SetDoubleERKN3WTF6StringEd(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), double) local_unnamed_addr #3

declare i8* @_Z16SkBlendMode_Name11SkBlendMode(i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink17CompositingReason8ToStringEm(i64) local_unnamed_addr #3

declare void @_ZNK2cc9ElementId8ToStringEv(%"class.std::__1::basic_string"* sret, %"struct.cc::ElementId"*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base10RefCountedIN5blink30EffectPaintPropertyNodeOrAliasENS1_33PaintPropertyNodeRefCountedTraitsIS2_NS1_23EffectPaintPropertyNodeEEEE7ReleaseEv(%"class.base::RefCounted"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %2) #9
  %3 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %61

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 1
  %8 = bitcast %"class.base::RefCounted"* %7 to i8*
  %9 = load i8, i8* %8, align 4, !range !3
  %10 = icmp eq i8 %9, 0
  %11 = icmp eq %"class.base::RefCounted"* %0, null
  br i1 %10, label %17, label %12

12:                                               ; preds = %6
  br i1 %11, label %61, label %13

13:                                               ; preds = %12
  %14 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 2
  %15 = bitcast %"class.base::RefCounted"* %14 to %class.scoped_refptr*
  tail call void @_ZN13scoped_refptrIKN5blink30EffectPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr* %15) #9
  %16 = bitcast %"class.base::RefCounted"* %0 to i8*
  tail call void @free(i8* %16) #9
  br label %61

17:                                               ; preds = %6
  br i1 %11, label %61, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 6
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 28
  %21 = bitcast %"class.base::RefCounted"* %20 to %"class.cc::DocumentTransitionSharedElementId"*
  tail call void @_ZN2cc33DocumentTransitionSharedElementIdD1Ev(%"class.cc::DocumentTransitionSharedElementId"* %21) #9
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 20
  %23 = bitcast %"class.base::RefCounted"* %22 to %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"**
  %24 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %23, align 8
  store %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* null, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %23, align 8
  %25 = icmp eq %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo", %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %24, i64 0, i32 0, i32 0
  tail call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* %27) #9
  %28 = bitcast %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %24 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %26, %18
  %30 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 10
  %31 = bitcast %"class.base::RefCounted"* %30 to %"class.cc::FilterOperations"*
  tail call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* %31) #9
  %32 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 8
  %33 = bitcast %"class.base::RefCounted"* %32 to %class.scoped_refptr.1*
  tail call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.1* %33) #9
  %34 = bitcast %"class.base::RefCounted"* %19 to %class.scoped_refptr.0*
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* %34) #9
  %35 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 2
  %36 = bitcast %"class.base::RefCounted"* %35 to %"class.blink::EffectPaintPropertyNodeOrAlias"**
  %37 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %36, align 8
  %38 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %37, null
  br i1 %38, label %59, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %40) #9
  %41 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %59

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %37, i64 0, i32 0, i32 1
  %46 = load i8, i8* %45, align 4, !range !3
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %56, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %37, i64 0, i32 0, i32 3, i32 0
  %50 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %49, align 8
  %51 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %50, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base10RefCountedIN5blink30EffectPaintPropertyNodeOrAliasENS1_33PaintPropertyNodeRefCountedTraitsIS2_NS1_23EffectPaintPropertyNodeEEEE7ReleaseEv(%"class.base::RefCounted"* %53) #9
  br label %54

54:                                               ; preds = %52, %48
  %55 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %37 to i8*
  tail call void @free(i8* %55) #9
  br label %59

56:                                               ; preds = %44
  %57 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %37 to %"class.blink::EffectPaintPropertyNode"*
  tail call void @_ZN5blink23EffectPaintPropertyNodeD2Ev(%"class.blink::EffectPaintPropertyNode"* nonnull %57) #9
  %58 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %37 to i8*
  tail call void @free(i8* %58) #9
  br label %59

59:                                               ; preds = %39, %56, %54, %29
  %60 = bitcast %"class.base::RefCounted"* %0 to i8*
  tail call void @free(i8* %60) #9
  br label %61

61:                                               ; preds = %59, %17, %13, %12, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23EffectPaintPropertyNodeD2Ev(%"class.blink::EffectPaintPropertyNode"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 1, i32 8
  tail call void @_ZN2cc33DocumentTransitionSharedElementIdD1Ev(%"class.cc::DocumentTransitionSharedElementId"* %2) #9
  %3 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %3, align 8
  store %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* null, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %3, align 8
  %5 = icmp eq %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo", %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %4, i64 0, i32 0, i32 0
  tail call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* %7) #9
  %8 = bitcast %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %4 to i8*
  tail call void @_ZdlPv(i8* %8) #10
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 1, i32 2, i32 0
  tail call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* %10) #9
  %11 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 1, i32 1
  tail call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.1* %11) #9
  %12 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* %12) #9
  %13 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  %14 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %13, align 8
  %15 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %14, null
  br i1 %15, label %36, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #9
  %18 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %36

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %14, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 4, !range !3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %14, i64 0, i32 0, i32 3, i32 0
  %27 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %26, align 8
  %28 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base10RefCountedIN5blink30EffectPaintPropertyNodeOrAliasENS1_33PaintPropertyNodeRefCountedTraitsIS2_NS1_23EffectPaintPropertyNodeEEEE7ReleaseEv(%"class.base::RefCounted"* %30) #9
  br label %31

31:                                               ; preds = %29, %25
  %32 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %14 to i8*
  tail call void @free(i8* %32) #9
  br label %36

33:                                               ; preds = %21
  %34 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %14 to %"class.blink::EffectPaintPropertyNode"*
  tail call void @_ZN5blink23EffectPaintPropertyNodeD2Ev(%"class.blink::EffectPaintPropertyNode"* nonnull %34) #9
  %35 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %14 to i8*
  tail call void @free(i8* %35) #9
  ret void

36:                                               ; preds = %16, %31, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink30EffectPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %3 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %2, align 8
  %4 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #9
  %7 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink30EffectPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr* %15) #9
  %16 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %16) #9
  ret void

17:                                               ; preds = %10
  %18 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %3 to %"class.blink::EffectPaintPropertyNode"*
  tail call void @_ZN5blink23EffectPaintPropertyNodeD2Ev(%"class.blink::EffectPaintPropertyNode"* nonnull %18) #9
  %19 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %19) #9
  br label %20

20:                                               ; preds = %5, %17, %1
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"*) unnamed_addr #3

declare void @_ZN2cc33DocumentTransitionSharedElementIdC1EOS0_(%"class.cc::DocumentTransitionSharedElementId"*, %"class.cc::DocumentTransitionSharedElementId"* dereferenceable(32)) unnamed_addr #3

declare void @_ZN2cc16FilterOperationsC1ERKS0_(%"class.cc::FilterOperations"*, %"class.cc::FilterOperations"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc33DocumentTransitionSharedElementIdD1Ev(%"class.cc::DocumentTransitionSharedElementId"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.1*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %0, i64 0, i32 0
  %3 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %2, align 8
  %4 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, null
  br i1 %4, label %59, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #9
  %7 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %59

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.1* %15) #9
  %16 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %16) #9
  ret void

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 6, i32 0, i32 4
  %19 = bitcast i32* %18 to %"class.blink::GeometryMapperClipCache"**
  %20 = load %"class.blink::GeometryMapperClipCache"*, %"class.blink::GeometryMapperClipCache"** %19, align 8
  store %"class.blink::GeometryMapperClipCache"* null, %"class.blink::GeometryMapperClipCache"** %19, align 8
  %21 = icmp eq %"class.blink::GeometryMapperClipCache"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GeometryMapperClipCache", %"class.blink::GeometryMapperClipCache"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"** %23, align 8
  %25 = icmp eq %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"* %24, null
  %26 = bitcast %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"* %24 to i8*
  br i1 %25, label %33, label %27, !prof !4

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::GeometryMapperClipCache", %"class.blink::GeometryMapperClipCache"* %20, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31, !prof !5

31:                                               ; preds = %27
  store i32 0, i32* %28, align 4
  br label %32

32:                                               ; preds = %31, %27
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #9
  br label %33

33:                                               ; preds = %32, %22
  %34 = bitcast %"class.blink::GeometryMapperClipCache"* %20 to i8*
  tail call void @free(i8* %34) #9
  br label %35

35:                                               ; preds = %33, %17
  %36 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 1
  %37 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 2, i32 0, i32 3
  %38 = bitcast %class.scoped_refptr.1* %37 to %"class.blink::RefCountedPath"**
  %39 = load %"class.blink::RefCountedPath"*, %"class.blink::RefCountedPath"** %38, align 8
  %40 = icmp eq %"class.blink::RefCountedPath"* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::RefCountedPath", %"class.blink::RefCountedPath"* %39, i64 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.base::RefCounted.95", %"class.base::RefCounted.95"* %42, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %43) #9
  %44 = getelementptr inbounds %"class.base::RefCounted.95", %"class.base::RefCounted.95"* %42, i64 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.base::RefCounted.95", %"class.base::RefCounted.95"* %42, i64 -4
  %49 = bitcast %"class.base::RefCounted.95"* %48 to %"class.blink::Path"*
  tail call void @_ZN5blink4PathD2Ev(%"class.blink::Path"* nonnull %49) #9
  %50 = bitcast %"class.base::RefCounted.95"* %48 to i8*
  tail call void @free(i8* %50) #9
  br label %51

51:                                               ; preds = %47, %41, %35
  %52 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %36 to %class.scoped_refptr.0*
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* %52) #9
  %53 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 3, i32 0
  %54 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %53, align 8
  %55 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %54, null
  br i1 %55, label %57, label %56

56:                                               ; preds = %51
  tail call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEE7ReleaseEPS2_(%"class.blink::ClipPaintPropertyNodeOrAlias"* nonnull %54) #9
  br label %57

57:                                               ; preds = %51, %56
  %58 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %58) #9
  br label %59

59:                                               ; preds = %5, %57, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %0, i64 0, i32 0
  %3 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %2, align 8
  %4 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #9
  %7 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* %15) #9
  %16 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %16) #9
  ret void

17:                                               ; preds = %10
  %18 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %3 to %"class.blink::TransformPaintPropertyNode"*
  tail call void @_ZN5blink26TransformPaintPropertyNodeD2Ev(%"class.blink::TransformPaintPropertyNode"* nonnull %18) #9
  %19 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %19) #9
  br label %20

20:                                               ; preds = %5, %17, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEE7ReleaseEPS2_(%"class.blink::ClipPaintPropertyNodeOrAlias"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %2) #9
  %3 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %58

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 4, !range !3
  %9 = icmp eq i8 %8, 0
  %10 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, null
  br i1 %9, label %15, label %11

11:                                               ; preds = %6
  br i1 %10, label %58, label %12

12:                                               ; preds = %11
  %13 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 0, i32 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.1* %13) #9
  %14 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %0 to i8*
  tail call void @free(i8* %14) #9
  br label %58

15:                                               ; preds = %6
  br i1 %10, label %58, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 6, i32 0, i32 4
  %18 = bitcast i32* %17 to %"class.blink::GeometryMapperClipCache"**
  %19 = load %"class.blink::GeometryMapperClipCache"*, %"class.blink::GeometryMapperClipCache"** %18, align 8
  store %"class.blink::GeometryMapperClipCache"* null, %"class.blink::GeometryMapperClipCache"** %18, align 8
  %20 = icmp eq %"class.blink::GeometryMapperClipCache"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::GeometryMapperClipCache", %"class.blink::GeometryMapperClipCache"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"** %22, align 8
  %24 = icmp eq %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"* %23, null
  %25 = bitcast %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"* %23 to i8*
  br i1 %24, label %32, label %26, !prof !4

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::GeometryMapperClipCache", %"class.blink::GeometryMapperClipCache"* %19, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30, !prof !5

30:                                               ; preds = %26
  store i32 0, i32* %27, align 4
  br label %31

31:                                               ; preds = %30, %26
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %25) #9
  br label %32

32:                                               ; preds = %31, %21
  %33 = bitcast %"class.blink::GeometryMapperClipCache"* %19 to i8*
  tail call void @free(i8* %33) #9
  br label %34

34:                                               ; preds = %32, %16
  %35 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 1
  %36 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 2, i32 0, i32 3
  %37 = bitcast %class.scoped_refptr.1* %36 to %"class.blink::RefCountedPath"**
  %38 = load %"class.blink::RefCountedPath"*, %"class.blink::RefCountedPath"** %37, align 8
  %39 = icmp eq %"class.blink::RefCountedPath"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::RefCountedPath", %"class.blink::RefCountedPath"* %38, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.base::RefCounted.95", %"class.base::RefCounted.95"* %41, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #9
  %43 = getelementptr inbounds %"class.base::RefCounted.95", %"class.base::RefCounted.95"* %41, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.95", %"class.base::RefCounted.95"* %41, i64 -4
  %48 = bitcast %"class.base::RefCounted.95"* %47 to %"class.blink::Path"*
  tail call void @_ZN5blink4PathD2Ev(%"class.blink::Path"* nonnull %48) #9
  %49 = bitcast %"class.base::RefCounted.95"* %47 to i8*
  tail call void @free(i8* %49) #9
  br label %50

50:                                               ; preds = %46, %40, %34
  %51 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %35 to %class.scoped_refptr.0*
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* %51) #9
  %52 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 0, i32 0, i32 3, i32 0
  %53 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %52, align 8
  %54 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %50
  tail call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEE7ReleaseEPS2_(%"class.blink::ClipPaintPropertyNodeOrAlias"* nonnull %53) #9
  br label %56

56:                                               ; preds = %50, %55
  %57 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %0 to i8*
  tail call void @free(i8* %57) #9
  br label %58

58:                                               ; preds = %11, %12, %15, %56, %1
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4PathD2Ev(%"class.blink::Path"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26TransformPaintPropertyNodeD2Ev(%"class.blink::TransformPaintPropertyNode"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::GeometryMapperTransformCache"*, %"class.blink::GeometryMapperTransformCache"** %2, align 8
  store %"class.blink::GeometryMapperTransformCache"* null, %"class.blink::GeometryMapperTransformCache"** %2, align 8
  %4 = icmp eq %"class.blink::GeometryMapperTransformCache"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::GeometryMapperTransformCache", %"class.blink::GeometryMapperTransformCache"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::GeometryMapperTransformCache::ScreenTransform"*, %"struct.blink::GeometryMapperTransformCache::ScreenTransform"** %6, align 8
  store %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* null, %"struct.blink::GeometryMapperTransformCache::ScreenTransform"** %6, align 8
  %8 = icmp eq %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::GeometryMapperTransformCache", %"class.blink::GeometryMapperTransformCache"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"*, %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"** %12, align 8
  store %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* null, %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"** %12, align 8
  %14 = icmp eq %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %11
  %18 = bitcast %"class.blink::GeometryMapperTransformCache"* %3 to i8*
  tail call void @free(i8* %18) #9
  br label %19

19:                                               ; preds = %1, %17
  %20 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %21 = load %"struct.cc::StickyPositionConstraint"*, %"struct.cc::StickyPositionConstraint"** %20, align 8
  store %"struct.cc::StickyPositionConstraint"* null, %"struct.cc::StickyPositionConstraint"** %20, align 8
  %22 = icmp eq %"struct.cc::StickyPositionConstraint"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %21, i64 0, i32 0
  tail call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %23, %19
  %26 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 1, i32 0
  %27 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %26, align 8
  %28 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #9
  %31 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"* nonnull %27) #9
  br label %35

35:                                               ; preds = %34, %29, %25
  %36 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %36, align 8
  store %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* null, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %36, align 8
  %38 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = bitcast %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %37 to i8*
  tail call void @_ZdlPv(i8* %40) #10
  br label %41

41:                                               ; preds = %35, %39
  %42 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  %43 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %42, align 8
  %44 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %43, null
  br i1 %44, label %60, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %46) #9
  %47 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %60

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %43, i64 0, i32 0, i32 1
  %52 = load i8, i8* %51, align 4, !range !3
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %43, i64 0, i32 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* %55) #9
  %56 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %43 to i8*
  tail call void @free(i8* %56) #9
  br label %60

57:                                               ; preds = %50
  %58 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %43 to %"class.blink::TransformPaintPropertyNode"*
  tail call void @_ZN5blink26TransformPaintPropertyNodeD2Ev(%"class.blink::TransformPaintPropertyNode"* nonnull %58) #9
  %59 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %43 to i8*
  tail call void @free(i8* %59) #9
  ret void

60:                                               ; preds = %45, %54, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 0, i32 1
  %3 = load i8, i8* %2, align 4, !range !3
  %4 = icmp eq i8 %3, 0
  %5 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %0, null
  br i1 %4, label %25, label %6

6:                                                ; preds = %1
  br i1 %5, label %44, label %7

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"* %12) #9
  store i8 0, i8* %8, align 8
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 0, i32 3, i32 0
  %15 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %14, align 8
  %16 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #9
  %19 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  tail call void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"* nonnull %15) #9
  br label %23

23:                                               ; preds = %17, %22, %13
  %24 = bitcast %"class.blink::ScrollPaintPropertyNode"* %0 to i8*
  tail call void @free(i8* %24) #9
  br label %44

25:                                               ; preds = %1
  br i1 %5, label %44, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"* %31) #9
  store i8 0, i8* %27, align 8
  br label %32

32:                                               ; preds = %26, %30
  %33 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 0, i32 3, i32 0
  %34 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %33, align 8
  %35 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %37) #9
  %38 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %36
  tail call void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"* nonnull %34) #9
  br label %42

42:                                               ; preds = %36, %41, %32
  %43 = bitcast %"class.blink::ScrollPaintPropertyNode"* %0 to i8*
  tail call void @free(i8* %43) #9
  br label %44

44:                                               ; preds = %25, %42, %6, %23
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"*) unnamed_addr #5

declare zeroext i1 @_ZNK5blink26CompositorFilterOperations24HasFilterThatMovesPixelsEv(%"class.blink::CompositorFilterOperations"*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

declare void @_ZN5blink10JSONObject10SetBooleanERKN3WTF6StringEb(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #3

declare i8* @_ZN5blink31PaintPropertyChangeTypeToStringENS_23PaintPropertyChangeTypeE(i8 zeroext) local_unnamed_addr #3

declare void @_ZN5blink10JSONObjectC1Ev(%"class.blink::JSONObject"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 2000}
