; ModuleID = '../../v8/src/compiler/escape-analysis.cc'
source_filename = "../../v8/src/compiler/escape-analysis.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8::internal::compiler::EffectGraphReducer" = type { i8, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::NodeMarker", %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack.29", %"class.std::__1::function", %"class.v8::internal::TickCounter"* }
%"class.v8::internal::compiler::NodeMarker" = type { %"class.v8::internal::compiler::NodeMarkerBase" }
%"class.v8::internal::compiler::NodeMarkerBase" = type { i32, i32 }
%"class.v8::internal::ZoneStack" = type { %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.v8::internal::ZoneDeque" }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.25" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.21" }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.v8::internal::compiler::Node"*** }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.24", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.24" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.v8::internal::RecyclingZoneAllocator.27" }
%"class.v8::internal::RecyclingZoneAllocator.27" = type { %"class.v8::internal::ZoneAllocator.28", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.28" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, i64 }
%"class.v8::internal::ZoneStack.29" = type { %"class.std::__1::stack.30" }
%"class.std::__1::stack.30" = type { %"class.v8::internal::ZoneDeque.31" }
%"class.v8::internal::ZoneDeque.31" = type { %"class.std::__1::deque.32" }
%"class.std::__1::deque.32" = type { %"class.std::__1::__deque_base.33" }
%"class.std::__1::__deque_base.33" = type { %"struct.std::__1::__split_buffer.34", i64, %"class.std::__1::__compressed_pair.40" }
%"struct.std::__1::__split_buffer.34" = type { %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"class.std::__1::__compressed_pair.35" }
%"struct.v8::internal::compiler::EffectGraphReducer::NodeState" = type { %"class.v8::internal::compiler::Node"*, i32 }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.v8::internal::RecyclingZoneAllocator.38" }
%"class.v8::internal::RecyclingZoneAllocator.38" = type { %"class.v8::internal::ZoneAllocator.39", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.39" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.v8::internal::RecyclingZoneAllocator.42" }
%"class.v8::internal::RecyclingZoneAllocator.42" = type { %"class.v8::internal::ZoneAllocator.43", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.43" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"*, i64 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"*)* }
%"class.v8::internal::compiler::EffectGraphReducer::Reduction" = type { i8, i8 }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.18" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::TickCounter" = type { i64, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.669", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.673", %"class.std::__1::unique_ptr.692", %"class.std::__1::unique_ptr.516", %"class.std::__1::vector.698", %"class.v8::internal::ConcurrentAllocator" }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.68", %"class.std::__1::vector.72", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.188", %"class.std::__1::unique_ptr.188", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.203", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.207", %"class.std::__1::vector.207", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.220", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.350", %"class.std::__1::unique_ptr.356", %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.401", %"class.std::__1::unique_ptr.440", %"class.std::__1::unique_ptr.470", %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.486", %"class.std::__1::unique_ptr.492", %"class.std::__1::unique_ptr.492", %"class.std::__1::unique_ptr.498", %"class.std::__1::unique_ptr.504", %"class.std::__1::unique_ptr.504", %"class.std::__1::unique_ptr.510", %"class.std::__1::unique_ptr.516", %"class.std::__1::shared_ptr.522", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.527", %"class.std::__1::unique_ptr.553", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.559", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.572", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.372", i8, [7 x i8], %"class.std::__1::unordered_map.578", %"class.std::__1::unordered_map.604", %"class.std::__1::unordered_map.578", %"class.std::__1::unordered_map.628", %"class.std::__1::vector.656", i8, %"class.std::__1::unique_ptr.663", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.44", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.59", [4 x i8] }>
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46", %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.63", %"struct.std::__1::atomic.63", %"struct.std::__1::atomic.63" }
%"struct.std::__1::atomic.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__atomic_base.65" }
%"struct.std::__1::__atomic_base.65" = type { %"struct.std::__1::__cxx_atomic_impl.66" }
%"struct.std::__1::__cxx_atomic_impl.66" = type { %"struct.std::__1::__cxx_atomic_base_impl.67" }
%"struct.std::__1::__cxx_atomic_base_impl.67" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.711", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.717", %"class.std::__1::unique_ptr.738", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.748", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.868", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.881", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.891", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.902", %"struct.std::__1::atomic.194", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.977", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1023"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1031", i32, i8, i8, i32, i32, %"class.std::__1::vector.1037", %"class.std::__1::vector.1037", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1044", i64, %"class.std::__1::unordered_map.1045", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.565", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.202", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1101", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1115", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1149", %"class.std::__1::vector.1153", %"class.std::__1::vector.1153", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.706", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.706" = type { %"struct.std::__1::__atomic_base.707" }
%"struct.std::__1::__atomic_base.707" = type { %"struct.std::__1::__cxx_atomic_impl.708" }
%"struct.std::__1::__cxx_atomic_impl.708" = type { %"struct.std::__1::__cxx_atomic_base_impl.709" }
%"struct.std::__1::__cxx_atomic_base_impl.709" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.565" }
%"class.std::__1::shared_ptr.717" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.181", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.718", %"class.std::__1::unique_ptr.732" }
%"class.std::__1::vector.181" = type { %"class.std::__1::__vector_base.182" }
%"class.std::__1::__vector_base.182" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.183" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.63", %"struct.std::__1::atomic.109", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.109" = type { %"struct.std::__1::__atomic_base.110" }
%"struct.std::__1::__atomic_base.110" = type { %"struct.std::__1::__cxx_atomic_impl.111" }
%"struct.std::__1::__cxx_atomic_impl.111" = type { %"struct.std::__1::__cxx_atomic_base_impl.112" }
%"struct.std::__1::__cxx_atomic_base_impl.112" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.721" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.181", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.721" = type { %"class.std::__1::__vector_base.722" }
%"class.std::__1::__vector_base.722" = type { %"class.std::__1::unique_ptr.723"*, %"class.std::__1::unique_ptr.723"*, %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1337" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.std::__1::unique_ptr.723"* }
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.741", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.741" = type { %"struct.std::__1::__atomic_base.742" }
%"struct.std::__1::__atomic_base.742" = type { %"struct.std::__1::__cxx_atomic_impl.743" }
%"struct.std::__1::__cxx_atomic_impl.743" = type { %"struct.std::__1::__cxx_atomic_base_impl.744" }
%"struct.std::__1::__cxx_atomic_base_impl.744" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.748" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.749", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.749" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.750", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.750" = type { %"class.std::__1::__vector_base.751" }
%"class.std::__1::__vector_base.751" = type { %"class.std::__1::unique_ptr.752"*, %"class.std::__1::unique_ptr.752"*, %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::unique_ptr.752" = type opaque
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.std::__1::unique_ptr.752"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.758", %"class.std::__1::unique_ptr.764", %"struct.std::__1::atomic.194", %"class.std::__1::unique_ptr.770", %"class.std::__1::unique_ptr.776", %"class.std::__1::unique_ptr.782", %"class.std::__1::unique_ptr.788", %"class.std::__1::unique_ptr.794", %"class.std::__1::set.800", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.794" = type { %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.800" = type { %"class.std::__1::__tree.801" }
%"class.std::__1::__tree.801" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.802", %"class.std::__1::__compressed_pair.806" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.809" }
%"class.v8::internal::TaggedImpl.809" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.808" }
%"class.v8::internal::TaggedImpl.808" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.676", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.676" = type { %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.810", %"class.v8::internal::DetachableVector.811", %"class.v8::internal::DetachableVector.810", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.811" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.810" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.11" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::set.11" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.812", %"class.std::__1::vector.818", %"class.std::__1::unique_ptr.825", %"class.std::__1::vector.832", %"class.std::__1::unique_ptr.839", i64, %"class.std::__1::vector.845", %"class.std::__1::vector.853", %"class.std::__1::vector.861", i8, i8, i32 }
%"class.std::__1::unique_ptr.812" = type { %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.818" = type { %"class.std::__1::__vector_base.819" }
%"class.std::__1::__vector_base.819" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.820" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.v8::internal::GlobalHandles::NodeSpace.828"* }
%"class.v8::internal::GlobalHandles::NodeSpace.828" = type opaque
%"class.std::__1::vector.832" = type { %"class.std::__1::__vector_base.833" }
%"class.std::__1::__vector_base.833" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.834" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.839" = type { %"class.std::__1::__compressed_pair.840" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.845" = type { %"class.std::__1::__vector_base.846" }
%"class.std::__1::__vector_base.846" = type { %"struct.std::__1::pair.847"*, %"struct.std::__1::pair.847"*, %"class.std::__1::__compressed_pair.848" }
%"struct.std::__1::pair.847" = type opaque
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"struct.std::__1::pair.847"* }
%"class.std::__1::vector.853" = type { %"class.std::__1::__vector_base.854" }
%"class.std::__1::__vector_base.854" = type { %"struct.std::__1::pair.855"*, %"struct.std::__1::pair.855"*, %"class.std::__1::__compressed_pair.856" }
%"struct.std::__1::pair.855" = type opaque
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"struct.std::__1::pair.855"* }
%"class.std::__1::vector.861" = type { %"class.std::__1::__vector_base.862" }
%"class.std::__1::__vector_base.862" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.863" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.682", %"class.std::__1::vector.868" }
%"class.std::__1::vector.682" = type { %"class.std::__1::__vector_base.683" }
%"class.std::__1::__vector_base.683" = type { i64**, i64**, %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.875" }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.868" = type { %"class.std::__1::__vector_base.869" }
%"class.std::__1::__vector_base.869" = type { i32*, i32*, %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.881" = type { %"struct.std::__1::__atomic_base.882" }
%"struct.std::__1::__atomic_base.882" = type { %"struct.std::__1::__cxx_atomic_impl.883" }
%"struct.std::__1::__cxx_atomic_impl.883" = type { %"struct.std::__1::__cxx_atomic_base_impl.884" }
%"struct.std::__1::__cxx_atomic_base_impl.884" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.891" = type { %"struct.std::__1::__atomic_base.892" }
%"struct.std::__1::__atomic_base.892" = type { %"struct.std::__1::__cxx_atomic_impl.893" }
%"struct.std::__1::__cxx_atomic_impl.893" = type { %"struct.std::__1::__cxx_atomic_base_impl.894" }
%"struct.std::__1::__cxx_atomic_base_impl.894" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.896" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.897" }
%"struct.std::__1::__compressed_pair_elem.897" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.898 }
%union.anon.898 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.902" = type { %"class.std::__1::__hash_table.903" }
%"class.std::__1::__hash_table.903" = type <{ %"class.std::__1::unique_ptr.904", %"class.std::__1::__compressed_pair.914", %"class.std::__1::__compressed_pair.919", %"class.std::__1::__compressed_pair.922", [4 x i8] }>
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906", %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"struct.std::__1::__hash_node_base.907"** }
%"struct.std::__1::__hash_node_base.907" = type { %"struct.std::__1::__hash_node_base.907"* }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.std::__1::__bucket_list_deallocator.909" }
%"class.std::__1::__bucket_list_deallocator.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"struct.std::__1::__hash_node_base.907" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::atomic.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__cxx_atomic_impl.196" }
%"struct.std::__1::__cxx_atomic_impl.196" = type { %"struct.std::__1::__cxx_atomic_base_impl.197" }
%"struct.std::__1::__cxx_atomic_base_impl.197" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.928", %"class.v8::internal::Handle.934", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.935", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.928" = type { %"class.std::__1::__compressed_pair.929" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.934" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.935" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.936", %"class.std::__1::vector.942", %"class.std::__1::unique_ptr.950", %"class.std::__1::unique_ptr.956", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.962", %"class.std::__1::vector.968", %"struct.std::__1::pair.976" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.942" = type { %"class.std::__1::__vector_base.943" }
%"class.std::__1::__vector_base.943" = type { %"class.std::__1::unique_ptr.944"*, %"class.std::__1::unique_ptr.944"*, %"class.std::__1::__compressed_pair.945" }
%"class.std::__1::unique_ptr.944" = type opaque
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.946" }
%"struct.std::__1::__compressed_pair_elem.946" = type { %"class.std::__1::unique_ptr.944"* }
%"class.std::__1::unique_ptr.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.962" = type { %"class.std::__1::__compressed_pair.963" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.968" = type { %"class.std::__1::__vector_base.969" }
%"class.std::__1::__vector_base.969" = type { %"struct.std::__1::pair.970"*, %"struct.std::__1::pair.970"*, %"class.std::__1::__compressed_pair.971" }
%"struct.std::__1::pair.970" = type opaque
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"struct.std::__1::pair.970"* }
%"struct.std::__1::pair.976" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.710"*, i16, i8*)*, i8* }
%"class.v8::Local.710" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.977" = type { %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.980", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.980" = type { %"class.std::__1::__hash_table.981" }
%"class.std::__1::__hash_table.981" = type <{ %"class.std::__1::unique_ptr.982", %"class.std::__1::__compressed_pair.992", %"class.std::__1::__compressed_pair.997", %"class.std::__1::__compressed_pair.1001", [4 x i8] }>
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984", %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"struct.std::__1::__hash_node_base.985"** }
%"struct.std::__1::__hash_node_base.985" = type { %"struct.std::__1::__hash_node_base.985"* }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"class.std::__1::__bucket_list_deallocator.987" }
%"class.std::__1::__bucket_list_deallocator.987" = type { %"class.std::__1::__compressed_pair.988" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.985" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1009" }
%"class.std::__1::deque.1009" = type { %"class.std::__1::__deque_base.1010" }
%"class.std::__1::__deque_base.1010" = type { %"struct.std::__1::__split_buffer.1011", i64, %"class.std::__1::__compressed_pair.1018" }
%"struct.std::__1::__split_buffer.1011" = type { %"struct.std::__1::pair.1012"**, %"struct.std::__1::pair.1012"**, %"struct.std::__1::pair.1012"**, %"class.std::__1::__compressed_pair.1013" }
%"struct.std::__1::pair.1012" = type opaque
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"struct.std::__1::pair.1012"** }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1023" = type { %"class.std::__1::__vector_base.1024" }
%"class.std::__1::__vector_base.1024" = type { %"class.v8::internal::Handle.1025"*, %"class.v8::internal::Handle.1025"*, %"class.std::__1::__compressed_pair.1026" }
%"class.v8::internal::Handle.1025" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.v8::internal::Handle.1025"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.886", i32, %"class.v8::Local.710" }
%"class.v8::Local.886" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1031" = type { %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.682", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1037" = type { %"class.std::__1::__vector_base.1038" }
%"class.std::__1::__vector_base.1038" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.1040" }
%"struct.std::__1::__compressed_pair_elem.1040" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1044" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1045" = type { %"class.std::__1::__hash_table.1046" }
%"class.std::__1::__hash_table.1046" = type <{ %"class.std::__1::unique_ptr.1047", %"class.std::__1::__compressed_pair.1057", %"class.std::__1::__compressed_pair.1062", %"class.std::__1::__compressed_pair.1065", [4 x i8] }>
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049", %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"struct.std::__1::__hash_node_base.1050"** }
%"struct.std::__1::__hash_node_base.1050" = type { %"struct.std::__1::__hash_node_base.1050"* }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.std::__1::__bucket_list_deallocator.1052" }
%"class.std::__1::__bucket_list_deallocator.1052" = type { %"class.std::__1::__compressed_pair.1053" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"struct.std::__1::__hash_node_base.1050" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.565" = type { %"class.std::__1::__vector_base.566" }
%"class.std::__1::__vector_base.566" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.202" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1069", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1098", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1099", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1069" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1094, %union.anon.1096, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1094 = type { i64 }
%union.anon.1096 = type { i64 }
%"class.std::__1::weak_ptr.1098" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.202" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1099" = type { %"class.v8::PersistentBase.1100" }
%"class.v8::PersistentBase.1100" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1070", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1070" = type { %"class.std::__1::__hash_table.1071" }
%"class.std::__1::__hash_table.1071" = type <{ %"class.std::__1::unique_ptr.1072", %"class.std::__1::__compressed_pair.1082", %"class.std::__1::__compressed_pair.1087", %"class.std::__1::__compressed_pair.1090", [4 x i8] }>
%"class.std::__1::unique_ptr.1072" = type { %"class.std::__1::__compressed_pair.1073" }
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074", %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"struct.std::__1::__hash_node_base.1075"** }
%"struct.std::__1::__hash_node_base.1075" = type { %"struct.std::__1::__hash_node_base.1075"* }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.std::__1::__bucket_list_deallocator.1077" }
%"class.std::__1::__bucket_list_deallocator.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"struct.std::__1::__hash_node_base.1075" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.1103" }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1106", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1115" = type { %"class.std::__1::__compressed_pair.1116" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.887", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.887" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1123" }
%"class.std::__1::unordered_map.1123" = type { %"class.std::__1::__hash_table.1124" }
%"class.std::__1::__hash_table.1124" = type <{ %"class.std::__1::unique_ptr.1125", %"class.std::__1::__compressed_pair.1135", %"class.std::__1::__compressed_pair.1140", %"class.std::__1::__compressed_pair.1143", [4 x i8] }>
%"class.std::__1::unique_ptr.1125" = type { %"class.std::__1::__compressed_pair.1126" }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127", %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"struct.std::__1::__hash_node_base.1128"** }
%"struct.std::__1::__hash_node_base.1128" = type { %"struct.std::__1::__hash_node_base.1128"* }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"class.std::__1::__bucket_list_deallocator.1130" }
%"class.std::__1::__bucket_list_deallocator.1130" = type { %"class.std::__1::__compressed_pair.1131" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1135" = type { %"struct.std::__1::__compressed_pair_elem.1136" }
%"struct.std::__1::__compressed_pair_elem.1136" = type { %"struct.std::__1::__hash_node_base.1128" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::atomic.1149" = type { %"struct.std::__1::__atomic_base.1150" }
%"struct.std::__1::__atomic_base.1150" = type { %"struct.std::__1::__cxx_atomic_impl.1151" }
%"struct.std::__1::__cxx_atomic_impl.1151" = type { %"struct.std::__1::__cxx_atomic_base_impl.1152" }
%"struct.std::__1::__cxx_atomic_base_impl.1152" = type { %"class.std::__1::vector.1153"* }
%"class.std::__1::vector.1153" = type { %"class.std::__1::__vector_base.1154" }
%"class.std::__1::__vector_base.1154" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1155" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.1156" }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { i32 }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.74" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.145" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.139" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.79", %"class.std::__1::vector.79", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.81" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.86" }
%"class.std::__1::__hash_table.86" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.104", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base.90"** }
%"struct.std::__1::__hash_node_base.90" = type { %"struct.std::__1::__hash_node_base.90"* }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::__bucket_list_deallocator.92" }
%"class.std::__1::__bucket_list_deallocator.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base.90" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.63", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.120"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.128", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.63", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.113" }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.115" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.120" = type { %"class.std::__1::__tree.121" }
%"class.std::__1::__tree.121" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.128" = type { %"struct.std::__1::__atomic_base.129" }
%"struct.std::__1::__atomic_base.129" = type { %"struct.std::__1::__cxx_atomic_impl.130" }
%"struct.std::__1::__cxx_atomic_impl.130" = type { %"struct.std::__1::__cxx_atomic_base_impl.131" }
%"struct.std::__1::__cxx_atomic_base_impl.131" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.132", i8, [7 x i8] }>
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { i64*, i64*, %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"struct.std::__1::pair.147"*, %"struct.std::__1::pair.147"*, %"class.std::__1::__compressed_pair.148" }
%"struct.std::__1::pair.147" = type { i32, i64 }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::pair.147"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.153" }
%"class.std::__1::unordered_map.153" = type { %"class.std::__1::__hash_table.154" }
%"class.std::__1::__hash_table.154" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.165", %"class.std::__1::__compressed_pair.170", %"class.std::__1::__compressed_pair.175", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base.158"** }
%"struct.std::__1::__hash_node_base.158" = type { %"struct.std::__1::__hash_node_base.158"* }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.std::__1::__bucket_list_deallocator.160" }
%"class.std::__1::__bucket_list_deallocator.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.std::__1::__hash_node_base.158" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.194", %"struct.std::__1::atomic.198", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.198" = type { %"struct.std::__1::__atomic_base.199" }
%"struct.std::__1::__atomic_base.199" = type { %"struct.std::__1::__cxx_atomic_impl.200" }
%"struct.std::__1::__cxx_atomic_impl.200" = type { %"struct.std::__1::__cxx_atomic_base_impl.201" }
%"struct.std::__1::__cxx_atomic_base_impl.201" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.203" = type { %"struct.std::__1::__atomic_base.204" }
%"struct.std::__1::__atomic_base.204" = type { %"struct.std::__1::__cxx_atomic_impl.205" }
%"struct.std::__1::__cxx_atomic_impl.205" = type { %"struct.std::__1::__cxx_atomic_base_impl.206" }
%"struct.std::__1::__cxx_atomic_base_impl.206" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.209" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.268", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.322", %"class.std::__1::vector.322", %"class.std::__1::vector.322", %"class.std::__1::vector.329", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.223", %"class.std::__1::vector.224", %"class.std::__1::vector.231", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.223" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.226" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.231" = type { %"class.std::__1::__vector_base.232" }
%"class.std::__1::__vector_base.232" = type { %"class.std::__1::unique_ptr.233"*, %"class.std::__1::unique_ptr.233"*, %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::unique_ptr.233" = type opaque
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::unique_ptr.233"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.239", %"class.v8::internal::Worklist.241", %"class.v8::internal::Worklist.241", %"class.v8::internal::Worklist.241", %"class.v8::internal::Worklist.243", %"class.v8::internal::Worklist.245", %"class.v8::internal::Worklist.247", %"class.v8::internal::Worklist.249", %"class.v8::internal::Worklist.251", %"class.v8::internal::Worklist.253" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.239" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.241" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.243" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.245" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.247" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.249" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.251" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.253" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.255", i8, i64 }
%"class.std::__1::vector.255" = type { %"class.std::__1::__vector_base.256" }
%"class.std::__1::__vector_base.256" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.271" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.223"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.271" = type { %"class.std::__1::__hash_table.272" }
%"class.std::__1::__hash_table.272" = type <{ %"class.std::__1::unique_ptr.273", %"class.std::__1::__compressed_pair.283", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.291", [4 x i8] }>
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275", %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.std::__1::__hash_node_base.276"** }
%"struct.std::__1::__hash_node_base.276" = type { %"struct.std::__1::__hash_node_base.276"* }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.std::__1::__bucket_list_deallocator.278" }
%"class.std::__1::__bucket_list_deallocator.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"struct.std::__1::__hash_node_base.276" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.298" }
%"class.std::__1::unordered_map.298" = type { %"class.std::__1::__hash_table.299" }
%"class.std::__1::__hash_table.299" = type <{ %"class.std::__1::unique_ptr.300", %"class.std::__1::__compressed_pair.310", %"class.std::__1::__compressed_pair.315", %"class.std::__1::__compressed_pair.318", [4 x i8] }>
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302", %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"struct.std::__1::__hash_node_base.303"** }
%"struct.std::__1::__hash_node_base.303" = type { %"struct.std::__1::__hash_node_base.303"* }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.std::__1::__bucket_list_deallocator.305" }
%"class.std::__1::__bucket_list_deallocator.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.std::__1::__hash_node_base.303" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::vector.322" = type { %"class.std::__1::__vector_base.323" }
%"class.std::__1::__vector_base.323" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.329" = type { %"class.std::__1::__vector_base.330" }
%"class.std::__1::__vector_base.330" = type { %"struct.std::__1::pair.331"*, %"struct.std::__1::pair.331"*, %"class.std::__1::__compressed_pair.332" }
%"struct.std::__1::pair.331" = type opaque
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.std::__1::pair.331"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.337", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.322"], [3 x %"class.std::__1::vector.322"], i8, %"struct.std::__1::atomic.194", [6 x i8], %"class.std::__1::vector.322", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.347"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.322", %"class.std::__1::vector.322", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.347" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.372", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.365"], %"class.std::__1::unique_ptr.337" }
%"class.std::__1::vector.365" = type { %"class.std::__1::__vector_base.366" }
%"class.std::__1::__vector_base.366" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.404", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.408", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.413" }
%"struct.std::__1::atomic.404" = type { %"struct.std::__1::__atomic_base.405" }
%"struct.std::__1::__atomic_base.405" = type { %"struct.std::__1::__cxx_atomic_impl.406" }
%"struct.std::__1::__cxx_atomic_impl.406" = type { %"struct.std::__1::__cxx_atomic_base_impl.407" }
%"struct.std::__1::__cxx_atomic_base_impl.407" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.408" = type { %"struct.std::__1::__atomic_base.409" }
%"struct.std::__1::__atomic_base.409" = type { %"struct.std::__1::__cxx_atomic_impl.410" }
%"struct.std::__1::__cxx_atomic_impl.410" = type { %"struct.std::__1::__cxx_atomic_base_impl.411" }
%"struct.std::__1::__cxx_atomic_base_impl.411" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.413" = type { %"class.std::__1::__hash_table.414" }
%"class.std::__1::__hash_table.414" = type <{ %"class.std::__1::unique_ptr.415", %"class.std::__1::__compressed_pair.425", %"class.std::__1::__compressed_pair.430", %"class.std::__1::__compressed_pair.433", [4 x i8] }>
%"class.std::__1::unique_ptr.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417", %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"struct.std::__1::__hash_node_base.418"** }
%"struct.std::__1::__hash_node_base.418" = type { %"struct.std::__1::__hash_node_base.418"* }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.std::__1::__bucket_list_deallocator.420" }
%"class.std::__1::__bucket_list_deallocator.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"struct.std::__1::__hash_node_base.418" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.337", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.194", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.443", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.443" = type { %"class.std::__1::__hash_table.444" }
%"class.std::__1::__hash_table.444" = type <{ %"class.std::__1::unique_ptr.445", %"class.std::__1::__compressed_pair.455", %"class.std::__1::__compressed_pair.460", %"class.std::__1::__compressed_pair.463", [4 x i8] }>
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447", %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"struct.std::__1::__hash_node_base.448"** }
%"struct.std::__1::__hash_node_base.448" = type { %"struct.std::__1::__hash_node_base.448"* }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.std::__1::__bucket_list_deallocator.450" }
%"class.std::__1::__bucket_list_deallocator.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"struct.std::__1::__hash_node_base.448" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.479" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::shared_ptr.522" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.523", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.2", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.523" = type { %"struct.std::__1::__atomic_base.524" }
%"struct.std::__1::__atomic_base.524" = type { %"struct.std::__1::__cxx_atomic_impl.525" }
%"struct.std::__1::__cxx_atomic_impl.525" = type { %"struct.std::__1::__cxx_atomic_base_impl.526" }
%"struct.std::__1::__cxx_atomic_base_impl.526" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.527" = type { %"class.std::__1::__hash_table.528" }
%"class.std::__1::__hash_table.528" = type <{ %"class.std::__1::unique_ptr.529", %"class.std::__1::__compressed_pair.539", %"class.std::__1::__compressed_pair.544", %"class.std::__1::__compressed_pair.547", [4 x i8] }>
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531", %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.std::__1::__hash_node_base.532"** }
%"struct.std::__1::__hash_node_base.532" = type { %"struct.std::__1::__hash_node_base.532"* }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.std::__1::__bucket_list_deallocator.534" }
%"class.std::__1::__bucket_list_deallocator.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"struct.std::__1::__hash_node_base.532" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.559" = type { %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.565", %"class.std::__1::vector.565" }
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.372" = type { %"class.std::__1::__hash_table.373" }
%"class.std::__1::__hash_table.373" = type <{ %"class.std::__1::unique_ptr.374", %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.393", [4 x i8] }>
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376", %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base.377"** }
%"struct.std::__1::__hash_node_base.377" = type { %"struct.std::__1::__hash_node_base.377"* }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::__bucket_list_deallocator.379" }
%"class.std::__1::__bucket_list_deallocator.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.377" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.624", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unordered_map.578" = type { %"class.std::__1::__hash_table.579" }
%"class.std::__1::__hash_table.579" = type <{ %"class.std::__1::unique_ptr.580", %"class.std::__1::__compressed_pair.590", %"class.std::__1::__compressed_pair.595", %"class.std::__1::__compressed_pair.598", [4 x i8] }>
%"class.std::__1::unique_ptr.580" = type { %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582", %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"struct.std::__1::__hash_node_base.583"** }
%"struct.std::__1::__hash_node_base.583" = type { %"struct.std::__1::__hash_node_base.583"* }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.std::__1::__bucket_list_deallocator.585" }
%"class.std::__1::__bucket_list_deallocator.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"struct.std::__1::__hash_node_base.583" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unordered_map.628" = type { %"class.std::__1::__hash_table.629" }
%"class.std::__1::__hash_table.629" = type <{ %"class.std::__1::unique_ptr.630", %"class.std::__1::__compressed_pair.640", %"class.std::__1::__compressed_pair.645", %"class.std::__1::__compressed_pair.650", [4 x i8] }>
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632", %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"struct.std::__1::__hash_node_base.633"** }
%"struct.std::__1::__hash_node_base.633" = type { %"struct.std::__1::__hash_node_base.633"* }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"class.std::__1::__bucket_list_deallocator.635" }
%"class.std::__1::__bucket_list_deallocator.635" = type { %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"struct.std::__1::__hash_node_base.633" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::vector.656" = type { %"class.std::__1::__vector_base.657" }
%"class.std::__1::__vector_base.657" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { i32 }
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.682" }
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::vector.698" = type { %"class.std::__1::__vector_base.699" }
%"class.std::__1::__vector_base.699" = type { %"struct.std::__1::pair.700"*, %"struct.std::__1::pair.700"*, %"class.std::__1::__compressed_pair.701" }
%"struct.std::__1::pair.700" = type opaque
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"struct.std::__1::pair.700"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::VariableTracker" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::SparseSidetable", %"class.v8::internal::ZoneVector.1299", %"class.v8::internal::compiler::EffectGraphReducer"*, i32, %"class.v8::internal::TickCounter"* }
%"class.v8::internal::compiler::SparseSidetable" = type { %"class.v8::internal::compiler::VariableTracker::State", %"class.v8::internal::ZoneUnorderedMap.1273" }
%"class.v8::internal::compiler::VariableTracker::State" = type { %"class.v8::internal::compiler::PersistentMap" }
%"class.v8::internal::compiler::PersistentMap" = type { %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree" = type { %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::KeyValue", i8, %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::HashValue", %"class.v8::internal::ZoneMap"*, [1 x %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*] }
%"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::KeyValue" = type { %"struct.std::__1::pair.1264" }
%"struct.std::__1::pair.1264" = type { %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::Variable" = type { i32 }
%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::HashValue" = type { i32 }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1265" }
%"class.std::__1::__tree.1265" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1266", %"class.std::__1::__compressed_pair.1269" }
%"class.std::__1::__compressed_pair.1266" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.1267" }
%"struct.std::__1::__compressed_pair_elem.1267" = type { %"class.v8::internal::ZoneAllocator.1268" }
%"class.v8::internal::ZoneAllocator.1268" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1269" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ZoneUnorderedMap.1273" = type { %"class.std::__1::unordered_map.1274" }
%"class.std::__1::unordered_map.1274" = type { %"class.std::__1::__hash_table.1275" }
%"class.std::__1::__hash_table.1275" = type <{ %"class.std::__1::unique_ptr.1276", %"class.std::__1::__compressed_pair.1285", %"class.std::__1::__compressed_pair.1289", %"class.std::__1::__compressed_pair.1293", [4 x i8] }>
%"class.std::__1::unique_ptr.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.1278", %"struct.std::__1::__compressed_pair_elem.1280" }
%"struct.std::__1::__compressed_pair_elem.1278" = type { %"struct.std::__1::__hash_node_base.1279"** }
%"struct.std::__1::__hash_node_base.1279" = type { %"struct.std::__1::__hash_node_base.1279"* }
%"struct.std::__1::__compressed_pair_elem.1280" = type { %"class.std::__1::__bucket_list_deallocator.1281" }
%"class.std::__1::__bucket_list_deallocator.1281" = type { %"class.std::__1::__compressed_pair.1282" }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1283" }
%"struct.std::__1::__compressed_pair_elem.1283" = type { %"class.v8::internal::ZoneAllocator.1284" }
%"class.v8::internal::ZoneAllocator.1284" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.1286", %"struct.std::__1::__compressed_pair_elem.1287" }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %"struct.std::__1::__hash_node_base.1279" }
%"struct.std::__1::__compressed_pair_elem.1287" = type { %"class.v8::internal::ZoneAllocator.1288" }
%"class.v8::internal::ZoneAllocator.1288" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1289" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1293" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.v8::internal::ZoneVector.1299" = type { %"class.std::__1::vector.1300" }
%"class.std::__1::vector.1300" = type { %"class.std::__1::__vector_base.1301" }
%"class.std::__1::__vector_base.1301" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair.1302" }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.1303", %"struct.std::__1::__compressed_pair_elem.1304" }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"class.v8::internal::compiler::Node"** }
%"struct.std::__1::__compressed_pair_elem.1304" = type { %"class.v8::internal::ZoneAllocator.28" }
%"class.v8::internal::compiler::JSGraph" = type { %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::Isolate"*, %"class.v8::internal::compiler::JSOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::MachineGraph" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::CommonOperatorBuilder" = type { %"struct.v8::internal::compiler::CommonOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::CommonOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::MachineOperatorBuilder" = type <{ %"class.v8::internal::Zone"*, %"struct.v8::internal::compiler::MachineOperatorGlobalCache"*, i8, [3 x i8], %"class.v8::base::Flags.1160", %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements", [4 x i8] }>
%"struct.v8::internal::compiler::MachineOperatorGlobalCache" = type opaque
%"class.v8::base::Flags.1160" = type { i32 }
%"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements" = type { i32, %"class.v8::base::EnumSet", %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.v8::internal::compiler::CommonNodeCache" = type { %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.1183", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.1183", %"class.v8::internal::compiler::NodeCache.1183", %"class.v8::internal::compiler::NodeCache.1183", %"class.v8::internal::compiler::NodeCache.1183", %"class.v8::internal::compiler::NodeCache.1183", %"class.v8::internal::compiler::NodeCache.1210", %"class.v8::internal::compiler::NodeCache.1237" }
%"class.v8::internal::compiler::NodeCache" = type { %"class.v8::internal::ZoneUnorderedMap" }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map.1161" }
%"class.std::__1::unordered_map.1161" = type { %"class.std::__1::__hash_table.1162" }
%"class.std::__1::__hash_table.1162" = type <{ %"class.std::__1::unique_ptr.1163", %"class.std::__1::__compressed_pair.1172", %"class.std::__1::__compressed_pair.1176", %"class.std::__1::__compressed_pair.1179", [4 x i8] }>
%"class.std::__1::unique_ptr.1163" = type { %"class.std::__1::__compressed_pair.1164" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.1165", %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1165" = type { %"struct.std::__1::__hash_node_base.1166"** }
%"struct.std::__1::__hash_node_base.1166" = type { %"struct.std::__1::__hash_node_base.1166"* }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.std::__1::__bucket_list_deallocator.1168" }
%"class.std::__1::__bucket_list_deallocator.1168" = type { %"class.std::__1::__compressed_pair.1169" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1170" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"class.v8::internal::ZoneAllocator.1171" }
%"class.v8::internal::ZoneAllocator.1171" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.1173", %"struct.std::__1::__compressed_pair_elem.1174" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"struct.std::__1::__hash_node_base.1166" }
%"struct.std::__1::__compressed_pair_elem.1174" = type { %"class.v8::internal::ZoneAllocator.1175" }
%"class.v8::internal::ZoneAllocator.1175" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.v8::internal::compiler::NodeCache.1183" = type { %"class.v8::internal::ZoneUnorderedMap.1184" }
%"class.v8::internal::ZoneUnorderedMap.1184" = type { %"class.std::__1::unordered_map.1185" }
%"class.std::__1::unordered_map.1185" = type { %"class.std::__1::__hash_table.1186" }
%"class.std::__1::__hash_table.1186" = type <{ %"class.std::__1::unique_ptr.1187", %"class.std::__1::__compressed_pair.1196", %"class.std::__1::__compressed_pair.1200", %"class.std::__1::__compressed_pair.1204", [4 x i8] }>
%"class.std::__1::unique_ptr.1187" = type { %"class.std::__1::__compressed_pair.1188" }
%"class.std::__1::__compressed_pair.1188" = type { %"struct.std::__1::__compressed_pair_elem.1189", %"struct.std::__1::__compressed_pair_elem.1191" }
%"struct.std::__1::__compressed_pair_elem.1189" = type { %"struct.std::__1::__hash_node_base.1190"** }
%"struct.std::__1::__hash_node_base.1190" = type { %"struct.std::__1::__hash_node_base.1190"* }
%"struct.std::__1::__compressed_pair_elem.1191" = type { %"class.std::__1::__bucket_list_deallocator.1192" }
%"class.std::__1::__bucket_list_deallocator.1192" = type { %"class.std::__1::__compressed_pair.1193" }
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1194" }
%"struct.std::__1::__compressed_pair_elem.1194" = type { %"class.v8::internal::ZoneAllocator.1195" }
%"class.v8::internal::ZoneAllocator.1195" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.1197", %"struct.std::__1::__compressed_pair_elem.1198" }
%"struct.std::__1::__compressed_pair_elem.1197" = type { %"struct.std::__1::__hash_node_base.1190" }
%"struct.std::__1::__compressed_pair_elem.1198" = type { %"class.v8::internal::ZoneAllocator.1199" }
%"class.v8::internal::ZoneAllocator.1199" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.v8::internal::compiler::NodeCache.1210" = type { %"class.v8::internal::ZoneUnorderedMap.1211" }
%"class.v8::internal::ZoneUnorderedMap.1211" = type { %"class.std::__1::unordered_map.1212" }
%"class.std::__1::unordered_map.1212" = type { %"class.std::__1::__hash_table.1213" }
%"class.std::__1::__hash_table.1213" = type <{ %"class.std::__1::unique_ptr.1214", %"class.std::__1::__compressed_pair.1223", %"class.std::__1::__compressed_pair.1227", %"class.std::__1::__compressed_pair.1231", [4 x i8] }>
%"class.std::__1::unique_ptr.1214" = type { %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216", %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"struct.std::__1::__hash_node_base.1217"** }
%"struct.std::__1::__hash_node_base.1217" = type { %"struct.std::__1::__hash_node_base.1217"* }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.std::__1::__bucket_list_deallocator.1219" }
%"class.std::__1::__bucket_list_deallocator.1219" = type { %"class.std::__1::__compressed_pair.1220" }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1221" }
%"struct.std::__1::__compressed_pair_elem.1221" = type { %"class.v8::internal::ZoneAllocator.1222" }
%"class.v8::internal::ZoneAllocator.1222" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224", %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"struct.std::__1::__hash_node_base.1217" }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"class.v8::internal::ZoneAllocator.1226" }
%"class.v8::internal::ZoneAllocator.1226" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1231" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.v8::internal::compiler::NodeCache.1237" = type { %"class.v8::internal::ZoneUnorderedMap.1238" }
%"class.v8::internal::ZoneUnorderedMap.1238" = type { %"class.std::__1::unordered_map.1239" }
%"class.std::__1::unordered_map.1239" = type { %"class.std::__1::__hash_table.1240" }
%"class.std::__1::__hash_table.1240" = type <{ %"class.std::__1::unique_ptr.1241", %"class.std::__1::__compressed_pair.1250", %"class.std::__1::__compressed_pair.1254", %"class.std::__1::__compressed_pair.1258", [4 x i8] }>
%"class.std::__1::unique_ptr.1241" = type { %"class.std::__1::__compressed_pair.1242" }
%"class.std::__1::__compressed_pair.1242" = type { %"struct.std::__1::__compressed_pair_elem.1243", %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1243" = type { %"struct.std::__1::__hash_node_base.1244"** }
%"struct.std::__1::__hash_node_base.1244" = type { %"struct.std::__1::__hash_node_base.1244"* }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"class.std::__1::__bucket_list_deallocator.1246" }
%"class.std::__1::__bucket_list_deallocator.1246" = type { %"class.std::__1::__compressed_pair.1247" }
%"class.std::__1::__compressed_pair.1247" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1248" }
%"struct.std::__1::__compressed_pair_elem.1248" = type { %"class.v8::internal::ZoneAllocator.1249" }
%"class.v8::internal::ZoneAllocator.1249" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.1251", %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1251" = type { %"struct.std::__1::__hash_node_base.1244" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"class.v8::internal::ZoneAllocator.1253" }
%"class.v8::internal::ZoneAllocator.1253" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1258" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.v8::internal::compiler::JSOperatorBuilder" = type { %"struct.v8::internal::compiler::JSOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::JSOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::SimplifiedOperatorBuilder" = type { %"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::VariableTracker::Scope" = type { %"class.v8::internal::compiler::ReduceScope", %"class.v8::internal::compiler::VariableTracker"*, %"class.v8::internal::compiler::VariableTracker::State" }
%"class.v8::internal::compiler::ReduceScope" = type { %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"* }
%"class.v8::internal::compiler::EscapeAnalysis" = type { %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::JSGraph"* }
%"class.v8::internal::compiler::EscapeAnalysisTracker" = type { %"class.v8::internal::compiler::SparseSidetable.1305", %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::VariableTracker", i32, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::SparseSidetable.1305" = type { %"class.v8::internal::compiler::VirtualObject"*, %"class.v8::internal::ZoneUnorderedMap.1313" }
%"class.v8::internal::compiler::VirtualObject" = type { %"class.v8::internal::compiler::Dependable", i8, i32, %"class.v8::internal::ZoneVector.1306" }
%"class.v8::internal::compiler::Dependable" = type { %"class.v8::internal::ZoneVector.1299" }
%"class.v8::internal::ZoneVector.1306" = type { %"class.std::__1::vector.1307" }
%"class.std::__1::vector.1307" = type { %"class.std::__1::__vector_base.1308" }
%"class.std::__1::__vector_base.1308" = type { %"class.v8::internal::compiler::Variable"*, %"class.v8::internal::compiler::Variable"*, %"class.std::__1::__compressed_pair.1309" }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.1310", %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1310" = type { %"class.v8::internal::compiler::Variable"* }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"class.v8::internal::ZoneAllocator.1312" }
%"class.v8::internal::ZoneAllocator.1312" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneUnorderedMap.1313" = type { %"class.std::__1::unordered_map.1314" }
%"class.std::__1::unordered_map.1314" = type { %"class.std::__1::__hash_table.1315" }
%"class.std::__1::__hash_table.1315" = type <{ %"class.std::__1::unique_ptr.1316", %"class.std::__1::__compressed_pair.1325", %"class.std::__1::__compressed_pair.1329", %"class.std::__1::__compressed_pair.1332", [4 x i8] }>
%"class.std::__1::unique_ptr.1316" = type { %"class.std::__1::__compressed_pair.1317" }
%"class.std::__1::__compressed_pair.1317" = type { %"struct.std::__1::__compressed_pair_elem.1318", %"struct.std::__1::__compressed_pair_elem.1320" }
%"struct.std::__1::__compressed_pair_elem.1318" = type { %"struct.std::__1::__hash_node_base.1319"** }
%"struct.std::__1::__hash_node_base.1319" = type { %"struct.std::__1::__hash_node_base.1319"* }
%"struct.std::__1::__compressed_pair_elem.1320" = type { %"class.std::__1::__bucket_list_deallocator.1321" }
%"class.std::__1::__bucket_list_deallocator.1321" = type { %"class.std::__1::__compressed_pair.1322" }
%"class.std::__1::__compressed_pair.1322" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1323" }
%"struct.std::__1::__compressed_pair_elem.1323" = type { %"class.v8::internal::ZoneAllocator.1324" }
%"class.v8::internal::ZoneAllocator.1324" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326", %"struct.std::__1::__compressed_pair_elem.1327" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %"struct.std::__1::__hash_node_base.1319" }
%"struct.std::__1::__compressed_pair_elem.1327" = type { %"class.v8::internal::ZoneAllocator.1328" }
%"class.v8::internal::ZoneAllocator.1328" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1332" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.v8::internal::compiler::Sidetable" = type { %"class.v8::internal::ZoneVector.1299" }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator" = type { i32, %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.std::__1::array", %"class.v8::internal::compiler::Node"* }
%"class.std::__1::__map_const_iterator" = type { %"class.std::__1::__tree_const_iterator" }
%"class.std::__1::__tree_const_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"struct.std::__1::array" = type { [32 x %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*] }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1346" }
%"struct.std::__1::pair.1346" = type { %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Node"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::pair.1419" = type { i32, %"class.v8::internal::compiler::VariableTracker::State" }
%"struct.std::__1::array.1369" = type { [2 x %"class.v8::internal::compiler::Node"*] }
%"struct.std::__1::array.1370" = type { [3 x %"class.v8::internal::compiler::Node"*] }
%"class.v8::internal::compiler::MapRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::compiler::HeapObjectRef" = type { %"class.v8::internal::compiler::ObjectRef" }
%"class.v8::internal::compiler::ObjectRef" = type { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* }
%"class.v8::internal::compiler::ObjectData" = type opaque
%"class.v8::internal::compiler::JSHeapBroker" = type opaque
%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope" = type { %"class.v8::internal::compiler::VariableTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EffectGraphReducer"*, %"class.v8::internal::compiler::VirtualObject"*, %"class.v8::internal::compiler::Node"* }
%"struct.v8::internal::compiler::FieldAccess" = type <{ i8, [3 x i8], i32, %"class.v8::internal::MaybeHandle", %"class.v8::internal::MaybeHandle.1367", %"class.v8::internal::compiler::Type", %"class.v8::internal::MachineType", i8, i8, i32, %"struct.v8::internal::compiler::ConstFieldInfo", i8, [7 x i8] }>
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.v8::internal::MaybeHandle.1367" = type { i64* }
%"class.v8::internal::MachineType" = type { i8, i8 }
%"struct.v8::internal::compiler::ConstFieldInfo" = type { %"class.v8::internal::MaybeHandle.1367" }
%"struct.v8::internal::compiler::ElementAccess" = type { i8, i32, %"class.v8::internal::compiler::Type", %"class.v8::internal::MachineType", i8, i32 }
%"class.v8::internal::compiler::CheckMapsParameters" = type { %"class.v8::base::Flags.1364", %"class.v8::internal::ZoneHandleSet", %"struct.v8::internal::compiler::FeedbackSource" }
%"class.v8::base::Flags.1364" = type { i32 }
%"class.v8::internal::ZoneHandleSet" = type { i64 }
%"struct.v8::internal::compiler::FeedbackSource" = type <{ %"class.v8::internal::Handle.1365", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.v8::internal::Handle.1365" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.v8::internal::compiler::TypeBase" = type { i32 }
%"class.v8::internal::compiler::HeapConstantType" = type { %"class.v8::internal::compiler::TypeBase", i32, %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::ZoneVector.1372" = type { %"class.std::__1::vector.1373" }
%"class.std::__1::vector.1373" = type { %"class.std::__1::__vector_base.1374" }
%"class.std::__1::__vector_base.1374" = type { i64**, i64**, %"class.std::__1::__compressed_pair.1375" }
%"class.std::__1::__compressed_pair.1375" = type { %"struct.std::__1::__compressed_pair_elem.685", %"struct.std::__1::__compressed_pair_elem.1376" }
%"struct.std::__1::__compressed_pair_elem.1376" = type { %"class.v8::internal::ZoneAllocator.1377" }
%"class.v8::internal::ZoneAllocator.1377" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::EscapeAnalysisResult" = type { %"class.v8::internal::compiler::EscapeAnalysisTracker"* }
%"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::ZipIterable" = type { %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap" }
%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator" = type <{ %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", i8, i8, [6 x i8] }>
%"struct.std::__1::pair.1383" = type { i32, %"class.v8::internal::compiler::VirtualObject"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.1319", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.1382" }
%"struct.std::__1::pair.1382" = type { i32, %"class.v8::internal::compiler::VirtualObject"* }
%"struct.std::__1::__split_buffer.1392" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.1393" }
%"class.std::__1::__compressed_pair.1393" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.1394" }
%"struct.std::__1::__compressed_pair_elem.1394" = type { %"class.v8::internal::RecyclingZoneAllocator"* }
%"struct.std::__1::__split_buffer.1406" = type { %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"class.std::__1::__compressed_pair.1407" }
%"class.std::__1::__compressed_pair.1407" = type { %"struct.std::__1::__compressed_pair_elem.36", %"struct.std::__1::__compressed_pair_elem.1408" }
%"struct.std::__1::__compressed_pair_elem.1408" = type { %"class.v8::internal::RecyclingZoneAllocator.38"* }
%"struct.std::__1::__hash_node.1403" = type { %"struct.std::__1::__hash_node_base.1279", i64, %"struct.std::__1::__hash_value_type.1402" }
%"struct.std::__1::__hash_value_type.1402" = type { %"struct.std::__1::pair.1401" }
%"struct.std::__1::pair.1401" = type { i32, %"class.v8::internal::compiler::VariableTracker::State" }

$_ZN2v88internal8compiler15SparseSidetableINS1_15VariableTracker5StateEE3SetEPKNS1_4NodeES4_ = comdat any

$_ZNK2v88internal8compiler15VariableTracker5State3GetENS1_8VariableE = comdat any

$_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iteratorppEv = comdat any

$_ZN2v88internal8compiler21EscapeAnalysisTracker5ScopeD2Ev = comdat any

$_ZN2v88internal8compiler15VariableTracker3GetENS1_8VariableEPNS1_4NodeE = comdat any

$_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEEneERKS9_ = comdat any

$_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE11ZipIterable5beginEv = comdat any

$_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE15double_iteratorppEv = comdat any

$_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iterator5beginEPKNS9_11FocusedTreeES5_ = comdat any

$_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3SetES3_S5_ = comdat any

$_ZNSt3__13mapIN2v88internal8compiler8VariableEPNS3_4NodeENS_4lessIS4_EENS2_13ZoneAllocatorINS_4pairIKS4_S6_EEEEEixERSB_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler8VariableEPNS4_4NodeEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS3_13ZoneAllocatorIS8_EEE14__assign_multiINS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEEEvT_SN_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler8VariableEPNS4_4NodeEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS3_13ZoneAllocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10ValueInputEi = comdat any

$_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope17InitVirtualObjectEi = comdat any

$_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope16GetVirtualObjectEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope14SetReplacementEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler15SparseSidetableIPNS1_13VirtualObjectEE3SetEPKNS1_4NodeES4_ = comdat any

$_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal8compiler13VirtualObjectEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE25__emplace_unique_key_argsIjJNS_4pairIjS6_EEEEENSL_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal8compiler13VirtualObjectEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal8compiler13VirtualObjectEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm = comdat any

$_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN2v88internal8compiler4NodeEPNS4_18EffectGraphReducer9ReductionEEE12__call_emptyEPKNS0_16__policy_storageES6_S9_ = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZNSt3__15dequeIN2v88internal8compiler18EffectGraphReducer9NodeStateENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal8compiler15VariableTracker5StateEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal8compiler15VariableTracker5StateEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal8compiler15VariableTracker5StateEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE25__emplace_unique_key_argsIjJNS_4pairIjS6_EEEEENSL_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZN2v88internal8compiler15SparseSidetableIPNS1_13VirtualObjectEEC2EPNS0_4ZoneES4_ = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"0 <= index\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"index < node->op()->EffectInputCount()\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"index < node->op()->ControlInputCount()\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"var != Variable::Invalid()\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"index < node->op()->ValueInputCount()\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"vobject->size() == size\00", align 1
@.str.9 = private unnamed_addr constant [48 x i8] c"OperatorProperties::HasContextInput(node->op())\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"IsAligned(offset, kTaggedSize)\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"!HasEscaped()\00", align 1
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal8compiler14EscapeAnalysisC1EPNS6_7JSGraphEPNS5_11TickCounterEPNS5_4ZoneEE3$_0FvPNS6_4NodeEPNS6_18EffectGraphReducer9ReductionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@switch.table._ZN2v88internal8compiler12_GLOBAL__N_122OffsetOfElementsAccessEPKNS1_8OperatorEPNS1_4NodeE = private unnamed_addr constant [14 x i32] [i32 0, i32 0, i32 1, i32 2, i32 3, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 3, i32 4], align 4

@_ZN2v88internal8compiler18EffectGraphReducerC1EPNS1_5GraphENSt3__18functionIFvPNS1_4NodeEPNS2_9ReductionEEEEPNS0_11TickCounterEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::EffectGraphReducer"*, %"class.v8::internal::compiler::Graph"*, %"class.std::__1::function"*, %"class.v8::internal::TickCounter"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::EffectGraphReducer"*, %"class.v8::internal::compiler::Graph"*, %"class.std::__1::function"*, %"class.v8::internal::TickCounter"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler18EffectGraphReducerC2EPNS1_5GraphENSt3__18functionIFvPNS1_4NodeEPNS2_9ReductionEEEEPNS0_11TickCounterEPNS0_4ZoneE
@_ZN2v88internal8compiler15VariableTrackerC1EPNS1_7JSGraphEPNS1_18EffectGraphReducerEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::VariableTracker"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::EffectGraphReducer"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::VariableTracker"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::EffectGraphReducer"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler15VariableTrackerC2EPNS1_7JSGraphEPNS1_18EffectGraphReducerEPNS0_4ZoneE
@_ZN2v88internal8compiler15VariableTracker5ScopeC1EPS2_PNS1_4NodeEPNS1_18EffectGraphReducer9ReductionE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::VariableTracker::Scope"*, %"class.v8::internal::compiler::VariableTracker"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"*), void (%"class.v8::internal::compiler::VariableTracker::Scope"*, %"class.v8::internal::compiler::VariableTracker"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"*)* @_ZN2v88internal8compiler15VariableTracker5ScopeC2EPS2_PNS1_4NodeEPNS1_18EffectGraphReducer9ReductionE
@_ZN2v88internal8compiler15VariableTracker5ScopeD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::compiler::VariableTracker::Scope"*), void (%"class.v8::internal::compiler::VariableTracker::Scope"*)* @_ZN2v88internal8compiler15VariableTracker5ScopeD2Ev
@_ZN2v88internal8compiler14EscapeAnalysisC1EPNS1_7JSGraphEPNS0_11TickCounterEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::EscapeAnalysis"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::TickCounter"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::EscapeAnalysis"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::TickCounter"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler14EscapeAnalysisC2EPNS1_7JSGraphEPNS0_11TickCounterEPNS0_4ZoneE
@_ZN2v88internal8compiler13VirtualObjectC1EPNS1_15VariableTrackerEji = hidden unnamed_addr alias void (%"class.v8::internal::compiler::VirtualObject"*, %"class.v8::internal::compiler::VariableTracker"*, i32, i32), void (%"class.v8::internal::compiler::VirtualObject"*, %"class.v8::internal::compiler::VariableTracker"*, i32, i32)* @_ZN2v88internal8compiler13VirtualObjectC2EPNS1_15VariableTrackerEji

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18EffectGraphReducerC2EPNS1_5GraphENSt3__18functionIFvPNS1_4NodeEPNS2_9ReductionEEEEPNS0_11TickCounterEPNS0_4ZoneE(%"class.v8::internal::compiler::EffectGraphReducer"*, %"class.v8::internal::compiler::Graph"*, %"class.std::__1::function"* nocapture, %"class.v8::internal::TickCounter"*, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 0
  store i8 4, i8* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Graph"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN2v88internal8compiler14NodeMarkerBaseC2EPNS1_5GraphEj(%"class.v8::internal::compiler::NodeMarkerBase"* %8, %"class.v8::internal::compiler::Graph"* %1, i32 4) #8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3
  %10 = ptrtoint %"class.v8::internal::Zone"* %4 to i64
  %11 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.23"* %11 to i64*
  %13 = bitcast %"class.v8::internal::ZoneStack"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #8
  store i64 %10, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %16 = bitcast %"struct.std::__1::__compressed_pair_elem.26"* %15 to i64*
  %17 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #8
  store i64 %10, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %20 = bitcast %"struct.std::__1::__compressed_pair_elem.37"* %19 to i64*
  %21 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 40, i1 false)
  store i64 %10, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %24 = bitcast %"struct.std::__1::__compressed_pair_elem.41"* %23 to i64*
  %25 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #8
  store i64 %10, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %27 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"** %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 5
  %29 = bitcast %"class.std::__1::function"* %28 to i8*
  %30 = bitcast %"class.std::__1::function"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false) #8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 5, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1
  %33 = bitcast %"struct.std::__1::__function::__policy_invoker"* %32 to i64*
  %34 = bitcast %"struct.std::__1::__function::__policy_invoker"* %31 to i64*
  %35 = load i64, i64* %33, align 8
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 5, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  %38 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %37, align 8
  store %"struct.std::__1::__function::__policy"* %38, %"struct.std::__1::__function::__policy"** %36, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %38, i64 0, i32 1
  %40 = load void (i8*)*, void (i8*)** %39, align 8
  %41 = icmp eq void (i8*)* %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %5
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %37, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN2v88internal8compiler4NodeEPNS4_18EffectGraphReducer9ReductionEEE12__call_emptyEPKNS0_16__policy_storageES6_S9_ to i64), i64* %33, align 8
  br label %43

43:                                               ; preds = %5, %42
  %44 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 6
  store %"class.v8::internal::TickCounter"* %3, %"class.v8::internal::TickCounter"** %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18EffectGraphReducer10ReduceFromEPNS1_4NodeE(%"class.v8::internal::compiler::EffectGraphReducer"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::EffectGraphReducer::Reduction", align 1
  %4 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 4, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %6 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %7, %10
  %12 = icmp eq i64 %11, 0
  %13 = shl i64 %11, 5
  %14 = add i64 %13, -1
  %15 = select i1 %12, i64 0, i64 %14
  %16 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, %17
  %21 = icmp eq i64 %15, %20
  %22 = inttoptr i64 %10 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %23 = inttoptr i64 %7 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  br i1 %21, label %24, label %31

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__1::stack.30", %"class.std::__1::stack.30"* %4, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15dequeIN2v88internal8compiler18EffectGraphReducer9NodeStateENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.32"* %25) #8
  %26 = load i64, i64* %18, align 8
  %27 = load i64, i64* %16, align 8
  %28 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %8, align 8
  %29 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %5, align 8
  %30 = add i64 %27, %26
  br label %31

31:                                               ; preds = %24, %2
  %32 = phi i64 [ %30, %24 ], [ %20, %2 ]
  %33 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %29, %24 ], [ %23, %2 ]
  %34 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %28, %24 ], [ %22, %2 ]
  %35 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %33, %34
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = lshr i64 %32, 8
  %38 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %34, i64 %37
  %39 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %38, align 8
  %40 = and i64 %32, 255
  %41 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState", %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* %39, i64 %40
  %42 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* %41 to i8*
  br label %43

43:                                               ; preds = %31, %36
  %44 = phi i8* [ %42, %36 ], [ null, %31 ]
  %45 = bitcast i8* %44 to %"class.v8::internal::compiler::Node"**
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %45, align 8
  %46 = getelementptr inbounds i8, i8* %44, i64 8
  %47 = bitcast i8* %46 to i32*
  store i32 0, i32* %47, align 8
  %48 = load i64, i64* %18, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %18, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %437, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 6
  %53 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"** %53 to i64*
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"** %53 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %56 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer::Reduction", %"class.v8::internal::compiler::EffectGraphReducer::Reduction"* %3, i64 0, i32 0
  %57 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer::Reduction", %"class.v8::internal::compiler::EffectGraphReducer::Reduction"* %3, i64 0, i32 1
  %58 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 5, i32 0, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 2, i32 0, i32 0
  %61 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %62 = bitcast %"class.v8::internal::compiler::Node"**** %61 to i64*
  %63 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = bitcast %"class.v8::internal::compiler::Node"**** %63 to i64*
  %65 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.std::__1::stack.30", %"class.std::__1::stack.30"* %4, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %70 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %69 to i64*
  %71 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %69 to %"class.v8::internal::compiler::Node"***
  br label %72

72:                                               ; preds = %51, %434
  %73 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %52, align 8
  call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %73) #8
  %74 = load i64, i64* %18, align 8
  %75 = load i64, i64* %16, align 8
  %76 = add i64 %74, -1
  %77 = add i64 %76, %75
  %78 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %8, align 8
  %79 = lshr i64 %77, 8
  %80 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %78, i64 %79
  %81 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %80, align 8
  %82 = and i64 %77, 255
  %83 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState", %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* %81, i64 %82, i32 0
  %84 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, align 8
  %85 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState", %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* %81, i64 %82, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %84, i64 0, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = and i32 %88, 251658240
  %90 = icmp eq i32 %89, 251658240
  %91 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %78 to i64
  br i1 %90, label %95, label %92

92:                                               ; preds = %72
  %93 = lshr i32 %88, 24
  %94 = and i32 %93, 15
  br label %102

95:                                               ; preds = %72
  %96 = ptrtoint %"class.v8::internal::compiler::Node"* %84 to i64
  %97 = add i64 %96, 32
  %98 = inttoptr i64 %97 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %99 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %98, align 8
  %100 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %99, i64 0, i32 1
  %101 = load i32, i32* %100, align 8
  br label %102

102:                                              ; preds = %92, %95
  %103 = phi i32 [ %94, %92 ], [ %101, %95 ]
  %104 = icmp slt i32 %86, %103
  br i1 %104, label %105, label %165

105:                                              ; preds = %102
  %106 = ptrtoint %"class.v8::internal::compiler::Node"* %84 to i64
  %107 = add i64 %106, 32
  br i1 %90, label %108, label %112

108:                                              ; preds = %105
  %109 = inttoptr i64 %107 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = add i64 %110, 16
  br label %112

112:                                              ; preds = %105, %108
  %113 = phi i64 [ %111, %108 ], [ %107, %105 ]
  %114 = inttoptr i64 %113 to %"class.v8::internal::compiler::Node"**
  %115 = sext i32 %86 to i64
  %116 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %114, i64 %115
  %117 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %116, align 8
  %118 = add nsw i32 %86, 1
  store i32 %118, i32* %85, align 4
  %119 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %117, i64 0, i32 2
  %120 = load i32, i32* %119, align 8
  %121 = load i32, i32* %60, align 4
  %122 = call i32 @llvm.usub.sat.i32(i32 %120, i32 %121) #8
  %123 = trunc i32 %122 to i8
  %124 = icmp ult i8 %123, 2
  br i1 %124, label %125, label %432

125:                                              ; preds = %112
  %126 = add i32 %121, 2
  store i32 %126, i32* %119, align 8
  %127 = load i64, i64* %6, align 8
  %128 = load i64, i64* %9, align 8
  %129 = sub i64 %127, %128
  %130 = icmp eq i64 %129, 0
  %131 = shl i64 %129, 5
  %132 = add i64 %131, -1
  %133 = select i1 %130, i64 0, i64 %132
  %134 = load i64, i64* %16, align 8
  %135 = load i64, i64* %18, align 8
  %136 = add i64 %135, %134
  %137 = icmp eq i64 %133, %136
  %138 = inttoptr i64 %128 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %139 = inttoptr i64 %127 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  br i1 %137, label %140, label %146

140:                                              ; preds = %125
  call void @_ZNSt3__15dequeIN2v88internal8compiler18EffectGraphReducer9NodeStateENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.32"* %68) #8
  %141 = load i64, i64* %18, align 8
  %142 = load i64, i64* %16, align 8
  %143 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %8, align 8
  %144 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %5, align 8
  %145 = add i64 %142, %141
  br label %146

146:                                              ; preds = %140, %125
  %147 = phi i64 [ %145, %140 ], [ %136, %125 ]
  %148 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %144, %140 ], [ %139, %125 ]
  %149 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %143, %140 ], [ %138, %125 ]
  %150 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %148, %149
  br i1 %150, label %158, label %151

151:                                              ; preds = %146
  %152 = lshr i64 %147, 8
  %153 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %149, i64 %152
  %154 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %153, align 8
  %155 = and i64 %147, 255
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState", %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* %154, i64 %155
  %157 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* %156 to i8*
  br label %158

158:                                              ; preds = %146, %151
  %159 = phi i8* [ %157, %151 ], [ null, %146 ]
  %160 = bitcast i8* %159 to %"class.v8::internal::compiler::Node"**
  store %"class.v8::internal::compiler::Node"* %117, %"class.v8::internal::compiler::Node"** %160, align 8
  %161 = getelementptr inbounds i8, i8* %159, i64 8
  %162 = bitcast i8* %161 to i32*
  store i32 0, i32* %162, align 8
  %163 = load i64, i64* %18, align 8
  %164 = add i64 %163, 1
  store i64 %164, i64* %18, align 8
  br label %434

165:                                              ; preds = %102
  store i64 %76, i64* %18, align 8
  %166 = load i64, i64* %6, align 8
  %167 = sub i64 %166, %91
  %168 = icmp eq i64 %167, 0
  %169 = shl i64 %167, 5
  %170 = add i64 %169, -1
  %171 = select i1 %168, i64 0, i64 %170
  %172 = sub i64 1, %74
  %173 = sub i64 %172, %75
  %174 = add i64 %173, %171
  %175 = icmp ult i64 %174, 512
  %176 = inttoptr i64 %166 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  br i1 %175, label %195, label %177

177:                                              ; preds = %165
  %178 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %176, i64 -1
  %179 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %178, align 8
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"** %53, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, 256
  br i1 %185, label %192, label %186

186:                                              ; preds = %182, %177
  %187 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState", %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* %179, i64 0, i32 1
  %188 = bitcast i32* %187 to i64*
  store i64 256, i64* %188, align 8
  %189 = load i64, i64* %54, align 8
  %190 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* %179 to i64*
  store i64 %189, i64* %190, align 8
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* %179, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %55, align 8
  %191 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %5, align 8
  br label %192

192:                                              ; preds = %186, %182
  %193 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %176, %182 ], [ %191, %186 ]
  %194 = getelementptr %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %193, i64 -1
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %194, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %5, align 8
  br label %195

195:                                              ; preds = %165, %192
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %56) #8
  store i8 0, i8* %56, align 1
  store i8 0, i8* %57, align 1
  %196 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"*)** %58, align 8
  call void %196(%"union.std::__1::__function::__policy_storage"* %59, %"class.v8::internal::compiler::Node"* %84, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"* nonnull %3) #8
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %84, i64 0, i32 4
  %198 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %197, align 8
  %199 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %198, null
  br i1 %199, label %200, label %206

200:                                              ; preds = %327, %195
  %201 = load i32, i32* %60, align 4
  %202 = add i32 %201, 3
  %203 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %84, i64 0, i32 2
  store i32 %202, i32* %203, align 8
  %204 = load i64, i64* %66, align 8
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %431, label %329

206:                                              ; preds = %195, %327
  %207 = phi %"struct.v8::internal::compiler::Node::Use"* [ %209, %327 ], [ %198, %195 ]
  %208 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %207, i64 0, i32 0
  %209 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %208, align 8
  %210 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %207, i64 0, i32 2
  %211 = load i32, i32* %210, align 8
  %212 = lshr i32 %211, 1
  %213 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %207, i64 1
  %214 = zext i32 %212 to i64
  %215 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %213, i64 %214
  %216 = and i32 %211, 1
  %217 = icmp eq i32 %216, 0
  %218 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %215 to i64
  %219 = select i1 %217, i64 16, i64 32
  %220 = add i64 %219, %218
  %221 = inttoptr i64 %220 to %"class.v8::internal::compiler::Node"**
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %214
  br i1 %217, label %225, label %223

223:                                              ; preds = %206
  %224 = bitcast %"struct.v8::internal::compiler::Node::Use"* %215 to %"class.v8::internal::compiler::Node"*
  br label %228

225:                                              ; preds = %206
  %226 = bitcast %"struct.v8::internal::compiler::Node::Use"* %215 to %"class.v8::internal::compiler::Node"**
  %227 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %226, align 8
  br label %228

228:                                              ; preds = %223, %225
  %229 = phi %"class.v8::internal::compiler::Node"* [ %224, %223 ], [ %227, %225 ]
  %230 = call zeroext i1 @_ZN2v88internal8compiler14NodeProperties12IsEffectEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %207, %"class.v8::internal::compiler::Node"** %222) #8
  br i1 %230, label %231, label %279

231:                                              ; preds = %228
  %232 = load i8, i8* %57, align 1, !range !2
  %233 = icmp eq i8 %232, 0
  br i1 %233, label %327, label %234

234:                                              ; preds = %231
  %235 = ptrtoint %"class.v8::internal::compiler::Node"* %229 to i64
  %236 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %229, i64 0, i32 2
  %237 = load i32, i32* %236, align 8
  %238 = load i32, i32* %60, align 4
  %239 = call i32 @llvm.usub.sat.i32(i32 %237, i32 %238) #8
  %240 = trunc i32 %239 to i8
  %241 = icmp eq i8 %240, 3
  br i1 %241, label %242, label %327

242:                                              ; preds = %234
  %243 = add i32 %238, 1
  store i32 %243, i32* %236, align 8
  %244 = load i64, i64* %62, align 8
  %245 = load i64, i64* %64, align 8
  %246 = sub i64 %244, %245
  %247 = icmp eq i64 %246, 0
  %248 = shl i64 %246, 6
  %249 = add i64 %248, -1
  %250 = select i1 %247, i64 0, i64 %249
  %251 = load i64, i64* %65, align 8
  %252 = load i64, i64* %66, align 8
  %253 = add i64 %252, %251
  %254 = icmp eq i64 %250, %253
  %255 = inttoptr i64 %245 to %"class.v8::internal::compiler::Node"***
  %256 = inttoptr i64 %244 to %"class.v8::internal::compiler::Node"***
  br i1 %254, label %257, label %263

257:                                              ; preds = %242
  call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %67) #8
  %258 = load i64, i64* %66, align 8
  %259 = load i64, i64* %65, align 8
  %260 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %63, align 8
  %261 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %61, align 8
  %262 = add i64 %259, %258
  br label %263

263:                                              ; preds = %257, %242
  %264 = phi i64 [ %262, %257 ], [ %253, %242 ]
  %265 = phi %"class.v8::internal::compiler::Node"*** [ %261, %257 ], [ %256, %242 ]
  %266 = phi %"class.v8::internal::compiler::Node"*** [ %260, %257 ], [ %255, %242 ]
  %267 = icmp eq %"class.v8::internal::compiler::Node"*** %265, %266
  br i1 %267, label %275, label %268

268:                                              ; preds = %263
  %269 = lshr i64 %264, 9
  %270 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %266, i64 %269
  %271 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %270, align 8
  %272 = and i64 %264, 511
  %273 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %271, i64 %272
  %274 = bitcast %"class.v8::internal::compiler::Node"** %273 to i64*
  br label %275

275:                                              ; preds = %268, %263
  %276 = phi i64* [ %274, %268 ], [ null, %263 ]
  store i64 %235, i64* %276, align 8
  %277 = load i64, i64* %66, align 8
  %278 = add i64 %277, 1
  store i64 %278, i64* %66, align 8
  br label %327

279:                                              ; preds = %228
  %280 = load i8, i8* %56, align 1, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %327, label %282

282:                                              ; preds = %279
  %283 = ptrtoint %"class.v8::internal::compiler::Node"* %229 to i64
  %284 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %229, i64 0, i32 2
  %285 = load i32, i32* %284, align 8
  %286 = load i32, i32* %60, align 4
  %287 = call i32 @llvm.usub.sat.i32(i32 %285, i32 %286) #8
  %288 = trunc i32 %287 to i8
  %289 = icmp eq i8 %288, 3
  br i1 %289, label %290, label %327

290:                                              ; preds = %282
  %291 = add i32 %286, 1
  store i32 %291, i32* %284, align 8
  %292 = load i64, i64* %62, align 8
  %293 = load i64, i64* %64, align 8
  %294 = sub i64 %292, %293
  %295 = icmp eq i64 %294, 0
  %296 = shl i64 %294, 6
  %297 = add i64 %296, -1
  %298 = select i1 %295, i64 0, i64 %297
  %299 = load i64, i64* %65, align 8
  %300 = load i64, i64* %66, align 8
  %301 = add i64 %300, %299
  %302 = icmp eq i64 %298, %301
  %303 = inttoptr i64 %293 to %"class.v8::internal::compiler::Node"***
  %304 = inttoptr i64 %292 to %"class.v8::internal::compiler::Node"***
  br i1 %302, label %305, label %311

305:                                              ; preds = %290
  call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %67) #8
  %306 = load i64, i64* %66, align 8
  %307 = load i64, i64* %65, align 8
  %308 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %63, align 8
  %309 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %61, align 8
  %310 = add i64 %307, %306
  br label %311

311:                                              ; preds = %305, %290
  %312 = phi i64 [ %310, %305 ], [ %301, %290 ]
  %313 = phi %"class.v8::internal::compiler::Node"*** [ %309, %305 ], [ %304, %290 ]
  %314 = phi %"class.v8::internal::compiler::Node"*** [ %308, %305 ], [ %303, %290 ]
  %315 = icmp eq %"class.v8::internal::compiler::Node"*** %313, %314
  br i1 %315, label %323, label %316

316:                                              ; preds = %311
  %317 = lshr i64 %312, 9
  %318 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %314, i64 %317
  %319 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %318, align 8
  %320 = and i64 %312, 511
  %321 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %319, i64 %320
  %322 = bitcast %"class.v8::internal::compiler::Node"** %321 to i64*
  br label %323

323:                                              ; preds = %316, %311
  %324 = phi i64* [ %322, %316 ], [ null, %311 ]
  store i64 %283, i64* %324, align 8
  %325 = load i64, i64* %66, align 8
  %326 = add i64 %325, 1
  store i64 %326, i64* %66, align 8
  br label %327

327:                                              ; preds = %231, %279, %323, %282, %275, %234
  %328 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %209, null
  br i1 %328, label %200, label %206

329:                                              ; preds = %200, %428
  %330 = phi i64 [ %429, %428 ], [ %204, %200 ]
  %331 = load i64, i64* %65, align 8
  %332 = add i64 %330, -1
  %333 = add i64 %332, %331
  %334 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %63, align 8
  %335 = lshr i64 %333, 9
  %336 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %334, i64 %335
  %337 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %336, align 8
  %338 = and i64 %333, 511
  %339 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %337, i64 %338
  %340 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %339, align 8
  %341 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %340, i64 0, i32 2
  %342 = load i32, i32* %341, align 8
  %343 = load i32, i32* %60, align 4
  %344 = call i32 @llvm.usub.sat.i32(i32 %342, i32 %343) #8
  %345 = trunc i32 %344 to i8
  %346 = icmp eq i8 %345, 1
  %347 = ptrtoint %"class.v8::internal::compiler::Node"*** %334 to i64
  br i1 %346, label %348, label %392

348:                                              ; preds = %329
  %349 = add i32 %343, 2
  store i32 %349, i32* %341, align 8
  %350 = load i64, i64* %6, align 8
  %351 = load i64, i64* %9, align 8
  %352 = sub i64 %350, %351
  %353 = icmp eq i64 %352, 0
  %354 = shl i64 %352, 5
  %355 = add i64 %354, -1
  %356 = select i1 %353, i64 0, i64 %355
  %357 = load i64, i64* %16, align 8
  %358 = load i64, i64* %18, align 8
  %359 = add i64 %358, %357
  %360 = icmp eq i64 %356, %359
  %361 = inttoptr i64 %351 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %362 = inttoptr i64 %350 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  br i1 %360, label %363, label %369

363:                                              ; preds = %348
  call void @_ZNSt3__15dequeIN2v88internal8compiler18EffectGraphReducer9NodeStateENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.32"* %68) #8
  %364 = load i64, i64* %18, align 8
  %365 = load i64, i64* %16, align 8
  %366 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %8, align 8
  %367 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %5, align 8
  %368 = add i64 %365, %364
  br label %369

369:                                              ; preds = %363, %348
  %370 = phi i64 [ %368, %363 ], [ %359, %348 ]
  %371 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %367, %363 ], [ %362, %348 ]
  %372 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %366, %363 ], [ %361, %348 ]
  %373 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %371, %372
  br i1 %373, label %381, label %374

374:                                              ; preds = %369
  %375 = lshr i64 %370, 8
  %376 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %372, i64 %375
  %377 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %376, align 8
  %378 = and i64 %370, 255
  %379 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState", %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* %377, i64 %378
  %380 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* %379 to i8*
  br label %381

381:                                              ; preds = %369, %374
  %382 = phi i8* [ %380, %374 ], [ null, %369 ]
  %383 = bitcast i8* %382 to %"class.v8::internal::compiler::Node"**
  store %"class.v8::internal::compiler::Node"* %340, %"class.v8::internal::compiler::Node"** %383, align 8
  %384 = getelementptr inbounds i8, i8* %382, i64 8
  %385 = bitcast i8* %384 to i32*
  store i32 0, i32* %385, align 8
  %386 = load i64, i64* %18, align 8
  %387 = add i64 %386, 1
  store i64 %387, i64* %18, align 8
  %388 = load i64, i64* %66, align 8
  %389 = load i64, i64* %65, align 8
  %390 = load i64, i64* %64, align 8
  %391 = add i64 %388, -1
  br label %392

392:                                              ; preds = %381, %329
  %393 = phi i64 [ %391, %381 ], [ %332, %329 ]
  %394 = phi i64 [ %390, %381 ], [ %347, %329 ]
  %395 = phi i64 [ %389, %381 ], [ %331, %329 ]
  %396 = phi i64 [ %388, %381 ], [ %330, %329 ]
  store i64 %393, i64* %66, align 8
  %397 = load i64, i64* %62, align 8
  %398 = sub i64 %397, %394
  %399 = icmp eq i64 %398, 0
  %400 = shl i64 %398, 6
  %401 = add i64 %400, -1
  %402 = select i1 %399, i64 0, i64 %401
  %403 = sub i64 1, %396
  %404 = sub i64 %403, %395
  %405 = add i64 %404, %402
  %406 = icmp ult i64 %405, 1024
  %407 = inttoptr i64 %397 to %"class.v8::internal::compiler::Node"***
  br i1 %406, label %428, label %408

408:                                              ; preds = %392
  %409 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %407, i64 -1
  %410 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %409, align 8
  %411 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %69, align 8
  %412 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %411, null
  br i1 %412, label %417, label %413

413:                                              ; preds = %408
  %414 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %411, i64 0, i32 1
  %415 = load i64, i64* %414, align 8
  %416 = icmp ugt i64 %415, 512
  br i1 %416, label %424, label %417

417:                                              ; preds = %413, %408
  %418 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %410, i64 1
  %419 = bitcast %"class.v8::internal::compiler::Node"** %418 to i64*
  store i64 512, i64* %419, align 8
  %420 = load i64, i64* %70, align 8
  %421 = bitcast %"class.v8::internal::compiler::Node"** %410 to i64*
  store i64 %420, i64* %421, align 8
  store %"class.v8::internal::compiler::Node"** %410, %"class.v8::internal::compiler::Node"*** %71, align 8
  %422 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %61, align 8
  %423 = load i64, i64* %66, align 8
  br label %424

424:                                              ; preds = %417, %413
  %425 = phi i64 [ %393, %413 ], [ %423, %417 ]
  %426 = phi %"class.v8::internal::compiler::Node"*** [ %407, %413 ], [ %422, %417 ]
  %427 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %426, i64 -1
  store %"class.v8::internal::compiler::Node"*** %427, %"class.v8::internal::compiler::Node"**** %61, align 8
  br label %428

428:                                              ; preds = %392, %424
  %429 = phi i64 [ %393, %392 ], [ %425, %424 ]
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %329

431:                                              ; preds = %428, %200
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %56) #8
  br label %432

432:                                              ; preds = %431, %112
  %433 = load i64, i64* %18, align 8
  br label %434

434:                                              ; preds = %432, %158
  %435 = phi i64 [ %433, %432 ], [ %164, %158 ]
  %436 = icmp eq i64 %435, 0
  br i1 %436, label %437, label %72

437:                                              ; preds = %434, %43
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties12IsEffectEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18EffectGraphReducer7RevisitEPNS1_4NodeE(%"class.v8::internal::compiler::EffectGraphReducer"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 @llvm.usub.sat.i32(i32 %5, i32 %7) #8
  %9 = trunc i32 %8 to i8
  %10 = icmp eq i8 %9, 3
  br i1 %10, label %11, label %55

11:                                               ; preds = %2
  %12 = add i32 %7, 1
  store i32 %12, i32* %4, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.v8::internal::compiler::Node"**** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.v8::internal::compiler::Node"**** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = icmp eq i64 %19, 0
  %21 = shl i64 %19, 6
  %22 = add i64 %21, -1
  %23 = select i1 %20, i64 0, i64 %22
  %24 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, %25
  %29 = icmp eq i64 %23, %28
  %30 = inttoptr i64 %18 to %"class.v8::internal::compiler::Node"***
  %31 = inttoptr i64 %15 to %"class.v8::internal::compiler::Node"***
  br i1 %29, label %32, label %39

32:                                               ; preds = %11
  %33 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %33) #8
  %34 = load i64, i64* %26, align 8
  %35 = load i64, i64* %24, align 8
  %36 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %16, align 8
  %37 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %13, align 8
  %38 = add i64 %35, %34
  br label %39

39:                                               ; preds = %32, %11
  %40 = phi i64 [ %38, %32 ], [ %28, %11 ]
  %41 = phi %"class.v8::internal::compiler::Node"*** [ %37, %32 ], [ %31, %11 ]
  %42 = phi %"class.v8::internal::compiler::Node"*** [ %36, %32 ], [ %30, %11 ]
  %43 = icmp eq %"class.v8::internal::compiler::Node"*** %41, %42
  br i1 %43, label %51, label %44

44:                                               ; preds = %39
  %45 = lshr i64 %40, 9
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %42, i64 %45
  %47 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %46, align 8
  %48 = and i64 %40, 511
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %47, i64 %48
  %50 = bitcast %"class.v8::internal::compiler::Node"** %49 to i64*
  br label %51

51:                                               ; preds = %39, %44
  %52 = phi i64* [ %50, %44 ], [ null, %39 ]
  store i64 %3, i64* %52, align 8
  %53 = load i64, i64* %26, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %26, align 8
  br label %55

55:                                               ; preds = %51, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15VariableTrackerC2EPNS1_7JSGraphEPNS1_18EffectGraphReducerEPNS0_4ZoneE(%"class.v8::internal::compiler::VariableTracker"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::EffectGraphReducer"*, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 0
  store %"class.v8::internal::Zone"* %3, %"class.v8::internal::Zone"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::JSGraph"* %1, %"class.v8::internal::compiler::JSGraph"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 2
  %8 = bitcast %"class.v8::internal::compiler::SparseSidetable"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  store %"class.v8::internal::Zone"* %3, %"class.v8::internal::Zone"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 2, i32 1
  %11 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %12 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedMap.1273", %"class.v8::internal::ZoneUnorderedMap.1273"* %10, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::__compressed_pair_elem.1283"* %13 to i64*
  %15 = bitcast %"class.v8::internal::ZoneUnorderedMap.1273"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #8
  store i64 %11, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1279"* null, %"struct.std::__1::__hash_node_base.1279"** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1, i32 1
  %18 = bitcast %"struct.std::__1::__compressed_pair_elem.1287"* %17 to i64*
  store i64 %11, i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 3
  %21 = bitcast %"class.std::__1::__compressed_pair.1293"* %20 to i32*
  store i32 1065353216, i32* %21, align 4
  %22 = tail call i64 @_ZNSt3__112__next_primeEm(i64 100) #8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp ugt i64 %22, %24
  br i1 %25, label %26, label %27

26:                                               ; preds = %4
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal8compiler15VariableTracker5StateEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1275"* %12, i64 %22) #8
  br label %56

27:                                               ; preds = %4
  %28 = icmp ult i64 %22, %24
  br i1 %28, label %29, label %56

29:                                               ; preds = %27
  %30 = icmp ugt i64 %24, 2
  %31 = tail call i64 @llvm.ctpop.i64(i64 %24) #8, !range !3
  %32 = icmp ult i64 %31, 2
  %33 = and i1 %30, %32
  %34 = load i64, i64* %19, align 8
  %35 = uitofp i64 %34 to float
  %36 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 3, i32 0, i32 0
  %37 = load float, float* %36, align 4
  %38 = fdiv float %35, %37
  %39 = tail call float @llvm.ceil.f32(float %38) #8
  %40 = fptoui float %39 to i64
  br i1 %33, label %41, label %48

41:                                               ; preds = %29
  %42 = icmp ult i64 %40, 2
  br i1 %42, label %50, label %43

43:                                               ; preds = %41
  %44 = add i64 %40, -1
  %45 = tail call i64 @llvm.ctlz.i64(i64 %44, i1 true) #8, !range !3
  %46 = sub nuw nsw i64 64, %45
  %47 = shl i64 1, %46
  br label %50

48:                                               ; preds = %29
  %49 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %40) #8
  br label %50

50:                                               ; preds = %48, %43, %41
  %51 = phi i64 [ %49, %48 ], [ %47, %43 ], [ %40, %41 ]
  %52 = icmp ult i64 %22, %51
  %53 = select i1 %52, i64 %51, i64 %22
  %54 = icmp ult i64 %53, %24
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal8compiler15VariableTracker5StateEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1275"* %12, i64 %53) #8
  br label %56

56:                                               ; preds = %26, %27, %50, %55
  %57 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 3
  %58 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 1
  %59 = bitcast %"struct.std::__1::__compressed_pair_elem.1304"* %58 to i64*
  %60 = bitcast %"class.v8::internal::ZoneVector.1299"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #8
  store i64 %11, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 4
  store %"class.v8::internal::compiler::EffectGraphReducer"* %2, %"class.v8::internal::compiler::EffectGraphReducer"** %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 5
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 6
  %64 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %2, i64 0, i32 6
  %65 = bitcast %"class.v8::internal::TickCounter"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.v8::internal::TickCounter"** %63 to i64*
  store i64 %66, i64* %67, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15VariableTracker5ScopeC2EPS2_PNS1_4NodeEPNS1_18EffectGraphReducer9ReductionE(%"class.v8::internal::compiler::VariableTracker::Scope"* nocapture, %"class.v8::internal::compiler::VariableTracker"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::compiler::VariableTracker::State", align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::Scope", %"class.v8::internal::compiler::VariableTracker::Scope"* %0, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::Scope", %"class.v8::internal::compiler::VariableTracker::Scope"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::EffectGraphReducer::Reduction"* %3, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::Scope", %"class.v8::internal::compiler::VariableTracker::Scope"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::VariableTracker"* %1, %"class.v8::internal::compiler::VariableTracker"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::Scope", %"class.v8::internal::compiler::VariableTracker::Scope"* %0, i64 0, i32 2
  %10 = bitcast %"class.v8::internal::compiler::VariableTracker"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::Scope", %"class.v8::internal::compiler::VariableTracker::Scope"* %0, i64 0, i32 2, i32 0, i32 2
  %13 = bitcast %"class.v8::internal::compiler::VariableTracker::State"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #8
  %14 = bitcast %"class.v8::internal::Zone"** %12 to i64*
  store i64 %11, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %16 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %16, i64 0, i32 2
  %18 = load i16, i16* %17, align 8
  %19 = icmp eq i16 %18, 36
  br i1 %19, label %20, label %22

20:                                               ; preds = %4
  %21 = bitcast %"class.v8::internal::compiler::VariableTracker::State"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #8
  call void @_ZN2v88internal8compiler15VariableTracker11MergeInputsEPNS1_4NodeE(%"class.v8::internal::compiler::VariableTracker::State"* nonnull sret %5, %"class.v8::internal::compiler::VariableTracker"* %1, %"class.v8::internal::compiler::Node"* %2)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* nonnull align 8 %21, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #8
  br label %131

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %16, i64 0, i32 6
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %131

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %16, i64 0, i32 5
  %28 = load i32, i32* %27, align 4
  %29 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %16) #8
  %30 = zext i1 %29 to i32
  %31 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %15, align 8
  %32 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %31) #8
  %33 = zext i1 %32 to i32
  %34 = add i32 %28, %30
  %35 = add i32 %34, %33
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 251658240
  %39 = icmp eq i32 %38, 251658240
  %40 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %41 = add i64 %40, 32
  br i1 %39, label %42, label %46

42:                                               ; preds = %26
  %43 = inttoptr i64 %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 16
  br label %46

46:                                               ; preds = %26, %42
  %47 = phi i64 [ %45, %42 ], [ %41, %26 ]
  %48 = inttoptr i64 %47 to %"class.v8::internal::compiler::Node"**
  %49 = sext i32 %35 to i64
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, i64 %49
  %51 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %51, i64 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, 16777215
  %55 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %54) #8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %126, label %59

59:                                               ; preds = %46
  %60 = tail call i64 @llvm.ctpop.i64(i64 %57) #8, !range !3
  %61 = icmp ugt i64 %60, 1
  br i1 %61, label %65, label %62

62:                                               ; preds = %59
  %63 = add i64 %57, -1
  %64 = and i64 %63, %55
  br label %69

65:                                               ; preds = %59
  %66 = icmp ult i64 %55, %57
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %55, %57
  br label %69

69:                                               ; preds = %67, %65, %62
  %70 = phi i64 [ %64, %62 ], [ %68, %67 ], [ %55, %65 ]
  %71 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %72, i64 %70
  %74 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %74, null
  br i1 %75, label %126, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %74, i64 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %77, align 8
  %79 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %78, null
  br i1 %79, label %126, label %80

80:                                               ; preds = %76
  %81 = add i64 %57, -1
  br i1 %61, label %82, label %104

82:                                               ; preds = %80, %100
  %83 = phi %"struct.std::__1::__hash_node_base.1279"* [ %102, %100 ], [ %78, %80 ]
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %83, i64 1
  %85 = bitcast %"struct.std::__1::__hash_node_base.1279"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %55, %86
  br i1 %87, label %95, label %88

88:                                               ; preds = %82
  %89 = icmp ult i64 %86, %57
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %86, %57
  br label %92

92:                                               ; preds = %90, %88
  %93 = phi i64 [ %91, %90 ], [ %86, %88 ]
  %94 = icmp eq i64 %93, %70
  br i1 %94, label %100, label %126

95:                                               ; preds = %82
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %83, i64 2
  %97 = bitcast %"struct.std::__1::__hash_node_base.1279"* %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, %54
  br i1 %99, label %122, label %100

100:                                              ; preds = %95, %92
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %83, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %102, null
  br i1 %103, label %126, label %82

104:                                              ; preds = %80, %118
  %105 = phi %"struct.std::__1::__hash_node_base.1279"* [ %120, %118 ], [ %78, %80 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %105, i64 1
  %107 = bitcast %"struct.std::__1::__hash_node_base.1279"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %55, %108
  br i1 %109, label %113, label %110

110:                                              ; preds = %104
  %111 = and i64 %108, %81
  %112 = icmp eq i64 %111, %70
  br i1 %112, label %118, label %126

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %105, i64 2
  %115 = bitcast %"struct.std::__1::__hash_node_base.1279"* %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, %54
  br i1 %117, label %122, label %118

118:                                              ; preds = %113, %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %105, i64 0, i32 0
  %120 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %120, null
  br i1 %121, label %126, label %104

122:                                              ; preds = %113, %95
  %123 = phi %"struct.std::__1::__hash_node_base.1279"* [ %83, %95 ], [ %105, %113 ]
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %123, i64 3
  %125 = bitcast %"struct.std::__1::__hash_node_base.1279"* %124 to %"class.v8::internal::compiler::VariableTracker::State"*
  br label %128

126:                                              ; preds = %118, %110, %100, %92, %76, %69, %46
  %127 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 2, i32 0
  br label %128

128:                                              ; preds = %122, %126
  %129 = phi %"class.v8::internal::compiler::VariableTracker::State"* [ %125, %122 ], [ %127, %126 ]
  %130 = bitcast %"class.v8::internal::compiler::VariableTracker::State"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %130, i64 24, i1 false)
  br label %131

131:                                              ; preds = %128, %22, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15VariableTracker11MergeInputsEPNS1_4NodeE(%"class.v8::internal::compiler::VariableTracker::State"* noalias sret, %"class.v8::internal::compiler::VariableTracker"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 7
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %13, label %12, !prof !4

12:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0)) #9
  unreachable

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %6) #8
  %17 = zext i1 %16 to i32
  %18 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %19 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %18) #8
  %20 = zext i1 %19 to i32
  %21 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %21, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %15, %17
  %25 = add i32 %24, %20
  %26 = add i32 %25, %23
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 251658240
  %30 = icmp eq i32 %29, 251658240
  %31 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %32 = add i64 %31, 32
  br i1 %30, label %33, label %37

33:                                               ; preds = %13
  %34 = inttoptr i64 %32 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, 16
  br label %37

37:                                               ; preds = %13, %33
  %38 = phi i64 [ %36, %33 ], [ %32, %13 ]
  %39 = inttoptr i64 %38 to %"class.v8::internal::compiler::Node"**
  %40 = sext i32 %26 to i64
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %39, i64 %40
  %42 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %41, align 8
  %43 = ptrtoint %"class.v8::internal::compiler::Node"* %42 to i64
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %42, i64 0, i32 0
  %45 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %45, i64 0, i32 2
  %47 = load i16, i16* %46, align 8
  %48 = icmp ne i16 %47, 1
  %49 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 3, i32 0
  %50 = add nsw i32 %8, 1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast %"class.v8::internal::compiler::Node"*** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector.1300"* %49 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = ashr exact i64 %57, 3
  %59 = icmp ult i64 %58, %51
  br i1 %59, label %60, label %268

60:                                               ; preds = %37
  %61 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %62 = bitcast %"class.v8::internal::compiler::Node"*** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %63, %56
  %65 = ashr exact i64 %64, 3
  %66 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 3, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %67 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %66, align 8
  %68 = shl nsw i64 %51, 3
  %69 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %67, i64 0, i32 2
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %67, i64 0, i32 3
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %72, %70
  %74 = icmp ugt i64 %68, %73
  br i1 %74, label %75, label %77, !prof !5

75:                                               ; preds = %60
  %76 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %67, i64 %68) #8
  br label %79

77:                                               ; preds = %60
  %78 = add i64 %70, %68
  store i64 %78, i64* %69, align 8
  br label %79

79:                                               ; preds = %77, %75
  %80 = phi i64 [ %76, %75 ], [ %70, %77 ]
  %81 = inttoptr i64 %80 to %"class.v8::internal::compiler::Node"**
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 %65
  %83 = ptrtoint %"class.v8::internal::compiler::Node"** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 %51
  %85 = ptrtoint %"class.v8::internal::compiler::Node"** %84 to i64
  %86 = getelementptr inbounds %"class.std::__1::vector.1300", %"class.std::__1::vector.1300"* %49, i64 0, i32 0, i32 0
  %87 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %86, align 8
  %88 = ptrtoint %"class.v8::internal::compiler::Node"** %87 to i64
  %89 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %61, align 8
  %90 = icmp eq %"class.v8::internal::compiler::Node"** %89, %87
  br i1 %90, label %263, label %91

91:                                               ; preds = %79
  %92 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 -1
  %93 = ptrtoint %"class.v8::internal::compiler::Node"** %92 to i64
  %94 = sub i64 %93, %88
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = icmp ult i64 %96, 4
  br i1 %97, label %190, label %98

98:                                               ; preds = %91
  %99 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 -1
  %100 = ptrtoint %"class.v8::internal::compiler::Node"** %99 to i64
  %101 = sub i64 %100, %88
  %102 = lshr i64 %101, 3
  %103 = xor i64 %102, -1
  %104 = add nsw i64 %65, %103
  %105 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 %104
  %106 = xor i64 %102, -1
  %107 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 %106
  %108 = icmp ult %"class.v8::internal::compiler::Node"** %105, %89
  %109 = icmp ult %"class.v8::internal::compiler::Node"** %107, %82
  %110 = and i1 %108, %109
  br i1 %110, label %190, label %111

111:                                              ; preds = %98
  %112 = and i64 %96, 4611686018427387900
  %113 = sub nsw i64 0, %112
  %114 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, i64 %113
  %115 = sub nsw i64 0, %112
  %116 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 %115
  %117 = add nsw i64 %112, -4
  %118 = lshr exact i64 %117, 2
  %119 = add nuw nsw i64 %118, 1
  %120 = and i64 %119, 1
  %121 = icmp eq i64 %117, 0
  br i1 %121, label %166, label %122

122:                                              ; preds = %111
  %123 = sub nuw nsw i64 %119, %120
  %124 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, i64 -1
  %125 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 -1
  %126 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, i64 -1
  %127 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 -1
  br label %128

128:                                              ; preds = %128, %122
  %129 = phi i64 [ 0, %122 ], [ %163, %128 ]
  %130 = phi i64 [ %123, %122 ], [ %164, %128 ]
  %131 = sub i64 0, %129
  %132 = sub i64 0, %129
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %124, i64 %131
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %125, i64 %132
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %134, i64 -1
  %136 = bitcast %"class.v8::internal::compiler::Node"** %135 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 8, !alias.scope !6
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %134, i64 -2
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %138, i64 -1
  %140 = bitcast %"class.v8::internal::compiler::Node"** %139 to <2 x i64>*
  %141 = load <2 x i64>, <2 x i64>* %140, align 8, !alias.scope !6
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, i64 -1
  %143 = bitcast %"class.v8::internal::compiler::Node"** %142 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %143, align 8, !alias.scope !9, !noalias !6
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, i64 -2
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %144, i64 -1
  %146 = bitcast %"class.v8::internal::compiler::Node"** %145 to <2 x i64>*
  store <2 x i64> %141, <2 x i64>* %146, align 8, !alias.scope !9, !noalias !6
  %147 = sub nuw nsw i64 -4, %129
  %148 = sub nuw nsw i64 -4, %129
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, i64 %147
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 %148
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 -1
  %152 = bitcast %"class.v8::internal::compiler::Node"** %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !6
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 -2
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %154, i64 -1
  %156 = bitcast %"class.v8::internal::compiler::Node"** %155 to <2 x i64>*
  %157 = load <2 x i64>, <2 x i64>* %156, align 8, !alias.scope !6
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %149, i64 -1
  %159 = bitcast %"class.v8::internal::compiler::Node"** %158 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %159, align 8, !alias.scope !9, !noalias !6
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %149, i64 -2
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %160, i64 -1
  %162 = bitcast %"class.v8::internal::compiler::Node"** %161 to <2 x i64>*
  store <2 x i64> %157, <2 x i64>* %162, align 8, !alias.scope !9, !noalias !6
  %163 = add i64 %129, 8
  %164 = add i64 %130, -2
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %128, !llvm.loop !11

166:                                              ; preds = %128, %111
  %167 = phi i64 [ 0, %111 ], [ %163, %128 ]
  %168 = icmp eq i64 %120, 0
  br i1 %168, label %188, label %169

169:                                              ; preds = %166
  %170 = sub i64 0, %167
  %171 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, i64 -1
  %172 = sub i64 0, %167
  %173 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 -1
  %174 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %171, i64 %170
  %175 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %173, i64 %172
  %176 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %175, i64 -1
  %177 = bitcast %"class.v8::internal::compiler::Node"** %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8, !alias.scope !6
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %175, i64 -2
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 -1
  %181 = bitcast %"class.v8::internal::compiler::Node"** %180 to <2 x i64>*
  %182 = load <2 x i64>, <2 x i64>* %181, align 8, !alias.scope !6
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %174, i64 -1
  %184 = bitcast %"class.v8::internal::compiler::Node"** %183 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %184, align 8, !alias.scope !9, !noalias !6
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %174, i64 -2
  %186 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %185, i64 -1
  %187 = bitcast %"class.v8::internal::compiler::Node"** %186 to <2 x i64>*
  store <2 x i64> %182, <2 x i64>* %187, align 8, !alias.scope !9, !noalias !6
  br label %188

188:                                              ; preds = %166, %169
  %189 = icmp eq i64 %96, %112
  br i1 %189, label %260, label %190

190:                                              ; preds = %188, %98, %91
  %191 = phi %"class.v8::internal::compiler::Node"** [ %82, %98 ], [ %82, %91 ], [ %114, %188 ]
  %192 = phi %"class.v8::internal::compiler::Node"** [ %89, %98 ], [ %89, %91 ], [ %116, %188 ]
  %193 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %192, i64 -1
  %194 = ptrtoint %"class.v8::internal::compiler::Node"** %193 to i64
  %195 = sub i64 %194, %88
  %196 = lshr i64 %195, 3
  %197 = add nuw nsw i64 %196, 1
  %198 = and i64 %197, 7
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %211, label %200

200:                                              ; preds = %190, %200
  %201 = phi %"class.v8::internal::compiler::Node"** [ %204, %200 ], [ %191, %190 ]
  %202 = phi %"class.v8::internal::compiler::Node"** [ %205, %200 ], [ %192, %190 ]
  %203 = phi i64 [ %209, %200 ], [ %198, %190 ]
  %204 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %201, i64 -1
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %202, i64 -1
  %206 = bitcast %"class.v8::internal::compiler::Node"** %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"class.v8::internal::compiler::Node"** %204 to i64*
  store i64 %207, i64* %208, align 8
  %209 = add i64 %203, -1
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %211, label %200, !llvm.loop !13

211:                                              ; preds = %200, %190
  %212 = phi %"class.v8::internal::compiler::Node"** [ undef, %190 ], [ %204, %200 ]
  %213 = phi %"class.v8::internal::compiler::Node"** [ %191, %190 ], [ %204, %200 ]
  %214 = phi %"class.v8::internal::compiler::Node"** [ %192, %190 ], [ %205, %200 ]
  %215 = icmp ult i64 %195, 56
  br i1 %215, label %260, label %216

216:                                              ; preds = %211, %216
  %217 = phi %"class.v8::internal::compiler::Node"** [ %254, %216 ], [ %213, %211 ]
  %218 = phi %"class.v8::internal::compiler::Node"** [ %255, %216 ], [ %214, %211 ]
  %219 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %217, i64 -1
  %220 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -1
  %221 = bitcast %"class.v8::internal::compiler::Node"** %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.v8::internal::compiler::Node"** %219 to i64*
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %217, i64 -2
  %225 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -2
  %226 = bitcast %"class.v8::internal::compiler::Node"** %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = bitcast %"class.v8::internal::compiler::Node"** %224 to i64*
  store i64 %227, i64* %228, align 8
  %229 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %217, i64 -3
  %230 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -3
  %231 = bitcast %"class.v8::internal::compiler::Node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.v8::internal::compiler::Node"** %229 to i64*
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %217, i64 -4
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -4
  %236 = bitcast %"class.v8::internal::compiler::Node"** %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.v8::internal::compiler::Node"** %234 to i64*
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %217, i64 -5
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -5
  %241 = bitcast %"class.v8::internal::compiler::Node"** %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.v8::internal::compiler::Node"** %239 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %217, i64 -6
  %245 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -6
  %246 = bitcast %"class.v8::internal::compiler::Node"** %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"class.v8::internal::compiler::Node"** %244 to i64*
  store i64 %247, i64* %248, align 8
  %249 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %217, i64 -7
  %250 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -7
  %251 = bitcast %"class.v8::internal::compiler::Node"** %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"class.v8::internal::compiler::Node"** %249 to i64*
  store i64 %252, i64* %253, align 8
  %254 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %217, i64 -8
  %255 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -8
  %256 = bitcast %"class.v8::internal::compiler::Node"** %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = bitcast %"class.v8::internal::compiler::Node"** %254 to i64*
  store i64 %257, i64* %258, align 8
  %259 = icmp eq %"class.v8::internal::compiler::Node"** %255, %87
  br i1 %259, label %260, label %216, !llvm.loop !15

260:                                              ; preds = %211, %216, %188
  %261 = phi %"class.v8::internal::compiler::Node"** [ %114, %188 ], [ %212, %211 ], [ %254, %216 ]
  %262 = ptrtoint %"class.v8::internal::compiler::Node"** %261 to i64
  br label %263

263:                                              ; preds = %260, %79
  %264 = phi i64 [ %262, %260 ], [ %83, %79 ]
  store i64 %264, i64* %55, align 8
  store i64 %83, i64* %62, align 8
  store i64 %85, i64* %53, align 8
  %265 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %266 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %265, i64 0, i32 6
  %267 = load i32, i32* %266, align 8
  br label %268

268:                                              ; preds = %37, %263
  %269 = phi i32 [ %23, %37 ], [ %267, %263 ]
  %270 = phi %"class.v8::internal::compiler::Operator"* [ %21, %37 ], [ %265, %263 ]
  %271 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 2
  %272 = icmp sgt i32 %269, 0
  br i1 %272, label %274, label %273, !prof !4

273:                                              ; preds = %268
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %270, i64 0, i32 5
  %276 = load i32, i32* %275, align 4
  %277 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %270) #8
  %278 = zext i1 %277 to i32
  %279 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %280 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %279) #8
  %281 = zext i1 %280 to i32
  %282 = add i32 %276, %278
  %283 = add i32 %282, %281
  %284 = load i32, i32* %27, align 4
  %285 = and i32 %284, 251658240
  %286 = icmp eq i32 %285, 251658240
  br i1 %286, label %287, label %291

287:                                              ; preds = %274
  %288 = inttoptr i64 %32 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = add i64 %289, 16
  br label %291

291:                                              ; preds = %274, %287
  %292 = phi i64 [ %290, %287 ], [ %32, %274 ]
  %293 = inttoptr i64 %292 to %"class.v8::internal::compiler::Node"**
  %294 = sext i32 %283 to i64
  %295 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %293, i64 %294
  %296 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %295, align 8
  %297 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %296, i64 0, i32 3
  %298 = load i32, i32* %297, align 4
  %299 = and i32 %298, 16777215
  %300 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %299) #8
  %301 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %302 = load i64, i64* %301, align 8
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %371, label %304

304:                                              ; preds = %291
  %305 = tail call i64 @llvm.ctpop.i64(i64 %302) #8, !range !3
  %306 = icmp ugt i64 %305, 1
  br i1 %306, label %310, label %307

307:                                              ; preds = %304
  %308 = add i64 %302, -1
  %309 = and i64 %308, %300
  br label %314

310:                                              ; preds = %304
  %311 = icmp ult i64 %300, %302
  br i1 %311, label %314, label %312

312:                                              ; preds = %310
  %313 = urem i64 %300, %302
  br label %314

314:                                              ; preds = %312, %310, %307
  %315 = phi i64 [ %309, %307 ], [ %313, %312 ], [ %300, %310 ]
  %316 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %316, align 8
  %318 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %317, i64 %315
  %319 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %318, align 8
  %320 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %319, null
  br i1 %320, label %371, label %321

321:                                              ; preds = %314
  %322 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %319, i64 0, i32 0
  %323 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %322, align 8
  %324 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %323, null
  br i1 %324, label %371, label %325

325:                                              ; preds = %321
  %326 = add i64 %302, -1
  br i1 %306, label %327, label %349

327:                                              ; preds = %325, %345
  %328 = phi %"struct.std::__1::__hash_node_base.1279"* [ %347, %345 ], [ %323, %325 ]
  %329 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %328, i64 1
  %330 = bitcast %"struct.std::__1::__hash_node_base.1279"* %329 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = icmp eq i64 %300, %331
  br i1 %332, label %340, label %333

333:                                              ; preds = %327
  %334 = icmp ult i64 %331, %302
  br i1 %334, label %337, label %335

335:                                              ; preds = %333
  %336 = urem i64 %331, %302
  br label %337

337:                                              ; preds = %335, %333
  %338 = phi i64 [ %336, %335 ], [ %331, %333 ]
  %339 = icmp eq i64 %338, %315
  br i1 %339, label %345, label %371

340:                                              ; preds = %327
  %341 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %328, i64 2
  %342 = bitcast %"struct.std::__1::__hash_node_base.1279"* %341 to i32*
  %343 = load i32, i32* %342, align 4
  %344 = icmp eq i32 %343, %299
  br i1 %344, label %367, label %345

345:                                              ; preds = %340, %337
  %346 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %328, i64 0, i32 0
  %347 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %346, align 8
  %348 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %347, null
  br i1 %348, label %371, label %327

349:                                              ; preds = %325, %363
  %350 = phi %"struct.std::__1::__hash_node_base.1279"* [ %365, %363 ], [ %323, %325 ]
  %351 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %350, i64 1
  %352 = bitcast %"struct.std::__1::__hash_node_base.1279"* %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = icmp eq i64 %300, %353
  br i1 %354, label %358, label %355

355:                                              ; preds = %349
  %356 = and i64 %353, %326
  %357 = icmp eq i64 %356, %315
  br i1 %357, label %363, label %371

358:                                              ; preds = %349
  %359 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %350, i64 2
  %360 = bitcast %"struct.std::__1::__hash_node_base.1279"* %359 to i32*
  %361 = load i32, i32* %360, align 4
  %362 = icmp eq i32 %361, %299
  br i1 %362, label %367, label %363

363:                                              ; preds = %358, %355
  %364 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %350, i64 0, i32 0
  %365 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %364, align 8
  %366 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %365, null
  br i1 %366, label %371, label %349

367:                                              ; preds = %358, %340
  %368 = phi %"struct.std::__1::__hash_node_base.1279"* [ %328, %340 ], [ %350, %358 ]
  %369 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %368, i64 3
  %370 = bitcast %"struct.std::__1::__hash_node_base.1279"* %369 to %"class.v8::internal::compiler::VariableTracker::State"*
  br label %373

371:                                              ; preds = %363, %355, %345, %337, %321, %314, %291
  %372 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable", %"class.v8::internal::compiler::SparseSidetable"* %271, i64 0, i32 0
  br label %373

373:                                              ; preds = %367, %371
  %374 = phi %"class.v8::internal::compiler::VariableTracker::State"* [ %370, %367 ], [ %372, %371 ]
  %375 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::State", %"class.v8::internal::compiler::VariableTracker::State"* %374, i64 0, i32 0, i32 0
  %376 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %375, align 8
  %377 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::State", %"class.v8::internal::compiler::VariableTracker::State"* %374, i64 0, i32 0, i32 1
  %378 = bitcast %"class.v8::internal::compiler::Node"** %377 to <2 x i64>*
  %379 = load <2 x i64>, <2 x i64>* %378, align 8
  %380 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::State", %"class.v8::internal::compiler::VariableTracker::State"* %0, i64 0, i32 0, i32 0
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %376, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %380, align 8
  %381 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::State", %"class.v8::internal::compiler::VariableTracker::State"* %0, i64 0, i32 0, i32 1
  %382 = bitcast %"class.v8::internal::compiler::Node"** %381 to <2 x i64>*
  store <2 x i64> %379, <2 x i64>* %382, align 8
  %383 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %383) #8
  %384 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %376, null
  br i1 %384, label %385, label %392

385:                                              ; preds = %373
  %386 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %4, i64 0, i32 0
  store i32 0, i32* %386, align 8, !alias.scope !16
  %387 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %4, i64 0, i32 1, i32 0, i32 0
  %388 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %4, i64 0, i32 4
  %389 = bitcast %"class.std::__1::__tree_end_node"** %387 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %389, i8 0, i64 16, i1 false) #8, !alias.scope !16
  %390 = bitcast %"class.v8::internal::compiler::Node"** %388 to i64*
  %391 = extractelement <2 x i64> %379, i32 0
  store i64 %391, i64* %390, align 8, !alias.scope !16
  br label %417

392:                                              ; preds = %373
  %393 = extractelement <2 x i64> %379, i32 0
  %394 = inttoptr i64 %393 to %"class.v8::internal::compiler::Node"*
  call void @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iterator5beginEPKNS9_11FocusedTreeES5_(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* nonnull sret %4, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* nonnull %376, %"class.v8::internal::compiler::Node"* %394) #8
  %395 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %4, i64 0, i32 2
  %396 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %395, align 8
  %397 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %4, i64 0, i32 2
  %398 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %396, null
  br i1 %398, label %417, label %399

399:                                              ; preds = %392
  %400 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %4, i64 0, i32 1
  %401 = bitcast %"class.std::__1::__map_const_iterator"* %400 to %"class.std::__1::__tree_node"**
  %402 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 6
  %403 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %404 = bitcast %"class.v8::internal::compiler::Node"*** %403 to i64*
  %405 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 3, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %406 = getelementptr inbounds %"class.std::__1::vector.1300", %"class.std::__1::vector.1300"* %49, i64 0, i32 0, i32 0
  %407 = icmp sgt i32 %8, 1
  %408 = inttoptr i64 %32 to i64*
  %409 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable", %"class.v8::internal::compiler::SparseSidetable"* %271, i64 0, i32 0
  %411 = icmp sgt i32 %8, 0
  %412 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 1
  %413 = bitcast %"class.v8::internal::compiler::JSGraph"** %412 to %"class.v8::internal::compiler::MachineGraph"**
  %414 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 4
  %415 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::State", %"class.v8::internal::compiler::VariableTracker::State"* %0, i64 0, i32 0
  %416 = zext i32 %8 to i64
  br label %418

417:                                              ; preds = %1523, %385, %392
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %383) #8
  ret void

418:                                              ; preds = %399, %1523
  %419 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %396, %399 ], [ %1525, %1523 ]
  %420 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %419, i64 0, i32 3
  %421 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %420, align 8
  %422 = icmp eq %"class.v8::internal::ZoneMap"* %421, null
  %423 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %419, i64 0, i32 0, i32 0, i32 0, i32 0
  %424 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %419, i64 0, i32 0, i32 0, i32 1
  %425 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %401, align 8
  %426 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %425, i64 0, i32 1, i32 0, i32 0, i32 0
  %427 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %425, i64 0, i32 1, i32 0, i32 1
  %428 = select i1 %422, %"class.v8::internal::compiler::Node"** %424, %"class.v8::internal::compiler::Node"** %427
  %429 = select i1 %422, i32* %423, i32* %426
  %430 = load i32, i32* %429, align 8
  %431 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %428, align 8
  %432 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %402, align 8
  call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %432) #8
  %433 = ptrtoint %"class.v8::internal::compiler::Node"* %431 to i64
  %434 = icmp eq %"class.v8::internal::compiler::Node"* %431, null
  br i1 %434, label %1523, label %435

435:                                              ; preds = %418
  %436 = load i64, i64* %55, align 8
  store i64 %436, i64* %404, align 8
  %437 = inttoptr i64 %436 to %"class.v8::internal::compiler::Node"**
  %438 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %52, align 8
  %439 = icmp eq %"class.v8::internal::compiler::Node"** %438, %437
  br i1 %439, label %444, label %440

440:                                              ; preds = %435
  %441 = inttoptr i64 %436 to i64*
  store i64 %433, i64* %441, align 8
  %442 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %437, i64 1
  %443 = ptrtoint %"class.v8::internal::compiler::Node"** %442 to i64
  store i64 %443, i64* %404, align 8
  br label %640

444:                                              ; preds = %435
  %445 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %405, align 8
  %446 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %445, i64 0, i32 2
  %447 = load i64, i64* %446, align 8
  %448 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %445, i64 0, i32 3
  %449 = load i64, i64* %448, align 8
  %450 = sub i64 %449, %447
  %451 = icmp ult i64 %450, 8
  br i1 %451, label %452, label %454, !prof !5

452:                                              ; preds = %444
  %453 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %445, i64 8) #8
  br label %456

454:                                              ; preds = %444
  %455 = add i64 %447, 8
  store i64 %455, i64* %446, align 8
  br label %456

456:                                              ; preds = %452, %454
  %457 = phi i64 [ %453, %452 ], [ %447, %454 ]
  %458 = inttoptr i64 %457 to %"class.v8::internal::compiler::Node"**
  %459 = inttoptr i64 %457 to i8*
  %460 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %458, i64 1
  %461 = ptrtoint %"class.v8::internal::compiler::Node"** %460 to i64
  %462 = inttoptr i64 %457 to i64*
  store i64 %433, i64* %462, align 8
  %463 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %406, align 8
  %464 = ptrtoint %"class.v8::internal::compiler::Node"** %463 to i64
  %465 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %403, align 8
  %466 = icmp eq %"class.v8::internal::compiler::Node"** %465, %463
  br i1 %466, label %637, label %467

467:                                              ; preds = %456
  %468 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %465, i64 -1
  %469 = ptrtoint %"class.v8::internal::compiler::Node"** %468 to i64
  %470 = sub i64 %469, %464
  %471 = lshr i64 %470, 3
  %472 = add nuw nsw i64 %471, 1
  %473 = icmp ult i64 %472, 4
  br i1 %473, label %567, label %474

474:                                              ; preds = %467
  %475 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %458, i64 -1
  %476 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %465, i64 -1
  %477 = ptrtoint %"class.v8::internal::compiler::Node"** %476 to i64
  %478 = sub i64 %477, %464
  %479 = lshr i64 %478, 3
  %480 = sub nsw i64 0, %479
  %481 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %475, i64 %480
  %482 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %465, i64 -1
  %483 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %482, i64 %480
  %484 = bitcast %"class.v8::internal::compiler::Node"** %483 to i8*
  %485 = icmp ult %"class.v8::internal::compiler::Node"** %481, %465
  %486 = icmp ult i8* %484, %459
  %487 = and i1 %485, %486
  br i1 %487, label %567, label %488

488:                                              ; preds = %474
  %489 = and i64 %472, 4611686018427387900
  %490 = sub nsw i64 0, %489
  %491 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %458, i64 %490
  %492 = sub nsw i64 0, %489
  %493 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %465, i64 %492
  %494 = add nsw i64 %489, -4
  %495 = lshr exact i64 %494, 2
  %496 = add nuw nsw i64 %495, 1
  %497 = and i64 %496, 1
  %498 = icmp eq i64 %494, 0
  br i1 %498, label %543, label %499

499:                                              ; preds = %488
  %500 = sub nuw nsw i64 %496, %497
  %501 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %458, i64 -1
  %502 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %465, i64 -1
  %503 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %458, i64 -1
  %504 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %465, i64 -1
  br label %505

505:                                              ; preds = %505, %499
  %506 = phi i64 [ 0, %499 ], [ %540, %505 ]
  %507 = phi i64 [ %500, %499 ], [ %541, %505 ]
  %508 = sub i64 0, %506
  %509 = sub i64 0, %506
  %510 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %501, i64 %508
  %511 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %502, i64 %509
  %512 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %511, i64 -1
  %513 = bitcast %"class.v8::internal::compiler::Node"** %512 to <2 x i64>*
  %514 = load <2 x i64>, <2 x i64>* %513, align 8, !alias.scope !25
  %515 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %511, i64 -2
  %516 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %515, i64 -1
  %517 = bitcast %"class.v8::internal::compiler::Node"** %516 to <2 x i64>*
  %518 = load <2 x i64>, <2 x i64>* %517, align 8, !alias.scope !25
  %519 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %510, i64 -1
  %520 = bitcast %"class.v8::internal::compiler::Node"** %519 to <2 x i64>*
  store <2 x i64> %514, <2 x i64>* %520, align 8, !alias.scope !28, !noalias !25
  %521 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %510, i64 -2
  %522 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %521, i64 -1
  %523 = bitcast %"class.v8::internal::compiler::Node"** %522 to <2 x i64>*
  store <2 x i64> %518, <2 x i64>* %523, align 8, !alias.scope !28, !noalias !25
  %524 = sub nuw nsw i64 -4, %506
  %525 = sub nuw nsw i64 -4, %506
  %526 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %503, i64 %524
  %527 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %504, i64 %525
  %528 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -1
  %529 = bitcast %"class.v8::internal::compiler::Node"** %528 to <2 x i64>*
  %530 = load <2 x i64>, <2 x i64>* %529, align 8, !alias.scope !25
  %531 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -2
  %532 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %531, i64 -1
  %533 = bitcast %"class.v8::internal::compiler::Node"** %532 to <2 x i64>*
  %534 = load <2 x i64>, <2 x i64>* %533, align 8, !alias.scope !25
  %535 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %526, i64 -1
  %536 = bitcast %"class.v8::internal::compiler::Node"** %535 to <2 x i64>*
  store <2 x i64> %530, <2 x i64>* %536, align 8, !alias.scope !28, !noalias !25
  %537 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %526, i64 -2
  %538 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %537, i64 -1
  %539 = bitcast %"class.v8::internal::compiler::Node"** %538 to <2 x i64>*
  store <2 x i64> %534, <2 x i64>* %539, align 8, !alias.scope !28, !noalias !25
  %540 = add i64 %506, 8
  %541 = add i64 %507, -2
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %543, label %505, !llvm.loop !30

543:                                              ; preds = %505, %488
  %544 = phi i64 [ 0, %488 ], [ %540, %505 ]
  %545 = icmp eq i64 %497, 0
  br i1 %545, label %565, label %546

546:                                              ; preds = %543
  %547 = sub i64 0, %544
  %548 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %458, i64 -1
  %549 = sub i64 0, %544
  %550 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %465, i64 -1
  %551 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %548, i64 %547
  %552 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %550, i64 %549
  %553 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %552, i64 -1
  %554 = bitcast %"class.v8::internal::compiler::Node"** %553 to <2 x i64>*
  %555 = load <2 x i64>, <2 x i64>* %554, align 8, !alias.scope !25
  %556 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %552, i64 -2
  %557 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %556, i64 -1
  %558 = bitcast %"class.v8::internal::compiler::Node"** %557 to <2 x i64>*
  %559 = load <2 x i64>, <2 x i64>* %558, align 8, !alias.scope !25
  %560 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %551, i64 -1
  %561 = bitcast %"class.v8::internal::compiler::Node"** %560 to <2 x i64>*
  store <2 x i64> %555, <2 x i64>* %561, align 8, !alias.scope !28, !noalias !25
  %562 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %551, i64 -2
  %563 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %562, i64 -1
  %564 = bitcast %"class.v8::internal::compiler::Node"** %563 to <2 x i64>*
  store <2 x i64> %559, <2 x i64>* %564, align 8, !alias.scope !28, !noalias !25
  br label %565

565:                                              ; preds = %543, %546
  %566 = icmp eq i64 %472, %489
  br i1 %566, label %637, label %567

567:                                              ; preds = %565, %474, %467
  %568 = phi %"class.v8::internal::compiler::Node"** [ %458, %474 ], [ %458, %467 ], [ %491, %565 ]
  %569 = phi %"class.v8::internal::compiler::Node"** [ %465, %474 ], [ %465, %467 ], [ %493, %565 ]
  %570 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %569, i64 -1
  %571 = ptrtoint %"class.v8::internal::compiler::Node"** %570 to i64
  %572 = sub i64 %571, %464
  %573 = lshr i64 %572, 3
  %574 = add nuw nsw i64 %573, 1
  %575 = and i64 %574, 7
  %576 = icmp eq i64 %575, 0
  br i1 %576, label %588, label %577

577:                                              ; preds = %567, %577
  %578 = phi %"class.v8::internal::compiler::Node"** [ %581, %577 ], [ %568, %567 ]
  %579 = phi %"class.v8::internal::compiler::Node"** [ %582, %577 ], [ %569, %567 ]
  %580 = phi i64 [ %586, %577 ], [ %575, %567 ]
  %581 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %578, i64 -1
  %582 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %579, i64 -1
  %583 = bitcast %"class.v8::internal::compiler::Node"** %582 to i64*
  %584 = load i64, i64* %583, align 8
  %585 = bitcast %"class.v8::internal::compiler::Node"** %581 to i64*
  store i64 %584, i64* %585, align 8
  %586 = add i64 %580, -1
  %587 = icmp eq i64 %586, 0
  br i1 %587, label %588, label %577, !llvm.loop !31

588:                                              ; preds = %577, %567
  %589 = phi %"class.v8::internal::compiler::Node"** [ undef, %567 ], [ %581, %577 ]
  %590 = phi %"class.v8::internal::compiler::Node"** [ %568, %567 ], [ %581, %577 ]
  %591 = phi %"class.v8::internal::compiler::Node"** [ %569, %567 ], [ %582, %577 ]
  %592 = icmp ult i64 %572, 56
  br i1 %592, label %637, label %593

593:                                              ; preds = %588, %593
  %594 = phi %"class.v8::internal::compiler::Node"** [ %631, %593 ], [ %590, %588 ]
  %595 = phi %"class.v8::internal::compiler::Node"** [ %632, %593 ], [ %591, %588 ]
  %596 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %594, i64 -1
  %597 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %595, i64 -1
  %598 = bitcast %"class.v8::internal::compiler::Node"** %597 to i64*
  %599 = load i64, i64* %598, align 8
  %600 = bitcast %"class.v8::internal::compiler::Node"** %596 to i64*
  store i64 %599, i64* %600, align 8
  %601 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %594, i64 -2
  %602 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %595, i64 -2
  %603 = bitcast %"class.v8::internal::compiler::Node"** %602 to i64*
  %604 = load i64, i64* %603, align 8
  %605 = bitcast %"class.v8::internal::compiler::Node"** %601 to i64*
  store i64 %604, i64* %605, align 8
  %606 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %594, i64 -3
  %607 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %595, i64 -3
  %608 = bitcast %"class.v8::internal::compiler::Node"** %607 to i64*
  %609 = load i64, i64* %608, align 8
  %610 = bitcast %"class.v8::internal::compiler::Node"** %606 to i64*
  store i64 %609, i64* %610, align 8
  %611 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %594, i64 -4
  %612 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %595, i64 -4
  %613 = bitcast %"class.v8::internal::compiler::Node"** %612 to i64*
  %614 = load i64, i64* %613, align 8
  %615 = bitcast %"class.v8::internal::compiler::Node"** %611 to i64*
  store i64 %614, i64* %615, align 8
  %616 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %594, i64 -5
  %617 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %595, i64 -5
  %618 = bitcast %"class.v8::internal::compiler::Node"** %617 to i64*
  %619 = load i64, i64* %618, align 8
  %620 = bitcast %"class.v8::internal::compiler::Node"** %616 to i64*
  store i64 %619, i64* %620, align 8
  %621 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %594, i64 -6
  %622 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %595, i64 -6
  %623 = bitcast %"class.v8::internal::compiler::Node"** %622 to i64*
  %624 = load i64, i64* %623, align 8
  %625 = bitcast %"class.v8::internal::compiler::Node"** %621 to i64*
  store i64 %624, i64* %625, align 8
  %626 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %594, i64 -7
  %627 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %595, i64 -7
  %628 = bitcast %"class.v8::internal::compiler::Node"** %627 to i64*
  %629 = load i64, i64* %628, align 8
  %630 = bitcast %"class.v8::internal::compiler::Node"** %626 to i64*
  store i64 %629, i64* %630, align 8
  %631 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %594, i64 -8
  %632 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %595, i64 -8
  %633 = bitcast %"class.v8::internal::compiler::Node"** %632 to i64*
  %634 = load i64, i64* %633, align 8
  %635 = bitcast %"class.v8::internal::compiler::Node"** %631 to i64*
  store i64 %634, i64* %635, align 8
  %636 = icmp eq %"class.v8::internal::compiler::Node"** %632, %463
  br i1 %636, label %637, label %593, !llvm.loop !32

637:                                              ; preds = %588, %593, %565, %456
  %638 = phi %"class.v8::internal::compiler::Node"** [ %458, %456 ], [ %491, %565 ], [ %589, %588 ], [ %631, %593 ]
  %639 = ptrtoint %"class.v8::internal::compiler::Node"** %638 to i64
  store i64 %639, i64* %55, align 8
  store i64 %461, i64* %404, align 8
  store i64 %461, i64* %53, align 8
  br label %640

640:                                              ; preds = %440, %637
  br i1 %407, label %719, label %641

641:                                              ; preds = %1061, %640
  %642 = phi i32 [ 1, %640 ], [ %831, %1061 ]
  %643 = phi i8 [ 1, %640 ], [ %828, %1061 ]
  %644 = load i32, i32* %27, align 4
  %645 = and i32 %644, 16777215
  %646 = call i64 @_ZN2v84base10hash_valueEj(i32 %645) #8
  %647 = load i64, i64* %301, align 8
  %648 = icmp eq i64 %647, 0
  br i1 %648, label %715, label %649

649:                                              ; preds = %641
  %650 = call i64 @llvm.ctpop.i64(i64 %647) #8, !range !3
  %651 = icmp ugt i64 %650, 1
  br i1 %651, label %655, label %652

652:                                              ; preds = %649
  %653 = add i64 %647, -1
  %654 = and i64 %653, %646
  br label %659

655:                                              ; preds = %649
  %656 = icmp ult i64 %646, %647
  br i1 %656, label %659, label %657

657:                                              ; preds = %655
  %658 = urem i64 %646, %647
  br label %659

659:                                              ; preds = %657, %655, %652
  %660 = phi i64 [ %654, %652 ], [ %658, %657 ], [ %646, %655 ]
  %661 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %409, align 8
  %662 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %661, i64 %660
  %663 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %662, align 8
  %664 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %663, null
  br i1 %664, label %715, label %665

665:                                              ; preds = %659
  %666 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %663, i64 0, i32 0
  %667 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %666, align 8
  %668 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %667, null
  br i1 %668, label %715, label %669

669:                                              ; preds = %665
  %670 = add i64 %647, -1
  br i1 %651, label %671, label %693

671:                                              ; preds = %669, %689
  %672 = phi %"struct.std::__1::__hash_node_base.1279"* [ %691, %689 ], [ %667, %669 ]
  %673 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %672, i64 1
  %674 = bitcast %"struct.std::__1::__hash_node_base.1279"* %673 to i64*
  %675 = load i64, i64* %674, align 8
  %676 = icmp eq i64 %646, %675
  br i1 %676, label %684, label %677

677:                                              ; preds = %671
  %678 = icmp ult i64 %675, %647
  br i1 %678, label %681, label %679

679:                                              ; preds = %677
  %680 = urem i64 %675, %647
  br label %681

681:                                              ; preds = %679, %677
  %682 = phi i64 [ %680, %679 ], [ %675, %677 ]
  %683 = icmp eq i64 %682, %660
  br i1 %683, label %689, label %715

684:                                              ; preds = %671
  %685 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %672, i64 2
  %686 = bitcast %"struct.std::__1::__hash_node_base.1279"* %685 to i32*
  %687 = load i32, i32* %686, align 4
  %688 = icmp eq i32 %687, %645
  br i1 %688, label %711, label %689

689:                                              ; preds = %684, %681
  %690 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %672, i64 0, i32 0
  %691 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %690, align 8
  %692 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %691, null
  br i1 %692, label %715, label %671

693:                                              ; preds = %669, %707
  %694 = phi %"struct.std::__1::__hash_node_base.1279"* [ %709, %707 ], [ %667, %669 ]
  %695 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %694, i64 1
  %696 = bitcast %"struct.std::__1::__hash_node_base.1279"* %695 to i64*
  %697 = load i64, i64* %696, align 8
  %698 = icmp eq i64 %646, %697
  br i1 %698, label %702, label %699

699:                                              ; preds = %693
  %700 = and i64 %697, %670
  %701 = icmp eq i64 %700, %660
  br i1 %701, label %707, label %715

702:                                              ; preds = %693
  %703 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %694, i64 2
  %704 = bitcast %"struct.std::__1::__hash_node_base.1279"* %703 to i32*
  %705 = load i32, i32* %704, align 4
  %706 = icmp eq i32 %705, %645
  br i1 %706, label %711, label %707

707:                                              ; preds = %702, %699
  %708 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %694, i64 0, i32 0
  %709 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %708, align 8
  %710 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %709, null
  br i1 %710, label %715, label %693

711:                                              ; preds = %702, %684
  %712 = phi %"struct.std::__1::__hash_node_base.1279"* [ %672, %684 ], [ %694, %702 ]
  %713 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %712, i64 3
  %714 = bitcast %"struct.std::__1::__hash_node_base.1279"* %713 to %"class.v8::internal::compiler::VariableTracker::State"*
  br label %715

715:                                              ; preds = %699, %707, %681, %689, %641, %659, %665, %711
  %716 = phi %"class.v8::internal::compiler::VariableTracker::State"* [ %714, %711 ], [ %410, %665 ], [ %410, %659 ], [ %410, %641 ], [ %410, %689 ], [ %410, %681 ], [ %410, %707 ], [ %410, %699 ]
  %717 = call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler15VariableTracker5State3GetENS1_8VariableE(%"class.v8::internal::compiler::VariableTracker::State"* %716, i32 %430)
  %718 = icmp eq %"class.v8::internal::compiler::Node"* %717, null
  br i1 %718, label %1212, label %1064

719:                                              ; preds = %640, %1061
  %720 = phi i8 [ %828, %1061 ], [ 1, %640 ]
  %721 = phi i32 [ %831, %1061 ], [ 1, %640 ]
  %722 = phi i32 [ %1062, %1061 ], [ 1, %640 ]
  %723 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %724 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %723, i64 0, i32 6
  %725 = load i32, i32* %724, align 8
  %726 = icmp sgt i32 %725, %722
  br i1 %726, label %728, label %727, !prof !4

727:                                              ; preds = %719
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

728:                                              ; preds = %719
  %729 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %723, i64 0, i32 5
  %730 = load i32, i32* %729, align 4
  %731 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %723) #8
  %732 = zext i1 %731 to i32
  %733 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %734 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %733) #8
  %735 = zext i1 %734 to i32
  %736 = add i32 %730, %722
  %737 = add i32 %736, %732
  %738 = add i32 %737, %735
  %739 = load i32, i32* %27, align 4
  %740 = and i32 %739, 251658240
  %741 = icmp eq i32 %740, 251658240
  br i1 %741, label %742, label %745

742:                                              ; preds = %728
  %743 = load i64, i64* %408, align 8
  %744 = add i64 %743, 16
  br label %745

745:                                              ; preds = %728, %742
  %746 = phi i64 [ %744, %742 ], [ %32, %728 ]
  %747 = inttoptr i64 %746 to %"class.v8::internal::compiler::Node"**
  %748 = sext i32 %738 to i64
  %749 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %747, i64 %748
  %750 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %749, align 8
  %751 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %750, i64 0, i32 3
  %752 = load i32, i32* %751, align 4
  %753 = and i32 %752, 16777215
  %754 = call i64 @_ZN2v84base10hash_valueEj(i32 %753) #8
  %755 = load i64, i64* %301, align 8
  %756 = icmp eq i64 %755, 0
  br i1 %756, label %823, label %757

757:                                              ; preds = %745
  %758 = call i64 @llvm.ctpop.i64(i64 %755) #8, !range !3
  %759 = icmp ugt i64 %758, 1
  br i1 %759, label %763, label %760

760:                                              ; preds = %757
  %761 = add i64 %755, -1
  %762 = and i64 %761, %754
  br label %767

763:                                              ; preds = %757
  %764 = icmp ult i64 %754, %755
  br i1 %764, label %767, label %765

765:                                              ; preds = %763
  %766 = urem i64 %754, %755
  br label %767

767:                                              ; preds = %765, %763, %760
  %768 = phi i64 [ %762, %760 ], [ %766, %765 ], [ %754, %763 ]
  %769 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %409, align 8
  %770 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %769, i64 %768
  %771 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %770, align 8
  %772 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %771, null
  br i1 %772, label %823, label %773

773:                                              ; preds = %767
  %774 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %771, i64 0, i32 0
  %775 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %774, align 8
  %776 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %775, null
  br i1 %776, label %823, label %777

777:                                              ; preds = %773
  %778 = add i64 %755, -1
  br i1 %759, label %779, label %801

779:                                              ; preds = %777, %797
  %780 = phi %"struct.std::__1::__hash_node_base.1279"* [ %799, %797 ], [ %775, %777 ]
  %781 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %780, i64 1
  %782 = bitcast %"struct.std::__1::__hash_node_base.1279"* %781 to i64*
  %783 = load i64, i64* %782, align 8
  %784 = icmp eq i64 %754, %783
  br i1 %784, label %792, label %785

785:                                              ; preds = %779
  %786 = icmp ult i64 %783, %755
  br i1 %786, label %789, label %787

787:                                              ; preds = %785
  %788 = urem i64 %783, %755
  br label %789

789:                                              ; preds = %787, %785
  %790 = phi i64 [ %788, %787 ], [ %783, %785 ]
  %791 = icmp eq i64 %790, %768
  br i1 %791, label %797, label %823

792:                                              ; preds = %779
  %793 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %780, i64 2
  %794 = bitcast %"struct.std::__1::__hash_node_base.1279"* %793 to i32*
  %795 = load i32, i32* %794, align 4
  %796 = icmp eq i32 %795, %753
  br i1 %796, label %819, label %797

797:                                              ; preds = %792, %789
  %798 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %780, i64 0, i32 0
  %799 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %798, align 8
  %800 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %799, null
  br i1 %800, label %823, label %779

801:                                              ; preds = %777, %815
  %802 = phi %"struct.std::__1::__hash_node_base.1279"* [ %817, %815 ], [ %775, %777 ]
  %803 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %802, i64 1
  %804 = bitcast %"struct.std::__1::__hash_node_base.1279"* %803 to i64*
  %805 = load i64, i64* %804, align 8
  %806 = icmp eq i64 %754, %805
  br i1 %806, label %810, label %807

807:                                              ; preds = %801
  %808 = and i64 %805, %778
  %809 = icmp eq i64 %808, %768
  br i1 %809, label %815, label %823

810:                                              ; preds = %801
  %811 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %802, i64 2
  %812 = bitcast %"struct.std::__1::__hash_node_base.1279"* %811 to i32*
  %813 = load i32, i32* %812, align 4
  %814 = icmp eq i32 %813, %753
  br i1 %814, label %819, label %815

815:                                              ; preds = %810, %807
  %816 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %802, i64 0, i32 0
  %817 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %816, align 8
  %818 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %817, null
  br i1 %818, label %823, label %801

819:                                              ; preds = %810, %792
  %820 = phi %"struct.std::__1::__hash_node_base.1279"* [ %780, %792 ], [ %802, %810 ]
  %821 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %820, i64 3
  %822 = bitcast %"struct.std::__1::__hash_node_base.1279"* %821 to %"class.v8::internal::compiler::VariableTracker::State"*
  br label %823

823:                                              ; preds = %807, %815, %789, %797, %745, %767, %773, %819
  %824 = phi %"class.v8::internal::compiler::VariableTracker::State"* [ %822, %819 ], [ %410, %773 ], [ %410, %767 ], [ %410, %745 ], [ %410, %797 ], [ %410, %789 ], [ %410, %815 ], [ %410, %807 ]
  %825 = call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler15VariableTracker5State3GetENS1_8VariableE(%"class.v8::internal::compiler::VariableTracker::State"* %824, i32 %430)
  %826 = ptrtoint %"class.v8::internal::compiler::Node"* %825 to i64
  %827 = icmp eq %"class.v8::internal::compiler::Node"* %825, %431
  %828 = select i1 %827, i8 %720, i8 0
  %829 = icmp ne %"class.v8::internal::compiler::Node"* %825, null
  %830 = zext i1 %829 to i32
  %831 = add nuw nsw i32 %721, %830
  %832 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %403, align 8
  %833 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %52, align 8
  %834 = icmp eq %"class.v8::internal::compiler::Node"** %832, %833
  %835 = ptrtoint %"class.v8::internal::compiler::Node"** %833 to i64
  br i1 %834, label %840, label %836

836:                                              ; preds = %823
  %837 = bitcast %"class.v8::internal::compiler::Node"** %832 to i64*
  store i64 %826, i64* %837, align 8
  %838 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %832, i64 1
  %839 = ptrtoint %"class.v8::internal::compiler::Node"** %838 to i64
  store i64 %839, i64* %404, align 8
  br label %1061

840:                                              ; preds = %823
  %841 = ptrtoint %"class.v8::internal::compiler::Node"** %832 to i64
  %842 = load i64, i64* %55, align 8
  %843 = sub i64 %841, %842
  %844 = ashr exact i64 %843, 3
  %845 = add nsw i64 %844, 1
  %846 = icmp ugt i64 %845, 268435455
  br i1 %846, label %847, label %849

847:                                              ; preds = %840
  %848 = bitcast %"class.std::__1::vector.1300"* %49 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %848) #9
  unreachable

849:                                              ; preds = %840
  %850 = sub i64 %835, %842
  %851 = ashr exact i64 %850, 3
  %852 = icmp ult i64 %851, 134217727
  br i1 %852, label %853, label %858

853:                                              ; preds = %849
  %854 = ashr exact i64 %850, 2
  %855 = icmp ult i64 %854, %845
  %856 = select i1 %855, i64 %845, i64 %854
  %857 = icmp eq i64 %856, 0
  br i1 %857, label %875, label %858

858:                                              ; preds = %853, %849
  %859 = phi i64 [ %856, %853 ], [ 268435455, %849 ]
  %860 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %405, align 8
  %861 = shl i64 %859, 3
  %862 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %860, i64 0, i32 2
  %863 = load i64, i64* %862, align 8
  %864 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %860, i64 0, i32 3
  %865 = load i64, i64* %864, align 8
  %866 = sub i64 %865, %863
  %867 = icmp ugt i64 %861, %866
  br i1 %867, label %868, label %870, !prof !5

868:                                              ; preds = %858
  %869 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %860, i64 %861) #8
  br label %872

870:                                              ; preds = %858
  %871 = add i64 %863, %861
  store i64 %871, i64* %862, align 8
  br label %872

872:                                              ; preds = %870, %868
  %873 = phi i64 [ %869, %868 ], [ %863, %870 ]
  %874 = inttoptr i64 %873 to %"class.v8::internal::compiler::Node"**
  br label %875

875:                                              ; preds = %872, %853
  %876 = phi i64 [ %859, %872 ], [ 0, %853 ]
  %877 = phi %"class.v8::internal::compiler::Node"** [ %874, %872 ], [ null, %853 ]
  %878 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %877, i64 %844
  %879 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %877, i64 %876
  %880 = ptrtoint %"class.v8::internal::compiler::Node"** %879 to i64
  %881 = bitcast %"class.v8::internal::compiler::Node"** %878 to i64*
  store i64 %826, i64* %881, align 8
  %882 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %878, i64 1
  %883 = ptrtoint %"class.v8::internal::compiler::Node"** %882 to i64
  %884 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %406, align 8
  %885 = ptrtoint %"class.v8::internal::compiler::Node"** %884 to i64
  %886 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %403, align 8
  %887 = icmp eq %"class.v8::internal::compiler::Node"** %886, %884
  br i1 %887, label %1058, label %888

888:                                              ; preds = %875
  %889 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %886, i64 -1
  %890 = ptrtoint %"class.v8::internal::compiler::Node"** %889 to i64
  %891 = sub i64 %890, %885
  %892 = lshr i64 %891, 3
  %893 = add nuw nsw i64 %892, 1
  %894 = icmp ult i64 %893, 4
  br i1 %894, label %988, label %895

895:                                              ; preds = %888
  %896 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %877, i64 -1
  %897 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %886, i64 -1
  %898 = ptrtoint %"class.v8::internal::compiler::Node"** %897 to i64
  %899 = sub i64 %898, %885
  %900 = lshr i64 %899, 3
  %901 = sub nsw i64 %844, %900
  %902 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %896, i64 %901
  %903 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %886, i64 -1
  %904 = sub nsw i64 0, %900
  %905 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %903, i64 %904
  %906 = icmp ult %"class.v8::internal::compiler::Node"** %902, %886
  %907 = icmp ult %"class.v8::internal::compiler::Node"** %905, %878
  %908 = and i1 %906, %907
  br i1 %908, label %988, label %909

909:                                              ; preds = %895
  %910 = and i64 %893, 4611686018427387900
  %911 = sub nsw i64 0, %910
  %912 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %878, i64 %911
  %913 = sub nsw i64 0, %910
  %914 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %886, i64 %913
  %915 = add nsw i64 %910, -4
  %916 = lshr exact i64 %915, 2
  %917 = add nuw nsw i64 %916, 1
  %918 = and i64 %917, 1
  %919 = icmp eq i64 %915, 0
  br i1 %919, label %964, label %920

920:                                              ; preds = %909
  %921 = sub nuw nsw i64 %917, %918
  %922 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %878, i64 -1
  %923 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %886, i64 -1
  %924 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %878, i64 -1
  %925 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %886, i64 -1
  br label %926

926:                                              ; preds = %926, %920
  %927 = phi i64 [ 0, %920 ], [ %961, %926 ]
  %928 = phi i64 [ %921, %920 ], [ %962, %926 ]
  %929 = sub i64 0, %927
  %930 = sub i64 0, %927
  %931 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %922, i64 %929
  %932 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %923, i64 %930
  %933 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %932, i64 -1
  %934 = bitcast %"class.v8::internal::compiler::Node"** %933 to <2 x i64>*
  %935 = load <2 x i64>, <2 x i64>* %934, align 8, !alias.scope !33
  %936 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %932, i64 -2
  %937 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %936, i64 -1
  %938 = bitcast %"class.v8::internal::compiler::Node"** %937 to <2 x i64>*
  %939 = load <2 x i64>, <2 x i64>* %938, align 8, !alias.scope !33
  %940 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %931, i64 -1
  %941 = bitcast %"class.v8::internal::compiler::Node"** %940 to <2 x i64>*
  store <2 x i64> %935, <2 x i64>* %941, align 8, !alias.scope !36, !noalias !33
  %942 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %931, i64 -2
  %943 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %942, i64 -1
  %944 = bitcast %"class.v8::internal::compiler::Node"** %943 to <2 x i64>*
  store <2 x i64> %939, <2 x i64>* %944, align 8, !alias.scope !36, !noalias !33
  %945 = sub nuw nsw i64 -4, %927
  %946 = sub nuw nsw i64 -4, %927
  %947 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %924, i64 %945
  %948 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %925, i64 %946
  %949 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %948, i64 -1
  %950 = bitcast %"class.v8::internal::compiler::Node"** %949 to <2 x i64>*
  %951 = load <2 x i64>, <2 x i64>* %950, align 8, !alias.scope !33
  %952 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %948, i64 -2
  %953 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %952, i64 -1
  %954 = bitcast %"class.v8::internal::compiler::Node"** %953 to <2 x i64>*
  %955 = load <2 x i64>, <2 x i64>* %954, align 8, !alias.scope !33
  %956 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %947, i64 -1
  %957 = bitcast %"class.v8::internal::compiler::Node"** %956 to <2 x i64>*
  store <2 x i64> %951, <2 x i64>* %957, align 8, !alias.scope !36, !noalias !33
  %958 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %947, i64 -2
  %959 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %958, i64 -1
  %960 = bitcast %"class.v8::internal::compiler::Node"** %959 to <2 x i64>*
  store <2 x i64> %955, <2 x i64>* %960, align 8, !alias.scope !36, !noalias !33
  %961 = add i64 %927, 8
  %962 = add i64 %928, -2
  %963 = icmp eq i64 %962, 0
  br i1 %963, label %964, label %926, !llvm.loop !38

964:                                              ; preds = %926, %909
  %965 = phi i64 [ 0, %909 ], [ %961, %926 ]
  %966 = icmp eq i64 %918, 0
  br i1 %966, label %986, label %967

967:                                              ; preds = %964
  %968 = sub i64 0, %965
  %969 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %878, i64 -1
  %970 = sub i64 0, %965
  %971 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %886, i64 -1
  %972 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %969, i64 %968
  %973 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %971, i64 %970
  %974 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %973, i64 -1
  %975 = bitcast %"class.v8::internal::compiler::Node"** %974 to <2 x i64>*
  %976 = load <2 x i64>, <2 x i64>* %975, align 8, !alias.scope !33
  %977 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %973, i64 -2
  %978 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %977, i64 -1
  %979 = bitcast %"class.v8::internal::compiler::Node"** %978 to <2 x i64>*
  %980 = load <2 x i64>, <2 x i64>* %979, align 8, !alias.scope !33
  %981 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %972, i64 -1
  %982 = bitcast %"class.v8::internal::compiler::Node"** %981 to <2 x i64>*
  store <2 x i64> %976, <2 x i64>* %982, align 8, !alias.scope !36, !noalias !33
  %983 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %972, i64 -2
  %984 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %983, i64 -1
  %985 = bitcast %"class.v8::internal::compiler::Node"** %984 to <2 x i64>*
  store <2 x i64> %980, <2 x i64>* %985, align 8, !alias.scope !36, !noalias !33
  br label %986

986:                                              ; preds = %964, %967
  %987 = icmp eq i64 %893, %910
  br i1 %987, label %1058, label %988

988:                                              ; preds = %986, %895, %888
  %989 = phi %"class.v8::internal::compiler::Node"** [ %878, %895 ], [ %878, %888 ], [ %912, %986 ]
  %990 = phi %"class.v8::internal::compiler::Node"** [ %886, %895 ], [ %886, %888 ], [ %914, %986 ]
  %991 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %990, i64 -1
  %992 = ptrtoint %"class.v8::internal::compiler::Node"** %991 to i64
  %993 = sub i64 %992, %885
  %994 = lshr i64 %993, 3
  %995 = add nuw nsw i64 %994, 1
  %996 = and i64 %995, 7
  %997 = icmp eq i64 %996, 0
  br i1 %997, label %1009, label %998

998:                                              ; preds = %988, %998
  %999 = phi %"class.v8::internal::compiler::Node"** [ %1002, %998 ], [ %989, %988 ]
  %1000 = phi %"class.v8::internal::compiler::Node"** [ %1003, %998 ], [ %990, %988 ]
  %1001 = phi i64 [ %1007, %998 ], [ %996, %988 ]
  %1002 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %999, i64 -1
  %1003 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1000, i64 -1
  %1004 = bitcast %"class.v8::internal::compiler::Node"** %1003 to i64*
  %1005 = load i64, i64* %1004, align 8
  %1006 = bitcast %"class.v8::internal::compiler::Node"** %1002 to i64*
  store i64 %1005, i64* %1006, align 8
  %1007 = add i64 %1001, -1
  %1008 = icmp eq i64 %1007, 0
  br i1 %1008, label %1009, label %998, !llvm.loop !39

1009:                                             ; preds = %998, %988
  %1010 = phi %"class.v8::internal::compiler::Node"** [ undef, %988 ], [ %1002, %998 ]
  %1011 = phi %"class.v8::internal::compiler::Node"** [ %989, %988 ], [ %1002, %998 ]
  %1012 = phi %"class.v8::internal::compiler::Node"** [ %990, %988 ], [ %1003, %998 ]
  %1013 = icmp ult i64 %993, 56
  br i1 %1013, label %1058, label %1014

1014:                                             ; preds = %1009, %1014
  %1015 = phi %"class.v8::internal::compiler::Node"** [ %1052, %1014 ], [ %1011, %1009 ]
  %1016 = phi %"class.v8::internal::compiler::Node"** [ %1053, %1014 ], [ %1012, %1009 ]
  %1017 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1015, i64 -1
  %1018 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1016, i64 -1
  %1019 = bitcast %"class.v8::internal::compiler::Node"** %1018 to i64*
  %1020 = load i64, i64* %1019, align 8
  %1021 = bitcast %"class.v8::internal::compiler::Node"** %1017 to i64*
  store i64 %1020, i64* %1021, align 8
  %1022 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1015, i64 -2
  %1023 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1016, i64 -2
  %1024 = bitcast %"class.v8::internal::compiler::Node"** %1023 to i64*
  %1025 = load i64, i64* %1024, align 8
  %1026 = bitcast %"class.v8::internal::compiler::Node"** %1022 to i64*
  store i64 %1025, i64* %1026, align 8
  %1027 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1015, i64 -3
  %1028 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1016, i64 -3
  %1029 = bitcast %"class.v8::internal::compiler::Node"** %1028 to i64*
  %1030 = load i64, i64* %1029, align 8
  %1031 = bitcast %"class.v8::internal::compiler::Node"** %1027 to i64*
  store i64 %1030, i64* %1031, align 8
  %1032 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1015, i64 -4
  %1033 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1016, i64 -4
  %1034 = bitcast %"class.v8::internal::compiler::Node"** %1033 to i64*
  %1035 = load i64, i64* %1034, align 8
  %1036 = bitcast %"class.v8::internal::compiler::Node"** %1032 to i64*
  store i64 %1035, i64* %1036, align 8
  %1037 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1015, i64 -5
  %1038 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1016, i64 -5
  %1039 = bitcast %"class.v8::internal::compiler::Node"** %1038 to i64*
  %1040 = load i64, i64* %1039, align 8
  %1041 = bitcast %"class.v8::internal::compiler::Node"** %1037 to i64*
  store i64 %1040, i64* %1041, align 8
  %1042 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1015, i64 -6
  %1043 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1016, i64 -6
  %1044 = bitcast %"class.v8::internal::compiler::Node"** %1043 to i64*
  %1045 = load i64, i64* %1044, align 8
  %1046 = bitcast %"class.v8::internal::compiler::Node"** %1042 to i64*
  store i64 %1045, i64* %1046, align 8
  %1047 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1015, i64 -7
  %1048 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1016, i64 -7
  %1049 = bitcast %"class.v8::internal::compiler::Node"** %1048 to i64*
  %1050 = load i64, i64* %1049, align 8
  %1051 = bitcast %"class.v8::internal::compiler::Node"** %1047 to i64*
  store i64 %1050, i64* %1051, align 8
  %1052 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1015, i64 -8
  %1053 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1016, i64 -8
  %1054 = bitcast %"class.v8::internal::compiler::Node"** %1053 to i64*
  %1055 = load i64, i64* %1054, align 8
  %1056 = bitcast %"class.v8::internal::compiler::Node"** %1052 to i64*
  store i64 %1055, i64* %1056, align 8
  %1057 = icmp eq %"class.v8::internal::compiler::Node"** %1053, %884
  br i1 %1057, label %1058, label %1014, !llvm.loop !40

1058:                                             ; preds = %1009, %1014, %986, %875
  %1059 = phi %"class.v8::internal::compiler::Node"** [ %878, %875 ], [ %912, %986 ], [ %1010, %1009 ], [ %1052, %1014 ]
  %1060 = ptrtoint %"class.v8::internal::compiler::Node"** %1059 to i64
  store i64 %1060, i64* %55, align 8
  store i64 %883, i64* %404, align 8
  store i64 %880, i64* %53, align 8
  br label %1061

1061:                                             ; preds = %836, %1058
  %1062 = add nuw nsw i32 %722, 1
  %1063 = icmp eq i32 %1062, %8
  br i1 %1063, label %641, label %719

1064:                                             ; preds = %715
  %1065 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %717, i64 0, i32 0
  %1066 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1065, align 8
  %1067 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1066, i64 0, i32 2
  %1068 = load i16, i16* %1067, align 8
  %1069 = icmp eq i16 %1068, 35
  br i1 %1069, label %1070, label %1212

1070:                                             ; preds = %1064
  %1071 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1066, i64 0, i32 7
  %1072 = load i32, i32* %1071, align 4
  %1073 = icmp sgt i32 %1072, 0
  br i1 %1073, label %1075, label %1074, !prof !4

1074:                                             ; preds = %1070
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0)) #9
  unreachable

1075:                                             ; preds = %1070
  %1076 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1066, i64 0, i32 5
  %1077 = load i32, i32* %1076, align 4
  %1078 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1066) #8
  %1079 = zext i1 %1078 to i32
  %1080 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1065, align 8
  %1081 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1080) #8
  %1082 = zext i1 %1081 to i32
  %1083 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1065, align 8
  %1084 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1083, i64 0, i32 6
  %1085 = load i32, i32* %1084, align 8
  %1086 = add i32 %1077, %1079
  %1087 = add i32 %1086, %1082
  %1088 = add i32 %1087, %1085
  %1089 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %717, i64 0, i32 3
  %1090 = load i32, i32* %1089, align 4
  %1091 = and i32 %1090, 251658240
  %1092 = icmp eq i32 %1091, 251658240
  %1093 = ptrtoint %"class.v8::internal::compiler::Node"* %717 to i64
  %1094 = add i64 %1093, 32
  br i1 %1092, label %1095, label %1099

1095:                                             ; preds = %1075
  %1096 = inttoptr i64 %1094 to i64*
  %1097 = load i64, i64* %1096, align 8
  %1098 = add i64 %1097, 16
  br label %1099

1099:                                             ; preds = %1075, %1095
  %1100 = phi i64 [ %1098, %1095 ], [ %1094, %1075 ]
  %1101 = inttoptr i64 %1100 to %"class.v8::internal::compiler::Node"**
  %1102 = sext i32 %1088 to i64
  %1103 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1101, i64 %1102
  %1104 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1103, align 8
  %1105 = icmp eq %"class.v8::internal::compiler::Node"* %1104, %42
  br i1 %1105, label %1106, label %1212

1106:                                             ; preds = %1099
  br i1 %411, label %1107, label %1113

1107:                                             ; preds = %1106
  %1108 = inttoptr i64 %1094 to i64*
  %1109 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %717, i64 0, i32 2
  %1110 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1083, i64 0, i32 5
  %1111 = load i32, i32* %1110, align 4
  %1112 = icmp sgt i32 %1111, 0
  br i1 %1112, label %1118, label %1117, !prof !4

1113:                                             ; preds = %1203, %1106
  %1114 = icmp eq i32 %430, -1
  br i1 %1114, label %1115, label %1116, !prof !5

1115:                                             ; preds = %1113
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

1116:                                             ; preds = %1113
  call void @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3SetES3_S5_(%"class.v8::internal::compiler::PersistentMap"* %415, i32 %430, %"class.v8::internal::compiler::Node"* nonnull %717) #8
  br label %1523

1117:                                             ; preds = %1107, %1206
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

1118:                                             ; preds = %1107, %1206
  %1119 = phi i64 [ %1204, %1206 ], [ 0, %1107 ]
  %1120 = load i32, i32* %1089, align 4
  %1121 = and i32 %1120, 251658240
  %1122 = icmp eq i32 %1121, 251658240
  br i1 %1122, label %1123, label %1126

1123:                                             ; preds = %1118
  %1124 = load i64, i64* %1108, align 8
  %1125 = add i64 %1124, 16
  br label %1126

1126:                                             ; preds = %1118, %1123
  %1127 = phi i64 [ %1125, %1123 ], [ %1094, %1118 ]
  %1128 = inttoptr i64 %1127 to %"class.v8::internal::compiler::Node"**
  %1129 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1128, i64 %1119
  %1130 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1129, align 8
  %1131 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %406, align 8
  %1132 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1131, i64 %1119
  %1133 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1132, align 8
  %1134 = icmp eq %"class.v8::internal::compiler::Node"* %1133, null
  br i1 %1134, label %1135, label %1147

1135:                                             ; preds = %1126
  %1136 = load %"class.v8::internal::compiler::MachineGraph"*, %"class.v8::internal::compiler::MachineGraph"** %413, align 8
  %1137 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %1136, i64 0, i32 4
  %1138 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1137, align 8
  %1139 = icmp eq %"class.v8::internal::compiler::Node"* %1138, null
  br i1 %1139, label %1140, label %1147

1140:                                             ; preds = %1135
  %1141 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %1136, i64 0, i32 0
  %1142 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1141, align 8
  %1143 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %1136, i64 0, i32 1
  %1144 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %1143, align 8
  %1145 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %1144) #8
  %1146 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1142, %"class.v8::internal::compiler::Operator"* %1145, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #8
  store %"class.v8::internal::compiler::Node"* %1146, %"class.v8::internal::compiler::Node"** %1137, align 8
  br label %1147

1147:                                             ; preds = %1140, %1135, %1126
  %1148 = phi %"class.v8::internal::compiler::Node"* [ %1133, %1126 ], [ %1146, %1140 ], [ %1138, %1135 ]
  %1149 = icmp eq %"class.v8::internal::compiler::Node"* %1130, %1148
  br i1 %1149, label %1203, label %1150

1150:                                             ; preds = %1147
  %1151 = trunc i64 %1119 to i32
  call void @_ZN2v88internal8compiler14NodeProperties17ReplaceValueInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* nonnull %717, %"class.v8::internal::compiler::Node"* %1148, i32 %1151) #8
  %1152 = load %"class.v8::internal::compiler::EffectGraphReducer"*, %"class.v8::internal::compiler::EffectGraphReducer"** %414, align 8
  %1153 = load i32, i32* %1109, align 8
  %1154 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %1152, i64 0, i32 2, i32 0, i32 0
  %1155 = load i32, i32* %1154, align 4
  %1156 = call i32 @llvm.usub.sat.i32(i32 %1153, i32 %1155) #8
  %1157 = trunc i32 %1156 to i8
  %1158 = icmp eq i8 %1157, 3
  br i1 %1158, label %1159, label %1203

1159:                                             ; preds = %1150
  %1160 = add i32 %1155, 1
  store i32 %1160, i32* %1109, align 8
  %1161 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %1152, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1162 = bitcast %"class.v8::internal::compiler::Node"**** %1161 to i64*
  %1163 = load i64, i64* %1162, align 8
  %1164 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %1152, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1165 = bitcast %"class.v8::internal::compiler::Node"**** %1164 to i64*
  %1166 = load i64, i64* %1165, align 8
  %1167 = sub i64 %1163, %1166
  %1168 = icmp eq i64 %1167, 0
  %1169 = shl i64 %1167, 6
  %1170 = add i64 %1169, -1
  %1171 = select i1 %1168, i64 0, i64 %1170
  %1172 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %1152, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %1173 = load i64, i64* %1172, align 8
  %1174 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %1152, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1175 = load i64, i64* %1174, align 8
  %1176 = add i64 %1175, %1173
  %1177 = icmp eq i64 %1171, %1176
  %1178 = inttoptr i64 %1166 to %"class.v8::internal::compiler::Node"***
  %1179 = inttoptr i64 %1163 to %"class.v8::internal::compiler::Node"***
  br i1 %1177, label %1180, label %1187

1180:                                             ; preds = %1159
  %1181 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %1152, i64 0, i32 3, i32 0, i32 0, i32 0
  call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %1181) #8
  %1182 = load i64, i64* %1174, align 8
  %1183 = load i64, i64* %1172, align 8
  %1184 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %1164, align 8
  %1185 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %1161, align 8
  %1186 = add i64 %1183, %1182
  br label %1187

1187:                                             ; preds = %1180, %1159
  %1188 = phi i64 [ %1186, %1180 ], [ %1176, %1159 ]
  %1189 = phi %"class.v8::internal::compiler::Node"*** [ %1185, %1180 ], [ %1179, %1159 ]
  %1190 = phi %"class.v8::internal::compiler::Node"*** [ %1184, %1180 ], [ %1178, %1159 ]
  %1191 = icmp eq %"class.v8::internal::compiler::Node"*** %1189, %1190
  br i1 %1191, label %1199, label %1192

1192:                                             ; preds = %1187
  %1193 = lshr i64 %1188, 9
  %1194 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1190, i64 %1193
  %1195 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1194, align 8
  %1196 = and i64 %1188, 511
  %1197 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1195, i64 %1196
  %1198 = bitcast %"class.v8::internal::compiler::Node"** %1197 to i64*
  br label %1199

1199:                                             ; preds = %1192, %1187
  %1200 = phi i64* [ %1198, %1192 ], [ null, %1187 ]
  store i64 %1093, i64* %1200, align 8
  %1201 = load i64, i64* %1174, align 8
  %1202 = add i64 %1201, 1
  store i64 %1202, i64* %1174, align 8
  br label %1203

1203:                                             ; preds = %1199, %1150, %1147
  %1204 = add nuw nsw i64 %1119, 1
  %1205 = icmp eq i64 %1204, %416
  br i1 %1205, label %1113, label %1206

1206:                                             ; preds = %1203
  %1207 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1065, align 8
  %1208 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1207, i64 0, i32 5
  %1209 = load i32, i32* %1208, align 4
  %1210 = sext i32 %1209 to i64
  %1211 = icmp slt i64 %1204, %1210
  br i1 %1211, label %1118, label %1117, !prof !4

1212:                                             ; preds = %715, %1099, %1064
  %1213 = icmp ne i32 %642, 1
  %1214 = or i1 %48, %1213
  br i1 %1214, label %1219, label %1215

1215:                                             ; preds = %1212
  %1216 = icmp eq i32 %430, -1
  br i1 %1216, label %1217, label %1218, !prof !5

1217:                                             ; preds = %1215
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

1218:                                             ; preds = %1215
  call void @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3SetES3_S5_(%"class.v8::internal::compiler::PersistentMap"* %415, i32 %430, %"class.v8::internal::compiler::Node"* nonnull %431) #8
  br label %1523

1219:                                             ; preds = %1212
  %1220 = icmp slt i32 %642, %8
  br i1 %1220, label %1221, label %1225

1221:                                             ; preds = %1219
  %1222 = icmp eq i32 %430, -1
  br i1 %1222, label %1223, label %1224, !prof !5

1223:                                             ; preds = %1221
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

1224:                                             ; preds = %1221
  call void @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3SetES3_S5_(%"class.v8::internal::compiler::PersistentMap"* %415, i32 %430, %"class.v8::internal::compiler::Node"* null) #8
  br label %1523

1225:                                             ; preds = %1219
  %1226 = and i8 %643, 1
  %1227 = icmp eq i8 %1226, 0
  br i1 %1227, label %1232, label %1228

1228:                                             ; preds = %1225
  %1229 = icmp eq i32 %430, -1
  br i1 %1229, label %1230, label %1231, !prof !5

1230:                                             ; preds = %1228
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

1231:                                             ; preds = %1228
  call void @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3SetES3_S5_(%"class.v8::internal::compiler::PersistentMap"* %415, i32 %430, %"class.v8::internal::compiler::Node"* nonnull %431) #8
  br label %1523

1232:                                             ; preds = %1225
  %1233 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %403, align 8
  %1234 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %52, align 8
  %1235 = icmp eq %"class.v8::internal::compiler::Node"** %1233, %1234
  %1236 = ptrtoint %"class.v8::internal::compiler::Node"** %1234 to i64
  br i1 %1235, label %1241, label %1237

1237:                                             ; preds = %1232
  %1238 = bitcast %"class.v8::internal::compiler::Node"** %1233 to i64*
  store i64 %43, i64* %1238, align 8
  %1239 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1233, i64 1
  %1240 = ptrtoint %"class.v8::internal::compiler::Node"** %1239 to i64
  store i64 %1240, i64* %404, align 8
  br label %1462

1241:                                             ; preds = %1232
  %1242 = ptrtoint %"class.v8::internal::compiler::Node"** %1233 to i64
  %1243 = load i64, i64* %55, align 8
  %1244 = sub i64 %1242, %1243
  %1245 = ashr exact i64 %1244, 3
  %1246 = add nsw i64 %1245, 1
  %1247 = icmp ugt i64 %1246, 268435455
  br i1 %1247, label %1248, label %1250

1248:                                             ; preds = %1241
  %1249 = bitcast %"class.std::__1::vector.1300"* %49 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1249) #9
  unreachable

1250:                                             ; preds = %1241
  %1251 = sub i64 %1236, %1243
  %1252 = ashr exact i64 %1251, 3
  %1253 = icmp ult i64 %1252, 134217727
  br i1 %1253, label %1254, label %1259

1254:                                             ; preds = %1250
  %1255 = ashr exact i64 %1251, 2
  %1256 = icmp ult i64 %1255, %1246
  %1257 = select i1 %1256, i64 %1246, i64 %1255
  %1258 = icmp eq i64 %1257, 0
  br i1 %1258, label %1276, label %1259

1259:                                             ; preds = %1254, %1250
  %1260 = phi i64 [ %1257, %1254 ], [ 268435455, %1250 ]
  %1261 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %405, align 8
  %1262 = shl i64 %1260, 3
  %1263 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1261, i64 0, i32 2
  %1264 = load i64, i64* %1263, align 8
  %1265 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1261, i64 0, i32 3
  %1266 = load i64, i64* %1265, align 8
  %1267 = sub i64 %1266, %1264
  %1268 = icmp ugt i64 %1262, %1267
  br i1 %1268, label %1269, label %1271, !prof !5

1269:                                             ; preds = %1259
  %1270 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1261, i64 %1262) #8
  br label %1273

1271:                                             ; preds = %1259
  %1272 = add i64 %1264, %1262
  store i64 %1272, i64* %1263, align 8
  br label %1273

1273:                                             ; preds = %1271, %1269
  %1274 = phi i64 [ %1270, %1269 ], [ %1264, %1271 ]
  %1275 = inttoptr i64 %1274 to %"class.v8::internal::compiler::Node"**
  br label %1276

1276:                                             ; preds = %1273, %1254
  %1277 = phi i64 [ %1260, %1273 ], [ 0, %1254 ]
  %1278 = phi %"class.v8::internal::compiler::Node"** [ %1275, %1273 ], [ null, %1254 ]
  %1279 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1278, i64 %1245
  %1280 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1278, i64 %1277
  %1281 = ptrtoint %"class.v8::internal::compiler::Node"** %1280 to i64
  %1282 = bitcast %"class.v8::internal::compiler::Node"** %1279 to i64*
  store i64 %43, i64* %1282, align 8
  %1283 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1279, i64 1
  %1284 = ptrtoint %"class.v8::internal::compiler::Node"** %1283 to i64
  %1285 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %406, align 8
  %1286 = ptrtoint %"class.v8::internal::compiler::Node"** %1285 to i64
  %1287 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %403, align 8
  %1288 = icmp eq %"class.v8::internal::compiler::Node"** %1287, %1285
  br i1 %1288, label %1459, label %1289

1289:                                             ; preds = %1276
  %1290 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1287, i64 -1
  %1291 = ptrtoint %"class.v8::internal::compiler::Node"** %1290 to i64
  %1292 = sub i64 %1291, %1286
  %1293 = lshr i64 %1292, 3
  %1294 = add nuw nsw i64 %1293, 1
  %1295 = icmp ult i64 %1294, 4
  br i1 %1295, label %1389, label %1296

1296:                                             ; preds = %1289
  %1297 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1278, i64 -1
  %1298 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1287, i64 -1
  %1299 = ptrtoint %"class.v8::internal::compiler::Node"** %1298 to i64
  %1300 = sub i64 %1299, %1286
  %1301 = lshr i64 %1300, 3
  %1302 = sub nsw i64 %1245, %1301
  %1303 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1297, i64 %1302
  %1304 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1287, i64 -1
  %1305 = sub nsw i64 0, %1301
  %1306 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1304, i64 %1305
  %1307 = icmp ult %"class.v8::internal::compiler::Node"** %1303, %1287
  %1308 = icmp ult %"class.v8::internal::compiler::Node"** %1306, %1279
  %1309 = and i1 %1307, %1308
  br i1 %1309, label %1389, label %1310

1310:                                             ; preds = %1296
  %1311 = and i64 %1294, 4611686018427387900
  %1312 = sub nsw i64 0, %1311
  %1313 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1279, i64 %1312
  %1314 = sub nsw i64 0, %1311
  %1315 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1287, i64 %1314
  %1316 = add nsw i64 %1311, -4
  %1317 = lshr exact i64 %1316, 2
  %1318 = add nuw nsw i64 %1317, 1
  %1319 = and i64 %1318, 1
  %1320 = icmp eq i64 %1316, 0
  br i1 %1320, label %1365, label %1321

1321:                                             ; preds = %1310
  %1322 = sub nuw nsw i64 %1318, %1319
  %1323 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1279, i64 -1
  %1324 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1287, i64 -1
  %1325 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1279, i64 -1
  %1326 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1287, i64 -1
  br label %1327

1327:                                             ; preds = %1327, %1321
  %1328 = phi i64 [ 0, %1321 ], [ %1362, %1327 ]
  %1329 = phi i64 [ %1322, %1321 ], [ %1363, %1327 ]
  %1330 = sub i64 0, %1328
  %1331 = sub i64 0, %1328
  %1332 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1323, i64 %1330
  %1333 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1324, i64 %1331
  %1334 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1333, i64 -1
  %1335 = bitcast %"class.v8::internal::compiler::Node"** %1334 to <2 x i64>*
  %1336 = load <2 x i64>, <2 x i64>* %1335, align 8, !alias.scope !41
  %1337 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1333, i64 -2
  %1338 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1337, i64 -1
  %1339 = bitcast %"class.v8::internal::compiler::Node"** %1338 to <2 x i64>*
  %1340 = load <2 x i64>, <2 x i64>* %1339, align 8, !alias.scope !41
  %1341 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1332, i64 -1
  %1342 = bitcast %"class.v8::internal::compiler::Node"** %1341 to <2 x i64>*
  store <2 x i64> %1336, <2 x i64>* %1342, align 8, !alias.scope !44, !noalias !41
  %1343 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1332, i64 -2
  %1344 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1343, i64 -1
  %1345 = bitcast %"class.v8::internal::compiler::Node"** %1344 to <2 x i64>*
  store <2 x i64> %1340, <2 x i64>* %1345, align 8, !alias.scope !44, !noalias !41
  %1346 = sub nuw nsw i64 -4, %1328
  %1347 = sub nuw nsw i64 -4, %1328
  %1348 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1325, i64 %1346
  %1349 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1326, i64 %1347
  %1350 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1349, i64 -1
  %1351 = bitcast %"class.v8::internal::compiler::Node"** %1350 to <2 x i64>*
  %1352 = load <2 x i64>, <2 x i64>* %1351, align 8, !alias.scope !41
  %1353 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1349, i64 -2
  %1354 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1353, i64 -1
  %1355 = bitcast %"class.v8::internal::compiler::Node"** %1354 to <2 x i64>*
  %1356 = load <2 x i64>, <2 x i64>* %1355, align 8, !alias.scope !41
  %1357 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1348, i64 -1
  %1358 = bitcast %"class.v8::internal::compiler::Node"** %1357 to <2 x i64>*
  store <2 x i64> %1352, <2 x i64>* %1358, align 8, !alias.scope !44, !noalias !41
  %1359 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1348, i64 -2
  %1360 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1359, i64 -1
  %1361 = bitcast %"class.v8::internal::compiler::Node"** %1360 to <2 x i64>*
  store <2 x i64> %1356, <2 x i64>* %1361, align 8, !alias.scope !44, !noalias !41
  %1362 = add i64 %1328, 8
  %1363 = add i64 %1329, -2
  %1364 = icmp eq i64 %1363, 0
  br i1 %1364, label %1365, label %1327, !llvm.loop !46

1365:                                             ; preds = %1327, %1310
  %1366 = phi i64 [ 0, %1310 ], [ %1362, %1327 ]
  %1367 = icmp eq i64 %1319, 0
  br i1 %1367, label %1387, label %1368

1368:                                             ; preds = %1365
  %1369 = sub i64 0, %1366
  %1370 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1279, i64 -1
  %1371 = sub i64 0, %1366
  %1372 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1287, i64 -1
  %1373 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1370, i64 %1369
  %1374 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1372, i64 %1371
  %1375 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1374, i64 -1
  %1376 = bitcast %"class.v8::internal::compiler::Node"** %1375 to <2 x i64>*
  %1377 = load <2 x i64>, <2 x i64>* %1376, align 8, !alias.scope !41
  %1378 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1374, i64 -2
  %1379 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1378, i64 -1
  %1380 = bitcast %"class.v8::internal::compiler::Node"** %1379 to <2 x i64>*
  %1381 = load <2 x i64>, <2 x i64>* %1380, align 8, !alias.scope !41
  %1382 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1373, i64 -1
  %1383 = bitcast %"class.v8::internal::compiler::Node"** %1382 to <2 x i64>*
  store <2 x i64> %1377, <2 x i64>* %1383, align 8, !alias.scope !44, !noalias !41
  %1384 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1373, i64 -2
  %1385 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1384, i64 -1
  %1386 = bitcast %"class.v8::internal::compiler::Node"** %1385 to <2 x i64>*
  store <2 x i64> %1381, <2 x i64>* %1386, align 8, !alias.scope !44, !noalias !41
  br label %1387

1387:                                             ; preds = %1365, %1368
  %1388 = icmp eq i64 %1294, %1311
  br i1 %1388, label %1459, label %1389

1389:                                             ; preds = %1387, %1296, %1289
  %1390 = phi %"class.v8::internal::compiler::Node"** [ %1279, %1296 ], [ %1279, %1289 ], [ %1313, %1387 ]
  %1391 = phi %"class.v8::internal::compiler::Node"** [ %1287, %1296 ], [ %1287, %1289 ], [ %1315, %1387 ]
  %1392 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1391, i64 -1
  %1393 = ptrtoint %"class.v8::internal::compiler::Node"** %1392 to i64
  %1394 = sub i64 %1393, %1286
  %1395 = lshr i64 %1394, 3
  %1396 = add nuw nsw i64 %1395, 1
  %1397 = and i64 %1396, 7
  %1398 = icmp eq i64 %1397, 0
  br i1 %1398, label %1410, label %1399

1399:                                             ; preds = %1389, %1399
  %1400 = phi %"class.v8::internal::compiler::Node"** [ %1403, %1399 ], [ %1390, %1389 ]
  %1401 = phi %"class.v8::internal::compiler::Node"** [ %1404, %1399 ], [ %1391, %1389 ]
  %1402 = phi i64 [ %1408, %1399 ], [ %1397, %1389 ]
  %1403 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1400, i64 -1
  %1404 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1401, i64 -1
  %1405 = bitcast %"class.v8::internal::compiler::Node"** %1404 to i64*
  %1406 = load i64, i64* %1405, align 8
  %1407 = bitcast %"class.v8::internal::compiler::Node"** %1403 to i64*
  store i64 %1406, i64* %1407, align 8
  %1408 = add i64 %1402, -1
  %1409 = icmp eq i64 %1408, 0
  br i1 %1409, label %1410, label %1399, !llvm.loop !47

1410:                                             ; preds = %1399, %1389
  %1411 = phi %"class.v8::internal::compiler::Node"** [ undef, %1389 ], [ %1403, %1399 ]
  %1412 = phi %"class.v8::internal::compiler::Node"** [ %1390, %1389 ], [ %1403, %1399 ]
  %1413 = phi %"class.v8::internal::compiler::Node"** [ %1391, %1389 ], [ %1404, %1399 ]
  %1414 = icmp ult i64 %1394, 56
  br i1 %1414, label %1459, label %1415

1415:                                             ; preds = %1410, %1415
  %1416 = phi %"class.v8::internal::compiler::Node"** [ %1453, %1415 ], [ %1412, %1410 ]
  %1417 = phi %"class.v8::internal::compiler::Node"** [ %1454, %1415 ], [ %1413, %1410 ]
  %1418 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1416, i64 -1
  %1419 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1417, i64 -1
  %1420 = bitcast %"class.v8::internal::compiler::Node"** %1419 to i64*
  %1421 = load i64, i64* %1420, align 8
  %1422 = bitcast %"class.v8::internal::compiler::Node"** %1418 to i64*
  store i64 %1421, i64* %1422, align 8
  %1423 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1416, i64 -2
  %1424 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1417, i64 -2
  %1425 = bitcast %"class.v8::internal::compiler::Node"** %1424 to i64*
  %1426 = load i64, i64* %1425, align 8
  %1427 = bitcast %"class.v8::internal::compiler::Node"** %1423 to i64*
  store i64 %1426, i64* %1427, align 8
  %1428 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1416, i64 -3
  %1429 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1417, i64 -3
  %1430 = bitcast %"class.v8::internal::compiler::Node"** %1429 to i64*
  %1431 = load i64, i64* %1430, align 8
  %1432 = bitcast %"class.v8::internal::compiler::Node"** %1428 to i64*
  store i64 %1431, i64* %1432, align 8
  %1433 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1416, i64 -4
  %1434 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1417, i64 -4
  %1435 = bitcast %"class.v8::internal::compiler::Node"** %1434 to i64*
  %1436 = load i64, i64* %1435, align 8
  %1437 = bitcast %"class.v8::internal::compiler::Node"** %1433 to i64*
  store i64 %1436, i64* %1437, align 8
  %1438 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1416, i64 -5
  %1439 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1417, i64 -5
  %1440 = bitcast %"class.v8::internal::compiler::Node"** %1439 to i64*
  %1441 = load i64, i64* %1440, align 8
  %1442 = bitcast %"class.v8::internal::compiler::Node"** %1438 to i64*
  store i64 %1441, i64* %1442, align 8
  %1443 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1416, i64 -6
  %1444 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1417, i64 -6
  %1445 = bitcast %"class.v8::internal::compiler::Node"** %1444 to i64*
  %1446 = load i64, i64* %1445, align 8
  %1447 = bitcast %"class.v8::internal::compiler::Node"** %1443 to i64*
  store i64 %1446, i64* %1447, align 8
  %1448 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1416, i64 -7
  %1449 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1417, i64 -7
  %1450 = bitcast %"class.v8::internal::compiler::Node"** %1449 to i64*
  %1451 = load i64, i64* %1450, align 8
  %1452 = bitcast %"class.v8::internal::compiler::Node"** %1448 to i64*
  store i64 %1451, i64* %1452, align 8
  %1453 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1416, i64 -8
  %1454 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1417, i64 -8
  %1455 = bitcast %"class.v8::internal::compiler::Node"** %1454 to i64*
  %1456 = load i64, i64* %1455, align 8
  %1457 = bitcast %"class.v8::internal::compiler::Node"** %1453 to i64*
  store i64 %1456, i64* %1457, align 8
  %1458 = icmp eq %"class.v8::internal::compiler::Node"** %1454, %1285
  br i1 %1458, label %1459, label %1415, !llvm.loop !48

1459:                                             ; preds = %1410, %1415, %1387, %1276
  %1460 = phi %"class.v8::internal::compiler::Node"** [ %1279, %1276 ], [ %1313, %1387 ], [ %1411, %1410 ], [ %1453, %1415 ]
  %1461 = ptrtoint %"class.v8::internal::compiler::Node"** %1460 to i64
  store i64 %1461, i64* %55, align 8
  store i64 %1284, i64* %404, align 8
  store i64 %1281, i64* %53, align 8
  br label %1462

1462:                                             ; preds = %1237, %1459
  %1463 = load %"class.v8::internal::compiler::MachineGraph"*, %"class.v8::internal::compiler::MachineGraph"** %413, align 8
  %1464 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %1463, i64 0, i32 0
  %1465 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1464, align 8
  %1466 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %1463, i64 0, i32 1
  %1467 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %1466, align 8
  %1468 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %1467, i8 zeroext 9, i32 %8) #8
  %1469 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %406, align 8
  %1470 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1465, %"class.v8::internal::compiler::Operator"* %1468, i32 %50, %"class.v8::internal::compiler::Node"** %1469, i1 zeroext false) #8
  %1471 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1470, i64 0, i32 1, i32 0
  store i64 4294967295, i64* %1471, align 8
  %1472 = load %"class.v8::internal::compiler::EffectGraphReducer"*, %"class.v8::internal::compiler::EffectGraphReducer"** %414, align 8
  %1473 = ptrtoint %"class.v8::internal::compiler::Node"* %1470 to i64
  %1474 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %1472, i64 0, i32 2, i32 0, i32 0
  %1475 = load i32, i32* %1474, align 4
  %1476 = add i32 %1475, 1
  %1477 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1470, i64 0, i32 2
  store i32 %1476, i32* %1477, align 8
  %1478 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %1472, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1479 = bitcast %"class.v8::internal::compiler::Node"**** %1478 to i64*
  %1480 = load i64, i64* %1479, align 8
  %1481 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %1472, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1482 = bitcast %"class.v8::internal::compiler::Node"**** %1481 to i64*
  %1483 = load i64, i64* %1482, align 8
  %1484 = sub i64 %1480, %1483
  %1485 = icmp eq i64 %1484, 0
  %1486 = shl i64 %1484, 6
  %1487 = add i64 %1486, -1
  %1488 = select i1 %1485, i64 0, i64 %1487
  %1489 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %1472, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %1490 = load i64, i64* %1489, align 8
  %1491 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %1472, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1492 = load i64, i64* %1491, align 8
  %1493 = add i64 %1492, %1490
  %1494 = icmp eq i64 %1488, %1493
  %1495 = inttoptr i64 %1483 to %"class.v8::internal::compiler::Node"***
  %1496 = inttoptr i64 %1480 to %"class.v8::internal::compiler::Node"***
  br i1 %1494, label %1497, label %1504

1497:                                             ; preds = %1462
  %1498 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %1472, i64 0, i32 3, i32 0, i32 0, i32 0
  call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %1498) #8
  %1499 = load i64, i64* %1491, align 8
  %1500 = load i64, i64* %1489, align 8
  %1501 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %1481, align 8
  %1502 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %1478, align 8
  %1503 = add i64 %1500, %1499
  br label %1504

1504:                                             ; preds = %1497, %1462
  %1505 = phi i64 [ %1503, %1497 ], [ %1493, %1462 ]
  %1506 = phi %"class.v8::internal::compiler::Node"*** [ %1502, %1497 ], [ %1496, %1462 ]
  %1507 = phi %"class.v8::internal::compiler::Node"*** [ %1501, %1497 ], [ %1495, %1462 ]
  %1508 = icmp eq %"class.v8::internal::compiler::Node"*** %1506, %1507
  br i1 %1508, label %1516, label %1509

1509:                                             ; preds = %1504
  %1510 = lshr i64 %1505, 9
  %1511 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1507, i64 %1510
  %1512 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1511, align 8
  %1513 = and i64 %1505, 511
  %1514 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1512, i64 %1513
  %1515 = bitcast %"class.v8::internal::compiler::Node"** %1514 to i64*
  br label %1516

1516:                                             ; preds = %1504, %1509
  %1517 = phi i64* [ %1515, %1509 ], [ null, %1504 ]
  store i64 %1473, i64* %1517, align 8
  %1518 = load i64, i64* %1491, align 8
  %1519 = add i64 %1518, 1
  store i64 %1519, i64* %1491, align 8
  %1520 = icmp eq i32 %430, -1
  br i1 %1520, label %1521, label %1522, !prof !5

1521:                                             ; preds = %1516
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

1522:                                             ; preds = %1516
  call void @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3SetES3_S5_(%"class.v8::internal::compiler::PersistentMap"* %415, i32 %430, %"class.v8::internal::compiler::Node"* %1470) #8
  br label %1523

1523:                                             ; preds = %1116, %1224, %1522, %1231, %1218, %418
  %1524 = call dereferenceable(288) %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* nonnull %4)
  %1525 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %397, align 8
  %1526 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1525, null
  br i1 %1526, label %417, label %418
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15VariableTracker5ScopeD2Ev(%"class.v8::internal::compiler::VariableTracker::Scope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::Scope", %"class.v8::internal::compiler::VariableTracker::Scope"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::compiler::EffectGraphReducer::Reduction"*, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer::Reduction", %"class.v8::internal::compiler::EffectGraphReducer::Reduction"* %3, i64 0, i32 1
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %96

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::Scope", %"class.v8::internal::compiler::VariableTracker::Scope"* %0, i64 0, i32 1
  %9 = load %"class.v8::internal::compiler::VariableTracker"*, %"class.v8::internal::compiler::VariableTracker"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::Scope", %"class.v8::internal::compiler::VariableTracker::Scope"* %0, i64 0, i32 0, i32 0
  %11 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %11, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 16777215
  %15 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %14) #8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %9, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %86, label %19

19:                                               ; preds = %7
  %20 = tail call i64 @llvm.ctpop.i64(i64 %17) #8, !range !3
  %21 = icmp ugt i64 %20, 1
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = add i64 %17, -1
  %24 = and i64 %23, %15
  br label %29

25:                                               ; preds = %19
  %26 = icmp ult i64 %15, %17
  br i1 %26, label %29, label %27

27:                                               ; preds = %25
  %28 = urem i64 %15, %17
  br label %29

29:                                               ; preds = %27, %25, %22
  %30 = phi i64 [ %24, %22 ], [ %28, %27 ], [ %15, %25 ]
  %31 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %9, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %32, i64 %30
  %34 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %34, null
  br i1 %35, label %86, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %34, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %38, null
  br i1 %39, label %86, label %40

40:                                               ; preds = %36
  %41 = add i64 %17, -1
  br i1 %21, label %42, label %64

42:                                               ; preds = %40, %60
  %43 = phi %"struct.std::__1::__hash_node_base.1279"* [ %62, %60 ], [ %38, %40 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %43, i64 1
  %45 = bitcast %"struct.std::__1::__hash_node_base.1279"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %15, %46
  br i1 %47, label %55, label %48

48:                                               ; preds = %42
  %49 = icmp ult i64 %46, %17
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = urem i64 %46, %17
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi i64 [ %51, %50 ], [ %46, %48 ]
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %60, label %86

55:                                               ; preds = %42
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %43, i64 2
  %57 = bitcast %"struct.std::__1::__hash_node_base.1279"* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %14
  br i1 %59, label %82, label %60

60:                                               ; preds = %55, %52
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %43, i64 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %61, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %62, null
  br i1 %63, label %86, label %42

64:                                               ; preds = %40, %78
  %65 = phi %"struct.std::__1::__hash_node_base.1279"* [ %80, %78 ], [ %38, %40 ]
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %65, i64 1
  %67 = bitcast %"struct.std::__1::__hash_node_base.1279"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %15, %68
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = and i64 %68, %41
  %72 = icmp eq i64 %71, %30
  br i1 %72, label %78, label %86

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %65, i64 2
  %75 = bitcast %"struct.std::__1::__hash_node_base.1279"* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, %14
  br i1 %77, label %82, label %78

78:                                               ; preds = %73, %70
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %65, i64 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %79, align 8
  %81 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %80, null
  br i1 %81, label %86, label %64

82:                                               ; preds = %73, %55
  %83 = phi %"struct.std::__1::__hash_node_base.1279"* [ %43, %55 ], [ %65, %73 ]
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %83, i64 3
  %85 = bitcast %"struct.std::__1::__hash_node_base.1279"* %84 to %"class.v8::internal::compiler::VariableTracker::State"*
  br label %88

86:                                               ; preds = %78, %70, %60, %52, %36, %29, %7
  %87 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %9, i64 0, i32 2, i32 0
  br label %88

88:                                               ; preds = %82, %86
  %89 = phi %"class.v8::internal::compiler::VariableTracker::State"* [ %85, %82 ], [ %87, %86 ]
  %90 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::State", %"class.v8::internal::compiler::VariableTracker::State"* %89, i64 0, i32 0
  %91 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::Scope", %"class.v8::internal::compiler::VariableTracker::Scope"* %0, i64 0, i32 2, i32 0
  %92 = tail call zeroext i1 @_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEEneERKS9_(%"class.v8::internal::compiler::PersistentMap"* %90, %"class.v8::internal::compiler::PersistentMap"* dereferenceable(24) %91) #8
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = load %"class.v8::internal::compiler::EffectGraphReducer::Reduction"*, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"** %2, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer::Reduction", %"class.v8::internal::compiler::EffectGraphReducer::Reduction"* %94, i64 0, i32 1
  store i8 1, i8* %95, align 1
  br label %96

96:                                               ; preds = %1, %93, %88
  %97 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::Scope", %"class.v8::internal::compiler::VariableTracker::Scope"* %0, i64 0, i32 1
  %98 = load %"class.v8::internal::compiler::VariableTracker"*, %"class.v8::internal::compiler::VariableTracker"** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %98, i64 0, i32 2
  %100 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::Scope", %"class.v8::internal::compiler::VariableTracker::Scope"* %0, i64 0, i32 0, i32 0
  %101 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::Scope", %"class.v8::internal::compiler::VariableTracker::Scope"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal8compiler15SparseSidetableINS1_15VariableTracker5StateEE3SetEPKNS1_4NodeES4_(%"class.v8::internal::compiler::SparseSidetable"* %99, %"class.v8::internal::compiler::Node"* %101, %"class.v8::internal::compiler::VariableTracker::State"* nonnull byval(%"class.v8::internal::compiler::VariableTracker::State") align 8 %102)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler15SparseSidetableINS1_15VariableTracker5StateEE3SetEPKNS1_4NodeES4_(%"class.v8::internal::compiler::SparseSidetable"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::VariableTracker::State"* byval(%"class.v8::internal::compiler::VariableTracker::State") align 8) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.1419", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable", %"class.v8::internal::compiler::SparseSidetable"* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 16777215
  %9 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %8) #8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable", %"class.v8::internal::compiler::SparseSidetable"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %81, label %13

13:                                               ; preds = %3
  %14 = tail call i64 @llvm.ctpop.i64(i64 %11) #8, !range !3
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = add i64 %11, -1
  %18 = and i64 %17, %9
  br label %23

19:                                               ; preds = %13
  %20 = icmp ult i64 %9, %11
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = urem i64 %9, %11
  br label %23

23:                                               ; preds = %21, %19, %16
  %24 = phi i64 [ %18, %16 ], [ %22, %21 ], [ %9, %19 ]
  %25 = getelementptr inbounds %"class.std::__1::unordered_map.1274", %"class.std::__1::unordered_map.1274"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %26, i64 %24
  %28 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %28, null
  br i1 %29, label %81, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %28, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %32, null
  br i1 %33, label %81, label %34

34:                                               ; preds = %30
  %35 = add i64 %11, -1
  br i1 %15, label %36, label %58

36:                                               ; preds = %34, %54
  %37 = phi %"struct.std::__1::__hash_node_base.1279"* [ %56, %54 ], [ %32, %34 ]
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %37, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base.1279"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %9
  br i1 %41, label %49, label %42

42:                                               ; preds = %36
  %43 = icmp ult i64 %40, %11
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %40, %11
  br label %46

46:                                               ; preds = %44, %42
  %47 = phi i64 [ %45, %44 ], [ %40, %42 ]
  %48 = icmp eq i64 %47, %24
  br i1 %48, label %54, label %81

49:                                               ; preds = %36
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %37, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.1279"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %8
  br i1 %53, label %76, label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %37, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %56, null
  br i1 %57, label %81, label %36

58:                                               ; preds = %34, %72
  %59 = phi %"struct.std::__1::__hash_node_base.1279"* [ %74, %72 ], [ %32, %34 ]
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %59, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base.1279"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, %9
  br i1 %63, label %67, label %64

64:                                               ; preds = %58
  %65 = and i64 %62, %35
  %66 = icmp eq i64 %65, %24
  br i1 %66, label %72, label %81

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %59, i64 2
  %69 = bitcast %"struct.std::__1::__hash_node_base.1279"* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, %8
  br i1 %71, label %76, label %72

72:                                               ; preds = %67, %64
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %59, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %74, null
  br i1 %75, label %81, label %58

76:                                               ; preds = %67, %49
  %77 = phi %"struct.std::__1::__hash_node_base.1279"* [ %37, %49 ], [ %59, %67 ]
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %77, i64 3
  %79 = bitcast %"struct.std::__1::__hash_node_base.1279"* %78 to i8*
  %80 = bitcast %"class.v8::internal::compiler::VariableTracker::State"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* nonnull align 8 %80, i64 24, i1 false)
  br label %95

81:                                               ; preds = %64, %72, %46, %54, %23, %3, %30
  %82 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::State", %"class.v8::internal::compiler::VariableTracker::State"* %2, i64 0, i32 0
  %83 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable", %"class.v8::internal::compiler::SparseSidetable"* %0, i64 0, i32 0, i32 0
  %84 = call zeroext i1 @_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEEneERKS9_(%"class.v8::internal::compiler::PersistentMap"* nonnull %82, %"class.v8::internal::compiler::PersistentMap"* dereferenceable(24) %83) #8
  br i1 %84, label %85, label %95

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::pair.1419"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #8
  %87 = load i32, i32* %6, align 4
  %88 = and i32 %87, 16777215
  %89 = getelementptr inbounds %"struct.std::__1::pair.1419", %"struct.std::__1::pair.1419"* %4, i64 0, i32 0
  store i32 %88, i32* %89, align 8, !alias.scope !49
  %90 = getelementptr inbounds %"struct.std::__1::pair.1419", %"struct.std::__1::pair.1419"* %4, i64 0, i32 1
  %91 = bitcast %"class.v8::internal::compiler::VariableTracker::State"* %90 to i8*
  %92 = bitcast %"class.v8::internal::compiler::VariableTracker::State"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* nonnull align 8 %92, i64 24, i1 false) #8
  %93 = getelementptr inbounds %"class.std::__1::unordered_map.1274", %"class.std::__1::unordered_map.1274"* %5, i64 0, i32 0
  %94 = call { %"struct.std::__1::__hash_node_base.1279"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal8compiler15VariableTracker5StateEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE25__emplace_unique_key_argsIjJNS_4pairIjS6_EEEEENSL_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1275"* %93, i32* nonnull dereferenceable(4) %89, %"struct.std::__1::pair.1419"* nonnull dereferenceable(32) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %86) #8
  br label %95

95:                                               ; preds = %81, %85, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler15VariableTracker5State3GetENS1_8VariableE(%"class.v8::internal::compiler::VariableTracker::State"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, -1
  br i1 %3, label %4, label %5, !prof !5

4:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

5:                                                ; preds = %2
  %6 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %1) #8
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::State", %"class.v8::internal::compiler::VariableTracker::State"* %0, i64 0, i32 0, i32 0
  %9 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %8, align 8
  %10 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %5, %30
  %12 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %33, %30 ], [ %9, %5 ]
  %13 = phi i32 [ %24, %30 ], [ 0, %5 ]
  %14 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %12, i64 0, i32 2, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, %7
  br i1 %16, label %37, label %17

17:                                               ; preds = %11
  %18 = xor i32 %15, %7
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i32 [ %24, %19 ], [ %13, %17 ]
  %21 = lshr i32 -2147483648, %20
  %22 = and i32 %21, %18
  %23 = icmp eq i32 %22, 0
  %24 = add nsw i32 %20, 1
  br i1 %23, label %19, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %12, i64 0, i32 1
  %27 = load i8, i8* %26, align 8
  %28 = sext i8 %27 to i32
  %29 = icmp slt i32 %20, %28
  br i1 %29, label %30, label %35

30:                                               ; preds = %25
  %31 = sext i32 %20 to i64
  %32 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %12, i64 0, i32 4, i64 %31
  %33 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %32, align 8
  %34 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %33, null
  br i1 %34, label %35, label %11

35:                                               ; preds = %30, %25, %5
  %36 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::State", %"class.v8::internal::compiler::VariableTracker::State"* %0, i64 0, i32 0, i32 1
  br label %80

37:                                               ; preds = %11
  %38 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %12, i64 0, i32 3
  %39 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %38, align 8
  %40 = icmp eq %"class.v8::internal::ZoneMap"* %39, null
  br i1 %40, label %72, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_node"**
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node"* %44, null
  br i1 %45, label %67, label %46

46:                                               ; preds = %41, %46
  %47 = phi %"class.std::__1::__tree_end_node"* [ %57, %46 ], [ %42, %41 ]
  %48 = phi %"class.std::__1::__tree_node"* [ %58, %46 ], [ %44, %41 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 1, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, %1
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.std::__1::__tree_node_base"** %52 to %"class.std::__1::__tree_node"**
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 0
  %55 = bitcast %"class.std::__1::__tree_node"* %48 to %"class.std::__1::__tree_node"**
  %56 = select i1 %51, %"class.std::__1::__tree_node"** %53, %"class.std::__1::__tree_node"** %55
  %57 = select i1 %51, %"class.std::__1::__tree_end_node"* %47, %"class.std::__1::__tree_end_node"* %54
  %58 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %56, align 8
  %59 = icmp eq %"class.std::__1::__tree_node"* %58, null
  br i1 %59, label %60, label %46

60:                                               ; preds = %46
  %61 = icmp eq %"class.std::__1::__tree_end_node"* %57, %42
  br i1 %61, label %67, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 4
  %64 = bitcast %"class.std::__1::__tree_end_node"* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %65, %1
  br i1 %66, label %67, label %69

67:                                               ; preds = %62, %60, %41
  %68 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::State", %"class.v8::internal::compiler::VariableTracker::State"* %0, i64 0, i32 0, i32 1
  br label %80

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 5
  %71 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"class.v8::internal::compiler::Node"**
  br label %80

72:                                               ; preds = %37
  %73 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, %1
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %12, i64 0, i32 0, i32 0, i32 1
  br label %80

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker::State", %"class.v8::internal::compiler::VariableTracker::State"* %0, i64 0, i32 0, i32 1
  br label %80

80:                                               ; preds = %35, %67, %69, %76, %78
  %81 = phi %"class.v8::internal::compiler::Node"** [ %77, %76 ], [ %79, %78 ], [ %36, %35 ], [ %68, %67 ], [ %71, %69 ]
  %82 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, align 8
  ret %"class.v8::internal::compiler::Node"* %82
}

declare void @_ZN2v88internal8compiler14NodeProperties17ReplaceValueInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i1 zeroext) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i8 zeroext, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(288) %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca [20 x i8], align 4
  %3 = alloca [20 x i8], align 4
  %4 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::__map_const_iterator", %"class.std::__1::__map_const_iterator"* %5, i64 0, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__map_const_iterator"* %5 to %"class.std::__1::__tree_node_base"**
  %8 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"** %9 to i64*
  %11 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0, i64 0, i32 4
  %12 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %4, align 8
  br label %13

13:                                               ; preds = %133, %1
  %14 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %119, %133 ], [ %12, %1 ]
  %15 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %14, null
  br i1 %15, label %138, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %14, i64 0, i32 3
  %18 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %17, align 8
  %19 = icmp eq %"class.v8::internal::ZoneMap"* %18, null
  br i1 %19, label %53, label %20

20:                                               ; preds = %16
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %22 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %21, i64 0, i32 1
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %25, label %31

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %21, i64 0, i32 2
  %27 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, %21
  br i1 %30, label %47, label %38

31:                                               ; preds = %20, %31
  %32 = phi %"class.std::__1::__tree_node_base"* [ %34, %31 ], [ %23, %20 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %31

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0
  br label %47

38:                                               ; preds = %25, %38
  %39 = phi %"class.std::__1::__tree_end_node"** [ %42, %38 ], [ %26, %25 ]
  %40 = bitcast %"class.std::__1::__tree_end_node"** %39 to %"class.std::__1::__tree_node_base"**
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 2
  %43 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, %41
  br i1 %46, label %47, label %38

47:                                               ; preds = %38, %25, %36
  %48 = phi %"class.std::__1::__tree_end_node"* [ %37, %36 ], [ %27, %25 ], [ %43, %38 ]
  store %"class.std::__1::__tree_end_node"* %48, %"class.std::__1::__tree_end_node"** %6, align 8
  %49 = bitcast %"class.v8::internal::ZoneMap"** %17 to %"class.std::__1::map"**
  %50 = load %"class.std::__1::map"*, %"class.std::__1::map"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %50, i64 0, i32 0, i32 1, i32 0, i32 0
  %52 = icmp eq %"class.std::__1::__tree_end_node"* %48, %51
  br i1 %52, label %53, label %138

53:                                               ; preds = %47, %16
  %54 = load i32, i32* %8, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %14, i64 0, i32 2, i32 0
  %58 = sext i32 %54 to i64
  br label %64

59:                                               ; preds = %53
  %60 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %60)
  %61 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 16, i1 false), !alias.scope !52
  store i32 0, i32* %8, align 8
  %62 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* nonnull align 4 %60, i64 20, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %60)
  br label %138

64:                                               ; preds = %56, %76
  %65 = phi i64 [ %58, %56 ], [ %66, %76 ]
  %66 = add nsw i64 %65, -1
  %67 = trunc i64 %66 to i32
  store i32 %67, i32* %8, align 8
  %68 = load i32, i32* %57, align 4
  %69 = lshr i32 -2147483648, %67
  %70 = and i32 %68, %69
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0, i64 0, i32 3, i32 0, i64 %66
  %74 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %73, align 8
  %75 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %74, null
  br i1 %75, label %76, label %83

76:                                               ; preds = %64, %72
  %77 = icmp eq i32 %67, 0
  br i1 %77, label %78, label %64

78:                                               ; preds = %76
  %79 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %79)
  %80 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %80, i8 0, i64 16, i1 false), !alias.scope !55
  store i32 0, i32* %8, align 8
  %81 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* nonnull align 4 %79, i64 20, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %79)
  br label %138

83:                                               ; preds = %72
  %84 = trunc i64 %65 to i32
  store i32 %84, i32* %8, align 8
  %85 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %74, i64 0, i32 1
  %86 = load i8, i8* %85, align 8
  %87 = sext i8 %86 to i32
  %88 = icmp slt i32 %84, %87
  br i1 %88, label %89, label %118

89:                                               ; preds = %83, %110
  %90 = phi i32 [ %113, %110 ], [ %84, %83 ]
  %91 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %111, %110 ], [ %74, %83 ]
  %92 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %91, i64 0, i32 2, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = lshr i32 -2147483648, %90
  %95 = and i32 %93, %94
  %96 = icmp eq i32 %95, 0
  %97 = sext i32 %90 to i64
  %98 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %91, i64 0, i32 4, i64 %97
  %99 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %98, align 8
  %100 = ptrtoint %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %99 to i64
  br i1 %96, label %103, label %101

101:                                              ; preds = %89
  %102 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %99, null
  br i1 %102, label %107, label %103

103:                                              ; preds = %89, %101
  %104 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %91, %101 ], [ %99, %89 ]
  %105 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %99, %101 ], [ %91, %89 ]
  %106 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0, i64 0, i32 3, i32 0, i64 %97
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %104, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %106, align 8
  br label %110

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0, i64 0, i32 3, i32 0, i64 %97
  %109 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %108 to i64*
  store i64 %100, i64* %109, align 8
  br label %110

110:                                              ; preds = %107, %103
  %111 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %91, %107 ], [ %105, %103 ]
  %112 = load i32, i32* %8, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %8, align 4
  %114 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %111, i64 0, i32 1
  %115 = load i8, i8* %114, align 8
  %116 = sext i8 %115 to i32
  %117 = icmp slt i32 %113, %116
  br i1 %117, label %89, label %118

118:                                              ; preds = %110, %83
  %119 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %74, %83 ], [ %111, %110 ]
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %119, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %4, align 8
  %120 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %119, i64 0, i32 3
  %121 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %120, align 8
  %122 = icmp eq %"class.v8::internal::ZoneMap"* %121, null
  br i1 %122, label %131, label %123

123:                                              ; preds = %118
  %124 = bitcast %"class.v8::internal::ZoneMap"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %10, align 8
  %126 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %120, align 8
  %127 = icmp eq %"class.v8::internal::ZoneMap"* %126, null
  br i1 %127, label %131, label %128

128:                                              ; preds = %123
  %129 = inttoptr i64 %125 to %"class.std::__1::__tree_node"*
  %130 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %129, i64 0, i32 1, i32 0, i32 1
  br label %133

131:                                              ; preds = %118, %123
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %119, i64 0, i32 0, i32 0, i32 1
  br label %133

133:                                              ; preds = %128, %131
  %134 = phi %"class.v8::internal::compiler::Node"** [ %132, %131 ], [ %130, %128 ]
  %135 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %134, align 8
  %136 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %11, align 8
  %137 = icmp eq %"class.v8::internal::compiler::Node"* %135, %136
  br i1 %137, label %13, label %138

138:                                              ; preds = %47, %133, %13, %78, %59
  ret %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14EscapeAnalysis6ReduceEPNS1_4NodeEPNS1_18EffectGraphReducer9ReductionE(%"class.v8::internal::compiler::EscapeAnalysis"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::array.1369", align 8
  %5 = alloca %"struct.std::__1::array.1370", align 8
  %6 = alloca %"struct.std::__1::array.1370", align 8
  %7 = alloca %"struct.std::__1::array.1369", align 8
  %8 = alloca %"class.v8::internal::compiler::Type", align 8
  %9 = alloca %"class.v8::internal::compiler::Type", align 8
  %10 = alloca %"class.v8::internal::compiler::Type", align 8
  %11 = alloca %"class.v8::internal::compiler::Type", align 8
  %12 = alloca %"class.v8::internal::compiler::MapRef", align 8
  %13 = alloca %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %16 = bitcast %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 1
  %19 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 2
  call void @_ZN2v88internal8compiler15VariableTracker5ScopeC2EPS2_PNS1_4NodeEPNS1_18EffectGraphReducer9ReductionE(%"class.v8::internal::compiler::VariableTracker::Scope"* nonnull %20, %"class.v8::internal::compiler::VariableTracker"* %21, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"* %2) #8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 1
  store %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 2
  store %"class.v8::internal::compiler::EffectGraphReducer"* %17, %"class.v8::internal::compiler::EffectGraphReducer"** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 3
  %25 = bitcast %"class.v8::internal::compiler::VirtualObject"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 2
  %27 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 2
  %29 = load i16, i16* %28, align 8
  switch i16 %29, label %2563 [
    i16 197, label %30
    i16 40, label %175
    i16 272, label %313
    i16 271, label %477
    i16 230, label %693
    i16 229, label %878
    i16 59, label %1556
    i16 118, label %1694
    i16 210, label %1925
    i16 218, label %2169
    i16 207, label %2420
    i16 57, label %2483
    i16 42, label %2635
    i16 41, label %2635
  ]

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %32, i64 0, i32 0
  %34 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %34, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %39, label %38, !prof !4

38:                                               ; preds = %30
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %32, i64 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, 251658240
  %43 = icmp eq i32 %42, 251658240
  %44 = ptrtoint %"class.v8::internal::compiler::Node"* %32 to i64
  %45 = add i64 %44, 32
  br i1 %43, label %46, label %50

46:                                               ; preds = %39
  %47 = inttoptr i64 %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, 16
  br label %50

50:                                               ; preds = %46, %39
  %51 = phi i64 [ %49, %46 ], [ %45, %39 ]
  %52 = inttoptr i64 %51 to %"class.v8::internal::compiler::Node"**
  %53 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %53, i64 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, 16777215
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %54, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %61 = bitcast %"class.v8::internal::compiler::Node"*** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.v8::internal::compiler::Sidetable"* %54 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = ashr exact i64 %65, 3
  %67 = icmp ugt i64 %66, %58
  %68 = inttoptr i64 %64 to %"class.v8::internal::compiler::Node"**
  br i1 %67, label %81, label %69

69:                                               ; preds = %50
  %70 = add nuw nsw i32 %57, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ult i64 %66, %71
  br i1 %72, label %73, label %77

73:                                               ; preds = %69
  %74 = sub nsw i64 %71, %66
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %59, i64 %74) #8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %75, align 8
  br label %81

77:                                               ; preds = %69
  %78 = icmp ugt i64 %66, %71
  br i1 %78, label %79, label %81

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 %71
  store %"class.v8::internal::compiler::Node"** %80, %"class.v8::internal::compiler::Node"*** %60, align 8
  br label %81

81:                                               ; preds = %79, %77, %73, %50
  %82 = phi %"class.v8::internal::compiler::Node"** [ %68, %79 ], [ %68, %77 ], [ %76, %73 ], [ %68, %50 ]
  %83 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, i64 %58
  %84 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, align 8
  %85 = icmp eq %"class.v8::internal::compiler::Node"* %84, null
  %86 = select i1 %85, %"class.v8::internal::compiler::Node"* %53, %"class.v8::internal::compiler::Node"* %84
  %87 = ptrtoint %"class.v8::internal::compiler::Node"* %86 to i64
  br label %88

88:                                               ; preds = %133, %81
  %89 = phi i64 [ %87, %81 ], [ %135, %133 ]
  %90 = inttoptr i64 %89 to %"class.v8::internal::compiler::Node"*
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %90, i64 0, i32 0
  %92 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %92, i64 0, i32 2
  %94 = load i16, i16* %93, align 8
  switch i16 %94, label %2635 [
    i16 59, label %95
    i16 58, label %113
    i16 28, label %136
  ]

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %92, i64 0, i32 5
  %97 = load i32, i32* %96, align 4
  %98 = icmp sgt i32 %97, 0
  br i1 %98, label %100, label %99, !prof !4

99:                                               ; preds = %95
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %90, i64 0, i32 3
  %102 = load i32, i32* %101, align 4
  %103 = and i32 %102, 251658240
  %104 = icmp eq i32 %103, 251658240
  %105 = add i64 %89, 32
  br i1 %104, label %106, label %110

106:                                              ; preds = %100
  %107 = inttoptr i64 %105 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = add i64 %108, 16
  br label %110

110:                                              ; preds = %106, %100
  %111 = phi i64 [ %109, %106 ], [ %105, %100 ]
  %112 = inttoptr i64 %111 to i64*
  br label %133

113:                                              ; preds = %88
  %114 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %92, i64 0, i32 5
  %115 = load i32, i32* %114, align 4
  %116 = icmp sgt i32 %115, 1
  br i1 %116, label %118, label %117, !prof !4

117:                                              ; preds = %113
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %90, i64 0, i32 3
  %120 = load i32, i32* %119, align 4
  %121 = and i32 %120, 251658240
  %122 = icmp eq i32 %121, 251658240
  %123 = add i64 %89, 32
  br i1 %122, label %124, label %128

124:                                              ; preds = %118
  %125 = inttoptr i64 %123 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 16
  br label %128

128:                                              ; preds = %124, %118
  %129 = phi i64 [ %127, %124 ], [ %123, %118 ]
  %130 = inttoptr i64 %129 to %"class.v8::internal::compiler::Node"**
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %130, i64 1
  %132 = bitcast %"class.v8::internal::compiler::Node"** %131 to i64*
  br label %133

133:                                              ; preds = %128, %110
  %134 = phi i64* [ %132, %128 ], [ %112, %110 ]
  %135 = load i64, i64* %134, align 8
  br label %88

136:                                              ; preds = %88
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %92, i64 1
  %138 = bitcast %"class.v8::internal::compiler::Operator"* %137 to double*
  %139 = load double, double* %138, align 8
  %140 = fptosi double %139 to i32
  %141 = sitofp i32 %140 to double
  %142 = fcmp une double %139, %141
  br i1 %142, label %2635, label %143

143:                                              ; preds = %136
  %144 = call %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope17InitVirtualObjectEi(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, i32 %140) #8
  %145 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %144, null
  br i1 %145, label %2635, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %148 = load %"class.v8::internal::compiler::Variable"*, %"class.v8::internal::compiler::Variable"** %147, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %144, i64 0, i32 3, i32 0, i32 0, i32 1
  %150 = load %"class.v8::internal::compiler::Variable"*, %"class.v8::internal::compiler::Variable"** %149, align 8
  %151 = icmp eq %"class.v8::internal::compiler::Variable"* %148, %150
  br i1 %151, label %2635, label %152

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %27, i64 0, i32 0, i32 4
  %154 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %27, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %27, i64 0, i32 0, i32 1
  %156 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0
  br label %157

157:                                              ; preds = %172, %152
  %158 = phi %"class.v8::internal::compiler::Variable"* [ %148, %152 ], [ %173, %172 ]
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %158, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, align 8
  %162 = icmp eq %"class.v8::internal::compiler::Node"* %161, null
  br i1 %162, label %163, label %168

163:                                              ; preds = %157
  %164 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %154, align 8
  %165 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %155, align 8
  %166 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %165) #8
  %167 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %164, %"class.v8::internal::compiler::Operator"* %166, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #8
  store %"class.v8::internal::compiler::Node"* %167, %"class.v8::internal::compiler::Node"** %153, align 8
  br label %168

168:                                              ; preds = %163, %157
  %169 = phi %"class.v8::internal::compiler::Node"* [ %167, %163 ], [ %161, %157 ]
  %170 = icmp eq i32 %160, -1
  br i1 %170, label %171, label %172, !prof !5

171:                                              ; preds = %168
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

172:                                              ; preds = %168
  call void @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3SetES3_S5_(%"class.v8::internal::compiler::PersistentMap"* %156, i32 %160, %"class.v8::internal::compiler::Node"* %169) #8
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %158, i64 1
  %174 = icmp eq %"class.v8::internal::compiler::Variable"* %173, %150
  br i1 %174, label %2635, label %157

175:                                              ; preds = %3
  %176 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 0, i32 0
  %177 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %176, align 8
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %177, i64 0, i32 0
  %179 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %178, align 8
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %179, i64 0, i32 5
  %181 = load i32, i32* %180, align 4
  %182 = icmp sgt i32 %181, 0
  br i1 %182, label %184, label %183, !prof !4

183:                                              ; preds = %175
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %177, i64 0, i32 3
  %186 = load i32, i32* %185, align 4
  %187 = and i32 %186, 251658240
  %188 = icmp eq i32 %187, 251658240
  %189 = ptrtoint %"class.v8::internal::compiler::Node"* %177 to i64
  %190 = add i64 %189, 32
  br i1 %188, label %191, label %195

191:                                              ; preds = %184
  %192 = inttoptr i64 %190 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = add i64 %193, 16
  br label %195

195:                                              ; preds = %191, %184
  %196 = phi i64 [ %194, %191 ], [ %190, %184 ]
  %197 = inttoptr i64 %196 to %"class.v8::internal::compiler::Node"**
  %198 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %198, i64 0, i32 3
  %201 = load i32, i32* %200, align 4
  %202 = and i32 %201, 16777215
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %199, i64 0, i32 0, i32 0
  %205 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %206 = bitcast %"class.v8::internal::compiler::Node"*** %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"class.v8::internal::compiler::Sidetable"* %199 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = sub i64 %207, %209
  %211 = ashr exact i64 %210, 3
  %212 = icmp ugt i64 %211, %203
  %213 = inttoptr i64 %209 to %"class.v8::internal::compiler::Node"**
  br i1 %212, label %226, label %214

214:                                              ; preds = %195
  %215 = add nuw nsw i32 %202, 1
  %216 = zext i32 %215 to i64
  %217 = icmp ult i64 %211, %216
  br i1 %217, label %218, label %222

218:                                              ; preds = %214
  %219 = sub nsw i64 %216, %211
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %204, i64 %219) #8
  %220 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %199, i64 0, i32 0, i32 0, i32 0, i32 0
  %221 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %220, align 8
  br label %226

222:                                              ; preds = %214
  %223 = icmp ugt i64 %211, %216
  br i1 %223, label %224, label %226

224:                                              ; preds = %222
  %225 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 %216
  store %"class.v8::internal::compiler::Node"** %225, %"class.v8::internal::compiler::Node"*** %205, align 8
  br label %226

226:                                              ; preds = %224, %222, %218, %195
  %227 = phi %"class.v8::internal::compiler::Node"** [ %213, %224 ], [ %213, %222 ], [ %221, %218 ], [ %213, %195 ]
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %227, i64 %203
  %229 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %228, align 8
  %230 = icmp eq %"class.v8::internal::compiler::Node"* %229, null
  %231 = select i1 %230, %"class.v8::internal::compiler::Node"* %198, %"class.v8::internal::compiler::Node"* %229
  %232 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %231, i64 0, i32 3
  %233 = load i32, i32* %232, align 4
  %234 = and i32 %233, 16777215
  %235 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %234) #8
  %236 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %237 = load i64, i64* %236, align 8
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %306, label %239

239:                                              ; preds = %226
  %240 = tail call i64 @llvm.ctpop.i64(i64 %237) #8, !range !3
  %241 = icmp ugt i64 %240, 1
  br i1 %241, label %245, label %242

242:                                              ; preds = %239
  %243 = add i64 %237, -1
  %244 = and i64 %243, %235
  br label %249

245:                                              ; preds = %239
  %246 = icmp ult i64 %235, %237
  br i1 %246, label %249, label %247

247:                                              ; preds = %245
  %248 = urem i64 %235, %237
  br label %249

249:                                              ; preds = %247, %245, %242
  %250 = phi i64 [ %244, %242 ], [ %248, %247 ], [ %235, %245 ]
  %251 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %251, align 8
  %253 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %252, i64 %250
  %254 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %253, align 8
  %255 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %254, null
  br i1 %255, label %306, label %256

256:                                              ; preds = %249
  %257 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %254, i64 0, i32 0
  %258 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %257, align 8
  %259 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %258, null
  br i1 %259, label %306, label %260

260:                                              ; preds = %256
  %261 = add i64 %237, -1
  br i1 %241, label %262, label %284

262:                                              ; preds = %260, %280
  %263 = phi %"struct.std::__1::__hash_node_base.1319"* [ %282, %280 ], [ %258, %260 ]
  %264 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %263, i64 1
  %265 = bitcast %"struct.std::__1::__hash_node_base.1319"* %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = icmp eq i64 %235, %266
  br i1 %267, label %275, label %268

268:                                              ; preds = %262
  %269 = icmp ult i64 %266, %237
  br i1 %269, label %272, label %270

270:                                              ; preds = %268
  %271 = urem i64 %266, %237
  br label %272

272:                                              ; preds = %270, %268
  %273 = phi i64 [ %271, %270 ], [ %266, %268 ]
  %274 = icmp eq i64 %273, %250
  br i1 %274, label %280, label %306

275:                                              ; preds = %262
  %276 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %263, i64 2
  %277 = bitcast %"struct.std::__1::__hash_node_base.1319"* %276 to i32*
  %278 = load i32, i32* %277, align 4
  %279 = icmp eq i32 %278, %234
  br i1 %279, label %302, label %280

280:                                              ; preds = %275, %272
  %281 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %263, i64 0, i32 0
  %282 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %281, align 8
  %283 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %282, null
  br i1 %283, label %306, label %262

284:                                              ; preds = %260, %298
  %285 = phi %"struct.std::__1::__hash_node_base.1319"* [ %300, %298 ], [ %258, %260 ]
  %286 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %285, i64 1
  %287 = bitcast %"struct.std::__1::__hash_node_base.1319"* %286 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = icmp eq i64 %235, %288
  br i1 %289, label %293, label %290

290:                                              ; preds = %284
  %291 = and i64 %288, %261
  %292 = icmp eq i64 %291, %250
  br i1 %292, label %298, label %306

293:                                              ; preds = %284
  %294 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %285, i64 2
  %295 = bitcast %"struct.std::__1::__hash_node_base.1319"* %294 to i32*
  %296 = load i32, i32* %295, align 4
  %297 = icmp eq i32 %296, %234
  br i1 %297, label %302, label %298

298:                                              ; preds = %293, %290
  %299 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %285, i64 0, i32 0
  %300 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %299, align 8
  %301 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %300, null
  br i1 %301, label %306, label %284

302:                                              ; preds = %293, %275
  %303 = phi %"struct.std::__1::__hash_node_base.1319"* [ %263, %275 ], [ %285, %293 ]
  %304 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %303, i64 3
  %305 = bitcast %"struct.std::__1::__hash_node_base.1319"* %304 to %"class.v8::internal::compiler::VirtualObject"**
  br label %308

306:                                              ; preds = %298, %290, %280, %272, %256, %249, %226
  %307 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 0, i32 0
  br label %308

308:                                              ; preds = %302, %306
  %309 = phi %"class.v8::internal::compiler::VirtualObject"** [ %305, %302 ], [ %307, %306 ]
  %310 = bitcast %"class.v8::internal::compiler::VirtualObject"** %309 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = bitcast %"class.v8::internal::compiler::VirtualObject"** %24 to i64*
  store i64 %311, i64* %312, align 8
  br label %2635

313:                                              ; preds = %3
  %314 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 0, i32 0
  %315 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %314, align 8
  %316 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %315, i64 0, i32 0
  %317 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %316, align 8
  %318 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %317, i64 0, i32 5
  %319 = load i32, i32* %318, align 4
  %320 = icmp sgt i32 %319, 0
  br i1 %320, label %322, label %321, !prof !4

321:                                              ; preds = %313
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %315, i64 0, i32 3
  %324 = load i32, i32* %323, align 4
  %325 = and i32 %324, 251658240
  %326 = icmp eq i32 %325, 251658240
  %327 = ptrtoint %"class.v8::internal::compiler::Node"* %315 to i64
  %328 = add i64 %327, 32
  br i1 %326, label %329, label %333

329:                                              ; preds = %322
  %330 = inttoptr i64 %328 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = add i64 %331, 16
  br label %333

333:                                              ; preds = %329, %322
  %334 = phi i64 [ %332, %329 ], [ %328, %322 ]
  %335 = inttoptr i64 %334 to %"class.v8::internal::compiler::Node"**
  %336 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %335, align 8
  %337 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1
  %338 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %336, i64 0, i32 3
  %339 = load i32, i32* %338, align 4
  %340 = and i32 %339, 16777215
  %341 = zext i32 %340 to i64
  %342 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %337, i64 0, i32 0, i32 0
  %343 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %344 = bitcast %"class.v8::internal::compiler::Node"*** %343 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.v8::internal::compiler::Sidetable"* %337 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = sub i64 %345, %347
  %349 = ashr exact i64 %348, 3
  %350 = icmp ugt i64 %349, %341
  %351 = inttoptr i64 %347 to %"class.v8::internal::compiler::Node"**
  br i1 %350, label %365, label %352

352:                                              ; preds = %333
  %353 = add nuw nsw i32 %340, 1
  %354 = zext i32 %353 to i64
  %355 = icmp ult i64 %349, %354
  br i1 %355, label %356, label %361

356:                                              ; preds = %352
  %357 = sub nsw i64 %354, %349
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %342, i64 %357) #8
  %358 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %337, i64 0, i32 0, i32 0, i32 0, i32 0
  %359 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %358, align 8
  %360 = ptrtoint %"class.v8::internal::compiler::Node"** %359 to i64
  br label %365

361:                                              ; preds = %352
  %362 = icmp ugt i64 %349, %354
  br i1 %362, label %363, label %365

363:                                              ; preds = %361
  %364 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %351, i64 %354
  store %"class.v8::internal::compiler::Node"** %364, %"class.v8::internal::compiler::Node"*** %343, align 8
  br label %365

365:                                              ; preds = %363, %361, %356, %333
  %366 = phi i64 [ %347, %363 ], [ %347, %361 ], [ %360, %356 ], [ %347, %333 ]
  %367 = phi %"class.v8::internal::compiler::Node"** [ %351, %363 ], [ %351, %361 ], [ %359, %356 ], [ %351, %333 ]
  %368 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %367, i64 %341
  %369 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %368, align 8
  %370 = icmp eq %"class.v8::internal::compiler::Node"* %369, null
  %371 = select i1 %370, %"class.v8::internal::compiler::Node"* %336, %"class.v8::internal::compiler::Node"* %369
  %372 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %316, align 8
  %373 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %372, i64 0, i32 5
  %374 = load i32, i32* %373, align 4
  %375 = icmp sgt i32 %374, 1
  br i1 %375, label %377, label %376, !prof !4

376:                                              ; preds = %365
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

377:                                              ; preds = %365
  %378 = load i32, i32* %323, align 4
  %379 = and i32 %378, 251658240
  %380 = icmp eq i32 %379, 251658240
  br i1 %380, label %381, label %385

381:                                              ; preds = %377
  %382 = inttoptr i64 %328 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = add i64 %383, 16
  br label %385

385:                                              ; preds = %381, %377
  %386 = phi i64 [ %384, %381 ], [ %328, %377 ]
  %387 = inttoptr i64 %386 to %"class.v8::internal::compiler::Node"**
  %388 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %387, i64 1
  %389 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %388, align 8
  %390 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %389, i64 0, i32 3
  %391 = load i32, i32* %390, align 4
  %392 = and i32 %391, 16777215
  %393 = zext i32 %392 to i64
  %394 = load i64, i64* %344, align 8
  %395 = sub i64 %394, %366
  %396 = ashr exact i64 %395, 3
  %397 = icmp ugt i64 %396, %393
  %398 = inttoptr i64 %366 to %"class.v8::internal::compiler::Node"**
  br i1 %397, label %411, label %399

399:                                              ; preds = %385
  %400 = add nuw nsw i32 %392, 1
  %401 = zext i32 %400 to i64
  %402 = icmp ult i64 %396, %401
  br i1 %402, label %403, label %407

403:                                              ; preds = %399
  %404 = sub nsw i64 %401, %396
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %342, i64 %404) #8
  %405 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %337, i64 0, i32 0, i32 0, i32 0, i32 0
  %406 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %405, align 8
  br label %411

407:                                              ; preds = %399
  %408 = icmp ugt i64 %396, %401
  br i1 %408, label %409, label %411

409:                                              ; preds = %407
  %410 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %398, i64 %401
  store %"class.v8::internal::compiler::Node"** %410, %"class.v8::internal::compiler::Node"*** %343, align 8
  br label %411

411:                                              ; preds = %409, %407, %403, %385
  %412 = phi %"class.v8::internal::compiler::Node"** [ %398, %409 ], [ %398, %407 ], [ %406, %403 ], [ %398, %385 ]
  %413 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %412, i64 %393
  %414 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %413, align 8
  %415 = icmp eq %"class.v8::internal::compiler::Node"* %414, null
  %416 = select i1 %415, %"class.v8::internal::compiler::Node"* %389, %"class.v8::internal::compiler::Node"* %414
  %417 = call %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %371) #8
  %418 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %417, null
  br i1 %418, label %476, label %419

419:                                              ; preds = %411
  %420 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %417, i64 0, i32 1
  %421 = load i8, i8* %420, align 8, !range !2
  %422 = icmp eq i8 %421, 0
  br i1 %422, label %423, label %476

423:                                              ; preds = %419
  %424 = call dereferenceable(56) %"struct.v8::internal::compiler::FieldAccess"* @_ZN2v88internal8compiler13FieldAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #8
  %425 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %424, i64 0, i32 2
  %426 = load i32, i32* %425, align 4
  %427 = and i32 %426, 3
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %430, label %429, !prof !4

429:                                              ; preds = %423
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0)) #9
  unreachable

430:                                              ; preds = %423
  %431 = load i8, i8* %420, align 8, !range !2
  %432 = icmp eq i8 %431, 0
  br i1 %432, label %434, label %433, !prof !4

433:                                              ; preds = %430
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0)) #9
  unreachable

434:                                              ; preds = %430
  %435 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %417, i64 0, i32 3, i32 0
  %436 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %417, i64 0, i32 3, i32 0, i32 0, i32 1
  %437 = bitcast %"class.v8::internal::compiler::Variable"** %436 to i64*
  %438 = load i64, i64* %437, align 8
  %439 = bitcast %"class.std::__1::vector.1307"* %435 to i64*
  %440 = load i64, i64* %439, align 8
  %441 = sub i64 %438, %440
  %442 = trunc i64 %441 to i32
  %443 = and i32 %442, -4
  %444 = icmp sgt i32 %443, %426
  br i1 %444, label %445, label %476

445:                                              ; preds = %434
  %446 = sdiv i32 %426, 4
  %447 = sext i32 %446 to i64
  %448 = ashr exact i64 %441, 2
  %449 = icmp ugt i64 %448, %447
  br i1 %449, label %452, label %450

450:                                              ; preds = %445
  %451 = bitcast %"class.std::__1::vector.1307"* %435 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %451) #9
  unreachable

452:                                              ; preds = %445
  %453 = inttoptr i64 %440 to %"class.v8::internal::compiler::Variable"*
  %454 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %453, i64 %447, i32 0
  %455 = load i32, i32* %454, align 4
  %456 = icmp eq i32 %455, -1
  br i1 %456, label %457, label %458, !prof !5

457:                                              ; preds = %452
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

458:                                              ; preds = %452
  %459 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0
  call void @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3SetES3_S5_(%"class.v8::internal::compiler::PersistentMap"* %459, i32 %455, %"class.v8::internal::compiler::Node"* %416) #8
  %460 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %22, align 8
  %461 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %460, i64 0, i32 4
  %462 = bitcast %"class.v8::internal::compiler::JSGraph"** %461 to %"class.v8::internal::compiler::MachineGraph"**
  %463 = load %"class.v8::internal::compiler::MachineGraph"*, %"class.v8::internal::compiler::MachineGraph"** %462, align 8
  %464 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %463, i64 0, i32 4
  %465 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %464, align 8
  %466 = icmp eq %"class.v8::internal::compiler::Node"* %465, null
  br i1 %466, label %467, label %474

467:                                              ; preds = %458
  %468 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %463, i64 0, i32 0
  %469 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %468, align 8
  %470 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %463, i64 0, i32 1
  %471 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %470, align 8
  %472 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %471) #8
  %473 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %469, %"class.v8::internal::compiler::Operator"* %472, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #8
  store %"class.v8::internal::compiler::Node"* %473, %"class.v8::internal::compiler::Node"** %464, align 8
  br label %474

474:                                              ; preds = %467, %458
  %475 = phi %"class.v8::internal::compiler::Node"* [ %473, %467 ], [ %465, %458 ]
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope14SetReplacementEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %475) #8
  br label %2635

476:                                              ; preds = %434, %419, %411
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %371) #8
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %416) #8
  br label %2635

477:                                              ; preds = %3
  %478 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 0, i32 0
  %479 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %478, align 8
  %480 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %479, i64 0, i32 0
  %481 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %480, align 8
  %482 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %481, i64 0, i32 5
  %483 = load i32, i32* %482, align 4
  %484 = icmp sgt i32 %483, 0
  br i1 %484, label %486, label %485, !prof !4

485:                                              ; preds = %477
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

486:                                              ; preds = %477
  %487 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %479, i64 0, i32 3
  %488 = load i32, i32* %487, align 4
  %489 = and i32 %488, 251658240
  %490 = icmp eq i32 %489, 251658240
  %491 = ptrtoint %"class.v8::internal::compiler::Node"* %479 to i64
  %492 = add i64 %491, 32
  br i1 %490, label %493, label %497

493:                                              ; preds = %486
  %494 = inttoptr i64 %492 to i64*
  %495 = load i64, i64* %494, align 8
  %496 = add i64 %495, 16
  br label %497

497:                                              ; preds = %493, %486
  %498 = phi i64 [ %496, %493 ], [ %492, %486 ]
  %499 = inttoptr i64 %498 to %"class.v8::internal::compiler::Node"**
  %500 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %499, align 8
  %501 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1
  %502 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %500, i64 0, i32 3
  %503 = load i32, i32* %502, align 4
  %504 = and i32 %503, 16777215
  %505 = zext i32 %504 to i64
  %506 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %501, i64 0, i32 0, i32 0
  %507 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %508 = bitcast %"class.v8::internal::compiler::Node"*** %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = bitcast %"class.v8::internal::compiler::Sidetable"* %501 to i64*
  %511 = load i64, i64* %510, align 8
  %512 = sub i64 %509, %511
  %513 = ashr exact i64 %512, 3
  %514 = icmp ugt i64 %513, %505
  %515 = inttoptr i64 %511 to %"class.v8::internal::compiler::Node"**
  br i1 %514, label %529, label %516

516:                                              ; preds = %497
  %517 = add nuw nsw i32 %504, 1
  %518 = zext i32 %517 to i64
  %519 = icmp ult i64 %513, %518
  br i1 %519, label %520, label %525

520:                                              ; preds = %516
  %521 = sub nsw i64 %518, %513
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %506, i64 %521) #8
  %522 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %501, i64 0, i32 0, i32 0, i32 0, i32 0
  %523 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %522, align 8
  %524 = ptrtoint %"class.v8::internal::compiler::Node"** %523 to i64
  br label %529

525:                                              ; preds = %516
  %526 = icmp ugt i64 %513, %518
  br i1 %526, label %527, label %529

527:                                              ; preds = %525
  %528 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %515, i64 %518
  store %"class.v8::internal::compiler::Node"** %528, %"class.v8::internal::compiler::Node"*** %507, align 8
  br label %529

529:                                              ; preds = %527, %525, %520, %497
  %530 = phi i64 [ %511, %527 ], [ %511, %525 ], [ %524, %520 ], [ %511, %497 ]
  %531 = phi %"class.v8::internal::compiler::Node"** [ %515, %527 ], [ %515, %525 ], [ %523, %520 ], [ %515, %497 ]
  %532 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %531, i64 %505
  %533 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %532, align 8
  %534 = icmp eq %"class.v8::internal::compiler::Node"* %533, null
  %535 = select i1 %534, %"class.v8::internal::compiler::Node"* %500, %"class.v8::internal::compiler::Node"* %533
  %536 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %480, align 8
  %537 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %536, i64 0, i32 5
  %538 = load i32, i32* %537, align 4
  %539 = icmp sgt i32 %538, 1
  br i1 %539, label %541, label %540, !prof !4

540:                                              ; preds = %529
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

541:                                              ; preds = %529
  %542 = load i32, i32* %487, align 4
  %543 = and i32 %542, 251658240
  %544 = icmp eq i32 %543, 251658240
  br i1 %544, label %545, label %549

545:                                              ; preds = %541
  %546 = inttoptr i64 %492 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = add i64 %547, 16
  br label %549

549:                                              ; preds = %545, %541
  %550 = phi i64 [ %548, %545 ], [ %492, %541 ]
  %551 = inttoptr i64 %550 to %"class.v8::internal::compiler::Node"**
  %552 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %551, i64 1
  %553 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %552, align 8
  %554 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %553, i64 0, i32 3
  %555 = load i32, i32* %554, align 4
  %556 = and i32 %555, 16777215
  %557 = zext i32 %556 to i64
  %558 = load i64, i64* %508, align 8
  %559 = sub i64 %558, %530
  %560 = ashr exact i64 %559, 3
  %561 = icmp ugt i64 %560, %557
  %562 = inttoptr i64 %530 to %"class.v8::internal::compiler::Node"**
  br i1 %561, label %576, label %563

563:                                              ; preds = %549
  %564 = add nuw nsw i32 %556, 1
  %565 = zext i32 %564 to i64
  %566 = icmp ult i64 %560, %565
  br i1 %566, label %567, label %572

567:                                              ; preds = %563
  %568 = sub nsw i64 %565, %560
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %506, i64 %568) #8
  %569 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %501, i64 0, i32 0, i32 0, i32 0, i32 0
  %570 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %569, align 8
  %571 = ptrtoint %"class.v8::internal::compiler::Node"** %570 to i64
  br label %576

572:                                              ; preds = %563
  %573 = icmp ugt i64 %560, %565
  br i1 %573, label %574, label %576

574:                                              ; preds = %572
  %575 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %562, i64 %565
  store %"class.v8::internal::compiler::Node"** %575, %"class.v8::internal::compiler::Node"*** %507, align 8
  br label %576

576:                                              ; preds = %574, %572, %567, %549
  %577 = phi i64 [ %530, %574 ], [ %530, %572 ], [ %571, %567 ], [ %530, %549 ]
  %578 = phi %"class.v8::internal::compiler::Node"** [ %562, %574 ], [ %562, %572 ], [ %570, %567 ], [ %562, %549 ]
  %579 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %578, i64 %557
  %580 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %579, align 8
  %581 = icmp eq %"class.v8::internal::compiler::Node"* %580, null
  %582 = select i1 %581, %"class.v8::internal::compiler::Node"* %553, %"class.v8::internal::compiler::Node"* %580
  %583 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %480, align 8
  %584 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %583, i64 0, i32 5
  %585 = load i32, i32* %584, align 4
  %586 = icmp sgt i32 %585, 2
  br i1 %586, label %588, label %587, !prof !4

587:                                              ; preds = %576
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

588:                                              ; preds = %576
  %589 = load i32, i32* %487, align 4
  %590 = and i32 %589, 251658240
  %591 = icmp eq i32 %590, 251658240
  br i1 %591, label %592, label %596

592:                                              ; preds = %588
  %593 = inttoptr i64 %492 to i64*
  %594 = load i64, i64* %593, align 8
  %595 = add i64 %594, 16
  br label %596

596:                                              ; preds = %592, %588
  %597 = phi i64 [ %595, %592 ], [ %492, %588 ]
  %598 = inttoptr i64 %597 to %"class.v8::internal::compiler::Node"**
  %599 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %598, i64 2
  %600 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %599, align 8
  %601 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %600, i64 0, i32 3
  %602 = load i32, i32* %601, align 4
  %603 = and i32 %602, 16777215
  %604 = zext i32 %603 to i64
  %605 = load i64, i64* %508, align 8
  %606 = sub i64 %605, %577
  %607 = ashr exact i64 %606, 3
  %608 = icmp ugt i64 %607, %604
  %609 = inttoptr i64 %577 to %"class.v8::internal::compiler::Node"**
  br i1 %608, label %622, label %610

610:                                              ; preds = %596
  %611 = add nuw nsw i32 %603, 1
  %612 = zext i32 %611 to i64
  %613 = icmp ult i64 %607, %612
  br i1 %613, label %614, label %618

614:                                              ; preds = %610
  %615 = sub nsw i64 %612, %607
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %506, i64 %615) #8
  %616 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %501, i64 0, i32 0, i32 0, i32 0, i32 0
  %617 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %616, align 8
  br label %622

618:                                              ; preds = %610
  %619 = icmp ugt i64 %607, %612
  br i1 %619, label %620, label %622

620:                                              ; preds = %618
  %621 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %609, i64 %612
  store %"class.v8::internal::compiler::Node"** %621, %"class.v8::internal::compiler::Node"*** %507, align 8
  br label %622

622:                                              ; preds = %620, %618, %614, %596
  %623 = phi %"class.v8::internal::compiler::Node"** [ %609, %620 ], [ %609, %618 ], [ %617, %614 ], [ %609, %596 ]
  %624 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %623, i64 %604
  %625 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %624, align 8
  %626 = icmp eq %"class.v8::internal::compiler::Node"* %625, null
  %627 = select i1 %626, %"class.v8::internal::compiler::Node"* %600, %"class.v8::internal::compiler::Node"* %625
  %628 = call %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %535) #8
  %629 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %628, null
  br i1 %629, label %692, label %630

630:                                              ; preds = %622
  %631 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %628, i64 0, i32 1
  %632 = load i8, i8* %631, align 8, !range !2
  %633 = icmp eq i8 %632, 0
  br i1 %633, label %634, label %692

634:                                              ; preds = %630
  %635 = getelementptr %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %582, i64 0, i32 1, i32 0
  %636 = load i64, i64* %635, align 8
  %637 = call fastcc i64 @_ZN2v88internal8compiler12_GLOBAL__N_122OffsetOfElementsAccessEPKNS1_8OperatorEPNS1_4NodeE(%"class.v8::internal::compiler::Operator"* %15, i64 %636) #8
  %638 = trunc i64 %637 to i8
  %639 = lshr i64 %637, 32
  %640 = trunc i64 %639 to i32
  %641 = icmp eq i8 %638, 0
  br i1 %641, label %692, label %642, !prof !5

642:                                              ; preds = %634
  %643 = and i32 %640, 3
  %644 = icmp eq i32 %643, 0
  br i1 %644, label %646, label %645, !prof !4

645:                                              ; preds = %642
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0)) #9
  unreachable

646:                                              ; preds = %642
  %647 = load i8, i8* %631, align 8, !range !2
  %648 = icmp eq i8 %647, 0
  br i1 %648, label %650, label %649, !prof !4

649:                                              ; preds = %646
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0)) #9
  unreachable

650:                                              ; preds = %646
  %651 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %628, i64 0, i32 3, i32 0
  %652 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %628, i64 0, i32 3, i32 0, i32 0, i32 1
  %653 = bitcast %"class.v8::internal::compiler::Variable"** %652 to i64*
  %654 = load i64, i64* %653, align 8
  %655 = bitcast %"class.std::__1::vector.1307"* %651 to i64*
  %656 = load i64, i64* %655, align 8
  %657 = sub i64 %654, %656
  %658 = trunc i64 %657 to i32
  %659 = and i32 %658, -4
  %660 = icmp sgt i32 %659, %640
  br i1 %660, label %661, label %692

661:                                              ; preds = %650
  %662 = sdiv i32 %640, 4
  %663 = sext i32 %662 to i64
  %664 = ashr exact i64 %657, 2
  %665 = icmp ugt i64 %664, %663
  br i1 %665, label %668, label %666

666:                                              ; preds = %661
  %667 = bitcast %"class.std::__1::vector.1307"* %651 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %667) #9
  unreachable

668:                                              ; preds = %661
  %669 = inttoptr i64 %656 to %"class.v8::internal::compiler::Variable"*
  %670 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %669, i64 %663, i32 0
  %671 = load i32, i32* %670, align 4
  %672 = icmp eq i32 %671, -1
  br i1 %672, label %673, label %674, !prof !5

673:                                              ; preds = %668
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

674:                                              ; preds = %668
  %675 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0
  call void @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3SetES3_S5_(%"class.v8::internal::compiler::PersistentMap"* %675, i32 %671, %"class.v8::internal::compiler::Node"* %627) #8
  %676 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %22, align 8
  %677 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %676, i64 0, i32 4
  %678 = bitcast %"class.v8::internal::compiler::JSGraph"** %677 to %"class.v8::internal::compiler::MachineGraph"**
  %679 = load %"class.v8::internal::compiler::MachineGraph"*, %"class.v8::internal::compiler::MachineGraph"** %678, align 8
  %680 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %679, i64 0, i32 4
  %681 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %680, align 8
  %682 = icmp eq %"class.v8::internal::compiler::Node"* %681, null
  br i1 %682, label %683, label %690

683:                                              ; preds = %674
  %684 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %679, i64 0, i32 0
  %685 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %684, align 8
  %686 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %679, i64 0, i32 1
  %687 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %686, align 8
  %688 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %687) #8
  %689 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %685, %"class.v8::internal::compiler::Operator"* %688, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #8
  store %"class.v8::internal::compiler::Node"* %689, %"class.v8::internal::compiler::Node"** %680, align 8
  br label %690

690:                                              ; preds = %683, %674
  %691 = phi %"class.v8::internal::compiler::Node"* [ %689, %683 ], [ %681, %674 ]
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope14SetReplacementEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %691) #8
  br label %2635

692:                                              ; preds = %650, %634, %630, %622
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %627) #8
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %535) #8
  br label %2635

693:                                              ; preds = %3
  %694 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 0, i32 0
  %695 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %694, align 8
  %696 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %695, i64 0, i32 0
  %697 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %696, align 8
  %698 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %697, i64 0, i32 5
  %699 = load i32, i32* %698, align 4
  %700 = icmp sgt i32 %699, 0
  br i1 %700, label %702, label %701, !prof !4

701:                                              ; preds = %693
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

702:                                              ; preds = %693
  %703 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %695, i64 0, i32 3
  %704 = load i32, i32* %703, align 4
  %705 = and i32 %704, 251658240
  %706 = icmp eq i32 %705, 251658240
  %707 = ptrtoint %"class.v8::internal::compiler::Node"* %695 to i64
  %708 = add i64 %707, 32
  br i1 %706, label %709, label %713

709:                                              ; preds = %702
  %710 = inttoptr i64 %708 to i64*
  %711 = load i64, i64* %710, align 8
  %712 = add i64 %711, 16
  br label %713

713:                                              ; preds = %709, %702
  %714 = phi i64 [ %712, %709 ], [ %708, %702 ]
  %715 = inttoptr i64 %714 to %"class.v8::internal::compiler::Node"**
  %716 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %715, align 8
  %717 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1
  %718 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %716, i64 0, i32 3
  %719 = load i32, i32* %718, align 4
  %720 = and i32 %719, 16777215
  %721 = zext i32 %720 to i64
  %722 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %717, i64 0, i32 0, i32 0
  %723 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %724 = bitcast %"class.v8::internal::compiler::Node"*** %723 to i64*
  %725 = load i64, i64* %724, align 8
  %726 = bitcast %"class.v8::internal::compiler::Sidetable"* %717 to i64*
  %727 = load i64, i64* %726, align 8
  %728 = sub i64 %725, %727
  %729 = ashr exact i64 %728, 3
  %730 = icmp ugt i64 %729, %721
  %731 = inttoptr i64 %727 to %"class.v8::internal::compiler::Node"**
  br i1 %730, label %744, label %732

732:                                              ; preds = %713
  %733 = add nuw nsw i32 %720, 1
  %734 = zext i32 %733 to i64
  %735 = icmp ult i64 %729, %734
  br i1 %735, label %736, label %740

736:                                              ; preds = %732
  %737 = sub nsw i64 %734, %729
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %722, i64 %737) #8
  %738 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %717, i64 0, i32 0, i32 0, i32 0, i32 0
  %739 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %738, align 8
  br label %744

740:                                              ; preds = %732
  %741 = icmp ugt i64 %729, %734
  br i1 %741, label %742, label %744

742:                                              ; preds = %740
  %743 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %731, i64 %734
  store %"class.v8::internal::compiler::Node"** %743, %"class.v8::internal::compiler::Node"*** %723, align 8
  br label %744

744:                                              ; preds = %742, %740, %736, %713
  %745 = phi %"class.v8::internal::compiler::Node"** [ %731, %742 ], [ %731, %740 ], [ %739, %736 ], [ %731, %713 ]
  %746 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %745, i64 %721
  %747 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %746, align 8
  %748 = icmp eq %"class.v8::internal::compiler::Node"* %747, null
  %749 = select i1 %748, %"class.v8::internal::compiler::Node"* %716, %"class.v8::internal::compiler::Node"* %747
  %750 = call %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %749) #8
  %751 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %750, null
  br i1 %751, label %877, label %752

752:                                              ; preds = %744
  %753 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %750, i64 0, i32 1
  %754 = load i8, i8* %753, align 8, !range !2
  %755 = icmp eq i8 %754, 0
  br i1 %755, label %756, label %877

756:                                              ; preds = %752
  %757 = call dereferenceable(56) %"struct.v8::internal::compiler::FieldAccess"* @_ZN2v88internal8compiler13FieldAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #8
  %758 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %757, i64 0, i32 2
  %759 = load i32, i32* %758, align 4
  %760 = and i32 %759, 3
  %761 = icmp eq i32 %760, 0
  br i1 %761, label %763, label %762, !prof !4

762:                                              ; preds = %756
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0)) #9
  unreachable

763:                                              ; preds = %756
  %764 = load i8, i8* %753, align 8, !range !2
  %765 = icmp eq i8 %764, 0
  br i1 %765, label %767, label %766, !prof !4

766:                                              ; preds = %763
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0)) #9
  unreachable

767:                                              ; preds = %763
  %768 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %750, i64 0, i32 3, i32 0
  %769 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %750, i64 0, i32 3, i32 0, i32 0, i32 1
  %770 = bitcast %"class.v8::internal::compiler::Variable"** %769 to i64*
  %771 = load i64, i64* %770, align 8
  %772 = bitcast %"class.std::__1::vector.1307"* %768 to i64*
  %773 = load i64, i64* %772, align 8
  %774 = sub i64 %771, %773
  %775 = trunc i64 %774 to i32
  %776 = and i32 %775, -4
  %777 = icmp sgt i32 %776, %759
  br i1 %777, label %778, label %877

778:                                              ; preds = %767
  %779 = sdiv i32 %759, 4
  %780 = sext i32 %779 to i64
  %781 = ashr exact i64 %774, 2
  %782 = icmp ugt i64 %781, %780
  br i1 %782, label %785, label %783

783:                                              ; preds = %778
  %784 = bitcast %"class.std::__1::vector.1307"* %768 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %784) #9
  unreachable

785:                                              ; preds = %778
  %786 = inttoptr i64 %773 to %"class.v8::internal::compiler::Variable"*
  %787 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %786, i64 %780, i32 0
  %788 = load i32, i32* %787, align 4
  %789 = icmp eq i32 %788, -1
  br i1 %789, label %790, label %791, !prof !5

790:                                              ; preds = %785
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

791:                                              ; preds = %785
  %792 = call i64 @_ZN2v84base10hash_valueEj(i32 %788) #8
  %793 = trunc i64 %792 to i32
  %794 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %795 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %794, align 8
  %796 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %795, null
  br i1 %796, label %821, label %797

797:                                              ; preds = %791, %816
  %798 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %819, %816 ], [ %795, %791 ]
  %799 = phi i32 [ %810, %816 ], [ 0, %791 ]
  %800 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %798, i64 0, i32 2, i32 0
  %801 = load i32, i32* %800, align 4
  %802 = icmp eq i32 %801, %793
  br i1 %802, label %823, label %803

803:                                              ; preds = %797
  %804 = xor i32 %801, %793
  br label %805

805:                                              ; preds = %805, %803
  %806 = phi i32 [ %810, %805 ], [ %799, %803 ]
  %807 = lshr i32 -2147483648, %806
  %808 = and i32 %807, %804
  %809 = icmp eq i32 %808, 0
  %810 = add nsw i32 %806, 1
  br i1 %809, label %805, label %811

811:                                              ; preds = %805
  %812 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %798, i64 0, i32 1
  %813 = load i8, i8* %812, align 8
  %814 = sext i8 %813 to i32
  %815 = icmp slt i32 %806, %814
  br i1 %815, label %816, label %821

816:                                              ; preds = %811
  %817 = sext i32 %806 to i64
  %818 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %798, i64 0, i32 4, i64 %817
  %819 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %818, align 8
  %820 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %819, null
  br i1 %820, label %821, label %797

821:                                              ; preds = %816, %811, %791
  %822 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %866

823:                                              ; preds = %797
  %824 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %798, i64 0, i32 3
  %825 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %824, align 8
  %826 = icmp eq %"class.v8::internal::ZoneMap"* %825, null
  br i1 %826, label %858, label %827

827:                                              ; preds = %823
  %828 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %825, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %829 = bitcast %"class.std::__1::__tree_end_node"* %828 to %"class.std::__1::__tree_node"**
  %830 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %829, align 8
  %831 = icmp eq %"class.std::__1::__tree_node"* %830, null
  br i1 %831, label %853, label %832

832:                                              ; preds = %827, %832
  %833 = phi %"class.std::__1::__tree_end_node"* [ %843, %832 ], [ %828, %827 ]
  %834 = phi %"class.std::__1::__tree_node"* [ %844, %832 ], [ %830, %827 ]
  %835 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %834, i64 0, i32 1, i32 0, i32 0, i32 0
  %836 = load i32, i32* %835, align 4
  %837 = icmp slt i32 %836, %788
  %838 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %834, i64 0, i32 0, i32 1
  %839 = bitcast %"class.std::__1::__tree_node_base"** %838 to %"class.std::__1::__tree_node"**
  %840 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %834, i64 0, i32 0, i32 0
  %841 = bitcast %"class.std::__1::__tree_node"* %834 to %"class.std::__1::__tree_node"**
  %842 = select i1 %837, %"class.std::__1::__tree_node"** %839, %"class.std::__1::__tree_node"** %841
  %843 = select i1 %837, %"class.std::__1::__tree_end_node"* %833, %"class.std::__1::__tree_end_node"* %840
  %844 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %842, align 8
  %845 = icmp eq %"class.std::__1::__tree_node"* %844, null
  br i1 %845, label %846, label %832

846:                                              ; preds = %832
  %847 = icmp eq %"class.std::__1::__tree_end_node"* %843, %828
  br i1 %847, label %853, label %848

848:                                              ; preds = %846
  %849 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %843, i64 4
  %850 = bitcast %"class.std::__1::__tree_end_node"* %849 to i32*
  %851 = load i32, i32* %850, align 4
  %852 = icmp sgt i32 %851, %788
  br i1 %852, label %853, label %855

853:                                              ; preds = %848, %846, %827
  %854 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %866

855:                                              ; preds = %848
  %856 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %843, i64 5
  %857 = bitcast %"class.std::__1::__tree_end_node"* %856 to %"class.v8::internal::compiler::Node"**
  br label %866

858:                                              ; preds = %823
  %859 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %798, i64 0, i32 0, i32 0, i32 0, i32 0
  %860 = load i32, i32* %859, align 4
  %861 = icmp eq i32 %860, %788
  br i1 %861, label %862, label %864

862:                                              ; preds = %858
  %863 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %798, i64 0, i32 0, i32 0, i32 1
  br label %866

864:                                              ; preds = %858
  %865 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %866

866:                                              ; preds = %821, %853, %855, %862, %864
  %867 = phi %"class.v8::internal::compiler::Node"** [ %863, %862 ], [ %865, %864 ], [ %822, %821 ], [ %854, %853 ], [ %857, %855 ]
  %868 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %867, align 8
  %869 = icmp eq %"class.v8::internal::compiler::Node"* %868, null
  br i1 %869, label %876, label %870

870:                                              ; preds = %866
  %871 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %868, i64 0, i32 0
  %872 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %871, align 8
  %873 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %872, i64 0, i32 2
  %874 = load i16, i16* %873, align 8
  %875 = icmp eq i16 %874, 62
  br i1 %875, label %877, label %876

876:                                              ; preds = %870, %866
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope14SetReplacementEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %868) #8
  br label %2635

877:                                              ; preds = %870, %767, %752, %744
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %749) #8
  br label %2635

878:                                              ; preds = %3
  %879 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 0, i32 0
  %880 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %879, align 8
  %881 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %880, i64 0, i32 0
  %882 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %881, align 8
  %883 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %882, i64 0, i32 5
  %884 = load i32, i32* %883, align 4
  %885 = icmp sgt i32 %884, 0
  br i1 %885, label %887, label %886, !prof !4

886:                                              ; preds = %878
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

887:                                              ; preds = %878
  %888 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %880, i64 0, i32 3
  %889 = load i32, i32* %888, align 4
  %890 = and i32 %889, 251658240
  %891 = icmp eq i32 %890, 251658240
  %892 = ptrtoint %"class.v8::internal::compiler::Node"* %880 to i64
  %893 = add i64 %892, 32
  br i1 %891, label %894, label %898

894:                                              ; preds = %887
  %895 = inttoptr i64 %893 to i64*
  %896 = load i64, i64* %895, align 8
  %897 = add i64 %896, 16
  br label %898

898:                                              ; preds = %894, %887
  %899 = phi i64 [ %897, %894 ], [ %893, %887 ]
  %900 = inttoptr i64 %899 to %"class.v8::internal::compiler::Node"**
  %901 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %900, align 8
  %902 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1
  %903 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %901, i64 0, i32 3
  %904 = load i32, i32* %903, align 4
  %905 = and i32 %904, 16777215
  %906 = zext i32 %905 to i64
  %907 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %902, i64 0, i32 0, i32 0
  %908 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %909 = bitcast %"class.v8::internal::compiler::Node"*** %908 to i64*
  %910 = load i64, i64* %909, align 8
  %911 = bitcast %"class.v8::internal::compiler::Sidetable"* %902 to i64*
  %912 = load i64, i64* %911, align 8
  %913 = sub i64 %910, %912
  %914 = ashr exact i64 %913, 3
  %915 = icmp ugt i64 %914, %906
  %916 = inttoptr i64 %912 to %"class.v8::internal::compiler::Node"**
  br i1 %915, label %930, label %917

917:                                              ; preds = %898
  %918 = add nuw nsw i32 %905, 1
  %919 = zext i32 %918 to i64
  %920 = icmp ult i64 %914, %919
  br i1 %920, label %921, label %926

921:                                              ; preds = %917
  %922 = sub nsw i64 %919, %914
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %907, i64 %922) #8
  %923 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %902, i64 0, i32 0, i32 0, i32 0, i32 0
  %924 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %923, align 8
  %925 = ptrtoint %"class.v8::internal::compiler::Node"** %924 to i64
  br label %930

926:                                              ; preds = %917
  %927 = icmp ugt i64 %914, %919
  br i1 %927, label %928, label %930

928:                                              ; preds = %926
  %929 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %916, i64 %919
  store %"class.v8::internal::compiler::Node"** %929, %"class.v8::internal::compiler::Node"*** %908, align 8
  br label %930

930:                                              ; preds = %928, %926, %921, %898
  %931 = phi i64 [ %912, %928 ], [ %912, %926 ], [ %925, %921 ], [ %912, %898 ]
  %932 = phi %"class.v8::internal::compiler::Node"** [ %916, %928 ], [ %916, %926 ], [ %924, %921 ], [ %916, %898 ]
  %933 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %932, i64 %906
  %934 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %933, align 8
  %935 = icmp eq %"class.v8::internal::compiler::Node"* %934, null
  %936 = select i1 %935, %"class.v8::internal::compiler::Node"* %901, %"class.v8::internal::compiler::Node"* %934
  %937 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %881, align 8
  %938 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %937, i64 0, i32 5
  %939 = load i32, i32* %938, align 4
  %940 = icmp sgt i32 %939, 1
  br i1 %940, label %942, label %941, !prof !4

941:                                              ; preds = %930
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

942:                                              ; preds = %930
  %943 = load i32, i32* %888, align 4
  %944 = and i32 %943, 251658240
  %945 = icmp eq i32 %944, 251658240
  br i1 %945, label %946, label %950

946:                                              ; preds = %942
  %947 = inttoptr i64 %893 to i64*
  %948 = load i64, i64* %947, align 8
  %949 = add i64 %948, 16
  br label %950

950:                                              ; preds = %946, %942
  %951 = phi i64 [ %949, %946 ], [ %893, %942 ]
  %952 = inttoptr i64 %951 to %"class.v8::internal::compiler::Node"**
  %953 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %952, i64 1
  %954 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %953, align 8
  %955 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %954, i64 0, i32 3
  %956 = load i32, i32* %955, align 4
  %957 = and i32 %956, 16777215
  %958 = zext i32 %957 to i64
  %959 = load i64, i64* %909, align 8
  %960 = sub i64 %959, %931
  %961 = ashr exact i64 %960, 3
  %962 = icmp ugt i64 %961, %958
  %963 = inttoptr i64 %931 to %"class.v8::internal::compiler::Node"**
  br i1 %962, label %976, label %964

964:                                              ; preds = %950
  %965 = add nuw nsw i32 %957, 1
  %966 = zext i32 %965 to i64
  %967 = icmp ult i64 %961, %966
  br i1 %967, label %968, label %972

968:                                              ; preds = %964
  %969 = sub nsw i64 %966, %961
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %907, i64 %969) #8
  %970 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %902, i64 0, i32 0, i32 0, i32 0, i32 0
  %971 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %970, align 8
  br label %976

972:                                              ; preds = %964
  %973 = icmp ugt i64 %961, %966
  br i1 %973, label %974, label %976

974:                                              ; preds = %972
  %975 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %963, i64 %966
  store %"class.v8::internal::compiler::Node"** %975, %"class.v8::internal::compiler::Node"*** %908, align 8
  br label %976

976:                                              ; preds = %974, %972, %968, %950
  %977 = phi %"class.v8::internal::compiler::Node"** [ %963, %974 ], [ %963, %972 ], [ %971, %968 ], [ %963, %950 ]
  %978 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %977, i64 %958
  %979 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %978, align 8
  %980 = icmp eq %"class.v8::internal::compiler::Node"* %979, null
  %981 = select i1 %980, %"class.v8::internal::compiler::Node"* %954, %"class.v8::internal::compiler::Node"* %979
  %982 = call %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %936) #8
  %983 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %982, null
  br i1 %983, label %1555, label %984

984:                                              ; preds = %976
  %985 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %982, i64 0, i32 1
  %986 = load i8, i8* %985, align 8, !range !2
  %987 = icmp eq i8 %986, 0
  br i1 %987, label %988, label %1555

988:                                              ; preds = %984
  %989 = getelementptr %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %981, i64 0, i32 1, i32 0
  %990 = load i64, i64* %989, align 8
  %991 = call fastcc i64 @_ZN2v88internal8compiler12_GLOBAL__N_122OffsetOfElementsAccessEPKNS1_8OperatorEPNS1_4NodeE(%"class.v8::internal::compiler::Operator"* %15, i64 %990) #8
  %992 = trunc i64 %991 to i8
  %993 = lshr i64 %991, 32
  %994 = trunc i64 %993 to i32
  %995 = icmp eq i8 %992, 0
  br i1 %995, label %1114, label %996, !prof !5

996:                                              ; preds = %988
  %997 = and i32 %994, 3
  %998 = icmp eq i32 %997, 0
  br i1 %998, label %1000, label %999, !prof !4

999:                                              ; preds = %996
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0)) #9
  unreachable

1000:                                             ; preds = %996
  %1001 = load i8, i8* %985, align 8, !range !2
  %1002 = icmp eq i8 %1001, 0
  br i1 %1002, label %1004, label %1003, !prof !4

1003:                                             ; preds = %1000
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0)) #9
  unreachable

1004:                                             ; preds = %1000
  %1005 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %982, i64 0, i32 3, i32 0
  %1006 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %982, i64 0, i32 3, i32 0, i32 0, i32 1
  %1007 = bitcast %"class.v8::internal::compiler::Variable"** %1006 to i64*
  %1008 = load i64, i64* %1007, align 8
  %1009 = bitcast %"class.std::__1::vector.1307"* %1005 to i64*
  %1010 = load i64, i64* %1009, align 8
  %1011 = sub i64 %1008, %1010
  %1012 = trunc i64 %1011 to i32
  %1013 = and i32 %1012, -4
  %1014 = icmp sgt i32 %1013, %994
  br i1 %1014, label %1015, label %1114

1015:                                             ; preds = %1004
  %1016 = sdiv i32 %994, 4
  %1017 = sext i32 %1016 to i64
  %1018 = ashr exact i64 %1011, 2
  %1019 = icmp ugt i64 %1018, %1017
  br i1 %1019, label %1022, label %1020

1020:                                             ; preds = %1015
  %1021 = bitcast %"class.std::__1::vector.1307"* %1005 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %1021) #9
  unreachable

1022:                                             ; preds = %1015
  %1023 = inttoptr i64 %1010 to %"class.v8::internal::compiler::Variable"*
  %1024 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %1023, i64 %1017, i32 0
  %1025 = load i32, i32* %1024, align 4
  %1026 = icmp eq i32 %1025, -1
  br i1 %1026, label %1027, label %1028, !prof !5

1027:                                             ; preds = %1022
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

1028:                                             ; preds = %1022
  %1029 = call i64 @_ZN2v84base10hash_valueEj(i32 %1025) #8
  %1030 = trunc i64 %1029 to i32
  %1031 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %1032 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %1031, align 8
  %1033 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1032, null
  br i1 %1033, label %1058, label %1034

1034:                                             ; preds = %1028, %1053
  %1035 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %1056, %1053 ], [ %1032, %1028 ]
  %1036 = phi i32 [ %1047, %1053 ], [ 0, %1028 ]
  %1037 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1035, i64 0, i32 2, i32 0
  %1038 = load i32, i32* %1037, align 4
  %1039 = icmp eq i32 %1038, %1030
  br i1 %1039, label %1060, label %1040

1040:                                             ; preds = %1034
  %1041 = xor i32 %1038, %1030
  br label %1042

1042:                                             ; preds = %1042, %1040
  %1043 = phi i32 [ %1047, %1042 ], [ %1036, %1040 ]
  %1044 = lshr i32 -2147483648, %1043
  %1045 = and i32 %1044, %1041
  %1046 = icmp eq i32 %1045, 0
  %1047 = add nsw i32 %1043, 1
  br i1 %1046, label %1042, label %1048

1048:                                             ; preds = %1042
  %1049 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1035, i64 0, i32 1
  %1050 = load i8, i8* %1049, align 8
  %1051 = sext i8 %1050 to i32
  %1052 = icmp slt i32 %1043, %1051
  br i1 %1052, label %1053, label %1058

1053:                                             ; preds = %1048
  %1054 = sext i32 %1043 to i64
  %1055 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1035, i64 0, i32 4, i64 %1054
  %1056 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %1055, align 8
  %1057 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1056, null
  br i1 %1057, label %1058, label %1034

1058:                                             ; preds = %1053, %1048, %1028
  %1059 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %1103

1060:                                             ; preds = %1034
  %1061 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1035, i64 0, i32 3
  %1062 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1061, align 8
  %1063 = icmp eq %"class.v8::internal::ZoneMap"* %1062, null
  br i1 %1063, label %1095, label %1064

1064:                                             ; preds = %1060
  %1065 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %1062, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1066 = bitcast %"class.std::__1::__tree_end_node"* %1065 to %"class.std::__1::__tree_node"**
  %1067 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1066, align 8
  %1068 = icmp eq %"class.std::__1::__tree_node"* %1067, null
  br i1 %1068, label %1090, label %1069

1069:                                             ; preds = %1064, %1069
  %1070 = phi %"class.std::__1::__tree_end_node"* [ %1080, %1069 ], [ %1065, %1064 ]
  %1071 = phi %"class.std::__1::__tree_node"* [ %1081, %1069 ], [ %1067, %1064 ]
  %1072 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1071, i64 0, i32 1, i32 0, i32 0, i32 0
  %1073 = load i32, i32* %1072, align 4
  %1074 = icmp slt i32 %1073, %1025
  %1075 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1071, i64 0, i32 0, i32 1
  %1076 = bitcast %"class.std::__1::__tree_node_base"** %1075 to %"class.std::__1::__tree_node"**
  %1077 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1071, i64 0, i32 0, i32 0
  %1078 = bitcast %"class.std::__1::__tree_node"* %1071 to %"class.std::__1::__tree_node"**
  %1079 = select i1 %1074, %"class.std::__1::__tree_node"** %1076, %"class.std::__1::__tree_node"** %1078
  %1080 = select i1 %1074, %"class.std::__1::__tree_end_node"* %1070, %"class.std::__1::__tree_end_node"* %1077
  %1081 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1079, align 8
  %1082 = icmp eq %"class.std::__1::__tree_node"* %1081, null
  br i1 %1082, label %1083, label %1069

1083:                                             ; preds = %1069
  %1084 = icmp eq %"class.std::__1::__tree_end_node"* %1080, %1065
  br i1 %1084, label %1090, label %1085

1085:                                             ; preds = %1083
  %1086 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1080, i64 4
  %1087 = bitcast %"class.std::__1::__tree_end_node"* %1086 to i32*
  %1088 = load i32, i32* %1087, align 4
  %1089 = icmp sgt i32 %1088, %1025
  br i1 %1089, label %1090, label %1092

1090:                                             ; preds = %1085, %1083, %1064
  %1091 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %1103

1092:                                             ; preds = %1085
  %1093 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1080, i64 5
  %1094 = bitcast %"class.std::__1::__tree_end_node"* %1093 to %"class.v8::internal::compiler::Node"**
  br label %1103

1095:                                             ; preds = %1060
  %1096 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1035, i64 0, i32 0, i32 0, i32 0, i32 0
  %1097 = load i32, i32* %1096, align 4
  %1098 = icmp eq i32 %1097, %1025
  br i1 %1098, label %1099, label %1101

1099:                                             ; preds = %1095
  %1100 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1035, i64 0, i32 0, i32 0, i32 1
  br label %1103

1101:                                             ; preds = %1095
  %1102 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %1103

1103:                                             ; preds = %1058, %1090, %1092, %1099, %1101
  %1104 = phi %"class.v8::internal::compiler::Node"** [ %1100, %1099 ], [ %1102, %1101 ], [ %1059, %1058 ], [ %1091, %1090 ], [ %1094, %1092 ]
  %1105 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1104, align 8
  %1106 = icmp eq %"class.v8::internal::compiler::Node"* %1105, null
  br i1 %1106, label %1113, label %1107

1107:                                             ; preds = %1103
  %1108 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1105, i64 0, i32 0
  %1109 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1108, align 8
  %1110 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1109, i64 0, i32 2
  %1111 = load i16, i16* %1110, align 8
  %1112 = icmp eq i16 %1111, 62
  br i1 %1112, label %1114, label %1113

1113:                                             ; preds = %1107, %1103
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope14SetReplacementEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %1105) #8
  br label %2635

1114:                                             ; preds = %1107, %1004, %988
  %1115 = load i8, i8* %985, align 8
  %1116 = icmp eq i8 %1115, 0
  br i1 %1116, label %1117, label %1555

1117:                                             ; preds = %1114
  %1118 = call dereferenceable(24) %"struct.v8::internal::compiler::ElementAccess"* @_ZN2v88internal8compiler15ElementAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #8
  %1119 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %982, i64 0, i32 3, i32 0
  %1120 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %982, i64 0, i32 3, i32 0, i32 0, i32 1
  %1121 = bitcast %"class.v8::internal::compiler::Variable"** %1120 to i64*
  %1122 = load i64, i64* %1121, align 8
  %1123 = bitcast %"class.std::__1::vector.1307"* %1119 to i64*
  %1124 = load i64, i64* %1123, align 8
  %1125 = sub i64 %1122, %1124
  %1126 = trunc i64 %1125 to i32
  %1127 = and i32 %1126, -4
  %1128 = getelementptr inbounds %"struct.v8::internal::compiler::ElementAccess", %"struct.v8::internal::compiler::ElementAccess"* %1118, i64 0, i32 1
  %1129 = load i32, i32* %1128, align 4
  %1130 = getelementptr inbounds %"struct.v8::internal::compiler::ElementAccess", %"struct.v8::internal::compiler::ElementAccess"* %1118, i64 0, i32 3, i32 0
  %1131 = load i8, i8* %1130, align 1
  %1132 = add i8 %1131, -1
  %1133 = icmp ult i8 %1132, 14
  br i1 %1133, label %1135, label %1134

1134:                                             ; preds = %1117
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #9
  unreachable

1135:                                             ; preds = %1117
  %1136 = sub nsw i32 %1127, %1129
  %1137 = sext i8 %1132 to i64
  %1138 = getelementptr inbounds [14 x i32], [14 x i32]* @switch.table._ZN2v88internal8compiler12_GLOBAL__N_122OffsetOfElementsAccessEPKNS1_8OperatorEPNS1_4NodeE, i64 0, i64 %1137
  %1139 = load i32, i32* %1138, align 4
  %1140 = ashr i32 %1136, %1139
  %1141 = icmp eq i32 %1140, 1
  %1142 = bitcast %"class.v8::internal::compiler::Type"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1142) #8
  br i1 %1141, label %1143, label %1266

1143:                                             ; preds = %1135
  %1144 = and i32 %1129, 3
  %1145 = icmp eq i32 %1144, 0
  br i1 %1145, label %1147, label %1146, !prof !4

1146:                                             ; preds = %1143
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0)) #9
  unreachable

1147:                                             ; preds = %1143
  %1148 = load i8, i8* %985, align 8, !range !2
  %1149 = icmp eq i8 %1148, 0
  br i1 %1149, label %1151, label %1150, !prof !4

1150:                                             ; preds = %1147
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0)) #9
  unreachable

1151:                                             ; preds = %1147
  %1152 = icmp sgt i32 %1127, %1129
  br i1 %1152, label %1153, label %1262

1153:                                             ; preds = %1151
  %1154 = sdiv i32 %1129, 4
  %1155 = sext i32 %1154 to i64
  %1156 = ashr exact i64 %1125, 2
  %1157 = icmp ugt i64 %1156, %1155
  br i1 %1157, label %1160, label %1158

1158:                                             ; preds = %1153
  %1159 = bitcast %"class.std::__1::vector.1307"* %1119 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %1159) #9
  unreachable

1160:                                             ; preds = %1153
  %1161 = inttoptr i64 %1124 to %"class.v8::internal::compiler::Variable"*
  %1162 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %1161, i64 %1155, i32 0
  %1163 = load i32, i32* %1162, align 4
  %1164 = icmp eq i32 %1163, -1
  br i1 %1164, label %1165, label %1166, !prof !5

1165:                                             ; preds = %1160
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

1166:                                             ; preds = %1160
  %1167 = call i64 @_ZN2v84base10hash_valueEj(i32 %1163) #8
  %1168 = trunc i64 %1167 to i32
  %1169 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %1170 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %1169, align 8
  %1171 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1170, null
  br i1 %1171, label %1196, label %1172

1172:                                             ; preds = %1166, %1191
  %1173 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %1194, %1191 ], [ %1170, %1166 ]
  %1174 = phi i32 [ %1185, %1191 ], [ 0, %1166 ]
  %1175 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1173, i64 0, i32 2, i32 0
  %1176 = load i32, i32* %1175, align 4
  %1177 = icmp eq i32 %1176, %1168
  br i1 %1177, label %1198, label %1178

1178:                                             ; preds = %1172
  %1179 = xor i32 %1176, %1168
  br label %1180

1180:                                             ; preds = %1180, %1178
  %1181 = phi i32 [ %1185, %1180 ], [ %1174, %1178 ]
  %1182 = lshr i32 -2147483648, %1181
  %1183 = and i32 %1182, %1179
  %1184 = icmp eq i32 %1183, 0
  %1185 = add nsw i32 %1181, 1
  br i1 %1184, label %1180, label %1186

1186:                                             ; preds = %1180
  %1187 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1173, i64 0, i32 1
  %1188 = load i8, i8* %1187, align 8
  %1189 = sext i8 %1188 to i32
  %1190 = icmp slt i32 %1181, %1189
  br i1 %1190, label %1191, label %1196

1191:                                             ; preds = %1186
  %1192 = sext i32 %1181 to i64
  %1193 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1173, i64 0, i32 4, i64 %1192
  %1194 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %1193, align 8
  %1195 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1194, null
  br i1 %1195, label %1196, label %1172

1196:                                             ; preds = %1191, %1186, %1166
  %1197 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %1241

1198:                                             ; preds = %1172
  %1199 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1173, i64 0, i32 3
  %1200 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1199, align 8
  %1201 = icmp eq %"class.v8::internal::ZoneMap"* %1200, null
  br i1 %1201, label %1233, label %1202

1202:                                             ; preds = %1198
  %1203 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %1200, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1204 = bitcast %"class.std::__1::__tree_end_node"* %1203 to %"class.std::__1::__tree_node"**
  %1205 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1204, align 8
  %1206 = icmp eq %"class.std::__1::__tree_node"* %1205, null
  br i1 %1206, label %1228, label %1207

1207:                                             ; preds = %1202, %1207
  %1208 = phi %"class.std::__1::__tree_end_node"* [ %1218, %1207 ], [ %1203, %1202 ]
  %1209 = phi %"class.std::__1::__tree_node"* [ %1219, %1207 ], [ %1205, %1202 ]
  %1210 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1209, i64 0, i32 1, i32 0, i32 0, i32 0
  %1211 = load i32, i32* %1210, align 4
  %1212 = icmp slt i32 %1211, %1163
  %1213 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1209, i64 0, i32 0, i32 1
  %1214 = bitcast %"class.std::__1::__tree_node_base"** %1213 to %"class.std::__1::__tree_node"**
  %1215 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1209, i64 0, i32 0, i32 0
  %1216 = bitcast %"class.std::__1::__tree_node"* %1209 to %"class.std::__1::__tree_node"**
  %1217 = select i1 %1212, %"class.std::__1::__tree_node"** %1214, %"class.std::__1::__tree_node"** %1216
  %1218 = select i1 %1212, %"class.std::__1::__tree_end_node"* %1208, %"class.std::__1::__tree_end_node"* %1215
  %1219 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1217, align 8
  %1220 = icmp eq %"class.std::__1::__tree_node"* %1219, null
  br i1 %1220, label %1221, label %1207

1221:                                             ; preds = %1207
  %1222 = icmp eq %"class.std::__1::__tree_end_node"* %1218, %1203
  br i1 %1222, label %1228, label %1223

1223:                                             ; preds = %1221
  %1224 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1218, i64 4
  %1225 = bitcast %"class.std::__1::__tree_end_node"* %1224 to i32*
  %1226 = load i32, i32* %1225, align 4
  %1227 = icmp sgt i32 %1226, %1163
  br i1 %1227, label %1228, label %1230

1228:                                             ; preds = %1223, %1221, %1202
  %1229 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %1241

1230:                                             ; preds = %1223
  %1231 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1218, i64 5
  %1232 = bitcast %"class.std::__1::__tree_end_node"* %1231 to %"class.v8::internal::compiler::Node"**
  br label %1241

1233:                                             ; preds = %1198
  %1234 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1173, i64 0, i32 0, i32 0, i32 0, i32 0
  %1235 = load i32, i32* %1234, align 4
  %1236 = icmp eq i32 %1235, %1163
  br i1 %1236, label %1237, label %1239

1237:                                             ; preds = %1233
  %1238 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1173, i64 0, i32 0, i32 0, i32 1
  br label %1241

1239:                                             ; preds = %1233
  %1240 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %1241

1241:                                             ; preds = %1196, %1228, %1230, %1237, %1239
  %1242 = phi %"class.v8::internal::compiler::Node"** [ %1238, %1237 ], [ %1240, %1239 ], [ %1197, %1196 ], [ %1229, %1228 ], [ %1232, %1230 ]
  %1243 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1242, align 8
  %1244 = icmp eq %"class.v8::internal::compiler::Node"* %1243, null
  br i1 %1244, label %1260, label %1245

1245:                                             ; preds = %1241
  %1246 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1243, i64 0, i32 0
  %1247 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1246, align 8
  %1248 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1247, i64 0, i32 2
  %1249 = load i16, i16* %1248, align 8
  %1250 = icmp eq i16 %1249, 62
  br i1 %1250, label %1262, label %1251

1251:                                             ; preds = %1245
  %1252 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1243, i64 0, i32 1, i32 0
  %1253 = load i64, i64* %1252, align 8
  %1254 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %8, i64 0, i32 0
  store i64 %1253, i64* %1254, align 8
  %1255 = getelementptr inbounds %"struct.v8::internal::compiler::ElementAccess", %"struct.v8::internal::compiler::ElementAccess"* %1118, i64 0, i32 2, i32 0
  %1256 = load i64, i64* %1255, align 8
  %1257 = icmp eq i64 %1253, %1256
  br i1 %1257, label %1260, label %1258

1258:                                             ; preds = %1251
  %1259 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %8, i64 %1256) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1142) #8
  br i1 %1259, label %1261, label %1263

1260:                                             ; preds = %1241, %1251
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1142) #8
  br label %1261

1261:                                             ; preds = %1260, %1258
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope14SetReplacementEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %1243) #8
  br label %2635

1262:                                             ; preds = %1151, %1245
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1142) #8
  br label %1263

1263:                                             ; preds = %1262, %1258
  %1264 = bitcast %"class.v8::internal::compiler::Type"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1264) #8
  %1265 = bitcast %"class.v8::internal::compiler::Type"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1265) #8
  br label %1552

1266:                                             ; preds = %1135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1142) #8
  %1267 = icmp eq i32 %1140, 2
  %1268 = bitcast %"class.v8::internal::compiler::Type"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1268) #8
  %1269 = bitcast %"class.v8::internal::compiler::Type"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1269) #8
  br i1 %1267, label %1270, label %1552

1270:                                             ; preds = %1266
  %1271 = load i32, i32* %1128, align 4
  %1272 = and i32 %1271, 3
  %1273 = icmp eq i32 %1272, 0
  br i1 %1273, label %1275, label %1274, !prof !4

1274:                                             ; preds = %1270
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0)) #9
  unreachable

1275:                                             ; preds = %1270
  %1276 = load i8, i8* %985, align 8, !range !2
  %1277 = icmp eq i8 %1276, 0
  br i1 %1277, label %1279, label %1278, !prof !4

1278:                                             ; preds = %1275
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0)) #9
  unreachable

1279:                                             ; preds = %1275
  %1280 = icmp sgt i32 %1127, %1271
  br i1 %1280, label %1281, label %1551

1281:                                             ; preds = %1279
  %1282 = sdiv i32 %1271, 4
  %1283 = sext i32 %1282 to i64
  %1284 = ashr exact i64 %1125, 2
  %1285 = icmp ugt i64 %1284, %1283
  br i1 %1285, label %1288, label %1286

1286:                                             ; preds = %1281
  %1287 = bitcast %"class.std::__1::vector.1307"* %1119 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %1287) #9
  unreachable

1288:                                             ; preds = %1281
  %1289 = inttoptr i64 %1124 to %"class.v8::internal::compiler::Variable"*
  %1290 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %1289, i64 %1283, i32 0
  %1291 = load i32, i32* %1290, align 4
  %1292 = icmp eq i32 %1291, -1
  br i1 %1292, label %1293, label %1294, !prof !5

1293:                                             ; preds = %1288
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

1294:                                             ; preds = %1288
  %1295 = call i64 @_ZN2v84base10hash_valueEj(i32 %1291) #8
  %1296 = trunc i64 %1295 to i32
  %1297 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %1298 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %1297, align 8
  %1299 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1298, null
  br i1 %1299, label %1324, label %1300

1300:                                             ; preds = %1294, %1319
  %1301 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %1322, %1319 ], [ %1298, %1294 ]
  %1302 = phi i32 [ %1313, %1319 ], [ 0, %1294 ]
  %1303 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1301, i64 0, i32 2, i32 0
  %1304 = load i32, i32* %1303, align 4
  %1305 = icmp eq i32 %1304, %1296
  br i1 %1305, label %1326, label %1306

1306:                                             ; preds = %1300
  %1307 = xor i32 %1304, %1296
  br label %1308

1308:                                             ; preds = %1308, %1306
  %1309 = phi i32 [ %1313, %1308 ], [ %1302, %1306 ]
  %1310 = lshr i32 -2147483648, %1309
  %1311 = and i32 %1310, %1307
  %1312 = icmp eq i32 %1311, 0
  %1313 = add nsw i32 %1309, 1
  br i1 %1312, label %1308, label %1314

1314:                                             ; preds = %1308
  %1315 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1301, i64 0, i32 1
  %1316 = load i8, i8* %1315, align 8
  %1317 = sext i8 %1316 to i32
  %1318 = icmp slt i32 %1309, %1317
  br i1 %1318, label %1319, label %1324

1319:                                             ; preds = %1314
  %1320 = sext i32 %1309 to i64
  %1321 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1301, i64 0, i32 4, i64 %1320
  %1322 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %1321, align 8
  %1323 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1322, null
  br i1 %1323, label %1324, label %1300

1324:                                             ; preds = %1319, %1314, %1294
  %1325 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %1369

1326:                                             ; preds = %1300
  %1327 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1301, i64 0, i32 3
  %1328 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1327, align 8
  %1329 = icmp eq %"class.v8::internal::ZoneMap"* %1328, null
  br i1 %1329, label %1361, label %1330

1330:                                             ; preds = %1326
  %1331 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %1328, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1332 = bitcast %"class.std::__1::__tree_end_node"* %1331 to %"class.std::__1::__tree_node"**
  %1333 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1332, align 8
  %1334 = icmp eq %"class.std::__1::__tree_node"* %1333, null
  br i1 %1334, label %1356, label %1335

1335:                                             ; preds = %1330, %1335
  %1336 = phi %"class.std::__1::__tree_end_node"* [ %1346, %1335 ], [ %1331, %1330 ]
  %1337 = phi %"class.std::__1::__tree_node"* [ %1347, %1335 ], [ %1333, %1330 ]
  %1338 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1337, i64 0, i32 1, i32 0, i32 0, i32 0
  %1339 = load i32, i32* %1338, align 4
  %1340 = icmp slt i32 %1339, %1291
  %1341 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1337, i64 0, i32 0, i32 1
  %1342 = bitcast %"class.std::__1::__tree_node_base"** %1341 to %"class.std::__1::__tree_node"**
  %1343 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1337, i64 0, i32 0, i32 0
  %1344 = bitcast %"class.std::__1::__tree_node"* %1337 to %"class.std::__1::__tree_node"**
  %1345 = select i1 %1340, %"class.std::__1::__tree_node"** %1342, %"class.std::__1::__tree_node"** %1344
  %1346 = select i1 %1340, %"class.std::__1::__tree_end_node"* %1336, %"class.std::__1::__tree_end_node"* %1343
  %1347 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1345, align 8
  %1348 = icmp eq %"class.std::__1::__tree_node"* %1347, null
  br i1 %1348, label %1349, label %1335

1349:                                             ; preds = %1335
  %1350 = icmp eq %"class.std::__1::__tree_end_node"* %1346, %1331
  br i1 %1350, label %1356, label %1351

1351:                                             ; preds = %1349
  %1352 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1346, i64 4
  %1353 = bitcast %"class.std::__1::__tree_end_node"* %1352 to i32*
  %1354 = load i32, i32* %1353, align 4
  %1355 = icmp sgt i32 %1354, %1291
  br i1 %1355, label %1356, label %1358

1356:                                             ; preds = %1351, %1349, %1330
  %1357 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %1369

1358:                                             ; preds = %1351
  %1359 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1346, i64 5
  %1360 = bitcast %"class.std::__1::__tree_end_node"* %1359 to %"class.v8::internal::compiler::Node"**
  br label %1369

1361:                                             ; preds = %1326
  %1362 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1301, i64 0, i32 0, i32 0, i32 0, i32 0
  %1363 = load i32, i32* %1362, align 4
  %1364 = icmp eq i32 %1363, %1291
  br i1 %1364, label %1365, label %1367

1365:                                             ; preds = %1361
  %1366 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1301, i64 0, i32 0, i32 0, i32 1
  br label %1369

1367:                                             ; preds = %1361
  %1368 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %1369

1369:                                             ; preds = %1324, %1356, %1358, %1365, %1367
  %1370 = phi %"class.v8::internal::compiler::Node"** [ %1366, %1365 ], [ %1368, %1367 ], [ %1325, %1324 ], [ %1357, %1356 ], [ %1360, %1358 ]
  %1371 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1370, align 8
  %1372 = icmp eq %"class.v8::internal::compiler::Node"* %1371, null
  br i1 %1372, label %1388, label %1373

1373:                                             ; preds = %1369
  %1374 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1371, i64 0, i32 0
  %1375 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1374, align 8
  %1376 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1375, i64 0, i32 2
  %1377 = load i16, i16* %1376, align 8
  %1378 = icmp eq i16 %1377, 62
  br i1 %1378, label %1550, label %1379

1379:                                             ; preds = %1373
  %1380 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1371, i64 0, i32 1, i32 0
  %1381 = load i64, i64* %1380, align 8
  %1382 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %9, i64 0, i32 0
  store i64 %1381, i64* %1382, align 8
  %1383 = getelementptr inbounds %"struct.v8::internal::compiler::ElementAccess", %"struct.v8::internal::compiler::ElementAccess"* %1118, i64 0, i32 2, i32 0
  %1384 = load i64, i64* %1383, align 8
  %1385 = icmp eq i64 %1381, %1384
  br i1 %1385, label %1388, label %1386

1386:                                             ; preds = %1379
  %1387 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %9, i64 %1384) #8
  br i1 %1387, label %1388, label %1549

1388:                                             ; preds = %1386, %1379, %1369
  %1389 = load i8, i8* %1130, align 1
  %1390 = add i8 %1389, -1
  %1391 = icmp ult i8 %1390, 14
  br i1 %1391, label %1393, label %1392

1392:                                             ; preds = %1388
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #9
  unreachable

1393:                                             ; preds = %1388
  %1394 = load i32, i32* %1128, align 4
  %1395 = sext i8 %1390 to i64
  %1396 = getelementptr inbounds [14 x i32], [14 x i32]* @switch.table._ZN2v88internal8compiler12_GLOBAL__N_122OffsetOfElementsAccessEPKNS1_8OperatorEPNS1_4NodeE, i64 0, i64 %1395
  %1397 = load i32, i32* %1396, align 4
  %1398 = shl i32 1, %1397
  %1399 = add nsw i32 %1398, %1394
  %1400 = and i32 %1399, 3
  %1401 = icmp eq i32 %1400, 0
  br i1 %1401, label %1403, label %1402, !prof !4

1402:                                             ; preds = %1393
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0)) #9
  unreachable

1403:                                             ; preds = %1393
  %1404 = load i8, i8* %985, align 8, !range !2
  %1405 = icmp eq i8 %1404, 0
  br i1 %1405, label %1407, label %1406, !prof !4

1406:                                             ; preds = %1403
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0)) #9
  unreachable

1407:                                             ; preds = %1403
  %1408 = load i64, i64* %1121, align 8
  %1409 = load i64, i64* %1123, align 8
  %1410 = sub i64 %1408, %1409
  %1411 = trunc i64 %1410 to i32
  %1412 = and i32 %1411, -4
  %1413 = icmp sgt i32 %1412, %1399
  br i1 %1413, label %1414, label %1548

1414:                                             ; preds = %1407
  %1415 = sdiv i32 %1399, 4
  %1416 = sext i32 %1415 to i64
  %1417 = ashr exact i64 %1410, 2
  %1418 = icmp ugt i64 %1417, %1416
  br i1 %1418, label %1421, label %1419

1419:                                             ; preds = %1414
  %1420 = bitcast %"class.std::__1::vector.1307"* %1119 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %1420) #9
  unreachable

1421:                                             ; preds = %1414
  %1422 = inttoptr i64 %1409 to %"class.v8::internal::compiler::Variable"*
  %1423 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %1422, i64 %1416, i32 0
  %1424 = load i32, i32* %1423, align 4
  %1425 = icmp eq i32 %1424, -1
  br i1 %1425, label %1426, label %1427, !prof !5

1426:                                             ; preds = %1421
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

1427:                                             ; preds = %1421
  %1428 = call i64 @_ZN2v84base10hash_valueEj(i32 %1424) #8
  %1429 = trunc i64 %1428 to i32
  %1430 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %1297, align 8
  %1431 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1430, null
  br i1 %1431, label %1456, label %1432

1432:                                             ; preds = %1427, %1451
  %1433 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %1454, %1451 ], [ %1430, %1427 ]
  %1434 = phi i32 [ %1445, %1451 ], [ 0, %1427 ]
  %1435 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1433, i64 0, i32 2, i32 0
  %1436 = load i32, i32* %1435, align 4
  %1437 = icmp eq i32 %1436, %1429
  br i1 %1437, label %1458, label %1438

1438:                                             ; preds = %1432
  %1439 = xor i32 %1436, %1429
  br label %1440

1440:                                             ; preds = %1440, %1438
  %1441 = phi i32 [ %1445, %1440 ], [ %1434, %1438 ]
  %1442 = lshr i32 -2147483648, %1441
  %1443 = and i32 %1442, %1439
  %1444 = icmp eq i32 %1443, 0
  %1445 = add nsw i32 %1441, 1
  br i1 %1444, label %1440, label %1446

1446:                                             ; preds = %1440
  %1447 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1433, i64 0, i32 1
  %1448 = load i8, i8* %1447, align 8
  %1449 = sext i8 %1448 to i32
  %1450 = icmp slt i32 %1441, %1449
  br i1 %1450, label %1451, label %1456

1451:                                             ; preds = %1446
  %1452 = sext i32 %1441 to i64
  %1453 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1433, i64 0, i32 4, i64 %1452
  %1454 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %1453, align 8
  %1455 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1454, null
  br i1 %1455, label %1456, label %1432

1456:                                             ; preds = %1451, %1446, %1427
  %1457 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %1501

1458:                                             ; preds = %1432
  %1459 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1433, i64 0, i32 3
  %1460 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1459, align 8
  %1461 = icmp eq %"class.v8::internal::ZoneMap"* %1460, null
  br i1 %1461, label %1493, label %1462

1462:                                             ; preds = %1458
  %1463 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %1460, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1464 = bitcast %"class.std::__1::__tree_end_node"* %1463 to %"class.std::__1::__tree_node"**
  %1465 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1464, align 8
  %1466 = icmp eq %"class.std::__1::__tree_node"* %1465, null
  br i1 %1466, label %1488, label %1467

1467:                                             ; preds = %1462, %1467
  %1468 = phi %"class.std::__1::__tree_end_node"* [ %1478, %1467 ], [ %1463, %1462 ]
  %1469 = phi %"class.std::__1::__tree_node"* [ %1479, %1467 ], [ %1465, %1462 ]
  %1470 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1469, i64 0, i32 1, i32 0, i32 0, i32 0
  %1471 = load i32, i32* %1470, align 4
  %1472 = icmp slt i32 %1471, %1424
  %1473 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1469, i64 0, i32 0, i32 1
  %1474 = bitcast %"class.std::__1::__tree_node_base"** %1473 to %"class.std::__1::__tree_node"**
  %1475 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1469, i64 0, i32 0, i32 0
  %1476 = bitcast %"class.std::__1::__tree_node"* %1469 to %"class.std::__1::__tree_node"**
  %1477 = select i1 %1472, %"class.std::__1::__tree_node"** %1474, %"class.std::__1::__tree_node"** %1476
  %1478 = select i1 %1472, %"class.std::__1::__tree_end_node"* %1468, %"class.std::__1::__tree_end_node"* %1475
  %1479 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1477, align 8
  %1480 = icmp eq %"class.std::__1::__tree_node"* %1479, null
  br i1 %1480, label %1481, label %1467

1481:                                             ; preds = %1467
  %1482 = icmp eq %"class.std::__1::__tree_end_node"* %1478, %1463
  br i1 %1482, label %1488, label %1483

1483:                                             ; preds = %1481
  %1484 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1478, i64 4
  %1485 = bitcast %"class.std::__1::__tree_end_node"* %1484 to i32*
  %1486 = load i32, i32* %1485, align 4
  %1487 = icmp sgt i32 %1486, %1424
  br i1 %1487, label %1488, label %1490

1488:                                             ; preds = %1483, %1481, %1462
  %1489 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %1501

1490:                                             ; preds = %1483
  %1491 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1478, i64 5
  %1492 = bitcast %"class.std::__1::__tree_end_node"* %1491 to %"class.v8::internal::compiler::Node"**
  br label %1501

1493:                                             ; preds = %1458
  %1494 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1433, i64 0, i32 0, i32 0, i32 0, i32 0
  %1495 = load i32, i32* %1494, align 4
  %1496 = icmp eq i32 %1495, %1424
  br i1 %1496, label %1497, label %1499

1497:                                             ; preds = %1493
  %1498 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1433, i64 0, i32 0, i32 0, i32 1
  br label %1501

1499:                                             ; preds = %1493
  %1500 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %1501

1501:                                             ; preds = %1456, %1488, %1490, %1497, %1499
  %1502 = phi %"class.v8::internal::compiler::Node"** [ %1498, %1497 ], [ %1500, %1499 ], [ %1457, %1456 ], [ %1489, %1488 ], [ %1492, %1490 ]
  %1503 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1502, align 8
  %1504 = icmp eq %"class.v8::internal::compiler::Node"* %1503, null
  br i1 %1504, label %1521, label %1505

1505:                                             ; preds = %1501
  %1506 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1503, i64 0, i32 0
  %1507 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1506, align 8
  %1508 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1507, i64 0, i32 2
  %1509 = load i16, i16* %1508, align 8
  %1510 = icmp eq i16 %1509, 62
  br i1 %1510, label %1547, label %1511

1511:                                             ; preds = %1505
  %1512 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1503, i64 0, i32 1, i32 0
  %1513 = load i64, i64* %1512, align 8
  %1514 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %10, i64 0, i32 0
  store i64 %1513, i64* %1514, align 8
  %1515 = getelementptr inbounds %"struct.v8::internal::compiler::ElementAccess", %"struct.v8::internal::compiler::ElementAccess"* %1118, i64 0, i32 2, i32 0
  %1516 = load i64, i64* %1515, align 8
  %1517 = icmp eq i64 %1513, %1516
  br i1 %1517, label %1518, label %1519

1518:                                             ; preds = %1511
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1269) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1268) #8
  br label %1522

1519:                                             ; preds = %1511
  %1520 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %10, i64 %1516) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1269) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1268) #8
  br i1 %1520, label %1522, label %1555

1521:                                             ; preds = %1501
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1269) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1268) #8
  br label %2635

1522:                                             ; preds = %1519, %1518
  br i1 %1372, label %2635, label %1523

1523:                                             ; preds = %1522
  %1524 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %27, i64 0, i32 0, i32 0
  %1525 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1524, align 8
  %1526 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %27, i64 0, i32 3
  %1527 = load %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"** %1526, align 8
  %1528 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder11NumberEqualEv(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"* %1527) #8
  %1529 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12ZeroConstantEv(%"class.v8::internal::compiler::JSGraph"* %27) #8
  %1530 = bitcast %"struct.std::__1::array.1369"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1530) #8
  %1531 = getelementptr inbounds %"struct.std::__1::array.1369", %"struct.std::__1::array.1369"* %7, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %981, %"class.v8::internal::compiler::Node"** %1531, align 8
  %1532 = getelementptr inbounds %"struct.std::__1::array.1369", %"struct.std::__1::array.1369"* %7, i64 0, i32 0, i64 1
  store %"class.v8::internal::compiler::Node"* %1529, %"class.v8::internal::compiler::Node"** %1532, align 8
  %1533 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1525, %"class.v8::internal::compiler::Operator"* %1528, i32 2, %"class.v8::internal::compiler::Node"** nonnull %1531, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1530) #8
  %1534 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1533, i64 0, i32 1, i32 0
  store i64 513, i64* %1534, align 8
  %1535 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1524, align 8
  %1536 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %27, i64 0, i32 0, i32 1
  %1537 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %1536, align 8
  %1538 = load i8, i8* %1130, align 1
  %1539 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6SelectENS0_21MachineRepresentationENS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %1537, i8 zeroext %1538, i8 zeroext 0) #8
  %1540 = bitcast %"struct.std::__1::array.1370"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1540) #8
  %1541 = getelementptr inbounds %"struct.std::__1::array.1370", %"struct.std::__1::array.1370"* %6, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1533, %"class.v8::internal::compiler::Node"** %1541, align 8
  %1542 = getelementptr inbounds %"struct.std::__1::array.1370", %"struct.std::__1::array.1370"* %6, i64 0, i32 0, i64 1
  store %"class.v8::internal::compiler::Node"* %1371, %"class.v8::internal::compiler::Node"** %1542, align 8
  %1543 = getelementptr inbounds %"struct.std::__1::array.1370", %"struct.std::__1::array.1370"* %6, i64 0, i32 0, i64 2
  store %"class.v8::internal::compiler::Node"* %1503, %"class.v8::internal::compiler::Node"** %1543, align 8
  %1544 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1535, %"class.v8::internal::compiler::Operator"* %1539, i32 3, %"class.v8::internal::compiler::Node"** nonnull %1541, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1540) #8
  %1545 = load i64, i64* %1515, align 8
  %1546 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1544, i64 0, i32 1, i32 0
  store i64 %1545, i64* %1546, align 8
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope14SetReplacementEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %1544) #8
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* nonnull %1371) #8
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* nonnull %1503) #8
  br label %2635

1547:                                             ; preds = %1505
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1269) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1268) #8
  br label %1555

1548:                                             ; preds = %1407
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1269) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1268) #8
  br label %1555

1549:                                             ; preds = %1386
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1269) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1268) #8
  br label %1555

1550:                                             ; preds = %1373
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1269) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1268) #8
  br label %1555

1551:                                             ; preds = %1279
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1269) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1268) #8
  br label %1555

1552:                                             ; preds = %1266, %1263
  %1553 = phi i8* [ %1265, %1263 ], [ %1269, %1266 ]
  %1554 = phi i8* [ %1264, %1263 ], [ %1268, %1266 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1553) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1554) #8
  br label %1555

1555:                                             ; preds = %1552, %1551, %1550, %1549, %1548, %1547, %1519, %1114, %984, %976
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %936) #8
  br label %2635

1556:                                             ; preds = %3
  %1557 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 0, i32 0
  %1558 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1557, align 8
  %1559 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1558, i64 0, i32 0
  %1560 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1559, align 8
  %1561 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1560, i64 0, i32 5
  %1562 = load i32, i32* %1561, align 4
  %1563 = icmp sgt i32 %1562, 0
  br i1 %1563, label %1565, label %1564, !prof !4

1564:                                             ; preds = %1556
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

1565:                                             ; preds = %1556
  %1566 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1558, i64 0, i32 3
  %1567 = load i32, i32* %1566, align 4
  %1568 = and i32 %1567, 251658240
  %1569 = icmp eq i32 %1568, 251658240
  %1570 = ptrtoint %"class.v8::internal::compiler::Node"* %1558 to i64
  %1571 = add i64 %1570, 32
  br i1 %1569, label %1572, label %1576

1572:                                             ; preds = %1565
  %1573 = inttoptr i64 %1571 to i64*
  %1574 = load i64, i64* %1573, align 8
  %1575 = add i64 %1574, 16
  br label %1576

1576:                                             ; preds = %1572, %1565
  %1577 = phi i64 [ %1575, %1572 ], [ %1571, %1565 ]
  %1578 = inttoptr i64 %1577 to %"class.v8::internal::compiler::Node"**
  %1579 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1578, align 8
  %1580 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1
  %1581 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1579, i64 0, i32 3
  %1582 = load i32, i32* %1581, align 4
  %1583 = and i32 %1582, 16777215
  %1584 = zext i32 %1583 to i64
  %1585 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %1580, i64 0, i32 0, i32 0
  %1586 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1587 = bitcast %"class.v8::internal::compiler::Node"*** %1586 to i64*
  %1588 = load i64, i64* %1587, align 8
  %1589 = bitcast %"class.v8::internal::compiler::Sidetable"* %1580 to i64*
  %1590 = load i64, i64* %1589, align 8
  %1591 = sub i64 %1588, %1590
  %1592 = ashr exact i64 %1591, 3
  %1593 = icmp ugt i64 %1592, %1584
  %1594 = inttoptr i64 %1590 to %"class.v8::internal::compiler::Node"**
  br i1 %1593, label %1607, label %1595

1595:                                             ; preds = %1576
  %1596 = add nuw nsw i32 %1583, 1
  %1597 = zext i32 %1596 to i64
  %1598 = icmp ult i64 %1592, %1597
  br i1 %1598, label %1599, label %1603

1599:                                             ; preds = %1595
  %1600 = sub nsw i64 %1597, %1592
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %1585, i64 %1600) #8
  %1601 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %1580, i64 0, i32 0, i32 0, i32 0, i32 0
  %1602 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1601, align 8
  br label %1607

1603:                                             ; preds = %1595
  %1604 = icmp ugt i64 %1592, %1597
  br i1 %1604, label %1605, label %1607

1605:                                             ; preds = %1603
  %1606 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1594, i64 %1597
  store %"class.v8::internal::compiler::Node"** %1606, %"class.v8::internal::compiler::Node"*** %1586, align 8
  br label %1607

1607:                                             ; preds = %1605, %1603, %1599, %1576
  %1608 = phi %"class.v8::internal::compiler::Node"** [ %1594, %1605 ], [ %1594, %1603 ], [ %1602, %1599 ], [ %1594, %1576 ]
  %1609 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1608, i64 %1584
  %1610 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1609, align 8
  %1611 = icmp eq %"class.v8::internal::compiler::Node"* %1610, null
  %1612 = select i1 %1611, %"class.v8::internal::compiler::Node"* %1579, %"class.v8::internal::compiler::Node"* %1610
  %1613 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1612, i64 0, i32 3
  %1614 = load i32, i32* %1613, align 4
  %1615 = and i32 %1614, 16777215
  %1616 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %1615) #8
  %1617 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1618 = load i64, i64* %1617, align 8
  %1619 = icmp eq i64 %1618, 0
  br i1 %1619, label %1687, label %1620

1620:                                             ; preds = %1607
  %1621 = tail call i64 @llvm.ctpop.i64(i64 %1618) #8, !range !3
  %1622 = icmp ugt i64 %1621, 1
  br i1 %1622, label %1626, label %1623

1623:                                             ; preds = %1620
  %1624 = add i64 %1618, -1
  %1625 = and i64 %1624, %1616
  br label %1630

1626:                                             ; preds = %1620
  %1627 = icmp ult i64 %1616, %1618
  br i1 %1627, label %1630, label %1628

1628:                                             ; preds = %1626
  %1629 = urem i64 %1616, %1618
  br label %1630

1630:                                             ; preds = %1628, %1626, %1623
  %1631 = phi i64 [ %1625, %1623 ], [ %1629, %1628 ], [ %1616, %1626 ]
  %1632 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1633 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %1632, align 8
  %1634 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %1633, i64 %1631
  %1635 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %1634, align 8
  %1636 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %1635, null
  br i1 %1636, label %1687, label %1637

1637:                                             ; preds = %1630
  %1638 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1635, i64 0, i32 0
  %1639 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %1638, align 8
  %1640 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %1639, null
  br i1 %1640, label %1687, label %1641

1641:                                             ; preds = %1637
  %1642 = add i64 %1618, -1
  br i1 %1622, label %1643, label %1665

1643:                                             ; preds = %1641, %1661
  %1644 = phi %"struct.std::__1::__hash_node_base.1319"* [ %1663, %1661 ], [ %1639, %1641 ]
  %1645 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1644, i64 1
  %1646 = bitcast %"struct.std::__1::__hash_node_base.1319"* %1645 to i64*
  %1647 = load i64, i64* %1646, align 8
  %1648 = icmp eq i64 %1616, %1647
  br i1 %1648, label %1656, label %1649

1649:                                             ; preds = %1643
  %1650 = icmp ult i64 %1647, %1618
  br i1 %1650, label %1653, label %1651

1651:                                             ; preds = %1649
  %1652 = urem i64 %1647, %1618
  br label %1653

1653:                                             ; preds = %1651, %1649
  %1654 = phi i64 [ %1652, %1651 ], [ %1647, %1649 ]
  %1655 = icmp eq i64 %1654, %1631
  br i1 %1655, label %1661, label %1687

1656:                                             ; preds = %1643
  %1657 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1644, i64 2
  %1658 = bitcast %"struct.std::__1::__hash_node_base.1319"* %1657 to i32*
  %1659 = load i32, i32* %1658, align 4
  %1660 = icmp eq i32 %1659, %1615
  br i1 %1660, label %1683, label %1661

1661:                                             ; preds = %1656, %1653
  %1662 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1644, i64 0, i32 0
  %1663 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %1662, align 8
  %1664 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %1663, null
  br i1 %1664, label %1687, label %1643

1665:                                             ; preds = %1641, %1679
  %1666 = phi %"struct.std::__1::__hash_node_base.1319"* [ %1681, %1679 ], [ %1639, %1641 ]
  %1667 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1666, i64 1
  %1668 = bitcast %"struct.std::__1::__hash_node_base.1319"* %1667 to i64*
  %1669 = load i64, i64* %1668, align 8
  %1670 = icmp eq i64 %1616, %1669
  br i1 %1670, label %1674, label %1671

1671:                                             ; preds = %1665
  %1672 = and i64 %1669, %1642
  %1673 = icmp eq i64 %1672, %1631
  br i1 %1673, label %1679, label %1687

1674:                                             ; preds = %1665
  %1675 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1666, i64 2
  %1676 = bitcast %"struct.std::__1::__hash_node_base.1319"* %1675 to i32*
  %1677 = load i32, i32* %1676, align 4
  %1678 = icmp eq i32 %1677, %1615
  br i1 %1678, label %1683, label %1679

1679:                                             ; preds = %1674, %1671
  %1680 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1666, i64 0, i32 0
  %1681 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %1680, align 8
  %1682 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %1681, null
  br i1 %1682, label %1687, label %1665

1683:                                             ; preds = %1674, %1656
  %1684 = phi %"struct.std::__1::__hash_node_base.1319"* [ %1644, %1656 ], [ %1666, %1674 ]
  %1685 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1684, i64 3
  %1686 = bitcast %"struct.std::__1::__hash_node_base.1319"* %1685 to %"class.v8::internal::compiler::VirtualObject"**
  br label %1689

1687:                                             ; preds = %1679, %1671, %1661, %1653, %1637, %1630, %1607
  %1688 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 0, i32 0
  br label %1689

1689:                                             ; preds = %1683, %1687
  %1690 = phi %"class.v8::internal::compiler::VirtualObject"** [ %1686, %1683 ], [ %1688, %1687 ]
  %1691 = bitcast %"class.v8::internal::compiler::VirtualObject"** %1690 to i64*
  %1692 = load i64, i64* %1691, align 8
  %1693 = bitcast %"class.v8::internal::compiler::VirtualObject"** %24 to i64*
  store i64 %1692, i64* %1693, align 8
  br label %2635

1694:                                             ; preds = %3
  %1695 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 0, i32 0
  %1696 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1695, align 8
  %1697 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1696, i64 0, i32 0
  %1698 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1697, align 8
  %1699 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1698, i64 0, i32 5
  %1700 = load i32, i32* %1699, align 4
  %1701 = icmp sgt i32 %1700, 0
  br i1 %1701, label %1703, label %1702, !prof !4

1702:                                             ; preds = %1694
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

1703:                                             ; preds = %1694
  %1704 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1696, i64 0, i32 3
  %1705 = load i32, i32* %1704, align 4
  %1706 = and i32 %1705, 251658240
  %1707 = icmp eq i32 %1706, 251658240
  %1708 = ptrtoint %"class.v8::internal::compiler::Node"* %1696 to i64
  %1709 = add i64 %1708, 32
  br i1 %1707, label %1710, label %1714

1710:                                             ; preds = %1703
  %1711 = inttoptr i64 %1709 to i64*
  %1712 = load i64, i64* %1711, align 8
  %1713 = add i64 %1712, 16
  br label %1714

1714:                                             ; preds = %1710, %1703
  %1715 = phi i64 [ %1713, %1710 ], [ %1709, %1703 ]
  %1716 = inttoptr i64 %1715 to %"class.v8::internal::compiler::Node"**
  %1717 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1716, align 8
  %1718 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1
  %1719 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1717, i64 0, i32 3
  %1720 = load i32, i32* %1719, align 4
  %1721 = and i32 %1720, 16777215
  %1722 = zext i32 %1721 to i64
  %1723 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %1718, i64 0, i32 0, i32 0
  %1724 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1725 = bitcast %"class.v8::internal::compiler::Node"*** %1724 to i64*
  %1726 = load i64, i64* %1725, align 8
  %1727 = bitcast %"class.v8::internal::compiler::Sidetable"* %1718 to i64*
  %1728 = load i64, i64* %1727, align 8
  %1729 = sub i64 %1726, %1728
  %1730 = ashr exact i64 %1729, 3
  %1731 = icmp ugt i64 %1730, %1722
  %1732 = inttoptr i64 %1728 to %"class.v8::internal::compiler::Node"**
  br i1 %1731, label %1746, label %1733

1733:                                             ; preds = %1714
  %1734 = add nuw nsw i32 %1721, 1
  %1735 = zext i32 %1734 to i64
  %1736 = icmp ult i64 %1730, %1735
  br i1 %1736, label %1737, label %1742

1737:                                             ; preds = %1733
  %1738 = sub nsw i64 %1735, %1730
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %1723, i64 %1738) #8
  %1739 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %1718, i64 0, i32 0, i32 0, i32 0, i32 0
  %1740 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1739, align 8
  %1741 = ptrtoint %"class.v8::internal::compiler::Node"** %1740 to i64
  br label %1746

1742:                                             ; preds = %1733
  %1743 = icmp ugt i64 %1730, %1735
  br i1 %1743, label %1744, label %1746

1744:                                             ; preds = %1742
  %1745 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1732, i64 %1735
  store %"class.v8::internal::compiler::Node"** %1745, %"class.v8::internal::compiler::Node"*** %1724, align 8
  br label %1746

1746:                                             ; preds = %1744, %1742, %1737, %1714
  %1747 = phi i64 [ %1728, %1744 ], [ %1728, %1742 ], [ %1741, %1737 ], [ %1728, %1714 ]
  %1748 = phi %"class.v8::internal::compiler::Node"** [ %1732, %1744 ], [ %1732, %1742 ], [ %1740, %1737 ], [ %1732, %1714 ]
  %1749 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1748, i64 %1722
  %1750 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1749, align 8
  %1751 = icmp eq %"class.v8::internal::compiler::Node"* %1750, null
  %1752 = select i1 %1751, %"class.v8::internal::compiler::Node"* %1717, %"class.v8::internal::compiler::Node"* %1750
  %1753 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1697, align 8
  %1754 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1753, i64 0, i32 5
  %1755 = load i32, i32* %1754, align 4
  %1756 = icmp sgt i32 %1755, 1
  br i1 %1756, label %1758, label %1757, !prof !4

1757:                                             ; preds = %1746
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

1758:                                             ; preds = %1746
  %1759 = load i32, i32* %1704, align 4
  %1760 = and i32 %1759, 251658240
  %1761 = icmp eq i32 %1760, 251658240
  br i1 %1761, label %1762, label %1766

1762:                                             ; preds = %1758
  %1763 = inttoptr i64 %1709 to i64*
  %1764 = load i64, i64* %1763, align 8
  %1765 = add i64 %1764, 16
  br label %1766

1766:                                             ; preds = %1762, %1758
  %1767 = phi i64 [ %1765, %1762 ], [ %1709, %1758 ]
  %1768 = inttoptr i64 %1767 to %"class.v8::internal::compiler::Node"**
  %1769 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1768, i64 1
  %1770 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1769, align 8
  %1771 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1770, i64 0, i32 3
  %1772 = load i32, i32* %1771, align 4
  %1773 = and i32 %1772, 16777215
  %1774 = zext i32 %1773 to i64
  %1775 = load i64, i64* %1725, align 8
  %1776 = sub i64 %1775, %1747
  %1777 = ashr exact i64 %1776, 3
  %1778 = icmp ugt i64 %1777, %1774
  %1779 = inttoptr i64 %1747 to %"class.v8::internal::compiler::Node"**
  br i1 %1778, label %1792, label %1780

1780:                                             ; preds = %1766
  %1781 = add nuw nsw i32 %1773, 1
  %1782 = zext i32 %1781 to i64
  %1783 = icmp ult i64 %1777, %1782
  br i1 %1783, label %1784, label %1788

1784:                                             ; preds = %1780
  %1785 = sub nsw i64 %1782, %1777
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %1723, i64 %1785) #8
  %1786 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %1718, i64 0, i32 0, i32 0, i32 0, i32 0
  %1787 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1786, align 8
  br label %1792

1788:                                             ; preds = %1780
  %1789 = icmp ugt i64 %1777, %1782
  br i1 %1789, label %1790, label %1792

1790:                                             ; preds = %1788
  %1791 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1779, i64 %1782
  store %"class.v8::internal::compiler::Node"** %1791, %"class.v8::internal::compiler::Node"*** %1724, align 8
  br label %1792

1792:                                             ; preds = %1790, %1788, %1784, %1766
  %1793 = phi %"class.v8::internal::compiler::Node"** [ %1779, %1790 ], [ %1779, %1788 ], [ %1787, %1784 ], [ %1779, %1766 ]
  %1794 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1793, i64 %1774
  %1795 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1794, align 8
  %1796 = icmp eq %"class.v8::internal::compiler::Node"* %1795, null
  %1797 = select i1 %1796, %"class.v8::internal::compiler::Node"* %1770, %"class.v8::internal::compiler::Node"* %1795
  %1798 = call %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %1752) #8
  %1799 = call %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %1797) #8
  %1800 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %1798, null
  br i1 %1800, label %1821, label %1801

1801:                                             ; preds = %1792
  %1802 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %1798, i64 0, i32 1
  %1803 = load i8, i8* %1802, align 8, !range !2
  %1804 = icmp eq i8 %1803, 0
  br i1 %1804, label %1805, label %1821

1805:                                             ; preds = %1801
  %1806 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %1799, null
  br i1 %1806, label %1819, label %1807

1807:                                             ; preds = %1805
  %1808 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %1799, i64 0, i32 1
  %1809 = load i8, i8* %1808, align 8, !range !2
  %1810 = icmp eq i8 %1809, 0
  br i1 %1810, label %1811, label %1819

1811:                                             ; preds = %1807
  %1812 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %1798, i64 0, i32 2
  %1813 = load i32, i32* %1812, align 4
  %1814 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %1799, i64 0, i32 2
  %1815 = load i32, i32* %1814, align 4
  %1816 = icmp eq i32 %1813, %1815
  br i1 %1816, label %1817, label %1819

1817:                                             ; preds = %1811
  %1818 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12TrueConstantEv(%"class.v8::internal::compiler::JSGraph"* %27) #8
  br label %1829

1819:                                             ; preds = %1811, %1807, %1805
  %1820 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph13FalseConstantEv(%"class.v8::internal::compiler::JSGraph"* %27) #8
  br label %1829

1821:                                             ; preds = %1801, %1792
  %1822 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %1799, null
  br i1 %1822, label %1924, label %1823

1823:                                             ; preds = %1821
  %1824 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %1799, i64 0, i32 1
  %1825 = load i8, i8* %1824, align 8, !range !2
  %1826 = icmp eq i8 %1825, 0
  br i1 %1826, label %1827, label %1924

1827:                                             ; preds = %1823
  %1828 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph13FalseConstantEv(%"class.v8::internal::compiler::JSGraph"* %27) #8
  br label %1829

1829:                                             ; preds = %1827, %1819, %1817
  %1830 = phi %"class.v8::internal::compiler::Node"* [ %1828, %1827 ], [ %1820, %1819 ], [ %1818, %1817 ]
  %1831 = icmp eq %"class.v8::internal::compiler::Node"* %1830, null
  br i1 %1831, label %1924, label %1832

1832:                                             ; preds = %1829
  %1833 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1752, i64 0, i32 1, i32 0
  %1834 = load i64, i64* %1833, align 8
  %1835 = icmp eq i64 %1834, 1
  br i1 %1835, label %1924, label %1836

1836:                                             ; preds = %1832
  %1837 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1797, i64 0, i32 1, i32 0
  %1838 = load i64, i64* %1837, align 8
  %1839 = icmp eq i64 %1838, 1
  br i1 %1839, label %1924, label %1840

1840:                                             ; preds = %1836
  %1841 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 4
  store %"class.v8::internal::compiler::Node"* %1830, %"class.v8::internal::compiler::Node"** %1841, align 8
  %1842 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %22, align 8
  %1843 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1830, i64 0, i32 3
  %1844 = load i32, i32* %1843, align 4
  %1845 = and i32 %1844, 16777215
  %1846 = call i64 @_ZN2v84base10hash_valueEj(i32 %1845) #8
  %1847 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %1842, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1848 = load i64, i64* %1847, align 8
  %1849 = icmp eq i64 %1848, 0
  br i1 %1849, label %1917, label %1850

1850:                                             ; preds = %1840
  %1851 = call i64 @llvm.ctpop.i64(i64 %1848) #8, !range !3
  %1852 = icmp ugt i64 %1851, 1
  br i1 %1852, label %1856, label %1853

1853:                                             ; preds = %1850
  %1854 = add i64 %1848, -1
  %1855 = and i64 %1854, %1846
  br label %1860

1856:                                             ; preds = %1850
  %1857 = icmp ult i64 %1846, %1848
  br i1 %1857, label %1860, label %1858

1858:                                             ; preds = %1856
  %1859 = urem i64 %1846, %1848
  br label %1860

1860:                                             ; preds = %1858, %1856, %1853
  %1861 = phi i64 [ %1855, %1853 ], [ %1859, %1858 ], [ %1846, %1856 ]
  %1862 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %1842, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1863 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %1862, align 8
  %1864 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %1863, i64 %1861
  %1865 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %1864, align 8
  %1866 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %1865, null
  br i1 %1866, label %1917, label %1867

1867:                                             ; preds = %1860
  %1868 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1865, i64 0, i32 0
  %1869 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %1868, align 8
  %1870 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %1869, null
  br i1 %1870, label %1917, label %1871

1871:                                             ; preds = %1867
  %1872 = add i64 %1848, -1
  br i1 %1852, label %1873, label %1895

1873:                                             ; preds = %1871, %1891
  %1874 = phi %"struct.std::__1::__hash_node_base.1319"* [ %1893, %1891 ], [ %1869, %1871 ]
  %1875 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1874, i64 1
  %1876 = bitcast %"struct.std::__1::__hash_node_base.1319"* %1875 to i64*
  %1877 = load i64, i64* %1876, align 8
  %1878 = icmp eq i64 %1846, %1877
  br i1 %1878, label %1886, label %1879

1879:                                             ; preds = %1873
  %1880 = icmp ult i64 %1877, %1848
  br i1 %1880, label %1883, label %1881

1881:                                             ; preds = %1879
  %1882 = urem i64 %1877, %1848
  br label %1883

1883:                                             ; preds = %1881, %1879
  %1884 = phi i64 [ %1882, %1881 ], [ %1877, %1879 ]
  %1885 = icmp eq i64 %1884, %1861
  br i1 %1885, label %1891, label %1917

1886:                                             ; preds = %1873
  %1887 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1874, i64 2
  %1888 = bitcast %"struct.std::__1::__hash_node_base.1319"* %1887 to i32*
  %1889 = load i32, i32* %1888, align 4
  %1890 = icmp eq i32 %1889, %1845
  br i1 %1890, label %1913, label %1891

1891:                                             ; preds = %1886, %1883
  %1892 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1874, i64 0, i32 0
  %1893 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %1892, align 8
  %1894 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %1893, null
  br i1 %1894, label %1917, label %1873

1895:                                             ; preds = %1871, %1909
  %1896 = phi %"struct.std::__1::__hash_node_base.1319"* [ %1911, %1909 ], [ %1869, %1871 ]
  %1897 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1896, i64 1
  %1898 = bitcast %"struct.std::__1::__hash_node_base.1319"* %1897 to i64*
  %1899 = load i64, i64* %1898, align 8
  %1900 = icmp eq i64 %1846, %1899
  br i1 %1900, label %1904, label %1901

1901:                                             ; preds = %1895
  %1902 = and i64 %1899, %1872
  %1903 = icmp eq i64 %1902, %1861
  br i1 %1903, label %1909, label %1917

1904:                                             ; preds = %1895
  %1905 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1896, i64 2
  %1906 = bitcast %"struct.std::__1::__hash_node_base.1319"* %1905 to i32*
  %1907 = load i32, i32* %1906, align 4
  %1908 = icmp eq i32 %1907, %1845
  br i1 %1908, label %1913, label %1909

1909:                                             ; preds = %1904, %1901
  %1910 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1896, i64 0, i32 0
  %1911 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %1910, align 8
  %1912 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %1911, null
  br i1 %1912, label %1917, label %1895

1913:                                             ; preds = %1904, %1886
  %1914 = phi %"struct.std::__1::__hash_node_base.1319"* [ %1874, %1886 ], [ %1896, %1904 ]
  %1915 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %1914, i64 3
  %1916 = bitcast %"struct.std::__1::__hash_node_base.1319"* %1915 to %"class.v8::internal::compiler::VirtualObject"**
  br label %1919

1917:                                             ; preds = %1909, %1901, %1891, %1883, %1867, %1860, %1840
  %1918 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %1842, i64 0, i32 0, i32 0
  br label %1919

1919:                                             ; preds = %1913, %1917
  %1920 = phi %"class.v8::internal::compiler::VirtualObject"** [ %1916, %1913 ], [ %1918, %1917 ]
  %1921 = bitcast %"class.v8::internal::compiler::VirtualObject"** %1920 to i64*
  %1922 = load i64, i64* %1921, align 8
  %1923 = bitcast %"class.v8::internal::compiler::VirtualObject"** %24 to i64*
  store i64 %1922, i64* %1923, align 8
  br label %2635

1924:                                             ; preds = %1836, %1832, %1829, %1823, %1821
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %1752) #8
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %1797) #8
  br label %2635

1925:                                             ; preds = %3
  %1926 = tail call dereferenceable(32) %"class.v8::internal::compiler::CheckMapsParameters"* @_ZN2v88internal8compiler21CheckMapsParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #8
  %1927 = getelementptr inbounds %"class.v8::internal::compiler::CheckMapsParameters", %"class.v8::internal::compiler::CheckMapsParameters"* %1926, i64 0, i32 1, i32 0
  %1928 = load i64, i64* %1927, align 8
  %1929 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 0, i32 0
  %1930 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1929, align 8
  %1931 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1930, i64 0, i32 0
  %1932 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1931, align 8
  %1933 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1932, i64 0, i32 5
  %1934 = load i32, i32* %1933, align 4
  %1935 = icmp sgt i32 %1934, 0
  br i1 %1935, label %1937, label %1936, !prof !4

1936:                                             ; preds = %1925
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

1937:                                             ; preds = %1925
  %1938 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1930, i64 0, i32 3
  %1939 = load i32, i32* %1938, align 4
  %1940 = and i32 %1939, 251658240
  %1941 = icmp eq i32 %1940, 251658240
  %1942 = ptrtoint %"class.v8::internal::compiler::Node"* %1930 to i64
  %1943 = add i64 %1942, 32
  br i1 %1941, label %1944, label %1948

1944:                                             ; preds = %1937
  %1945 = inttoptr i64 %1943 to i64*
  %1946 = load i64, i64* %1945, align 8
  %1947 = add i64 %1946, 16
  br label %1948

1948:                                             ; preds = %1944, %1937
  %1949 = phi i64 [ %1947, %1944 ], [ %1943, %1937 ]
  %1950 = inttoptr i64 %1949 to %"class.v8::internal::compiler::Node"**
  %1951 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1950, align 8
  %1952 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1
  %1953 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1951, i64 0, i32 3
  %1954 = load i32, i32* %1953, align 4
  %1955 = and i32 %1954, 16777215
  %1956 = zext i32 %1955 to i64
  %1957 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %1952, i64 0, i32 0, i32 0
  %1958 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1959 = bitcast %"class.v8::internal::compiler::Node"*** %1958 to i64*
  %1960 = load i64, i64* %1959, align 8
  %1961 = bitcast %"class.v8::internal::compiler::Sidetable"* %1952 to i64*
  %1962 = load i64, i64* %1961, align 8
  %1963 = sub i64 %1960, %1962
  %1964 = ashr exact i64 %1963, 3
  %1965 = icmp ugt i64 %1964, %1956
  %1966 = inttoptr i64 %1962 to %"class.v8::internal::compiler::Node"**
  br i1 %1965, label %1979, label %1967

1967:                                             ; preds = %1948
  %1968 = add nuw nsw i32 %1955, 1
  %1969 = zext i32 %1968 to i64
  %1970 = icmp ult i64 %1964, %1969
  br i1 %1970, label %1971, label %1975

1971:                                             ; preds = %1967
  %1972 = sub nsw i64 %1969, %1964
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %1957, i64 %1972) #8
  %1973 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %1952, i64 0, i32 0, i32 0, i32 0, i32 0
  %1974 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1973, align 8
  br label %1979

1975:                                             ; preds = %1967
  %1976 = icmp ugt i64 %1964, %1969
  br i1 %1976, label %1977, label %1979

1977:                                             ; preds = %1975
  %1978 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1966, i64 %1969
  store %"class.v8::internal::compiler::Node"** %1978, %"class.v8::internal::compiler::Node"*** %1958, align 8
  br label %1979

1979:                                             ; preds = %1977, %1975, %1971, %1948
  %1980 = phi %"class.v8::internal::compiler::Node"** [ %1966, %1977 ], [ %1966, %1975 ], [ %1974, %1971 ], [ %1966, %1948 ]
  %1981 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1980, i64 %1956
  %1982 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1981, align 8
  %1983 = icmp eq %"class.v8::internal::compiler::Node"* %1982, null
  %1984 = select i1 %1983, %"class.v8::internal::compiler::Node"* %1951, %"class.v8::internal::compiler::Node"* %1982
  %1985 = call %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %1984) #8
  %1986 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %1985, null
  br i1 %1986, label %2168, label %1987

1987:                                             ; preds = %1979
  %1988 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %1985, i64 0, i32 1
  %1989 = load i8, i8* %1988, align 8, !range !2
  %1990 = icmp eq i8 %1989, 0
  br i1 %1990, label %1991, label %2168

1991:                                             ; preds = %1987
  %1992 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %1985, i64 0, i32 3, i32 0
  %1993 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %1985, i64 0, i32 3, i32 0, i32 0, i32 1
  %1994 = bitcast %"class.v8::internal::compiler::Variable"** %1993 to i64*
  %1995 = load i64, i64* %1994, align 8
  %1996 = bitcast %"class.std::__1::vector.1307"* %1992 to i64*
  %1997 = load i64, i64* %1996, align 8
  %1998 = sub i64 %1995, %1997
  %1999 = trunc i64 %1998 to i32
  %2000 = and i32 %1999, -4
  %2001 = icmp sgt i32 %2000, 0
  br i1 %2001, label %2002, label %2168

2002:                                             ; preds = %1991
  %2003 = icmp eq i64 %1998, 0
  br i1 %2003, label %2004, label %2006

2004:                                             ; preds = %2002
  %2005 = bitcast %"class.std::__1::vector.1307"* %1992 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %2005) #9
  unreachable

2006:                                             ; preds = %2002
  %2007 = inttoptr i64 %1997 to %"class.v8::internal::compiler::Variable"*
  %2008 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %2007, i64 0, i32 0
  %2009 = load i32, i32* %2008, align 4
  %2010 = icmp eq i32 %2009, -1
  br i1 %2010, label %2011, label %2012, !prof !5

2011:                                             ; preds = %2006
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

2012:                                             ; preds = %2006
  %2013 = call i64 @_ZN2v84base10hash_valueEj(i32 %2009) #8
  %2014 = trunc i64 %2013 to i32
  %2015 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %2016 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %2015, align 8
  %2017 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2016, null
  br i1 %2017, label %2042, label %2018

2018:                                             ; preds = %2012, %2037
  %2019 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %2040, %2037 ], [ %2016, %2012 ]
  %2020 = phi i32 [ %2031, %2037 ], [ 0, %2012 ]
  %2021 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2019, i64 0, i32 2, i32 0
  %2022 = load i32, i32* %2021, align 4
  %2023 = icmp eq i32 %2022, %2014
  br i1 %2023, label %2044, label %2024

2024:                                             ; preds = %2018
  %2025 = xor i32 %2022, %2014
  br label %2026

2026:                                             ; preds = %2026, %2024
  %2027 = phi i32 [ %2031, %2026 ], [ %2020, %2024 ]
  %2028 = lshr i32 -2147483648, %2027
  %2029 = and i32 %2028, %2025
  %2030 = icmp eq i32 %2029, 0
  %2031 = add nsw i32 %2027, 1
  br i1 %2030, label %2026, label %2032

2032:                                             ; preds = %2026
  %2033 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2019, i64 0, i32 1
  %2034 = load i8, i8* %2033, align 8
  %2035 = sext i8 %2034 to i32
  %2036 = icmp slt i32 %2027, %2035
  br i1 %2036, label %2037, label %2042

2037:                                             ; preds = %2032
  %2038 = sext i32 %2027 to i64
  %2039 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2019, i64 0, i32 4, i64 %2038
  %2040 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %2039, align 8
  %2041 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2040, null
  br i1 %2041, label %2042, label %2018

2042:                                             ; preds = %2037, %2032, %2012
  %2043 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %2087

2044:                                             ; preds = %2018
  %2045 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2019, i64 0, i32 3
  %2046 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %2045, align 8
  %2047 = icmp eq %"class.v8::internal::ZoneMap"* %2046, null
  br i1 %2047, label %2079, label %2048

2048:                                             ; preds = %2044
  %2049 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %2046, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %2050 = bitcast %"class.std::__1::__tree_end_node"* %2049 to %"class.std::__1::__tree_node"**
  %2051 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2050, align 8
  %2052 = icmp eq %"class.std::__1::__tree_node"* %2051, null
  br i1 %2052, label %2074, label %2053

2053:                                             ; preds = %2048, %2053
  %2054 = phi %"class.std::__1::__tree_end_node"* [ %2064, %2053 ], [ %2049, %2048 ]
  %2055 = phi %"class.std::__1::__tree_node"* [ %2065, %2053 ], [ %2051, %2048 ]
  %2056 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2055, i64 0, i32 1, i32 0, i32 0, i32 0
  %2057 = load i32, i32* %2056, align 4
  %2058 = icmp slt i32 %2057, %2009
  %2059 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2055, i64 0, i32 0, i32 1
  %2060 = bitcast %"class.std::__1::__tree_node_base"** %2059 to %"class.std::__1::__tree_node"**
  %2061 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2055, i64 0, i32 0, i32 0
  %2062 = bitcast %"class.std::__1::__tree_node"* %2055 to %"class.std::__1::__tree_node"**
  %2063 = select i1 %2058, %"class.std::__1::__tree_node"** %2060, %"class.std::__1::__tree_node"** %2062
  %2064 = select i1 %2058, %"class.std::__1::__tree_end_node"* %2054, %"class.std::__1::__tree_end_node"* %2061
  %2065 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2063, align 8
  %2066 = icmp eq %"class.std::__1::__tree_node"* %2065, null
  br i1 %2066, label %2067, label %2053

2067:                                             ; preds = %2053
  %2068 = icmp eq %"class.std::__1::__tree_end_node"* %2064, %2049
  br i1 %2068, label %2074, label %2069

2069:                                             ; preds = %2067
  %2070 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2064, i64 4
  %2071 = bitcast %"class.std::__1::__tree_end_node"* %2070 to i32*
  %2072 = load i32, i32* %2071, align 4
  %2073 = icmp sgt i32 %2072, %2009
  br i1 %2073, label %2074, label %2076

2074:                                             ; preds = %2069, %2067, %2048
  %2075 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %2087

2076:                                             ; preds = %2069
  %2077 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2064, i64 5
  %2078 = bitcast %"class.std::__1::__tree_end_node"* %2077 to %"class.v8::internal::compiler::Node"**
  br label %2087

2079:                                             ; preds = %2044
  %2080 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2019, i64 0, i32 0, i32 0, i32 0, i32 0
  %2081 = load i32, i32* %2080, align 4
  %2082 = icmp eq i32 %2081, %2009
  br i1 %2082, label %2083, label %2085

2083:                                             ; preds = %2079
  %2084 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2019, i64 0, i32 0, i32 0, i32 1
  br label %2087

2085:                                             ; preds = %2079
  %2086 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %2087

2087:                                             ; preds = %2042, %2074, %2076, %2083, %2085
  %2088 = phi %"class.v8::internal::compiler::Node"** [ %2084, %2083 ], [ %2086, %2085 ], [ %2043, %2042 ], [ %2075, %2074 ], [ %2078, %2076 ]
  %2089 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2088, align 8
  %2090 = icmp eq %"class.v8::internal::compiler::Node"* %2089, null
  br i1 %2090, label %2635, label %2091

2091:                                             ; preds = %2087
  %2092 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2089, i64 0, i32 0
  %2093 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2092, align 8
  %2094 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %2093, i64 0, i32 2
  %2095 = load i16, i16* %2094, align 8
  %2096 = icmp eq i16 %2095, 62
  br i1 %2096, label %2168, label %2097

2097:                                             ; preds = %2091
  %2098 = bitcast %"class.v8::internal::compiler::Type"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2098) #8
  %2099 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2089, i64 0, i32 1, i32 0
  %2100 = load i64, i64* %2099, align 8
  %2101 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %11, i64 0, i32 0
  store i64 %2100, i64* %2101, align 8
  %2102 = and i64 %2100, 1
  %2103 = icmp eq i64 %2102, 0
  br i1 %2103, label %2106, label %2104

2104:                                             ; preds = %2097
  %2105 = bitcast %"class.v8::internal::compiler::MapRef"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2105) #8
  br label %2165

2106:                                             ; preds = %2097
  %2107 = inttoptr i64 %2100 to %"class.v8::internal::compiler::TypeBase"*
  %2108 = getelementptr inbounds %"class.v8::internal::compiler::TypeBase", %"class.v8::internal::compiler::TypeBase"* %2107, i64 0, i32 0
  %2109 = load i32, i32* %2108, align 4
  %2110 = icmp eq i32 %2109, 0
  %2111 = bitcast %"class.v8::internal::compiler::MapRef"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2111) #8
  br i1 %2110, label %2112, label %2165

2112:                                             ; preds = %2106
  %2113 = call %"class.v8::internal::compiler::HeapConstantType"* @_ZNK2v88internal8compiler4Type14AsHeapConstantEv(%"class.v8::internal::compiler::Type"* nonnull %11) #8
  %2114 = getelementptr inbounds %"class.v8::internal::compiler::HeapConstantType", %"class.v8::internal::compiler::HeapConstantType"* %2113, i64 0, i32 2, i32 0
  %2115 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler9ObjectRef5AsMapEv(%"class.v8::internal::compiler::ObjectRef"* %2114) #8
  %2116 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %12, i64 0, i32 0, i32 0, i32 0
  %2117 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %2115, 0
  store %"class.v8::internal::compiler::ObjectData"* %2117, %"class.v8::internal::compiler::ObjectData"** %2116, align 8
  %2118 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %12, i64 0, i32 0, i32 0, i32 1
  %2119 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %2115, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %2119, %"class.v8::internal::compiler::JSHeapBroker"** %2118, align 8
  %2120 = call i64* @_ZNK2v88internal8compiler6MapRef6objectEv(%"class.v8::internal::compiler::MapRef"* nonnull %12) #8
  %2121 = icmp eq i64 %1928, 1
  %2122 = inttoptr i64 %1928 to i64*
  br i1 %2121, label %2123, label %2124

2123:                                             ; preds = %2112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2111) #8
  br label %2167

2124:                                             ; preds = %2112
  %2125 = and i64 %1928, 3
  %2126 = icmp eq i64 %2125, 0
  br i1 %2126, label %2127, label %2129

2127:                                             ; preds = %2124
  %2128 = icmp eq i64* %2120, %2122
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2111) #8
  br i1 %2128, label %2148, label %2167

2129:                                             ; preds = %2124
  %2130 = add i64 %1928, -2
  %2131 = inttoptr i64 %2130 to %"class.v8::internal::ZoneVector.1372"*
  %2132 = getelementptr inbounds %"class.v8::internal::ZoneVector.1372", %"class.v8::internal::ZoneVector.1372"* %2131, i64 0, i32 0, i32 0, i32 0
  %2133 = load i64**, i64*** %2132, align 8
  %2134 = getelementptr inbounds %"class.v8::internal::ZoneVector.1372", %"class.v8::internal::ZoneVector.1372"* %2131, i64 0, i32 0, i32 0, i32 1
  %2135 = load i64**, i64*** %2134, align 8
  %2136 = icmp eq i64** %2133, %2135
  br i1 %2136, label %2145, label %2137

2137:                                             ; preds = %2129, %2141
  %2138 = phi i64** [ %2142, %2141 ], [ %2133, %2129 ]
  %2139 = load i64*, i64** %2138, align 8
  %2140 = icmp eq i64* %2139, %2120
  br i1 %2140, label %2145, label %2141

2141:                                             ; preds = %2137
  %2142 = getelementptr inbounds i64*, i64** %2138, i64 1
  %2143 = icmp eq i64** %2142, %2135
  br i1 %2143, label %2144, label %2137

2144:                                             ; preds = %2141
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2111) #8
  br label %2167

2145:                                             ; preds = %2137, %2129
  %2146 = phi i64** [ %2133, %2129 ], [ %2138, %2137 ]
  %2147 = icmp eq i64** %2146, %2135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2111) #8
  br i1 %2147, label %2167, label %2148

2148:                                             ; preds = %2145, %2127
  %2149 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %22, align 8
  %2150 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %2149, i64 0, i32 4
  %2151 = bitcast %"class.v8::internal::compiler::JSGraph"** %2150 to %"class.v8::internal::compiler::MachineGraph"**
  %2152 = load %"class.v8::internal::compiler::MachineGraph"*, %"class.v8::internal::compiler::MachineGraph"** %2151, align 8
  %2153 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %2152, i64 0, i32 4
  %2154 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2153, align 8
  %2155 = icmp eq %"class.v8::internal::compiler::Node"* %2154, null
  br i1 %2155, label %2156, label %2163

2156:                                             ; preds = %2148
  %2157 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %2152, i64 0, i32 0
  %2158 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2157, align 8
  %2159 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %2152, i64 0, i32 1
  %2160 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %2159, align 8
  %2161 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %2160) #8
  %2162 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %2158, %"class.v8::internal::compiler::Operator"* %2161, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #8
  store %"class.v8::internal::compiler::Node"* %2162, %"class.v8::internal::compiler::Node"** %2153, align 8
  br label %2163

2163:                                             ; preds = %2156, %2148
  %2164 = phi %"class.v8::internal::compiler::Node"* [ %2162, %2156 ], [ %2154, %2148 ]
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope14SetReplacementEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %2164) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2098) #8
  br label %2635

2165:                                             ; preds = %2106, %2104
  %2166 = phi i8* [ %2105, %2104 ], [ %2111, %2106 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2166) #8
  br label %2167

2167:                                             ; preds = %2165, %2145, %2144, %2127, %2123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2098) #8
  br label %2168

2168:                                             ; preds = %2167, %2091, %1991, %1987, %1979
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %1984) #8
  br label %2635

2169:                                             ; preds = %3
  %2170 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 0, i32 0
  %2171 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2170, align 8
  %2172 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2171, i64 0, i32 0
  %2173 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2172, align 8
  %2174 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %2173, i64 0, i32 5
  %2175 = load i32, i32* %2174, align 4
  %2176 = icmp sgt i32 %2175, 0
  br i1 %2176, label %2178, label %2177, !prof !4

2177:                                             ; preds = %2169
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

2178:                                             ; preds = %2169
  %2179 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2171, i64 0, i32 3
  %2180 = load i32, i32* %2179, align 4
  %2181 = and i32 %2180, 251658240
  %2182 = icmp eq i32 %2181, 251658240
  %2183 = ptrtoint %"class.v8::internal::compiler::Node"* %2171 to i64
  %2184 = add i64 %2183, 32
  br i1 %2182, label %2185, label %2189

2185:                                             ; preds = %2178
  %2186 = inttoptr i64 %2184 to i64*
  %2187 = load i64, i64* %2186, align 8
  %2188 = add i64 %2187, 16
  br label %2189

2189:                                             ; preds = %2185, %2178
  %2190 = phi i64 [ %2188, %2185 ], [ %2184, %2178 ]
  %2191 = inttoptr i64 %2190 to %"class.v8::internal::compiler::Node"**
  %2192 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2191, align 8
  %2193 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1
  %2194 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2192, i64 0, i32 3
  %2195 = load i32, i32* %2194, align 4
  %2196 = and i32 %2195, 16777215
  %2197 = zext i32 %2196 to i64
  %2198 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %2193, i64 0, i32 0, i32 0
  %2199 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %2200 = bitcast %"class.v8::internal::compiler::Node"*** %2199 to i64*
  %2201 = load i64, i64* %2200, align 8
  %2202 = bitcast %"class.v8::internal::compiler::Sidetable"* %2193 to i64*
  %2203 = load i64, i64* %2202, align 8
  %2204 = sub i64 %2201, %2203
  %2205 = ashr exact i64 %2204, 3
  %2206 = icmp ugt i64 %2205, %2197
  %2207 = inttoptr i64 %2203 to %"class.v8::internal::compiler::Node"**
  br i1 %2206, label %2220, label %2208

2208:                                             ; preds = %2189
  %2209 = add nuw nsw i32 %2196, 1
  %2210 = zext i32 %2209 to i64
  %2211 = icmp ult i64 %2205, %2210
  br i1 %2211, label %2212, label %2216

2212:                                             ; preds = %2208
  %2213 = sub nsw i64 %2210, %2205
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %2198, i64 %2213) #8
  %2214 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %2193, i64 0, i32 0, i32 0, i32 0, i32 0
  %2215 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %2214, align 8
  br label %2220

2216:                                             ; preds = %2208
  %2217 = icmp ugt i64 %2205, %2210
  br i1 %2217, label %2218, label %2220

2218:                                             ; preds = %2216
  %2219 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2207, i64 %2210
  store %"class.v8::internal::compiler::Node"** %2219, %"class.v8::internal::compiler::Node"*** %2199, align 8
  br label %2220

2220:                                             ; preds = %2218, %2216, %2212, %2189
  %2221 = phi %"class.v8::internal::compiler::Node"** [ %2207, %2218 ], [ %2207, %2216 ], [ %2215, %2212 ], [ %2207, %2189 ]
  %2222 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2221, i64 %2197
  %2223 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2222, align 8
  %2224 = icmp eq %"class.v8::internal::compiler::Node"* %2223, null
  %2225 = select i1 %2224, %"class.v8::internal::compiler::Node"* %2192, %"class.v8::internal::compiler::Node"* %2223
  %2226 = call %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %2225) #8
  %2227 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %2226, null
  br i1 %2227, label %2419, label %2228

2228:                                             ; preds = %2220
  %2229 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %2226, i64 0, i32 1
  %2230 = load i8, i8* %2229, align 8, !range !2
  %2231 = icmp eq i8 %2230, 0
  br i1 %2231, label %2232, label %2419

2232:                                             ; preds = %2228
  %2233 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %2226, i64 0, i32 3, i32 0
  %2234 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %2226, i64 0, i32 3, i32 0, i32 0, i32 1
  %2235 = bitcast %"class.v8::internal::compiler::Variable"** %2234 to i64*
  %2236 = load i64, i64* %2235, align 8
  %2237 = bitcast %"class.std::__1::vector.1307"* %2233 to i64*
  %2238 = load i64, i64* %2237, align 8
  %2239 = sub i64 %2236, %2238
  %2240 = trunc i64 %2239 to i32
  %2241 = and i32 %2240, -4
  %2242 = icmp sgt i32 %2241, 0
  br i1 %2242, label %2243, label %2419

2243:                                             ; preds = %2232
  %2244 = icmp eq i64 %2239, 0
  br i1 %2244, label %2245, label %2247

2245:                                             ; preds = %2243
  %2246 = bitcast %"class.std::__1::vector.1307"* %2233 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %2246) #9
  unreachable

2247:                                             ; preds = %2243
  %2248 = inttoptr i64 %2238 to %"class.v8::internal::compiler::Variable"*
  %2249 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %2248, i64 0, i32 0
  %2250 = load i32, i32* %2249, align 4
  %2251 = icmp eq i32 %2250, -1
  br i1 %2251, label %2252, label %2253, !prof !5

2252:                                             ; preds = %2247
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

2253:                                             ; preds = %2247
  %2254 = call i64 @_ZN2v84base10hash_valueEj(i32 %2250) #8
  %2255 = trunc i64 %2254 to i32
  %2256 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %2257 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %2256, align 8
  %2258 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2257, null
  br i1 %2258, label %2283, label %2259

2259:                                             ; preds = %2253, %2278
  %2260 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %2281, %2278 ], [ %2257, %2253 ]
  %2261 = phi i32 [ %2272, %2278 ], [ 0, %2253 ]
  %2262 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2260, i64 0, i32 2, i32 0
  %2263 = load i32, i32* %2262, align 4
  %2264 = icmp eq i32 %2263, %2255
  br i1 %2264, label %2285, label %2265

2265:                                             ; preds = %2259
  %2266 = xor i32 %2263, %2255
  br label %2267

2267:                                             ; preds = %2267, %2265
  %2268 = phi i32 [ %2272, %2267 ], [ %2261, %2265 ]
  %2269 = lshr i32 -2147483648, %2268
  %2270 = and i32 %2269, %2266
  %2271 = icmp eq i32 %2270, 0
  %2272 = add nsw i32 %2268, 1
  br i1 %2271, label %2267, label %2273

2273:                                             ; preds = %2267
  %2274 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2260, i64 0, i32 1
  %2275 = load i8, i8* %2274, align 8
  %2276 = sext i8 %2275 to i32
  %2277 = icmp slt i32 %2268, %2276
  br i1 %2277, label %2278, label %2283

2278:                                             ; preds = %2273
  %2279 = sext i32 %2268 to i64
  %2280 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2260, i64 0, i32 4, i64 %2279
  %2281 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %2280, align 8
  %2282 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2281, null
  br i1 %2282, label %2283, label %2259

2283:                                             ; preds = %2278, %2273, %2253
  %2284 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %2328

2285:                                             ; preds = %2259
  %2286 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2260, i64 0, i32 3
  %2287 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %2286, align 8
  %2288 = icmp eq %"class.v8::internal::ZoneMap"* %2287, null
  br i1 %2288, label %2320, label %2289

2289:                                             ; preds = %2285
  %2290 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %2287, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %2291 = bitcast %"class.std::__1::__tree_end_node"* %2290 to %"class.std::__1::__tree_node"**
  %2292 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2291, align 8
  %2293 = icmp eq %"class.std::__1::__tree_node"* %2292, null
  br i1 %2293, label %2315, label %2294

2294:                                             ; preds = %2289, %2294
  %2295 = phi %"class.std::__1::__tree_end_node"* [ %2305, %2294 ], [ %2290, %2289 ]
  %2296 = phi %"class.std::__1::__tree_node"* [ %2306, %2294 ], [ %2292, %2289 ]
  %2297 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2296, i64 0, i32 1, i32 0, i32 0, i32 0
  %2298 = load i32, i32* %2297, align 4
  %2299 = icmp slt i32 %2298, %2250
  %2300 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2296, i64 0, i32 0, i32 1
  %2301 = bitcast %"class.std::__1::__tree_node_base"** %2300 to %"class.std::__1::__tree_node"**
  %2302 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2296, i64 0, i32 0, i32 0
  %2303 = bitcast %"class.std::__1::__tree_node"* %2296 to %"class.std::__1::__tree_node"**
  %2304 = select i1 %2299, %"class.std::__1::__tree_node"** %2301, %"class.std::__1::__tree_node"** %2303
  %2305 = select i1 %2299, %"class.std::__1::__tree_end_node"* %2295, %"class.std::__1::__tree_end_node"* %2302
  %2306 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2304, align 8
  %2307 = icmp eq %"class.std::__1::__tree_node"* %2306, null
  br i1 %2307, label %2308, label %2294

2308:                                             ; preds = %2294
  %2309 = icmp eq %"class.std::__1::__tree_end_node"* %2305, %2290
  br i1 %2309, label %2315, label %2310

2310:                                             ; preds = %2308
  %2311 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2305, i64 4
  %2312 = bitcast %"class.std::__1::__tree_end_node"* %2311 to i32*
  %2313 = load i32, i32* %2312, align 4
  %2314 = icmp sgt i32 %2313, %2250
  br i1 %2314, label %2315, label %2317

2315:                                             ; preds = %2310, %2308, %2289
  %2316 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %2328

2317:                                             ; preds = %2310
  %2318 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2305, i64 5
  %2319 = bitcast %"class.std::__1::__tree_end_node"* %2318 to %"class.v8::internal::compiler::Node"**
  br label %2328

2320:                                             ; preds = %2285
  %2321 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2260, i64 0, i32 0, i32 0, i32 0, i32 0
  %2322 = load i32, i32* %2321, align 4
  %2323 = icmp eq i32 %2322, %2250
  br i1 %2323, label %2324, label %2326

2324:                                             ; preds = %2320
  %2325 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %2260, i64 0, i32 0, i32 0, i32 1
  br label %2328

2326:                                             ; preds = %2320
  %2327 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %2328

2328:                                             ; preds = %2283, %2315, %2317, %2324, %2326
  %2329 = phi %"class.v8::internal::compiler::Node"** [ %2325, %2324 ], [ %2327, %2326 ], [ %2284, %2283 ], [ %2316, %2315 ], [ %2319, %2317 ]
  %2330 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2329, align 8
  %2331 = icmp eq %"class.v8::internal::compiler::Node"* %2330, null
  br i1 %2331, label %2635, label %2332

2332:                                             ; preds = %2328
  %2333 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2330, i64 0, i32 0
  %2334 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2333, align 8
  %2335 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %2334, i64 0, i32 2
  %2336 = load i16, i16* %2335, align 8
  %2337 = icmp eq i16 %2336, 62
  br i1 %2337, label %2419, label %2338

2338:                                             ; preds = %2332
  %2339 = call dereferenceable(8) %"class.v8::internal::ZoneHandleSet"* @_ZN2v88internal8compiler23CompareMapsParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #8
  %2340 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12TrueConstantEv(%"class.v8::internal::compiler::JSGraph"* %27) #8
  %2341 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph13FalseConstantEv(%"class.v8::internal::compiler::JSGraph"* %27) #8
  %2342 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %2339, i64 0, i32 0
  %2343 = load i64, i64* %2342, align 8, !noalias !58
  %2344 = and i64 %2343, 3
  switch i64 %2344, label %2345 [
    i64 1, label %2417
    i64 0, label %2356
  ]

2345:                                             ; preds = %2338
  %2346 = add i64 %2343, -2
  %2347 = inttoptr i64 %2346 to %"class.v8::internal::ZoneVector.1372"*
  %2348 = getelementptr inbounds %"class.v8::internal::ZoneVector.1372", %"class.v8::internal::ZoneVector.1372"* %2347, i64 0, i32 0, i32 0, i32 1
  %2349 = bitcast i64*** %2348 to i64*
  %2350 = load i64, i64* %2349, align 8, !noalias !58
  %2351 = inttoptr i64 %2346 to i64*
  %2352 = load i64, i64* %2351, align 8, !noalias !58
  %2353 = sub i64 %2350, %2352
  %2354 = ashr exact i64 %2353, 3
  %2355 = icmp eq i64 %2353, 0
  br i1 %2355, label %2417, label %2356

2356:                                             ; preds = %2345, %2338
  %2357 = phi i64 [ %2354, %2345 ], [ 1, %2338 ]
  %2358 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %27, i64 0, i32 0, i32 0
  %2359 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %27, i64 0, i32 3
  %2360 = bitcast %"struct.std::__1::array.1369"* %4 to i8*
  %2361 = getelementptr inbounds %"struct.std::__1::array.1369", %"struct.std::__1::array.1369"* %4, i64 0, i32 0, i64 0
  %2362 = getelementptr inbounds %"struct.std::__1::array.1369", %"struct.std::__1::array.1369"* %4, i64 0, i32 0, i64 1
  %2363 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %27, i64 0, i32 0, i32 1
  %2364 = bitcast %"struct.std::__1::array.1370"* %5 to i8*
  %2365 = getelementptr inbounds %"struct.std::__1::array.1370", %"struct.std::__1::array.1370"* %5, i64 0, i32 0, i64 0
  %2366 = getelementptr inbounds %"struct.std::__1::array.1370", %"struct.std::__1::array.1370"* %5, i64 0, i32 0, i64 1
  %2367 = getelementptr inbounds %"struct.std::__1::array.1370", %"struct.std::__1::array.1370"* %5, i64 0, i32 0, i64 2
  br label %2368

2368:                                             ; preds = %2415, %2356
  %2369 = phi i64 [ %2343, %2356 ], [ %2416, %2415 ]
  %2370 = phi %"class.v8::internal::compiler::Node"* [ %2341, %2356 ], [ %2412, %2415 ]
  %2371 = phi i64 [ 0, %2356 ], [ %2413, %2415 ]
  %2372 = and i64 %2369, 3
  %2373 = icmp eq i64 %2372, 0
  br i1 %2373, label %2374, label %2376

2374:                                             ; preds = %2368
  %2375 = inttoptr i64 %2369 to i64*
  br label %2395

2376:                                             ; preds = %2368
  %2377 = add i64 %2369, -2
  %2378 = inttoptr i64 %2377 to %"class.v8::internal::ZoneVector.1372"*
  %2379 = shl i64 %2371, 32
  %2380 = ashr exact i64 %2379, 32
  %2381 = getelementptr inbounds %"class.v8::internal::ZoneVector.1372", %"class.v8::internal::ZoneVector.1372"* %2378, i64 0, i32 0, i32 0, i32 1
  %2382 = bitcast i64*** %2381 to i64*
  %2383 = load i64, i64* %2382, align 8
  %2384 = inttoptr i64 %2377 to i64*
  %2385 = load i64, i64* %2384, align 8
  %2386 = sub i64 %2383, %2385
  %2387 = ashr exact i64 %2386, 3
  %2388 = icmp ugt i64 %2387, %2380
  br i1 %2388, label %2391, label %2389

2389:                                             ; preds = %2376
  %2390 = inttoptr i64 %2377 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %2390) #9
  unreachable

2391:                                             ; preds = %2376
  %2392 = inttoptr i64 %2385 to i64**
  %2393 = getelementptr inbounds i64*, i64** %2392, i64 %2380
  %2394 = load i64*, i64** %2393, align 8
  br label %2395

2395:                                             ; preds = %2391, %2374
  %2396 = phi i64* [ %2375, %2374 ], [ %2394, %2391 ]
  %2397 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12HeapConstantENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::compiler::JSGraph"* %27, i64* %2396) #8
  %2398 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2397, i64 0, i32 1, i32 0
  store i64 327155713, i64* %2398, align 8
  %2399 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2358, align 8
  %2400 = load %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"** %2359, align 8
  %2401 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder14ReferenceEqualEv(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"* %2400) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2360) #8
  store %"class.v8::internal::compiler::Node"* %2330, %"class.v8::internal::compiler::Node"** %2361, align 8
  store %"class.v8::internal::compiler::Node"* %2397, %"class.v8::internal::compiler::Node"** %2362, align 8
  %2402 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %2399, %"class.v8::internal::compiler::Operator"* %2401, i32 2, %"class.v8::internal::compiler::Node"** nonnull %2361, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2360) #8
  %2403 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2402, i64 0, i32 1, i32 0
  store i64 513, i64* %2403, align 8
  %2404 = icmp eq %"class.v8::internal::compiler::Node"* %2370, %2341
  br i1 %2404, label %2411, label %2405

2405:                                             ; preds = %2395
  %2406 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2358, align 8
  %2407 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %2363, align 8
  %2408 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6SelectENS0_21MachineRepresentationENS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %2407, i8 zeroext 8, i8 zeroext 0) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2364) #8
  store %"class.v8::internal::compiler::Node"* %2402, %"class.v8::internal::compiler::Node"** %2365, align 8
  store %"class.v8::internal::compiler::Node"* %2340, %"class.v8::internal::compiler::Node"** %2366, align 8
  store %"class.v8::internal::compiler::Node"* %2370, %"class.v8::internal::compiler::Node"** %2367, align 8
  %2409 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %2406, %"class.v8::internal::compiler::Operator"* %2408, i32 3, %"class.v8::internal::compiler::Node"** nonnull %2365, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2364) #8
  %2410 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2409, i64 0, i32 1, i32 0
  store i64 513, i64* %2410, align 8
  br label %2411

2411:                                             ; preds = %2405, %2395
  %2412 = phi %"class.v8::internal::compiler::Node"* [ %2409, %2405 ], [ %2402, %2395 ]
  %2413 = add nuw i64 %2371, 1
  %2414 = icmp eq i64 %2413, %2357
  br i1 %2414, label %2417, label %2415

2415:                                             ; preds = %2411
  %2416 = load i64, i64* %2342, align 8
  br label %2368

2417:                                             ; preds = %2411, %2345, %2338
  %2418 = phi %"class.v8::internal::compiler::Node"* [ %2341, %2345 ], [ %2341, %2338 ], [ %2412, %2411 ]
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope14SetReplacementEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %2418) #8
  br label %2635

2419:                                             ; preds = %2332, %2232, %2228, %2220
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %2225) #8
  br label %2635

2420:                                             ; preds = %3
  %2421 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 0, i32 0
  %2422 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2421, align 8
  %2423 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2422, i64 0, i32 0
  %2424 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2423, align 8
  %2425 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %2424, i64 0, i32 5
  %2426 = load i32, i32* %2425, align 4
  %2427 = icmp sgt i32 %2426, 0
  br i1 %2427, label %2429, label %2428, !prof !4

2428:                                             ; preds = %2420
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

2429:                                             ; preds = %2420
  %2430 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2422, i64 0, i32 3
  %2431 = load i32, i32* %2430, align 4
  %2432 = and i32 %2431, 251658240
  %2433 = icmp eq i32 %2432, 251658240
  %2434 = ptrtoint %"class.v8::internal::compiler::Node"* %2422 to i64
  %2435 = add i64 %2434, 32
  br i1 %2433, label %2436, label %2440

2436:                                             ; preds = %2429
  %2437 = inttoptr i64 %2435 to i64*
  %2438 = load i64, i64* %2437, align 8
  %2439 = add i64 %2438, 16
  br label %2440

2440:                                             ; preds = %2436, %2429
  %2441 = phi i64 [ %2439, %2436 ], [ %2435, %2429 ]
  %2442 = inttoptr i64 %2441 to %"class.v8::internal::compiler::Node"**
  %2443 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2442, align 8
  %2444 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1
  %2445 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2443, i64 0, i32 3
  %2446 = load i32, i32* %2445, align 4
  %2447 = and i32 %2446, 16777215
  %2448 = zext i32 %2447 to i64
  %2449 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %2444, i64 0, i32 0, i32 0
  %2450 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %2451 = bitcast %"class.v8::internal::compiler::Node"*** %2450 to i64*
  %2452 = load i64, i64* %2451, align 8
  %2453 = bitcast %"class.v8::internal::compiler::Sidetable"* %2444 to i64*
  %2454 = load i64, i64* %2453, align 8
  %2455 = sub i64 %2452, %2454
  %2456 = ashr exact i64 %2455, 3
  %2457 = icmp ugt i64 %2456, %2448
  %2458 = inttoptr i64 %2454 to %"class.v8::internal::compiler::Node"**
  br i1 %2457, label %2471, label %2459

2459:                                             ; preds = %2440
  %2460 = add nuw nsw i32 %2447, 1
  %2461 = zext i32 %2460 to i64
  %2462 = icmp ult i64 %2456, %2461
  br i1 %2462, label %2463, label %2467

2463:                                             ; preds = %2459
  %2464 = sub nsw i64 %2461, %2456
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %2449, i64 %2464) #8
  %2465 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %2444, i64 0, i32 0, i32 0, i32 0, i32 0
  %2466 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %2465, align 8
  br label %2471

2467:                                             ; preds = %2459
  %2468 = icmp ugt i64 %2456, %2461
  br i1 %2468, label %2469, label %2471

2469:                                             ; preds = %2467
  %2470 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2458, i64 %2461
  store %"class.v8::internal::compiler::Node"** %2470, %"class.v8::internal::compiler::Node"*** %2450, align 8
  br label %2471

2471:                                             ; preds = %2469, %2467, %2463, %2440
  %2472 = phi %"class.v8::internal::compiler::Node"** [ %2458, %2469 ], [ %2458, %2467 ], [ %2466, %2463 ], [ %2458, %2440 ]
  %2473 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2472, i64 %2448
  %2474 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2473, align 8
  %2475 = icmp eq %"class.v8::internal::compiler::Node"* %2474, null
  %2476 = select i1 %2475, %"class.v8::internal::compiler::Node"* %2443, %"class.v8::internal::compiler::Node"* %2474
  %2477 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2476, i64 0, i32 0
  %2478 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2477, align 8
  %2479 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %2478, i64 0, i32 2
  %2480 = load i16, i16* %2479, align 8
  switch i16 %2480, label %2482 [
    i16 197, label %2481
    i16 40, label %2481
    i16 30, label %2481
  ]

2481:                                             ; preds = %2471, %2471, %2471
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope14SetReplacementEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %2476) #8
  br label %2635

2482:                                             ; preds = %2471
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %2476) #8
  br label %2635

2483:                                             ; preds = %3
  %2484 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 0, i32 0
  %2485 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2484, align 8
  %2486 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2485, i64 0, i32 0
  %2487 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2486, align 8
  %2488 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %2487, i64 0, i32 5
  %2489 = load i32, i32* %2488, align 4
  %2490 = icmp sgt i32 %2489, 0
  br i1 %2490, label %2492, label %2491, !prof !4

2491:                                             ; preds = %2483
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

2492:                                             ; preds = %2483
  %2493 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2485, i64 0, i32 3
  %2494 = load i32, i32* %2493, align 4
  %2495 = and i32 %2494, 251658240
  %2496 = icmp eq i32 %2495, 251658240
  %2497 = ptrtoint %"class.v8::internal::compiler::Node"* %2485 to i64
  %2498 = add i64 %2497, 32
  br i1 %2496, label %2499, label %2503

2499:                                             ; preds = %2492
  %2500 = inttoptr i64 %2498 to i64*
  %2501 = load i64, i64* %2500, align 8
  %2502 = add i64 %2501, 16
  br label %2503

2503:                                             ; preds = %2499, %2492
  %2504 = phi i64 [ %2502, %2499 ], [ %2498, %2492 ]
  %2505 = inttoptr i64 %2504 to %"class.v8::internal::compiler::Node"**
  %2506 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2505, align 8
  %2507 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1
  %2508 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2506, i64 0, i32 3
  %2509 = load i32, i32* %2508, align 4
  %2510 = and i32 %2509, 16777215
  %2511 = zext i32 %2510 to i64
  %2512 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %2507, i64 0, i32 0, i32 0
  %2513 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %2514 = bitcast %"class.v8::internal::compiler::Node"*** %2513 to i64*
  %2515 = load i64, i64* %2514, align 8
  %2516 = bitcast %"class.v8::internal::compiler::Sidetable"* %2507 to i64*
  %2517 = load i64, i64* %2516, align 8
  %2518 = sub i64 %2515, %2517
  %2519 = ashr exact i64 %2518, 3
  %2520 = icmp ugt i64 %2519, %2511
  %2521 = inttoptr i64 %2517 to %"class.v8::internal::compiler::Node"**
  br i1 %2520, label %2534, label %2522

2522:                                             ; preds = %2503
  %2523 = add nuw nsw i32 %2510, 1
  %2524 = zext i32 %2523 to i64
  %2525 = icmp ult i64 %2519, %2524
  br i1 %2525, label %2526, label %2530

2526:                                             ; preds = %2522
  %2527 = sub nsw i64 %2524, %2519
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %2512, i64 %2527) #8
  %2528 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %2507, i64 0, i32 0, i32 0, i32 0, i32 0
  %2529 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %2528, align 8
  br label %2534

2530:                                             ; preds = %2522
  %2531 = icmp ugt i64 %2519, %2524
  br i1 %2531, label %2532, label %2534

2532:                                             ; preds = %2530
  %2533 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2521, i64 %2524
  store %"class.v8::internal::compiler::Node"** %2533, %"class.v8::internal::compiler::Node"*** %2513, align 8
  br label %2534

2534:                                             ; preds = %2532, %2530, %2526, %2503
  %2535 = phi %"class.v8::internal::compiler::Node"** [ %2521, %2532 ], [ %2521, %2530 ], [ %2529, %2526 ], [ %2521, %2503 ]
  %2536 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2535, i64 %2511
  %2537 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2536, align 8
  %2538 = icmp eq %"class.v8::internal::compiler::Node"* %2537, null
  %2539 = select i1 %2538, %"class.v8::internal::compiler::Node"* %2506, %"class.v8::internal::compiler::Node"* %2537
  %2540 = call %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %2539) #8
  %2541 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %2540, null
  br i1 %2541, label %2635, label %2542

2542:                                             ; preds = %2534
  %2543 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %2540, i64 0, i32 1
  %2544 = load i8, i8* %2543, align 8, !range !2
  %2545 = icmp eq i8 %2544, 0
  br i1 %2545, label %2546, label %2635

2546:                                             ; preds = %2542
  %2547 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %22, align 8
  %2548 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %2547, i64 0, i32 4
  %2549 = bitcast %"class.v8::internal::compiler::JSGraph"** %2548 to %"class.v8::internal::compiler::MachineGraph"**
  %2550 = load %"class.v8::internal::compiler::MachineGraph"*, %"class.v8::internal::compiler::MachineGraph"** %2549, align 8
  %2551 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %2550, i64 0, i32 4
  %2552 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2551, align 8
  %2553 = icmp eq %"class.v8::internal::compiler::Node"* %2552, null
  br i1 %2553, label %2554, label %2561

2554:                                             ; preds = %2546
  %2555 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %2550, i64 0, i32 0
  %2556 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2555, align 8
  %2557 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %2550, i64 0, i32 1
  %2558 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %2557, align 8
  %2559 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %2558) #8
  %2560 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %2556, %"class.v8::internal::compiler::Operator"* %2559, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #8
  store %"class.v8::internal::compiler::Node"* %2560, %"class.v8::internal::compiler::Node"** %2551, align 8
  br label %2561

2561:                                             ; preds = %2554, %2546
  %2562 = phi %"class.v8::internal::compiler::Node"* [ %2560, %2554 ], [ %2552, %2546 ]
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope14SetReplacementEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %2562) #8
  br label %2635

2563:                                             ; preds = %3
  %2564 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 5
  %2565 = load i32, i32* %2564, align 4
  %2566 = icmp sgt i32 %2565, 0
  br i1 %2566, label %2569, label %2567

2567:                                             ; preds = %2569, %2563
  %2568 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #8
  br i1 %2568, label %2574, label %2635

2569:                                             ; preds = %2563, %2569
  %2570 = phi i32 [ %2572, %2569 ], [ 0, %2563 ]
  %2571 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10ValueInputEi(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, i32 %2570) #8
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %2571) #8
  %2572 = add nuw nsw i32 %2570, 1
  %2573 = icmp eq i32 %2572, %2565
  br i1 %2573, label %2567, label %2569

2574:                                             ; preds = %2567
  %2575 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %22, align 8
  %2576 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %13, i64 0, i32 0, i32 0, i32 0
  %2577 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2576, align 8
  %2578 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2577, i64 0, i32 0
  %2579 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2578, align 8
  %2580 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %2579) #8
  br i1 %2580, label %2582, label %2581, !prof !4

2581:                                             ; preds = %2574
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0)) #9
  unreachable

2582:                                             ; preds = %2574
  %2583 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2578, align 8
  %2584 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %2583, i64 0, i32 5
  %2585 = load i32, i32* %2584, align 4
  %2586 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2577, i64 0, i32 3
  %2587 = load i32, i32* %2586, align 4
  %2588 = and i32 %2587, 251658240
  %2589 = icmp eq i32 %2588, 251658240
  %2590 = ptrtoint %"class.v8::internal::compiler::Node"* %2577 to i64
  %2591 = add i64 %2590, 32
  br i1 %2589, label %2592, label %2596

2592:                                             ; preds = %2582
  %2593 = inttoptr i64 %2591 to i64*
  %2594 = load i64, i64* %2593, align 8
  %2595 = add i64 %2594, 16
  br label %2596

2596:                                             ; preds = %2582, %2592
  %2597 = phi i64 [ %2595, %2592 ], [ %2591, %2582 ]
  %2598 = inttoptr i64 %2597 to %"class.v8::internal::compiler::Node"**
  %2599 = sext i32 %2585 to i64
  %2600 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2598, i64 %2599
  %2601 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2600, align 8
  %2602 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %2575, i64 0, i32 1
  %2603 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2601, i64 0, i32 3
  %2604 = load i32, i32* %2603, align 4
  %2605 = and i32 %2604, 16777215
  %2606 = zext i32 %2605 to i64
  %2607 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %2602, i64 0, i32 0, i32 0
  %2608 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %2575, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %2609 = bitcast %"class.v8::internal::compiler::Node"*** %2608 to i64*
  %2610 = load i64, i64* %2609, align 8
  %2611 = bitcast %"class.v8::internal::compiler::Sidetable"* %2602 to i64*
  %2612 = load i64, i64* %2611, align 8
  %2613 = sub i64 %2610, %2612
  %2614 = ashr exact i64 %2613, 3
  %2615 = icmp ugt i64 %2614, %2606
  %2616 = inttoptr i64 %2612 to %"class.v8::internal::compiler::Node"**
  br i1 %2615, label %2629, label %2617

2617:                                             ; preds = %2596
  %2618 = add nuw nsw i32 %2605, 1
  %2619 = zext i32 %2618 to i64
  %2620 = icmp ult i64 %2614, %2619
  br i1 %2620, label %2621, label %2625

2621:                                             ; preds = %2617
  %2622 = sub nsw i64 %2619, %2614
  call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %2607, i64 %2622) #8
  %2623 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %2602, i64 0, i32 0, i32 0, i32 0, i32 0
  %2624 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %2623, align 8
  br label %2629

2625:                                             ; preds = %2617
  %2626 = icmp ugt i64 %2614, %2619
  br i1 %2626, label %2627, label %2629

2627:                                             ; preds = %2625
  %2628 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2616, i64 %2619
  store %"class.v8::internal::compiler::Node"** %2628, %"class.v8::internal::compiler::Node"*** %2608, align 8
  br label %2629

2629:                                             ; preds = %2627, %2625, %2621, %2596
  %2630 = phi %"class.v8::internal::compiler::Node"** [ %2616, %2627 ], [ %2616, %2625 ], [ %2624, %2621 ], [ %2616, %2596 ]
  %2631 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2630, i64 %2606
  %2632 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2631, align 8
  %2633 = icmp eq %"class.v8::internal::compiler::Node"* %2632, null
  %2634 = select i1 %2633, %"class.v8::internal::compiler::Node"* %2601, %"class.v8::internal::compiler::Node"* %2632
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13, %"class.v8::internal::compiler::Node"* %2634) #8
  br label %2635

2635:                                             ; preds = %88, %172, %3, %3, %136, %143, %146, %308, %474, %476, %690, %692, %876, %877, %1113, %1261, %1521, %1522, %1523, %1555, %1689, %1919, %1924, %2087, %2163, %2168, %2328, %2417, %2419, %2481, %2482, %2534, %2542, %2561, %2567, %2629
  call void @_ZN2v88internal8compiler21EscapeAnalysisTracker5ScopeD2Ev(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %16) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler21EscapeAnalysisTracker5ScopeD2Ev(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 4
  %3 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %5, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %8, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 16777215
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %6, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::compiler::Node"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.v8::internal::compiler::Sidetable"* %6 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp ugt i64 %20, %12
  %22 = inttoptr i64 %18 to %"class.v8::internal::compiler::Node"**
  br i1 %21, label %35, label %23

23:                                               ; preds = %1
  %24 = add nuw nsw i32 %11, 1
  %25 = zext i32 %24 to i64
  %26 = icmp ult i64 %20, %25
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = sub nsw i64 %25, %20
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %13, i64 %28) #8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %29, align 8
  br label %35

31:                                               ; preds = %23
  %32 = icmp ugt i64 %20, %25
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %22, i64 %25
  store %"class.v8::internal::compiler::Node"** %34, %"class.v8::internal::compiler::Node"*** %14, align 8
  br label %35

35:                                               ; preds = %1, %27, %31, %33
  %36 = phi %"class.v8::internal::compiler::Node"** [ %22, %33 ], [ %22, %31 ], [ %30, %27 ], [ %22, %1 ]
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, i64 %12
  %38 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, align 8
  %39 = icmp eq %"class.v8::internal::compiler::Node"* %3, %38
  br i1 %39, label %40, label %125

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 3
  %42 = load %"class.v8::internal::compiler::VirtualObject"*, %"class.v8::internal::compiler::VirtualObject"** %41, align 8
  %43 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %4, align 8
  %44 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %7, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %44, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 16777215
  %48 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %47) #8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %43, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %119, label %52

52:                                               ; preds = %40
  %53 = tail call i64 @llvm.ctpop.i64(i64 %50) #8, !range !3
  %54 = icmp ugt i64 %53, 1
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  %56 = add i64 %50, -1
  %57 = and i64 %56, %48
  br label %62

58:                                               ; preds = %52
  %59 = icmp ult i64 %48, %50
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %48, %50
  br label %62

62:                                               ; preds = %60, %58, %55
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %48, %58 ]
  %64 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %43, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %65, i64 %63
  %67 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %67, null
  br i1 %68, label %119, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %67, i64 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %71, null
  br i1 %72, label %119, label %73

73:                                               ; preds = %69
  %74 = add i64 %50, -1
  br i1 %54, label %75, label %97

75:                                               ; preds = %73, %93
  %76 = phi %"struct.std::__1::__hash_node_base.1319"* [ %95, %93 ], [ %71, %73 ]
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %76, i64 1
  %78 = bitcast %"struct.std::__1::__hash_node_base.1319"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %48, %79
  br i1 %80, label %88, label %81

81:                                               ; preds = %75
  %82 = icmp ult i64 %79, %50
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = urem i64 %79, %50
  br label %85

85:                                               ; preds = %83, %81
  %86 = phi i64 [ %84, %83 ], [ %79, %81 ]
  %87 = icmp eq i64 %86, %63
  br i1 %87, label %93, label %119

88:                                               ; preds = %75
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %76, i64 2
  %90 = bitcast %"struct.std::__1::__hash_node_base.1319"* %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, %47
  br i1 %92, label %115, label %93

93:                                               ; preds = %88, %85
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %76, i64 0, i32 0
  %95 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %95, null
  br i1 %96, label %119, label %75

97:                                               ; preds = %73, %111
  %98 = phi %"struct.std::__1::__hash_node_base.1319"* [ %113, %111 ], [ %71, %73 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %98, i64 1
  %100 = bitcast %"struct.std::__1::__hash_node_base.1319"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = icmp eq i64 %48, %101
  br i1 %102, label %106, label %103

103:                                              ; preds = %97
  %104 = and i64 %101, %74
  %105 = icmp eq i64 %104, %63
  br i1 %105, label %111, label %119

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %98, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base.1319"* %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, %47
  br i1 %110, label %115, label %111

111:                                              ; preds = %106, %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %98, i64 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %112, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %113, null
  br i1 %114, label %119, label %97

115:                                              ; preds = %106, %88
  %116 = phi %"struct.std::__1::__hash_node_base.1319"* [ %76, %88 ], [ %98, %106 ]
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %116, i64 3
  %118 = bitcast %"struct.std::__1::__hash_node_base.1319"* %117 to %"class.v8::internal::compiler::VirtualObject"**
  br label %121

119:                                              ; preds = %111, %103, %93, %85, %69, %62, %40
  %120 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %43, i64 0, i32 0, i32 0
  br label %121

121:                                              ; preds = %115, %119
  %122 = phi %"class.v8::internal::compiler::VirtualObject"** [ %118, %115 ], [ %120, %119 ]
  %123 = load %"class.v8::internal::compiler::VirtualObject"*, %"class.v8::internal::compiler::VirtualObject"** %122, align 8
  %124 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %42, %123
  br i1 %124, label %129, label %125

125:                                              ; preds = %121, %35
  %126 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 0, i32 0, i32 1
  %127 = load %"class.v8::internal::compiler::EffectGraphReducer::Reduction"*, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"** %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer::Reduction", %"class.v8::internal::compiler::EffectGraphReducer::Reduction"* %127, i64 0, i32 0
  store i8 1, i8* %128, align 1
  br label %129

129:                                              ; preds = %121, %125
  %130 = bitcast %"class.v8::internal::compiler::Node"** %2 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %4, align 8
  %133 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %132, i64 0, i32 1
  %134 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %7, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %134, i64 0, i32 3
  %136 = load i32, i32* %135, align 4
  %137 = and i32 %136, 16777215
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %133, i64 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %132, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::compiler::Sidetable"* %133 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = sub i64 %142, %144
  %146 = ashr exact i64 %145, 3
  %147 = icmp ugt i64 %146, %138
  %148 = inttoptr i64 %144 to %"class.v8::internal::compiler::Node"**
  br i1 %147, label %161, label %149

149:                                              ; preds = %129
  %150 = add nuw nsw i32 %137, 1
  %151 = zext i32 %150 to i64
  %152 = icmp ult i64 %146, %151
  br i1 %152, label %153, label %157

153:                                              ; preds = %149
  %154 = sub nsw i64 %151, %146
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %139, i64 %154) #8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %133, i64 0, i32 0, i32 0, i32 0, i32 0
  %156 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %155, align 8
  br label %161

157:                                              ; preds = %149
  %158 = icmp ugt i64 %146, %151
  br i1 %158, label %159, label %161

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %148, i64 %151
  store %"class.v8::internal::compiler::Node"** %160, %"class.v8::internal::compiler::Node"*** %140, align 8
  br label %161

161:                                              ; preds = %129, %153, %157, %159
  %162 = phi %"class.v8::internal::compiler::Node"** [ %148, %159 ], [ %148, %157 ], [ %156, %153 ], [ %148, %129 ]
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 %138
  %164 = bitcast %"class.v8::internal::compiler::Node"** %163 to i64*
  store i64 %131, i64* %164, align 8
  %165 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %4, align 8
  %166 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %165, i64 0, i32 0
  %167 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %7, align 8
  %168 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 3
  %169 = load %"class.v8::internal::compiler::VirtualObject"*, %"class.v8::internal::compiler::VirtualObject"** %168, align 8
  tail call void @_ZN2v88internal8compiler15SparseSidetableIPNS1_13VirtualObjectEE3SetEPKNS1_4NodeES4_(%"class.v8::internal::compiler::SparseSidetable.1305"* %166, %"class.v8::internal::compiler::Node"* %167, %"class.v8::internal::compiler::VirtualObject"* %169)
  %170 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler15VariableTracker5ScopeD2Ev(%"class.v8::internal::compiler::VariableTracker::Scope"* %170) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14EscapeAnalysisC2EPNS1_7JSGraphEPNS0_11TickCounterEPNS0_4ZoneE(%"class.v8::internal::compiler::EscapeAnalysis"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::TickCounter"*, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.v8::internal::compiler::JSGraph"* %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %6, align 8
  %8 = ptrtoint %"class.v8::internal::compiler::EscapeAnalysis"* %0 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 0
  store i8 4, i8* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::Graph"* %7, %"class.v8::internal::compiler::Graph"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 2, i32 0
  tail call void @_ZN2v88internal8compiler14NodeMarkerBaseC2EPNS1_5GraphEj(%"class.v8::internal::compiler::NodeMarkerBase"* %11, %"class.v8::internal::compiler::Graph"* %7, i32 4) #8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 3
  %13 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %14 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %15 = bitcast %"struct.std::__1::__compressed_pair_elem.23"* %14 to i64*
  %16 = bitcast %"class.v8::internal::ZoneStack"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #8
  store i64 %13, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %19 = bitcast %"struct.std::__1::__compressed_pair_elem.26"* %18 to i64*
  %20 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #8
  store i64 %13, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %22 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %23 = bitcast %"struct.std::__1::__compressed_pair_elem.37"* %22 to i64*
  %24 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 40, i1 false) #8
  store i64 %13, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %26 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %27 = bitcast %"struct.std::__1::__compressed_pair_elem.41"* %26 to i64*
  %28 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #8
  store i64 %13, i64* %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %30 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"** %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 5
  %32 = bitcast %"class.std::__1::function"* %31 to i64*
  store i64 %8, i64* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 5, i32 0, i32 1
  %34 = bitcast %"struct.std::__1::__function::__policy_invoker"* %33 to i64*
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN2v88internal8compiler4NodeEPNS4_18EffectGraphReducer9ReductionEEE11__call_implINS0_20__default_alloc_funcIZNS4_14EscapeAnalysisC1EPNS4_7JSGraphEPNS3_11TickCounterEPNS3_4ZoneEE3$_0SA_EEEEvPKNS0_16__policy_storageES6_S9_" to i64), i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 5, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal8compiler14EscapeAnalysisC1EPNS6_7JSGraphEPNS5_11TickCounterEPNS5_4ZoneEE3$_0FvPNS6_4NodeEPNS6_18EffectGraphReducer9ReductionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0, i32 6
  store %"class.v8::internal::TickCounter"* %2, %"class.v8::internal::TickCounter"** %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 1
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %41, %39
  %43 = icmp ult i64 %42, 272
  br i1 %43, label %44, label %46, !prof !5

44:                                               ; preds = %4
  %45 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 272) #8
  br label %48

46:                                               ; preds = %4
  %47 = add i64 %39, 272
  store i64 %47, i64* %38, align 8
  br label %48

48:                                               ; preds = %44, %46
  %49 = phi i64 [ %45, %44 ], [ %39, %46 ]
  %50 = inttoptr i64 %49 to %"class.v8::internal::compiler::EscapeAnalysisTracker"*
  %51 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 0
  %52 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %50, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler15SparseSidetableIPNS1_13VirtualObjectEEC2EPNS0_4ZoneES4_(%"class.v8::internal::compiler::SparseSidetable.1305"* %52, %"class.v8::internal::Zone"* %3, %"class.v8::internal::compiler::VirtualObject"* null) #8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %50, i64 0, i32 1
  %54 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %50, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %55 = bitcast %"struct.std::__1::__compressed_pair_elem.1304"* %54 to i64*
  %56 = bitcast %"class.v8::internal::compiler::Sidetable"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #8
  store i64 %13, i64* %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %50, i64 0, i32 2
  tail call void @_ZN2v88internal8compiler15VariableTrackerC2EPNS1_7JSGraphEPNS1_18EffectGraphReducerEPNS0_4ZoneE(%"class.v8::internal::compiler::VariableTracker"* %57, %"class.v8::internal::compiler::JSGraph"* %1, %"class.v8::internal::compiler::EffectGraphReducer"* %51, %"class.v8::internal::Zone"* %3) #8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %50, i64 0, i32 3
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %50, i64 0, i32 4
  store %"class.v8::internal::compiler::JSGraph"* %1, %"class.v8::internal::compiler::JSGraph"** %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %50, i64 0, i32 5
  store %"class.v8::internal::Zone"* %3, %"class.v8::internal::Zone"** %60, align 8
  store %"class.v8::internal::compiler::EscapeAnalysisTracker"* %50, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %37, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysis", %"class.v8::internal::compiler::EscapeAnalysis"* %0, i64 0, i32 2
  %62 = bitcast %"class.v8::internal::compiler::JSGraph"** %61 to i64*
  store i64 %5, i64* %62, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler20EscapeAnalysisResult16GetReplacementOfEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisResult"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisResult", %"class.v8::internal::compiler::EscapeAnalysisResult"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 16777215
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %5, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.v8::internal::compiler::Node"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::compiler::Sidetable"* %5 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  %18 = icmp ugt i64 %17, %9
  %19 = inttoptr i64 %15 to %"class.v8::internal::compiler::Node"**
  br i1 %18, label %32, label %20

20:                                               ; preds = %2
  %21 = add nuw nsw i32 %8, 1
  %22 = zext i32 %21 to i64
  %23 = icmp ult i64 %17, %22
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = sub nsw i64 %22, %17
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %10, i64 %25) #8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %26, align 8
  br label %32

28:                                               ; preds = %20
  %29 = icmp ugt i64 %17, %22
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, i64 %22
  store %"class.v8::internal::compiler::Node"** %31, %"class.v8::internal::compiler::Node"*** %11, align 8
  br label %32

32:                                               ; preds = %2, %24, %28, %30
  %33 = phi %"class.v8::internal::compiler::Node"** [ %19, %30 ], [ %19, %28 ], [ %27, %24 ], [ %19, %2 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %33, i64 %9
  %35 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, align 8
  ret %"class.v8::internal::compiler::Node"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler20EscapeAnalysisResult21GetVirtualObjectFieldEPKNS1_13VirtualObjectEiPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisResult"* nocapture readonly, %"class.v8::internal::compiler::VirtualObject"*, i32, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisResult", %"class.v8::internal::compiler::EscapeAnalysisResult"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %6, i64 0, i32 2
  %8 = and i32 %2, 3
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !4

10:                                               ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0)) #9
  unreachable

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %1, i64 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %16, label %15, !prof !4

15:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0)) #9
  unreachable

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %1, i64 0, i32 3, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %19 = bitcast %"class.v8::internal::compiler::Variable"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.1307"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = trunc i64 %23 to i32
  %25 = and i32 %24, -4
  %26 = icmp sgt i32 %25, %2
  br i1 %26, label %27, label %38

27:                                               ; preds = %16
  %28 = sdiv i32 %2, 4
  %29 = sext i32 %28 to i64
  %30 = ashr exact i64 %23, 2
  %31 = icmp ugt i64 %30, %29
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.std::__1::vector.1307"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %33) #9
  unreachable

34:                                               ; preds = %27
  %35 = inttoptr i64 %22 to %"class.v8::internal::compiler::Variable"*
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %35, i64 %29, i32 0
  %37 = load i32, i32* %36, align 4
  br label %39

38:                                               ; preds = %16
  tail call void @_ZN2v82V817FromJustIsNothingEv() #8
  br label %39

39:                                               ; preds = %34, %38
  %40 = phi i32 [ %37, %34 ], [ -1, %38 ]
  %41 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15VariableTracker3GetENS1_8VariableEPNS1_4NodeE(%"class.v8::internal::compiler::VariableTracker"* %7, i32 %40, %"class.v8::internal::compiler::Node"* %3)
  ret %"class.v8::internal::compiler::Node"* %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15VariableTracker3GetENS1_8VariableEPNS1_4NodeE(%"class.v8::internal::compiler::VariableTracker"*, i32, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16777215
  %7 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %6) #8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %78, label %11

11:                                               ; preds = %3
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #8, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, -1
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ult i64 %7, %9
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %26, null
  br i1 %27, label %78, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  br i1 %13, label %34, label %56

34:                                               ; preds = %32, %52
  %35 = phi %"struct.std::__1::__hash_node_base.1279"* [ %54, %52 ], [ %30, %32 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.1279"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %7, %38
  br i1 %39, label %47, label %40

40:                                               ; preds = %34
  %41 = icmp ult i64 %38, %9
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %38, %9
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi i64 [ %43, %42 ], [ %38, %40 ]
  %46 = icmp eq i64 %45, %22
  br i1 %46, label %52, label %78

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %35, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base.1279"* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %6
  br i1 %51, label %74, label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %35, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %54, null
  br i1 %55, label %78, label %34

56:                                               ; preds = %32, %70
  %57 = phi %"struct.std::__1::__hash_node_base.1279"* [ %72, %70 ], [ %30, %32 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1279"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %7, %60
  br i1 %61, label %65, label %62

62:                                               ; preds = %56
  %63 = and i64 %60, %33
  %64 = icmp eq i64 %63, %22
  br i1 %64, label %70, label %78

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %57, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.1279"* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %6
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %57, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %72, null
  br i1 %73, label %78, label %56

74:                                               ; preds = %65, %47
  %75 = phi %"struct.std::__1::__hash_node_base.1279"* [ %35, %47 ], [ %57, %65 ]
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %75, i64 3
  %77 = bitcast %"struct.std::__1::__hash_node_base.1279"* %76 to %"class.v8::internal::compiler::VariableTracker::State"*
  br label %80

78:                                               ; preds = %70, %62, %52, %44, %28, %21, %3
  %79 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %0, i64 0, i32 2, i32 0
  br label %80

80:                                               ; preds = %74, %78
  %81 = phi %"class.v8::internal::compiler::VariableTracker::State"* [ %77, %74 ], [ %79, %78 ]
  %82 = tail call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler15VariableTracker5State3GetENS1_8VariableE(%"class.v8::internal::compiler::VariableTracker::State"* %81, i32 %1)
  ret %"class.v8::internal::compiler::Node"* %82
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler20EscapeAnalysisResult16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisResult"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisResult", %"class.v8::internal::compiler::EscapeAnalysisResult"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16777215
  %8 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %7) #8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %79, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #8, !range !3
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, -1
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ult i64 %8, %10
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %27, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %31, null
  br i1 %32, label %79, label %33

33:                                               ; preds = %29
  %34 = add i64 %10, -1
  br i1 %14, label %35, label %57

35:                                               ; preds = %33, %53
  %36 = phi %"struct.std::__1::__hash_node_base.1319"* [ %55, %53 ], [ %31, %33 ]
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %36, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base.1319"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %8, %39
  br i1 %40, label %48, label %41

41:                                               ; preds = %35
  %42 = icmp ult i64 %39, %10
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %39, %10
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi i64 [ %44, %43 ], [ %39, %41 ]
  %47 = icmp eq i64 %46, %23
  br i1 %47, label %53, label %79

48:                                               ; preds = %35
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %36, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.1319"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %7
  br i1 %52, label %75, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %36, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %55, null
  br i1 %56, label %79, label %35

57:                                               ; preds = %33, %71
  %58 = phi %"struct.std::__1::__hash_node_base.1319"* [ %73, %71 ], [ %31, %33 ]
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %58, i64 1
  %60 = bitcast %"struct.std::__1::__hash_node_base.1319"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %8, %61
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = and i64 %61, %34
  %65 = icmp eq i64 %64, %23
  br i1 %65, label %71, label %79

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %58, i64 2
  %68 = bitcast %"struct.std::__1::__hash_node_base.1319"* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, %7
  br i1 %70, label %75, label %71

71:                                               ; preds = %66, %63
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %58, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %72, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %73, null
  br i1 %74, label %79, label %57

75:                                               ; preds = %66, %48
  %76 = phi %"struct.std::__1::__hash_node_base.1319"* [ %36, %48 ], [ %58, %66 ]
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %76, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base.1319"* %77 to %"class.v8::internal::compiler::VirtualObject"**
  br label %81

79:                                               ; preds = %71, %63, %53, %45, %29, %22, %2
  %80 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 0, i32 0
  br label %81

81:                                               ; preds = %75, %79
  %82 = phi %"class.v8::internal::compiler::VirtualObject"** [ %78, %75 ], [ %80, %79 ]
  %83 = load %"class.v8::internal::compiler::VirtualObject"*, %"class.v8::internal::compiler::VirtualObject"** %82, align 8
  ret %"class.v8::internal::compiler::VirtualObject"* %83
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13VirtualObjectC2EPNS1_15VariableTrackerEji(%"class.v8::internal::compiler::VirtualObject"*, %"class.v8::internal::compiler::VariableTracker"* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.v8::internal::compiler::VariableTracker"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %8 = bitcast %"struct.std::__1::__compressed_pair_elem.1304"* %7 to i64*
  %9 = bitcast %"class.v8::internal::compiler::VirtualObject"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #8
  store i64 %6, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %0, i64 0, i32 1
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %0, i64 0, i32 2
  store i32 %2, i32* %11, align 4
  %12 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %0, i64 0, i32 3
  %13 = load i64, i64* %5, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 1
  %15 = bitcast %"struct.std::__1::__compressed_pair_elem.1311"* %14 to i64*
  %16 = bitcast %"class.v8::internal::ZoneVector.1306"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #8
  store i64 %13, i64* %15, align 8
  %17 = sdiv i32 %3, 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.v8::internal::compiler::Variable"** %19 to i64*
  %21 = bitcast %"class.v8::internal::ZoneVector.1306"* %12 to i64*
  %22 = add i32 %3, 3
  %23 = icmp ugt i32 %22, 6
  %24 = inttoptr i64 %13 to %"class.v8::internal::Zone"*
  br i1 %23, label %25, label %215

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %27 = bitcast %"class.v8::internal::compiler::Variable"** %26 to i64*
  %28 = shl nsw i64 %18, 2
  %29 = add nsw i64 %28, 7
  %30 = and i64 %29, -8
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %24, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %24, i64 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %32
  %36 = icmp ugt i64 %30, %35
  br i1 %36, label %37, label %39, !prof !5

37:                                               ; preds = %25
  %38 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %24, i64 %30) #8
  br label %41

39:                                               ; preds = %25
  %40 = add i64 %32, %30
  store i64 %40, i64* %31, align 8
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i64 [ %38, %37 ], [ %32, %39 ]
  %43 = inttoptr i64 %42 to %"class.v8::internal::compiler::Variable"*
  %44 = inttoptr i64 %42 to i8*
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %43, i64 %18
  %46 = ptrtoint %"class.v8::internal::compiler::Variable"* %45 to i64
  %47 = getelementptr inbounds %"class.v8::internal::ZoneVector.1306", %"class.v8::internal::ZoneVector.1306"* %12, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.v8::internal::compiler::Variable"*, %"class.v8::internal::compiler::Variable"** %47, align 8
  %49 = ptrtoint %"class.v8::internal::compiler::Variable"* %48 to i64
  %50 = load %"class.v8::internal::compiler::Variable"*, %"class.v8::internal::compiler::Variable"** %26, align 8
  %51 = icmp eq %"class.v8::internal::compiler::Variable"* %50, %48
  br i1 %51, label %206, label %52

52:                                               ; preds = %41
  %53 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %50, i64 -1, i32 0
  %54 = ptrtoint i32* %53 to i64
  %55 = sub i64 %54, %49
  %56 = lshr i64 %55, 2
  %57 = add nuw nsw i64 %56, 1
  %58 = icmp ult i64 %57, 8
  br i1 %58, label %147, label %59

59:                                               ; preds = %52
  %60 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %50, i64 -1, i32 0
  %61 = ptrtoint i32* %60 to i64
  %62 = sub i64 %61, %49
  %63 = lshr i64 %62, 2
  %64 = xor i64 %63, -1
  %65 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %43, i64 %64
  %66 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %50, i64 %64
  %67 = bitcast %"class.v8::internal::compiler::Variable"* %66 to i8*
  %68 = icmp ult %"class.v8::internal::compiler::Variable"* %65, %50
  %69 = icmp ult i8* %67, %44
  %70 = and i1 %68, %69
  br i1 %70, label %147, label %71

71:                                               ; preds = %59
  %72 = and i64 %57, 9223372036854775800
  %73 = sub nsw i64 0, %72
  %74 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %43, i64 %73
  %75 = sub nsw i64 0, %72
  %76 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %50, i64 %75
  %77 = add nsw i64 %72, -8
  %78 = lshr exact i64 %77, 3
  %79 = add nuw nsw i64 %78, 1
  %80 = and i64 %79, 1
  %81 = icmp eq i64 %77, 0
  br i1 %81, label %126, label %82

82:                                               ; preds = %71
  %83 = sub nuw nsw i64 %79, %80
  %84 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %50, i64 -1
  %85 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %50, i64 -1
  br label %86

86:                                               ; preds = %86, %82
  %87 = phi i64 [ 0, %82 ], [ %121, %86 ]
  %88 = phi i64 [ %83, %82 ], [ %122, %86 ]
  %89 = sub i64 0, %87
  %90 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %43, i64 %89
  %91 = sub i64 0, %87
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %84, i64 %91
  %93 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %92, i64 0, i32 0
  %94 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %90, i64 -1, i32 0
  %95 = getelementptr inbounds i32, i32* %93, i64 -3
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !61
  %98 = getelementptr inbounds i32, i32* %93, i64 -7
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !61
  %101 = getelementptr inbounds i32, i32* %94, i64 -3
  %102 = bitcast i32* %101 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %102, align 4, !alias.scope !64, !noalias !61
  %103 = getelementptr inbounds i32, i32* %94, i64 -7
  %104 = bitcast i32* %103 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %104, align 4, !alias.scope !64, !noalias !61
  %105 = sub nuw nsw i64 -8, %87
  %106 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %43, i64 %105
  %107 = sub nuw nsw i64 -8, %87
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %85, i64 %107
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %108, i64 0, i32 0
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %106, i64 -1, i32 0
  %111 = getelementptr inbounds i32, i32* %109, i64 -3
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4, !alias.scope !61
  %114 = getelementptr inbounds i32, i32* %109, i64 -7
  %115 = bitcast i32* %114 to <4 x i32>*
  %116 = load <4 x i32>, <4 x i32>* %115, align 4, !alias.scope !61
  %117 = getelementptr inbounds i32, i32* %110, i64 -3
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %118, align 4, !alias.scope !64, !noalias !61
  %119 = getelementptr inbounds i32, i32* %110, i64 -7
  %120 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %116, <4 x i32>* %120, align 4, !alias.scope !64, !noalias !61
  %121 = add i64 %87, 16
  %122 = add i64 %88, -2
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %86, !llvm.loop !66

124:                                              ; preds = %86
  %125 = sub nuw nsw i64 -16, %87
  br label %126

126:                                              ; preds = %124, %71
  %127 = phi i64 [ 0, %71 ], [ %125, %124 ]
  %128 = icmp eq i64 %80, 0
  br i1 %128, label %145, label %129

129:                                              ; preds = %126
  %130 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %43, i64 %127
  %131 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %50, i64 -1
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %131, i64 %127
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %132, i64 0, i32 0
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %130, i64 -1, i32 0
  %135 = getelementptr inbounds i32, i32* %133, i64 -3
  %136 = bitcast i32* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4, !alias.scope !61
  %138 = getelementptr inbounds i32, i32* %133, i64 -7
  %139 = bitcast i32* %138 to <4 x i32>*
  %140 = load <4 x i32>, <4 x i32>* %139, align 4, !alias.scope !61
  %141 = getelementptr inbounds i32, i32* %134, i64 -3
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %142, align 4, !alias.scope !64, !noalias !61
  %143 = getelementptr inbounds i32, i32* %134, i64 -7
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> %140, <4 x i32>* %144, align 4, !alias.scope !64, !noalias !61
  br label %145

145:                                              ; preds = %126, %129
  %146 = icmp eq i64 %57, %72
  br i1 %146, label %203, label %147

147:                                              ; preds = %145, %59, %52
  %148 = phi %"class.v8::internal::compiler::Variable"* [ %43, %59 ], [ %43, %52 ], [ %74, %145 ]
  %149 = phi %"class.v8::internal::compiler::Variable"* [ %50, %59 ], [ %50, %52 ], [ %76, %145 ]
  %150 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %149, i64 -1, i32 0
  %151 = ptrtoint i32* %150 to i64
  %152 = sub i64 %151, %49
  %153 = lshr i64 %152, 2
  %154 = add nuw nsw i64 %153, 1
  %155 = and i64 %154, 7
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %168, label %157

157:                                              ; preds = %147, %157
  %158 = phi %"class.v8::internal::compiler::Variable"* [ %165, %157 ], [ %148, %147 ]
  %159 = phi %"class.v8::internal::compiler::Variable"* [ %161, %157 ], [ %149, %147 ]
  %160 = phi i64 [ %166, %157 ], [ %155, %147 ]
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %159, i64 -1
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %161, i64 0, i32 0
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %158, i64 -1, i32 0
  %164 = load i32, i32* %162, align 4
  store i32 %164, i32* %163, align 4
  %165 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %158, i64 -1
  %166 = add i64 %160, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %157, !llvm.loop !67

168:                                              ; preds = %157, %147
  %169 = phi %"class.v8::internal::compiler::Variable"* [ undef, %147 ], [ %165, %157 ]
  %170 = phi %"class.v8::internal::compiler::Variable"* [ %148, %147 ], [ %165, %157 ]
  %171 = phi %"class.v8::internal::compiler::Variable"* [ %149, %147 ], [ %161, %157 ]
  %172 = icmp ult i64 %152, 28
  br i1 %172, label %203, label %173

173:                                              ; preds = %168, %173
  %174 = phi %"class.v8::internal::compiler::Variable"* [ %201, %173 ], [ %170, %168 ]
  %175 = phi %"class.v8::internal::compiler::Variable"* [ %197, %173 ], [ %171, %168 ]
  %176 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %175, i64 -1, i32 0
  %177 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %174, i64 -1, i32 0
  %178 = load i32, i32* %176, align 4
  store i32 %178, i32* %177, align 4
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %175, i64 -2, i32 0
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %174, i64 -2, i32 0
  %181 = load i32, i32* %179, align 4
  store i32 %181, i32* %180, align 4
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %175, i64 -3, i32 0
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %174, i64 -3, i32 0
  %184 = load i32, i32* %182, align 4
  store i32 %184, i32* %183, align 4
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %175, i64 -4, i32 0
  %186 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %174, i64 -4, i32 0
  %187 = load i32, i32* %185, align 4
  store i32 %187, i32* %186, align 4
  %188 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %175, i64 -5, i32 0
  %189 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %174, i64 -5, i32 0
  %190 = load i32, i32* %188, align 4
  store i32 %190, i32* %189, align 4
  %191 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %175, i64 -6, i32 0
  %192 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %174, i64 -6, i32 0
  %193 = load i32, i32* %191, align 4
  store i32 %193, i32* %192, align 4
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %175, i64 -7, i32 0
  %195 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %174, i64 -7, i32 0
  %196 = load i32, i32* %194, align 4
  store i32 %196, i32* %195, align 4
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %175, i64 -8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %197, i64 0, i32 0
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %174, i64 -8, i32 0
  %200 = load i32, i32* %198, align 4
  store i32 %200, i32* %199, align 4
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %174, i64 -8
  %202 = icmp eq %"class.v8::internal::compiler::Variable"* %197, %48
  br i1 %202, label %203, label %173, !llvm.loop !68

203:                                              ; preds = %168, %173, %145
  %204 = phi %"class.v8::internal::compiler::Variable"* [ %74, %145 ], [ %169, %168 ], [ %201, %173 ]
  %205 = ptrtoint %"class.v8::internal::compiler::Variable"* %204 to i64
  br label %206

206:                                              ; preds = %41, %203
  %207 = phi i64 [ %205, %203 ], [ %42, %41 ]
  store i64 %207, i64* %21, align 8
  store i64 %42, i64* %27, align 8
  store i64 %46, i64* %20, align 8
  %208 = icmp sgt i32 %3, 3
  br i1 %208, label %209, label %215

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.v8::internal::compiler::VariableTracker", %"class.v8::internal::compiler::VariableTracker"* %1, i64 0, i32 5
  %211 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %212 = bitcast %"class.v8::internal::compiler::Variable"** %211 to i64*
  %213 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %214 = getelementptr inbounds %"class.v8::internal::ZoneVector.1306", %"class.v8::internal::ZoneVector.1306"* %12, i64 0, i32 0, i32 0, i32 0
  br label %216

215:                                              ; preds = %434, %4, %206
  ret void

216:                                              ; preds = %434, %209
  %217 = phi i32 [ 0, %209 ], [ %435, %434 ]
  %218 = load i32, i32* %210, align 8
  %219 = add nsw i32 %218, 1
  store i32 %219, i32* %210, align 8
  %220 = load %"class.v8::internal::compiler::Variable"*, %"class.v8::internal::compiler::Variable"** %211, align 8
  %221 = load %"class.v8::internal::compiler::Variable"*, %"class.v8::internal::compiler::Variable"** %19, align 8
  %222 = icmp ult %"class.v8::internal::compiler::Variable"* %220, %221
  %223 = ptrtoint %"class.v8::internal::compiler::Variable"* %221 to i64
  br i1 %222, label %224, label %228

224:                                              ; preds = %216
  %225 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %220, i64 0, i32 0
  store i32 %218, i32* %225, align 4
  %226 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %220, i64 1
  %227 = ptrtoint %"class.v8::internal::compiler::Variable"* %226 to i64
  store i64 %227, i64* %212, align 8
  br label %434

228:                                              ; preds = %216
  %229 = ptrtoint %"class.v8::internal::compiler::Variable"* %220 to i64
  %230 = load i64, i64* %21, align 8
  %231 = sub i64 %229, %230
  %232 = ashr exact i64 %231, 2
  %233 = add nsw i64 %232, 1
  %234 = icmp ugt i64 %233, 536870911
  br i1 %234, label %235, label %237

235:                                              ; preds = %228
  %236 = bitcast %"class.v8::internal::ZoneVector.1306"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %236) #9
  unreachable

237:                                              ; preds = %228
  %238 = sub i64 %223, %230
  %239 = ashr exact i64 %238, 2
  %240 = icmp ult i64 %239, 268435455
  br i1 %240, label %241, label %246

241:                                              ; preds = %237
  %242 = ashr exact i64 %238, 1
  %243 = icmp ult i64 %242, %233
  %244 = select i1 %243, i64 %233, i64 %242
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %265, label %246

246:                                              ; preds = %241, %237
  %247 = phi i64 [ %244, %241 ], [ 536870911, %237 ]
  %248 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %213, align 8
  %249 = shl i64 %247, 2
  %250 = add i64 %249, 7
  %251 = and i64 %250, -8
  %252 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %248, i64 0, i32 2
  %253 = load i64, i64* %252, align 8
  %254 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %248, i64 0, i32 3
  %255 = load i64, i64* %254, align 8
  %256 = sub i64 %255, %253
  %257 = icmp ugt i64 %251, %256
  br i1 %257, label %258, label %260, !prof !5

258:                                              ; preds = %246
  %259 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %248, i64 %251) #8
  br label %262

260:                                              ; preds = %246
  %261 = add i64 %251, %253
  store i64 %261, i64* %252, align 8
  br label %262

262:                                              ; preds = %260, %258
  %263 = phi i64 [ %259, %258 ], [ %253, %260 ]
  %264 = inttoptr i64 %263 to %"class.v8::internal::compiler::Variable"*
  br label %265

265:                                              ; preds = %262, %241
  %266 = phi i64 [ %247, %262 ], [ 0, %241 ]
  %267 = phi %"class.v8::internal::compiler::Variable"* [ %264, %262 ], [ null, %241 ]
  %268 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %267, i64 %232
  %269 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %267, i64 %266
  %270 = ptrtoint %"class.v8::internal::compiler::Variable"* %269 to i64
  %271 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %268, i64 0, i32 0
  store i32 %218, i32* %271, align 4
  %272 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %268, i64 1
  %273 = ptrtoint %"class.v8::internal::compiler::Variable"* %272 to i64
  %274 = load %"class.v8::internal::compiler::Variable"*, %"class.v8::internal::compiler::Variable"** %214, align 8
  %275 = ptrtoint %"class.v8::internal::compiler::Variable"* %274 to i64
  %276 = load %"class.v8::internal::compiler::Variable"*, %"class.v8::internal::compiler::Variable"** %211, align 8
  %277 = icmp eq %"class.v8::internal::compiler::Variable"* %276, %274
  br i1 %277, label %431, label %278

278:                                              ; preds = %265
  %279 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %276, i64 -1
  %280 = ptrtoint %"class.v8::internal::compiler::Variable"* %279 to i64
  %281 = sub i64 %280, %275
  %282 = lshr i64 %281, 2
  %283 = add nuw nsw i64 %282, 1
  %284 = icmp ult i64 %283, 8
  br i1 %284, label %375, label %285

285:                                              ; preds = %278
  %286 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %267, i64 -1
  %287 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %276, i64 -1
  %288 = ptrtoint %"class.v8::internal::compiler::Variable"* %287 to i64
  %289 = sub i64 %288, %275
  %290 = lshr i64 %289, 2
  %291 = sub nsw i64 %232, %290
  %292 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %286, i64 %291
  %293 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %276, i64 -1
  %294 = sub nsw i64 0, %290
  %295 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %293, i64 %294
  %296 = icmp ult %"class.v8::internal::compiler::Variable"* %292, %276
  %297 = icmp ult %"class.v8::internal::compiler::Variable"* %295, %268
  %298 = and i1 %296, %297
  br i1 %298, label %375, label %299

299:                                              ; preds = %285
  %300 = and i64 %283, 9223372036854775800
  %301 = sub nsw i64 0, %300
  %302 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %268, i64 %301
  %303 = sub nsw i64 0, %300
  %304 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %276, i64 %303
  %305 = add nsw i64 %300, -8
  %306 = lshr exact i64 %305, 3
  %307 = add nuw nsw i64 %306, 1
  %308 = and i64 %307, 1
  %309 = icmp eq i64 %305, 0
  br i1 %309, label %352, label %310

310:                                              ; preds = %299
  %311 = sub nuw nsw i64 %307, %308
  %312 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %276, i64 -1
  %313 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %276, i64 -1
  br label %314

314:                                              ; preds = %314, %310
  %315 = phi i64 [ 0, %310 ], [ %349, %314 ]
  %316 = phi i64 [ %311, %310 ], [ %350, %314 ]
  %317 = sub i64 0, %315
  %318 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %268, i64 %317
  %319 = sub i64 0, %315
  %320 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %312, i64 %319
  %321 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %320, i64 0, i32 0
  %322 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %318, i64 -1, i32 0
  %323 = getelementptr inbounds i32, i32* %321, i64 -3
  %324 = bitcast i32* %323 to <4 x i32>*
  %325 = load <4 x i32>, <4 x i32>* %324, align 4, !alias.scope !69
  %326 = getelementptr inbounds i32, i32* %321, i64 -7
  %327 = bitcast i32* %326 to <4 x i32>*
  %328 = load <4 x i32>, <4 x i32>* %327, align 4, !alias.scope !69
  %329 = getelementptr inbounds i32, i32* %322, i64 -3
  %330 = bitcast i32* %329 to <4 x i32>*
  store <4 x i32> %325, <4 x i32>* %330, align 4, !alias.scope !72, !noalias !69
  %331 = getelementptr inbounds i32, i32* %322, i64 -7
  %332 = bitcast i32* %331 to <4 x i32>*
  store <4 x i32> %328, <4 x i32>* %332, align 4, !alias.scope !72, !noalias !69
  %333 = sub nuw nsw i64 -8, %315
  %334 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %268, i64 %333
  %335 = sub nuw nsw i64 -8, %315
  %336 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %313, i64 %335
  %337 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %336, i64 0, i32 0
  %338 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %334, i64 -1, i32 0
  %339 = getelementptr inbounds i32, i32* %337, i64 -3
  %340 = bitcast i32* %339 to <4 x i32>*
  %341 = load <4 x i32>, <4 x i32>* %340, align 4, !alias.scope !69
  %342 = getelementptr inbounds i32, i32* %337, i64 -7
  %343 = bitcast i32* %342 to <4 x i32>*
  %344 = load <4 x i32>, <4 x i32>* %343, align 4, !alias.scope !69
  %345 = getelementptr inbounds i32, i32* %338, i64 -3
  %346 = bitcast i32* %345 to <4 x i32>*
  store <4 x i32> %341, <4 x i32>* %346, align 4, !alias.scope !72, !noalias !69
  %347 = getelementptr inbounds i32, i32* %338, i64 -7
  %348 = bitcast i32* %347 to <4 x i32>*
  store <4 x i32> %344, <4 x i32>* %348, align 4, !alias.scope !72, !noalias !69
  %349 = add i64 %315, 16
  %350 = add i64 %316, -2
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %314, !llvm.loop !74

352:                                              ; preds = %314, %299
  %353 = phi i64 [ 0, %299 ], [ %349, %314 ]
  %354 = icmp eq i64 %308, 0
  br i1 %354, label %373, label %355

355:                                              ; preds = %352
  %356 = sub i64 0, %353
  %357 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %268, i64 %356
  %358 = sub i64 0, %353
  %359 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %276, i64 -1
  %360 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %359, i64 %358
  %361 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %360, i64 0, i32 0
  %362 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %357, i64 -1, i32 0
  %363 = getelementptr inbounds i32, i32* %361, i64 -3
  %364 = bitcast i32* %363 to <4 x i32>*
  %365 = load <4 x i32>, <4 x i32>* %364, align 4, !alias.scope !69
  %366 = getelementptr inbounds i32, i32* %361, i64 -7
  %367 = bitcast i32* %366 to <4 x i32>*
  %368 = load <4 x i32>, <4 x i32>* %367, align 4, !alias.scope !69
  %369 = getelementptr inbounds i32, i32* %362, i64 -3
  %370 = bitcast i32* %369 to <4 x i32>*
  store <4 x i32> %365, <4 x i32>* %370, align 4, !alias.scope !72, !noalias !69
  %371 = getelementptr inbounds i32, i32* %362, i64 -7
  %372 = bitcast i32* %371 to <4 x i32>*
  store <4 x i32> %368, <4 x i32>* %372, align 4, !alias.scope !72, !noalias !69
  br label %373

373:                                              ; preds = %352, %355
  %374 = icmp eq i64 %283, %300
  br i1 %374, label %431, label %375

375:                                              ; preds = %373, %285, %278
  %376 = phi %"class.v8::internal::compiler::Variable"* [ %268, %285 ], [ %268, %278 ], [ %302, %373 ]
  %377 = phi %"class.v8::internal::compiler::Variable"* [ %276, %285 ], [ %276, %278 ], [ %304, %373 ]
  %378 = getelementptr %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %377, i64 -1
  %379 = ptrtoint %"class.v8::internal::compiler::Variable"* %378 to i64
  %380 = sub i64 %379, %275
  %381 = lshr i64 %380, 2
  %382 = add nuw nsw i64 %381, 1
  %383 = and i64 %382, 7
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %396, label %385

385:                                              ; preds = %375, %385
  %386 = phi %"class.v8::internal::compiler::Variable"* [ %393, %385 ], [ %376, %375 ]
  %387 = phi %"class.v8::internal::compiler::Variable"* [ %389, %385 ], [ %377, %375 ]
  %388 = phi i64 [ %394, %385 ], [ %383, %375 ]
  %389 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %387, i64 -1
  %390 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %389, i64 0, i32 0
  %391 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %386, i64 -1, i32 0
  %392 = load i32, i32* %390, align 4
  store i32 %392, i32* %391, align 4
  %393 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %386, i64 -1
  %394 = add i64 %388, -1
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %396, label %385, !llvm.loop !75

396:                                              ; preds = %385, %375
  %397 = phi %"class.v8::internal::compiler::Variable"* [ undef, %375 ], [ %393, %385 ]
  %398 = phi %"class.v8::internal::compiler::Variable"* [ %376, %375 ], [ %393, %385 ]
  %399 = phi %"class.v8::internal::compiler::Variable"* [ %377, %375 ], [ %389, %385 ]
  %400 = icmp ult i64 %380, 28
  br i1 %400, label %431, label %401

401:                                              ; preds = %396, %401
  %402 = phi %"class.v8::internal::compiler::Variable"* [ %429, %401 ], [ %398, %396 ]
  %403 = phi %"class.v8::internal::compiler::Variable"* [ %425, %401 ], [ %399, %396 ]
  %404 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %403, i64 -1, i32 0
  %405 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %402, i64 -1, i32 0
  %406 = load i32, i32* %404, align 4
  store i32 %406, i32* %405, align 4
  %407 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %403, i64 -2, i32 0
  %408 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %402, i64 -2, i32 0
  %409 = load i32, i32* %407, align 4
  store i32 %409, i32* %408, align 4
  %410 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %403, i64 -3, i32 0
  %411 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %402, i64 -3, i32 0
  %412 = load i32, i32* %410, align 4
  store i32 %412, i32* %411, align 4
  %413 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %403, i64 -4, i32 0
  %414 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %402, i64 -4, i32 0
  %415 = load i32, i32* %413, align 4
  store i32 %415, i32* %414, align 4
  %416 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %403, i64 -5, i32 0
  %417 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %402, i64 -5, i32 0
  %418 = load i32, i32* %416, align 4
  store i32 %418, i32* %417, align 4
  %419 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %403, i64 -6, i32 0
  %420 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %402, i64 -6, i32 0
  %421 = load i32, i32* %419, align 4
  store i32 %421, i32* %420, align 4
  %422 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %403, i64 -7, i32 0
  %423 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %402, i64 -7, i32 0
  %424 = load i32, i32* %422, align 4
  store i32 %424, i32* %423, align 4
  %425 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %403, i64 -8
  %426 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %425, i64 0, i32 0
  %427 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %402, i64 -8, i32 0
  %428 = load i32, i32* %426, align 4
  store i32 %428, i32* %427, align 4
  %429 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %402, i64 -8
  %430 = icmp eq %"class.v8::internal::compiler::Variable"* %425, %274
  br i1 %430, label %431, label %401, !llvm.loop !76

431:                                              ; preds = %396, %401, %373, %265
  %432 = phi %"class.v8::internal::compiler::Variable"* [ %268, %265 ], [ %302, %373 ], [ %397, %396 ], [ %429, %401 ]
  %433 = ptrtoint %"class.v8::internal::compiler::Variable"* %432 to i64
  store i64 %433, i64* %21, align 8
  store i64 %273, i64* %212, align 8
  store i64 %270, i64* %20, align 8
  br label %434

434:                                              ; preds = %224, %431
  %435 = add nuw nsw i32 %217, 1
  %436 = icmp eq i32 %435, %17
  br i1 %436, label %215, label %216
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEEneERKS9_(%"class.v8::internal::compiler::PersistentMap"*, %"class.v8::internal::compiler::PersistentMap"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::ZipIterable", align 8
  %4 = alloca %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 0
  %6 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %1, i64 0, i32 0
  %8 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %7, align 8
  %9 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %6, %8
  br i1 %9, label %89, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %1, i64 0, i32 1
  %14 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %13, align 8
  %15 = icmp eq %"class.v8::internal::compiler::Node"* %12, %14
  br i1 %15, label %16, label %89

16:                                               ; preds = %10
  %17 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::ZipIterable"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #8
  %18 = bitcast %"class.v8::internal::compiler::PersistentMap"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %18, i64 24, i1 false) #8
  %19 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::ZipIterable", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::ZipIterable"* %3, i64 0, i32 1
  %20 = bitcast %"class.v8::internal::compiler::PersistentMap"* %19 to i8*
  %21 = bitcast %"class.v8::internal::compiler::PersistentMap"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #8
  %22 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 584, i8* nonnull %22) #8
  call void @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE11ZipIterable5beginEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* nonnull sret %4, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::ZipIterable"* nonnull %3) #8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %4, i64 0, i32 0, i32 2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %4, i64 0, i32 1, i32 2
  %25 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %4, i64 0, i32 2
  %26 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %4, i64 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::__map_const_iterator"* %26 to %"class.std::__1::__tree_node"**
  %28 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %4, i64 0, i32 3
  %29 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %4, i64 0, i32 1, i32 1
  %30 = bitcast %"class.std::__1::__map_const_iterator"* %29 to %"class.std::__1::__tree_node"**
  %31 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %4, i64 0, i32 1, i32 4
  %32 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %4, i64 0, i32 0, i32 4
  %33 = bitcast %"class.v8::internal::compiler::Node"** %32 to i64*
  %34 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %23, align 8
  %35 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %34, null
  %36 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %24, align 8
  %37 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %36, null
  %38 = and i1 %35, %37
  br i1 %38, label %88, label %39

39:                                               ; preds = %16, %80
  %40 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %84, %80 ], [ %36, %16 ]
  %41 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %82, %80 ], [ %34, %16 ]
  %42 = load i8, i8* %25, align 8, !range !2, !noalias !77
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %65, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %41, i64 0, i32 3
  %46 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %45, align 8, !noalias !77
  %47 = icmp eq %"class.v8::internal::ZoneMap"* %46, null
  %48 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %41, i64 0, i32 0, i32 0, i32 1
  %49 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %27, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %49, i64 0, i32 1, i32 0, i32 1
  %51 = select i1 %47, %"class.v8::internal::compiler::Node"** %48, %"class.v8::internal::compiler::Node"** %50
  %52 = bitcast %"class.v8::internal::compiler::Node"** %51 to i64*
  %53 = load i64, i64* %52, align 8, !noalias !77
  %54 = load i8, i8* %28, align 1, !range !2, !noalias !77
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %74, label %56

56:                                               ; preds = %44
  %57 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %40, i64 0, i32 3
  %58 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %57, align 8, !noalias !77
  %59 = icmp eq %"class.v8::internal::ZoneMap"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8, !noalias !77
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %61, i64 0, i32 1, i32 0, i32 1
  br label %74

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %40, i64 0, i32 0, i32 0, i32 1
  br label %74

65:                                               ; preds = %39
  %66 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %40, i64 0, i32 3
  %67 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %66, align 8, !noalias !77
  %68 = icmp eq %"class.v8::internal::ZoneMap"* %67, null
  %69 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %40, i64 0, i32 0, i32 0, i32 1
  %70 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %70, i64 0, i32 1, i32 0, i32 1
  %72 = select i1 %68, %"class.v8::internal::compiler::Node"** %69, %"class.v8::internal::compiler::Node"** %71
  %73 = load i64, i64* %33, align 8, !noalias !80
  br label %74

74:                                               ; preds = %65, %63, %60, %44
  %75 = phi %"class.v8::internal::compiler::Node"** [ %72, %65 ], [ %64, %63 ], [ %62, %60 ], [ %31, %44 ]
  %76 = phi i64 [ %73, %65 ], [ %53, %63 ], [ %53, %60 ], [ %53, %44 ]
  %77 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, align 8, !noalias !77
  %78 = inttoptr i64 %76 to %"class.v8::internal::compiler::Node"*
  %79 = icmp eq %"class.v8::internal::compiler::Node"* %77, %78
  br i1 %79, label %80, label %87

80:                                               ; preds = %74
  %81 = call dereferenceable(584) %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE15double_iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* nonnull %4) #8
  %82 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %23, align 8
  %83 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %82, null
  %84 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %24, align 8
  %85 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %84, null
  %86 = and i1 %83, %85
  br i1 %86, label %88, label %39

87:                                               ; preds = %74
  call void @llvm.lifetime.end.p0i8(i64 584, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #8
  br label %89

88:                                               ; preds = %80, %16
  call void @llvm.lifetime.end.p0i8(i64 584, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #8
  br label %89

89:                                               ; preds = %2, %10, %87, %88
  %90 = phi i1 [ false, %88 ], [ true, %87 ], [ false, %2 ], [ true, %10 ]
  ret i1 %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE11ZipIterable5beginEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* noalias sret, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::ZipIterable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", align 8
  %4 = alloca %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", align 8
  %5 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::ZipIterable", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::ZipIterable"* %1, i64 0, i32 0, i32 0
  %6 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %5, align 8, !noalias !83
  %7 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %6, null
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::ZipIterable", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::ZipIterable"* %1, i64 0, i32 0, i32 1
  br i1 %7, label %9, label %17

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::internal::compiler::Node"** %8 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !86
  %12 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %3, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !89
  %13 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %3, i64 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %3, i64 0, i32 4
  %15 = bitcast %"class.std::__1::__tree_end_node"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #8, !alias.scope !89
  %16 = bitcast %"class.v8::internal::compiler::Node"** %14 to i64*
  store i64 %11, i64* %16, align 8, !alias.scope !89
  br label %19

17:                                               ; preds = %2
  %18 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %8, align 8, !noalias !83
  call void @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iterator5beginEPKNS9_11FocusedTreeES5_(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* nonnull sret %3, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* nonnull %6, %"class.v8::internal::compiler::Node"* %18) #8
  br label %19

19:                                               ; preds = %9, %17
  %20 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::ZipIterable", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::ZipIterable"* %1, i64 0, i32 1, i32 0
  %21 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %20, align 8, !noalias !92
  %22 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %21, null
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::ZipIterable", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::ZipIterable"* %1, i64 0, i32 1, i32 1
  br i1 %22, label %24, label %32

24:                                               ; preds = %19
  %25 = bitcast %"class.v8::internal::compiler::Node"** %23 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !95
  %27 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %4, i64 0, i32 0
  store i32 0, i32* %27, align 8, !alias.scope !98
  %28 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %4, i64 0, i32 1, i32 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %4, i64 0, i32 4
  %30 = bitcast %"class.std::__1::__tree_end_node"** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #8, !alias.scope !98
  %31 = bitcast %"class.v8::internal::compiler::Node"** %29 to i64*
  store i64 %26, i64* %31, align 8, !alias.scope !98
  br label %34

32:                                               ; preds = %19
  %33 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %23, align 8, !noalias !92
  call void @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iterator5beginEPKNS9_11FocusedTreeES5_(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* nonnull sret %4, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* nonnull %21, %"class.v8::internal::compiler::Node"* %33) #8
  br label %34

34:                                               ; preds = %24, %32
  %35 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %4 to i8*
  %36 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %3 to i8*
  %37 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %36, i64 288, i1 false) #8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 1
  %39 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* nonnull align 8 %35, i64 288, i1 false)
  %40 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 0, i32 2
  %41 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %40, align 8
  %42 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %41, null
  %43 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 1, i32 2
  %44 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %43, align 8
  %45 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %44, null
  %46 = or i1 %42, %45
  br i1 %46, label %78, label %47

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %44, i64 0, i32 2, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %41, i64 0, i32 2, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %49
  br i1 %52, label %53, label %83

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %41, i64 0, i32 3
  %55 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %54, align 8
  %56 = icmp eq %"class.v8::internal::ZoneMap"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 0, i32 1
  %59 = bitcast %"class.std::__1::__map_const_iterator"* %58 to %"class.std::__1::__tree_node"**
  %60 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %64

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %64

64:                                               ; preds = %62, %57
  %65 = phi i32* [ %63, %62 ], [ %61, %57 ]
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %44, i64 0, i32 3
  %68 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %67, align 8
  %69 = icmp eq %"class.v8::internal::ZoneMap"* %68, null
  %70 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 1, i32 1
  %72 = bitcast %"class.std::__1::__map_const_iterator"* %71 to %"class.std::__1::__tree_node"**
  %73 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %73, i64 0, i32 1, i32 0, i32 0, i32 0
  %75 = select i1 %69, i32* %70, i32* %74
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %66, %76
  br i1 %77, label %80, label %83

78:                                               ; preds = %34
  %79 = and i1 %42, %45
  br i1 %79, label %80, label %83

80:                                               ; preds = %78, %64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 3
  store i8 1, i8* %81, align 1
  %82 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 2
  store i8 1, i8* %82, align 8
  br label %130

83:                                               ; preds = %78, %64, %47
  br i1 %42, label %84, label %86

84:                                               ; preds = %83
  %85 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 2
  br label %127

86:                                               ; preds = %83
  br i1 %45, label %87, label %89

87:                                               ; preds = %86
  %88 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 2
  br label %124

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %44, i64 0, i32 2, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %41, i64 0, i32 2, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, %91
  br i1 %94, label %95, label %121

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %41, i64 0, i32 3
  %97 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %96, align 8
  %98 = icmp eq %"class.v8::internal::ZoneMap"* %97, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 0, i32 1
  %101 = bitcast %"class.std::__1::__map_const_iterator"* %100 to %"class.std::__1::__tree_node"**
  %102 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %101, align 8
  %103 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %102, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %106

104:                                              ; preds = %95
  %105 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %106

106:                                              ; preds = %104, %99
  %107 = phi i32* [ %105, %104 ], [ %103, %99 ]
  %108 = load i32, i32* %107, align 8
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %44, i64 0, i32 3
  %110 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %109, align 8
  %111 = icmp eq %"class.v8::internal::ZoneMap"* %110, null
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 1, i32 1
  %114 = bitcast %"class.std::__1::__map_const_iterator"* %113 to %"class.std::__1::__tree_node"**
  %115 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %115, i64 0, i32 1, i32 0, i32 0, i32 0
  %117 = select i1 %111, i32* %112, i32* %116
  %118 = load i32, i32* %117, align 8
  %119 = icmp slt i32 %108, %118
  %120 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 2
  br i1 %119, label %124, label %127

121:                                              ; preds = %89
  %122 = icmp ult i32 %93, %91
  %123 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 2
  br i1 %122, label %124, label %127

124:                                              ; preds = %121, %106, %87
  %125 = phi i8* [ %88, %87 ], [ %123, %121 ], [ %120, %106 ]
  store i8 1, i8* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 3
  store i8 0, i8* %126, align 1
  br label %130

127:                                              ; preds = %121, %106, %84
  %128 = phi i8* [ %85, %84 ], [ %123, %121 ], [ %120, %106 ]
  store i8 0, i8* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 3
  store i8 1, i8* %129, align 1
  br label %130

130:                                              ; preds = %80, %124, %127
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(584) %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE15double_iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca { %"struct.std::__1::array", %"class.v8::internal::compiler::Node"* }, align 8
  %3 = alloca { %"struct.std::__1::array", %"class.v8::internal::compiler::Node"* }, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 0
  %9 = tail call dereferenceable(288) %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %8)
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 3
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 1
  %16 = tail call dereferenceable(288) %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %15)
  br label %17

17:                                               ; preds = %10, %14
  %18 = bitcast { %"struct.std::__1::array", %"class.v8::internal::compiler::Node"* }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %18)
  %19 = bitcast { %"struct.std::__1::array", %"class.v8::internal::compiler::Node"* }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %19)
  %20 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::__map_const_iterator"* %20 to %"class.std::__1::__tree_node"**
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 0, i32 2
  %24 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 0, i32 3
  %26 = bitcast %"struct.std::__1::array"* %25 to i8*
  %27 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 1, i32 1
  %28 = bitcast %"class.std::__1::__map_const_iterator"* %27 to %"class.std::__1::__tree_node"**
  %29 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 1, i32 2
  %31 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0, i64 0, i32 1, i32 3
  %33 = bitcast %"struct.std::__1::array"* %32 to i8*
  %34 = bitcast { %"struct.std::__1::array", %"class.v8::internal::compiler::Node"* }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 %33, i64 264, i1 false)
  %35 = bitcast { %"struct.std::__1::array", %"class.v8::internal::compiler::Node"* }* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 8 %26, i64 264, i1 false)
  %36 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %24, null
  %37 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %31, null
  %38 = or i1 %36, %37
  br i1 %38, label %61, label %39

39:                                               ; preds = %17
  %40 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %31, i64 0, i32 2, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %24, i64 0, i32 2, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, %41
  br i1 %44, label %45, label %63

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %24, i64 0, i32 3
  %47 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %46, align 8
  %48 = icmp eq %"class.v8::internal::ZoneMap"* %47, null
  %49 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %51 = select i1 %48, i32* %49, i32* %50
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %31, i64 0, i32 3
  %54 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %53, align 8
  %55 = icmp eq %"class.v8::internal::ZoneMap"* %54, null
  %56 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = select i1 %55, i32* %56, i32* %57
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %52, %59
  br i1 %60, label %90, label %63

61:                                               ; preds = %17
  %62 = and i1 %36, %37
  br i1 %62, label %90, label %63

63:                                               ; preds = %61, %45, %39
  br i1 %36, label %89, label %64

64:                                               ; preds = %63
  br i1 %37, label %90, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %31, i64 0, i32 2, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %24, i64 0, i32 2, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, %67
  br i1 %70, label %71, label %87

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %24, i64 0, i32 3
  %73 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %72, align 8
  %74 = icmp eq %"class.v8::internal::ZoneMap"* %73, null
  %75 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %77 = select i1 %74, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %31, i64 0, i32 3
  %80 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %79, align 8
  %81 = icmp eq %"class.v8::internal::ZoneMap"* %80, null
  %82 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 1, i32 0, i32 0, i32 0
  %84 = select i1 %81, i32* %82, i32* %83
  %85 = load i32, i32* %84, align 8
  %86 = icmp slt i32 %78, %85
  br i1 %86, label %90, label %89

87:                                               ; preds = %65
  %88 = icmp ult i32 %69, %67
  br i1 %88, label %90, label %89

89:                                               ; preds = %63, %87, %71
  br label %90

90:                                               ; preds = %71, %87, %64, %45, %61, %89
  %91 = phi i8 [ 1, %89 ], [ 1, %61 ], [ 1, %45 ], [ 0, %64 ], [ 0, %87 ], [ 0, %71 ]
  %92 = phi i8 [ 0, %89 ], [ 1, %61 ], [ 1, %45 ], [ 1, %64 ], [ 1, %87 ], [ 1, %71 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %18, i64 264, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* nonnull align 8 %19, i64 264, i1 false)
  store i8 %92, i8* %4, align 8
  store i8 %91, i8* %11, align 1
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %19)
  ret %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::double_iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iterator5beginEPKNS9_11FocusedTreeES5_(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* noalias sret, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0, i64 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0, i64 0, i32 4
  %7 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #8
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %1, i64 0, i32 1
  %9 = load i8, i8* %8, align 8
  %10 = icmp sgt i8 %9, 0
  br i1 %10, label %11, label %48

11:                                               ; preds = %3, %37
  %12 = phi i32 [ %43, %37 ], [ 0, %3 ]
  %13 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %40, %37 ], [ %1, %3 ]
  %14 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %13, i64 0, i32 2, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = lshr i32 -2147483648, %12
  %17 = and i32 %15, %16
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %11
  %20 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %13, null
  %21 = sext i32 %12 to i64
  %22 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %13, i64 0, i32 4, i64 %21
  %23 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %22, align 8
  br i1 %20, label %29, label %37

24:                                               ; preds = %11
  %25 = sext i32 %12 to i64
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %13, i64 0, i32 4, i64 %25
  %27 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %26, align 8
  %28 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %27, null
  br i1 %28, label %29, label %37

29:                                               ; preds = %24, %19
  %30 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %23, %19 ], [ null, %24 ]
  %31 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %23, %19 ], [ %13, %24 ]
  %32 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = sext i32 %12 to i64
  %35 = select i1 %18, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %30, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %13
  br label %37

36:                                               ; preds = %29
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #9
  unreachable

37:                                               ; preds = %19, %24, %33
  %38 = phi i64 [ %34, %33 ], [ %25, %24 ], [ %21, %19 ]
  %39 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %35, %33 ], [ %13, %24 ], [ %23, %19 ]
  %40 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %31, %33 ], [ %27, %24 ], [ %13, %19 ]
  %41 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0, i64 0, i32 3, i32 0, i64 %38
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %39, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %41, align 8
  %42 = load i32, i32* %4, align 8
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %4, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %40, i64 0, i32 1
  %45 = load i8, i8* %44, align 8
  %46 = sext i8 %45 to i32
  %47 = icmp slt i32 %43, %46
  br i1 %47, label %11, label %48

48:                                               ; preds = %37, %3
  %49 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %1, %3 ], [ %40, %37 ]
  %50 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0, i64 0, i32 2
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %49, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %50, align 8
  %51 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %49, i64 0, i32 3
  %52 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %51, align 8
  %53 = icmp eq %"class.v8::internal::ZoneMap"* %52, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %48
  %55 = bitcast %"class.v8::internal::ZoneMap"* %52 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  store i64 %56, i64* %57, align 8
  br label %58

58:                                               ; preds = %48, %54
  %59 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %49, null
  br i1 %59, label %78, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0, i64 0, i32 1
  %62 = bitcast %"class.std::__1::__map_const_iterator"* %61 to %"class.std::__1::__tree_node"**
  br label %63

63:                                               ; preds = %60, %74
  %64 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %49, %60 ], [ %76, %74 ]
  %65 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %64, i64 0, i32 3
  %66 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %65, align 8
  %67 = icmp eq %"class.v8::internal::ZoneMap"* %66, null
  %68 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %64, i64 0, i32 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %62, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %69, i64 0, i32 1, i32 0, i32 1
  %71 = select i1 %67, %"class.v8::internal::compiler::Node"** %68, %"class.v8::internal::compiler::Node"** %70
  %72 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %71, align 8
  %73 = icmp eq %"class.v8::internal::compiler::Node"* %72, %2
  br i1 %73, label %74, label %78

74:                                               ; preds = %63
  %75 = tail call dereferenceable(288) %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::iterator"* %0)
  %76 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %50, align 8
  %77 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %76, null
  br i1 %77, label %78, label %63

78:                                               ; preds = %63, %74, %58
  ret void
}

declare i64 @_ZN2v84base10hash_valueEj(i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3SetES3_S5_(%"class.v8::internal::compiler::PersistentMap"*, i32, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::array", align 8
  %5 = bitcast %"struct.std::__1::array"* %4 to i8*
  %6 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %7 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %1) #8
  %8 = trunc i64 %7 to i32
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %5) #8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 0
  %10 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %9, align 8
  %11 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %10, null
  br i1 %11, label %93, label %12

12:                                               ; preds = %3, %81
  %13 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %83, %81 ], [ %10, %3 ]
  %14 = phi i32 [ %84, %81 ], [ 0, %3 ]
  %15 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %13, i64 0, i32 2, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %8
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %13, i64 0, i32 1
  br i1 %17, label %19, label %48

19:                                               ; preds = %12
  %20 = load i8, i8* %18, align 8
  %21 = sext i8 %20 to i32
  %22 = icmp slt i32 %14, %21
  br i1 %22, label %23, label %96

23:                                               ; preds = %19
  %24 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %13 to i8*
  %25 = sext i32 %14 to i64
  %26 = sext i8 %20 to i64
  %27 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %25
  %28 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %27 to i8*
  %29 = shl nsw i64 %25, 3
  %30 = add nsw i64 %29, 32
  %31 = getelementptr i8, i8* %24, i64 %30
  %32 = shl nsw i64 %26, 3
  %33 = sub nsw i64 %32, %29
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %31, i64 %33, i1 false)
  %34 = sub nsw i64 %26, %25
  %35 = xor i64 %25, -1
  %36 = add nsw i64 %35, %26
  %37 = and i64 %34, 7
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %23, %39
  %40 = phi i64 [ %42, %39 ], [ %25, %23 ]
  %41 = phi i64 [ %43, %39 ], [ %37, %23 ]
  %42 = add nsw i64 %40, 1
  %43 = add i64 %41, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %39, !llvm.loop !101

45:                                               ; preds = %39, %23
  %46 = phi i64 [ %25, %23 ], [ %42, %39 ]
  %47 = icmp ult i64 %36, 7
  br i1 %47, label %90, label %86

48:                                               ; preds = %12
  %49 = xor i32 %16, %8
  %50 = lshr i32 -2147483648, %14
  %51 = and i32 %49, %50
  %52 = icmp eq i32 %51, 0
  %53 = load i8, i8* %18, align 8
  br i1 %52, label %54, label %73

54:                                               ; preds = %48
  %55 = sext i32 %14 to i64
  %56 = sext i8 %53 to i64
  br label %57

57:                                               ; preds = %63, %54
  %58 = phi i64 [ %55, %54 ], [ %66, %63 ]
  %59 = icmp slt i64 %58, %56
  br i1 %59, label %60, label %63

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %13, i64 0, i32 4, i64 %58
  %62 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %61, align 8
  br label %63

63:                                               ; preds = %60, %57
  %64 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %62, %60 ], [ null, %57 ]
  %65 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %58
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %64, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %65, align 8
  %66 = add i64 %58, 1
  %67 = trunc i64 %66 to i32
  %68 = lshr i32 -2147483648, %67
  %69 = and i32 %68, %49
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %57, label %71

71:                                               ; preds = %63
  %72 = trunc i64 %66 to i32
  br label %73

73:                                               ; preds = %48, %71
  %74 = phi i32 [ %72, %71 ], [ %14, %48 ]
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %75
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %13, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %76, align 8
  %77 = sext i8 %53 to i32
  %78 = icmp slt i32 %74, %77
  br i1 %78, label %81, label %79

79:                                               ; preds = %73
  %80 = add nsw i32 %74, 1
  br label %93

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %13, i64 0, i32 4, i64 %75
  %83 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %82, align 8
  %84 = add nsw i32 %74, 1
  %85 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %83, null
  br i1 %85, label %93, label %12

86:                                               ; preds = %45, %86
  %87 = phi i64 [ %88, %86 ], [ %46, %45 ]
  %88 = add nsw i64 %87, 8
  %89 = icmp eq i64 %88, %26
  br i1 %89, label %90, label %86

90:                                               ; preds = %86, %45
  %91 = sext i8 %20 to i32
  %92 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %13, null
  br i1 %92, label %93, label %96

93:                                               ; preds = %81, %79, %3, %90
  %94 = phi i32 [ %91, %90 ], [ %80, %79 ], [ 0, %3 ], [ %84, %81 ]
  %95 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 1
  br label %140

96:                                               ; preds = %19, %90
  %97 = phi i32 [ %91, %90 ], [ %14, %19 ]
  %98 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %13, i64 0, i32 3
  %99 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %98, align 8
  %100 = icmp eq %"class.v8::internal::ZoneMap"* %99, null
  br i1 %100, label %132, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %99, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %103 = bitcast %"class.std::__1::__tree_end_node"* %102 to %"class.std::__1::__tree_node"**
  %104 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node"* %104, null
  br i1 %105, label %127, label %106

106:                                              ; preds = %101, %106
  %107 = phi %"class.std::__1::__tree_end_node"* [ %117, %106 ], [ %102, %101 ]
  %108 = phi %"class.std::__1::__tree_node"* [ %118, %106 ], [ %104, %101 ]
  %109 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %108, i64 0, i32 1, i32 0, i32 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = icmp slt i32 %110, %1
  %112 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %108, i64 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::__tree_node_base"** %112 to %"class.std::__1::__tree_node"**
  %114 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %108, i64 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::__tree_node"* %108 to %"class.std::__1::__tree_node"**
  %116 = select i1 %111, %"class.std::__1::__tree_node"** %113, %"class.std::__1::__tree_node"** %115
  %117 = select i1 %111, %"class.std::__1::__tree_end_node"* %107, %"class.std::__1::__tree_end_node"* %114
  %118 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %116, align 8
  %119 = icmp eq %"class.std::__1::__tree_node"* %118, null
  br i1 %119, label %120, label %106

120:                                              ; preds = %106
  %121 = icmp eq %"class.std::__1::__tree_end_node"* %117, %102
  br i1 %121, label %127, label %122

122:                                              ; preds = %120
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 4
  %124 = bitcast %"class.std::__1::__tree_end_node"* %123 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = icmp sgt i32 %125, %1
  br i1 %126, label %127, label %129

127:                                              ; preds = %122, %120, %101
  %128 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 1
  br label %140

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 5
  %131 = bitcast %"class.std::__1::__tree_end_node"* %130 to %"class.v8::internal::compiler::Node"**
  br label %140

132:                                              ; preds = %96
  %133 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, %1
  br i1 %135, label %136, label %138

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %13, i64 0, i32 0, i32 0, i32 1
  br label %140

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 1
  br label %140

140:                                              ; preds = %93, %127, %129, %136, %138
  %141 = phi i1 [ false, %136 ], [ false, %138 ], [ true, %93 ], [ false, %127 ], [ false, %129 ]
  %142 = phi i32 [ %97, %136 ], [ %97, %138 ], [ %94, %93 ], [ %97, %127 ], [ %97, %129 ]
  %143 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* [ %13, %136 ], [ %13, %138 ], [ null, %93 ], [ %13, %127 ], [ %13, %129 ]
  %144 = phi %"class.v8::internal::compiler::Node"** [ %137, %136 ], [ %139, %138 ], [ %95, %93 ], [ %128, %127 ], [ %131, %129 ]
  %145 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %144, align 8
  %146 = icmp eq %"class.v8::internal::compiler::Node"* %145, %2
  br i1 %146, label %480, label %147

147:                                              ; preds = %140
  br i1 %141, label %277, label %148

148:                                              ; preds = %147
  %149 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %143, i64 0, i32 3
  %150 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %149, align 8
  %151 = icmp eq %"class.v8::internal::ZoneMap"* %150, null
  br i1 %151, label %152, label %156

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %143, i64 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, %1
  br i1 %155, label %277, label %156

156:                                              ; preds = %152, %148
  %157 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 2
  %158 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %157, align 8
  %159 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %158, i64 0, i32 2
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %158, i64 0, i32 3
  %162 = load i64, i64* %161, align 8
  %163 = sub i64 %162, %160
  %164 = icmp ult i64 %163, 32
  br i1 %164, label %165, label %167, !prof !5

165:                                              ; preds = %156
  %166 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %158, i64 32) #8
  br label %169

167:                                              ; preds = %156
  %168 = add i64 %160, 32
  store i64 %168, i64* %159, align 8
  br label %169

169:                                              ; preds = %165, %167
  %170 = phi i64 [ %166, %165 ], [ %160, %167 ]
  %171 = inttoptr i64 %170 to %"class.v8::internal::ZoneMap"*
  %172 = bitcast %"class.v8::internal::Zone"** %157 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %171, i64 0, i32 0, i32 0, i32 0
  %175 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %171, i64 0, i32 0, i32 0, i32 1, i32 1
  %176 = bitcast %"struct.std::__1::__compressed_pair_elem.1267"* %175 to i64*
  %177 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %171, i64 0, i32 0, i32 0, i32 1
  %178 = bitcast %"class.std::__1::__compressed_pair.1266"* %177 to i64*
  store i64 0, i64* %178, align 8
  store i64 %173, i64* %176, align 8
  %179 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %171, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %179, align 8
  %180 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %171, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %180, %"class.std::__1::__tree_end_node"** %174, align 8
  %181 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %149, align 8
  %182 = icmp eq %"class.v8::internal::ZoneMap"* %181, null
  br i1 %182, label %190, label %183

183:                                              ; preds = %169
  %184 = icmp eq %"class.v8::internal::ZoneMap"* %181, %171
  br i1 %184, label %198, label %185

185:                                              ; preds = %183
  %186 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %171, i64 0, i32 0, i32 0
  %187 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %181, i64 0, i32 0, i32 0, i32 0
  %188 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %187, align 8
  %189 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %181, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler8VariableEPNS4_4NodeEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS3_13ZoneAllocatorIS8_EEE14__assign_multiINS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEEEvT_SN_(%"class.std::__1::__tree.1265"* %186, %"class.std::__1::__tree_end_node"* %188, %"class.std::__1::__tree_end_node"* %189) #8
  br label %198

190:                                              ; preds = %169
  %191 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %143, i64 0, i32 0, i32 0, i32 1
  %192 = bitcast %"class.v8::internal::compiler::Node"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %171, i64 0, i32 0
  %195 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %143, i64 0, i32 0, i32 0, i32 0
  %196 = tail call dereferenceable(8) %"class.v8::internal::compiler::Node"** @_ZNSt3__13mapIN2v88internal8compiler8VariableEPNS3_4NodeENS_4lessIS4_EENS2_13ZoneAllocatorINS_4pairIKS4_S6_EEEEEixERSB_(%"class.std::__1::map"* %194, %"class.v8::internal::compiler::Variable"* dereferenceable(4) %195)
  %197 = bitcast %"class.v8::internal::compiler::Node"** %196 to i64*
  store i64 %193, i64* %197, align 8
  br label %198

198:                                              ; preds = %185, %183, %190
  %199 = bitcast %"class.std::__1::__tree_end_node"* %180 to %"class.std::__1::__tree_node"**
  %200 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %199, align 8
  %201 = icmp eq %"class.std::__1::__tree_node"* %200, null
  br i1 %201, label %230, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %171, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %204

204:                                              ; preds = %226, %202
  %205 = phi %"class.std::__1::__tree_node"* [ %229, %226 ], [ %200, %202 ]
  %206 = phi %"class.std::__1::__tree_node_base"** [ %228, %226 ], [ %203, %202 ]
  %207 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %205, i64 0, i32 1, i32 0, i32 0, i32 0
  %208 = load i32, i32* %207, align 4
  %209 = icmp sgt i32 %208, %1
  br i1 %209, label %210, label %216

210:                                              ; preds = %204
  %211 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %205, i64 0, i32 0, i32 0, i32 0
  %212 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  %213 = icmp eq %"class.std::__1::__tree_node_base"* %212, null
  br i1 %213, label %214, label %226

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %205, i64 0, i32 0, i32 0
  br label %232

216:                                              ; preds = %204
  %217 = icmp slt i32 %208, %1
  br i1 %217, label %218, label %224

218:                                              ; preds = %216
  %219 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %205, i64 0, i32 0, i32 1
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %219, align 8
  %221 = icmp eq %"class.std::__1::__tree_node_base"* %220, null
  br i1 %221, label %222, label %226

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %205, i64 0, i32 0, i32 0
  br label %232

224:                                              ; preds = %216
  %225 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %205, i64 0, i32 0, i32 0
  br label %232

226:                                              ; preds = %218, %210
  %227 = phi %"class.std::__1::__tree_node_base"* [ %212, %210 ], [ %220, %218 ]
  %228 = phi %"class.std::__1::__tree_node_base"** [ %211, %210 ], [ %219, %218 ]
  %229 = bitcast %"class.std::__1::__tree_node_base"* %227 to %"class.std::__1::__tree_node"*
  br label %204

230:                                              ; preds = %198
  %231 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %180, i64 0, i32 0
  br label %232

232:                                              ; preds = %230, %224, %222, %214
  %233 = phi %"class.std::__1::__tree_end_node"* [ %180, %230 ], [ %215, %214 ], [ %223, %222 ], [ %225, %224 ]
  %234 = phi %"class.std::__1::__tree_node_base"** [ %231, %230 ], [ %211, %214 ], [ %219, %222 ], [ %206, %224 ]
  %235 = bitcast %"class.std::__1::__tree_node_base"** %234 to %"class.std::__1::__tree_node"**
  %236 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %235, align 8
  %237 = icmp eq %"class.std::__1::__tree_node"* %236, null
  br i1 %237, label %238, label %273

238:                                              ; preds = %232
  %239 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %171, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %240 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %239, align 8, !noalias !102
  %241 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %240, i64 0, i32 2
  %242 = load i64, i64* %241, align 8, !noalias !102
  %243 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %240, i64 0, i32 3
  %244 = load i64, i64* %243, align 8, !noalias !102
  %245 = sub i64 %244, %242
  %246 = icmp ult i64 %245, 48
  br i1 %246, label %247, label %249, !prof !5

247:                                              ; preds = %238
  %248 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %240, i64 48) #8, !noalias !102
  br label %251

249:                                              ; preds = %238
  %250 = add i64 %242, 48
  store i64 %250, i64* %241, align 8, !noalias !102
  br label %251

251:                                              ; preds = %249, %247
  %252 = phi i64 [ %248, %247 ], [ %242, %249 ]
  %253 = inttoptr i64 %252 to %"class.std::__1::__tree_node"*
  %254 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %253, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 %1, i32* %254, align 8, !noalias !102
  %255 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %253, i64 0, i32 1, i32 0, i32 1
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %255, align 8, !noalias !102
  %256 = inttoptr i64 %252 to %"class.std::__1::__tree_node_base"*
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %256, i64 0, i32 2
  %258 = inttoptr i64 %252 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %258, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %233, %"class.std::__1::__tree_end_node"** %257, align 8
  store %"class.std::__1::__tree_node_base"* %256, %"class.std::__1::__tree_node_base"** %234, align 8
  %259 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %174, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %259, i64 0, i32 0
  %261 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %260, align 8
  %262 = icmp eq %"class.std::__1::__tree_node_base"* %261, null
  br i1 %262, label %267, label %263

263:                                              ; preds = %251
  %264 = ptrtoint %"class.std::__1::__tree_node_base"* %261 to i64
  %265 = inttoptr i64 %170 to i64*
  store i64 %264, i64* %265, align 8
  %266 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %234, align 8
  br label %267

267:                                              ; preds = %263, %251
  %268 = phi %"class.std::__1::__tree_node_base"* [ %256, %251 ], [ %266, %263 ]
  %269 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %171, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %270, %"class.std::__1::__tree_node_base"* %268) #8
  %271 = load i64, i64* %179, align 8
  %272 = add i64 %271, 1
  store i64 %272, i64* %179, align 8
  br label %273

273:                                              ; preds = %232, %267
  %274 = phi %"class.std::__1::__tree_node"* [ %253, %267 ], [ %236, %232 ]
  %275 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %274, i64 0, i32 1, i32 0, i32 1
  %276 = bitcast %"class.v8::internal::compiler::Node"** %275 to i64*
  store i64 %6, i64* %276, align 8
  br label %277

277:                                              ; preds = %147, %273, %152
  %278 = phi %"class.v8::internal::ZoneMap"* [ null, %152 ], [ %171, %273 ], [ null, %147 ]
  %279 = icmp sgt i32 %142, 1
  %280 = select i1 %279, i32 %142, i32 1
  %281 = add nsw i32 %280, -1
  %282 = sext i32 %281 to i64
  %283 = shl nsw i64 %282, 3
  %284 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 2
  %285 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %284, align 8
  %286 = add nuw nsw i64 %283, 47
  %287 = and i64 %286, -8
  %288 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %285, i64 0, i32 2
  %289 = load i64, i64* %288, align 8
  %290 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %285, i64 0, i32 3
  %291 = load i64, i64* %290, align 8
  %292 = sub i64 %291, %289
  %293 = icmp ugt i64 %287, %292
  br i1 %293, label %294, label %296, !prof !5

294:                                              ; preds = %277
  %295 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %285, i64 %287) #8
  br label %298

296:                                              ; preds = %277
  %297 = add i64 %289, %287
  store i64 %297, i64* %288, align 8
  br label %298

298:                                              ; preds = %294, %296
  %299 = phi i64 [ %295, %294 ], [ %289, %296 ]
  %300 = inttoptr i64 %299 to i8*
  %301 = inttoptr i64 %299 to %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::KeyValue"*
  %302 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::KeyValue", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::KeyValue"* %301, i64 0, i32 0, i32 0, i32 0
  store i32 %1, i32* %302, align 8
  %303 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::KeyValue", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::KeyValue"* %301, i64 0, i32 0, i32 1
  %304 = bitcast %"class.v8::internal::compiler::Node"** %303 to i64*
  store i64 %6, i64* %304, align 8
  %305 = getelementptr inbounds i8, i8* %300, i64 16
  %306 = trunc i32 %142 to i8
  store i8 %306, i8* %305, align 8
  %307 = getelementptr inbounds i8, i8* %300, i64 20
  %308 = bitcast i8* %307 to i32*
  store i32 %8, i32* %308, align 4
  %309 = getelementptr inbounds i8, i8* %300, i64 24
  %310 = bitcast i8* %309 to %"class.v8::internal::ZoneMap"**
  store %"class.v8::internal::ZoneMap"* %278, %"class.v8::internal::ZoneMap"** %310, align 8
  %311 = getelementptr inbounds i8, i8* %300, i64 32
  %312 = bitcast i8* %311 to %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"**
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* null, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %312, align 8
  %313 = inttoptr i64 %299 to %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*
  %314 = inttoptr i64 %299 to i8*
  %315 = icmp sgt i32 %142, 0
  br i1 %315, label %316, label %428

316:                                              ; preds = %298
  %317 = zext i32 %142 to i64
  %318 = icmp ult i32 %142, 4
  br i1 %318, label %319, label %340

319:                                              ; preds = %426, %340, %316
  %320 = phi i64 [ 0, %340 ], [ 0, %316 ], [ %350, %426 ]
  %321 = sub nsw i64 %317, %320
  %322 = xor i64 %320, -1
  %323 = add nsw i64 %322, %317
  %324 = and i64 %321, 7
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %337, label %326

326:                                              ; preds = %319, %326
  %327 = phi i64 [ %334, %326 ], [ %320, %319 ]
  %328 = phi i64 [ %335, %326 ], [ %324, %319 ]
  %329 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %327
  %330 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %329 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, i64 0, i32 4, i64 %327
  %333 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %332 to i64*
  store i64 %331, i64* %333, align 8
  %334 = add nuw nsw i64 %327, 1
  %335 = add i64 %328, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %326, !llvm.loop !105

337:                                              ; preds = %326, %319
  %338 = phi i64 [ %320, %319 ], [ %334, %326 ]
  %339 = icmp ult i64 %323, 7
  br i1 %339, label %428, label %429

340:                                              ; preds = %316
  %341 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, i64 0, i32 4, i64 0
  %342 = shl nuw nsw i64 %317, 3
  %343 = add nuw nsw i64 %342, 32
  %344 = getelementptr i8, i8* %314, i64 %343
  %345 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %317
  %346 = icmp ult %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %341, %345
  %347 = icmp ugt i8* %344, %5
  %348 = and i1 %346, %347
  br i1 %348, label %319, label %349

349:                                              ; preds = %340
  %350 = and i64 %317, 4294967292
  %351 = add nsw i64 %350, -4
  %352 = lshr exact i64 %351, 2
  %353 = add nuw nsw i64 %352, 1
  %354 = and i64 %353, 3
  %355 = icmp ult i64 %351, 12
  br i1 %355, label %407, label %356

356:                                              ; preds = %349
  %357 = sub nsw i64 %353, %354
  br label %358

358:                                              ; preds = %358, %356
  %359 = phi i64 [ 0, %356 ], [ %404, %358 ]
  %360 = phi i64 [ %357, %356 ], [ %405, %358 ]
  %361 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %359
  %362 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %361 to <2 x i64>*
  %363 = load <2 x i64>, <2 x i64>* %362, align 8, !alias.scope !106
  %364 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %361, i64 2
  %365 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %364 to <2 x i64>*
  %366 = load <2 x i64>, <2 x i64>* %365, align 8, !alias.scope !106
  %367 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, i64 0, i32 4, i64 %359
  %368 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %367 to <2 x i64>*
  store <2 x i64> %363, <2 x i64>* %368, align 8, !alias.scope !109, !noalias !106
  %369 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %367, i64 2
  %370 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %369 to <2 x i64>*
  store <2 x i64> %366, <2 x i64>* %370, align 8, !alias.scope !109, !noalias !106
  %371 = or i64 %359, 4
  %372 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %371
  %373 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %372 to <2 x i64>*
  %374 = load <2 x i64>, <2 x i64>* %373, align 8, !alias.scope !106
  %375 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %372, i64 2
  %376 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %375 to <2 x i64>*
  %377 = load <2 x i64>, <2 x i64>* %376, align 8, !alias.scope !106
  %378 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, i64 0, i32 4, i64 %371
  %379 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %378 to <2 x i64>*
  store <2 x i64> %374, <2 x i64>* %379, align 8, !alias.scope !109, !noalias !106
  %380 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %378, i64 2
  %381 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %380 to <2 x i64>*
  store <2 x i64> %377, <2 x i64>* %381, align 8, !alias.scope !109, !noalias !106
  %382 = or i64 %359, 8
  %383 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %382
  %384 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %383 to <2 x i64>*
  %385 = load <2 x i64>, <2 x i64>* %384, align 8, !alias.scope !106
  %386 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %383, i64 2
  %387 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %386 to <2 x i64>*
  %388 = load <2 x i64>, <2 x i64>* %387, align 8, !alias.scope !106
  %389 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, i64 0, i32 4, i64 %382
  %390 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %389 to <2 x i64>*
  store <2 x i64> %385, <2 x i64>* %390, align 8, !alias.scope !109, !noalias !106
  %391 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %389, i64 2
  %392 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %391 to <2 x i64>*
  store <2 x i64> %388, <2 x i64>* %392, align 8, !alias.scope !109, !noalias !106
  %393 = or i64 %359, 12
  %394 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %393
  %395 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %394 to <2 x i64>*
  %396 = load <2 x i64>, <2 x i64>* %395, align 8, !alias.scope !106
  %397 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %394, i64 2
  %398 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %397 to <2 x i64>*
  %399 = load <2 x i64>, <2 x i64>* %398, align 8, !alias.scope !106
  %400 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, i64 0, i32 4, i64 %393
  %401 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %400 to <2 x i64>*
  store <2 x i64> %396, <2 x i64>* %401, align 8, !alias.scope !109, !noalias !106
  %402 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %400, i64 2
  %403 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %402 to <2 x i64>*
  store <2 x i64> %399, <2 x i64>* %403, align 8, !alias.scope !109, !noalias !106
  %404 = add i64 %359, 16
  %405 = add i64 %360, -4
  %406 = icmp eq i64 %405, 0
  br i1 %406, label %407, label %358, !llvm.loop !111

407:                                              ; preds = %358, %349
  %408 = phi i64 [ 0, %349 ], [ %404, %358 ]
  %409 = icmp eq i64 %354, 0
  br i1 %409, label %426, label %410

410:                                              ; preds = %407, %410
  %411 = phi i64 [ %423, %410 ], [ %408, %407 ]
  %412 = phi i64 [ %424, %410 ], [ %354, %407 ]
  %413 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %411
  %414 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %413 to <2 x i64>*
  %415 = load <2 x i64>, <2 x i64>* %414, align 8, !alias.scope !106
  %416 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %413, i64 2
  %417 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %416 to <2 x i64>*
  %418 = load <2 x i64>, <2 x i64>* %417, align 8, !alias.scope !106
  %419 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, i64 0, i32 4, i64 %411
  %420 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %419 to <2 x i64>*
  store <2 x i64> %415, <2 x i64>* %420, align 8, !alias.scope !109, !noalias !106
  %421 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %419, i64 2
  %422 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %421 to <2 x i64>*
  store <2 x i64> %418, <2 x i64>* %422, align 8, !alias.scope !109, !noalias !106
  %423 = add i64 %411, 4
  %424 = add i64 %412, -1
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %426, label %410, !llvm.loop !112

426:                                              ; preds = %410, %407
  %427 = icmp eq i64 %350, %317
  br i1 %427, label %428, label %319

428:                                              ; preds = %337, %429, %426, %298
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %9, align 8
  br label %480

429:                                              ; preds = %337, %429
  %430 = phi i64 [ %478, %429 ], [ %338, %337 ]
  %431 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %430
  %432 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %431 to i64*
  %433 = load i64, i64* %432, align 8
  %434 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, i64 0, i32 4, i64 %430
  %435 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %434 to i64*
  store i64 %433, i64* %435, align 8
  %436 = add nuw nsw i64 %430, 1
  %437 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %436
  %438 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %437 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, i64 0, i32 4, i64 %436
  %441 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %440 to i64*
  store i64 %439, i64* %441, align 8
  %442 = add nuw nsw i64 %430, 2
  %443 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %442
  %444 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, i64 0, i32 4, i64 %442
  %447 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %446 to i64*
  store i64 %445, i64* %447, align 8
  %448 = add nuw nsw i64 %430, 3
  %449 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %448
  %450 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %449 to i64*
  %451 = load i64, i64* %450, align 8
  %452 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, i64 0, i32 4, i64 %448
  %453 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %452 to i64*
  store i64 %451, i64* %453, align 8
  %454 = add nuw nsw i64 %430, 4
  %455 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %454
  %456 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %455 to i64*
  %457 = load i64, i64* %456, align 8
  %458 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, i64 0, i32 4, i64 %454
  %459 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %458 to i64*
  store i64 %457, i64* %459, align 8
  %460 = add nuw nsw i64 %430, 5
  %461 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %460
  %462 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %461 to i64*
  %463 = load i64, i64* %462, align 8
  %464 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, i64 0, i32 4, i64 %460
  %465 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %464 to i64*
  store i64 %463, i64* %465, align 8
  %466 = add nuw nsw i64 %430, 6
  %467 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %466
  %468 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %467 to i64*
  %469 = load i64, i64* %468, align 8
  %470 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, i64 0, i32 4, i64 %466
  %471 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %470 to i64*
  store i64 %469, i64* %471, align 8
  %472 = add nuw nsw i64 %430, 7
  %473 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %472
  %474 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %473 to i64*
  %475 = load i64, i64* %474, align 8
  %476 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"* %313, i64 0, i32 4, i64 %472
  %477 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::Variable, v8::internal::compiler::Node *, v8::base::hash<v8::internal::compiler::Variable> >::FocusedTree"** %476 to i64*
  store i64 %475, i64* %477, align 8
  %478 = add nuw nsw i64 %430, 8
  %479 = icmp eq i64 %478, %317
  br i1 %479, label %428, label %429, !llvm.loop !113

480:                                              ; preds = %140, %428
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.v8::internal::compiler::Node"** @_ZNSt3__13mapIN2v88internal8compiler8VariableEPNS3_4NodeENS_4lessIS4_EENS2_13ZoneAllocatorINS_4pairIKS4_S6_EEEEEixERSB_(%"class.std::__1::map"*, %"class.v8::internal::compiler::Variable"* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %37, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  br label %11

11:                                               ; preds = %33, %7
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %5, %7 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %8, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %10, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp slt i32 %15, %10
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3, i64 0, i32 0
  br label %39

39:                                               ; preds = %37, %31, %29, %21
  %40 = phi %"class.std::__1::__tree_end_node"* [ %3, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %84

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %47 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %46, align 8, !noalias !114
  %48 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %47, i64 0, i32 2
  %49 = load i64, i64* %48, align 8, !noalias !114
  %50 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %47, i64 0, i32 3
  %51 = load i64, i64* %50, align 8, !noalias !114
  %52 = sub i64 %51, %49
  %53 = icmp ult i64 %52, 48
  br i1 %53, label %54, label %56, !prof !5

54:                                               ; preds = %45
  %55 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %47, i64 48) #8, !noalias !114
  br label %58

56:                                               ; preds = %45
  %57 = add i64 %49, 48
  store i64 %57, i64* %48, align 8, !noalias !114
  br label %58

58:                                               ; preds = %56, %54
  %59 = phi i64 [ %55, %54 ], [ %49, %56 ]
  %60 = inttoptr i64 %59 to %"class.std::__1::__tree_node"*
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Variable", %"class.v8::internal::compiler::Variable"* %1, i64 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 1, i32 0, i32 0, i32 0
  %63 = load i32, i32* %61, align 4, !noalias !114
  store i32 %63, i32* %62, align 8, !noalias !114
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 1, i32 0, i32 1
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %64, align 8, !noalias !114
  %65 = inttoptr i64 %59 to %"class.std::__1::__tree_node_base"*
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %65, i64 0, i32 2
  %67 = inttoptr i64 %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %66, align 8
  store %"class.std::__1::__tree_node_base"* %65, %"class.std::__1::__tree_node_base"** %41, align 8
  %68 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 0
  %69 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %58
  %74 = ptrtoint %"class.std::__1::__tree_node_base"* %71 to i64
  %75 = bitcast %"class.std::__1::map"* %0 to i64*
  store i64 %74, i64* %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %77

77:                                               ; preds = %73, %58
  %78 = phi %"class.std::__1::__tree_node_base"* [ %65, %58 ], [ %76, %73 ]
  %79 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"* %78) #8
  %81 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  store i64 %83, i64* %81, align 8
  br label %84

84:                                               ; preds = %39, %77
  %85 = phi %"class.std::__1::__tree_node"* [ %60, %77 ], [ %43, %39 ]
  %86 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %85, i64 0, i32 1, i32 0, i32 1
  ret %"class.v8::internal::compiler::Node"** %86
}

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler8VariableEPNS4_4NodeEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS3_13ZoneAllocatorIS8_EEE14__assign_multiINS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEEEvT_SN_(%"class.std::__1::__tree.1265"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.1265", %"class.std::__1::__tree.1265"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %247, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::__tree.1265", %"class.std::__1::__tree.1265"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::__tree.1265"* %0 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree.1265", %"class.std::__1::__tree.1265"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %13, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %14, align 8
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %12, align 8
  store i64 0, i64* %4, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %16 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %17 = icmp eq %"class.std::__1::__tree_node_base"* %16, null
  %18 = bitcast %"class.std::__1::__tree_node_base"* %16 to %"class.std::__1::__tree_node"*
  %19 = select i1 %17, %"class.std::__1::__tree_node"* %10, %"class.std::__1::__tree_node"* %18
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %7
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler8VariableEPNS4_4NodeEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS3_13ZoneAllocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1265"* %0, %"class.std::__1::__tree_node"* %19) #8
  br label %247

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 2
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %24, null
  br i1 %25, label %71, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::__tree_node"* %19 to %"class.std::__1::__tree_node_base"*
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, %27
  br i1 %30, label %31, label %50

31:                                               ; preds = %26
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %28, align 8
  %32 = bitcast %"class.std::__1::__tree_end_node"** %23 to %"class.std::__1::__tree_node"**
  %33 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 1
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %71, label %37

37:                                               ; preds = %31, %46
  %38 = phi %"class.std::__1::__tree_node_base"* [ %47, %46 ], [ %35, %31 ]
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 1
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %42, %37
  %47 = phi %"class.std::__1::__tree_node_base"* [ %40, %37 ], [ %44, %42 ]
  br label %37

48:                                               ; preds = %42
  %49 = bitcast %"class.std::__1::__tree_node_base"* %38 to %"class.std::__1::__tree_node"*
  br label %71

50:                                               ; preds = %26
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %51, align 8
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.std::__1::__tree_node"*
  br label %71

58:                                               ; preds = %50, %67
  %59 = phi %"class.std::__1::__tree_node_base"* [ %68, %67 ], [ %54, %50 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %63, label %67

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 1
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63, %58
  %68 = phi %"class.std::__1::__tree_node_base"* [ %61, %58 ], [ %65, %63 ]
  br label %58

69:                                               ; preds = %63
  %70 = bitcast %"class.std::__1::__tree_node_base"* %59 to %"class.std::__1::__tree_node"*
  br label %71

71:                                               ; preds = %22, %31, %48, %56, %69
  %72 = phi %"class.std::__1::__tree_node"* [ %49, %48 ], [ %57, %56 ], [ %70, %69 ], [ null, %22 ], [ %33, %31 ]
  %73 = ptrtoint %"class.std::__1::__tree_node"* %72 to i64
  %74 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %74, label %227, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %77 = bitcast %"class.std::__1::__tree.1265"* %0 to i64*
  %78 = getelementptr inbounds %"class.std::__1::__tree.1265", %"class.std::__1::__tree.1265"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %79

79:                                               ; preds = %75, %219
  %80 = phi %"class.std::__1::__tree_node"* [ %72, %75 ], [ %221, %219 ]
  %81 = phi %"class.std::__1::__tree_end_node"* [ %1, %75 ], [ %220, %219 ]
  %82 = phi i64 [ %73, %75 ], [ %191, %219 ]
  %83 = phi %"class.std::__1::__tree_node"* [ %19, %75 ], [ %80, %219 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 4
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 1, i32 0, i32 1
  %86 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 1, i32 0, i32 0, i32 0
  %87 = bitcast %"class.std::__1::__tree_end_node"* %84 to i32*
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %86, align 4
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 5
  %90 = bitcast %"class.std::__1::__tree_end_node"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.v8::internal::compiler::Node"** %85 to i64*
  store i64 %91, i64* %92, align 8
  %93 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %76, align 8
  %94 = icmp eq %"class.std::__1::__tree_node"* %93, null
  br i1 %94, label %117, label %95

95:                                               ; preds = %79, %114
  %96 = phi %"class.std::__1::__tree_node"* [ %116, %114 ], [ %93, %79 ]
  %97 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %96, i64 0, i32 1, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp slt i32 %88, %98
  br i1 %99, label %100, label %107

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %96, i64 0, i32 0, i32 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, null
  br i1 %103, label %104, label %114

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %96, i64 0, i32 0, i32 0, i32 0
  %106 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %96, i64 0, i32 0, i32 0
  br label %117

107:                                              ; preds = %95
  %108 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %96, i64 0, i32 0, i32 1
  %109 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8
  %110 = icmp eq %"class.std::__1::__tree_node_base"* %109, null
  br i1 %110, label %111, label %114

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %96, i64 0, i32 0, i32 1
  %113 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %96, i64 0, i32 0, i32 0
  br label %117

114:                                              ; preds = %107, %100
  %115 = phi %"class.std::__1::__tree_node_base"* [ %102, %100 ], [ %109, %107 ]
  %116 = bitcast %"class.std::__1::__tree_node_base"* %115 to %"class.std::__1::__tree_node"*
  br label %95

117:                                              ; preds = %79, %111, %104
  %118 = phi %"class.std::__1::__tree_end_node"* [ %106, %104 ], [ %113, %111 ], [ %11, %79 ]
  %119 = phi %"class.std::__1::__tree_node_base"** [ %105, %104 ], [ %112, %111 ], [ %12, %79 ]
  %120 = bitcast %"class.std::__1::__tree_node"* %83 to %"class.std::__1::__tree_node_base"*
  %121 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 0, i32 2
  %122 = bitcast %"class.std::__1::__tree_node"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %118, %"class.std::__1::__tree_end_node"** %121, align 8
  %123 = bitcast %"class.std::__1::__tree_node_base"** %119 to %"class.std::__1::__tree_node"**
  store %"class.std::__1::__tree_node"* %83, %"class.std::__1::__tree_node"** %123, align 8
  %124 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %125 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %124, i64 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, null
  br i1 %127, label %131, label %128

128:                                              ; preds = %117
  %129 = ptrtoint %"class.std::__1::__tree_node_base"* %126 to i64
  store i64 %129, i64* %77, align 8
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  br label %131

131:                                              ; preds = %117, %128
  %132 = phi %"class.std::__1::__tree_node_base"* [ %120, %117 ], [ %130, %128 ]
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %133, %"class.std::__1::__tree_node_base"* %132) #8
  %134 = load i64, i64* %4, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %4, align 8
  %136 = icmp eq i64 %82, 0
  br i1 %136, label %190, label %137

137:                                              ; preds = %131
  %138 = inttoptr i64 %82 to %"class.std::__1::__tree_node"*
  %139 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 0, i32 2
  %140 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_end_node"* %140, null
  br i1 %141, label %187, label %142

142:                                              ; preds = %137
  %143 = inttoptr i64 %82 to %"class.std::__1::__tree_node_base"*
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %140, i64 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, %143
  br i1 %146, label %147, label %166

147:                                              ; preds = %142
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %144, align 8
  %148 = bitcast %"class.std::__1::__tree_end_node"** %139 to %"class.std::__1::__tree_node"**
  %149 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %148, align 8
  %150 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %149, i64 0, i32 0, i32 1
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, null
  br i1 %152, label %187, label %153

153:                                              ; preds = %147, %162
  %154 = phi %"class.std::__1::__tree_node_base"* [ %163, %162 ], [ %151, %147 ]
  %155 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %154, i64 0, i32 0, i32 0
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %155, align 8
  %157 = icmp eq %"class.std::__1::__tree_node_base"* %156, null
  br i1 %157, label %158, label %162

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %154, i64 0, i32 1
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = icmp eq %"class.std::__1::__tree_node_base"* %160, null
  br i1 %161, label %164, label %162

162:                                              ; preds = %158, %153
  %163 = phi %"class.std::__1::__tree_node_base"* [ %156, %153 ], [ %160, %158 ]
  br label %153

164:                                              ; preds = %158
  %165 = bitcast %"class.std::__1::__tree_node_base"* %154 to %"class.std::__1::__tree_node"*
  br label %187

166:                                              ; preds = %142
  %167 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %140, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %167, align 8
  %168 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %139, align 8
  %169 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %168, i64 0, i32 0
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %169, align 8
  %171 = icmp eq %"class.std::__1::__tree_node_base"* %170, null
  br i1 %171, label %172, label %174

172:                                              ; preds = %166
  %173 = bitcast %"class.std::__1::__tree_end_node"* %168 to %"class.std::__1::__tree_node"*
  br label %187

174:                                              ; preds = %166, %183
  %175 = phi %"class.std::__1::__tree_node_base"* [ %184, %183 ], [ %170, %166 ]
  %176 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %175, i64 0, i32 0, i32 0
  %177 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %176, align 8
  %178 = icmp eq %"class.std::__1::__tree_node_base"* %177, null
  br i1 %178, label %179, label %183

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %175, i64 0, i32 1
  %181 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %180, align 8
  %182 = icmp eq %"class.std::__1::__tree_node_base"* %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179, %174
  %184 = phi %"class.std::__1::__tree_node_base"* [ %177, %174 ], [ %181, %179 ]
  br label %174

185:                                              ; preds = %179
  %186 = bitcast %"class.std::__1::__tree_node_base"* %175 to %"class.std::__1::__tree_node"*
  br label %187

187:                                              ; preds = %185, %172, %164, %147, %137
  %188 = phi %"class.std::__1::__tree_node"* [ %165, %164 ], [ %173, %172 ], [ %186, %185 ], [ null, %137 ], [ %149, %147 ]
  %189 = ptrtoint %"class.std::__1::__tree_node"* %188 to i64
  br label %190

190:                                              ; preds = %131, %187
  %191 = phi i64 [ 0, %131 ], [ %189, %187 ]
  %192 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 1, i32 0
  %193 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %192, align 8
  %194 = icmp eq %"class.std::__1::__tree_node_base"* %193, null
  br i1 %194, label %195, label %203

195:                                              ; preds = %190
  %196 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::__tree_node_base"*
  %197 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 2
  %198 = bitcast %"class.std::__1::__tree_end_node"* %197 to %"class.std::__1::__tree_end_node"**
  %199 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %199, i64 0, i32 0
  %201 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %200, align 8
  %202 = icmp eq %"class.std::__1::__tree_node_base"* %201, %196
  br i1 %202, label %219, label %210

203:                                              ; preds = %190, %203
  %204 = phi %"class.std::__1::__tree_node_base"* [ %206, %203 ], [ %193, %190 ]
  %205 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %204, i64 0, i32 0, i32 0
  %206 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %205, align 8
  %207 = icmp eq %"class.std::__1::__tree_node_base"* %206, null
  br i1 %207, label %208, label %203

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %204, i64 0, i32 0
  br label %219

210:                                              ; preds = %195, %210
  %211 = phi %"class.std::__1::__tree_end_node"** [ %214, %210 ], [ %198, %195 ]
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 2
  %215 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %214, align 8
  %216 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %215, i64 0, i32 0
  %217 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %216, align 8
  %218 = icmp eq %"class.std::__1::__tree_node_base"* %217, %213
  br i1 %218, label %219, label %210

219:                                              ; preds = %210, %195, %208
  %220 = phi %"class.std::__1::__tree_end_node"* [ %209, %208 ], [ %199, %195 ], [ %215, %210 ]
  %221 = inttoptr i64 %191 to %"class.std::__1::__tree_node"*
  %222 = icmp ne %"class.std::__1::__tree_node"* %80, null
  %223 = icmp ne %"class.std::__1::__tree_end_node"* %220, %2
  %224 = and i1 %222, %223
  br i1 %224, label %79, label %225

225:                                              ; preds = %219
  %226 = inttoptr i64 %191 to %"class.std::__1::__tree_node"*
  br label %227

227:                                              ; preds = %71, %225
  %228 = phi %"class.std::__1::__tree_node"* [ %72, %71 ], [ %226, %225 ]
  %229 = phi %"class.std::__1::__tree_node"* [ %19, %71 ], [ %80, %225 ]
  %230 = phi i64 [ %73, %71 ], [ %191, %225 ]
  %231 = phi %"class.std::__1::__tree_end_node"* [ %1, %71 ], [ %220, %225 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler8VariableEPNS4_4NodeEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS3_13ZoneAllocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1265"* %0, %"class.std::__1::__tree_node"* %229) #8
  %232 = icmp eq i64 %230, 0
  br i1 %232, label %247, label %233

233:                                              ; preds = %227
  %234 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %228, i64 0, i32 0, i32 2
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %234, align 8
  %236 = icmp eq %"class.std::__1::__tree_end_node"* %235, null
  br i1 %236, label %245, label %237

237:                                              ; preds = %233, %237
  %238 = phi %"class.std::__1::__tree_end_node"* [ %241, %237 ], [ %235, %233 ]
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %238, i64 2
  %240 = bitcast %"class.std::__1::__tree_end_node"* %239 to %"class.std::__1::__tree_end_node"**
  %241 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %240, align 8
  %242 = icmp eq %"class.std::__1::__tree_end_node"* %241, null
  br i1 %242, label %243, label %237

243:                                              ; preds = %237
  %244 = bitcast %"class.std::__1::__tree_end_node"* %238 to %"class.std::__1::__tree_node"*
  br label %245

245:                                              ; preds = %243, %233
  %246 = phi %"class.std::__1::__tree_node"* [ %228, %233 ], [ %244, %243 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler8VariableEPNS4_4NodeEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS3_13ZoneAllocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1265"* %0, %"class.std::__1::__tree_node"* %246) #8
  br label %247

247:                                              ; preds = %21, %245, %227, %3
  %248 = phi %"class.std::__1::__tree_end_node"* [ %1, %3 ], [ %231, %227 ], [ %231, %245 ], [ %1, %21 ]
  %249 = icmp eq %"class.std::__1::__tree_end_node"* %248, %2
  br i1 %249, label %353, label %250

250:                                              ; preds = %247
  %251 = getelementptr inbounds %"class.std::__1::__tree.1265", %"class.std::__1::__tree.1265"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %252 = getelementptr inbounds %"class.std::__1::__tree.1265", %"class.std::__1::__tree.1265"* %0, i64 0, i32 1, i32 0, i32 0
  %253 = bitcast %"class.std::__1::__tree_end_node"* %252 to %"class.std::__1::__tree_node"**
  %254 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %252, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree.1265", %"class.std::__1::__tree.1265"* %0, i64 0, i32 0
  %256 = bitcast %"class.std::__1::__tree.1265"* %0 to i64*
  %257 = getelementptr inbounds %"class.std::__1::__tree.1265", %"class.std::__1::__tree.1265"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %258

258:                                              ; preds = %250, %350
  %259 = phi %"class.std::__1::__tree_end_node"* [ %248, %250 ], [ %351, %350 ]
  %260 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %259, i64 4
  %261 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %251, align 8, !noalias !117
  %262 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %261, i64 0, i32 2
  %263 = load i64, i64* %262, align 8, !noalias !117
  %264 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %261, i64 0, i32 3
  %265 = load i64, i64* %264, align 8, !noalias !117
  %266 = sub i64 %265, %263
  %267 = icmp ult i64 %266, 48
  br i1 %267, label %268, label %270, !prof !5

268:                                              ; preds = %258
  %269 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %261, i64 48) #8, !noalias !117
  br label %272

270:                                              ; preds = %258
  %271 = add i64 %263, 48
  store i64 %271, i64* %262, align 8, !noalias !117
  br label %272

272:                                              ; preds = %270, %268
  %273 = phi i64 [ %269, %268 ], [ %263, %270 ]
  %274 = inttoptr i64 %273 to %"class.std::__1::__tree_node"*
  %275 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %274, i64 0, i32 1, i32 0
  %276 = bitcast %"struct.std::__1::pair.1346"* %275 to i8*
  %277 = bitcast %"class.std::__1::__tree_end_node"* %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %276, i8* align 8 %277, i64 16, i1 false) #8, !noalias !117
  %278 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %253, align 8
  %279 = icmp eq %"class.std::__1::__tree_node"* %278, null
  br i1 %279, label %305, label %280

280:                                              ; preds = %272
  %281 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %274, i64 0, i32 1, i32 0, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  br label %283

283:                                              ; preds = %302, %280
  %284 = phi %"class.std::__1::__tree_node"* [ %304, %302 ], [ %278, %280 ]
  %285 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %284, i64 0, i32 1, i32 0, i32 0, i32 0
  %286 = load i32, i32* %285, align 4
  %287 = icmp slt i32 %282, %286
  br i1 %287, label %288, label %295

288:                                              ; preds = %283
  %289 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %284, i64 0, i32 0, i32 0, i32 0
  %290 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %289, align 8
  %291 = icmp eq %"class.std::__1::__tree_node_base"* %290, null
  br i1 %291, label %292, label %302

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %284, i64 0, i32 0, i32 0, i32 0
  %294 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %284, i64 0, i32 0, i32 0
  br label %305

295:                                              ; preds = %283
  %296 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %284, i64 0, i32 0, i32 1
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = icmp eq %"class.std::__1::__tree_node_base"* %297, null
  br i1 %298, label %299, label %302

299:                                              ; preds = %295
  %300 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %284, i64 0, i32 0, i32 1
  %301 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %284, i64 0, i32 0, i32 0
  br label %305

302:                                              ; preds = %295, %288
  %303 = phi %"class.std::__1::__tree_node_base"* [ %290, %288 ], [ %297, %295 ]
  %304 = bitcast %"class.std::__1::__tree_node_base"* %303 to %"class.std::__1::__tree_node"*
  br label %283

305:                                              ; preds = %272, %299, %292
  %306 = phi %"class.std::__1::__tree_end_node"* [ %294, %292 ], [ %301, %299 ], [ %252, %272 ]
  %307 = phi %"class.std::__1::__tree_node_base"** [ %293, %292 ], [ %300, %299 ], [ %254, %272 ]
  %308 = inttoptr i64 %273 to %"class.std::__1::__tree_node_base"*
  %309 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %308, i64 0, i32 2
  %310 = inttoptr i64 %273 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %310, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %306, %"class.std::__1::__tree_end_node"** %309, align 8
  store %"class.std::__1::__tree_node_base"* %308, %"class.std::__1::__tree_node_base"** %307, align 8
  %311 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %255, align 8
  %312 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %311, i64 0, i32 0
  %313 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %312, align 8
  %314 = icmp eq %"class.std::__1::__tree_node_base"* %313, null
  br i1 %314, label %318, label %315

315:                                              ; preds = %305
  %316 = ptrtoint %"class.std::__1::__tree_node_base"* %313 to i64
  store i64 %316, i64* %256, align 8
  %317 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %307, align 8
  br label %318

318:                                              ; preds = %305, %315
  %319 = phi %"class.std::__1::__tree_node_base"* [ %308, %305 ], [ %317, %315 ]
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %257, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"* %319) #8
  %321 = load i64, i64* %4, align 8
  %322 = add i64 %321, 1
  store i64 %322, i64* %4, align 8
  %323 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %259, i64 1, i32 0
  %324 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %323, align 8
  %325 = icmp eq %"class.std::__1::__tree_node_base"* %324, null
  br i1 %325, label %326, label %334

326:                                              ; preds = %318
  %327 = bitcast %"class.std::__1::__tree_end_node"* %259 to %"class.std::__1::__tree_node_base"*
  %328 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %259, i64 2
  %329 = bitcast %"class.std::__1::__tree_end_node"* %328 to %"class.std::__1::__tree_end_node"**
  %330 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %329, align 8
  %331 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %330, i64 0, i32 0
  %332 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %331, align 8
  %333 = icmp eq %"class.std::__1::__tree_node_base"* %332, %327
  br i1 %333, label %350, label %341

334:                                              ; preds = %318, %334
  %335 = phi %"class.std::__1::__tree_node_base"* [ %337, %334 ], [ %324, %318 ]
  %336 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %335, i64 0, i32 0, i32 0
  %337 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %336, align 8
  %338 = icmp eq %"class.std::__1::__tree_node_base"* %337, null
  br i1 %338, label %339, label %334

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %335, i64 0, i32 0
  br label %350

341:                                              ; preds = %326, %341
  %342 = phi %"class.std::__1::__tree_end_node"** [ %345, %341 ], [ %329, %326 ]
  %343 = bitcast %"class.std::__1::__tree_end_node"** %342 to %"class.std::__1::__tree_node_base"**
  %344 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %343, align 8
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %344, i64 0, i32 2
  %346 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %345, align 8
  %347 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %346, i64 0, i32 0
  %348 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %347, align 8
  %349 = icmp eq %"class.std::__1::__tree_node_base"* %348, %344
  br i1 %349, label %350, label %341

350:                                              ; preds = %341, %326, %339
  %351 = phi %"class.std::__1::__tree_end_node"* [ %340, %339 ], [ %330, %326 ], [ %346, %341 ]
  %352 = icmp eq %"class.std::__1::__tree_end_node"* %351, %2
  br i1 %352, label %353, label %258

353:                                              ; preds = %350, %247
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler8VariableEPNS4_4NodeEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS3_13ZoneAllocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1265"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler8VariableEPNS4_4NodeEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS3_13ZoneAllocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1265"* %0, %"class.std::__1::__tree_node"* %7) #8
  %8 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10ValueInputEi(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %5, align 8
  %7 = icmp sgt i32 %1, -1
  br i1 %7, label %9, label %8, !prof !4

8:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #9
  unreachable

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %6, i64 0, i32 0
  %11 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %11, i64 0, i32 5
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, %1
  br i1 %14, label %16, label %15, !prof !4

15:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %6, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 251658240
  %20 = icmp eq i32 %19, 251658240
  %21 = ptrtoint %"class.v8::internal::compiler::Node"* %6 to i64
  %22 = add i64 %21, 32
  br i1 %20, label %23, label %27

23:                                               ; preds = %16
  %24 = inttoptr i64 %22 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 16
  br label %27

27:                                               ; preds = %16, %23
  %28 = phi i64 [ %26, %23 ], [ %22, %16 ]
  %29 = inttoptr i64 %28 to %"class.v8::internal::compiler::Node"**
  %30 = sext i32 %1 to i64
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %30
  %32 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %32, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 16777215
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %33, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast %"class.v8::internal::compiler::Node"*** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.v8::internal::compiler::Sidetable"* %33 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = ashr exact i64 %44, 3
  %46 = icmp ugt i64 %45, %37
  %47 = inttoptr i64 %43 to %"class.v8::internal::compiler::Node"**
  br i1 %46, label %60, label %48

48:                                               ; preds = %27
  %49 = add nuw nsw i32 %36, 1
  %50 = zext i32 %49 to i64
  %51 = icmp ult i64 %45, %50
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = sub nsw i64 %50, %45
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"* %38, i64 %53) #8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Sidetable", %"class.v8::internal::compiler::Sidetable"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %54, align 8
  br label %60

56:                                               ; preds = %48
  %57 = icmp ugt i64 %45, %50
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %47, i64 %50
  store %"class.v8::internal::compiler::Node"** %59, %"class.v8::internal::compiler::Node"*** %39, align 8
  br label %60

60:                                               ; preds = %27, %52, %56, %58
  %61 = phi %"class.v8::internal::compiler::Node"** [ %47, %58 ], [ %47, %56 ], [ %55, %52 ], [ %47, %27 ]
  %62 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %61, i64 %37
  %63 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %62, align 8
  %64 = icmp eq %"class.v8::internal::compiler::Node"* %63, null
  %65 = select i1 %64, %"class.v8::internal::compiler::Node"* %32, %"class.v8::internal::compiler::Node"* %63
  ret %"class.v8::internal::compiler::Node"* %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope17InitVirtualObjectEi(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %6, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 16777215
  %10 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %9) #8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %81, label %14

14:                                               ; preds = %2
  %15 = tail call i64 @llvm.ctpop.i64(i64 %12) #8, !range !3
  %16 = icmp ugt i64 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = add i64 %12, -1
  %19 = and i64 %18, %10
  br label %24

20:                                               ; preds = %14
  %21 = icmp ult i64 %10, %12
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = urem i64 %10, %12
  br label %24

24:                                               ; preds = %22, %20, %17
  %25 = phi i64 [ %19, %17 ], [ %23, %22 ], [ %10, %20 ]
  %26 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %27, i64 %25
  %29 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %29, null
  br i1 %30, label %81, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %29, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %33, null
  br i1 %34, label %81, label %35

35:                                               ; preds = %31
  %36 = add i64 %12, -1
  br i1 %16, label %37, label %59

37:                                               ; preds = %35, %55
  %38 = phi %"struct.std::__1::__hash_node_base.1319"* [ %57, %55 ], [ %33, %35 ]
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %38, i64 1
  %40 = bitcast %"struct.std::__1::__hash_node_base.1319"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %10, %41
  br i1 %42, label %50, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %41, %12
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %41, %12
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi i64 [ %46, %45 ], [ %41, %43 ]
  %49 = icmp eq i64 %48, %25
  br i1 %49, label %55, label %81

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %38, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.1319"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %9
  br i1 %54, label %77, label %55

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %38, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %57, null
  br i1 %58, label %81, label %37

59:                                               ; preds = %35, %73
  %60 = phi %"struct.std::__1::__hash_node_base.1319"* [ %75, %73 ], [ %33, %35 ]
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %60, i64 1
  %62 = bitcast %"struct.std::__1::__hash_node_base.1319"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %10, %63
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = and i64 %63, %36
  %67 = icmp eq i64 %66, %25
  br i1 %67, label %73, label %81

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %60, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.1319"* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, %9
  br i1 %72, label %77, label %73

73:                                               ; preds = %68, %65
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %60, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %75, null
  br i1 %76, label %81, label %59

77:                                               ; preds = %68, %50
  %78 = phi %"struct.std::__1::__hash_node_base.1319"* [ %38, %50 ], [ %60, %68 ]
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %78, i64 3
  %80 = bitcast %"struct.std::__1::__hash_node_base.1319"* %79 to %"class.v8::internal::compiler::VirtualObject"**
  br label %83

81:                                               ; preds = %73, %65, %55, %47, %31, %24, %2
  %82 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 0, i32 0
  br label %83

83:                                               ; preds = %77, %81
  %84 = phi %"class.v8::internal::compiler::VirtualObject"** [ %80, %77 ], [ %82, %81 ]
  %85 = load %"class.v8::internal::compiler::VirtualObject"*, %"class.v8::internal::compiler::VirtualObject"** %84, align 8
  %86 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %85, null
  br i1 %86, label %99, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %85, i64 0, i32 3, i32 0
  %89 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %85, i64 0, i32 3, i32 0, i32 0, i32 1
  %90 = bitcast %"class.v8::internal::compiler::Variable"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.std::__1::vector.1307"* %88 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %91, %93
  %95 = trunc i64 %94 to i32
  %96 = and i32 %95, -4
  %97 = icmp eq i32 %96, %1
  br i1 %97, label %123, label %98, !prof !4

98:                                               ; preds = %87
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0)) #9
  unreachable

99:                                               ; preds = %83
  %100 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %3, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %100, i64 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = icmp ugt i32 %102, 99
  br i1 %103, label %363, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %100, i64 0, i32 5
  %106 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %100, i64 0, i32 2
  %108 = add nuw nsw i32 %102, 1
  store i32 %108, i32* %101, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %106, i64 0, i32 2
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %106, i64 0, i32 3
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 %112, %110
  %114 = icmp ult i64 %113, 72
  br i1 %114, label %115, label %117, !prof !5

115:                                              ; preds = %104
  %116 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %106, i64 72) #8
  br label %119

117:                                              ; preds = %104
  %118 = add i64 %110, 72
  store i64 %118, i64* %109, align 8
  br label %119

119:                                              ; preds = %115, %117
  %120 = phi i64 [ %116, %115 ], [ %110, %117 ]
  %121 = inttoptr i64 %120 to %"class.v8::internal::compiler::VirtualObject"*
  tail call void @_ZN2v88internal8compiler13VirtualObjectC2EPNS1_15VariableTrackerEji(%"class.v8::internal::compiler::VirtualObject"* %121, %"class.v8::internal::compiler::VariableTracker"* %107, i32 %102, i32 %1) #8
  %122 = icmp eq i64 %120, 0
  br i1 %122, label %363, label %123

123:                                              ; preds = %87, %119
  %124 = phi %"class.v8::internal::compiler::VirtualObject"* [ %121, %119 ], [ %85, %87 ]
  %125 = bitcast %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %128 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %130 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %129, align 8
  %131 = icmp eq %"class.v8::internal::compiler::Node"** %128, %130
  %132 = ptrtoint %"class.v8::internal::compiler::Node"** %130 to i64
  br i1 %131, label %138, label %133

133:                                              ; preds = %123
  %134 = bitcast %"class.v8::internal::compiler::Node"** %128 to i64*
  store i64 %126, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 1
  %136 = ptrtoint %"class.v8::internal::compiler::Node"** %135 to i64
  %137 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  store i64 %136, i64* %137, align 8
  br label %363

138:                                              ; preds = %123
  %139 = ptrtoint %"class.v8::internal::compiler::Node"** %128 to i64
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %141 = bitcast %"class.v8::internal::compiler::VirtualObject"* %124 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = sub i64 %139, %142
  %144 = ashr exact i64 %143, 3
  %145 = add nsw i64 %144, 1
  %146 = icmp ugt i64 %145, 268435455
  br i1 %146, label %147, label %149

147:                                              ; preds = %138
  %148 = bitcast %"class.v8::internal::compiler::VirtualObject"* %124 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %148) #9
  unreachable

149:                                              ; preds = %138
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %129 to i64*
  %151 = sub i64 %132, %142
  %152 = ashr exact i64 %151, 3
  %153 = icmp ult i64 %152, 134217727
  br i1 %153, label %154, label %159

154:                                              ; preds = %149
  %155 = ashr exact i64 %151, 2
  %156 = icmp ult i64 %155, %145
  %157 = select i1 %156, i64 %145, i64 %155
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %154, %149
  %160 = phi i64 [ %157, %154 ], [ 268435455, %149 ]
  %161 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %162 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %161, align 8
  %163 = shl i64 %160, 3
  %164 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %162, i64 0, i32 2
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %162, i64 0, i32 3
  %167 = load i64, i64* %166, align 8
  %168 = sub i64 %167, %165
  %169 = icmp ugt i64 %163, %168
  br i1 %169, label %170, label %172, !prof !5

170:                                              ; preds = %159
  %171 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %162, i64 %163) #8
  br label %174

172:                                              ; preds = %159
  %173 = add i64 %165, %163
  store i64 %173, i64* %164, align 8
  br label %174

174:                                              ; preds = %172, %170
  %175 = phi i64 [ %171, %170 ], [ %165, %172 ]
  %176 = inttoptr i64 %175 to %"class.v8::internal::compiler::Node"**
  br label %177

177:                                              ; preds = %174, %154
  %178 = phi i64 [ %160, %174 ], [ 0, %154 ]
  %179 = phi %"class.v8::internal::compiler::Node"** [ %176, %174 ], [ null, %154 ]
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 %144
  %181 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 %178
  %182 = ptrtoint %"class.v8::internal::compiler::Node"** %181 to i64
  %183 = bitcast %"class.v8::internal::compiler::Node"** %180 to i64*
  store i64 %126, i64* %183, align 8
  %184 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, i64 1
  %185 = ptrtoint %"class.v8::internal::compiler::Node"** %184 to i64
  %186 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %186, align 8
  %188 = ptrtoint %"class.v8::internal::compiler::Node"** %187 to i64
  %189 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %127, align 8
  %190 = icmp eq %"class.v8::internal::compiler::Node"** %189, %187
  br i1 %190, label %360, label %191

191:                                              ; preds = %177
  %192 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %189, i64 -1
  %193 = ptrtoint %"class.v8::internal::compiler::Node"** %192 to i64
  %194 = sub i64 %193, %188
  %195 = lshr i64 %194, 3
  %196 = add nuw nsw i64 %195, 1
  %197 = icmp ult i64 %196, 4
  br i1 %197, label %290, label %198

198:                                              ; preds = %191
  %199 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %189, i64 -1
  %200 = ptrtoint %"class.v8::internal::compiler::Node"** %199 to i64
  %201 = sub i64 %200, %188
  %202 = lshr i64 %201, 3
  %203 = xor i64 %202, -1
  %204 = add nsw i64 %144, %203
  %205 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 %204
  %206 = xor i64 %202, -1
  %207 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %189, i64 %206
  %208 = icmp ult %"class.v8::internal::compiler::Node"** %205, %189
  %209 = icmp ult %"class.v8::internal::compiler::Node"** %207, %180
  %210 = and i1 %208, %209
  br i1 %210, label %290, label %211

211:                                              ; preds = %198
  %212 = and i64 %196, 4611686018427387900
  %213 = sub nsw i64 0, %212
  %214 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, i64 %213
  %215 = sub nsw i64 0, %212
  %216 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %189, i64 %215
  %217 = add nsw i64 %212, -4
  %218 = lshr exact i64 %217, 2
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 1
  %221 = icmp eq i64 %217, 0
  br i1 %221, label %268, label %222

222:                                              ; preds = %211
  %223 = sub nuw nsw i64 %219, %220
  %224 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, i64 -1
  %225 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %189, i64 -1
  %226 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, i64 -1
  %227 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %189, i64 -1
  br label %228

228:                                              ; preds = %228, %222
  %229 = phi i64 [ 0, %222 ], [ %263, %228 ]
  %230 = phi i64 [ %223, %222 ], [ %264, %228 ]
  %231 = sub i64 0, %229
  %232 = sub i64 0, %229
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %224, i64 %231
  %234 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %225, i64 %232
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %234, i64 -1
  %236 = bitcast %"class.v8::internal::compiler::Node"** %235 to <2 x i64>*
  %237 = load <2 x i64>, <2 x i64>* %236, align 8, !alias.scope !120
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %234, i64 -2
  %239 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %238, i64 -1
  %240 = bitcast %"class.v8::internal::compiler::Node"** %239 to <2 x i64>*
  %241 = load <2 x i64>, <2 x i64>* %240, align 8, !alias.scope !120
  %242 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %233, i64 -1
  %243 = bitcast %"class.v8::internal::compiler::Node"** %242 to <2 x i64>*
  store <2 x i64> %237, <2 x i64>* %243, align 8, !alias.scope !123, !noalias !120
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %233, i64 -2
  %245 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %244, i64 -1
  %246 = bitcast %"class.v8::internal::compiler::Node"** %245 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %246, align 8, !alias.scope !123, !noalias !120
  %247 = sub nuw nsw i64 -4, %229
  %248 = sub nuw nsw i64 -4, %229
  %249 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %226, i64 %247
  %250 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %227, i64 %248
  %251 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %250, i64 -1
  %252 = bitcast %"class.v8::internal::compiler::Node"** %251 to <2 x i64>*
  %253 = load <2 x i64>, <2 x i64>* %252, align 8, !alias.scope !120
  %254 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %250, i64 -2
  %255 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %254, i64 -1
  %256 = bitcast %"class.v8::internal::compiler::Node"** %255 to <2 x i64>*
  %257 = load <2 x i64>, <2 x i64>* %256, align 8, !alias.scope !120
  %258 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %249, i64 -1
  %259 = bitcast %"class.v8::internal::compiler::Node"** %258 to <2 x i64>*
  store <2 x i64> %253, <2 x i64>* %259, align 8, !alias.scope !123, !noalias !120
  %260 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %249, i64 -2
  %261 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %260, i64 -1
  %262 = bitcast %"class.v8::internal::compiler::Node"** %261 to <2 x i64>*
  store <2 x i64> %257, <2 x i64>* %262, align 8, !alias.scope !123, !noalias !120
  %263 = add i64 %229, 8
  %264 = add i64 %230, -2
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %266, label %228, !llvm.loop !125

266:                                              ; preds = %228
  %267 = sub nuw nsw i64 -8, %229
  br label %268

268:                                              ; preds = %266, %211
  %269 = phi i64 [ 0, %211 ], [ %267, %266 ]
  %270 = icmp eq i64 %220, 0
  br i1 %270, label %288, label %271

271:                                              ; preds = %268
  %272 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, i64 -1
  %273 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %189, i64 -1
  %274 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %272, i64 %269
  %275 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %273, i64 %269
  %276 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %275, i64 -1
  %277 = bitcast %"class.v8::internal::compiler::Node"** %276 to <2 x i64>*
  %278 = load <2 x i64>, <2 x i64>* %277, align 8, !alias.scope !120
  %279 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %275, i64 -2
  %280 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %279, i64 -1
  %281 = bitcast %"class.v8::internal::compiler::Node"** %280 to <2 x i64>*
  %282 = load <2 x i64>, <2 x i64>* %281, align 8, !alias.scope !120
  %283 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %274, i64 -1
  %284 = bitcast %"class.v8::internal::compiler::Node"** %283 to <2 x i64>*
  store <2 x i64> %278, <2 x i64>* %284, align 8, !alias.scope !123, !noalias !120
  %285 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %274, i64 -2
  %286 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %285, i64 -1
  %287 = bitcast %"class.v8::internal::compiler::Node"** %286 to <2 x i64>*
  store <2 x i64> %282, <2 x i64>* %287, align 8, !alias.scope !123, !noalias !120
  br label %288

288:                                              ; preds = %268, %271
  %289 = icmp eq i64 %196, %212
  br i1 %289, label %360, label %290

290:                                              ; preds = %288, %198, %191
  %291 = phi %"class.v8::internal::compiler::Node"** [ %180, %198 ], [ %180, %191 ], [ %214, %288 ]
  %292 = phi %"class.v8::internal::compiler::Node"** [ %189, %198 ], [ %189, %191 ], [ %216, %288 ]
  %293 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %292, i64 -1
  %294 = ptrtoint %"class.v8::internal::compiler::Node"** %293 to i64
  %295 = sub i64 %294, %188
  %296 = lshr i64 %295, 3
  %297 = add nuw nsw i64 %296, 1
  %298 = and i64 %297, 7
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %311, label %300

300:                                              ; preds = %290, %300
  %301 = phi %"class.v8::internal::compiler::Node"** [ %304, %300 ], [ %291, %290 ]
  %302 = phi %"class.v8::internal::compiler::Node"** [ %305, %300 ], [ %292, %290 ]
  %303 = phi i64 [ %309, %300 ], [ %298, %290 ]
  %304 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %301, i64 -1
  %305 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %302, i64 -1
  %306 = bitcast %"class.v8::internal::compiler::Node"** %305 to i64*
  %307 = load i64, i64* %306, align 8
  %308 = bitcast %"class.v8::internal::compiler::Node"** %304 to i64*
  store i64 %307, i64* %308, align 8
  %309 = add i64 %303, -1
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %311, label %300, !llvm.loop !126

311:                                              ; preds = %300, %290
  %312 = phi %"class.v8::internal::compiler::Node"** [ undef, %290 ], [ %304, %300 ]
  %313 = phi %"class.v8::internal::compiler::Node"** [ %291, %290 ], [ %304, %300 ]
  %314 = phi %"class.v8::internal::compiler::Node"** [ %292, %290 ], [ %305, %300 ]
  %315 = icmp ult i64 %295, 56
  br i1 %315, label %360, label %316

316:                                              ; preds = %311, %316
  %317 = phi %"class.v8::internal::compiler::Node"** [ %354, %316 ], [ %313, %311 ]
  %318 = phi %"class.v8::internal::compiler::Node"** [ %355, %316 ], [ %314, %311 ]
  %319 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %317, i64 -1
  %320 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %318, i64 -1
  %321 = bitcast %"class.v8::internal::compiler::Node"** %320 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = bitcast %"class.v8::internal::compiler::Node"** %319 to i64*
  store i64 %322, i64* %323, align 8
  %324 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %317, i64 -2
  %325 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %318, i64 -2
  %326 = bitcast %"class.v8::internal::compiler::Node"** %325 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = bitcast %"class.v8::internal::compiler::Node"** %324 to i64*
  store i64 %327, i64* %328, align 8
  %329 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %317, i64 -3
  %330 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %318, i64 -3
  %331 = bitcast %"class.v8::internal::compiler::Node"** %330 to i64*
  %332 = load i64, i64* %331, align 8
  %333 = bitcast %"class.v8::internal::compiler::Node"** %329 to i64*
  store i64 %332, i64* %333, align 8
  %334 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %317, i64 -4
  %335 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %318, i64 -4
  %336 = bitcast %"class.v8::internal::compiler::Node"** %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = bitcast %"class.v8::internal::compiler::Node"** %334 to i64*
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %317, i64 -5
  %340 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %318, i64 -5
  %341 = bitcast %"class.v8::internal::compiler::Node"** %340 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = bitcast %"class.v8::internal::compiler::Node"** %339 to i64*
  store i64 %342, i64* %343, align 8
  %344 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %317, i64 -6
  %345 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %318, i64 -6
  %346 = bitcast %"class.v8::internal::compiler::Node"** %345 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = bitcast %"class.v8::internal::compiler::Node"** %344 to i64*
  store i64 %347, i64* %348, align 8
  %349 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %317, i64 -7
  %350 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %318, i64 -7
  %351 = bitcast %"class.v8::internal::compiler::Node"** %350 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = bitcast %"class.v8::internal::compiler::Node"** %349 to i64*
  store i64 %352, i64* %353, align 8
  %354 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %317, i64 -8
  %355 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %318, i64 -8
  %356 = bitcast %"class.v8::internal::compiler::Node"** %355 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = bitcast %"class.v8::internal::compiler::Node"** %354 to i64*
  store i64 %357, i64* %358, align 8
  %359 = icmp eq %"class.v8::internal::compiler::Node"** %355, %187
  br i1 %359, label %360, label %316, !llvm.loop !127

360:                                              ; preds = %311, %316, %288, %177
  %361 = phi %"class.v8::internal::compiler::Node"** [ %180, %177 ], [ %214, %288 ], [ %312, %311 ], [ %354, %316 ]
  %362 = ptrtoint %"class.v8::internal::compiler::Node"** %361 to i64
  store i64 %362, i64* %141, align 8
  store i64 %185, i64* %140, align 8
  store i64 %182, i64* %150, align 8
  br label %363

363:                                              ; preds = %99, %360, %133, %119
  %364 = phi %"class.v8::internal::compiler::VirtualObject"* [ null, %119 ], [ %124, %133 ], [ %124, %360 ], [ null, %99 ]
  %365 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 3
  store %"class.v8::internal::compiler::VirtualObject"* %364, %"class.v8::internal::compiler::VirtualObject"** %365, align 8
  ret %"class.v8::internal::compiler::VirtualObject"* %364
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16777215
  %8 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %7) #8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %79, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #8, !range !3
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, -1
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ult i64 %8, %10
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %27, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %31, null
  br i1 %32, label %79, label %33

33:                                               ; preds = %29
  %34 = add i64 %10, -1
  br i1 %14, label %35, label %57

35:                                               ; preds = %33, %53
  %36 = phi %"struct.std::__1::__hash_node_base.1319"* [ %55, %53 ], [ %31, %33 ]
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %36, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base.1319"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %8, %39
  br i1 %40, label %48, label %41

41:                                               ; preds = %35
  %42 = icmp ult i64 %39, %10
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %39, %10
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi i64 [ %44, %43 ], [ %39, %41 ]
  %47 = icmp eq i64 %46, %23
  br i1 %47, label %53, label %79

48:                                               ; preds = %35
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %36, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.1319"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %7
  br i1 %52, label %75, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %36, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %55, null
  br i1 %56, label %79, label %35

57:                                               ; preds = %33, %71
  %58 = phi %"struct.std::__1::__hash_node_base.1319"* [ %73, %71 ], [ %31, %33 ]
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %58, i64 1
  %60 = bitcast %"struct.std::__1::__hash_node_base.1319"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %8, %61
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = and i64 %61, %34
  %65 = icmp eq i64 %64, %23
  br i1 %65, label %71, label %79

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %58, i64 2
  %68 = bitcast %"struct.std::__1::__hash_node_base.1319"* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, %7
  br i1 %70, label %75, label %71

71:                                               ; preds = %66, %63
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %58, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %72, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %73, null
  br i1 %74, label %79, label %57

75:                                               ; preds = %66, %48
  %76 = phi %"struct.std::__1::__hash_node_base.1319"* [ %36, %48 ], [ %58, %66 ]
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %76, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base.1319"* %77 to %"class.v8::internal::compiler::VirtualObject"**
  br label %81

79:                                               ; preds = %71, %63, %53, %45, %29, %22, %2
  %80 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 0, i32 0
  br label %81

81:                                               ; preds = %75, %79
  %82 = phi %"class.v8::internal::compiler::VirtualObject"** [ %78, %75 ], [ %80, %79 ]
  %83 = load %"class.v8::internal::compiler::VirtualObject"*, %"class.v8::internal::compiler::VirtualObject"** %82, align 8
  %84 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %83, null
  br i1 %84, label %324, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %91 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %90, align 8
  %92 = icmp eq %"class.v8::internal::compiler::Node"** %89, %91
  %93 = ptrtoint %"class.v8::internal::compiler::Node"** %91 to i64
  br i1 %92, label %99, label %94

94:                                               ; preds = %85
  %95 = bitcast %"class.v8::internal::compiler::Node"** %89 to i64*
  store i64 %87, i64* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 1
  %97 = ptrtoint %"class.v8::internal::compiler::Node"** %96 to i64
  %98 = bitcast %"class.v8::internal::compiler::Node"*** %88 to i64*
  store i64 %97, i64* %98, align 8
  br label %324

99:                                               ; preds = %85
  %100 = ptrtoint %"class.v8::internal::compiler::Node"** %89 to i64
  %101 = bitcast %"class.v8::internal::compiler::Node"*** %88 to i64*
  %102 = bitcast %"class.v8::internal::compiler::VirtualObject"* %83 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %100, %103
  %105 = ashr exact i64 %104, 3
  %106 = add nsw i64 %105, 1
  %107 = icmp ugt i64 %106, 268435455
  br i1 %107, label %108, label %110

108:                                              ; preds = %99
  %109 = bitcast %"class.v8::internal::compiler::VirtualObject"* %83 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %109) #9
  unreachable

110:                                              ; preds = %99
  %111 = bitcast %"class.v8::internal::compiler::Node"*** %90 to i64*
  %112 = sub i64 %93, %103
  %113 = ashr exact i64 %112, 3
  %114 = icmp ult i64 %113, 134217727
  br i1 %114, label %115, label %120

115:                                              ; preds = %110
  %116 = ashr exact i64 %112, 2
  %117 = icmp ult i64 %116, %106
  %118 = select i1 %117, i64 %106, i64 %116
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %138, label %120

120:                                              ; preds = %115, %110
  %121 = phi i64 [ %118, %115 ], [ 268435455, %110 ]
  %122 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %123 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %122, align 8
  %124 = shl i64 %121, 3
  %125 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %123, i64 0, i32 2
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %123, i64 0, i32 3
  %128 = load i64, i64* %127, align 8
  %129 = sub i64 %128, %126
  %130 = icmp ugt i64 %124, %129
  br i1 %130, label %131, label %133, !prof !5

131:                                              ; preds = %120
  %132 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %123, i64 %124) #8
  br label %135

133:                                              ; preds = %120
  %134 = add i64 %126, %124
  store i64 %134, i64* %125, align 8
  br label %135

135:                                              ; preds = %133, %131
  %136 = phi i64 [ %132, %131 ], [ %126, %133 ]
  %137 = inttoptr i64 %136 to %"class.v8::internal::compiler::Node"**
  br label %138

138:                                              ; preds = %135, %115
  %139 = phi i64 [ %121, %135 ], [ 0, %115 ]
  %140 = phi %"class.v8::internal::compiler::Node"** [ %137, %135 ], [ null, %115 ]
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %140, i64 %105
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %140, i64 %139
  %143 = ptrtoint %"class.v8::internal::compiler::Node"** %142 to i64
  %144 = bitcast %"class.v8::internal::compiler::Node"** %141 to i64*
  store i64 %87, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %141, i64 1
  %146 = ptrtoint %"class.v8::internal::compiler::Node"** %145 to i64
  %147 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %147, align 8
  %149 = ptrtoint %"class.v8::internal::compiler::Node"** %148 to i64
  %150 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %88, align 8
  %151 = icmp eq %"class.v8::internal::compiler::Node"** %150, %148
  br i1 %151, label %321, label %152

152:                                              ; preds = %138
  %153 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 -1
  %154 = ptrtoint %"class.v8::internal::compiler::Node"** %153 to i64
  %155 = sub i64 %154, %149
  %156 = lshr i64 %155, 3
  %157 = add nuw nsw i64 %156, 1
  %158 = icmp ult i64 %157, 4
  br i1 %158, label %251, label %159

159:                                              ; preds = %152
  %160 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 -1
  %161 = ptrtoint %"class.v8::internal::compiler::Node"** %160 to i64
  %162 = sub i64 %161, %149
  %163 = lshr i64 %162, 3
  %164 = xor i64 %163, -1
  %165 = add nsw i64 %105, %164
  %166 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %140, i64 %165
  %167 = xor i64 %163, -1
  %168 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 %167
  %169 = icmp ult %"class.v8::internal::compiler::Node"** %166, %150
  %170 = icmp ult %"class.v8::internal::compiler::Node"** %168, %141
  %171 = and i1 %169, %170
  br i1 %171, label %251, label %172

172:                                              ; preds = %159
  %173 = and i64 %157, 4611686018427387900
  %174 = sub nsw i64 0, %173
  %175 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %141, i64 %174
  %176 = sub nsw i64 0, %173
  %177 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 %176
  %178 = add nsw i64 %173, -4
  %179 = lshr exact i64 %178, 2
  %180 = add nuw nsw i64 %179, 1
  %181 = and i64 %180, 1
  %182 = icmp eq i64 %178, 0
  br i1 %182, label %229, label %183

183:                                              ; preds = %172
  %184 = sub nuw nsw i64 %180, %181
  %185 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %141, i64 -1
  %186 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 -1
  %187 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %141, i64 -1
  %188 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 -1
  br label %189

189:                                              ; preds = %189, %183
  %190 = phi i64 [ 0, %183 ], [ %224, %189 ]
  %191 = phi i64 [ %184, %183 ], [ %225, %189 ]
  %192 = sub i64 0, %190
  %193 = sub i64 0, %190
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %185, i64 %192
  %195 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %186, i64 %193
  %196 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::Node"** %196 to <2 x i64>*
  %198 = load <2 x i64>, <2 x i64>* %197, align 8, !alias.scope !128
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -2
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %199, i64 -1
  %201 = bitcast %"class.v8::internal::compiler::Node"** %200 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 8, !alias.scope !128
  %203 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %194, i64 -1
  %204 = bitcast %"class.v8::internal::compiler::Node"** %203 to <2 x i64>*
  store <2 x i64> %198, <2 x i64>* %204, align 8, !alias.scope !131, !noalias !128
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %194, i64 -2
  %206 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -1
  %207 = bitcast %"class.v8::internal::compiler::Node"** %206 to <2 x i64>*
  store <2 x i64> %202, <2 x i64>* %207, align 8, !alias.scope !131, !noalias !128
  %208 = sub nuw nsw i64 -4, %190
  %209 = sub nuw nsw i64 -4, %190
  %210 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %187, i64 %208
  %211 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %188, i64 %209
  %212 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -1
  %213 = bitcast %"class.v8::internal::compiler::Node"** %212 to <2 x i64>*
  %214 = load <2 x i64>, <2 x i64>* %213, align 8, !alias.scope !128
  %215 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -2
  %216 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 -1
  %217 = bitcast %"class.v8::internal::compiler::Node"** %216 to <2 x i64>*
  %218 = load <2 x i64>, <2 x i64>* %217, align 8, !alias.scope !128
  %219 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -1
  %220 = bitcast %"class.v8::internal::compiler::Node"** %219 to <2 x i64>*
  store <2 x i64> %214, <2 x i64>* %220, align 8, !alias.scope !131, !noalias !128
  %221 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -2
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 -1
  %223 = bitcast %"class.v8::internal::compiler::Node"** %222 to <2 x i64>*
  store <2 x i64> %218, <2 x i64>* %223, align 8, !alias.scope !131, !noalias !128
  %224 = add i64 %190, 8
  %225 = add i64 %191, -2
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %189, !llvm.loop !133

227:                                              ; preds = %189
  %228 = sub nuw nsw i64 -8, %190
  br label %229

229:                                              ; preds = %227, %172
  %230 = phi i64 [ 0, %172 ], [ %228, %227 ]
  %231 = icmp eq i64 %181, 0
  br i1 %231, label %249, label %232

232:                                              ; preds = %229
  %233 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %141, i64 -1
  %234 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 -1
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %233, i64 %230
  %236 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %234, i64 %230
  %237 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %236, i64 -1
  %238 = bitcast %"class.v8::internal::compiler::Node"** %237 to <2 x i64>*
  %239 = load <2 x i64>, <2 x i64>* %238, align 8, !alias.scope !128
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %236, i64 -2
  %241 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %240, i64 -1
  %242 = bitcast %"class.v8::internal::compiler::Node"** %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 8, !alias.scope !128
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %235, i64 -1
  %245 = bitcast %"class.v8::internal::compiler::Node"** %244 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %245, align 8, !alias.scope !131, !noalias !128
  %246 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %235, i64 -2
  %247 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %246, i64 -1
  %248 = bitcast %"class.v8::internal::compiler::Node"** %247 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %248, align 8, !alias.scope !131, !noalias !128
  br label %249

249:                                              ; preds = %229, %232
  %250 = icmp eq i64 %157, %173
  br i1 %250, label %321, label %251

251:                                              ; preds = %249, %159, %152
  %252 = phi %"class.v8::internal::compiler::Node"** [ %141, %159 ], [ %141, %152 ], [ %175, %249 ]
  %253 = phi %"class.v8::internal::compiler::Node"** [ %150, %159 ], [ %150, %152 ], [ %177, %249 ]
  %254 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %253, i64 -1
  %255 = ptrtoint %"class.v8::internal::compiler::Node"** %254 to i64
  %256 = sub i64 %255, %149
  %257 = lshr i64 %256, 3
  %258 = add nuw nsw i64 %257, 1
  %259 = and i64 %258, 7
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %272, label %261

261:                                              ; preds = %251, %261
  %262 = phi %"class.v8::internal::compiler::Node"** [ %265, %261 ], [ %252, %251 ]
  %263 = phi %"class.v8::internal::compiler::Node"** [ %266, %261 ], [ %253, %251 ]
  %264 = phi i64 [ %270, %261 ], [ %259, %251 ]
  %265 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %262, i64 -1
  %266 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %263, i64 -1
  %267 = bitcast %"class.v8::internal::compiler::Node"** %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = bitcast %"class.v8::internal::compiler::Node"** %265 to i64*
  store i64 %268, i64* %269, align 8
  %270 = add i64 %264, -1
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %261, !llvm.loop !134

272:                                              ; preds = %261, %251
  %273 = phi %"class.v8::internal::compiler::Node"** [ undef, %251 ], [ %265, %261 ]
  %274 = phi %"class.v8::internal::compiler::Node"** [ %252, %251 ], [ %265, %261 ]
  %275 = phi %"class.v8::internal::compiler::Node"** [ %253, %251 ], [ %266, %261 ]
  %276 = icmp ult i64 %256, 56
  br i1 %276, label %321, label %277

277:                                              ; preds = %272, %277
  %278 = phi %"class.v8::internal::compiler::Node"** [ %315, %277 ], [ %274, %272 ]
  %279 = phi %"class.v8::internal::compiler::Node"** [ %316, %277 ], [ %275, %272 ]
  %280 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %278, i64 -1
  %281 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %279, i64 -1
  %282 = bitcast %"class.v8::internal::compiler::Node"** %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = bitcast %"class.v8::internal::compiler::Node"** %280 to i64*
  store i64 %283, i64* %284, align 8
  %285 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %278, i64 -2
  %286 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %279, i64 -2
  %287 = bitcast %"class.v8::internal::compiler::Node"** %286 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = bitcast %"class.v8::internal::compiler::Node"** %285 to i64*
  store i64 %288, i64* %289, align 8
  %290 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %278, i64 -3
  %291 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %279, i64 -3
  %292 = bitcast %"class.v8::internal::compiler::Node"** %291 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = bitcast %"class.v8::internal::compiler::Node"** %290 to i64*
  store i64 %293, i64* %294, align 8
  %295 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %278, i64 -4
  %296 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %279, i64 -4
  %297 = bitcast %"class.v8::internal::compiler::Node"** %296 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = bitcast %"class.v8::internal::compiler::Node"** %295 to i64*
  store i64 %298, i64* %299, align 8
  %300 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %278, i64 -5
  %301 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %279, i64 -5
  %302 = bitcast %"class.v8::internal::compiler::Node"** %301 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = bitcast %"class.v8::internal::compiler::Node"** %300 to i64*
  store i64 %303, i64* %304, align 8
  %305 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %278, i64 -6
  %306 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %279, i64 -6
  %307 = bitcast %"class.v8::internal::compiler::Node"** %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = bitcast %"class.v8::internal::compiler::Node"** %305 to i64*
  store i64 %308, i64* %309, align 8
  %310 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %278, i64 -7
  %311 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %279, i64 -7
  %312 = bitcast %"class.v8::internal::compiler::Node"** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.v8::internal::compiler::Node"** %310 to i64*
  store i64 %313, i64* %314, align 8
  %315 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %278, i64 -8
  %316 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %279, i64 -8
  %317 = bitcast %"class.v8::internal::compiler::Node"** %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %"class.v8::internal::compiler::Node"** %315 to i64*
  store i64 %318, i64* %319, align 8
  %320 = icmp eq %"class.v8::internal::compiler::Node"** %316, %148
  br i1 %320, label %321, label %277, !llvm.loop !135

321:                                              ; preds = %272, %277, %249, %138
  %322 = phi %"class.v8::internal::compiler::Node"** [ %141, %138 ], [ %175, %249 ], [ %273, %272 ], [ %315, %277 ]
  %323 = ptrtoint %"class.v8::internal::compiler::Node"** %322 to i64
  store i64 %323, i64* %102, align 8
  store i64 %146, i64* %101, align 8
  store i64 %143, i64* %111, align 8
  br label %324

324:                                              ; preds = %321, %94, %81
  ret %"class.v8::internal::compiler::VirtualObject"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope10SetEscapedEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16777215
  %8 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %7) #8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %79, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #8, !range !3
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, -1
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ult i64 %8, %10
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %27, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %31, null
  br i1 %32, label %79, label %33

33:                                               ; preds = %29
  %34 = add i64 %10, -1
  br i1 %14, label %35, label %57

35:                                               ; preds = %33, %53
  %36 = phi %"struct.std::__1::__hash_node_base.1319"* [ %55, %53 ], [ %31, %33 ]
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %36, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base.1319"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %8, %39
  br i1 %40, label %48, label %41

41:                                               ; preds = %35
  %42 = icmp ult i64 %39, %10
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %39, %10
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi i64 [ %44, %43 ], [ %39, %41 ]
  %47 = icmp eq i64 %46, %23
  br i1 %47, label %53, label %79

48:                                               ; preds = %35
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %36, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.1319"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %7
  br i1 %52, label %75, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %36, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %55, null
  br i1 %56, label %79, label %35

57:                                               ; preds = %33, %71
  %58 = phi %"struct.std::__1::__hash_node_base.1319"* [ %73, %71 ], [ %31, %33 ]
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %58, i64 1
  %60 = bitcast %"struct.std::__1::__hash_node_base.1319"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %8, %61
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = and i64 %61, %34
  %65 = icmp eq i64 %64, %23
  br i1 %65, label %71, label %79

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %58, i64 2
  %68 = bitcast %"struct.std::__1::__hash_node_base.1319"* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, %7
  br i1 %70, label %75, label %71

71:                                               ; preds = %66, %63
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %58, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %72, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %73, null
  br i1 %74, label %79, label %57

75:                                               ; preds = %66, %48
  %76 = phi %"struct.std::__1::__hash_node_base.1319"* [ %36, %48 ], [ %58, %66 ]
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %76, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base.1319"* %77 to %"class.v8::internal::compiler::VirtualObject"**
  br label %81

79:                                               ; preds = %71, %63, %53, %45, %29, %22, %2
  %80 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %4, i64 0, i32 0, i32 0
  br label %81

81:                                               ; preds = %75, %79
  %82 = phi %"class.v8::internal::compiler::VirtualObject"** [ %78, %75 ], [ %80, %79 ]
  %83 = load %"class.v8::internal::compiler::VirtualObject"*, %"class.v8::internal::compiler::VirtualObject"** %82, align 8
  %84 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %83, null
  br i1 %84, label %164, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %83, i64 0, i32 1
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %164

89:                                               ; preds = %85
  store i8 1, i8* %86, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 2
  %91 = load %"class.v8::internal::compiler::EffectGraphReducer"*, %"class.v8::internal::compiler::EffectGraphReducer"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %94, align 8
  %96 = icmp eq %"class.v8::internal::compiler::Node"** %93, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %89
  %98 = ptrtoint %"class.v8::internal::compiler::Node"** %93 to i64
  br label %161

99:                                               ; preds = %89
  %100 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %91, i64 0, i32 2, i32 0, i32 0
  %101 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %91, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %102 = bitcast %"class.v8::internal::compiler::Node"**** %101 to i64*
  %103 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %91, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = bitcast %"class.v8::internal::compiler::Node"**** %103 to i64*
  %105 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %91, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %91, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %107 = getelementptr inbounds %"class.v8::internal::compiler::EffectGraphReducer", %"class.v8::internal::compiler::EffectGraphReducer"* %91, i64 0, i32 3, i32 0, i32 0, i32 0
  br label %111

108:                                              ; preds = %158
  %109 = bitcast %"class.v8::internal::compiler::VirtualObject"* %83 to i64*
  %110 = load i64, i64* %109, align 8
  br label %161

111:                                              ; preds = %158, %99
  %112 = phi %"class.v8::internal::compiler::Node"** [ %93, %99 ], [ %159, %158 ]
  %113 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, align 8
  %114 = ptrtoint %"class.v8::internal::compiler::Node"* %113 to i64
  %115 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %113, i64 0, i32 2
  %116 = load i32, i32* %115, align 8
  %117 = load i32, i32* %100, align 4
  %118 = tail call i32 @llvm.usub.sat.i32(i32 %116, i32 %117) #8
  %119 = trunc i32 %118 to i8
  %120 = icmp eq i8 %119, 3
  br i1 %120, label %121, label %158

121:                                              ; preds = %111
  %122 = add i32 %117, 1
  store i32 %122, i32* %115, align 8
  %123 = load i64, i64* %102, align 8
  %124 = load i64, i64* %104, align 8
  %125 = sub i64 %123, %124
  %126 = icmp eq i64 %125, 0
  %127 = shl i64 %125, 6
  %128 = add i64 %127, -1
  %129 = select i1 %126, i64 0, i64 %128
  %130 = load i64, i64* %105, align 8
  %131 = load i64, i64* %106, align 8
  %132 = add i64 %131, %130
  %133 = icmp eq i64 %129, %132
  %134 = inttoptr i64 %124 to %"class.v8::internal::compiler::Node"***
  %135 = inttoptr i64 %123 to %"class.v8::internal::compiler::Node"***
  br i1 %133, label %136, label %142

136:                                              ; preds = %121
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %107) #8
  %137 = load i64, i64* %106, align 8
  %138 = load i64, i64* %105, align 8
  %139 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %103, align 8
  %140 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %101, align 8
  %141 = add i64 %138, %137
  br label %142

142:                                              ; preds = %136, %121
  %143 = phi i64 [ %141, %136 ], [ %132, %121 ]
  %144 = phi %"class.v8::internal::compiler::Node"*** [ %140, %136 ], [ %135, %121 ]
  %145 = phi %"class.v8::internal::compiler::Node"*** [ %139, %136 ], [ %134, %121 ]
  %146 = icmp eq %"class.v8::internal::compiler::Node"*** %144, %145
  br i1 %146, label %154, label %147

147:                                              ; preds = %142
  %148 = lshr i64 %143, 9
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %145, i64 %148
  %150 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %149, align 8
  %151 = and i64 %143, 511
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 %151
  %153 = bitcast %"class.v8::internal::compiler::Node"** %152 to i64*
  br label %154

154:                                              ; preds = %147, %142
  %155 = phi i64* [ %153, %147 ], [ null, %142 ]
  store i64 %114, i64* %155, align 8
  %156 = load i64, i64* %106, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %106, align 8
  br label %158

158:                                              ; preds = %154, %111
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, i64 1
  %160 = icmp eq %"class.v8::internal::compiler::Node"** %159, %95
  br i1 %160, label %108, label %111

161:                                              ; preds = %97, %108
  %162 = phi i64 [ %110, %108 ], [ %98, %97 ]
  %163 = bitcast %"class.v8::internal::compiler::Node"*** %94 to i64*
  store i64 %162, i64* %163, align 8
  br label %164

164:                                              ; preds = %85, %161, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internal8compiler12_GLOBAL__N_122OffsetOfElementsAccessEPKNS1_8OperatorEPNS1_4NodeE(%"class.v8::internal::compiler::Operator"*, i64) unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::compiler::Type", align 8
  %4 = bitcast %"class.v8::internal::compiler::Type"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %3, i64 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = icmp eq i64 %1, 3167
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %3, i64 3167) #8
  br i1 %8, label %9, label %37

9:                                                ; preds = %2, %7
  %10 = call double @_ZNK2v88internal8compiler4Type3MaxEv(%"class.v8::internal::compiler::Type"* nonnull %3) #8
  %11 = call double @_ZNK2v88internal8compiler4Type3MinEv(%"class.v8::internal::compiler::Type"* nonnull %3) #8
  %12 = fptosi double %11 to i32
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %37, label %14

14:                                               ; preds = %9
  %15 = sitofp i32 %12 to double
  %16 = fcmp une double %11, %15
  %17 = fcmp une double %10, %15
  %18 = or i1 %16, %17
  br i1 %18, label %37, label %19

19:                                               ; preds = %14
  %20 = call dereferenceable(24) %"struct.v8::internal::compiler::ElementAccess"* @_ZN2v88internal8compiler15ElementAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %0) #8
  %21 = getelementptr inbounds %"struct.v8::internal::compiler::ElementAccess", %"struct.v8::internal::compiler::ElementAccess"* %20, i64 0, i32 3, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = add i8 %22, -1
  %24 = icmp ult i8 %23, 14
  br i1 %24, label %26, label %25

25:                                               ; preds = %19
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #9
  unreachable

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.v8::internal::compiler::ElementAccess", %"struct.v8::internal::compiler::ElementAccess"* %20, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = sext i8 %23 to i64
  %30 = getelementptr inbounds [14 x i32], [14 x i32]* @switch.table._ZN2v88internal8compiler12_GLOBAL__N_122OffsetOfElementsAccessEPKNS1_8OperatorEPNS1_4NodeE, i64 0, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = shl i32 %12, %31
  %33 = add nsw i32 %32, %28
  %34 = zext i32 %33 to i64
  %35 = shl nuw i64 %34, 32
  %36 = or i64 %35, 1
  br label %37

37:                                               ; preds = %9, %14, %7, %26
  %38 = phi i64 [ %36, %26 ], [ 0, %7 ], [ 0, %14 ], [ 0, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret i64 %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler21EscapeAnalysisTracker5Scope14SetReplacementEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 4
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %3, align 8
  %4 = icmp eq %"class.v8::internal::compiler::Node"* %1, null
  br i1 %4, label %87, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 16777215
  %11 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %10) #8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %82, label %15

15:                                               ; preds = %5
  %16 = tail call i64 @llvm.ctpop.i64(i64 %13) #8, !range !3
  %17 = icmp ugt i64 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = add i64 %13, -1
  %20 = and i64 %19, %11
  br label %25

21:                                               ; preds = %15
  %22 = icmp ult i64 %11, %13
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = urem i64 %11, %13
  br label %25

25:                                               ; preds = %23, %21, %18
  %26 = phi i64 [ %20, %18 ], [ %24, %23 ], [ %11, %21 ]
  %27 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %28, i64 %26
  %30 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %30, null
  br i1 %31, label %82, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %30, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %34, null
  br i1 %35, label %82, label %36

36:                                               ; preds = %32
  %37 = add i64 %13, -1
  br i1 %17, label %38, label %60

38:                                               ; preds = %36, %56
  %39 = phi %"struct.std::__1::__hash_node_base.1319"* [ %58, %56 ], [ %34, %36 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %39, i64 1
  %41 = bitcast %"struct.std::__1::__hash_node_base.1319"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %11, %42
  br i1 %43, label %51, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %42, %13
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %42, %13
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi i64 [ %47, %46 ], [ %42, %44 ]
  %50 = icmp eq i64 %49, %26
  br i1 %50, label %56, label %82

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %39, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base.1319"* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %10
  br i1 %55, label %78, label %56

56:                                               ; preds = %51, %48
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %39, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %58, null
  br i1 %59, label %82, label %38

60:                                               ; preds = %36, %74
  %61 = phi %"struct.std::__1::__hash_node_base.1319"* [ %76, %74 ], [ %34, %36 ]
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %61, i64 1
  %63 = bitcast %"struct.std::__1::__hash_node_base.1319"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %11, %64
  br i1 %65, label %69, label %66

66:                                               ; preds = %60
  %67 = and i64 %64, %37
  %68 = icmp eq i64 %67, %26
  br i1 %68, label %74, label %82

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %61, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base.1319"* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, %10
  br i1 %73, label %78, label %74

74:                                               ; preds = %69, %66
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %61, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %75, align 8
  %77 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %76, null
  br i1 %77, label %82, label %60

78:                                               ; preds = %69, %51
  %79 = phi %"struct.std::__1::__hash_node_base.1319"* [ %39, %51 ], [ %61, %69 ]
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %79, i64 3
  %81 = bitcast %"struct.std::__1::__hash_node_base.1319"* %80 to %"class.v8::internal::compiler::VirtualObject"**
  br label %84

82:                                               ; preds = %74, %66, %56, %48, %32, %25, %5
  %83 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker", %"class.v8::internal::compiler::EscapeAnalysisTracker"* %7, i64 0, i32 0, i32 0
  br label %84

84:                                               ; preds = %78, %82
  %85 = phi %"class.v8::internal::compiler::VirtualObject"** [ %81, %78 ], [ %83, %82 ]
  %86 = load %"class.v8::internal::compiler::VirtualObject"*, %"class.v8::internal::compiler::VirtualObject"** %85, align 8
  br label %87

87:                                               ; preds = %2, %84
  %88 = phi %"class.v8::internal::compiler::VirtualObject"* [ %86, %84 ], [ null, %2 ]
  %89 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope", %"class.v8::internal::compiler::EscapeAnalysisTracker::Scope"* %0, i64 0, i32 3
  store %"class.v8::internal::compiler::VirtualObject"* %88, %"class.v8::internal::compiler::VirtualObject"** %89, align 8
  ret void
}

declare dereferenceable(24) %"struct.v8::internal::compiler::ElementAccess"* @_ZN2v88internal8compiler15ElementAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder11NumberEqualEv(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12ZeroConstantEv(%"class.v8::internal::compiler::JSGraph"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6SelectENS0_21MachineRepresentationENS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i8 zeroext, i8 zeroext) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12TrueConstantEv(%"class.v8::internal::compiler::JSGraph"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph13FalseConstantEv(%"class.v8::internal::compiler::JSGraph"*) local_unnamed_addr #2

declare dereferenceable(32) %"class.v8::internal::compiler::CheckMapsParameters"* @_ZN2v88internal8compiler21CheckMapsParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::HeapConstantType"* @_ZNK2v88internal8compiler4Type14AsHeapConstantEv(%"class.v8::internal::compiler::Type"*) local_unnamed_addr #2

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler9ObjectRef5AsMapEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #2

declare i64* @_ZNK2v88internal8compiler6MapRef6objectEv(%"class.v8::internal::compiler::MapRef"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.v8::internal::ZoneHandleSet"* @_ZN2v88internal8compiler23CompareMapsParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare dereferenceable(56) %"struct.v8::internal::compiler::FieldAccess"* @_ZN2v88internal8compiler13FieldAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare double @_ZNK2v88internal8compiler4Type3MaxEv(%"class.v8::internal::compiler::Type"*) local_unnamed_addr #2

declare double @_ZNK2v88internal8compiler4Type3MinEv(%"class.v8::internal::compiler::Type"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"*, i64) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12HeapConstantENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::compiler::JSGraph"*, i64*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder14ReferenceEqualEv(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler15SparseSidetableIPNS1_13VirtualObjectEE3SetEPKNS1_4NodeES4_(%"class.v8::internal::compiler::SparseSidetable.1305"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::VirtualObject"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.1383", align 8
  %5 = ptrtoint %"class.v8::internal::compiler::VirtualObject"* %2 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable.1305", %"class.v8::internal::compiler::SparseSidetable.1305"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 16777215
  %10 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %9) #8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable.1305", %"class.v8::internal::compiler::SparseSidetable.1305"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %81, label %14

14:                                               ; preds = %3
  %15 = tail call i64 @llvm.ctpop.i64(i64 %12) #8, !range !3
  %16 = icmp ugt i64 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = add i64 %12, -1
  %19 = and i64 %18, %10
  br label %24

20:                                               ; preds = %14
  %21 = icmp ult i64 %10, %12
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = urem i64 %10, %12
  br label %24

24:                                               ; preds = %22, %20, %17
  %25 = phi i64 [ %19, %17 ], [ %23, %22 ], [ %10, %20 ]
  %26 = getelementptr inbounds %"class.std::__1::unordered_map.1314", %"class.std::__1::unordered_map.1314"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %27, i64 %25
  %29 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %29, null
  br i1 %30, label %81, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %29, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %33, null
  br i1 %34, label %81, label %35

35:                                               ; preds = %31
  %36 = add i64 %12, -1
  br i1 %16, label %37, label %59

37:                                               ; preds = %35, %55
  %38 = phi %"struct.std::__1::__hash_node_base.1319"* [ %57, %55 ], [ %33, %35 ]
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %38, i64 1
  %40 = bitcast %"struct.std::__1::__hash_node_base.1319"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, %10
  br i1 %42, label %50, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %41, %12
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %41, %12
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi i64 [ %46, %45 ], [ %41, %43 ]
  %49 = icmp eq i64 %48, %25
  br i1 %49, label %55, label %81

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %38, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.1319"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %9
  br i1 %54, label %77, label %55

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %38, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %57, null
  br i1 %58, label %81, label %37

59:                                               ; preds = %35, %73
  %60 = phi %"struct.std::__1::__hash_node_base.1319"* [ %75, %73 ], [ %33, %35 ]
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %60, i64 1
  %62 = bitcast %"struct.std::__1::__hash_node_base.1319"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %10
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = and i64 %63, %36
  %67 = icmp eq i64 %66, %25
  br i1 %67, label %73, label %81

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %60, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.1319"* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, %9
  br i1 %72, label %77, label %73

73:                                               ; preds = %68, %65
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %60, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %75, null
  br i1 %76, label %81, label %59

77:                                               ; preds = %68, %50
  %78 = phi %"struct.std::__1::__hash_node_base.1319"* [ %38, %50 ], [ %60, %68 ]
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %78, i64 3
  %80 = bitcast %"struct.std::__1::__hash_node_base.1319"* %79 to i64*
  store i64 %5, i64* %80, align 8
  br label %93

81:                                               ; preds = %65, %73, %47, %55, %24, %3, %31
  %82 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable.1305", %"class.v8::internal::compiler::SparseSidetable.1305"* %0, i64 0, i32 0
  %83 = load %"class.v8::internal::compiler::VirtualObject"*, %"class.v8::internal::compiler::VirtualObject"** %82, align 8
  %84 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %83, %2
  br i1 %84, label %93, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::pair.1383"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #8
  %87 = load i32, i32* %7, align 4
  %88 = and i32 %87, 16777215
  %89 = getelementptr inbounds %"struct.std::__1::pair.1383", %"struct.std::__1::pair.1383"* %4, i64 0, i32 0
  store i32 %88, i32* %89, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair.1383", %"struct.std::__1::pair.1383"* %4, i64 0, i32 1
  store %"class.v8::internal::compiler::VirtualObject"* %2, %"class.v8::internal::compiler::VirtualObject"** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unordered_map.1314", %"class.std::__1::unordered_map.1314"* %6, i64 0, i32 0
  %92 = call { %"struct.std::__1::__hash_node_base.1319"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal8compiler13VirtualObjectEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE25__emplace_unique_key_argsIjJNS_4pairIjS6_EEEEENSL_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1315"* %91, i32* nonnull dereferenceable(4) %89, %"struct.std::__1::pair.1383"* nonnull dereferenceable(16) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #8
  br label %93

93:                                               ; preds = %81, %85, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1300"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1300", %"class.std::__1::vector.1300"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.v8::internal::compiler::Node"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1300", %"class.std::__1::vector.1300"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.v8::internal::compiler::Node"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.v8::internal::compiler::Node"**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %13, i64 %18
  %20 = bitcast %"class.v8::internal::compiler::Node"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #8
  %26 = ptrtoint %"class.v8::internal::compiler::Node"** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  ret void

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.1300"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 268435455
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.1300"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #9
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 134217727
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %65, label %47

47:                                               ; preds = %38, %42
  %48 = phi i64 [ %45, %42 ], [ 268435455, %38 ]
  %49 = getelementptr inbounds %"class.std::__1::vector.1300", %"class.std::__1::vector.1300"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %50 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %49, align 8
  %51 = shl i64 %48, 3
  %52 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 3
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %55, %53
  %57 = icmp ugt i64 %51, %56
  br i1 %57, label %58, label %60, !prof !5

58:                                               ; preds = %47
  %59 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %50, i64 %51) #8
  br label %62

60:                                               ; preds = %47
  %61 = add i64 %53, %51
  store i64 %61, i64* %52, align 8
  br label %62

62:                                               ; preds = %60, %58
  %63 = phi i64 [ %59, %58 ], [ %53, %60 ]
  %64 = inttoptr i64 %63 to %"class.v8::internal::compiler::Node"**
  br label %65

65:                                               ; preds = %62, %42
  %66 = phi i64 [ %48, %62 ], [ 0, %42 ]
  %67 = phi %"class.v8::internal::compiler::Node"** [ %64, %62 ], [ null, %42 ]
  %68 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 %33
  %69 = bitcast %"class.v8::internal::compiler::Node"** %68 to i8*
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 %66
  %71 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 %1
  %72 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 %72, i1 false) #8
  %73 = ptrtoint %"class.v8::internal::compiler::Node"** %70 to i64
  %74 = ptrtoint %"class.v8::internal::compiler::Node"** %71 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector.1300", %"class.std::__1::vector.1300"* %0, i64 0, i32 0, i32 0
  %76 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %75, align 8
  %77 = ptrtoint %"class.v8::internal::compiler::Node"** %76 to i64
  %78 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %6, align 8
  %79 = icmp eq %"class.v8::internal::compiler::Node"** %78, %76
  br i1 %79, label %249, label %80

80:                                               ; preds = %65
  %81 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 -1
  %82 = ptrtoint %"class.v8::internal::compiler::Node"** %81 to i64
  %83 = sub i64 %82, %77
  %84 = lshr i64 %83, 3
  %85 = add nuw nsw i64 %84, 1
  %86 = icmp ult i64 %85, 4
  br i1 %86, label %179, label %87

87:                                               ; preds = %80
  %88 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 -1
  %89 = ptrtoint %"class.v8::internal::compiler::Node"** %88 to i64
  %90 = sub i64 %89, %77
  %91 = lshr i64 %90, 3
  %92 = xor i64 %91, -1
  %93 = add nsw i64 %33, %92
  %94 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 %93
  %95 = xor i64 %91, -1
  %96 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 %95
  %97 = icmp ult %"class.v8::internal::compiler::Node"** %94, %78
  %98 = icmp ult %"class.v8::internal::compiler::Node"** %96, %68
  %99 = and i1 %97, %98
  br i1 %99, label %179, label %100

100:                                              ; preds = %87
  %101 = and i64 %85, 4611686018427387900
  %102 = sub nsw i64 0, %101
  %103 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 %102
  %104 = sub nsw i64 0, %101
  %105 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 %104
  %106 = add nsw i64 %101, -4
  %107 = lshr exact i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = and i64 %108, 1
  %110 = icmp eq i64 %106, 0
  br i1 %110, label %157, label %111

111:                                              ; preds = %100
  %112 = sub nuw nsw i64 %108, %109
  %113 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 -1
  %114 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 -1
  %115 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 -1
  %116 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 -1
  br label %117

117:                                              ; preds = %117, %111
  %118 = phi i64 [ 0, %111 ], [ %152, %117 ]
  %119 = phi i64 [ %112, %111 ], [ %153, %117 ]
  %120 = sub i64 0, %118
  %121 = sub i64 0, %118
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %113, i64 %120
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %114, i64 %121
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %123, i64 -1
  %125 = bitcast %"class.v8::internal::compiler::Node"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !136
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %123, i64 -2
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 -1
  %129 = bitcast %"class.v8::internal::compiler::Node"** %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !136
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, i64 -1
  %132 = bitcast %"class.v8::internal::compiler::Node"** %131 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %132, align 8, !alias.scope !139, !noalias !136
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, i64 -2
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, i64 -1
  %135 = bitcast %"class.v8::internal::compiler::Node"** %134 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %135, align 8, !alias.scope !139, !noalias !136
  %136 = sub nuw nsw i64 -4, %118
  %137 = sub nuw nsw i64 -4, %118
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %115, i64 %136
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %116, i64 %137
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %139, i64 -1
  %141 = bitcast %"class.v8::internal::compiler::Node"** %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !136
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %139, i64 -2
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, i64 -1
  %145 = bitcast %"class.v8::internal::compiler::Node"** %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !alias.scope !136
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %138, i64 -1
  %148 = bitcast %"class.v8::internal::compiler::Node"** %147 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %148, align 8, !alias.scope !139, !noalias !136
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %138, i64 -2
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %149, i64 -1
  %151 = bitcast %"class.v8::internal::compiler::Node"** %150 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %151, align 8, !alias.scope !139, !noalias !136
  %152 = add i64 %118, 8
  %153 = add i64 %119, -2
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %117, !llvm.loop !141

155:                                              ; preds = %117
  %156 = sub nuw nsw i64 -8, %118
  br label %157

157:                                              ; preds = %155, %100
  %158 = phi i64 [ 0, %100 ], [ %156, %155 ]
  %159 = icmp eq i64 %109, 0
  br i1 %159, label %177, label %160

160:                                              ; preds = %157
  %161 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 -1
  %162 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 -1
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %161, i64 %158
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 %158
  %165 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, i64 -1
  %166 = bitcast %"class.v8::internal::compiler::Node"** %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !136
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, i64 -2
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -1
  %170 = bitcast %"class.v8::internal::compiler::Node"** %169 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8, !alias.scope !136
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 -1
  %173 = bitcast %"class.v8::internal::compiler::Node"** %172 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %173, align 8, !alias.scope !139, !noalias !136
  %174 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 -2
  %175 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %174, i64 -1
  %176 = bitcast %"class.v8::internal::compiler::Node"** %175 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %176, align 8, !alias.scope !139, !noalias !136
  br label %177

177:                                              ; preds = %157, %160
  %178 = icmp eq i64 %85, %101
  br i1 %178, label %249, label %179

179:                                              ; preds = %177, %87, %80
  %180 = phi %"class.v8::internal::compiler::Node"** [ %68, %87 ], [ %68, %80 ], [ %103, %177 ]
  %181 = phi %"class.v8::internal::compiler::Node"** [ %78, %87 ], [ %78, %80 ], [ %105, %177 ]
  %182 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 -1
  %183 = ptrtoint %"class.v8::internal::compiler::Node"** %182 to i64
  %184 = sub i64 %183, %77
  %185 = lshr i64 %184, 3
  %186 = add nuw nsw i64 %185, 1
  %187 = and i64 %186, 7
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %200, label %189

189:                                              ; preds = %179, %189
  %190 = phi %"class.v8::internal::compiler::Node"** [ %193, %189 ], [ %180, %179 ]
  %191 = phi %"class.v8::internal::compiler::Node"** [ %194, %189 ], [ %181, %179 ]
  %192 = phi i64 [ %198, %189 ], [ %187, %179 ]
  %193 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %190, i64 -1
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %191, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::Node"** %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::Node"** %193 to i64*
  store i64 %196, i64* %197, align 8
  %198 = add i64 %192, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %189, !llvm.loop !142

200:                                              ; preds = %189, %179
  %201 = phi %"class.v8::internal::compiler::Node"** [ undef, %179 ], [ %193, %189 ]
  %202 = phi %"class.v8::internal::compiler::Node"** [ %180, %179 ], [ %193, %189 ]
  %203 = phi %"class.v8::internal::compiler::Node"** [ %181, %179 ], [ %194, %189 ]
  %204 = icmp ult i64 %184, 56
  br i1 %204, label %249, label %205

205:                                              ; preds = %200, %205
  %206 = phi %"class.v8::internal::compiler::Node"** [ %243, %205 ], [ %202, %200 ]
  %207 = phi %"class.v8::internal::compiler::Node"** [ %244, %205 ], [ %203, %200 ]
  %208 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -1
  %209 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -1
  %210 = bitcast %"class.v8::internal::compiler::Node"** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %"class.v8::internal::compiler::Node"** %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -2
  %214 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -2
  %215 = bitcast %"class.v8::internal::compiler::Node"** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"class.v8::internal::compiler::Node"** %213 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -3
  %219 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -3
  %220 = bitcast %"class.v8::internal::compiler::Node"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"class.v8::internal::compiler::Node"** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -4
  %224 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -4
  %225 = bitcast %"class.v8::internal::compiler::Node"** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"class.v8::internal::compiler::Node"** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -5
  %229 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -5
  %230 = bitcast %"class.v8::internal::compiler::Node"** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"class.v8::internal::compiler::Node"** %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -6
  %234 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -6
  %235 = bitcast %"class.v8::internal::compiler::Node"** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"class.v8::internal::compiler::Node"** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -7
  %239 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -7
  %240 = bitcast %"class.v8::internal::compiler::Node"** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.v8::internal::compiler::Node"** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -8
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -8
  %245 = bitcast %"class.v8::internal::compiler::Node"** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.v8::internal::compiler::Node"** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = icmp eq %"class.v8::internal::compiler::Node"** %244, %76
  br i1 %248, label %249, label %205, !llvm.loop !143

249:                                              ; preds = %200, %205, %177, %65
  %250 = phi %"class.v8::internal::compiler::Node"** [ %68, %65 ], [ %103, %177 ], [ %201, %200 ], [ %243, %205 ]
  %251 = ptrtoint %"class.v8::internal::compiler::Node"** %250 to i64
  store i64 %251, i64* %30, align 8
  store i64 %74, i64* %7, align 8
  store i64 %73, i64* %4, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1319"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal8compiler13VirtualObjectEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE25__emplace_unique_key_argsIjJNS_4pairIjS6_EEEEENSL_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1315"*, i32* dereferenceable(4), %"struct.std::__1::pair.1383"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %4) #8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.1315", %"class.std::__1::__hash_table.1315"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %69, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #8, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ult i64 %5, %7
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1315", %"class.std::__1::__hash_table.1315"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %24, null
  br i1 %25, label %69, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  %28 = load i32, i32* %1, align 4
  br i1 %11, label %29, label %51

29:                                               ; preds = %26, %46
  %30 = phi %"struct.std::__1::__hash_node_base.1319"* [ %32, %46 ], [ %24, %26 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %32, null
  br i1 %33, label %69, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.1319"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %5
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = icmp ult i64 %37, %7
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %37, %7
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %42, %41 ], [ %37, %39 ]
  %45 = icmp eq i64 %44, %20
  br i1 %45, label %46, label %69

46:                                               ; preds = %43, %34
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %32, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base.1319"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %28
  br i1 %50, label %175, label %29

51:                                               ; preds = %26, %64
  %52 = phi %"struct.std::__1::__hash_node_base.1319"* [ %54, %64 ], [ %24, %26 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %52, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %54, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.1319"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %5
  %61 = and i64 %59, %27
  %62 = icmp eq i64 %61, %20
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %69

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %54, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.1319"* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %28
  br i1 %68, label %175, label %51

69:                                               ; preds = %56, %51, %43, %29, %19, %3
  %70 = phi i64 [ %20, %19 ], [ undef, %3 ], [ %20, %29 ], [ %20, %43 ], [ %20, %51 ], [ %20, %56 ]
  %71 = getelementptr inbounds %"class.std::__1::__hash_table.1315", %"class.std::__1::__hash_table.1315"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %72 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %71, align 8, !noalias !144
  %73 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %72, i64 0, i32 2
  %74 = load i64, i64* %73, align 8, !noalias !144
  %75 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %72, i64 0, i32 3
  %76 = load i64, i64* %75, align 8, !noalias !144
  %77 = sub i64 %76, %74
  %78 = icmp ult i64 %77, 32
  br i1 %78, label %79, label %81, !prof !5

79:                                               ; preds = %69
  %80 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %72, i64 32) #8, !noalias !144
  br label %83

81:                                               ; preds = %69
  %82 = add i64 %74, 32
  store i64 %82, i64* %73, align 8, !noalias !144
  br label %83

83:                                               ; preds = %79, %81
  %84 = phi i64 [ %80, %79 ], [ %74, %81 ]
  %85 = inttoptr i64 %84 to %"struct.std::__1::__hash_node"*
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 2, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::__1::pair.1383", %"struct.std::__1::pair.1383"* %2, i64 0, i32 0
  %88 = load i32, i32* %87, align 4, !noalias !144
  store i32 %88, i32* %86, align 8, !noalias !144
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 2, i32 0, i32 1
  %90 = getelementptr inbounds %"struct.std::__1::pair.1383", %"struct.std::__1::pair.1383"* %2, i64 0, i32 1
  %91 = bitcast %"class.v8::internal::compiler::VirtualObject"** %90 to i64*
  %92 = load i64, i64* %91, align 8, !noalias !144
  %93 = bitcast %"class.v8::internal::compiler::VirtualObject"** %89 to i64*
  store i64 %92, i64* %93, align 8, !noalias !144
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 1
  store i64 %5, i64* %94, align 8, !noalias !144
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1319"* null, %"struct.std::__1::__hash_node_base.1319"** %95, align 8, !noalias !144
  %96 = getelementptr inbounds %"class.std::__1::__hash_table.1315", %"class.std::__1::__hash_table.1315"* %0, i64 0, i32 2, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, 1
  %99 = uitofp i64 %98 to float
  %100 = uitofp i64 %7 to float
  %101 = getelementptr inbounds %"class.std::__1::__hash_table.1315", %"class.std::__1::__hash_table.1315"* %0, i64 0, i32 3, i32 0, i32 0
  %102 = load float, float* %101, align 4
  %103 = fmul float %102, %100
  %104 = fcmp olt float %103, %99
  %105 = or i1 %8, %104
  br i1 %105, label %106, label %129

106:                                              ; preds = %83
  %107 = shl i64 %7, 1
  %108 = icmp ult i64 %7, 3
  %109 = tail call i64 @llvm.ctpop.i64(i64 %7) #8, !range !3
  %110 = icmp ugt i64 %109, 1
  %111 = or i1 %108, %110
  %112 = zext i1 %111 to i64
  %113 = or i64 %107, %112
  %114 = fdiv float %99, %102
  %115 = tail call float @llvm.ceil.f32(float %114) #8
  %116 = fptoui float %115 to i64
  %117 = icmp ult i64 %113, %116
  %118 = select i1 %117, i64 %116, i64 %113
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal8compiler13VirtualObjectEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.1315"* %0, i64 %118)
  %119 = load i64, i64* %6, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %119) #8, !range !3
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %106
  %123 = add i64 %119, -1
  %124 = and i64 %123, %5
  br label %129

125:                                              ; preds = %106
  %126 = icmp ult i64 %5, %119
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %5, %119
  br label %129

129:                                              ; preds = %127, %125, %122, %83
  %130 = phi i64 [ %7, %83 ], [ %119, %122 ], [ %119, %125 ], [ %119, %127 ]
  %131 = phi i64 [ %70, %83 ], [ %124, %122 ], [ %5, %125 ], [ %128, %127 ]
  %132 = getelementptr inbounds %"class.std::__1::__hash_table.1315", %"class.std::__1::__hash_table.1315"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %133, i64 %131
  %135 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %135, null
  br i1 %136, label %137, label %165

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.std::__1::__hash_table.1315", %"class.std::__1::__hash_table.1315"* %0, i64 0, i32 1, i32 0, i32 0
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %138, i64 0, i32 0
  %140 = bitcast %"struct.std::__1::__hash_node_base.1319"* %138 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = inttoptr i64 %84 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1319"* %143, %"struct.std::__1::__hash_node_base.1319"** %139, align 8
  %144 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %132, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %144, i64 %131
  store %"struct.std::__1::__hash_node_base.1319"* %138, %"struct.std::__1::__hash_node_base.1319"** %145, align 8
  %146 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %95, align 8
  %147 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %146, null
  br i1 %147, label %171, label %148

148:                                              ; preds = %137
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %146, i64 1
  %150 = bitcast %"struct.std::__1::__hash_node_base.1319"* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = tail call i64 @llvm.ctpop.i64(i64 %130) #8, !range !3
  %153 = icmp ugt i64 %152, 1
  br i1 %153, label %157, label %154

154:                                              ; preds = %148
  %155 = add i64 %130, -1
  %156 = and i64 %151, %155
  br label %161

157:                                              ; preds = %148
  %158 = icmp ult i64 %151, %130
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = urem i64 %151, %130
  br label %161

161:                                              ; preds = %154, %157, %159
  %162 = phi i64 [ %156, %154 ], [ %160, %159 ], [ %151, %157 ]
  %163 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %132, align 8
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %163, i64 %162
  store %"struct.std::__1::__hash_node_base.1319"* %143, %"struct.std::__1::__hash_node_base.1319"** %164, align 8
  br label %171

165:                                              ; preds = %129
  %166 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %135, i64 0, i32 0
  %167 = bitcast %"struct.std::__1::__hash_node_base.1319"* %135 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = inttoptr i64 %84 to i64*
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1319"* %170, %"struct.std::__1::__hash_node_base.1319"** %166, align 8
  br label %171

171:                                              ; preds = %137, %161, %165
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 0
  %173 = load i64, i64* %96, align 8
  %174 = add i64 %173, 1
  store i64 %174, i64* %96, align 8
  br label %175

175:                                              ; preds = %64, %46, %171
  %176 = phi i8 [ 1, %171 ], [ 0, %46 ], [ 0, %64 ]
  %177 = phi %"struct.std::__1::__hash_node_base.1319"* [ %172, %171 ], [ %32, %46 ], [ %54, %64 ]
  %178 = insertvalue { %"struct.std::__1::__hash_node_base.1319"*, i8 } undef, %"struct.std::__1::__hash_node_base.1319"* %177, 0
  %179 = insertvalue { %"struct.std::__1::__hash_node_base.1319"*, i8 } %178, i8 %176, 1
  ret { %"struct.std::__1::__hash_node_base.1319"*, i8 } %179
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal8compiler13VirtualObjectEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.1315"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #8
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1315", %"class.std::__1::__hash_table.1315"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal8compiler13VirtualObjectEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1315"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #8, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1315", %"class.std::__1::__hash_table.1315"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1315", %"class.std::__1::__hash_table.1315"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #8
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #8, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #8
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal8compiler13VirtualObjectEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1315"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal8compiler13VirtualObjectEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1315"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %186, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.1315", %"class.std::__1::__hash_table.1315"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = shl i64 %1, 3
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ugt i64 %7, %12
  br i1 %13, label %14, label %16, !prof !5

14:                                               ; preds = %4
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %7) #8
  br label %18

16:                                               ; preds = %4
  %17 = add i64 %9, %7
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__hash_node_base.1319"**
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1315", %"class.std::__1::__hash_table.1315"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1319"** %20, %"struct.std::__1::__hash_node_base.1319"*** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1315", %"class.std::__1::__hash_table.1315"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %22, align 8
  store %"struct.std::__1::__hash_node_base.1319"* null, %"struct.std::__1::__hash_node_base.1319"** %20, align 8
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %42, label %24

24:                                               ; preds = %18
  %25 = add i64 %1, -1
  %26 = add i64 %1, -2
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %25, %27
  br label %47

31:                                               ; preds = %47, %24
  %32 = phi i64 [ 1, %24 ], [ %61, %47 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %21, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.1319"* null, %"struct.std::__1::__hash_node_base.1319"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !147

42:                                               ; preds = %31, %34, %18
  %43 = getelementptr inbounds %"class.std::__1::__hash_table.1315", %"class.std::__1::__hash_table.1315"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %45, null
  br i1 %46, label %188, label %64

47:                                               ; preds = %47, %29
  %48 = phi i64 [ 1, %29 ], [ %61, %47 ]
  %49 = phi i64 [ %30, %29 ], [ %62, %47 ]
  %50 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %21, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %50, i64 %48
  store %"struct.std::__1::__hash_node_base.1319"* null, %"struct.std::__1::__hash_node_base.1319"** %51, align 8
  %52 = add nuw nsw i64 %48, 1
  %53 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %21, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.1319"* null, %"struct.std::__1::__hash_node_base.1319"** %54, align 8
  %55 = add nuw nsw i64 %48, 2
  %56 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %21, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.1319"* null, %"struct.std::__1::__hash_node_base.1319"** %57, align 8
  %58 = add nuw i64 %48, 3
  %59 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %21, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base.1319"* null, %"struct.std::__1::__hash_node_base.1319"** %60, align 8
  %61 = add nuw i64 %48, 4
  %62 = add i64 %49, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %31, label %47

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %45, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.1319"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = tail call i64 @llvm.ctpop.i64(i64 %1) #8, !range !3
  %69 = icmp ugt i64 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = add i64 %1, -1
  %72 = and i64 %67, %71
  br label %77

73:                                               ; preds = %64
  %74 = icmp ult i64 %67, %1
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %67, %1
  br label %77

77:                                               ; preds = %70, %73, %75
  %78 = phi i64 [ %72, %70 ], [ %76, %75 ], [ %67, %73 ]
  %79 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %21, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %79, i64 %78
  store %"struct.std::__1::__hash_node_base.1319"* %43, %"struct.std::__1::__hash_node_base.1319"** %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %45, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %82, null
  br i1 %83, label %188, label %84

84:                                               ; preds = %77
  %85 = add i64 %1, -1
  br i1 %69, label %86, label %138

86:                                               ; preds = %84, %129
  %87 = phi %"struct.std::__1::__hash_node_base.1319"* [ %133, %129 ], [ %82, %84 ]
  %88 = phi i64 [ %131, %129 ], [ %78, %84 ]
  %89 = phi %"struct.std::__1::__hash_node_base.1319"* [ %130, %129 ], [ %45, %84 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %87, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base.1319"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %92, %1
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = urem i64 %92, %1
  br label %96

96:                                               ; preds = %94, %86
  %97 = phi i64 [ %95, %94 ], [ %92, %86 ]
  %98 = icmp eq i64 %97, %88
  br i1 %98, label %129, label %99

99:                                               ; preds = %96
  %100 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %21, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %100, i64 %97
  %102 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %102, null
  br i1 %103, label %128, label %135

104:                                              ; preds = %135, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1319"* [ %107, %109 ], [ %87, %135 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1319"* %110 to i32*
  %112 = load i32, i32* %137, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %109, %104
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1319"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1319"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1319"* %89 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %21, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %119, i64 %97
  %121 = bitcast %"struct.std::__1::__hash_node_base.1319"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %21, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %124, i64 %97
  %126 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1319"* %87, %"struct.std::__1::__hash_node_base.1319"** %127, align 8
  br label %129

128:                                              ; preds = %99
  store %"struct.std::__1::__hash_node_base.1319"* %89, %"struct.std::__1::__hash_node_base.1319"** %101, align 8
  br label %129

129:                                              ; preds = %128, %115, %96
  %130 = phi %"struct.std::__1::__hash_node_base.1319"* [ %87, %128 ], [ %89, %115 ], [ %87, %96 ]
  %131 = phi i64 [ %97, %128 ], [ %88, %115 ], [ %88, %96 ]
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %130, i64 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %133, null
  br i1 %134, label %188, label %86

135:                                              ; preds = %99
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %87, i64 2
  %137 = bitcast %"struct.std::__1::__hash_node_base.1319"* %136 to i32*
  br label %104

138:                                              ; preds = %84, %180
  %139 = phi %"struct.std::__1::__hash_node_base.1319"* [ %184, %180 ], [ %82, %84 ]
  %140 = phi i64 [ %182, %180 ], [ %78, %84 ]
  %141 = phi %"struct.std::__1::__hash_node_base.1319"* [ %181, %180 ], [ %45, %84 ]
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %139, i64 1
  %143 = bitcast %"struct.std::__1::__hash_node_base.1319"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, %85
  %146 = icmp eq i64 %145, %140
  br i1 %146, label %180, label %147

147:                                              ; preds = %138
  %148 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %21, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %148, i64 %145
  %150 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %139, i64 2
  %154 = bitcast %"struct.std::__1::__hash_node_base.1319"* %153 to i32*
  br label %156

155:                                              ; preds = %147
  store %"struct.std::__1::__hash_node_base.1319"* %141, %"struct.std::__1::__hash_node_base.1319"** %149, align 8
  br label %180

156:                                              ; preds = %152, %161
  %157 = phi %"struct.std::__1::__hash_node_base.1319"* [ %159, %161 ], [ %139, %152 ]
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %157, i64 0, i32 0
  %159 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %158, align 8
  %160 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %159, null
  br i1 %160, label %167, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %159, i64 2
  %163 = bitcast %"struct.std::__1::__hash_node_base.1319"* %162 to i32*
  %164 = load i32, i32* %154, align 4
  %165 = load i32, i32* %163, align 4
  %166 = icmp eq i32 %164, %165
  br i1 %166, label %156, label %167

167:                                              ; preds = %156, %161
  %168 = ptrtoint %"struct.std::__1::__hash_node_base.1319"* %159 to i64
  %169 = bitcast %"struct.std::__1::__hash_node_base.1319"* %157 to i64*
  %170 = bitcast %"struct.std::__1::__hash_node_base.1319"* %141 to i64*
  store i64 %168, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %21, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %171, i64 %145
  %173 = bitcast %"struct.std::__1::__hash_node_base.1319"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %169, align 8
  %176 = load %"struct.std::__1::__hash_node_base.1319"**, %"struct.std::__1::__hash_node_base.1319"*** %21, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %176, i64 %145
  %178 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1319"* %139, %"struct.std::__1::__hash_node_base.1319"** %179, align 8
  br label %180

180:                                              ; preds = %138, %167, %155
  %181 = phi %"struct.std::__1::__hash_node_base.1319"* [ %139, %155 ], [ %141, %167 ], [ %139, %138 ]
  %182 = phi i64 [ %145, %155 ], [ %140, %167 ], [ %140, %138 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1319", %"struct.std::__1::__hash_node_base.1319"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.1319"*, %"struct.std::__1::__hash_node_base.1319"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.1319"* %184, null
  br i1 %185, label %188, label %138

186:                                              ; preds = %2
  %187 = bitcast %"class.std::__1::__hash_table.1315"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %187, i8 0, i64 16, i1 false)
  br label %188

188:                                              ; preds = %180, %129, %77, %42, %186
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %3 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %4 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %5 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.1392", align 16
  %7 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 511
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -512
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %16, align 8
  %18 = bitcast %"class.v8::internal::compiler::Node"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, i64 1
  store %"class.v8::internal::compiler::Node"*** %21, %"class.v8::internal::compiler::Node"**** %16, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %15, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.v8::internal::compiler::Node"**** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::Node"**** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"class.v8::internal::compiler::Node"**** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.v8::internal::compiler::Node"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  %44 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to %"class.v8::internal::compiler::Node"**
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.27", %"class.v8::internal::RecyclingZoneAllocator.27"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !5

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #8
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::Node"**
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"class.v8::internal::compiler::Node"** [ %52, %51 ], [ %71, %69 ]
  store %"class.v8::internal::compiler::Node"** %73, %"class.v8::internal::compiler::Node"*** %3, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #8
  %76 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 512
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to %"class.v8::internal::compiler::Node"**
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.27", %"class.v8::internal::RecyclingZoneAllocator.27"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !5

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #8
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::Node"**
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"class.v8::internal::compiler::Node"** [ %84, %83 ], [ %103, %101 ]
  store %"class.v8::internal::compiler::Node"** %105, %"class.v8::internal::compiler::Node"*** %4, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #8
  %106 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #8
  %107 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %108 = bitcast %"class.v8::internal::compiler::Node"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %107, i64 1
  store %"class.v8::internal::compiler::Node"*** %111, %"class.v8::internal::compiler::Node"**** %27, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #8
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.1392"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #8
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.1392", %"struct.std::__1::__split_buffer.1392"* %6, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"*** null, %"class.v8::internal::compiler::Node"**** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.1392", %"struct.std::__1::__split_buffer.1392"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator"* %117, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to %"class.v8::internal::compiler::Node"***
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !5

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #8
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"class.v8::internal::compiler::Node"***
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"class.v8::internal::compiler::Node"*** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.1392", %"struct.std::__1::__split_buffer.1392"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"*** %150, %"class.v8::internal::compiler::Node"**** %151, align 16
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.1392", %"struct.std::__1::__split_buffer.1392"* %6, i64 0, i32 2
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.1392", %"struct.std::__1::__split_buffer.1392"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %116
  store %"class.v8::internal::compiler::Node"*** %155, %"class.v8::internal::compiler::Node"**** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 512
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to %"class.v8::internal::compiler::Node"**
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.27", %"class.v8::internal::RecyclingZoneAllocator.27"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !5

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #8
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"class.v8::internal::compiler::Node"**
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"class.v8::internal::compiler::Node"** [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #8
  store %"class.v8::internal::compiler::Node"** %185, %"class.v8::internal::compiler::Node"*** %7, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.1392"* nonnull %6, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #8
  %187 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %24, align 8
  %188 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %189 = icmp eq %"class.v8::internal::compiler::Node"*** %187, %188
  %190 = ptrtoint %"class.v8::internal::compiler::Node"*** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"class.v8::internal::compiler::Node"*** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.1392"* %6 to i64*
  %199 = bitcast %"class.v8::internal::compiler::Node"**** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.1392"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"class.v8::internal::compiler::Node"**** %153 to i64*
  %204 = bitcast %"class.v8::internal::compiler::Node"**** %118 to i64*
  %205 = bitcast %"class.v8::internal::compiler::Node"**** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"class.v8::internal::compiler::Node"**** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"class.v8::internal::compiler::Node"***
  %210 = icmp eq %"class.v8::internal::compiler::Node"*** %195, %209
  %211 = inttoptr i64 %197 to %"class.v8::internal::compiler::Node"***
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 -1
  %214 = ptrtoint %"class.v8::internal::compiler::Node"*** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 %217
  store %"class.v8::internal::compiler::Node"*** %218, %"class.v8::internal::compiler::Node"**** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %211, i64 1
  %236 = bitcast %"class.v8::internal::compiler::Node"*** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %211, %"class.v8::internal::compiler::Node"**** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #8
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"class.v8::internal::compiler::Node"*** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.1392"* nonnull %6, %"class.v8::internal::compiler::Node"*** dereferenceable(8) %244)
  %245 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %246 = icmp eq %"class.v8::internal::compiler::Node"*** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #8
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !5

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #8
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !148

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #8
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !5

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #8
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !149

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #8
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %18 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to %"class.v8::internal::compiler::Node"***
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !5

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #8
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  %76 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %77 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"class.v8::internal::compiler::Node"*** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %45
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %43
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %87 to i64
  %89 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"class.v8::internal::compiler::Node"*** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"class.v8::internal::compiler::Node"*** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !150

113:                                              ; preds = %100
  %114 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"class.v8::internal::compiler::Node"*** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"class.v8::internal::compiler::Node"*** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 1
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 2
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 3
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 4
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 5
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 6
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 7
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = ptrtoint %"class.v8::internal::compiler::Node"*** %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 8
  %165 = icmp eq %"class.v8::internal::compiler::Node"*** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"class.v8::internal::compiler::Node"*** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"class.v8::internal::compiler::Node"***
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %173, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %173, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %195, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::compiler::Node"*** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %200, i64 -1
  store %"class.v8::internal::compiler::Node"*** %201, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.1392"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1392", %"struct.std::__1::__split_buffer.1392"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1392", %"struct.std::__1::__split_buffer.1392"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1392", %"struct.std::__1::__split_buffer.1392"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1392", %"struct.std::__1::__split_buffer.1392"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %13, align 8
  %15 = icmp ugt %"class.v8::internal::compiler::Node"*** %12, %14
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %23 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #8
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %22
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %11, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1392"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.1392", %"struct.std::__1::__split_buffer.1392"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to %"class.v8::internal::compiler::Node"***
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !5

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #8
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"class.v8::internal::compiler::Node"*** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"class.v8::internal::compiler::Node"*** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %44
  %80 = ptrtoint %"class.v8::internal::compiler::Node"*** %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %43
  %82 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %83 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %84 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"class.v8::internal::compiler::Node"*** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"class.v8::internal::compiler::Node"*** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %98, i64 1
  %106 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !151

110:                                              ; preds = %97
  %111 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"class.v8::internal::compiler::Node"*** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"class.v8::internal::compiler::Node"*** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 1
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %126 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 2
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 3
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 4
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 5
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 6
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 7
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 8
  %160 = ptrtoint %"class.v8::internal::compiler::Node"*** %159 to i64
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = icmp eq %"class.v8::internal::compiler::Node"*** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"class.v8::internal::compiler::Node"*** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"class.v8::internal::compiler::Node"**** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"class.v8::internal::compiler::Node"***
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %170, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %170, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %197, i64 1
  store %"class.v8::internal::compiler::Node"*** %198, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.1392"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1392", %"struct.std::__1::__split_buffer.1392"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1392", %"struct.std::__1::__split_buffer.1392"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1392", %"struct.std::__1::__split_buffer.1392"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1392", %"struct.std::__1::__split_buffer.1392"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #8
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1392"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.1392", %"struct.std::__1::__split_buffer.1392"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to %"class.v8::internal::compiler::Node"***
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !5

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #8
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::Node"***
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"class.v8::internal::compiler::Node"*** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"class.v8::internal::compiler::Node"*** %78 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %45
  %81 = ptrtoint %"class.v8::internal::compiler::Node"*** %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %43
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %85 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"class.v8::internal::compiler::Node"*** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"class.v8::internal::compiler::Node"*** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %99, i64 1
  %107 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !152

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"class.v8::internal::compiler::Node"*** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"class.v8::internal::compiler::Node"*** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"class.v8::internal::compiler::Node"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 1
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %127 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 2
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %132 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 3
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %137 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 4
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %142 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 5
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %147 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 6
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %152 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 7
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %157 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 8
  %161 = ptrtoint %"class.v8::internal::compiler::Node"*** %160 to i64
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = icmp eq %"class.v8::internal::compiler::Node"*** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"class.v8::internal::compiler::Node"*** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"class.v8::internal::compiler::Node"***
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %171, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %171, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"class.v8::internal::compiler::Node"*** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %198, i64 -1
  store %"class.v8::internal::compiler::Node"*** %199, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN2v88internal8compiler14NodeMarkerBaseC2EPNS1_5GraphEj(%"class.v8::internal::compiler::NodeMarkerBase"*, %"class.v8::internal::compiler::Graph"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN2v88internal8compiler4NodeEPNS4_18EffectGraphReducer9ReductionEEE12__call_emptyEPKNS0_16__policy_storageES6_S9_(%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"*) #0 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #10
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #6 comdat {
  tail call void @abort() #9
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN2v88internal8compiler18EffectGraphReducer9NodeStateENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.32"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, align 8
  %3 = alloca %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, align 8
  %4 = alloca %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, align 8
  %5 = alloca %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.1406", align 16
  %7 = alloca %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque.32", %"class.std::__1::deque.32"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque.32", %"class.std::__1::deque.32"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 255
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -256
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.std::__1::deque.32", %"class.std::__1::deque.32"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque.32", %"class.std::__1::deque.32"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %16, align 8
  %18 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %17, i64 1
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %21, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %16, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.34"* %15, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque.32", %"class.std::__1::deque.32"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque.32", %"class.std::__1::deque.32"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque.32", %"class.std::__1::deque.32"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque.32", %"class.std::__1::deque.32"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque.32"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  %44 = getelementptr inbounds %"class.std::__1::deque.32", %"class.std::__1::deque.32"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 256
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"* %45 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.42", %"class.v8::internal::RecyclingZoneAllocator.42"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !5

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #8
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* [ %52, %51 ], [ %71, %69 ]
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* %73, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %3, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.34"* %23, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #8
  %76 = getelementptr inbounds %"class.std::__1::deque.32", %"class.std::__1::deque.32"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 256
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"* %77 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.42", %"class.v8::internal::RecyclingZoneAllocator.42"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !5

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #8
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* [ %84, %83 ], [ %103, %101 ]
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* %105, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer.34"* %23, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #8
  %106 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #8
  %107 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %27, align 8
  %108 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %107, i64 1
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %111, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %27, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.34"* %23, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #8
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.1406"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #8
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque.32", %"class.std::__1::deque.32"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.1406", %"struct.std::__1::__split_buffer.1406"* %6, i64 0, i32 3, i32 0, i32 0
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** null, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.1406", %"struct.std::__1::__split_buffer.1406"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator.38"* %117, %"class.v8::internal::RecyclingZoneAllocator.38"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque.32", %"class.std::__1::deque.32"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %121 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.38", %"class.v8::internal::RecyclingZoneAllocator.38"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !5

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #8
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.1406", %"struct.std::__1::__split_buffer.1406"* %6, i64 0, i32 0
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %150, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %151, align 16
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.1406", %"struct.std::__1::__split_buffer.1406"* %6, i64 0, i32 2
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %152, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.1406", %"struct.std::__1::__split_buffer.1406"* %6, i64 0, i32 1
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %152, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %154, align 8
  %155 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %150, i64 %116
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %155, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque.32", %"class.std::__1::deque.32"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 256
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"* %157 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.42", %"class.v8::internal::RecyclingZoneAllocator.42"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !5

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #8
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #8
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"* %185, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %7, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.1406"* nonnull %6, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #8
  %187 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %24, align 8
  %188 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %27, align 8
  %189 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %187, %188
  %190 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.1406"* %6 to i64*
  %199 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.1406"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque.32"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %153 to i64*
  %204 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %118 to i64*
  %205 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %210 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %195, %209
  %211 = inttoptr i64 %197 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %209, i64 -1
  %214 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %209, i64 %217
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %218, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator.38"*, %"class.v8::internal::RecyclingZoneAllocator.38"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.38", %"class.v8::internal::RecyclingZoneAllocator.38"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %211, i64 1
  %236 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %227 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"***
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %211, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #8
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.1406"* nonnull %6, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** dereferenceable(8) %244)
  %245 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %27, align 8
  %246 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.34"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 2
  %4 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %6 to i64
  %9 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4 to i64
  %10 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 1
  %13 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 0
  %15 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %14, align 8
  %16 = icmp ugt %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %13, %15
  %17 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %24 to i8*
  %30 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #8
  %31 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %24, i64 %26
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %34, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %33, i64 %23
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %35, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %12, align 8
  %36 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.34"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %46 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !5

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #8
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %75 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %12, align 8
  %76 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %82 to i64
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %82, i64 %44
  %85 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %84 to i64
  %86 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %82, i64 %43
  %87 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %86 to i64
  %88 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %100, i64 1
  %108 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %107 to i64
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !153

112:                                              ; preds = %99
  %113 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 1
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 1
  %128 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 2
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 2
  %133 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 3
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 3
  %138 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 4
  %142 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 4
  %143 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 5
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 5
  %148 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 6
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 6
  %153 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 7
  %157 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 7
  %158 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 8
  %162 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %161 to i64
  %163 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 8
  %164 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %172, i64 1
  %188 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %45 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"***
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %172, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %192, align 8
  %193 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %200 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %199, i64 1
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %200, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.34"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 2
  %4 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %6 to i64
  %9 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4 to i64
  %10 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 1
  %13 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 0
  %15 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %14, align 8
  %16 = icmp ugt %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %13, %15
  %17 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %24 to i8*
  %30 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #8
  %31 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %24, i64 %26
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %34, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %33, i64 %23
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %35, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %12, align 8
  %36 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.34"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %46 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !5

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #8
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %75 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %12, align 8
  %76 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %82 to i64
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %82, i64 %44
  %85 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %84 to i64
  %86 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %82, i64 %43
  %87 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %86 to i64
  %88 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %100, i64 1
  %108 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %107 to i64
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !154

112:                                              ; preds = %99
  %113 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 1
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 1
  %128 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 2
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 2
  %133 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 3
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 3
  %138 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 4
  %142 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 4
  %143 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 5
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 5
  %148 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 6
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 6
  %153 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 7
  %157 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 7
  %158 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 8
  %162 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %161 to i64
  %163 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %122, i64 8
  %164 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %172, i64 1
  %188 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %45 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"***
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %172, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %192, align 8
  %193 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %200 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %199, i64 1
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %200, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer.34"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 1
  %4 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 0
  %6 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 2
  %11 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %12, align 8
  %14 = icmp ult %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %11, %13
  %15 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %12 to i64*
  %16 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %13 to i64
  %17 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %11, i64 %22
  %24 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %23, i64 %29
  %31 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %30 to i8*
  %32 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #8
  %33 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %30, %27 ], [ %23, %18 ]
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %36, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %37 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %35, i64 %22
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %37, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.34"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %47 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer.34", %"struct.std::__1::__split_buffer.34"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !5

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #8
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %76 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %77 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %83 to i64
  %85 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %83, i64 %45
  %86 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %85 to i64
  %87 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %83, i64 %43
  %88 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %87 to i64
  %89 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %101, i64 1
  %109 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %108 to i64
  %110 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !155

113:                                              ; preds = %100
  %114 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 1
  %128 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %123, i64 1
  %129 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 2
  %133 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %123, i64 2
  %134 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 3
  %138 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %123, i64 3
  %139 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 4
  %143 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %123, i64 4
  %144 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 5
  %148 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %123, i64 5
  %149 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 6
  %153 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %123, i64 6
  %154 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 7
  %158 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %123, i64 7
  %159 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 8
  %163 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %162 to i64
  %164 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %123, i64 8
  %165 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %173, i64 1
  %188 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %46 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"***
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %173, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %192, align 8
  %193 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %195, i64 -1
  %197 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %201 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %200, i64 -1
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %201, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.1406"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1406", %"struct.std::__1::__split_buffer.1406"* %0, i64 0, i32 2
  %4 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1406", %"struct.std::__1::__split_buffer.1406"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %6 to i64
  %9 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1406", %"struct.std::__1::__split_buffer.1406"* %0, i64 0, i32 1
  %12 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1406", %"struct.std::__1::__split_buffer.1406"* %0, i64 0, i32 0
  %14 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %13, align 8
  %15 = icmp ugt %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %12, %14
  %16 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %12, i64 %22
  %24 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %23 to i8*
  %30 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #8
  %31 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %23, i64 %26
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %34, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %33, i64 %22
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %35, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %11, align 8
  %36 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1406"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.1406", %"struct.std::__1::__split_buffer.1406"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator.38"*, %"class.v8::internal::RecyclingZoneAllocator.38"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.38", %"class.v8::internal::RecyclingZoneAllocator.38"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %48 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.38", %"class.v8::internal::RecyclingZoneAllocator.38"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !5

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #8
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %77 to i64
  %79 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %77, i64 %44
  %80 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %79 to i64
  %81 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %77, i64 %43
  %82 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %81 to i64
  %83 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %11, align 8
  %84 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %98, i64 1
  %106 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %105 to i64
  %107 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !156

110:                                              ; preds = %97
  %111 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %118, i64 1
  %125 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 1
  %126 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %118, i64 2
  %130 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 2
  %131 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %118, i64 3
  %135 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 3
  %136 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %118, i64 4
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 4
  %141 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %118, i64 5
  %145 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 5
  %146 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %118, i64 6
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 6
  %151 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %118, i64 7
  %155 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 7
  %156 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %118, i64 8
  %160 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %159 to i64
  %161 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %120, i64 8
  %162 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %170, i64 1
  %186 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %47 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"***
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %170, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %190, align 8
  %191 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %198 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %197, i64 1
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %198, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18EffectGraphReducer9NodeStateERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.1406"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1406", %"struct.std::__1::__split_buffer.1406"* %0, i64 0, i32 1
  %4 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1406", %"struct.std::__1::__split_buffer.1406"* %0, i64 0, i32 0
  %6 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1406", %"struct.std::__1::__split_buffer.1406"* %0, i64 0, i32 2
  %11 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1406", %"struct.std::__1::__split_buffer.1406"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %12, align 8
  %14 = icmp ult %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %11, %13
  %15 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %12 to i64*
  %16 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %11, i64 %22
  %24 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %23, i64 %29
  %31 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %30 to i8*
  %32 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #8
  %33 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %36, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %37 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %35, i64 %22
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %37, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1406"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.1406", %"struct.std::__1::__split_buffer.1406"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator.38"*, %"class.v8::internal::RecyclingZoneAllocator.38"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.38", %"class.v8::internal::RecyclingZoneAllocator.38"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %49 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.38", %"class.v8::internal::RecyclingZoneAllocator.38"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !5

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #8
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %78 to i64
  %80 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %78, i64 %45
  %81 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %80 to i64
  %82 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %78, i64 %43
  %83 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %82 to i64
  %84 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %85 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %99, i64 1
  %107 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %106 to i64
  %108 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !157

111:                                              ; preds = %98
  %112 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %119, i64 1
  %126 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 1
  %127 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %119, i64 2
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 2
  %132 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %119, i64 3
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 3
  %137 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %119, i64 4
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 4
  %142 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %119, i64 5
  %146 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 5
  %147 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %119, i64 6
  %151 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 6
  %152 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %119, i64 7
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 7
  %157 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %119, i64 8
  %161 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %160 to i64
  %162 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %121, i64 8
  %163 = icmp eq %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %171, i64 1
  %186 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::EffectGraphReducer::NodeState *>::FreeBlock"** %48 to %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"***
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %171, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %190, align 8
  %191 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %193, i64 -1
  %195 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"**, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  %199 = getelementptr inbounds %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %198, i64 -1
  store %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"** %199, %"struct.v8::internal::compiler::EffectGraphReducer::NodeState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal8compiler15VariableTracker5StateEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.1275"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #8
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1275", %"class.std::__1::__hash_table.1275"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal8compiler15VariableTracker5StateEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1275"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #8, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1275", %"class.std::__1::__hash_table.1275"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1275", %"class.std::__1::__hash_table.1275"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #8
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #8, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #8
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal8compiler15VariableTracker5StateEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1275"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal8compiler15VariableTracker5StateEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1275"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %186, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.1275", %"class.std::__1::__hash_table.1275"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = shl i64 %1, 3
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ugt i64 %7, %12
  br i1 %13, label %14, label %16, !prof !5

14:                                               ; preds = %4
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %7) #8
  br label %18

16:                                               ; preds = %4
  %17 = add i64 %9, %7
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__hash_node_base.1279"**
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1275", %"class.std::__1::__hash_table.1275"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1279"** %20, %"struct.std::__1::__hash_node_base.1279"*** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1275", %"class.std::__1::__hash_table.1275"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %22, align 8
  store %"struct.std::__1::__hash_node_base.1279"* null, %"struct.std::__1::__hash_node_base.1279"** %20, align 8
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %42, label %24

24:                                               ; preds = %18
  %25 = add i64 %1, -1
  %26 = add i64 %1, -2
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %25, %27
  br label %47

31:                                               ; preds = %47, %24
  %32 = phi i64 [ 1, %24 ], [ %61, %47 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %21, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.1279"* null, %"struct.std::__1::__hash_node_base.1279"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !158

42:                                               ; preds = %31, %34, %18
  %43 = getelementptr inbounds %"class.std::__1::__hash_table.1275", %"class.std::__1::__hash_table.1275"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %45, null
  br i1 %46, label %188, label %64

47:                                               ; preds = %47, %29
  %48 = phi i64 [ 1, %29 ], [ %61, %47 ]
  %49 = phi i64 [ %30, %29 ], [ %62, %47 ]
  %50 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %21, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %50, i64 %48
  store %"struct.std::__1::__hash_node_base.1279"* null, %"struct.std::__1::__hash_node_base.1279"** %51, align 8
  %52 = add nuw nsw i64 %48, 1
  %53 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %21, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.1279"* null, %"struct.std::__1::__hash_node_base.1279"** %54, align 8
  %55 = add nuw nsw i64 %48, 2
  %56 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %21, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.1279"* null, %"struct.std::__1::__hash_node_base.1279"** %57, align 8
  %58 = add nuw i64 %48, 3
  %59 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %21, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base.1279"* null, %"struct.std::__1::__hash_node_base.1279"** %60, align 8
  %61 = add nuw i64 %48, 4
  %62 = add i64 %49, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %31, label %47

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %45, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.1279"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = tail call i64 @llvm.ctpop.i64(i64 %1) #8, !range !3
  %69 = icmp ugt i64 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = add i64 %1, -1
  %72 = and i64 %67, %71
  br label %77

73:                                               ; preds = %64
  %74 = icmp ult i64 %67, %1
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %67, %1
  br label %77

77:                                               ; preds = %70, %73, %75
  %78 = phi i64 [ %72, %70 ], [ %76, %75 ], [ %67, %73 ]
  %79 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %21, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %79, i64 %78
  store %"struct.std::__1::__hash_node_base.1279"* %43, %"struct.std::__1::__hash_node_base.1279"** %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %45, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %82, null
  br i1 %83, label %188, label %84

84:                                               ; preds = %77
  %85 = add i64 %1, -1
  br i1 %69, label %86, label %138

86:                                               ; preds = %84, %129
  %87 = phi %"struct.std::__1::__hash_node_base.1279"* [ %133, %129 ], [ %82, %84 ]
  %88 = phi i64 [ %131, %129 ], [ %78, %84 ]
  %89 = phi %"struct.std::__1::__hash_node_base.1279"* [ %130, %129 ], [ %45, %84 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %87, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base.1279"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %92, %1
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = urem i64 %92, %1
  br label %96

96:                                               ; preds = %94, %86
  %97 = phi i64 [ %95, %94 ], [ %92, %86 ]
  %98 = icmp eq i64 %97, %88
  br i1 %98, label %129, label %99

99:                                               ; preds = %96
  %100 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %21, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %100, i64 %97
  %102 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %102, null
  br i1 %103, label %128, label %135

104:                                              ; preds = %135, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1279"* [ %107, %109 ], [ %87, %135 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1279"* %110 to i32*
  %112 = load i32, i32* %137, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %109, %104
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1279"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1279"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1279"* %89 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %21, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %119, i64 %97
  %121 = bitcast %"struct.std::__1::__hash_node_base.1279"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %21, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %124, i64 %97
  %126 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1279"* %87, %"struct.std::__1::__hash_node_base.1279"** %127, align 8
  br label %129

128:                                              ; preds = %99
  store %"struct.std::__1::__hash_node_base.1279"* %89, %"struct.std::__1::__hash_node_base.1279"** %101, align 8
  br label %129

129:                                              ; preds = %128, %115, %96
  %130 = phi %"struct.std::__1::__hash_node_base.1279"* [ %87, %128 ], [ %89, %115 ], [ %87, %96 ]
  %131 = phi i64 [ %97, %128 ], [ %88, %115 ], [ %88, %96 ]
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %130, i64 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %133, null
  br i1 %134, label %188, label %86

135:                                              ; preds = %99
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %87, i64 2
  %137 = bitcast %"struct.std::__1::__hash_node_base.1279"* %136 to i32*
  br label %104

138:                                              ; preds = %84, %180
  %139 = phi %"struct.std::__1::__hash_node_base.1279"* [ %184, %180 ], [ %82, %84 ]
  %140 = phi i64 [ %182, %180 ], [ %78, %84 ]
  %141 = phi %"struct.std::__1::__hash_node_base.1279"* [ %181, %180 ], [ %45, %84 ]
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %139, i64 1
  %143 = bitcast %"struct.std::__1::__hash_node_base.1279"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, %85
  %146 = icmp eq i64 %145, %140
  br i1 %146, label %180, label %147

147:                                              ; preds = %138
  %148 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %21, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %148, i64 %145
  %150 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %139, i64 2
  %154 = bitcast %"struct.std::__1::__hash_node_base.1279"* %153 to i32*
  br label %156

155:                                              ; preds = %147
  store %"struct.std::__1::__hash_node_base.1279"* %141, %"struct.std::__1::__hash_node_base.1279"** %149, align 8
  br label %180

156:                                              ; preds = %152, %161
  %157 = phi %"struct.std::__1::__hash_node_base.1279"* [ %159, %161 ], [ %139, %152 ]
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %157, i64 0, i32 0
  %159 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %158, align 8
  %160 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %159, null
  br i1 %160, label %167, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %159, i64 2
  %163 = bitcast %"struct.std::__1::__hash_node_base.1279"* %162 to i32*
  %164 = load i32, i32* %154, align 4
  %165 = load i32, i32* %163, align 4
  %166 = icmp eq i32 %164, %165
  br i1 %166, label %156, label %167

167:                                              ; preds = %156, %161
  %168 = ptrtoint %"struct.std::__1::__hash_node_base.1279"* %159 to i64
  %169 = bitcast %"struct.std::__1::__hash_node_base.1279"* %157 to i64*
  %170 = bitcast %"struct.std::__1::__hash_node_base.1279"* %141 to i64*
  store i64 %168, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %21, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %171, i64 %145
  %173 = bitcast %"struct.std::__1::__hash_node_base.1279"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %169, align 8
  %176 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %21, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %176, i64 %145
  %178 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1279"* %139, %"struct.std::__1::__hash_node_base.1279"** %179, align 8
  br label %180

180:                                              ; preds = %138, %167, %155
  %181 = phi %"struct.std::__1::__hash_node_base.1279"* [ %139, %155 ], [ %141, %167 ], [ %139, %138 ]
  %182 = phi i64 [ %145, %155 ], [ %140, %167 ], [ %140, %138 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %184, null
  br i1 %185, label %188, label %138

186:                                              ; preds = %2
  %187 = bitcast %"class.std::__1::__hash_table.1275"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %187, i8 0, i64 16, i1 false)
  br label %188

188:                                              ; preds = %180, %129, %77, %42, %186
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1279"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal8compiler15VariableTracker5StateEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE25__emplace_unique_key_argsIjJNS_4pairIjS6_EEEEENSL_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1275"*, i32* dereferenceable(4), %"struct.std::__1::pair.1419"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %4) #8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.1275", %"class.std::__1::__hash_table.1275"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %69, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #8, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ult i64 %5, %7
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1275", %"class.std::__1::__hash_table.1275"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %24, null
  br i1 %25, label %69, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  %28 = load i32, i32* %1, align 4
  br i1 %11, label %29, label %51

29:                                               ; preds = %26, %46
  %30 = phi %"struct.std::__1::__hash_node_base.1279"* [ %32, %46 ], [ %24, %26 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %32, null
  br i1 %33, label %69, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.1279"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %5
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = icmp ult i64 %37, %7
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %37, %7
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %42, %41 ], [ %37, %39 ]
  %45 = icmp eq i64 %44, %20
  br i1 %45, label %46, label %69

46:                                               ; preds = %43, %34
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %32, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base.1279"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %28
  br i1 %50, label %174, label %29

51:                                               ; preds = %26, %64
  %52 = phi %"struct.std::__1::__hash_node_base.1279"* [ %54, %64 ], [ %24, %26 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %52, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %54, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.1279"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %5
  %61 = and i64 %59, %27
  %62 = icmp eq i64 %61, %20
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %69

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %54, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.1279"* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %28
  br i1 %68, label %174, label %51

69:                                               ; preds = %56, %51, %43, %29, %19, %3
  %70 = phi i64 [ %20, %19 ], [ undef, %3 ], [ %20, %29 ], [ %20, %43 ], [ %20, %51 ], [ %20, %56 ]
  %71 = getelementptr inbounds %"class.std::__1::__hash_table.1275", %"class.std::__1::__hash_table.1275"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %72 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %71, align 8, !noalias !159
  %73 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %72, i64 0, i32 2
  %74 = load i64, i64* %73, align 8, !noalias !159
  %75 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %72, i64 0, i32 3
  %76 = load i64, i64* %75, align 8, !noalias !159
  %77 = sub i64 %76, %74
  %78 = icmp ult i64 %77, 48
  br i1 %78, label %79, label %81, !prof !5

79:                                               ; preds = %69
  %80 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %72, i64 48) #8, !noalias !159
  br label %83

81:                                               ; preds = %69
  %82 = add i64 %74, 48
  store i64 %82, i64* %73, align 8, !noalias !159
  br label %83

83:                                               ; preds = %79, %81
  %84 = phi i64 [ %80, %79 ], [ %74, %81 ]
  %85 = inttoptr i64 %84 to %"struct.std::__1::__hash_node.1403"*
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node.1403", %"struct.std::__1::__hash_node.1403"* %85, i64 0, i32 2, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::__1::pair.1419", %"struct.std::__1::pair.1419"* %2, i64 0, i32 0
  %88 = load i32, i32* %87, align 4, !noalias !159
  store i32 %88, i32* %86, align 8, !noalias !159
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node.1403", %"struct.std::__1::__hash_node.1403"* %85, i64 0, i32 2, i32 0, i32 1
  %90 = getelementptr inbounds %"struct.std::__1::pair.1419", %"struct.std::__1::pair.1419"* %2, i64 0, i32 1
  %91 = bitcast %"class.v8::internal::compiler::VariableTracker::State"* %89 to i8*
  %92 = bitcast %"class.v8::internal::compiler::VariableTracker::State"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 24, i1 false) #8, !noalias !159
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node.1403", %"struct.std::__1::__hash_node.1403"* %85, i64 0, i32 1
  store i64 %5, i64* %93, align 8, !noalias !159
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node.1403", %"struct.std::__1::__hash_node.1403"* %85, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1279"* null, %"struct.std::__1::__hash_node_base.1279"** %94, align 8, !noalias !159
  %95 = getelementptr inbounds %"class.std::__1::__hash_table.1275", %"class.std::__1::__hash_table.1275"* %0, i64 0, i32 2, i32 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 1
  %98 = uitofp i64 %97 to float
  %99 = uitofp i64 %7 to float
  %100 = getelementptr inbounds %"class.std::__1::__hash_table.1275", %"class.std::__1::__hash_table.1275"* %0, i64 0, i32 3, i32 0, i32 0
  %101 = load float, float* %100, align 4
  %102 = fmul float %101, %99
  %103 = fcmp olt float %102, %98
  %104 = or i1 %8, %103
  br i1 %104, label %105, label %128

105:                                              ; preds = %83
  %106 = shl i64 %7, 1
  %107 = icmp ult i64 %7, 3
  %108 = tail call i64 @llvm.ctpop.i64(i64 %7) #8, !range !3
  %109 = icmp ugt i64 %108, 1
  %110 = or i1 %107, %109
  %111 = zext i1 %110 to i64
  %112 = or i64 %106, %111
  %113 = fdiv float %98, %101
  %114 = tail call float @llvm.ceil.f32(float %113) #8
  %115 = fptoui float %114 to i64
  %116 = icmp ult i64 %112, %115
  %117 = select i1 %116, i64 %115, i64 %112
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal8compiler15VariableTracker5StateEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.1275"* %0, i64 %117)
  %118 = load i64, i64* %6, align 8
  %119 = tail call i64 @llvm.ctpop.i64(i64 %118) #8, !range !3
  %120 = icmp ugt i64 %119, 1
  br i1 %120, label %124, label %121

121:                                              ; preds = %105
  %122 = add i64 %118, -1
  %123 = and i64 %122, %5
  br label %128

124:                                              ; preds = %105
  %125 = icmp ult i64 %5, %118
  br i1 %125, label %128, label %126

126:                                              ; preds = %124
  %127 = urem i64 %5, %118
  br label %128

128:                                              ; preds = %126, %124, %121, %83
  %129 = phi i64 [ %7, %83 ], [ %118, %121 ], [ %118, %124 ], [ %118, %126 ]
  %130 = phi i64 [ %70, %83 ], [ %123, %121 ], [ %5, %124 ], [ %127, %126 ]
  %131 = getelementptr inbounds %"class.std::__1::__hash_table.1275", %"class.std::__1::__hash_table.1275"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %131, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %132, i64 %130
  %134 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %133, align 8
  %135 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %134, null
  br i1 %135, label %136, label %164

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"class.std::__1::__hash_table.1275", %"class.std::__1::__hash_table.1275"* %0, i64 0, i32 1, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %137, i64 0, i32 0
  %139 = bitcast %"struct.std::__1::__hash_node_base.1279"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = inttoptr i64 %84 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node.1403", %"struct.std::__1::__hash_node.1403"* %85, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1279"* %142, %"struct.std::__1::__hash_node_base.1279"** %138, align 8
  %143 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %131, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %143, i64 %130
  store %"struct.std::__1::__hash_node_base.1279"* %137, %"struct.std::__1::__hash_node_base.1279"** %144, align 8
  %145 = load %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %94, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node_base.1279"* %145, null
  br i1 %146, label %170, label %147

147:                                              ; preds = %136
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %145, i64 1
  %149 = bitcast %"struct.std::__1::__hash_node_base.1279"* %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = tail call i64 @llvm.ctpop.i64(i64 %129) #8, !range !3
  %152 = icmp ugt i64 %151, 1
  br i1 %152, label %156, label %153

153:                                              ; preds = %147
  %154 = add i64 %129, -1
  %155 = and i64 %150, %154
  br label %160

156:                                              ; preds = %147
  %157 = icmp ult i64 %150, %129
  br i1 %157, label %160, label %158

158:                                              ; preds = %156
  %159 = urem i64 %150, %129
  br label %160

160:                                              ; preds = %153, %156, %158
  %161 = phi i64 [ %155, %153 ], [ %159, %158 ], [ %150, %156 ]
  %162 = load %"struct.std::__1::__hash_node_base.1279"**, %"struct.std::__1::__hash_node_base.1279"*** %131, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279"*, %"struct.std::__1::__hash_node_base.1279"** %162, i64 %161
  store %"struct.std::__1::__hash_node_base.1279"* %142, %"struct.std::__1::__hash_node_base.1279"** %163, align 8
  br label %170

164:                                              ; preds = %128
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1279", %"struct.std::__1::__hash_node_base.1279"* %134, i64 0, i32 0
  %166 = bitcast %"struct.std::__1::__hash_node_base.1279"* %134 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = inttoptr i64 %84 to i64*
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node.1403", %"struct.std::__1::__hash_node.1403"* %85, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1279"* %169, %"struct.std::__1::__hash_node_base.1279"** %165, align 8
  br label %170

170:                                              ; preds = %136, %160, %164
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node.1403", %"struct.std::__1::__hash_node.1403"* %85, i64 0, i32 0
  %172 = load i64, i64* %95, align 8
  %173 = add i64 %172, 1
  store i64 %173, i64* %95, align 8
  br label %174

174:                                              ; preds = %64, %46, %170
  %175 = phi i8 [ 1, %170 ], [ 0, %46 ], [ 0, %64 ]
  %176 = phi %"struct.std::__1::__hash_node_base.1279"* [ %171, %170 ], [ %32, %46 ], [ %54, %64 ]
  %177 = insertvalue { %"struct.std::__1::__hash_node_base.1279"*, i8 } undef, %"struct.std::__1::__hash_node_base.1279"* %176, 0
  %178 = insertvalue { %"struct.std::__1::__hash_node_base.1279"*, i8 } %177, i8 %175, 1
  ret { %"struct.std::__1::__hash_node_base.1279"*, i8 } %178
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN2v88internal8compiler4NodeEPNS4_18EffectGraphReducer9ReductionEEE11__call_implINS0_20__default_alloc_funcIZNS4_14EscapeAnalysisC1EPNS4_7JSGraphEPNS3_11TickCounterEPNS3_4ZoneEE3$_0SA_EEEEvPKNS0_16__policy_storageES6_S9_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"*) #0 align 2 {
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.v8::internal::compiler::EscapeAnalysis"**
  %5 = load %"class.v8::internal::compiler::EscapeAnalysis"*, %"class.v8::internal::compiler::EscapeAnalysis"** %4, align 8
  tail call void @_ZN2v88internal8compiler14EscapeAnalysis6ReduceEPNS1_4NodeEPNS1_18EffectGraphReducer9ReductionE(%"class.v8::internal::compiler::EscapeAnalysis"* %5, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::EffectGraphReducer::Reduction"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler15SparseSidetableIPNS1_13VirtualObjectEEC2EPNS0_4ZoneES4_(%"class.v8::internal::compiler::SparseSidetable.1305"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::VirtualObject"*) unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.v8::internal::compiler::VirtualObject"* %2 to i64
  %5 = bitcast %"class.v8::internal::compiler::SparseSidetable.1305"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable.1305", %"class.v8::internal::compiler::SparseSidetable.1305"* %0, i64 0, i32 1
  %7 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %8 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedMap.1313", %"class.v8::internal::ZoneUnorderedMap.1313"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable.1305", %"class.v8::internal::compiler::SparseSidetable.1305"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::__compressed_pair_elem.1323"* %9 to i64*
  %11 = bitcast %"class.v8::internal::ZoneUnorderedMap.1313"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #8
  store i64 %7, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable.1305", %"class.v8::internal::compiler::SparseSidetable.1305"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1319"* null, %"struct.std::__1::__hash_node_base.1319"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable.1305", %"class.v8::internal::compiler::SparseSidetable.1305"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %14 = bitcast %"struct.std::__1::__compressed_pair_elem.1327"* %13 to i64*
  store i64 %7, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable.1305", %"class.v8::internal::compiler::SparseSidetable.1305"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable.1305", %"class.v8::internal::compiler::SparseSidetable.1305"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %17 = bitcast %"class.std::__1::__compressed_pair.1332"* %16 to i32*
  store i32 1065353216, i32* %17, align 4
  %18 = tail call i64 @_ZNSt3__112__next_primeEm(i64 100) #8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable.1305", %"class.v8::internal::compiler::SparseSidetable.1305"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %18, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %3
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal8compiler13VirtualObjectEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1315"* %8, i64 %18) #8
  br label %52

23:                                               ; preds = %3
  %24 = icmp ult i64 %18, %20
  br i1 %24, label %25, label %52

25:                                               ; preds = %23
  %26 = icmp ugt i64 %20, 2
  %27 = tail call i64 @llvm.ctpop.i64(i64 %20) #8, !range !3
  %28 = icmp ult i64 %27, 2
  %29 = and i1 %26, %28
  %30 = load i64, i64* %15, align 8
  %31 = uitofp i64 %30 to float
  %32 = getelementptr inbounds %"class.v8::internal::compiler::SparseSidetable.1305", %"class.v8::internal::compiler::SparseSidetable.1305"* %0, i64 0, i32 1, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = load float, float* %32, align 4
  %34 = fdiv float %31, %33
  %35 = tail call float @llvm.ceil.f32(float %34) #8
  %36 = fptoui float %35 to i64
  br i1 %29, label %37, label %44

37:                                               ; preds = %25
  %38 = icmp ult i64 %36, 2
  br i1 %38, label %46, label %39

39:                                               ; preds = %37
  %40 = add i64 %36, -1
  %41 = tail call i64 @llvm.ctlz.i64(i64 %40, i1 true) #8, !range !3
  %42 = sub nuw nsw i64 64, %41
  %43 = shl i64 1, %42
  br label %46

44:                                               ; preds = %25
  %45 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %36) #8
  br label %46

46:                                               ; preds = %44, %39, %37
  %47 = phi i64 [ %45, %44 ], [ %43, %39 ], [ %36, %37 ]
  %48 = icmp ult i64 %18, %47
  %49 = select i1 %48, i64 %47, i64 %18
  %50 = icmp ult i64 %49, %20
  br i1 %50, label %51, label %52

51:                                               ; preds = %46
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal8compiler13VirtualObjectEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1315"* %8, i64 %49) #8
  br label %52

52:                                               ; preds = %22, %23, %46, %51
  ret void
}

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #4

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !12}
!16 = !{!17, !19, !21, !23}
!17 = distinct !{!17, !18, !"_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iterator3endES5_: argument 0"}
!18 = distinct !{!18, !"_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iterator3endES5_"}
!19 = distinct !{!19, !20, !"_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3endEv: argument 0"}
!20 = distinct !{!20, !"_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3endEv"}
!21 = distinct !{!21, !22, !"_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE5beginEv"}
!23 = distinct !{!23, !24, !"_ZNK2v88internal8compiler15VariableTracker5State5beginEv: argument 0"}
!24 = distinct !{!24, !"_ZNK2v88internal8compiler15VariableTracker5State5beginEv"}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !12}
!31 = distinct !{!31, !14}
!32 = distinct !{!32, !12}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !12}
!39 = distinct !{!39, !14}
!40 = distinct !{!40, !12}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !12}
!47 = distinct !{!47, !14}
!48 = distinct !{!48, !12}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNSt3__19make_pairIjN2v88internal8compiler15VariableTracker5StateEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__19make_pairIjN2v88internal8compiler15VariableTracker5StateEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iterator3endES5_: argument 0"}
!54 = distinct !{!54, !"_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iterator3endES5_"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iterator3endES5_: argument 0"}
!57 = distinct !{!57, !"_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iterator3endES5_"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNK2v88internal13ZoneHandleSetINS0_3MapEE3endEv: argument 0"}
!60 = distinct !{!60, !"_ZNK2v88internal13ZoneHandleSetINS0_3MapEE3endEv"}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !12}
!67 = distinct !{!67, !14}
!68 = distinct !{!68, !12}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !12}
!75 = distinct !{!75, !14}
!76 = distinct !{!76, !12}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE15double_iteratordeEv: argument 0"}
!79 = distinct !{!79, !"_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE15double_iteratordeEv"}
!80 = !{!81, !78}
!81 = distinct !{!81, !82, !"_ZNSt3__110make_tupleIJRN2v88internal8compiler8VariableERKPNS3_4NodeERS7_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOSD_: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__110make_tupleIJRN2v88internal8compiler8VariableERKPNS3_4NodeERS7_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOSD_"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE5beginEv: argument 0"}
!85 = distinct !{!85, !"_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE5beginEv"}
!86 = !{!87, !84}
!87 = distinct !{!87, !88, !"_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3endEv: argument 0"}
!88 = distinct !{!88, !"_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3endEv"}
!89 = !{!90, !87, !84}
!90 = distinct !{!90, !91, !"_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iterator3endES5_: argument 0"}
!91 = distinct !{!91, !"_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iterator3endES5_"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE5beginEv: argument 0"}
!94 = distinct !{!94, !"_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE5beginEv"}
!95 = !{!96, !93}
!96 = distinct !{!96, !97, !"_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3endEv: argument 0"}
!97 = distinct !{!97, !"_ZNK2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE3endEv"}
!98 = !{!99, !96, !93}
!99 = distinct !{!99, !100, !"_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iterator3endES5_: argument 0"}
!100 = distinct !{!100, !"_ZN2v88internal8compiler13PersistentMapINS1_8VariableEPNS1_4NodeENS_4base4hashIS3_EEE8iterator3endES5_"}
!101 = distinct !{!101, !14}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler8VariableEPNS4_4NodeEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS3_13ZoneAllocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_: argument 0"}
!104 = distinct !{!104, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler8VariableEPNS4_4NodeEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS3_13ZoneAllocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_"}
!105 = distinct !{!105, !14}
!106 = !{!107}
!107 = distinct !{!107, !108}
!108 = distinct !{!108, !"LVerDomain"}
!109 = !{!110}
!110 = distinct !{!110, !108}
!111 = distinct !{!111, !12}
!112 = distinct !{!112, !14}
!113 = distinct !{!113, !12}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler8VariableEPNS4_4NodeEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS3_13ZoneAllocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_: argument 0"}
!116 = distinct !{!116, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler8VariableEPNS4_4NodeEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS3_13ZoneAllocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_"}
!117 = !{!118}
!118 = distinct !{!118, !119, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler8VariableEPNS4_4NodeEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS3_13ZoneAllocatorIS8_EEE16__construct_nodeIJRKNS_4pairIKS5_S7_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISP_EEEEEEDpOT_: argument 0"}
!119 = distinct !{!119, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler8VariableEPNS4_4NodeEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS3_13ZoneAllocatorIS8_EEE16__construct_nodeIJRKNS_4pairIKS5_S7_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISP_EEEEEEDpOT_"}
!120 = !{!121}
!121 = distinct !{!121, !122}
!122 = distinct !{!122, !"LVerDomain"}
!123 = !{!124}
!124 = distinct !{!124, !122}
!125 = distinct !{!125, !12}
!126 = distinct !{!126, !14}
!127 = distinct !{!127, !12}
!128 = !{!129}
!129 = distinct !{!129, !130}
!130 = distinct !{!130, !"LVerDomain"}
!131 = !{!132}
!132 = distinct !{!132, !130}
!133 = distinct !{!133, !12}
!134 = distinct !{!134, !14}
!135 = distinct !{!135, !12}
!136 = !{!137}
!137 = distinct !{!137, !138}
!138 = distinct !{!138, !"LVerDomain"}
!139 = !{!140}
!140 = distinct !{!140, !138}
!141 = distinct !{!141, !12}
!142 = distinct !{!142, !14}
!143 = distinct !{!143, !12}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal8compiler13VirtualObjectEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE21__construct_node_hashINS_4pairIjS6_EEJEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSH_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!146 = distinct !{!146, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal8compiler13VirtualObjectEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE21__construct_node_hashINS_4pairIjS6_EEJEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSH_ISQ_EEEEEEmOT_DpOT0_"}
!147 = distinct !{!147, !14}
!148 = distinct !{!148, !14}
!149 = distinct !{!149, !14}
!150 = distinct !{!150, !14}
!151 = distinct !{!151, !14}
!152 = distinct !{!152, !14}
!153 = distinct !{!153, !14}
!154 = distinct !{!154, !14}
!155 = distinct !{!155, !14}
!156 = distinct !{!156, !14}
!157 = distinct !{!157, !14}
!158 = distinct !{!158, !14}
!159 = !{!160}
!160 = distinct !{!160, !161, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal8compiler15VariableTracker5StateEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE21__construct_node_hashINS_4pairIjS6_EEJEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSH_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!161 = distinct !{!161, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal8compiler15VariableTracker5StateEEENS_22__unordered_map_hasherIjS7_NS2_4base4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE21__construct_node_hashINS_4pairIjS6_EEJEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSH_ISQ_EEEEEEmOT_DpOT0_"}
