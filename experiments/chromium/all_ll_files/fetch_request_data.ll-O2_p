; ModuleID = '../../third_party/blink/renderer/core/fetch/fetch_request_data.cc'
source_filename = "../../third_party/blink/renderer/core/fetch/fetch_request_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.MojoCreateDataPipeOptions = type { i32, i32, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.32", i32, [4 x i8], %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.169", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.210", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.149", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { i64 }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::Worklist.100"* }
%"class.blink::Worklist.100" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::Worklist.107"* }
%"class.blink::Worklist.107" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::Worklist.114"* }
%"class.blink::Worklist.114" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::Worklist.121"* }
%"class.blink::Worklist.121" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.128", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.141", %"class.std::__1::__compressed_pair.143", [4 x i8] }>
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { float }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.152", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.161" }
%"class.WTF::Vector.161" = type { %"class.WTF::VectorBuffer.162" }
%"class.WTF::VectorBuffer.162" = type { %"class.WTF::VectorBufferBase.163" }
%"class.WTF::VectorBufferBase.163" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.177" }
%"class.WTF::VectorBuffer.177" = type { %"class.WTF::VectorBufferBase.178" }
%"class.WTF::VectorBufferBase.178" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.191" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.79"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.86"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.93"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.100"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.107"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.345" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.209 }
%class.scoped_refptr.209 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.210" = type { %"struct.std::__1::__atomic_base.211" }
%"struct.std::__1::__atomic_base.211" = type { %"struct.std::__1::__cxx_atomic_impl.212" }
%"struct.std::__1::__cxx_atomic_impl.212" = type { %"struct.std::__1::__cxx_atomic_base_impl.213" }
%"struct.std::__1::__cxx_atomic_base_impl.213" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.256" }
%"struct.std::__1::atomic.256" = type { %"struct.std::__1::__atomic_base.257" }
%"struct.std::__1::__atomic_base.257" = type { %"struct.std::__1::__atomic_base.258" }
%"struct.std::__1::__atomic_base.258" = type { %"struct.std::__1::__cxx_atomic_impl.259" }
%"struct.std::__1::__cxx_atomic_impl.259" = type { %"struct.std::__1::__cxx_atomic_base_impl.260" }
%"struct.std::__1::__cxx_atomic_base_impl.260" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::FetchRequestData" = type <{ %"class.WTF::AtomicString", %"class.blink::KURL", %"class.blink::Member", i32, [4 x i8], %class.scoped_refptr.10, %class.scoped_refptr.10, %"class.WTF::AtomicString", i32, i32, i32, i32, i32, i32, %"class.absl::optional", %"class.blink::Member.16", %"class.WTF::String", %"class.WTF::String", i32, i8, i8, [2 x i8], %"class.blink::HeapMojoRemote", %"class.base::UnguessableToken", %"class.blink::Member.270", i8, [7 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FetchHeaderList"* }
%"class.blink::FetchHeaderList" = type { %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%class.scoped_refptr.10 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.291", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.293", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.10 }
%"class.WTF::RefCounted.291" = type { %"class.base::RefCounted.292" }
%"class.base::RefCounted.292" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.293" = type { %"class.absl::optional_internal::optional_data.294" }
%"class.absl::optional_internal::optional_data.294" = type { %"class.absl::optional_internal::optional_data_base.295" }
%"class.absl::optional_internal::optional_data_base.295" = type { %"class.absl::optional_internal::optional_data_dtor_base.296" }
%"class.absl::optional_internal::optional_data_dtor_base.296" = type { i8, %union.anon.297 }
%union.anon.297 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector", %"class.WTF::Vector.11", %"class.WTF::String" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr.10*, i32, i32 }
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13" }
%"class.WTF::VectorBufferBase.13" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::BodyStreamBuffer"* }
%"class.blink::BodyStreamBuffer" = type <{ %"class.blink::UnderlyingSourceBase", %"class.blink::BytesConsumer::Client", %"class.blink::Member.27", %"class.blink::Member.218", %"class.blink::Member.220", %"class.blink::Member.222", %"class.blink::Member.226", %"class.blink::Member.230", %"class.blink::Member.272", %class.scoped_refptr.274, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::UnderlyingSourceBase" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.25" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.24"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.24" = type opaque
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::ReadableStreamDefaultControllerWithScriptScope"* }
%"class.blink::ReadableStreamDefaultControllerWithScriptScope" = type opaque
%"class.blink::BytesConsumer::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.31, %"class.blink::Member.214", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.31 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.214" = type { %"class.blink::MemberBase.215" }
%"class.blink::MemberBase.215" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.216" }
%"class.blink::Persistent.216" = type { %"class.blink::PersistentBase.217" }
%"class.blink::PersistentBase.217" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::Member.218" = type { %"class.blink::MemberBase.219" }
%"class.blink::MemberBase.219" = type { %"class.blink::ReadableStream"* }
%"class.blink::ReadableStream" = type opaque
%"class.blink::Member.220" = type { %"class.blink::MemberBase.221" }
%"class.blink::MemberBase.221" = type { %"class.blink::BytesUploader"* }
%"class.blink::BytesUploader" = type opaque
%"class.blink::Member.222" = type { %"class.blink::MemberBase.223" }
%"class.blink::MemberBase.223" = type { %"class.blink::BytesConsumer"* }
%"class.blink::BytesConsumer" = type { i32 (...)** }
%"class.blink::Member.226" = type { %"class.blink::MemberBase.227" }
%"class.blink::MemberBase.227" = type { %"class.blink::FetchDataLoader"* }
%"class.blink::FetchDataLoader" = type { i32 (...)** }
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::AbortSignal"* }
%"class.blink::AbortSignal" = type { %"class.blink::EventTargetWithInlineData", i8, %"class.WTF::Vector.252", %"class.blink::HeapVector.263", %"class.blink::Member.270" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.245" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.236" }
%"class.WTF::Vector.236" = type { %"class.WTF::VectorBuffer.237" }
%"class.WTF::VectorBuffer.237" = type { %"class.WTF::VectorBufferBase.238", [32 x i8] }
%"class.WTF::VectorBufferBase.238" = type { %"struct.std::__1::pair.239"*, i32, i32 }
%"struct.std::__1::pair.239" = type { %"class.WTF::AtomicString", %"class.blink::Member.240" }
%"class.blink::Member.240" = type { %"class.blink::MemberBase.241" }
%"class.blink::MemberBase.241" = type { %"class.blink::HeapVector.242"* }
%"class.blink::HeapVector.242" = type opaque
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.WTF::Vector.248"* }
%"class.WTF::Vector.248" = type opaque
%"class.WTF::Vector.252" = type { %"class.WTF::VectorBuffer.253" }
%"class.WTF::VectorBuffer.253" = type { %"class.WTF::VectorBufferBase.254" }
%"class.WTF::VectorBufferBase.254" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.255 }
%class.scoped_refptr.255 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.256" }
%"class.blink::HeapVector.263" = type { %"class.WTF::Vector.266" }
%"class.WTF::Vector.266" = type { %"class.WTF::VectorBuffer.267" }
%"class.WTF::VectorBuffer.267" = type { %"class.WTF::VectorBufferBase.268" }
%"class.WTF::VectorBufferBase.268" = type { %"class.blink::Member.230"*, i32, i32 }
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::ScriptCachedMetadataHandler"* }
%"class.blink::ScriptCachedMetadataHandler" = type opaque
%class.scoped_refptr.274 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.275" }
%"class.base::RefCountedThreadSafe.275" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.276" }
%"class.blink::Member.276" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.607" }
%"class.mojo::Remote.607" = type { %"class.mojo::internal::InterfacePtrState.608" }
%"class.mojo::internal::InterfacePtrState.608" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.609" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.424, %"class.std::__1::unique_ptr.535", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.406, i32 }>
%class.scoped_refptr.424 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.406, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.501", %"class.absl::optional.506", %"class.absl::optional.461", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.526", i8, [7 x i8], %class.scoped_refptr.406, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.425" }>
%"class.base::RefCountedThreadSafe.425" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.428 }
%union.anon.428 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.438", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.444" }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.444" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.409 }
%class.scoped_refptr.409 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.410", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.410" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.411" }
%"struct.std::__1::atomic.411" = type { %"struct.std::__1::__atomic_base.412" }
%"struct.std::__1::__atomic_base.412" = type { %"struct.std::__1::__atomic_base.413" }
%"struct.std::__1::__atomic_base.413" = type { %"struct.std::__1::__cxx_atomic_impl.414" }
%"struct.std::__1::__cxx_atomic_impl.414" = type { %"struct.std::__1::__cxx_atomic_base_impl.415" }
%"struct.std::__1::__cxx_atomic_base_impl.415" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.406, %"class.std::__1::unique_ptr.445", %"class.absl::optional.451", %"struct.std::__1::atomic.210", i8, i8, i8, i8, i32, i32, %"class.absl::optional.461", %"class.std::__1::unique_ptr.466", i8, i64, %class.scoped_refptr.497, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.500" }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.406, i8, %"class.mojo::ScopedHandleBase.407", %class.scoped_refptr.408, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%"class.mojo::ScopedHandleBase.407" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.408 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.451" = type { %"class.absl::optional_internal::optional_data.452" }
%"class.absl::optional_internal::optional_data.452" = type { %"class.absl::optional_internal::optional_data_base.453" }
%"class.absl::optional_internal::optional_data_base.453" = type { %"class.absl::optional_internal::optional_data_dtor_base.454" }
%"class.absl::optional_internal::optional_data_dtor_base.454" = type { i8, %union.anon.455 }
%union.anon.455 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.456", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.456" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.469", i8, i64, %class.scoped_refptr.470, %class.scoped_refptr.493 }
%"class.base::RepeatingCallback.469" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.470 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.471", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.482", i8, [7 x i8] }>
%"class.base::RefCounted.471" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.472 }
%class.scoped_refptr.472 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.473" }
%"class.std::__1::__tree.473" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.474", %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.482" = type { %"class.std::__1::__tree.483" }
%"class.std::__1::__tree.483" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.484", %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%class.scoped_refptr.493 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.497 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.498 }
%class.scoped_refptr.498 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.594", [4 x i8], %"class.base::RepeatingCallback.538", %class.scoped_refptr.406, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.594" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.538" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.499 }
%class.scoped_refptr.499 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.500" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.501" = type { %"class.absl::optional_internal::optional_data.502" }
%"class.absl::optional_internal::optional_data.502" = type { %"class.absl::optional_internal::optional_data_base.503" }
%"class.absl::optional_internal::optional_data_base.503" = type { %"class.absl::optional_internal::optional_data_dtor_base.504" }
%"class.absl::optional_internal::optional_data_dtor_base.504" = type { i8, %union.anon.505 }
%union.anon.505 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.506" = type { %"class.absl::optional_internal::optional_data.507" }
%"class.absl::optional_internal::optional_data.507" = type { %"class.absl::optional_internal::optional_data_base.508" }
%"class.absl::optional_internal::optional_data_base.508" = type { %"class.absl::optional_internal::optional_data_dtor_base.509" }
%"class.absl::optional_internal::optional_data_dtor_base.509" = type { i8, [7 x i8], %union.anon.510 }
%union.anon.510 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.461" = type { %"class.absl::optional_internal::optional_data.462" }
%"class.absl::optional_internal::optional_data.462" = type { %"class.absl::optional_internal::optional_data_base.463" }
%"class.absl::optional_internal::optional_data_base.463" = type { %"class.absl::optional_internal::optional_data_dtor_base.464" }
%"class.absl::optional_internal::optional_data_dtor_base.464" = type { i8, %union.anon.465 }
%union.anon.465 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.511 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.511 = type { %"class.std::__1::map.514" }
%"class.std::__1::map.514" = type { %"class.std::__1::__tree.515" }
%"class.std::__1::__tree.515" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.516", %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.525"*, i64 }
%"class.std::__1::unique_ptr.525" = type opaque
%"class.std::__1::map.526" = type { %"class.std::__1::__tree.527" }
%"class.std::__1::__tree.527" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.528", %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.538", %"class.base::OnceCallback.539", %"class.absl::optional.540", %"class.absl::optional.545", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.552", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.560", %"class.std::__1::map.571", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.580", i8, %class.scoped_refptr.406, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.581" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.539" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.540" = type { %"class.absl::optional_internal::optional_data.541" }
%"class.absl::optional_internal::optional_data.541" = type { %"class.absl::optional_internal::optional_data_base.542" }
%"class.absl::optional_internal::optional_data_base.542" = type { %"class.absl::optional_internal::optional_data_dtor_base.543" }
%"class.absl::optional_internal::optional_data_dtor_base.543" = type { i8, %union.anon.544 }
%union.anon.544 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.545" = type { %"class.absl::optional_internal::optional_data.546" }
%"class.absl::optional_internal::optional_data.546" = type { %"class.absl::optional_internal::optional_data_base.547" }
%"class.absl::optional_internal::optional_data_base.547" = type { %"class.absl::optional_internal::optional_data_dtor_base.548" }
%"class.absl::optional_internal::optional_data_dtor_base.548" = type { i8, %union.anon.549 }
%union.anon.549 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.406, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.550" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.550" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.551 }
%class.scoped_refptr.551 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.555", %class.scoped_refptr.556 }
%"class.base::RepeatingCallback.555" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.556 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.425", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.560" = type { %"class.std::__1::__tree.561" }
%"class.std::__1::__tree.561" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.562", %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.571" = type { %"class.std::__1::__tree.572" }
%"class.std::__1::__tree.572" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::OnceCallback.580" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.581" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.406 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.405" }>
%"class.base::RefCountedThreadSafe.405" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.network::mojom::blink::URLLoaderFactoryProxy"* }
%"class.network::mojom::blink::URLLoaderFactoryProxy" = type { %"class.network::mojom::blink::URLLoaderFactory", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::URLLoaderFactory" = type { i32 (...)** }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.314", i32, i8, [3 x i8], %"class.blink::HeapVector.316", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.324", %"class.blink::Member.326", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.335", %"class.blink::Member.341", %"class.blink::Member.343", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.280" }
%"class.WTF::HashTable.280" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.282" }
%"class.blink::Supplementable.282" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.283" }
%"class.blink::HeapHashMap.283" = type { %"class.WTF::HashMap.286" }
%"class.WTF::HashMap.286" = type { %"class.WTF::HashTable.287" }
%"class.WTF::HashTable.287" = type <{ %"struct.WTF::KeyValuePair.289"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.289" = type { i8*, %"class.blink::Member.601" }
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.603" }
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.290, %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.304", %"class.blink::Member.270", i32, [4 x i8], %"class.WTF::HashSet.310", i32, i32 }
%class.scoped_refptr.290 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.310" = type { %"class.WTF::HashTable.311" }
%"class.WTF::HashTable.311" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.316" = type { %"class.WTF::Vector.319" }
%"class.WTF::Vector.319" = type { %"class.WTF::VectorBuffer.320" }
%"class.WTF::VectorBuffer.320" = type { %"class.WTF::VectorBufferBase.321" }
%"class.WTF::VectorBufferBase.321" = type { %"class.blink::Member.322"*, i32, i32 }
%"class.blink::Member.322" = type opaque
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.328", i32, i32 }
%"class.blink::HeapHashMap.328" = type { %"class.WTF::HashMap.331" }
%"class.WTF::HashMap.331" = type { %"class.WTF::HashTable.332" }
%"class.WTF::HashTable.332" = type <{ %"struct.WTF::KeyValuePair.334"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.334" = type opaque
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.350" }
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.blink::mojom::blink::FetchAPIRequest"* }
%"class.blink::mojom::blink::FetchAPIRequest" = type { i32, i8, i32, i32, %"class.blink::KURL", %"class.WTF::String", %"class.WTF::HashMap.353", %class.scoped_refptr.274, %"class.blink::ResourceRequestBody", %"class.mojo::StructPtr.379", i32, i32, i32, %"class.WTF::String", i32, %"class.absl::optional.386", i8, i8, i8, %"class.WTF::String" }
%"class.WTF::HashMap.353" = type { %"class.WTF::HashTable.354" }
%"class.WTF::HashTable.354" = type <{ %"struct.WTF::KeyValuePair.357"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.357" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.358, %"class.mojo::PendingRemote.378" }
%class.scoped_refptr.358 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted.359", [4 x i8], %"class.WTF::Vector.361", i64, %"class.WTF::Vector.364", i8, [7 x i8] }>
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.363" }
%"class.WTF::VectorBufferBase.363" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.364", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.274, i64, i64, %"class.absl::optional.369", %class.scoped_refptr.375 }
%"class.absl::optional.369" = type { %"class.absl::optional_internal::optional_data.370" }
%"class.absl::optional_internal::optional_data.370" = type { %"class.absl::optional_internal::optional_data_base.371" }
%"class.absl::optional_internal::optional_data_base.371" = type { %"class.absl::optional_internal::optional_data_dtor_base.372" }
%"class.absl::optional_internal::optional_data_dtor_base.372" = type { i8, %union.anon.373 }
%union.anon.373 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.374" }
%"class.base::time_internal::TimeBase.374" = type { i64 }
%class.scoped_refptr.375 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.WTF::Vector.364" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366" }
%"class.WTF::VectorBufferBase.366" = type { i8*, i32, i32 }
%"class.mojo::PendingRemote.378" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::StructPtr.379" = type { %"class.std::__1::unique_ptr.380" }
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.blink::mojom::blink::Referrer"* }
%"class.blink::mojom::blink::Referrer" = type <{ %"class.blink::KURL", i32, [4 x i8] }>
%"class.absl::optional.386" = type { %"class.absl::optional_internal::optional_data.387" }
%"class.absl::optional_internal::optional_data.387" = type { %"class.absl::optional_internal::optional_data_base.388" }
%"class.absl::optional_internal::optional_data_base.388" = type { %"class.absl::optional_internal::optional_data_dtor_base.389" }
%"class.absl::optional_internal::optional_data_dtor_base.389" = type { i8, %union.anon.390 }
%union.anon.390 = type { %"class.base::UnguessableToken" }
%"class.mojo::ScopedHandleBase.398" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::DataPipeProducerHandle" = type { %"class.mojo::Handle" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::DataPipeBytesConsumer::CompletionNotifier" = type { %"class.blink::WeakMember.402" }
%"class.blink::WeakMember.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::DataPipeBytesConsumer"* }
%"class.blink::DataPipeBytesConsumer" = type <{ %"class.blink::BytesConsumer", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %class.scoped_refptr.404, %"class.mojo::ScopedHandleBase.398", [4 x i8], %"class.mojo::SimpleWatcher", %"class.blink::Member.396", i32, [4 x i8], %"class.blink::BytesConsumer::Error", i64, %"class.absl::optional.416", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%class.scoped_refptr.404 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::BytesConsumer::Client"* }
%"class.blink::BytesConsumer::Error" = type { %"class.WTF::String" }
%"class.absl::optional.416" = type { %"class.absl::optional_internal::optional_data.417" }
%"class.absl::optional_internal::optional_data.417" = type { %"class.absl::optional_internal::optional_data_base.418" }
%"class.absl::optional_internal::optional_data_base.418" = type { %"class.absl::optional_internal::optional_data_dtor_base.419" }
%"class.absl::optional_internal::optional_data_dtor_base.419" = type { i8, %union.anon.420 }
%union.anon.420 = type { i64 }
%"class.blink::Persistent.595" = type { %"class.blink::PersistentBase.596" }
%"class.blink::PersistentBase.596" = type { %"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, %"class.blink::PersistentNodePtr" }
%"class.base::OnceCallback.597" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::ScopedHandleBase.399" = type { %"class.mojo::DataPipeProducerHandle" }
%"class.blink::Platform" = type { i32 (...)** }
%"class.blink::BlobBytesConsumer" = type { %"class.blink::BytesConsumer", %"class.blink::Member.270", %class.scoped_refptr.274, %"class.blink::Member.394", %"class.blink::Member.222", %"class.blink::Member.396" }
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::BlobBytesConsumer::BlobClient"* }
%"class.blink::BlobBytesConsumer::BlobClient" = type opaque
%"class.blink::FormDataBytesConsumer" = type { %"class.blink::BytesConsumer", %"class.blink::Member.222" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.585" }
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* }
%"class.network::mojom::blink::ChunkedDataPipeGetterProxy" = type { %"class.network::mojom::blink::ChunkedDataPipeGetter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::ChunkedDataPipeGetter" = type { i32 (...)** }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.424, %"class.std::__1::unique_ptr.535", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.406, i32, [4 x i8] }>
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", void (%"class.blink::Persistent.595"*)*, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.595" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.598" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.598" = type { %"class.v8::TracedReference.599" }
%"class.v8::TracedReference.599" = type { %"class.v8::BasicTracedReference.600" }
%"class.v8::BasicTracedReference.600" = type { %"class.v8::TracedReferenceBase" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.635", %"class.blink::FreeList", %"class.WTF::Vector.640" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.640" = type { %"class.WTF::VectorBuffer.641" }
%"class.WTF::VectorBuffer.641" = type { %"class.WTF::VectorBufferBase.642" }
%"class.WTF::VectorBufferBase.642" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.405", [4 x i8] }>
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.mojo::Remote"* }
%"struct.base::internal::BindState.659" = type { %"class.base::internal::BindStateBase", void (%"class.mojo::Remote"*, %"class.blink::Persistent.595"*, i32, i64)*, %"class.std::__1::tuple.660" }
%"class.std::__1::tuple.660" = type { %"struct.std::__1::__tuple_impl.661" }
%"struct.std::__1::__tuple_impl.661" = type { %"class.std::__1::__tuple_leaf.662", %"class.std::__1::__tuple_leaf.663" }
%"class.std::__1::__tuple_leaf.662" = type { %"class.std::__1::unique_ptr.421" }
%"class.std::__1::__tuple_leaf.663" = type { %"class.blink::Persistent.595" }
%"class.mojo::PassThroughFilter" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::PendingRemote.673" = type { %"struct.mojo::internal::PendingRemoteState" }
%struct.MojoCreateMessagePipeOptions = type { i32, i32 }

$_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink14SecurityOriginEELj0ENS_18PartitionAllocatorEEaSERKS7_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14SecurityOriginEEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN7network5mojom5blink16TrustTokenParamsC2ERKS2_ = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16FetchRequestDataEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_16FetchRequestDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16FetchRequestDataEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16FetchRequestDataEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13BytesConsumerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13BytesConsumerEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink21ChunkedDataPipeGetterEE28set_connection_error_handlerEN4base12OnceCallbackIFvvEEE = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21DataPipeBytesConsumer18CompletionNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink10TraceTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvN5blink10PersistentINS3_21DataPipeBytesConsumer18CompletionNotifierEEEEJS7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal13FunctorTraitsIPFvN5blink10PersistentINS2_21DataPipeBytesConsumer18CompletionNotifierEEEEvE6InvokeIS8_JS6_EEEvOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIPFvN5blink10PersistentINS2_21DataPipeBytesConsumer18CompletionNotifierEEEEJS6_EEC2IRS7_JS6_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIPFvN5blink10PersistentINS2_21DataPipeBytesConsumer18CompletionNotifierEEEEJS6_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS3_14default_deleteISB_EEEEN5blink10PersistentINSF_21DataPipeBytesConsumer18CompletionNotifierEEEimEJSE_SJ_EEEFvimEE7RunOnceEPNS0_13BindStateBaseEim = comdat any

$_ZN4base8internal13FunctorTraitsIPFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS2_14default_deleteISA_EEEEN5blink10PersistentINSE_21DataPipeBytesConsumer18CompletionNotifierEEEimEvE6InvokeISK_JSD_SI_imEEEvOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS2_14default_deleteISA_EEEEN5blink10PersistentINSE_21DataPipeBytesConsumer18CompletionNotifierEEEimEJSD_SI_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS2_14default_deleteISA_EEEEN5blink10PersistentINSE_21DataPipeBytesConsumer18CompletionNotifierEEEimEJSD_SI_EED2Ev = comdat any

$_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink16URLLoaderFactoryEE25ConfigureProxyIfNecessaryEv = comdat any

$_ZN4mojo6RemoteIN7network5mojom5blink16URLLoaderFactoryEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo6RemoteIN7network5mojom5blink16URLLoaderFactoryEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15FetchHeaderListEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15FetchHeaderListEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15FetchHeaderListEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15FetchHeaderListEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE7GetNameEPKv = comdat any

$_ZNK5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7Wrapper5TraceEPNS_7VisitorE = comdat any

$_ZN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperD2Ev = comdat any

$_ZN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperD0Ev = comdat any

$_ZNK5blink24ContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7Wrapper16ContextDestroyedEv = comdat any

$_ZN5blink10TraceTraitINS_16BodyStreamBufferEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_16FetchRequestDataEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16FetchRequestDataEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15FetchHeaderListEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15FetchHeaderListEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperE = comdat any

@.str = private unnamed_addr constant [8 x i8] c"referer\00", align 1
@__const._ZN5blink16FetchRequestData6CreateEPNS_11ScriptStateEN4mojo9StructPtrINS_5mojom5blink15FetchAPIRequestEEENS0_26ForServiceWorkerFetchEventE.options = private unnamed_addr constant %struct.MojoCreateDataPipeOptions { i32 16, i32 0, i32 1, i32 0 }, align 8
@_ZN5blink10http_names4kGETE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.1 = private unnamed_addr constant [11 x i8] c"sec-fetch-\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink14SecurityOriginEEEEPKcv = private unnamed_addr constant [90 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<const blink::SecurityOrigin>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"about:client\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16FetchRequestDataEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FetchRequestData]\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_16FetchRequestDataEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16FetchRequestDataEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16FetchRequestDataEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16FetchRequestDataEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16FetchRequestDataEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.9 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BytesConsumerEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::BytesConsumer]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13BytesConsumerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13BytesConsumerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.10 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN7network5mojom5blink21ChunkedDataPipeGetter5Name_E = external constant [0 x i8], align 1
@_ZTVN7network5mojom5blink38ChunkedDataPipeGetterResponseValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZN7network5mojom5blink16URLLoaderFactory5Name_E = external constant [0 x i8], align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FetchHeaderListEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FetchHeaderList]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15FetchHeaderListEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15FetchHeaderListEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15FetchHeaderListEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15FetchHeaderListEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15FetchHeaderListEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS1_19HeapMojoWrapperModeE0EE7WrapperEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::Visitor"*)* @_ZNK5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7Wrapper5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*)* @_ZN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperD2Ev to i8*), i8* bitcast (void (%"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*)* @_ZN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ContextLifecycleObserver"*)* @_ZNK5blink24ContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*)* @_ZN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7Wrapper16ContextDestroyedEv to i8*)] }, comdat, align 8

@_ZN5blink16FetchRequestDataD1Ev = hidden unnamed_addr alias void (%"class.blink::FetchRequestData"*), void (%"class.blink::FetchRequestData"*)* @_ZN5blink16FetchRequestDataD2Ev
@_ZN5blink16FetchRequestDataC1EPNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::FetchRequestData"*, %"class.blink::ExecutionContext"*), void (%"class.blink::FetchRequestData"*, %"class.blink::ExecutionContext"*)* @_ZN5blink16FetchRequestDataC2EPNS_16ExecutionContextE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FetchRequestData"* @_ZN5blink16FetchRequestData6CreateEPNS_11ScriptStateEN4mojo9StructPtrINS_5mojom5blink15FetchAPIRequestEEENS0_26ForServiceWorkerFetchEventE(%"class.blink::ScriptState"*, %"class.mojo::StructPtr"* readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.mojo::PendingRemote.378", align 4
  %6 = alloca %"class.mojo::PendingRemote.378", align 4
  %7 = alloca %"class.mojo::PendingRemote.378", align 4
  %8 = alloca %"class.mojo::ScopedHandleBase.398", align 4
  %9 = alloca %"class.mojo::DataPipeProducerHandle", align 4
  %10 = alloca %"class.mojo::DataPipeConsumerHandle", align 4
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.blink::WebString", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %struct.MojoCreateDataPipeOptions, align 8
  %16 = alloca %"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, align 8
  %17 = alloca %"class.mojo::PendingRemote.378", align 4
  %18 = alloca %"class.base::OnceCallback", align 8
  %19 = alloca %"class.blink::Persistent.595", align 8
  %20 = alloca %"class.base::OnceCallback.597", align 8
  %21 = alloca %"class.blink::Persistent.595", align 8
  %22 = alloca %"class.mojo::ScopedHandleBase.399", align 4
  %23 = alloca %"class.blink::BytesConsumer::Error", align 8
  %24 = icmp eq %"class.blink::ScriptState"* %0, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %3
  %26 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* nonnull %0) #9
  br label %27

27:                                               ; preds = %3, %25
  %28 = phi %"class.blink::ExecutionContext"* [ %26, %25 ], [ null, %3 ]
  %29 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16FetchRequestDataEEEPhm(i64 320) #9
  %30 = bitcast i8* %29 to %"class.blink::FetchRequestData"*
  tail call void @_ZN5blink16FetchRequestDataC2EPNS_16ExecutionContextE(%"class.blink::FetchRequestData"* %30, %"class.blink::ExecutionContext"* %28) #9
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  %35 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %36, i64 0, i32 4
  %38 = getelementptr inbounds i8, i8* %29, i64 8
  %39 = bitcast i8* %38 to %"class.blink::KURL"*
  %40 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %39, %"class.blink::KURL"* dereferenceable(112) %37) #9
  %41 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %42 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %41, i64 0, i32 5, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %68, label %45

45:                                               ; preds = %27
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 acquire, align 4
  %48 = and i32 %47, 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %45
  %51 = load atomic i32, i32* %46 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %68

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i33
  %58 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #9
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !2

63:                                               ; preds = %54
  tail call void @llvm.trap() #9
  unreachable

64:                                               ; preds = %54
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %55, align 4
  br label %68

66:                                               ; preds = %45
  %67 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %43) #9
  br label %68

68:                                               ; preds = %27, %50, %64, %66
  %69 = phi %"class.WTF::StringImpl"* [ %67, %66 ], [ %43, %50 ], [ %43, %64 ], [ null, %27 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %69 to i64
  %71 = bitcast i8* %29 to i64*
  %72 = bitcast i8* %29 to %"class.WTF::StringImpl"**
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  store i64 %70, i64* %71, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #9
  br label %88

88:                                               ; preds = %87, %84, %68
  %89 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %90 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %89, i64 0, i32 6, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %89, i64 0, i32 6, i32 0, i32 0
  %94 = load %"struct.WTF::KeyValuePair.357"*, %"struct.WTF::KeyValuePair.357"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %89, i64 0, i32 6, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.357", %"struct.WTF::KeyValuePair.357"* %94, i64 %97
  br i1 %92, label %128, label %99

99:                                               ; preds = %88
  %100 = icmp eq i32 %96, 0
  br i1 %100, label %108, label %101

101:                                              ; preds = %99, %105
  %102 = phi %"struct.WTF::KeyValuePair.357"* [ %106, %105 ], [ %94, %99 ]
  %103 = bitcast %"struct.WTF::KeyValuePair.357"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  switch i64 %104, label %108 [
    i64 -1, label %105
    i64 0, label %105
  ]

105:                                              ; preds = %101, %101
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.357", %"struct.WTF::KeyValuePair.357"* %102, i64 1
  %107 = icmp eq %"struct.WTF::KeyValuePair.357"* %106, %98
  br i1 %107, label %128, label %101

108:                                              ; preds = %101, %99
  %109 = phi %"struct.WTF::KeyValuePair.357"* [ %94, %99 ], [ %102, %101 ]
  %110 = icmp eq %"struct.WTF::KeyValuePair.357"* %109, %98
  br i1 %110, label %128, label %111

111:                                              ; preds = %108
  %112 = bitcast %"class.WTF::StringView"* %14 to i8*
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %115 = bitcast i8** %114 to %"class.WTF::StringImpl"**
  %116 = bitcast %"class.WTF::StringView"* %14 to i64*
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  %118 = icmp eq i32 %2, 1
  %119 = bitcast %"class.WTF::StringView"* %12 to i8*
  %120 = bitcast %"class.WTF::StringView"* %12 to i64*
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  %123 = bitcast %"class.blink::WebString"* %13 to i8*
  %124 = getelementptr inbounds i8, i8* %29, i64 120
  %125 = bitcast i8* %124 to %"class.blink::FetchHeaderList"**
  br label %133

126:                                              ; preds = %166, %176, %173
  %127 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  br label %128

128:                                              ; preds = %105, %88, %126, %108
  %129 = phi %"class.blink::mojom::blink::FetchAPIRequest"* [ %127, %126 ], [ %89, %108 ], [ %89, %88 ], [ %89, %105 ]
  %130 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %129, i64 0, i32 7, i32 0
  %131 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %130, align 8
  %132 = icmp eq %"class.blink::BlobDataHandle"* %131, null
  br i1 %132, label %208, label %178

133:                                              ; preds = %111, %176
  %134 = phi %"struct.WTF::KeyValuePair.357"* [ %109, %111 ], [ %170, %176 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #9
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.357", %"struct.WTF::KeyValuePair.357"* %134, i64 0, i32 0
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.357", %"struct.WTF::KeyValuePair.357"* %134, i64 0, i32 0, i32 0, i32 0
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %139, label %141

139:                                              ; preds = %133
  store i8* null, i8** %114, align 8
  %140 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %140, i64* %116, align 8
  br label %145

141:                                              ; preds = %133
  store %"class.WTF::StringImpl"* %137, %"class.WTF::StringImpl"** %113, align 8
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 1
  store %"class.WTF::StringImpl"* %144, %"class.WTF::StringImpl"** %115, align 8
  br label %145

145:                                              ; preds = %139, %141
  %146 = phi i32 [ %143, %141 ], [ 0, %139 ]
  store i32 %146, i32* %117, align 8
  %147 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, [8 x i8]* nonnull dereferenceable(8) @.str)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #9
  br i1 %147, label %166, label %148

148:                                              ; preds = %145
  br i1 %118, label %149, label %163

149:                                              ; preds = %148
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #9
  %150 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %150, i64* %120, align 8
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %121, align 8
  store i32 10, i32* %122, align 8
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %149
  %154 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %151, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #9
  br i1 %154, label %166, label %156

155:                                              ; preds = %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #9
  br label %156

156:                                              ; preds = %153, %155
  %157 = call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #9
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %13, %"class.WTF::String"* dereferenceable(8) %135) #9
  %158 = bitcast %"class.blink::Platform"* %157 to i1 (%"class.blink::Platform"*, %"class.blink::WebString"*)***
  %159 = load i1 (%"class.blink::Platform"*, %"class.blink::WebString"*)**, i1 (%"class.blink::Platform"*, %"class.blink::WebString"*)*** %158, align 8
  %160 = getelementptr inbounds i1 (%"class.blink::Platform"*, %"class.blink::WebString"*)*, i1 (%"class.blink::Platform"*, %"class.blink::WebString"*)** %159, i64 90
  %161 = load i1 (%"class.blink::Platform"*, %"class.blink::WebString"*)*, i1 (%"class.blink::Platform"*, %"class.blink::WebString"*)** %160, align 8
  %162 = call zeroext i1 %161(%"class.blink::Platform"* %157, %"class.blink::WebString"* nonnull dereferenceable(8) %13) #9
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #9
  br i1 %162, label %166, label %163

163:                                              ; preds = %156, %148
  %164 = load %"class.blink::FetchHeaderList"*, %"class.blink::FetchHeaderList"** %125, align 8
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair.357", %"struct.WTF::KeyValuePair.357"* %134, i64 0, i32 1
  call void @_ZN5blink15FetchHeaderList6AppendERKN3WTF6StringES4_(%"class.blink::FetchHeaderList"* %164, %"class.WTF::String"* dereferenceable(8) %135, %"class.WTF::String"* dereferenceable(8) %165) #9
  br label %166

166:                                              ; preds = %153, %156, %145, %163
  %167 = getelementptr inbounds %"struct.WTF::KeyValuePair.357", %"struct.WTF::KeyValuePair.357"* %134, i64 1
  %168 = icmp eq %"struct.WTF::KeyValuePair.357"* %167, %98
  br i1 %168, label %126, label %169

169:                                              ; preds = %166, %173
  %170 = phi %"struct.WTF::KeyValuePair.357"* [ %174, %173 ], [ %167, %166 ]
  %171 = bitcast %"struct.WTF::KeyValuePair.357"* %170 to i64*
  %172 = load i64, i64* %171, align 8
  switch i64 %172, label %176 [
    i64 -1, label %173
    i64 0, label %173
  ]

173:                                              ; preds = %169, %169
  %174 = getelementptr inbounds %"struct.WTF::KeyValuePair.357", %"struct.WTF::KeyValuePair.357"* %170, i64 1
  %175 = icmp eq %"struct.WTF::KeyValuePair.357"* %174, %98
  br i1 %175, label %126, label %169

176:                                              ; preds = %169
  %177 = icmp eq %"struct.WTF::KeyValuePair.357"* %170, %98
  br i1 %177, label %126, label %133

178:                                              ; preds = %128
  %179 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #9
  %180 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %181 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 48) #9
  %182 = bitcast i8* %181 to %"class.blink::BlobBytesConsumer"*
  %183 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %180, i64 0, i32 7, i32 0
  %184 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %183, align 8
  %185 = icmp eq %"class.blink::BlobDataHandle"* %184, null
  br i1 %185, label %193, label %186

186:                                              ; preds = %178
  %187 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %184, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = atomicrmw add i32* %187, i32 1 monotonic
  %189 = icmp sgt i32 %188, 0
  br i1 %189, label %193, label %190

190:                                              ; preds = %186
  %191 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0)) #9
  %192 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #9
  br label %193

193:                                              ; preds = %178, %186, %190
  call void @_ZN5blink17BlobBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::BlobBytesConsumer"* %182, %"class.blink::ExecutionContext"* %179, %"class.blink::BlobDataHandle"* %184) #9
  %194 = getelementptr inbounds i8, i8* %181, i64 -4
  %195 = bitcast i8* %194 to i16*
  %196 = load atomic i16, i16* %195 monotonic, align 2
  %197 = or i16 %196, 1
  store atomic i16 %197, i16* %195 release, align 2
  %198 = bitcast i8* %181 to %"class.blink::BytesConsumer"*
  %199 = call %"class.blink::BodyStreamBuffer"* @_ZN5blink16BodyStreamBuffer6CreateEPNS_11ScriptStateEPNS_13BytesConsumerEPNS_11AbortSignalEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ScriptState"* %0, %"class.blink::BytesConsumer"* %198, %"class.blink::AbortSignal"* null, %"class.blink::ScriptCachedMetadataHandler"* null, %"class.blink::BlobDataHandle"* null) #9
  %200 = getelementptr inbounds i8, i8* %29, i64 248
  %201 = ptrtoint %"class.blink::BodyStreamBuffer"* %199 to i64
  %202 = bitcast i8* %200 to i64*
  store atomic i64 %201, i64* %202 monotonic, align 8
  %203 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %566, label %205

205:                                              ; preds = %193
  %206 = bitcast %"class.blink::BodyStreamBuffer"* %199 to i8*
  %207 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %206) #9
  br label %566

208:                                              ; preds = %128
  %209 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %129, i64 0, i32 8, i32 0, i32 0
  %210 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %209, align 8
  %211 = icmp eq %"class.blink::EncodedFormData"* %210, null
  br i1 %211, label %237, label %212

212:                                              ; preds = %208
  %213 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #9
  %214 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %215 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 16) #9
  %216 = bitcast i8* %215 to %"class.blink::FormDataBytesConsumer"*
  %217 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %214, i64 0, i32 8, i32 0, i32 0
  %218 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %217, align 8
  %219 = icmp eq %"class.blink::EncodedFormData"* %218, null
  br i1 %219, label %222, label %220

220:                                              ; preds = %212
  %221 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %218, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %221) #9
  br label %222

222:                                              ; preds = %212, %220
  call void @_ZN5blink21FormDataBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::FormDataBytesConsumer"* %216, %"class.blink::ExecutionContext"* %213, %"class.blink::EncodedFormData"* %218) #9
  %223 = getelementptr inbounds i8, i8* %215, i64 -4
  %224 = bitcast i8* %223 to i16*
  %225 = load atomic i16, i16* %224 monotonic, align 2
  %226 = or i16 %225, 1
  store atomic i16 %226, i16* %224 release, align 2
  %227 = bitcast i8* %215 to %"class.blink::BytesConsumer"*
  %228 = call %"class.blink::BodyStreamBuffer"* @_ZN5blink16BodyStreamBuffer6CreateEPNS_11ScriptStateEPNS_13BytesConsumerEPNS_11AbortSignalEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ScriptState"* %0, %"class.blink::BytesConsumer"* %227, %"class.blink::AbortSignal"* null, %"class.blink::ScriptCachedMetadataHandler"* null, %"class.blink::BlobDataHandle"* null) #9
  %229 = getelementptr inbounds i8, i8* %29, i64 248
  %230 = ptrtoint %"class.blink::BodyStreamBuffer"* %228 to i64
  %231 = bitcast i8* %229 to i64*
  store atomic i64 %230, i64* %231 monotonic, align 8
  %232 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %566, label %234

234:                                              ; preds = %222
  %235 = bitcast %"class.blink::BodyStreamBuffer"* %228 to i8*
  %236 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %235) #9
  br label %566

237:                                              ; preds = %208
  %238 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %129, i64 0, i32 8, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load i32, i32* %238, align 4
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %566, label %241

241:                                              ; preds = %237
  %242 = bitcast %struct.MojoCreateDataPipeOptions* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %242) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %242, i8* align 8 bitcast (%struct.MojoCreateDataPipeOptions* @__const._ZN5blink16FetchRequestData6CreateEPNS_11ScriptStateEN4mojo9StructPtrINS_5mojom5blink15FetchAPIRequestEEENS0_26ForServiceWorkerFetchEventE.options to i8*), i64 16, i1 false)
  %243 = bitcast %"class.mojo::DataPipeProducerHandle"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %243) #9
  %244 = getelementptr inbounds %"class.mojo::DataPipeProducerHandle", %"class.mojo::DataPipeProducerHandle"* %9, i64 0, i32 0, i32 0
  store i32 0, i32* %244, align 4
  %245 = bitcast %"class.mojo::DataPipeConsumerHandle"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %245) #9
  %246 = getelementptr inbounds %"class.mojo::DataPipeConsumerHandle", %"class.mojo::DataPipeConsumerHandle"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %246, align 4
  %247 = call i32 @MojoCreateDataPipe(%struct.MojoCreateDataPipeOptions* nonnull %15, i32* nonnull %244, i32* nonnull %246) #9
  %248 = load i32, i32* %244, align 4
  %249 = load i32, i32* %246, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %245) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %243) #9
  %250 = icmp eq i32 %247, 0
  br i1 %250, label %251, label %529

251:                                              ; preds = %241
  %252 = bitcast %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %252) #9
  store %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* null, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** %16, align 8
  %253 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #9
  %254 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %253, i64 0, i32 1
  %255 = bitcast %"class.blink::MojoBindingContext"* %254 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %256 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %255, align 8
  %257 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %256, i64 6
  %258 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %257, align 8
  %259 = call %"class.base::SingleThreadTaskRunner"* %258(%"class.blink::MojoBindingContext"* %254, i8 zeroext 3) #9
  %260 = bitcast %"class.mojo::ScopedHandleBase.398"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %260) #9
  %261 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 160) #9
  %262 = bitcast i8* %261 to %"class.blink::DataPipeBytesConsumer"*
  %263 = getelementptr inbounds %"class.mojo::ScopedHandleBase.398", %"class.mojo::ScopedHandleBase.398"* %8, i64 0, i32 0, i32 0, i32 0
  store i32 %249, i32* %263, align 4, !alias.scope !3
  call void @_ZN5blink21DataPipeBytesConsumerC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEEN4mojo16ScopedHandleBaseINS5_22DataPipeConsumerHandleEEEPPNS0_18CompletionNotifierE(%"class.blink::DataPipeBytesConsumer"* %262, %"class.base::SingleThreadTaskRunner"* %259, %"class.mojo::ScopedHandleBase.398"* nonnull %8, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** nonnull %16) #9
  %264 = load i32, i32* %263, align 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %268, label %266

266:                                              ; preds = %251
  %267 = call i32 @MojoClose(i32 %264) #9
  br label %268

268:                                              ; preds = %266, %251
  %269 = getelementptr inbounds i8, i8* %261, i64 -4
  %270 = bitcast i8* %269 to i16*
  %271 = load atomic i16, i16* %270 monotonic, align 2
  %272 = or i16 %271, 1
  store atomic i16 %272, i16* %270 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %260) #9
  %273 = bitcast i8* %261 to %"class.blink::BytesConsumer"*
  %274 = call %"class.blink::BodyStreamBuffer"* @_ZN5blink16BodyStreamBuffer6CreateEPNS_11ScriptStateEPNS_13BytesConsumerEPNS_11AbortSignalEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ScriptState"* %0, %"class.blink::BytesConsumer"* %273, %"class.blink::AbortSignal"* null, %"class.blink::ScriptCachedMetadataHandler"* null, %"class.blink::BlobDataHandle"* null) #9
  %275 = getelementptr inbounds %"class.blink::BodyStreamBuffer", %"class.blink::BodyStreamBuffer"* %274, i64 0, i32 3, i32 0, i32 0
  %276 = load %"class.blink::ReadableStream"*, %"class.blink::ReadableStream"** %275, align 8
  %277 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 128) #9
  %278 = bitcast i8* %277 to %"class.blink::BodyStreamBuffer"*
  call void @_ZN5blink16BodyStreamBufferC1EPNS_11ScriptStateEPNS_14ReadableStreamEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::BodyStreamBuffer"* %278, %"class.blink::ScriptState"* %0, %"class.blink::ReadableStream"* %276, %"class.blink::ScriptCachedMetadataHandler"* null, %"class.blink::BlobDataHandle"* null) #9
  %279 = getelementptr inbounds i8, i8* %277, i64 -4
  %280 = bitcast i8* %279 to i16*
  %281 = load atomic i16, i16* %280 monotonic, align 2
  %282 = or i16 %281, 1
  store atomic i16 %282, i16* %280 release, align 2
  %283 = getelementptr inbounds i8, i8* %29, i64 248
  %284 = ptrtoint i8* %277 to i64
  %285 = bitcast i8* %283 to i64*
  store atomic i64 %284, i64* %285 monotonic, align 8
  %286 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %290, label %288

288:                                              ; preds = %268
  %289 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %277) #9
  br label %290

290:                                              ; preds = %268, %288
  %291 = bitcast %"class.mojo::PendingRemote.378"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %291) #9
  %292 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %293 = getelementptr inbounds %"class.mojo::PendingRemote.378", %"class.mojo::PendingRemote.378"* %17, i64 0, i32 0
  %294 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %292, i64 0, i32 8, i32 1, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %293, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %294) #9
  %295 = bitcast %"class.mojo::PendingRemote.378"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %295)
  %296 = call i8* @_Znwm(i64 48) #10
  %297 = bitcast i8* %296 to %"class.mojo::Remote"*
  %298 = getelementptr inbounds %"class.mojo::PendingRemote.378", %"class.mojo::PendingRemote.378"* %7, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %298, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %293) #9
  %299 = bitcast %"class.mojo::PendingRemote.378"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %299) #9
  %300 = getelementptr inbounds %"class.mojo::PendingRemote.378", %"class.mojo::PendingRemote.378"* %6, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %300, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %298) #9
  %301 = bitcast %"class.mojo::PendingRemote.378"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %301) #9
  %302 = bitcast i8* %296 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %302) #9
  %303 = getelementptr inbounds i8, i8* %296, i64 40
  %304 = bitcast i8* %303 to i64*
  store i64 0, i64* %304, align 8
  %305 = getelementptr inbounds %"class.mojo::PendingRemote.378", %"class.mojo::PendingRemote.378"* %5, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %305, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %300) #9
  call void @_ZN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"* nonnull %297, %"class.mojo::PendingRemote.378"* nonnull %5, %"class.base::SequencedTaskRunner"* null) #9
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %305) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %301) #9
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %300) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %299) #9
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %298) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %295)
  %306 = ptrtoint i8* %296 to i64
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %293) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %291) #9
  %307 = bitcast %"class.blink::Persistent.595"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %307) #9
  %308 = load %"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** %16, align 8
  %309 = getelementptr inbounds %"class.blink::Persistent.595", %"class.blink::Persistent.595"* %19, i64 0, i32 0
  %310 = getelementptr inbounds %"class.blink::Persistent.595", %"class.blink::Persistent.595"* %19, i64 0, i32 0, i32 0
  store %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %308, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** %310, align 8, !alias.scope !6
  %311 = getelementptr inbounds %"class.blink::Persistent.595", %"class.blink::Persistent.595"* %19, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %311, align 8, !alias.scope !6
  %312 = ptrtoint %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %308 to i64
  switch i64 %312, label %313 [
    i64 0, label %339
    i64 -1, label %339
  ]

313:                                              ; preds = %290
  %314 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !6
  %315 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %314, i64 0, i32 1
  %316 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %315) #9, !noalias !6
  %317 = icmp eq i8* %316, null
  br i1 %317, label %318, label %320, !prof !2

318:                                              ; preds = %313
  %319 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %315, i8* %319) #9
  br label %320

320:                                              ; preds = %318, %313
  %321 = phi i8* [ %319, %318 ], [ %316, %313 ]
  %322 = bitcast i8* %321 to %"class.blink::ThreadState"**
  %323 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %322, align 8, !noalias !6
  %324 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %323, i64 0, i32 3, i32 0, i32 0, i32 0
  %325 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %324, align 8, !noalias !6
  %326 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %325, i64 0, i32 0, i32 0
  %327 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %326, align 8, !noalias !6
  %328 = icmp eq %"class.blink::PersistentNode"* %327, null
  br i1 %328, label %329, label %332, !prof !2

329:                                              ; preds = %320
  %330 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %325, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %330) #9
  %331 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %326, align 8
  br label %332

332:                                              ; preds = %329, %320
  %333 = phi %"class.blink::PersistentNode"* [ %331, %329 ], [ %327, %320 ]
  %334 = bitcast %"class.blink::PersistentNode"* %333 to i64*
  %335 = load i64, i64* %334, align 8, !noalias !6
  %336 = bitcast %"class.blink::PersistentRegion"* %325 to i64*
  store i64 %335, i64* %336, align 8, !noalias !6
  %337 = bitcast %"class.blink::PersistentNode"* %333 to %"class.blink::PersistentBase.596"**
  store %"class.blink::PersistentBase.596"* %309, %"class.blink::PersistentBase.596"** %337, align 8, !noalias !6
  %338 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %333, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21DataPipeBytesConsumer18CompletionNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %338, align 8
  store %"class.blink::PersistentNode"* %333, %"class.blink::PersistentNode"** %311, align 8, !alias.scope !6
  br label %339

339:                                              ; preds = %290, %290, %332
  %340 = call i8* @_Znwm(i64 56) #10, !noalias !9
  %341 = bitcast i8* %340 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIPFvN5blink10PersistentINS2_21DataPipeBytesConsumer18CompletionNotifierEEEEJS6_EEC2IRS7_JS6_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %341, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvN5blink10PersistentINS3_21DataPipeBytesConsumer18CompletionNotifierEEEEJS7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.blink::Persistent.595"*)* nonnull @_ZN5blink12_GLOBAL__N_111SignalErrorENS_10PersistentINS_21DataPipeBytesConsumer18CompletionNotifierEEE, %"class.blink::Persistent.595"* nonnull dereferenceable(16) %19) #9, !noalias !9
  %342 = bitcast %"class.base::OnceCallback"* %18 to i8**
  store i8* %340, i8** %342, align 8, !alias.scope !9
  %343 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %343)
  %344 = getelementptr inbounds i8, i8* %296, i64 8
  %345 = bitcast i8* %344 to %"class.mojo::InterfaceEndpointClient"**
  %346 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %345, align 8
  %347 = icmp eq %"class.mojo::InterfaceEndpointClient"* %346, null
  %348 = ptrtoint i8* %340 to i64
  br i1 %347, label %353, label %349

349:                                              ; preds = %339
  %350 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %346, i64 0, i32 19
  %351 = load i8, i8* %350, align 8, !range !16
  %352 = icmp eq i8 %351, 0
  br i1 %352, label %353, label %358

353:                                              ; preds = %349, %339
  %354 = bitcast i8* %296 to %"class.mojo::internal::InterfacePtrState"*
  %355 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %18, i64 0, i32 0, i32 0, i32 0
  %356 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %348, i64* %356, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %355, align 8
  call void @_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink21ChunkedDataPipeGetterEE28set_connection_error_handlerEN4base12OnceCallbackIFvvEEE(%"class.mojo::internal::InterfacePtrState"* nonnull %354, %"class.base::OnceCallback"* nonnull %4) #9
  %357 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %357) #9
  br label %358

358:                                              ; preds = %349, %353
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %343)
  %359 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %18, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %359) #9
  %360 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %311, align 8
  %361 = icmp eq %"class.blink::PersistentNode"* %360, null
  br i1 %361, label %381, label %362

362:                                              ; preds = %358
  %363 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %364 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %363, i64 0, i32 1
  %365 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %364) #9
  %366 = icmp eq i8* %365, null
  br i1 %366, label %367, label %369, !prof !2

367:                                              ; preds = %362
  %368 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %364, i8* %368) #9
  br label %369

369:                                              ; preds = %367, %362
  %370 = phi i8* [ %368, %367 ], [ %365, %362 ]
  %371 = bitcast i8* %370 to %"class.blink::ThreadState"**
  %372 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %371, align 8
  %373 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %372, i64 0, i32 3, i32 0, i32 0, i32 0
  %374 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %373, align 8
  %375 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %311, align 8
  %376 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %374, i64 0, i32 0, i32 0
  %377 = bitcast %"class.blink::PersistentRegion"* %374 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = bitcast %"class.blink::PersistentNode"* %375 to i64*
  store i64 %378, i64* %379, align 8
  %380 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %375, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %380, align 8
  store %"class.blink::PersistentNode"* %375, %"class.blink::PersistentNode"** %376, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %311, align 8
  br label %381

381:                                              ; preds = %358, %369
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %307) #9
  %382 = bitcast i8* %303 to %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"**
  %383 = load %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %382, align 8
  %384 = icmp eq %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %383, null
  br i1 %384, label %385, label %403

385:                                              ; preds = %381
  %386 = call i8* @_Znwm(i64 8) #10
  %387 = bitcast i8* %386 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7network5mojom5blink38ChunkedDataPipeGetterResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %387, align 8
  %388 = bitcast i8* %386 to %"class.mojo::MessageReceiver"*
  %389 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %302, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %388, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7network5mojom5blink21ChunkedDataPipeGetter5Name_E, i64 0, i64 0)) #9
  br i1 %389, label %390, label %403

390:                                              ; preds = %385
  %391 = bitcast i8* %344 to %"class.mojo::MessageReceiverWithResponder"**
  %392 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %391, align 8
  %393 = call i8* @_Znwm(i64 16) #10
  %394 = bitcast i8* %393 to %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*
  call void @_ZN7network5mojom5blink26ChunkedDataPipeGetterProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* nonnull %394, %"class.mojo::MessageReceiverWithResponder"* %392) #9
  %395 = ptrtoint i8* %393 to i64
  %396 = load %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %382, align 8
  store i64 %395, i64* %304, align 8
  %397 = icmp eq %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %396, null
  br i1 %397, label %403, label %398

398:                                              ; preds = %390
  %399 = bitcast %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %396 to void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)***
  %400 = load void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)**, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*** %399, align 8
  %401 = getelementptr inbounds void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)** %400, i64 1
  %402 = load void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)** %401, align 8
  call void %402(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* nonnull %396) #9
  br label %403

403:                                              ; preds = %381, %385, %390, %398
  %404 = load %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %382, align 8
  %405 = bitcast %"class.blink::Persistent.595"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %405) #9
  %406 = load %"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** %16, align 8
  %407 = getelementptr inbounds %"class.blink::Persistent.595", %"class.blink::Persistent.595"* %21, i64 0, i32 0
  %408 = getelementptr inbounds %"class.blink::Persistent.595", %"class.blink::Persistent.595"* %21, i64 0, i32 0, i32 0
  store %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %406, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** %408, align 8, !alias.scope !17
  %409 = getelementptr inbounds %"class.blink::Persistent.595", %"class.blink::Persistent.595"* %21, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %409, align 8, !alias.scope !17
  %410 = ptrtoint %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %406 to i64
  switch i64 %410, label %411 [
    i64 0, label %437
    i64 -1, label %437
  ]

411:                                              ; preds = %403
  %412 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !17
  %413 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %412, i64 0, i32 1
  %414 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %413) #9, !noalias !17
  %415 = icmp eq i8* %414, null
  br i1 %415, label %416, label %418, !prof !2

416:                                              ; preds = %411
  %417 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %413, i8* %417) #9
  br label %418

418:                                              ; preds = %416, %411
  %419 = phi i8* [ %417, %416 ], [ %414, %411 ]
  %420 = bitcast i8* %419 to %"class.blink::ThreadState"**
  %421 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %420, align 8, !noalias !17
  %422 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %421, i64 0, i32 3, i32 0, i32 0, i32 0
  %423 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %422, align 8, !noalias !17
  %424 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %423, i64 0, i32 0, i32 0
  %425 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %424, align 8, !noalias !17
  %426 = icmp eq %"class.blink::PersistentNode"* %425, null
  br i1 %426, label %427, label %430, !prof !2

427:                                              ; preds = %418
  %428 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %423, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %428) #9
  %429 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %424, align 8
  br label %430

430:                                              ; preds = %427, %418
  %431 = phi %"class.blink::PersistentNode"* [ %429, %427 ], [ %425, %418 ]
  %432 = bitcast %"class.blink::PersistentNode"* %431 to i64*
  %433 = load i64, i64* %432, align 8, !noalias !17
  %434 = bitcast %"class.blink::PersistentRegion"* %423 to i64*
  store i64 %433, i64* %434, align 8, !noalias !17
  %435 = bitcast %"class.blink::PersistentNode"* %431 to %"class.blink::PersistentBase.596"**
  store %"class.blink::PersistentBase.596"* %407, %"class.blink::PersistentBase.596"** %435, align 8, !noalias !17
  %436 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %431, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21DataPipeBytesConsumer18CompletionNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %436, align 8
  store %"class.blink::PersistentNode"* %431, %"class.blink::PersistentNode"** %409, align 8, !alias.scope !17
  br label %437

437:                                              ; preds = %403, %403, %430
  %438 = call i8* @_Znwm(i64 64) #10, !noalias !20
  %439 = bitcast i8* %438 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %439, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, i64)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS3_14default_deleteISB_EEEEN5blink10PersistentINSF_21DataPipeBytesConsumer18CompletionNotifierEEEimEJSE_SJ_EEEFvimEE7RunOnceEPNS0_13BindStateBaseEim to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS2_14default_deleteISA_EEEEN5blink10PersistentINSE_21DataPipeBytesConsumer18CompletionNotifierEEEimEJSD_SI_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !20
  %440 = getelementptr inbounds i8, i8* %438, i64 32
  %441 = bitcast i8* %440 to void (%"class.mojo::Remote"*, %"class.blink::Persistent.595"*, i32, i64)**
  store void (%"class.mojo::Remote"*, %"class.blink::Persistent.595"*, i32, i64)* @_ZN5blink12_GLOBAL__N_110SignalSizeENSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS1_14default_deleteIS9_EEEENS_10PersistentINS_21DataPipeBytesConsumer18CompletionNotifierEEEim, void (%"class.mojo::Remote"*, %"class.blink::Persistent.595"*, i32, i64)** %441, align 8, !noalias !20
  %442 = getelementptr inbounds i8, i8* %438, i64 40
  %443 = bitcast i8* %442 to i64*
  store i64 %306, i64* %443, align 8
  %444 = getelementptr inbounds i8, i8* %438, i64 48
  %445 = bitcast %"class.blink::Persistent.595"* %21 to i64*
  %446 = load i64, i64* %445, align 8
  %447 = bitcast i8* %444 to i64*
  store i64 %446, i64* %447, align 8
  %448 = getelementptr inbounds i8, i8* %438, i64 56
  %449 = bitcast i8* %448 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %449, align 8
  switch i64 %446, label %450 [
    i64 0, label %476
    i64 -1, label %476
  ]

450:                                              ; preds = %437
  %451 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %452 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %451, i64 0, i32 1
  %453 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %452) #9
  %454 = icmp eq i8* %453, null
  br i1 %454, label %455, label %457, !prof !2

455:                                              ; preds = %450
  %456 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %452, i8* %456) #9
  br label %457

457:                                              ; preds = %455, %450
  %458 = phi i8* [ %456, %455 ], [ %453, %450 ]
  %459 = bitcast i8* %458 to %"class.blink::ThreadState"**
  %460 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %459, align 8
  %461 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %460, i64 0, i32 3, i32 0, i32 0, i32 0
  %462 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %461, align 8
  %463 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %462, i64 0, i32 0, i32 0
  %464 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %463, align 8
  %465 = icmp eq %"class.blink::PersistentNode"* %464, null
  br i1 %465, label %466, label %469, !prof !2

466:                                              ; preds = %457
  %467 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %462, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %467) #9
  %468 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %463, align 8
  br label %469

469:                                              ; preds = %466, %457
  %470 = phi %"class.blink::PersistentNode"* [ %468, %466 ], [ %464, %457 ]
  %471 = bitcast %"class.blink::PersistentNode"* %470 to i64*
  %472 = load i64, i64* %471, align 8
  %473 = bitcast %"class.blink::PersistentRegion"* %462 to i64*
  store i64 %472, i64* %473, align 8
  %474 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %470, i64 0, i32 0
  store i8* %444, i8** %474, align 8
  %475 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %470, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21DataPipeBytesConsumer18CompletionNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %475, align 8
  store %"class.blink::PersistentNode"* %470, %"class.blink::PersistentNode"** %449, align 8
  br label %476

476:                                              ; preds = %437, %437, %469
  %477 = bitcast %"class.base::OnceCallback.597"* %20 to i8**
  store i8* %438, i8** %477, align 8, !alias.scope !20
  call void @_ZN7network5mojom5blink26ChunkedDataPipeGetterProxy7GetSizeEN4base12OnceCallbackIFvimEEE(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %404, %"class.base::OnceCallback.597"* nonnull %20) #9
  %478 = getelementptr inbounds %"class.base::OnceCallback.597", %"class.base::OnceCallback.597"* %20, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %478) #9
  %479 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %409, align 8
  %480 = icmp eq %"class.blink::PersistentNode"* %479, null
  br i1 %480, label %500, label %481

481:                                              ; preds = %476
  %482 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %483 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %482, i64 0, i32 1
  %484 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %483) #9
  %485 = icmp eq i8* %484, null
  br i1 %485, label %486, label %488, !prof !2

486:                                              ; preds = %481
  %487 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %483, i8* %487) #9
  br label %488

488:                                              ; preds = %486, %481
  %489 = phi i8* [ %487, %486 ], [ %484, %481 ]
  %490 = bitcast i8* %489 to %"class.blink::ThreadState"**
  %491 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %490, align 8
  %492 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %491, i64 0, i32 3, i32 0, i32 0, i32 0
  %493 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %492, align 8
  %494 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %409, align 8
  %495 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %493, i64 0, i32 0, i32 0
  %496 = bitcast %"class.blink::PersistentRegion"* %493 to i64*
  %497 = load i64, i64* %496, align 8
  %498 = bitcast %"class.blink::PersistentNode"* %494 to i64*
  store i64 %497, i64* %498, align 8
  %499 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %494, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %499, align 8
  store %"class.blink::PersistentNode"* %494, %"class.blink::PersistentNode"** %495, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %409, align 8
  br label %500

500:                                              ; preds = %476, %488
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %405) #9
  %501 = load %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %382, align 8
  %502 = icmp eq %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %501, null
  br i1 %502, label %503, label %521

503:                                              ; preds = %500
  %504 = call i8* @_Znwm(i64 8) #10
  %505 = bitcast i8* %504 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7network5mojom5blink38ChunkedDataPipeGetterResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %505, align 8
  %506 = bitcast i8* %504 to %"class.mojo::MessageReceiver"*
  %507 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %302, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %506, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7network5mojom5blink21ChunkedDataPipeGetter5Name_E, i64 0, i64 0)) #9
  br i1 %507, label %508, label %521

508:                                              ; preds = %503
  %509 = bitcast i8* %344 to %"class.mojo::MessageReceiverWithResponder"**
  %510 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %509, align 8
  %511 = call i8* @_Znwm(i64 16) #10
  %512 = bitcast i8* %511 to %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*
  call void @_ZN7network5mojom5blink26ChunkedDataPipeGetterProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* nonnull %512, %"class.mojo::MessageReceiverWithResponder"* %510) #9
  %513 = ptrtoint i8* %511 to i64
  %514 = load %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %382, align 8
  store i64 %513, i64* %304, align 8
  %515 = icmp eq %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %514, null
  br i1 %515, label %521, label %516

516:                                              ; preds = %508
  %517 = bitcast %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %514 to void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)***
  %518 = load void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)**, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*** %517, align 8
  %519 = getelementptr inbounds void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)** %518, i64 1
  %520 = load void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)** %519, align 8
  call void %520(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* nonnull %514) #9
  br label %521

521:                                              ; preds = %500, %503, %508, %516
  %522 = load %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %382, align 8
  %523 = getelementptr inbounds %"class.mojo::ScopedHandleBase.399", %"class.mojo::ScopedHandleBase.399"* %22, i64 0, i32 0, i32 0, i32 0
  store i32 %248, i32* %523, align 4, !alias.scope !27
  call void @_ZN7network5mojom5blink26ChunkedDataPipeGetterProxy12StartReadingEN4mojo16ScopedHandleBaseINS3_22DataPipeProducerHandleEEE(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %522, %"class.mojo::ScopedHandleBase.399"* nonnull %22) #9
  %524 = load i32, i32* %523, align 4
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %528, label %526

526:                                              ; preds = %521
  %527 = call i32 @MojoClose(i32 %524) #9
  br label %528

528:                                              ; preds = %526, %521
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %242) #9
  br label %566

529:                                              ; preds = %241
  %530 = bitcast %"class.blink::BytesConsumer::Error"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %530) #9
  %531 = getelementptr inbounds %"class.blink::BytesConsumer::Error", %"class.blink::BytesConsumer::Error"* %23, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %531, align 8
  %532 = call %"class.blink::BytesConsumer"* @_ZN5blink13BytesConsumer13CreateErroredERKNS0_5ErrorE(%"class.blink::BytesConsumer::Error"* nonnull dereferenceable(8) %23) #9
  %533 = call %"class.blink::BodyStreamBuffer"* @_ZN5blink16BodyStreamBuffer6CreateEPNS_11ScriptStateEPNS_13BytesConsumerEPNS_11AbortSignalEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ScriptState"* %0, %"class.blink::BytesConsumer"* %532, %"class.blink::AbortSignal"* null, %"class.blink::ScriptCachedMetadataHandler"* null, %"class.blink::BlobDataHandle"* null) #9
  %534 = getelementptr inbounds i8, i8* %29, i64 248
  %535 = ptrtoint %"class.blink::BodyStreamBuffer"* %533 to i64
  %536 = bitcast i8* %534 to i64*
  store atomic i64 %535, i64* %536 monotonic, align 8
  %537 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %542, label %539

539:                                              ; preds = %529
  %540 = bitcast %"class.blink::BodyStreamBuffer"* %533 to i8*
  %541 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %540) #9
  br label %542

542:                                              ; preds = %529, %539
  %543 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %531, align 8
  %544 = icmp eq %"class.WTF::StringImpl"* %543, null
  br i1 %544, label %558, label %545

545:                                              ; preds = %542
  %546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %543, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %547 = load atomic i32, i32* %546 monotonic, align 4
  %548 = and i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %543, i64 0, i32 0
  %551 = load i32, i32* %550, align 4
  br i1 %549, label %552, label %554

552:                                              ; preds = %545
  %553 = add i32 %551, -1
  store i32 %553, i32* %550, align 4
  br label %554

554:                                              ; preds = %552, %545
  %555 = phi i32 [ %553, %552 ], [ %551, %545 ]
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %558

557:                                              ; preds = %554
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %543) #9
  br label %558

558:                                              ; preds = %557, %554, %542
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %530) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %242) #9
  %559 = icmp eq i32 %248, 0
  br i1 %559, label %562, label %560

560:                                              ; preds = %558
  %561 = call i32 @MojoClose(i32 %248) #9
  br label %562

562:                                              ; preds = %558, %560
  %563 = icmp eq i32 %249, 0
  br i1 %563, label %566, label %564

564:                                              ; preds = %562
  %565 = call i32 @MojoClose(i32 %249) #9
  br label %566

566:                                              ; preds = %237, %564, %562, %528, %234, %222, %205, %193
  %567 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %568 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %567, i64 0, i32 2
  %569 = load i32, i32* %568, align 8
  %570 = getelementptr inbounds i8, i8* %29, i64 128
  %571 = bitcast i8* %570 to i32*
  store i32 %569, i32* %571, align 8
  %572 = getelementptr inbounds i8, i8* %29, i64 152
  %573 = bitcast i8* %572 to i64*
  %574 = bitcast i8* %572 to %"class.WTF::StringImpl"**
  %575 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %574, align 8
  store i64 0, i64* %573, align 8
  %576 = icmp eq %"class.WTF::StringImpl"* %575, null
  br i1 %576, label %590, label %577

577:                                              ; preds = %566
  %578 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %575, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %579 = load atomic i32, i32* %578 monotonic, align 4
  %580 = and i32 %579, 2
  %581 = icmp eq i32 %580, 0
  %582 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %575, i64 0, i32 0
  %583 = load i32, i32* %582, align 4
  br i1 %581, label %584, label %586

584:                                              ; preds = %577
  %585 = add i32 %583, -1
  store i32 %585, i32* %582, align 4
  br label %586

586:                                              ; preds = %584, %577
  %587 = phi i32 [ %585, %584 ], [ %583, %577 ]
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %589, label %590

589:                                              ; preds = %586
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %575) #9
  br label %590

590:                                              ; preds = %566, %586, %589
  %591 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %592 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %591, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %593 = load %"class.blink::mojom::blink::Referrer"*, %"class.blink::mojom::blink::Referrer"** %592, align 8
  %594 = icmp eq %"class.blink::mojom::blink::Referrer"* %593, null
  br i1 %594, label %693, label %595

595:                                              ; preds = %590
  %596 = getelementptr inbounds %"class.blink::mojom::blink::Referrer", %"class.blink::mojom::blink::Referrer"* %593, i64 0, i32 0
  %597 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %596) #9
  br i1 %597, label %684, label %598

598:                                              ; preds = %595
  %599 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %600 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %599, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %601 = load %"class.blink::mojom::blink::Referrer"*, %"class.blink::mojom::blink::Referrer"** %600, align 8
  %602 = getelementptr inbounds %"class.blink::mojom::blink::Referrer", %"class.blink::mojom::blink::Referrer"* %601, i64 0, i32 0, i32 4, i32 0, i32 0
  %603 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %602, align 8
  %604 = icmp eq %"class.WTF::StringImpl"* %603, null
  br i1 %604, label %651, label %605

605:                                              ; preds = %598
  %606 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %603, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %607 = load atomic i32, i32* %606 acquire, align 4
  %608 = and i32 %607, 4
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %628, label %610

610:                                              ; preds = %605
  %611 = load atomic i32, i32* %606 monotonic, align 4
  %612 = and i32 %611, 2
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %614, label %626

614:                                              ; preds = %610
  %615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %603, i64 0, i32 0
  %616 = load i32, i32* %615, align 4
  %617 = zext i32 %616 to i33
  %618 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %617, i33 1) #9
  %619 = extractvalue { i33, i1 } %618, 1
  %620 = extractvalue { i33, i1 } %618, 0
  %621 = icmp slt i33 %620, 0
  %622 = or i1 %619, %621
  br i1 %622, label %623, label %624, !prof !2

623:                                              ; preds = %614
  call void @llvm.trap() #9
  unreachable

624:                                              ; preds = %614
  %625 = trunc i33 %620 to i32
  store i32 %625, i32* %615, align 4
  br label %626

626:                                              ; preds = %610, %624
  %627 = ptrtoint %"class.WTF::StringImpl"* %603 to i64
  br label %632

628:                                              ; preds = %605
  %629 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %603) #9
  %630 = ptrtoint %"class.WTF::StringImpl"* %629 to i64
  %631 = icmp eq %"class.WTF::StringImpl"* %629, null
  br i1 %631, label %651, label %632

632:                                              ; preds = %626, %628
  %633 = phi i64 [ %627, %626 ], [ %630, %628 ]
  %634 = phi %"class.WTF::StringImpl"* [ %603, %626 ], [ %629, %628 ]
  %635 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %634, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load atomic i32, i32* %635 monotonic, align 4
  %637 = and i32 %636, 2
  %638 = icmp eq i32 %637, 0
  br i1 %638, label %639, label %651

639:                                              ; preds = %632
  %640 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %634, i64 0, i32 0
  %641 = load i32, i32* %640, align 4
  %642 = zext i32 %641 to i33
  %643 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %642, i33 1) #9
  %644 = extractvalue { i33, i1 } %643, 1
  %645 = extractvalue { i33, i1 } %643, 0
  %646 = icmp slt i33 %645, 0
  %647 = or i1 %644, %646
  br i1 %647, label %648, label %649, !prof !2

648:                                              ; preds = %639
  call void @llvm.trap() #9
  unreachable

649:                                              ; preds = %639
  %650 = trunc i33 %645 to i32
  store i32 %650, i32* %640, align 4
  br label %651

651:                                              ; preds = %598, %649, %632, %628
  %652 = phi i1 [ false, %649 ], [ false, %632 ], [ true, %628 ], [ true, %598 ]
  %653 = phi i64 [ %633, %649 ], [ %633, %632 ], [ %630, %628 ], [ 0, %598 ]
  %654 = phi %"class.WTF::StringImpl"* [ %634, %649 ], [ %634, %632 ], [ null, %628 ], [ null, %598 ]
  %655 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %574, align 8
  store i64 %653, i64* %573, align 8
  %656 = icmp eq %"class.WTF::StringImpl"* %655, null
  br i1 %656, label %670, label %657

657:                                              ; preds = %651
  %658 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %655, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %659 = load atomic i32, i32* %658 monotonic, align 4
  %660 = and i32 %659, 2
  %661 = icmp eq i32 %660, 0
  %662 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %655, i64 0, i32 0
  %663 = load i32, i32* %662, align 4
  br i1 %661, label %664, label %666

664:                                              ; preds = %657
  %665 = add i32 %663, -1
  store i32 %665, i32* %662, align 4
  br label %666

666:                                              ; preds = %664, %657
  %667 = phi i32 [ %665, %664 ], [ %663, %657 ]
  %668 = icmp eq i32 %667, 0
  br i1 %668, label %669, label %670

669:                                              ; preds = %666
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %655) #9
  br label %670

670:                                              ; preds = %651, %666, %669
  br i1 %652, label %684, label %671

671:                                              ; preds = %670
  %672 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %654, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %673 = load atomic i32, i32* %672 monotonic, align 4
  %674 = and i32 %673, 2
  %675 = icmp eq i32 %674, 0
  %676 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %654, i64 0, i32 0
  %677 = load i32, i32* %676, align 4
  br i1 %675, label %678, label %680

678:                                              ; preds = %671
  %679 = add i32 %677, -1
  store i32 %679, i32* %676, align 4
  br label %680

680:                                              ; preds = %678, %671
  %681 = phi i32 [ %679, %678 ], [ %677, %671 ]
  %682 = icmp eq i32 %681, 0
  br i1 %682, label %683, label %684

683:                                              ; preds = %680
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %654) #9
  br label %684

684:                                              ; preds = %683, %680, %670, %595
  %685 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %686 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %685, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %687 = load %"class.blink::mojom::blink::Referrer"*, %"class.blink::mojom::blink::Referrer"** %686, align 8
  %688 = getelementptr inbounds %"class.blink::mojom::blink::Referrer", %"class.blink::mojom::blink::Referrer"* %687, i64 0, i32 1
  %689 = load i32, i32* %688, align 8
  %690 = getelementptr inbounds i8, i8* %29, i64 160
  %691 = bitcast i8* %690 to i32*
  store i32 %689, i32* %691, align 8
  %692 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  br label %693

693:                                              ; preds = %590, %684
  %694 = phi %"class.blink::mojom::blink::FetchAPIRequest"* [ %591, %590 ], [ %692, %684 ]
  %695 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %694, i64 0, i32 0
  %696 = load i32, i32* %695, align 8
  %697 = getelementptr inbounds i8, i8* %29, i64 164
  %698 = bitcast i8* %697 to i32*
  store i32 %696, i32* %698, align 4
  %699 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %700 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %699, i64 0, i32 10
  %701 = load i32, i32* %700, align 8
  %702 = getelementptr inbounds i8, i8* %29, i64 168
  %703 = bitcast i8* %702 to i32*
  store i32 %701, i32* %703, align 8
  %704 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %705 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %704, i64 0, i32 11
  %706 = load i32, i32* %705, align 4
  %707 = getelementptr inbounds i8, i8* %29, i64 172
  %708 = bitcast i8* %707 to i32*
  store i32 %706, i32* %708, align 4
  %709 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %710 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %709, i64 0, i32 12
  %711 = load i32, i32* %710, align 8
  %712 = getelementptr inbounds i8, i8* %29, i64 176
  %713 = bitcast i8* %712 to i32*
  store i32 %711, i32* %713, align 8
  %714 = getelementptr inbounds i8, i8* %29, i64 120
  %715 = bitcast i8* %714 to %"class.blink::FetchHeaderList"**
  %716 = load %"class.blink::FetchHeaderList"*, %"class.blink::FetchHeaderList"** %715, align 8
  %717 = call %"class.WTF::StringImpl"* @_ZNK5blink15FetchHeaderList15ExtractMIMETypeEv(%"class.blink::FetchHeaderList"* %716) #9
  %718 = getelementptr inbounds i8, i8* %29, i64 256
  %719 = icmp eq %"class.WTF::StringImpl"* %717, null
  br i1 %719, label %737, label %720

720:                                              ; preds = %693
  %721 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %717, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %722 = load atomic i32, i32* %721 monotonic, align 4
  %723 = and i32 %722, 2
  %724 = icmp eq i32 %723, 0
  br i1 %724, label %725, label %737

725:                                              ; preds = %720
  %726 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %717, i64 0, i32 0
  %727 = load i32, i32* %726, align 4
  %728 = zext i32 %727 to i33
  %729 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %728, i33 1) #9
  %730 = extractvalue { i33, i1 } %729, 1
  %731 = extractvalue { i33, i1 } %729, 0
  %732 = icmp slt i33 %731, 0
  %733 = or i1 %730, %732
  br i1 %733, label %734, label %735, !prof !2

734:                                              ; preds = %725
  call void @llvm.trap() #9
  unreachable

735:                                              ; preds = %725
  %736 = trunc i33 %731 to i32
  store i32 %736, i32* %726, align 4
  br label %737

737:                                              ; preds = %735, %720, %693
  %738 = ptrtoint %"class.WTF::StringImpl"* %717 to i64
  %739 = bitcast i8* %718 to i64*
  %740 = bitcast i8* %718 to %"class.WTF::StringImpl"**
  %741 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %740, align 8
  store i64 %738, i64* %739, align 8
  %742 = icmp eq %"class.WTF::StringImpl"* %741, null
  br i1 %742, label %756, label %743

743:                                              ; preds = %737
  %744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %741, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %745 = load atomic i32, i32* %744 monotonic, align 4
  %746 = and i32 %745, 2
  %747 = icmp eq i32 %746, 0
  %748 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %741, i64 0, i32 0
  %749 = load i32, i32* %748, align 4
  br i1 %747, label %750, label %752

750:                                              ; preds = %743
  %751 = add i32 %749, -1
  store i32 %751, i32* %748, align 4
  br label %752

752:                                              ; preds = %750, %743
  %753 = phi i32 [ %751, %750 ], [ %749, %743 ]
  %754 = icmp eq i32 %753, 0
  br i1 %754, label %755, label %756

755:                                              ; preds = %752
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %741) #9
  br label %756

756:                                              ; preds = %737, %752, %755
  br i1 %719, label %770, label %757

757:                                              ; preds = %756
  %758 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %717, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %759 = load atomic i32, i32* %758 monotonic, align 4
  %760 = and i32 %759, 2
  %761 = icmp eq i32 %760, 0
  %762 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %717, i64 0, i32 0
  %763 = load i32, i32* %762, align 4
  br i1 %761, label %764, label %766

764:                                              ; preds = %757
  %765 = add i32 %763, -1
  store i32 %765, i32* %762, align 4
  br label %766

766:                                              ; preds = %764, %757
  %767 = phi i32 [ %765, %764 ], [ %763, %757 ]
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %769, label %770

769:                                              ; preds = %766
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %717) #9
  br label %770

770:                                              ; preds = %756, %766, %769
  %771 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %772 = getelementptr inbounds i8, i8* %29, i64 264
  %773 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %771, i64 0, i32 13, i32 0, i32 0
  %774 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %773, align 8
  %775 = icmp eq %"class.WTF::StringImpl"* %774, null
  br i1 %775, label %793, label %776

776:                                              ; preds = %770
  %777 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %774, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %778 = load atomic i32, i32* %777 monotonic, align 4
  %779 = and i32 %778, 2
  %780 = icmp eq i32 %779, 0
  br i1 %780, label %781, label %793

781:                                              ; preds = %776
  %782 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %774, i64 0, i32 0
  %783 = load i32, i32* %782, align 4
  %784 = zext i32 %783 to i33
  %785 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %784, i33 1) #9
  %786 = extractvalue { i33, i1 } %785, 1
  %787 = extractvalue { i33, i1 } %785, 0
  %788 = icmp slt i33 %787, 0
  %789 = or i1 %786, %788
  br i1 %789, label %790, label %791, !prof !2

790:                                              ; preds = %781
  call void @llvm.trap() #9
  unreachable

791:                                              ; preds = %781
  %792 = trunc i33 %787 to i32
  store i32 %792, i32* %782, align 4
  br label %793

793:                                              ; preds = %791, %776, %770
  %794 = ptrtoint %"class.WTF::StringImpl"* %774 to i64
  %795 = bitcast i8* %772 to i64*
  %796 = bitcast i8* %772 to %"class.WTF::StringImpl"**
  %797 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %796, align 8
  store i64 %794, i64* %795, align 8
  %798 = icmp eq %"class.WTF::StringImpl"* %797, null
  br i1 %798, label %812, label %799

799:                                              ; preds = %793
  %800 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %797, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %801 = load atomic i32, i32* %800 monotonic, align 4
  %802 = and i32 %801, 2
  %803 = icmp eq i32 %802, 0
  %804 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %797, i64 0, i32 0
  %805 = load i32, i32* %804, align 4
  br i1 %803, label %806, label %808

806:                                              ; preds = %799
  %807 = add i32 %805, -1
  store i32 %807, i32* %804, align 4
  br label %808

808:                                              ; preds = %806, %799
  %809 = phi i32 [ %807, %806 ], [ %805, %799 ]
  %810 = icmp eq i32 %809, 0
  br i1 %810, label %811, label %812

811:                                              ; preds = %808
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %797) #9
  br label %812

812:                                              ; preds = %793, %808, %811
  %813 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %814 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %813, i64 0, i32 16
  %815 = load i8, i8* %814, align 8, !range !16
  %816 = getelementptr inbounds i8, i8* %29, i64 276
  store i8 %815, i8* %816, align 4
  %817 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %818 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %817, i64 0, i32 18
  %819 = load i8, i8* %818, align 2, !range !16
  %820 = getelementptr inbounds i8, i8* %29, i64 277
  store i8 %819, i8* %820, align 1
  %821 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %822 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %821, i64 0, i32 14
  %823 = load i32, i32* %822, align 8
  %824 = add i32 %823, -1
  %825 = icmp ult i32 %824, 5
  %826 = select i1 %825, i32 %824, i32 -1
  %827 = getelementptr inbounds i8, i8* %29, i64 272
  %828 = bitcast i8* %827 to i32*
  store i32 %826, i32* %828, align 8
  %829 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %35, align 8
  %830 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %829, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %831 = load i8, i8* %830, align 8, !range !16
  %832 = icmp eq i8 %831, 0
  br i1 %832, label %837, label %833

833:                                              ; preds = %812
  %834 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %829, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  %835 = getelementptr inbounds i8, i8* %29, i64 288
  %836 = bitcast %"class.base::UnguessableToken"* %834 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %835, i8* align 8 %836, i64 16, i1 false) #9
  br label %837

837:                                              ; preds = %812, %833
  ret %"class.blink::FetchRequestData"* %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [8 x i8]* dereferenceable(8)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 7
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %157, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %213, %14, %28, %157, %171, %185, %199, %42, %59, %77, %93, %109, %125, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %14 ], [ false, %28 ], [ false, %157 ], [ false, %171 ], [ false, %185 ], [ false, %199 ], [ %226, %213 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  ret i1 %156

157:                                              ; preds = %28
  %158 = getelementptr inbounds i8, i8* %15, i64 2
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i64
  %167 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = sext i8 %168 to i32
  %170 = icmp eq i32 %163, %169
  br i1 %170, label %171, label %75

171:                                              ; preds = %157
  %172 = getelementptr inbounds i8, i8* %15, i64 3
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i64
  %181 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = icmp eq i32 %177, %183
  br i1 %184, label %185, label %75

185:                                              ; preds = %171
  %186 = getelementptr inbounds i8, i8* %15, i64 4
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i64
  %195 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = sext i8 %196 to i32
  %198 = icmp eq i32 %191, %197
  br i1 %198, label %199, label %75

199:                                              ; preds = %185
  %200 = getelementptr inbounds i8, i8* %15, i64 5
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = sext i8 %210 to i32
  %212 = icmp eq i32 %205, %211
  br i1 %212, label %213, label %75

213:                                              ; preds = %199
  %214 = getelementptr inbounds i8, i8* %15, i64 6
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = sext i8 %224 to i32
  %226 = icmp eq i32 %219, %225
  br label %75
}

declare void @_ZN5blink15FetchHeaderList6AppendERKN3WTF6StringES4_(%"class.blink::FetchHeaderList"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::BodyStreamBuffer"* @_ZN5blink16BodyStreamBuffer6CreateEPNS_11ScriptStateEPNS_13BytesConsumerEPNS_11AbortSignalEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ScriptState"*, %"class.blink::BytesConsumer"*, %"class.blink::AbortSignal"*, %"class.blink::ScriptCachedMetadataHandler"*, %"class.blink::BlobDataHandle"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_111SignalErrorENS_10PersistentINS_21DataPipeBytesConsumer18CompletionNotifierEEE(%"class.blink::Persistent.595"* nocapture readonly) #0 {
  %2 = alloca %"class.blink::BytesConsumer::Error", align 8
  %3 = getelementptr inbounds %"class.blink::Persistent.595", %"class.blink::Persistent.595"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** %3, align 8
  %5 = bitcast %"class.blink::BytesConsumer::Error"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.blink::BytesConsumer::Error", %"class.blink::BytesConsumer::Error"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  call void @_ZN5blink21DataPipeBytesConsumer18CompletionNotifier11SignalErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %4, %"class.blink::BytesConsumer::Error"* nonnull dereferenceable(8) %2) #9
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #9
  br label %22

22:                                               ; preds = %1, %18, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

declare void @_ZN7network5mojom5blink26ChunkedDataPipeGetterProxy7GetSizeEN4base12OnceCallbackIFvimEEE(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.base::OnceCallback.597"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_110SignalSizeENSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS1_14default_deleteIS9_EEEENS_10PersistentINS_21DataPipeBytesConsumer18CompletionNotifierEEEim(%"class.mojo::Remote"*, %"class.blink::Persistent.595"* nocapture readonly, i32, i64) #0 {
  %5 = alloca %"class.blink::BytesConsumer::Error", align 8
  %6 = icmp eq i32 %2, 0
  %7 = getelementptr inbounds %"class.blink::Persistent.595", %"class.blink::Persistent.595"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** %7, align 8
  br i1 %6, label %28, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::BytesConsumer::Error"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.blink::BytesConsumer::Error", %"class.blink::BytesConsumer::Error"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  call void @_ZN5blink21DataPipeBytesConsumer18CompletionNotifier11SignalErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %8, %"class.blink::BytesConsumer::Error"* nonnull dereferenceable(8) %5) #9
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #9
  br label %27

27:                                               ; preds = %9, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  br label %29

28:                                               ; preds = %4
  tail call void @_ZN5blink21DataPipeBytesConsumer18CompletionNotifier10SignalSizeEm(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %8, i64 %3) #9
  br label %29

29:                                               ; preds = %28, %27
  %30 = icmp eq %"class.mojo::Remote"* %0, null
  br i1 %30, label %43, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %32, align 8
  store %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* null, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %32, align 8
  %34 = icmp eq %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %33 to void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)***
  %37 = load void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)**, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)** %37, i64 1
  %39 = load void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)** %38, align 8
  call void %39(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* nonnull %33) #9
  br label %40

40:                                               ; preds = %35, %31
  %41 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %41) #9
  %42 = bitcast %"class.mojo::Remote"* %0 to i8*
  call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %29, %40
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare void @_ZN7network5mojom5blink26ChunkedDataPipeGetterProxy12StartReadingEN4mojo16ScopedHandleBaseINS3_22DataPipeProducerHandleEEE(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.mojo::ScopedHandleBase.399"*) unnamed_addr #2

declare %"class.blink::BytesConsumer"* @_ZN5blink13BytesConsumer13CreateErroredERKNS0_5ErrorE(%"class.blink::BytesConsumer::Error"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink15FetchHeaderList15ExtractMIMETypeEv(%"class.blink::FetchHeaderList"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FetchRequestData"* @_ZN5blink16FetchRequestData15CloneExceptBodyEv(%"class.blink::FetchRequestData"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16FetchRequestDataEEEPhm(i64 320) #9
  %3 = bitcast i8* %2 to %"class.blink::FetchRequestData"*
  %4 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 24, i32 0, i32 0
  %5 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %4, align 8
  tail call void @_ZN5blink16FetchRequestDataC2EPNS_16ExecutionContextE(%"class.blink::FetchRequestData"* %3, %"class.blink::ExecutionContext"* %5) #9
  %6 = getelementptr inbounds i8, i8* %2, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 1
  %11 = getelementptr inbounds i8, i8* %2, i64 8
  %12 = bitcast i8* %11 to %"class.blink::KURL"*
  %13 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %12, %"class.blink::KURL"* dereferenceable(112) %10) #9
  %14 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #9
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !2

31:                                               ; preds = %22
  tail call void @llvm.trap() #9
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %32, %17, %1
  %35 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %36 = bitcast i8* %2 to i64*
  %37 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  store i64 %35, i64* %36, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9
  br label %53

53:                                               ; preds = %34, %49, %52
  %54 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.blink::FetchHeaderList"*, %"class.blink::FetchHeaderList"** %54, align 8
  %56 = tail call %"class.blink::FetchHeaderList"* @_ZNK5blink15FetchHeaderList5CloneEv(%"class.blink::FetchHeaderList"* %55) #9
  %57 = getelementptr inbounds i8, i8* %2, i64 120
  %58 = ptrtoint %"class.blink::FetchHeaderList"* %56 to i64
  %59 = bitcast i8* %57 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %53
  %63 = bitcast %"class.blink::FetchHeaderList"* %56 to i8*
  %64 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %63) #9
  br label %65

65:                                               ; preds = %53, %62
  %66 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 5, i32 0
  %67 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %66, align 8
  %68 = icmp eq %"class.blink::SecurityOrigin"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %67, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %70) #9
  br label %71

71:                                               ; preds = %65, %69
  %72 = getelementptr inbounds i8, i8* %2, i64 136
  %73 = ptrtoint %"class.blink::SecurityOrigin"* %67 to i64
  %74 = bitcast i8* %72 to i64*
  %75 = bitcast i8* %72 to %"class.blink::SecurityOrigin"**
  %76 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %75, align 8
  store i64 %73, i64* %74, align 8
  %77 = icmp eq %"class.blink::SecurityOrigin"* %76, null
  br i1 %77, label %85, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %76, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %79) #9
  %80 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %78
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %76) #9
  %84 = bitcast %"class.blink::SecurityOrigin"* %76 to i8*
  tail call void @free(i8* %84) #9
  br label %85

85:                                               ; preds = %71, %78, %83
  %86 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 6, i32 0
  %87 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %86, align 8
  %88 = icmp eq %"class.blink::SecurityOrigin"* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %87, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %90) #9
  br label %91

91:                                               ; preds = %85, %89
  %92 = getelementptr inbounds i8, i8* %2, i64 144
  %93 = ptrtoint %"class.blink::SecurityOrigin"* %87 to i64
  %94 = bitcast i8* %92 to i64*
  %95 = bitcast i8* %92 to %"class.blink::SecurityOrigin"**
  %96 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %95, align 8
  store i64 %93, i64* %94, align 8
  %97 = icmp eq %"class.blink::SecurityOrigin"* %96, null
  br i1 %97, label %105, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %96, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %99) #9
  %100 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %98
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %96) #9
  %104 = bitcast %"class.blink::SecurityOrigin"* %96 to i8*
  tail call void @free(i8* %104) #9
  br label %105

105:                                              ; preds = %91, %98, %103
  %106 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds i8, i8* %2, i64 128
  %109 = bitcast i8* %108 to i32*
  store i32 %107, i32* %109, align 8
  %110 = getelementptr inbounds i8, i8* %2, i64 152
  %111 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %131, label %114

114:                                              ; preds = %105
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i33
  %123 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %122, i33 1) #9
  %124 = extractvalue { i33, i1 } %123, 1
  %125 = extractvalue { i33, i1 } %123, 0
  %126 = icmp slt i33 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %129, !prof !2

128:                                              ; preds = %119
  tail call void @llvm.trap() #9
  unreachable

129:                                              ; preds = %119
  %130 = trunc i33 %125 to i32
  store i32 %130, i32* %120, align 4
  br label %131

131:                                              ; preds = %129, %114, %105
  %132 = ptrtoint %"class.WTF::StringImpl"* %112 to i64
  %133 = bitcast i8* %110 to i64*
  %134 = bitcast i8* %110 to %"class.WTF::StringImpl"**
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  store i64 %132, i64* %133, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #9
  br label %150

150:                                              ; preds = %131, %146, %149
  %151 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 8
  %152 = load i32, i32* %151, align 8
  %153 = getelementptr inbounds i8, i8* %2, i64 160
  %154 = bitcast i8* %153 to i32*
  store i32 %152, i32* %154, align 8
  %155 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 9
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds i8, i8* %2, i64 164
  %158 = bitcast i8* %157 to i32*
  store i32 %156, i32* %158, align 4
  %159 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 10
  %160 = load i32, i32* %159, align 8
  %161 = getelementptr inbounds i8, i8* %2, i64 168
  %162 = bitcast i8* %161 to i32*
  store i32 %160, i32* %162, align 8
  %163 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 11
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds i8, i8* %2, i64 172
  %166 = bitcast i8* %165 to i32*
  store i32 %164, i32* %166, align 4
  %167 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 12
  %168 = load i32, i32* %167, align 8
  %169 = getelementptr inbounds i8, i8* %2, i64 176
  %170 = bitcast i8* %169 to i32*
  store i32 %168, i32* %170, align 8
  %171 = getelementptr inbounds i8, i8* %2, i64 256
  %172 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 16, i32 0, i32 0
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %172, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %174, label %192, label %175

175:                                              ; preds = %150
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %192

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = zext i32 %182 to i33
  %184 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %183, i33 1) #9
  %185 = extractvalue { i33, i1 } %184, 1
  %186 = extractvalue { i33, i1 } %184, 0
  %187 = icmp slt i33 %186, 0
  %188 = or i1 %185, %187
  br i1 %188, label %189, label %190, !prof !2

189:                                              ; preds = %180
  tail call void @llvm.trap() #9
  unreachable

190:                                              ; preds = %180
  %191 = trunc i33 %186 to i32
  store i32 %191, i32* %181, align 4
  br label %192

192:                                              ; preds = %190, %175, %150
  %193 = ptrtoint %"class.WTF::StringImpl"* %173 to i64
  %194 = bitcast i8* %171 to i64*
  %195 = bitcast i8* %171 to %"class.WTF::StringImpl"**
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  store i64 %193, i64* %194, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %211, label %198

198:                                              ; preds = %192
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %198
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 [ %206, %205 ], [ %204, %198 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #9
  br label %211

211:                                              ; preds = %192, %207, %210
  %212 = getelementptr inbounds i8, i8* %2, i64 264
  %213 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 17, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %233, label %216

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %233

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = zext i32 %223 to i33
  %225 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %224, i33 1) #9
  %226 = extractvalue { i33, i1 } %225, 1
  %227 = extractvalue { i33, i1 } %225, 0
  %228 = icmp slt i33 %227, 0
  %229 = or i1 %226, %228
  br i1 %229, label %230, label %231, !prof !2

230:                                              ; preds = %221
  tail call void @llvm.trap() #9
  unreachable

231:                                              ; preds = %221
  %232 = trunc i33 %227 to i32
  store i32 %232, i32* %222, align 4
  br label %233

233:                                              ; preds = %231, %216, %211
  %234 = ptrtoint %"class.WTF::StringImpl"* %214 to i64
  %235 = bitcast i8* %212 to i64*
  %236 = bitcast i8* %212 to %"class.WTF::StringImpl"**
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %236, align 8
  store i64 %234, i64* %235, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %252, label %239

239:                                              ; preds = %233
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #9
  br label %252

252:                                              ; preds = %233, %248, %251
  %253 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 18
  %254 = load i32, i32* %253, align 8
  %255 = getelementptr inbounds i8, i8* %2, i64 272
  %256 = bitcast i8* %255 to i32*
  store i32 %254, i32* %256, align 8
  %257 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 13
  %258 = load i32, i32* %257, align 4
  %259 = getelementptr inbounds i8, i8* %2, i64 180
  %260 = bitcast i8* %259 to i32*
  store i32 %258, i32* %260, align 4
  %261 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 19
  %262 = load i8, i8* %261, align 4, !range !16
  %263 = getelementptr inbounds i8, i8* %2, i64 276
  store i8 %262, i8* %263, align 4
  %264 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 20
  %265 = load i8, i8* %264, align 1, !range !16
  %266 = getelementptr inbounds i8, i8* %2, i64 277
  store i8 %265, i8* %266, align 1
  %267 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 23
  %268 = getelementptr inbounds i8, i8* %2, i64 288
  %269 = bitcast %"class.base::UnguessableToken"* %267 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %268, i8* align 8 %269, i64 16, i1 false)
  %270 = getelementptr inbounds i8, i8* %2, i64 184
  %271 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %272 = load i8, i8* %271, align 8, !range !16
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %331, label %274

274:                                              ; preds = %252
  %275 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %276 = load i8, i8* %270, align 8, !range !16
  %277 = icmp eq i8 %276, 0
  %278 = getelementptr inbounds i8, i8* %2, i64 192
  br i1 %277, label %329, label %279

279:                                              ; preds = %274
  %280 = bitcast %"class.network::mojom::blink::TrustTokenParams"* %275 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %278, i8* align 8 %280, i64 13, i1 false) #9
  %281 = getelementptr inbounds i8, i8* %2, i64 208
  %282 = bitcast i8* %281 to %"class.WTF::Vector"*
  %283 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %284 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorI13scoped_refptrIKN5blink14SecurityOriginEELj0ENS_18PartitionAllocatorEEaSERKS7_(%"class.WTF::Vector"* %282, %"class.WTF::Vector"* dereferenceable(16) %283) #9
  %285 = getelementptr inbounds i8, i8* %2, i64 224
  %286 = bitcast i8* %285 to %"class.WTF::Vector.11"*
  %287 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %288 = tail call dereferenceable(16) %"class.WTF::Vector.11"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.11"* %286, %"class.WTF::Vector.11"* dereferenceable(16) %287) #9
  %289 = getelementptr inbounds i8, i8* %2, i64 240
  %290 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 6, i32 0, i32 0
  %291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %290, align 8
  %292 = icmp eq %"class.WTF::StringImpl"* %291, null
  br i1 %292, label %310, label %293

293:                                              ; preds = %279
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %310

298:                                              ; preds = %293
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  %301 = zext i32 %300 to i33
  %302 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %301, i33 1) #9
  %303 = extractvalue { i33, i1 } %302, 1
  %304 = extractvalue { i33, i1 } %302, 0
  %305 = icmp slt i33 %304, 0
  %306 = or i1 %303, %305
  br i1 %306, label %307, label %308, !prof !2

307:                                              ; preds = %298
  tail call void @llvm.trap() #9
  unreachable

308:                                              ; preds = %298
  %309 = trunc i33 %304 to i32
  store i32 %309, i32* %299, align 4
  br label %310

310:                                              ; preds = %308, %293, %279
  %311 = ptrtoint %"class.WTF::StringImpl"* %291 to i64
  %312 = bitcast i8* %289 to i64*
  %313 = bitcast i8* %289 to %"class.WTF::StringImpl"**
  %314 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %313, align 8
  store i64 %311, i64* %312, align 8
  %315 = icmp eq %"class.WTF::StringImpl"* %314, null
  br i1 %315, label %337, label %316

316:                                              ; preds = %310
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %318 = load atomic i32, i32* %317 monotonic, align 4
  %319 = and i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 0
  %322 = load i32, i32* %321, align 4
  br i1 %320, label %323, label %325

323:                                              ; preds = %316
  %324 = add i32 %322, -1
  store i32 %324, i32* %321, align 4
  br label %325

325:                                              ; preds = %323, %316
  %326 = phi i32 [ %324, %323 ], [ %322, %316 ]
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %337

328:                                              ; preds = %325
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %314) #9
  br label %337

329:                                              ; preds = %274
  %330 = bitcast i8* %278 to %"class.network::mojom::blink::TrustTokenParams"*
  tail call void @_ZN7network5mojom5blink16TrustTokenParamsC2ERKS2_(%"class.network::mojom::blink::TrustTokenParams"* %330, %"class.network::mojom::blink::TrustTokenParams"* dereferenceable(56) %275) #9
  store i8 1, i8* %270, align 8
  br label %337

331:                                              ; preds = %252
  %332 = load i8, i8* %270, align 8, !range !16
  %333 = icmp eq i8 %332, 0
  br i1 %333, label %337, label %334

334:                                              ; preds = %331
  %335 = getelementptr inbounds i8, i8* %2, i64 192
  %336 = bitcast i8* %335 to %"class.network::mojom::blink::TrustTokenParams"*
  tail call void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"* %336) #9
  store i8 0, i8* %270, align 8
  br label %337

337:                                              ; preds = %328, %325, %310, %329, %331, %334
  %338 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 25
  %339 = load i8, i8* %338, align 8, !range !16
  %340 = getelementptr inbounds i8, i8* %2, i64 312
  store i8 %339, i8* %340, align 8
  ret %"class.blink::FetchRequestData"* %3
}

declare %"class.blink::FetchHeaderList"* @_ZNK5blink15FetchHeaderList5CloneEv(%"class.blink::FetchHeaderList"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FetchRequestData"* @_ZN5blink16FetchRequestData5CloneEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::FetchRequestData"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::BodyStreamBuffer"*, align 8
  %5 = alloca %"class.blink::BodyStreamBuffer"*, align 8
  %6 = alloca %"class.mojo::PendingReceiver", align 8
  %7 = tail call %"class.blink::FetchRequestData"* @_ZN5blink16FetchRequestData15CloneExceptBodyEv(%"class.blink::FetchRequestData"* %0)
  %8 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 15
  %9 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %9, align 8
  %11 = icmp eq %"class.blink::BodyStreamBuffer"* %10, null
  br i1 %11, label %39, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::BodyStreamBuffer"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  store %"class.blink::BodyStreamBuffer"* null, %"class.blink::BodyStreamBuffer"** %4, align 8
  %14 = bitcast %"class.blink::BodyStreamBuffer"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  store %"class.blink::BodyStreamBuffer"* null, %"class.blink::BodyStreamBuffer"** %5, align 8
  call void @_ZN5blink16BodyStreamBuffer3TeeEPPS0_S2_RNS_14ExceptionStateE(%"class.blink::BodyStreamBuffer"* nonnull %10, %"class.blink::BodyStreamBuffer"** nonnull %4, %"class.blink::BodyStreamBuffer"** nonnull %5, %"class.blink::ExceptionState"* dereferenceable(72) %2) #9
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %38

18:                                               ; preds = %12
  %19 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %4, align 8
  %20 = ptrtoint %"class.blink::BodyStreamBuffer"* %19 to i64
  %21 = bitcast %"class.blink::Member.16"* %8 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.blink::BodyStreamBuffer"* %19 to i8*
  %26 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #9
  br label %27

27:                                               ; preds = %18, %24
  %28 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %5, align 8
  %29 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %7, i64 0, i32 15
  %30 = ptrtoint %"class.blink::BodyStreamBuffer"* %28 to i64
  %31 = bitcast %"class.blink::Member.16"* %29 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %27
  %35 = bitcast %"class.blink::BodyStreamBuffer"* %28 to i8*
  %36 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #9
  br label %37

37:                                               ; preds = %27, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  br label %39

38:                                               ; preds = %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  br label %65

39:                                               ; preds = %3, %37
  %40 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %41 = load %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %41, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %41, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %46, align 8
  %48 = icmp eq %"class.mojo::InterfaceEndpointClient"* %47, null
  br i1 %48, label %65, label %49

49:                                               ; preds = %45, %39
  %50 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %41, i64 0, i32 1, i32 0
  call void @_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink16URLLoaderFactoryEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState.608"* %50) #9
  %51 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %41, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %51, align 8
  %53 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #9
  %54 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %53, i64 0, i32 1
  %55 = bitcast %"class.blink::MojoBindingContext"* %54 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %56 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %55, align 8
  %57 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %56, i64 6
  %58 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %57, align 8
  %59 = call %"class.base::SingleThreadTaskRunner"* %58(%"class.blink::MojoBindingContext"* %54, i8 zeroext 3) #9
  %60 = bitcast %"class.base::SingleThreadTaskRunner"* %59 to %"class.base::SequencedTaskRunner"*
  %61 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %7, i64 0, i32 22, i32 0, i32 0, i32 0
  %62 = load %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %61, align 8, !noalias !30
  %63 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %62, i64 0, i32 1
  call void @_ZN4mojo6RemoteIN7network5mojom5blink16URLLoaderFactoryEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver"* nonnull sret %6, %"class.mojo::Remote.607"* %63, %"class.base::SequencedTaskRunner"* %60) #9
  call void @_ZN7network5mojom5blink21URLLoaderFactoryProxy5CloneEN4mojo15PendingReceiverINS1_16URLLoaderFactoryEEE(%"class.network::mojom::blink::URLLoaderFactoryProxy"* %52, %"class.mojo::PendingReceiver"* nonnull %6) #9
  %64 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %6, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %64) #9
  br label %65

65:                                               ; preds = %45, %49, %38
  %66 = phi %"class.blink::FetchRequestData"* [ null, %38 ], [ %7, %49 ], [ %7, %45 ]
  ret %"class.blink::FetchRequestData"* %66
}

declare void @_ZN5blink16BodyStreamBuffer3TeeEPPS0_S2_RNS_14ExceptionStateE(%"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"**, %"class.blink::BodyStreamBuffer"**, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN7network5mojom5blink21URLLoaderFactoryProxy5CloneEN4mojo15PendingReceiverINS1_16URLLoaderFactoryEEE(%"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.mojo::PendingReceiver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FetchRequestData"* @_ZN5blink16FetchRequestData4PassEPNS_11ScriptStateE(%"class.blink::FetchRequestData"*, %"class.blink::ScriptState"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::FetchRequestData"* @_ZN5blink16FetchRequestData15CloneExceptBodyEv(%"class.blink::FetchRequestData"* %0)
  %4 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 15
  %5 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %5, align 8
  %7 = icmp eq %"class.blink::BodyStreamBuffer"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %2
  %9 = ptrtoint %"class.blink::BodyStreamBuffer"* %6 to i64
  %10 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3, i64 0, i32 15
  %11 = bitcast %"class.blink::Member.16"* %4 to i64*
  %12 = bitcast %"class.blink::Member.16"* %10 to i64*
  store atomic i64 %9, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %8
  %16 = bitcast %"class.blink::BodyStreamBuffer"* %6 to i8*
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %16) #9
  br label %18

18:                                               ; preds = %8, %15
  %19 = tail call %"class.blink::BytesConsumer"* @_ZN5blink13BytesConsumer12CreateClosedEv() #9
  %20 = tail call %"class.blink::BodyStreamBuffer"* @_ZN5blink16BodyStreamBuffer6CreateEPNS_11ScriptStateEPNS_13BytesConsumerEPNS_11AbortSignalEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ScriptState"* %1, %"class.blink::BytesConsumer"* %19, %"class.blink::AbortSignal"* null, %"class.blink::ScriptCachedMetadataHandler"* null, %"class.blink::BlobDataHandle"* null) #9
  %21 = ptrtoint %"class.blink::BodyStreamBuffer"* %20 to i64
  store atomic i64 %21, i64* %11 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.blink::BodyStreamBuffer"* %20 to i8*
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #9
  %27 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %5, align 8
  br label %28

28:                                               ; preds = %18, %24
  %29 = phi %"class.blink::BodyStreamBuffer"* [ %20, %18 ], [ %27, %24 ]
  tail call void @_ZN5blink16BodyStreamBuffer22CloseAndLockAndDisturbEv(%"class.blink::BodyStreamBuffer"* %29) #9
  br label %30

30:                                               ; preds = %2, %28
  %31 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 22
  %32 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3, i64 0, i32 22
  %33 = bitcast %"class.blink::HeapMojoRemote"* %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.blink::HeapMojoRemote"* %32 to i64*
  store atomic i64 %34, i64* %35 monotonic, align 8
  %36 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30
  %39 = inttoptr i64 %34 to i8*
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #9
  br label %41

41:                                               ; preds = %30, %38
  ret %"class.blink::FetchRequestData"* %3
}

declare %"class.blink::BytesConsumer"* @_ZN5blink13BytesConsumer12CreateClosedEv() local_unnamed_addr #2

declare void @_ZN5blink16BodyStreamBuffer22CloseAndLockAndDisturbEv(%"class.blink::BodyStreamBuffer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FetchRequestDataD2Ev(%"class.blink::FetchRequestData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 17, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #9
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 16, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %37 = load i8, i8* %36, align 8, !range !16
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"* %40) #9
  store i8 0, i8* %36, align 8
  br label %41

41:                                               ; preds = %35, %39
  %42 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #9
  br label %58

58:                                               ; preds = %41, %54, %57
  %59 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 6, i32 0
  %60 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %59, align 8
  %61 = icmp eq %"class.blink::SecurityOrigin"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #9
  %64 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %60) #9
  %68 = bitcast %"class.blink::SecurityOrigin"* %60 to i8*
  tail call void @free(i8* %68) #9
  br label %69

69:                                               ; preds = %58, %62, %67
  %70 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 5, i32 0
  %71 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %70, align 8
  %72 = icmp eq %"class.blink::SecurityOrigin"* %71, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %74) #9
  %75 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %73
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %71) #9
  %79 = bitcast %"class.blink::SecurityOrigin"* %71 to i8*
  tail call void @free(i8* %79) #9
  br label %80

80:                                               ; preds = %69, %73, %78
  %81 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %81) #9
  %82 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #9
  br label %98

98:                                               ; preds = %80, %94, %97
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FetchRequestDataC2EPNS_16ExecutionContextE(%"class.blink::FetchRequestData"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names4kGETE, align 8
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #9
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #9
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %2, %9, %24
  %27 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %27) #9
  %28 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FetchHeaderListEEEPhm(i64 24) #9
  %29 = bitcast i8* %28 to %"class.blink::FetchHeaderList"*
  tail call void @_ZN5blink15FetchHeaderListC1Ev(%"class.blink::FetchHeaderList"* %29) #9
  %30 = getelementptr inbounds i8, i8* %28, i64 -4
  %31 = bitcast i8* %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = or i16 %32, 1
  store atomic i16 %33, i16* %31 release, align 2
  %34 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.blink::FetchHeaderList"** %34 to i8**
  store i8* %28, i8** %35, align 8
  %36 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 3
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 5, i32 0
  %38 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 7
  %39 = bitcast %"class.WTF::String"* %3 to i8*
  %40 = bitcast %"class.blink::SecurityOrigin"** %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i64 12) #9
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %67, label %44

44:                                               ; preds = %26
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 acquire, align 4
  %47 = and i32 %46, 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %44
  %50 = load atomic i32, i32* %45 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %69

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #9
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %53
  call void @llvm.trap() #9
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %69

65:                                               ; preds = %44
  %66 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %42) #9
  br label %69

67:                                               ; preds = %26
  %68 = bitcast %"class.WTF::AtomicString"* %38 to i64*
  store i64 0, i64* %68, align 8
  br label %84

69:                                               ; preds = %49, %63, %65
  %70 = phi %"class.WTF::StringImpl"* [ %42, %63 ], [ %42, %49 ], [ %66, %65 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  %72 = bitcast %"class.WTF::AtomicString"* %38 to i64*
  store i64 %71, i64* %72, align 8
  %73 = load atomic i32, i32* %45 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %69
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %69
  %81 = phi i32 [ %79, %78 ], [ %77, %69 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #9
  br label %84

84:                                               ; preds = %67, %80, %83
  %85 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 8
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %86, align 8
  %87 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 12
  store i32 0, i32* %87, align 8
  %88 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 13
  store i32 1, i32* %88, align 4
  %89 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %89, align 8
  %90 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1
  %91 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 18
  %92 = bitcast %union.anon* %90 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 80, i1 false)
  store i32 -1, i32* %91, align 8
  %93 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 19
  store i8 0, i8* %93, align 4
  %94 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 20
  store i8 0, i8* %94, align 1
  %95 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 22
  %96 = icmp eq %"class.blink::ExecutionContext"* %1, null
  %97 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 1, i32 0
  %98 = select i1 %96, %"class.blink::ContextLifecycleNotifier"* null, %"class.blink::ContextLifecycleNotifier"* %97
  %99 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm(i64 64) #9
  %100 = bitcast i8* %99 to %"class.blink::ContextLifecycleObserver"*
  %101 = bitcast i8* %99 to i32 (...)***
  %102 = getelementptr inbounds i8, i8* %99, i64 8
  %103 = bitcast i8* %102 to %"class.blink::ContextLifecycleNotifier"**
  store %"class.blink::ContextLifecycleNotifier"* null, %"class.blink::ContextLifecycleNotifier"** %103, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  %104 = getelementptr inbounds i8, i8* %99, i64 16
  %105 = bitcast i8* %104 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %105) #9
  %106 = getelementptr inbounds i8, i8* %99, i64 56
  %107 = bitcast i8* %106 to i64*
  store i64 0, i64* %107, align 8
  call void @_ZN5blink24ContextLifecycleObserver27SetContextLifecycleNotifierEPNS_24ContextLifecycleNotifierE(%"class.blink::ContextLifecycleObserver"* %100, %"class.blink::ContextLifecycleNotifier"* %98) #9
  %108 = getelementptr inbounds i8, i8* %99, i64 -4
  %109 = bitcast i8* %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = or i16 %110, 1
  store atomic i16 %111, i16* %109 release, align 2
  %112 = bitcast %"class.blink::HeapMojoRemote"* %95 to i8**
  store i8* %99, i8** %112, align 8
  %113 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 23
  %114 = bitcast %"class.base::UnguessableToken"* %113 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 16, i1 false) #9
  %115 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 24, i32 0, i32 0
  store %"class.blink::ExecutionContext"* %1, %"class.blink::ExecutionContext"** %115, align 8
  %116 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 25
  store i8 0, i8* %116, align 8
  ret void
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16FetchRequestData5TraceEPNS_7VisitorE(%"class.blink::FetchRequestData"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 15
  %4 = bitcast %"class.blink::Member.16"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16BodyStreamBufferEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15FetchHeaderListEE5TraceEPNS_7VisitorEPKv) #9
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 22
  %26 = bitcast %"class.blink::HeapMojoRemote"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv) #9
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 24
  %37 = bitcast %"class.blink::Member.270"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %106, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = and i64 %38, -131072
  %43 = inttoptr i64 %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 4138
  %45 = load i8, i8* %44, align 2
  %46 = icmp eq i8 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %40
  %48 = getelementptr inbounds i8, i8* %43, i64 4160
  br label %87

49:                                               ; preds = %40
  %50 = getelementptr inbounds i8, i8* %43, i64 4096
  %51 = bitcast i8* %50 to %"class.blink::NormalPage"*
  %52 = getelementptr inbounds i8, i8* %43, i64 4400
  %53 = bitcast i8* %52 to i8**
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %38, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %51, i64 0, i32 2, i32 0, i32 1, i64 %58
  %60 = load atomic i8, i8* %59 acquire, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 2, %62
  %64 = trunc i32 %63 to i8
  %65 = add i8 %64, -1
  %66 = and i8 %65, %60
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %74

68:                                               ; preds = %49, %68
  %69 = phi i64 [ %70, %68 ], [ %58, %49 ]
  %70 = add i64 %69, -1
  %71 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %51, i64 0, i32 2, i32 0, i32 1, i64 %70
  %72 = load atomic i8, i8* %71 acquire, align 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %68, label %74

74:                                               ; preds = %68, %49
  %75 = phi i64 [ %58, %49 ], [ %70, %68 ]
  %76 = phi i8 [ %66, %49 ], [ %72, %68 ]
  %77 = zext i8 %76 to i32
  %78 = tail call i32 @llvm.ctlz.i32(i32 %77, i1 true) #9, !range !33
  %79 = add nsw i32 %78, -24
  %80 = shl i64 %75, 3
  %81 = or i64 %80, 7
  %82 = sext i32 %79 to i64
  %83 = sub i64 %81, %82
  %84 = shl i64 %83, 3
  %85 = load i8*, i8** %53, align 16
  %86 = getelementptr inbounds i8, i8* %85, i64 %84
  br label %87

87:                                               ; preds = %74, %47
  %88 = phi i8* [ %48, %47 ], [ %86, %74 ]
  %89 = getelementptr inbounds i8, i8* %88, i64 8
  %90 = getelementptr inbounds i8, i8* %88, i64 4
  %91 = bitcast i8* %90 to i16*
  %92 = load atomic i16, i16* %91 acquire, align 2
  %93 = lshr i16 %92, 2
  %94 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %95 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %94, i64 0, i32 0
  %96 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %95, align 8
  %97 = zext i16 %93 to i64
  %98 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %96, i64 %97
  %99 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %98, align 8
  %100 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %99, i64 0, i32 0
  %101 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %100, align 8
  %102 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %103 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %103, i64 5
  %105 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %104, align 8
  tail call void %105(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* %89, void (%"class.blink::Visitor"*, i8*)* %101) #9
  br label %106

106:                                              ; preds = %35, %87
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #2

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #4

declare zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare i32 @MojoCreateDataPipe(%struct.MojoCreateDataPipeOptions*, i32*, i32*) local_unnamed_addr #2

declare i32 @MojoClose(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #4

declare void @_ZN5blink21DataPipeBytesConsumer18CompletionNotifier11SignalErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, %"class.blink::BytesConsumer::Error"* dereferenceable(8)) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink21DataPipeBytesConsumer18CompletionNotifier10SignalSizeEm(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorI13scoped_refptrIKN5blink14SecurityOriginEELj0ENS_18PartitionAllocatorEEaSERKS7_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %171, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %33

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %12, i64 %15
  br label %17

17:                                               ; preds = %29, %10
  %18 = phi %class.scoped_refptr.10* [ %30, %29 ], [ %16, %10 ]
  %19 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %18, i64 0, i32 0
  %20 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %19, align 8
  %21 = icmp eq %"class.blink::SecurityOrigin"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #9
  %24 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %20) #9
  %28 = bitcast %"class.blink::SecurityOrigin"* %20 to i8*
  tail call void @free(i8* %28) #9
  br label %29

29:                                               ; preds = %27, %22, %17
  %30 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %18, i64 1
  %31 = icmp eq %class.scoped_refptr.10* %30, %14
  br i1 %31, label %32, label %17

32:                                               ; preds = %29
  store i32 %8, i32* %5, align 4
  br label %104

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp ugt i32 %8, %35
  br i1 %36, label %37, label %102

37:                                               ; preds = %33
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %68, label %39

39:                                               ; preds = %37
  %40 = icmp eq i32 %6, 0
  br i1 %40, label %62, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %43 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %42, align 8
  %44 = zext i32 %6 to i64
  %45 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %43, i64 %44
  br label %46

46:                                               ; preds = %58, %41
  %47 = phi %class.scoped_refptr.10* [ %59, %58 ], [ %43, %41 ]
  %48 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %47, i64 0, i32 0
  %49 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %48, align 8
  %50 = icmp eq %"class.blink::SecurityOrigin"* %49, null
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %49, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %52) #9
  %53 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %49) #9
  %57 = bitcast %"class.blink::SecurityOrigin"* %49 to i8*
  tail call void @free(i8* %57) #9
  br label %58

58:                                               ; preds = %56, %51, %46
  %59 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %47, i64 1
  %60 = icmp eq %class.scoped_refptr.10* %59, %45
  br i1 %60, label %61, label %46

61:                                               ; preds = %58
  store i32 0, i32* %5, align 4
  br label %62

62:                                               ; preds = %61, %39
  %63 = bitcast %"class.WTF::Vector"* %0 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %65 monotonic, align 8
  store i32 0, i32* %34, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #9
  %66 = load i32, i32* %7, align 4
  %67 = load i32, i32* %34, align 8
  br label %68

68:                                               ; preds = %37, %62
  %69 = phi i32 [ 0, %37 ], [ %67, %62 ]
  %70 = phi i32 [ %8, %37 ], [ %66, %62 ]
  %71 = icmp ult i32 %69, %70
  br i1 %71, label %72, label %102, !prof !34

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %73, align 8
  %75 = icmp eq %class.scoped_refptr.10* %74, null
  %76 = zext i32 %70 to i64
  %77 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14SecurityOriginEEEEmm(i64 %76) #9
  %78 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %77, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink14SecurityOriginEEEEPKcv, i64 0, i64 0)) #9
  br i1 %75, label %79, label %84

79:                                               ; preds = %72
  %80 = ptrtoint i8* %78 to i64
  %81 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %80, i64* %81 monotonic, align 8
  %82 = lshr i64 %77, 3
  %83 = trunc i64 %82 to i32
  store i32 %83, i32* %34, align 8
  br label %102

84:                                               ; preds = %72
  %85 = lshr i64 %77, 3
  %86 = ptrtoint i8* %78 to i64
  %87 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %73, align 8
  %88 = icmp ne i8* %78, null
  %89 = icmp ne %class.scoped_refptr.10* %87, null
  %90 = and i1 %88, %89
  %91 = bitcast %class.scoped_refptr.10* %87 to i8*
  br i1 %90, label %92, label %98, !prof !34

92:                                               ; preds = %84
  %93 = load i32, i32* %5, align 4
  %94 = zext i32 %93 to i64
  %95 = shl nuw nsw i64 %94, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* nonnull align 8 %91, i64 %95, i1 false) #9
  %96 = bitcast %"class.WTF::Vector"* %0 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %92, %84
  %99 = phi i8* [ %97, %92 ], [ %91, %84 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #9
  %100 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %86, i64* %100 monotonic, align 8
  %101 = trunc i64 %85 to i32
  store i32 %101, i32* %34, align 8
  br label %102

102:                                              ; preds = %33, %68, %79, %98
  %103 = load i32, i32* %5, align 4
  br label %104

104:                                              ; preds = %102, %32
  %105 = phi i32 [ %103, %102 ], [ %8, %32 ]
  %106 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %107 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %106, align 8
  %108 = zext i32 %105 to i64
  %109 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %107, i64 %108
  %110 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %111 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %110, align 8
  %112 = icmp eq i32 %105, 0
  br i1 %112, label %142, label %113

113:                                              ; preds = %104, %134
  %114 = phi %class.scoped_refptr.10* [ %136, %134 ], [ %111, %104 ]
  %115 = phi %class.scoped_refptr.10* [ %135, %134 ], [ %107, %104 ]
  %116 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %115, i64 0, i32 0
  %117 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %116, align 8
  %118 = icmp eq %"class.blink::SecurityOrigin"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %117, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %120) #9
  br label %121

121:                                              ; preds = %119, %113
  %122 = ptrtoint %"class.blink::SecurityOrigin"* %117 to i64
  %123 = bitcast %class.scoped_refptr.10* %114 to i64*
  %124 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %114, i64 0, i32 0
  %125 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %124, align 8
  store i64 %122, i64* %123, align 8
  %126 = icmp eq %"class.blink::SecurityOrigin"* %125, null
  br i1 %126, label %134, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %125, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %128) #9
  %129 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %125, i64 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %127
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %125) #9
  %133 = bitcast %"class.blink::SecurityOrigin"* %125 to i8*
  tail call void @free(i8* %133) #9
  br label %134

134:                                              ; preds = %132, %127, %121
  %135 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %115, i64 1
  %136 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %114, i64 1
  %137 = icmp eq %class.scoped_refptr.10* %135, %109
  br i1 %137, label %138, label %113

138:                                              ; preds = %134
  %139 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %106, align 8
  %140 = load i32, i32* %5, align 4
  %141 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %110, align 8
  br label %142

142:                                              ; preds = %138, %104
  %143 = phi %class.scoped_refptr.10* [ %141, %138 ], [ %111, %104 ]
  %144 = phi i32 [ %140, %138 ], [ 0, %104 ]
  %145 = phi %class.scoped_refptr.10* [ %139, %138 ], [ %107, %104 ]
  %146 = zext i32 %144 to i64
  %147 = load i32, i32* %7, align 4
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %145, i64 %148
  %150 = icmp eq i32 %144, %147
  br i1 %150, label %169, label %151

151:                                              ; preds = %142
  %152 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %143, i64 %146
  %153 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %145, i64 %146
  br label %154

154:                                              ; preds = %151, %163
  %155 = phi %class.scoped_refptr.10* [ %164, %163 ], [ %152, %151 ]
  %156 = phi %class.scoped_refptr.10* [ %165, %163 ], [ %153, %151 ]
  %157 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %156, i64 0, i32 0
  %158 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %157, align 8
  %159 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %155, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %158, %"class.blink::SecurityOrigin"** %159, align 8
  %160 = icmp eq %"class.blink::SecurityOrigin"* %158, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %158, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %162) #9
  br label %163

163:                                              ; preds = %161, %154
  %164 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %155, i64 1
  %165 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %156, i64 1
  %166 = icmp eq %class.scoped_refptr.10* %165, %149
  br i1 %166, label %167, label %154

167:                                              ; preds = %163
  %168 = load i32, i32* %7, align 4
  br label %169

169:                                              ; preds = %167, %142
  %170 = phi i32 [ %168, %167 ], [ %144, %142 ]
  store i32 %170, i32* %5, align 4
  br label %171

171:                                              ; preds = %2, %169
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.11"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.11"*, %"class.WTF::Vector.11"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.11"* %1, %0
  br i1 %3, label %219, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %116

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %114

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %"class.WTF::String"* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #9
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 1
  %72 = icmp eq %"class.WTF::String"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = bitcast %"class.WTF::Vector.11"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #9
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %40, align 8
  br label %80

80:                                               ; preds = %43, %74
  %81 = phi i32 [ 0, %43 ], [ %79, %74 ]
  %82 = phi i32 [ %8, %43 ], [ %78, %74 ]
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %114, !prof !34

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %87 = icmp eq %"class.WTF::String"* %86, null
  %88 = zext i32 %82 to i64
  %89 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %88) #9
  %90 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  br i1 %87, label %91, label %96

91:                                               ; preds = %84
  %92 = ptrtoint i8* %90 to i64
  %93 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %89, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %40, align 8
  br label %114

96:                                               ; preds = %84
  %97 = lshr i64 %89, 3
  %98 = ptrtoint i8* %90 to i64
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %100 = icmp ne i8* %90, null
  %101 = icmp ne %"class.WTF::String"* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %"class.WTF::String"* %99 to i8*
  br i1 %102, label %104, label %110, !prof !34

104:                                              ; preds = %96
  %105 = load i32, i32* %5, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %103, i64 %107, i1 false) #9
  %108 = bitcast %"class.WTF::Vector.11"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi i8* [ %109, %104 ], [ %103, %96 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #9
  %112 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 %98, i64* %112 monotonic, align 8
  %113 = trunc i64 %97 to i32
  store i32 %113, i32* %40, align 8
  br label %114

114:                                              ; preds = %39, %80, %91, %110
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %114, %38
  %117 = phi i32 [ %115, %114 ], [ %8, %38 ]
  %118 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 %120
  %122 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq i32 %117, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %116, %167
  %126 = phi %"class.WTF::String"* [ %169, %167 ], [ %123, %116 ]
  %127 = phi %"class.WTF::String"* [ %168, %167 ], [ %119, %116 ]
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #9
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !2

145:                                              ; preds = %136
  tail call void @llvm.trap() #9
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %125
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::String"* %126 to i64*
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #9
  br label %167

167:                                              ; preds = %166, %163, %148
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 1
  %170 = icmp eq %"class.WTF::String"* %168, %121
  br i1 %170, label %171, label %125

171:                                              ; preds = %167
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %173 = load i32, i32* %5, align 4
  %174 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  br label %175

175:                                              ; preds = %171, %116
  %176 = phi %"class.WTF::String"* [ %174, %171 ], [ %123, %116 ]
  %177 = phi i32 [ %173, %171 ], [ 0, %116 ]
  %178 = phi %"class.WTF::String"* [ %172, %171 ], [ %119, %116 ]
  %179 = zext i32 %177 to i64
  %180 = load i32, i32* %7, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %181
  %183 = icmp eq i32 %177, %180
  br i1 %183, label %217, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %179
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %179
  br label %187

187:                                              ; preds = %184, %211
  %188 = phi %"class.WTF::String"* [ %212, %211 ], [ %185, %184 ]
  %189 = phi %"class.WTF::String"* [ %213, %211 ], [ %186, %184 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #9
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !2

208:                                              ; preds = %199
  tail call void @llvm.trap() #9
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %187
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %214 = icmp eq %"class.WTF::String"* %213, %182
  br i1 %214, label %215, label %187

215:                                              ; preds = %211
  %216 = load i32, i32* %7, align 4
  br label %217

217:                                              ; preds = %215, %175
  %218 = phi i32 [ %216, %215 ], [ %177, %175 ]
  store i32 %218, i32* %5, align 4
  br label %219

219:                                              ; preds = %2, %217
  ret %"class.WTF::Vector.11"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14SecurityOriginEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom5blink16TrustTokenParamsC2ERKS2_(%"class.network::mojom::blink::TrustTokenParams"*, %"class.network::mojom::blink::TrustTokenParams"* dereferenceable(56)) unnamed_addr #3 comdat align 2 {
  %3 = bitcast %"class.network::mojom::blink::TrustTokenParams"* %0 to i8*
  %4 = bitcast %"class.network::mojom::blink::TrustTokenParams"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 13, i1 false)
  %5 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  store %class.scoped_refptr.10* null, %class.scoped_refptr.10** %8, align 8
  %9 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = zext i32 %7 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14SecurityOriginEEEEmm(i64 %12) #9
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink14SecurityOriginEEEEPKcv, i64 0, i64 0)) #9
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %9, align 8
  %19 = bitcast i8* %14 to %class.scoped_refptr.10*
  br label %20

20:                                               ; preds = %11, %2
  %21 = phi %class.scoped_refptr.10* [ null, %2 ], [ %19, %11 ]
  %22 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 4, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %25, align 8
  %27 = load i32, i32* %22, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %44, label %31

31:                                               ; preds = %20, %40
  %32 = phi %class.scoped_refptr.10* [ %41, %40 ], [ %21, %20 ]
  %33 = phi %class.scoped_refptr.10* [ %42, %40 ], [ %26, %20 ]
  %34 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %33, i64 0, i32 0
  %35 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %34, align 8
  %36 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %32, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %35, %"class.blink::SecurityOrigin"** %36, align 8
  %37 = icmp eq %"class.blink::SecurityOrigin"* %35, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %35, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %39) #9
  br label %40

40:                                               ; preds = %38, %31
  %41 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %32, i64 1
  %42 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %33, i64 1
  %43 = icmp eq %class.scoped_refptr.10* %42, %29
  br i1 %43, label %44, label %31

44:                                               ; preds = %40, %20
  %45 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 5
  %46 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %45, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  %49 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  store i32 0, i32* %49, align 8
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %60, label %51

51:                                               ; preds = %44
  %52 = zext i32 %47 to i64
  %53 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %52) #9
  %54 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %53, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %55 = ptrtoint i8* %54 to i64
  %56 = bitcast %"class.WTF::Vector.11"* %45 to i64*
  store atomic i64 %55, i64* %56 monotonic, align 8
  %57 = lshr i64 %53, 3
  %58 = trunc i64 %57 to i32
  store i32 %58, i32* %49, align 8
  %59 = bitcast i8* %54 to %"class.WTF::String"*
  br label %60

60:                                               ; preds = %51, %44
  %61 = phi %"class.WTF::String"* [ null, %44 ], [ %59, %51 ]
  %62 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 5, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 %63, i32* %64, align 4
  %65 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::String"*, %"class.WTF::String"** %65, align 8
  %67 = load i32, i32* %62, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 %68
  %70 = icmp eq i32 %67, 0
  br i1 %70, label %99, label %71

71:                                               ; preds = %60, %95
  %72 = phi %"class.WTF::String"* [ %96, %95 ], [ %61, %60 ]
  %73 = phi %"class.WTF::String"* [ %97, %95 ], [ %66, %60 ]
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %72, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %76, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #9
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %83
  tail call void @llvm.trap() #9
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %93, %78, %71
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %72, i64 1
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 1
  %98 = icmp eq %"class.WTF::String"* %97, %69
  br i1 %98, label %99, label %71

99:                                               ; preds = %95, %60
  %100 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 6, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %102, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %121

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #9
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %109
  tail call void @llvm.trap() #9
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %121

121:                                              ; preds = %99, %104, %119
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #4

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #9
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #9
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #9
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #9
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #9
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #9
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16FetchRequestDataEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16FetchRequestDataEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16FetchRequestDataEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16FetchRequestDataEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16FetchRequestDataEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16FetchRequestDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FetchRequestData"*
  tail call void @_ZNK5blink16FetchRequestData5TraceEPNS_7VisitorE(%"class.blink::FetchRequestData"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16FetchRequestDataEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FetchRequestData"*
  tail call void @_ZN5blink16FetchRequestDataD2Ev(%"class.blink::FetchRequestData"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16FetchRequestDataEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZN5blink17BlobBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::BlobBytesConsumer"*, %"class.blink::ExecutionContext"*, %"class.blink::BlobDataHandle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BytesConsumerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BytesConsumer"*
  %4 = bitcast i8* %1 to void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %5, i64 13
  %7 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13BytesConsumerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::BytesConsumer"*
  %3 = bitcast i8* %0 to void (%"class.blink::BytesConsumer"*)***
  %4 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %3, align 8
  %5 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %4, align 8
  tail call void %5(%"class.blink::BytesConsumer"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13BytesConsumerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink21FormDataBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::FormDataBytesConsumer"*, %"class.blink::ExecutionContext"*, %"class.blink::EncodedFormData"*) unnamed_addr #2

declare void @_ZN5blink21DataPipeBytesConsumerC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEEN4mojo16ScopedHandleBaseINS5_22DataPipeConsumerHandleEEEPPNS0_18CompletionNotifierE(%"class.blink::DataPipeBytesConsumer"*, %"class.base::SingleThreadTaskRunner"*, %"class.mojo::ScopedHandleBase.398"*, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"**) unnamed_addr #2

declare void @_ZN5blink16BodyStreamBufferC1EPNS_11ScriptStateEPNS_14ReadableStreamEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::BodyStreamBuffer"*, %"class.blink::ScriptState"*, %"class.blink::ReadableStream"*, %"class.blink::ScriptCachedMetadataHandler"*, %"class.blink::BlobDataHandle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"*, %"class.mojo::PendingRemote.378"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote.378", %"class.mojo::PendingRemote.378"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #9
  %10 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #9
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.585"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.585"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #9
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %17, align 8
  store %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* null, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %17, align 8
  %19 = icmp eq %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %18, null
  br i1 %19, label %52, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %18 to void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)***
  %22 = load void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)**, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)** %22, i64 1
  %24 = load void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)** %23, align 8
  call void %24(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* nonnull %18) #9
  br label %52

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::PendingRemote.378", %"class.mojo::PendingRemote.378"* %1, i64 0, i32 0
  %27 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %27, %"struct.mojo::internal::PendingRemoteState"* %26, %"class.base::SequencedTaskRunner"* %2) #9
  %28 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.585", %"class.std::__1::unique_ptr.585"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %29, align 8
  %31 = icmp eq %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %30, null
  br i1 %31, label %32, label %62

32:                                               ; preds = %25
  %33 = tail call i8* @_Znwm(i64 8) #10
  %34 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7network5mojom5blink38ChunkedDataPipeGetterResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = bitcast i8* %33 to %"class.mojo::MessageReceiver"*
  %36 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %27, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %35, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7network5mojom5blink21ChunkedDataPipeGetter5Name_E, i64 0, i64 0)) #9
  br i1 %36, label %37, label %62

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = bitcast %"class.mojo::InterfaceEndpointClient"** %38 to %"class.mojo::MessageReceiverWithResponder"**
  %40 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %39, align 8
  %41 = tail call i8* @_Znwm(i64 16) #10
  %42 = bitcast i8* %41 to %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*
  tail call void @_ZN7network5mojom5blink26ChunkedDataPipeGetterProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* nonnull %42, %"class.mojo::MessageReceiverWithResponder"* %40) #9
  %43 = ptrtoint i8* %41 to i64
  %44 = load %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %29, align 8
  %45 = bitcast %"class.std::__1::unique_ptr.585"* %28 to i64*
  store i64 %43, i64* %45, align 8
  %46 = icmp eq %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %44, null
  br i1 %46, label %62, label %47

47:                                               ; preds = %37
  %48 = bitcast %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %44 to void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)***
  %49 = load void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)**, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)** %49, i64 1
  %51 = load void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)** %50, align 8
  tail call void %51(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* nonnull %44) #9
  br label %62

52:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #9
  %53 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.405", %"class.base::RefCountedThreadSafe.405"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.405", %"class.base::RefCountedThreadSafe.405"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe.405"* %60 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %61) #9
  br label %62

62:                                               ; preds = %47, %37, %32, %25, %52, %54, %59
  ret void
}

declare void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"*, %"class.mojo::internal::InterfacePtrStateBase"*) local_unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"*, %"struct.mojo::internal::PendingRemoteState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #2

declare void @_ZN7network5mojom5blink26ChunkedDataPipeGetterProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink21ChunkedDataPipeGetterEE28set_connection_error_handlerEN4base12OnceCallbackIFvvEEE(%"class.mojo::internal::InterfacePtrState"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.585", %"class.std::__1::unique_ptr.585"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %5, align 8
  %7 = icmp eq %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %6, null
  br i1 %7, label %8, label %29

8:                                                ; preds = %2
  %9 = bitcast %"class.mojo::internal::InterfacePtrState"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  %10 = tail call i8* @_Znwm(i64 8) #10
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7network5mojom5blink38ChunkedDataPipeGetterResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = bitcast i8* %10 to %"class.mojo::MessageReceiver"*
  %13 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %9, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %12, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7network5mojom5blink21ChunkedDataPipeGetter5Name_E, i64 0, i64 0)) #9
  br i1 %13, label %14, label %29

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = bitcast %"class.mojo::InterfaceEndpointClient"** %15 to %"class.mojo::MessageReceiverWithResponder"**
  %17 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %16, align 8
  %18 = tail call i8* @_Znwm(i64 16) #10
  %19 = bitcast i8* %18 to %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*
  tail call void @_ZN7network5mojom5blink26ChunkedDataPipeGetterProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* nonnull %19, %"class.mojo::MessageReceiverWithResponder"* %17) #9
  %20 = ptrtoint i8* %18 to i64
  %21 = load %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %5, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.585"* %4 to i64*
  store i64 %20, i64* %22, align 8
  %23 = icmp eq %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %21, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %14
  %25 = bitcast %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %21 to void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)***
  %26 = load void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)**, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)** %26, i64 1
  %28 = load void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)** %27, align 8
  tail call void %28(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* nonnull %21) #9
  br label %29

29:                                               ; preds = %2, %8, %14, %24
  %30 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %30, align 8
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %34, i64* %35, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %32, align 8
  %36 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %31, i64 0, i32 17, i32 0
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %38 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %36, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %37) #9
  %39 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %31, i64 0, i32 18, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %39) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #9
  ret void
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21DataPipeBytesConsumer18CompletionNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::DataPipeBytesConsumer::CompletionNotifier"**
  %5 = load %"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DataPipeBytesConsumer::CompletionNotifier"*
  tail call void @_ZNK5blink21DataPipeBytesConsumer18CompletionNotifier5TraceEPNS_7VisitorE(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink21DataPipeBytesConsumer18CompletionNotifier5TraceEPNS_7VisitorE(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvN5blink10PersistentINS3_21DataPipeBytesConsumer18CompletionNotifierEEEEJS7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"class.blink::Persistent.595"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.blink::Persistent.595"*
  tail call void @_ZN4base8internal13FunctorTraitsIPFvN5blink10PersistentINS2_21DataPipeBytesConsumer18CompletionNotifierEEEEvE6InvokeIS8_JS6_EEEvOT_DpOT0_(void (%"class.blink::Persistent.595"*)** dereferenceable(8) %3, %"class.blink::Persistent.595"* dereferenceable(16) %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIPFvN5blink10PersistentINS2_21DataPipeBytesConsumer18CompletionNotifierEEEEvE6InvokeIS8_JS6_EEEvOT_DpOT0_(void (%"class.blink::Persistent.595"*)** dereferenceable(8), %"class.blink::Persistent.595"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::Persistent.595", align 8
  %4 = load void (%"class.blink::Persistent.595"*)*, void (%"class.blink::Persistent.595"*)** %0, align 8
  %5 = getelementptr inbounds %"class.blink::Persistent.595", %"class.blink::Persistent.595"* %3, i64 0, i32 0
  %6 = bitcast %"class.blink::Persistent.595"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.blink::Persistent.595"* %3 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::Persistent.595", %"class.blink::Persistent.595"* %3, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %9, align 8
  switch i64 %7, label %10 [
    i64 0, label %36
    i64 -1, label %36
  ]

10:                                               ; preds = %2
  %11 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %12 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %11, i64 0, i32 1
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #9
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17, !prof !2

15:                                               ; preds = %10
  %16 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %16) #9
  br label %17

17:                                               ; preds = %15, %10
  %18 = phi i8* [ %16, %15 ], [ %13, %10 ]
  %19 = bitcast i8* %18 to %"class.blink::ThreadState"**
  %20 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %23, align 8
  %25 = icmp eq %"class.blink::PersistentNode"* %24, null
  br i1 %25, label %26, label %29, !prof !2

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %22, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %27) #9
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %23, align 8
  br label %29

29:                                               ; preds = %26, %17
  %30 = phi %"class.blink::PersistentNode"* [ %28, %26 ], [ %24, %17 ]
  %31 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.blink::PersistentRegion"* %22 to i64*
  store i64 %32, i64* %33, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to %"class.blink::PersistentBase.596"**
  store %"class.blink::PersistentBase.596"* %5, %"class.blink::PersistentBase.596"** %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21DataPipeBytesConsumer18CompletionNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %9, align 8
  br label %36

36:                                               ; preds = %2, %2, %29
  call void %4(%"class.blink::Persistent.595"* nonnull %3) #9
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %9, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %36
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #9
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #9
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %9, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %9, align 8
  br label %58

58:                                               ; preds = %36, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvN5blink10PersistentINS2_21DataPipeBytesConsumer18CompletionNotifierEEEEJS6_EEC2IRS7_JS6_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, void (%"class.blink::Persistent.595"*)*, %"class.blink::Persistent.595"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvN5blink10PersistentINS2_21DataPipeBytesConsumer18CompletionNotifierEEEEJS6_EE7DestroyEPKNS0_13BindStateBaseE) #9
  %6 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1
  store void (%"class.blink::Persistent.595"*)* %2, void (%"class.blink::Persistent.595"*)** %6, align 8
  %7 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.blink::Persistent.595"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::tuple"* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %12, align 8
  switch i64 %10, label %13 [
    i64 0, label %39
    i64 -1, label %39
  ]

13:                                               ; preds = %4
  %14 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %15 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %14, i64 0, i32 1
  %16 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %15) #9
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %13
  %19 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %15, i8* %19) #9
  br label %20

20:                                               ; preds = %18, %13
  %21 = phi i8* [ %19, %18 ], [ %16, %13 ]
  %22 = bitcast i8* %21 to %"class.blink::ThreadState"**
  %23 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %26, align 8
  %28 = icmp eq %"class.blink::PersistentNode"* %27, null
  br i1 %28, label %29, label %32, !prof !2

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %25, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %30) #9
  %31 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %26, align 8
  br label %32

32:                                               ; preds = %29, %20
  %33 = phi %"class.blink::PersistentNode"* [ %31, %29 ], [ %27, %20 ]
  %34 = bitcast %"class.blink::PersistentNode"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.blink::PersistentRegion"* %25 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast %"class.blink::PersistentNode"* %33 to %"class.blink::PersistentBase.596"**
  store %"class.blink::PersistentBase.596"* %8, %"class.blink::PersistentBase.596"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %33, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21DataPipeBytesConsumer18CompletionNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %38, align 8
  store %"class.blink::PersistentNode"* %33, %"class.blink::PersistentNode"** %12, align 8
  br label %39

39:                                               ; preds = %4, %4, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvN5blink10PersistentINS2_21DataPipeBytesConsumer18CompletionNotifierEEEEJS6_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #9
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #9
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS3_14default_deleteISB_EEEEN5blink10PersistentINSF_21DataPipeBytesConsumer18CompletionNotifierEEEimEJSE_SJ_EEEFvimEE7RunOnceEPNS0_13BindStateBaseEim(%"class.base::internal::BindStateBase"*, i32, i64) #0 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  store i32 %1, i32* %4, align 4
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %7 = bitcast %"class.base::internal::BindStateBase"* %6 to void (%"class.mojo::Remote"*, %"class.blink::Persistent.595"*, i32, i64)**
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to %"class.std::__1::unique_ptr.421"*
  %10 = getelementptr inbounds void ()*, void ()** %8, i64 1
  %11 = bitcast void ()** %10 to %"class.blink::Persistent.595"*
  call void @_ZN4base8internal13FunctorTraitsIPFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS2_14default_deleteISA_EEEEN5blink10PersistentINSE_21DataPipeBytesConsumer18CompletionNotifierEEEimEvE6InvokeISK_JSD_SI_imEEEvOT_DpOT0_(void (%"class.mojo::Remote"*, %"class.blink::Persistent.595"*, i32, i64)** dereferenceable(8) %7, %"class.std::__1::unique_ptr.421"* dereferenceable(8) %9, %"class.blink::Persistent.595"* dereferenceable(16) %11, i32* nonnull dereferenceable(4) %4, i64* nonnull dereferenceable(8) %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIPFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS2_14default_deleteISA_EEEEN5blink10PersistentINSE_21DataPipeBytesConsumer18CompletionNotifierEEEimEvE6InvokeISK_JSD_SI_imEEEvOT_DpOT0_(void (%"class.mojo::Remote"*, %"class.blink::Persistent.595"*, i32, i64)** dereferenceable(8), %"class.std::__1::unique_ptr.421"* dereferenceable(8), %"class.blink::Persistent.595"* dereferenceable(16), i32* dereferenceable(4), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.blink::Persistent.595", align 8
  %7 = load void (%"class.mojo::Remote"*, %"class.blink::Persistent.595"*, i32, i64)*, void (%"class.mojo::Remote"*, %"class.blink::Persistent.595"*, i32, i64)** %0, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.421", %"class.std::__1::unique_ptr.421"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.mojo::Remote"*, %"class.mojo::Remote"** %8, align 8
  store %"class.mojo::Remote"* null, %"class.mojo::Remote"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Persistent.595", %"class.blink::Persistent.595"* %6, i64 0, i32 0
  %11 = bitcast %"class.blink::Persistent.595"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::Persistent.595"* %6 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::Persistent.595", %"class.blink::Persistent.595"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  switch i64 %12, label %15 [
    i64 0, label %41
    i64 -1, label %41
  ]

15:                                               ; preds = %5
  %16 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %17 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %16, i64 0, i32 1
  %18 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %17) #9
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %22, !prof !2

20:                                               ; preds = %15
  %21 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %17, i8* %21) #9
  br label %22

22:                                               ; preds = %20, %15
  %23 = phi i8* [ %21, %20 ], [ %18, %15 ]
  %24 = bitcast i8* %23 to %"class.blink::ThreadState"**
  %25 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %25, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %31, label %34, !prof !2

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %27, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %32) #9
  %33 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  br label %34

34:                                               ; preds = %31, %22
  %35 = phi %"class.blink::PersistentNode"* [ %33, %31 ], [ %29, %22 ]
  %36 = bitcast %"class.blink::PersistentNode"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.blink::PersistentRegion"* %27 to i64*
  store i64 %37, i64* %38, align 8
  %39 = bitcast %"class.blink::PersistentNode"* %35 to %"class.blink::PersistentBase.596"**
  store %"class.blink::PersistentBase.596"* %10, %"class.blink::PersistentBase.596"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %35, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21DataPipeBytesConsumer18CompletionNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %40, align 8
  store %"class.blink::PersistentNode"* %35, %"class.blink::PersistentNode"** %14, align 8
  br label %41

41:                                               ; preds = %5, %5, %34
  %42 = load i32, i32* %3, align 4
  %43 = load i64, i64* %4, align 8
  call void %7(%"class.mojo::Remote"* %9, %"class.blink::Persistent.595"* nonnull %6, i32 %42, i64 %43) #9
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %41
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #9
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %46
  %52 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #9
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %65

65:                                               ; preds = %41, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS2_14default_deleteISA_EEEEN5blink10PersistentINSE_21DataPipeBytesConsumer18CompletionNotifierEEEimEJSD_SI_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to %"struct.base::internal::BindState.659"*
  tail call void @_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS2_14default_deleteISA_EEEEN5blink10PersistentINSE_21DataPipeBytesConsumer18CompletionNotifierEEEimEJSD_SI_EED2Ev(%"struct.base::internal::BindState.659"* nonnull %4) #9
  %5 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #10
  br label %6

6:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS2_14default_deleteISA_EEEEN5blink10PersistentINSE_21DataPipeBytesConsumer18CompletionNotifierEEEimEJSD_SI_EED2Ev(%"struct.base::internal::BindState.659"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::BindState.659", %"struct.base::internal::BindState.659"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #9
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %12, %1
  %25 = getelementptr inbounds %"struct.base::internal::BindState.659", %"struct.base::internal::BindState.659"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.mojo::Remote"*, %"class.mojo::Remote"** %25, align 8
  store %"class.mojo::Remote"* null, %"class.mojo::Remote"** %25, align 8
  %27 = icmp eq %"class.mojo::Remote"* %26, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %29, align 8
  store %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* null, %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"** %29, align 8
  %31 = icmp eq %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* %30 to void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)***
  %34 = load void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)**, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)** %34, i64 1
  %36 = load void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"*)** %35, align 8
  tail call void %36(%"class.network::mojom::blink::ChunkedDataPipeGetterProxy"* nonnull %30) #9
  br label %37

37:                                               ; preds = %32, %28
  %38 = bitcast %"class.mojo::Remote"* %26 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %38) #9
  %39 = bitcast %"class.mojo::Remote"* %26 to i8*
  tail call void @_ZdlPv(i8* %39) #10
  br label %40

40:                                               ; preds = %24, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink16URLLoaderFactoryEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState.608"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.608", %"class.mojo::internal::InterfacePtrState.608"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.609", %"class.std::__1::unique_ptr.609"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %3, align 8
  %5 = icmp eq %"class.network::mojom::blink::URLLoaderFactoryProxy"* %4, null
  br i1 %5, label %6, label %27

6:                                                ; preds = %1
  %7 = bitcast %"class.mojo::internal::InterfacePtrState.608"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  %8 = tail call i8* @_Znwm(i64 8) #10
  %9 = bitcast i8* %8 to %"class.mojo::PassThroughFilter"*
  tail call void @_ZN4mojo17PassThroughFilterC1Ev(%"class.mojo::PassThroughFilter"* nonnull %9) #9
  %10 = bitcast i8* %8 to %"class.mojo::MessageReceiver"*
  %11 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %7, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7network5mojom5blink16URLLoaderFactory5Name_E, i64 0, i64 0)) #9
  br i1 %11, label %12, label %27

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.608", %"class.mojo::internal::InterfacePtrState.608"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = bitcast %"class.mojo::InterfaceEndpointClient"** %13 to %"class.mojo::MessageReceiverWithResponder"**
  %15 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %14, align 8
  %16 = tail call i8* @_Znwm(i64 16) #10
  %17 = bitcast i8* %16 to %"class.network::mojom::blink::URLLoaderFactoryProxy"*
  tail call void @_ZN7network5mojom5blink21URLLoaderFactoryProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::URLLoaderFactoryProxy"* nonnull %17, %"class.mojo::MessageReceiverWithResponder"* %15) #9
  %18 = ptrtoint i8* %16 to i64
  %19 = load %"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %3, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.609"* %2 to i64*
  store i64 %18, i64* %20, align 8
  %21 = icmp eq %"class.network::mojom::blink::URLLoaderFactoryProxy"* %19, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %12
  %23 = bitcast %"class.network::mojom::blink::URLLoaderFactoryProxy"* %19 to void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)***
  %24 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)**, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %24, i64 1
  %26 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %25, align 8
  tail call void %26(%"class.network::mojom::blink::URLLoaderFactoryProxy"* nonnull %19) #9
  br label %27

27:                                               ; preds = %1, %12, %22, %6
  ret void
}

declare void @_ZN4mojo17PassThroughFilterC1Ev(%"class.mojo::PassThroughFilter"*) unnamed_addr #2

declare void @_ZN7network5mojom5blink21URLLoaderFactoryProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN7network5mojom5blink16URLLoaderFactoryEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver"* noalias sret, %"class.mojo::Remote.607"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = alloca %"class.mojo::ScopedHandleBase", align 4
  %6 = alloca %"class.mojo::MessagePipeHandle", align 4
  %7 = alloca %"class.mojo::MessagePipeHandle", align 4
  %8 = alloca %"class.mojo::PendingRemote.673", align 4
  %9 = bitcast %"class.mojo::MessagePipeHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = bitcast %"class.mojo::MessagePipeHandle"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %12, align 4
  %13 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %10, i32* nonnull %12) #9
  %14 = load i32, i32* %10, align 4
  %15 = load i32, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #9
  %16 = bitcast %"class.mojo::ScopedHandleBase"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  %17 = getelementptr inbounds %"class.mojo::PendingRemote.673", %"class.mojo::PendingRemote.673"* %8, i64 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 %14, i32* %18, align 4, !alias.scope !35
  call void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"* nonnull %17, %"class.mojo::ScopedHandleBase"* nonnull %5, i32 0) #9
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = call i32 @MojoClose(i32 %19) #9
  br label %23

23:                                               ; preds = %21, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @_ZN4mojo6RemoteIN7network5mojom5blink16URLLoaderFactoryEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote.607"* %1, %"class.mojo::PendingRemote.673"* nonnull %8, %"class.base::SequencedTaskRunner"* %2)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %17) #9
  %24 = bitcast %"class.mojo::ScopedHandleBase"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24)
  %25 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %0, i64 0, i32 0
  %26 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 %15, i32* %26, align 4, !alias.scope !38
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* %25, %"class.mojo::ScopedHandleBase"* nonnull %4) #9
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = call i32 @MojoClose(i32 %27) #9
  br label %31

31:                                               ; preds = %23, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN7network5mojom5blink16URLLoaderFactoryEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote.607"*, %"class.mojo::PendingRemote.673"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState.608", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote.673", %"class.mojo::PendingRemote.673"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState.608"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #9
  %10 = bitcast %"class.mojo::internal::InterfacePtrState.608"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #9
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.608", %"class.mojo::internal::InterfacePtrState.608"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.609"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote.607", %"class.mojo::Remote.607"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.609"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote.607"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #9
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.608", %"class.mojo::internal::InterfacePtrState.608"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %17, align 8
  store %"class.network::mojom::blink::URLLoaderFactoryProxy"* null, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %17, align 8
  %19 = icmp eq %"class.network::mojom::blink::URLLoaderFactoryProxy"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.network::mojom::blink::URLLoaderFactoryProxy"* %18 to void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)***
  %22 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)**, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %22, i64 1
  %24 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %23, align 8
  call void %24(%"class.network::mojom::blink::URLLoaderFactoryProxy"* nonnull %18) #9
  br label %29

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::Remote.607", %"class.mojo::Remote.607"* %0, i64 0, i32 0
  %27 = getelementptr inbounds %"class.mojo::PendingRemote.673", %"class.mojo::PendingRemote.673"* %1, i64 0, i32 0
  %28 = bitcast %"class.mojo::Remote.607"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %28, %"struct.mojo::internal::PendingRemoteState"* %27, %"class.base::SequencedTaskRunner"* %2) #9
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink16URLLoaderFactoryEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState.608"* %26) #9
  br label %39

29:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #9
  %30 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe.405", %"class.base::RefCountedThreadSafe.405"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.405", %"class.base::RefCountedThreadSafe.405"* %32, i64 -2
  %38 = bitcast %"class.base::RefCountedThreadSafe.405"* %37 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %38) #9
  br label %39

39:                                               ; preds = %25, %29, %31, %36
  ret void
}

declare i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions*, i32*, i32*) local_unnamed_addr #2

declare void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"*, %"class.mojo::ScopedHandleBase"*, i32) unnamed_addr #2

declare void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"*, %"class.mojo::ScopedHandleBase"*) unnamed_addr #2

declare void @_ZN5blink15FetchHeaderListC1Ev(%"class.blink::FetchHeaderList"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15FetchHeaderListEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FetchHeaderListEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15FetchHeaderListEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FetchHeaderListEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FetchHeaderListEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15FetchHeaderListEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15FetchHeaderListEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FetchHeaderList"*
  tail call void @_ZN5blink15FetchHeaderListD1Ev(%"class.blink::FetchHeaderList"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15FetchHeaderListEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind
declare void @_ZN5blink15FetchHeaderListD1Ev(%"class.blink::FetchHeaderList"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS1_19HeapMojoWrapperModeE0EE7WrapperEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContextLifecycleObserver"*
  tail call void @_ZNK5blink24ContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleObserver"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 16
  %4 = getelementptr inbounds i8, i8* %0, i64 56
  %5 = bitcast i8* %4 to %"class.network::mojom::blink::URLLoaderFactoryProxy"**
  %6 = load %"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %5, align 8
  store %"class.network::mojom::blink::URLLoaderFactoryProxy"* null, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %5, align 8
  %7 = icmp eq %"class.network::mojom::blink::URLLoaderFactoryProxy"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.network::mojom::blink::URLLoaderFactoryProxy"* %6 to void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)***
  %10 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)**, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %10, i64 1
  %12 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %11, align 8
  tail call void %12(%"class.network::mojom::blink::URLLoaderFactoryProxy"* nonnull %6) #9
  br label %13

13:                                               ; preds = %1, %8
  %14 = bitcast i8* %3 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %14) #9
  %15 = bitcast i8* %0 to %"class.blink::ContextLifecycleObserver"*
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %15) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7Wrapper5TraceEPNS_7VisitorE(%"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0
  tail call void @_ZNK5blink24ContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleObserver"* %3, %"class.blink::Visitor"* %1) #9
  ret void
}

declare void @_ZNK5blink24ContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleObserver"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperD2Ev(%"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %4, align 8
  store %"class.network::mojom::blink::URLLoaderFactoryProxy"* null, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %4, align 8
  %6 = icmp eq %"class.network::mojom::blink::URLLoaderFactoryProxy"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.network::mojom::blink::URLLoaderFactoryProxy"* %5 to void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)***
  %9 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)**, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %9, i64 1
  %11 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %10, align 8
  tail call void %11(%"class.network::mojom::blink::URLLoaderFactoryProxy"* nonnull %5) #9
  br label %12

12:                                               ; preds = %1, %7
  %13 = bitcast %"class.mojo::Remote.607"* %3 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %13) #9
  %14 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %14) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperD0Ev(%"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %4, align 8
  store %"class.network::mojom::blink::URLLoaderFactoryProxy"* null, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %4, align 8
  %6 = icmp eq %"class.network::mojom::blink::URLLoaderFactoryProxy"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.network::mojom::blink::URLLoaderFactoryProxy"* %5 to void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)***
  %9 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)**, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %9, i64 1
  %11 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %10, align 8
  tail call void %11(%"class.network::mojom::blink::URLLoaderFactoryProxy"* nonnull %5) #9
  br label %12

12:                                               ; preds = %1, %7
  %13 = bitcast %"class.mojo::Remote.607"* %3 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %13) #9
  %14 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %14) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24ContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE7Wrapper16ContextDestroyedEv(%"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.mojo::internal::InterfacePtrState.608", align 8
  %3 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 1
  %4 = bitcast %"class.mojo::internal::InterfacePtrState.608"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false) #9
  %5 = bitcast %"class.mojo::internal::InterfacePtrState.608"* %2 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %5) #9
  %6 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.608", %"class.mojo::internal::InterfacePtrState.608"* %2, i64 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.609"* %6 to i64*
  %8 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.609"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %7, align 8
  store i64 0, i64* %9, align 8
  %11 = bitcast %"class.mojo::Remote.607"* %3 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %11, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %5) #9
  %12 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.608", %"class.mojo::internal::InterfacePtrState.608"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %12, align 8
  store %"class.network::mojom::blink::URLLoaderFactoryProxy"* null, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %12, align 8
  %14 = icmp eq %"class.network::mojom::blink::URLLoaderFactoryProxy"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.network::mojom::blink::URLLoaderFactoryProxy"* %13 to void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)***
  %17 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)**, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %17, i64 1
  %19 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %18, align 8
  call void %19(%"class.network::mojom::blink::URLLoaderFactoryProxy"* nonnull %13) #9
  br label %20

20:                                               ; preds = %1, %15
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #9
  ret void
}

declare void @_ZN5blink24ContextLifecycleObserver27SetContextLifecycleNotifierEPNS_24ContextLifecycleNotifierE(%"class.blink::ContextLifecycleObserver"*, %"class.blink::ContextLifecycleNotifier"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16BodyStreamBufferEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BodyStreamBuffer"*
  tail call void @_ZNK5blink16BodyStreamBuffer5TraceEPNS_7VisitorE(%"class.blink::BodyStreamBuffer"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink16BodyStreamBuffer5TraceEPNS_7VisitorE(%"class.blink::BodyStreamBuffer"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!5 = distinct !{!5, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink22WrapPersistentInternalINS_21DataPipeBytesConsumer18CompletionNotifierEEENS_10PersistentIT_EEPS4_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink22WrapPersistentInternalINS_21DataPipeBytesConsumer18CompletionNotifierEEENS_10PersistentIT_EEPS4_"}
!9 = !{!10, !12, !14}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvN5blink10PersistentINS3_21DataPipeBytesConsumer18CompletionNotifierEEEEJS7_EEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvN5blink10PersistentINS3_21DataPipeBytesConsumer18CompletionNotifierEEEEJS7_EEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIRFvN5blink10PersistentINS1_21DataPipeBytesConsumer18CompletionNotifierEEEEJS5_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIRFvN5blink10PersistentINS1_21DataPipeBytesConsumer18CompletionNotifierEEEEJS5_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!14 = distinct !{!14, !15, !"_ZN3WTF4BindIRFvN5blink10PersistentINS1_21DataPipeBytesConsumer18CompletionNotifierEEEEJS5_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF4BindIRFvN5blink10PersistentINS1_21DataPipeBytesConsumer18CompletionNotifierEEEEJS5_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!16 = !{i8 0, i8 2}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink22WrapPersistentInternalINS_21DataPipeBytesConsumer18CompletionNotifierEEENS_10PersistentIT_EEPS4_: argument 0"}
!19 = distinct !{!19, !"_ZN5blink22WrapPersistentInternalINS_21DataPipeBytesConsumer18CompletionNotifierEEENS_10PersistentIT_EEPS4_"}
!20 = !{!21, !23, !25}
!21 = distinct !{!21, !22, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS3_14default_deleteISB_EEEEN5blink10PersistentINSF_21DataPipeBytesConsumer18CompletionNotifierEEEimEJSE_SJ_EEEDcOT0_DpOT1_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS3_14default_deleteISB_EEEEN5blink10PersistentINSF_21DataPipeBytesConsumer18CompletionNotifierEEEimEJSE_SJ_EEEDcOT0_DpOT1_"}
!23 = distinct !{!23, !24, !"_ZN4base8BindOnceIRFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS1_14default_deleteIS9_EEEEN5blink10PersistentINSD_21DataPipeBytesConsumer18CompletionNotifierEEEimEJSC_SH_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8BindOnceIRFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS1_14default_deleteIS9_EEEEN5blink10PersistentINSD_21DataPipeBytesConsumer18CompletionNotifierEEEimEJSC_SH_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!25 = distinct !{!25, !26, !"_ZN3WTF4BindIRFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS1_14default_deleteIS9_EEEEN5blink10PersistentINSD_21DataPipeBytesConsumer18CompletionNotifierEEEimEJSC_SH_EFvimEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZN3WTF4BindIRFvNSt3__110unique_ptrIN4mojo6RemoteIN7network5mojom5blink21ChunkedDataPipeGetterEEENS1_14default_deleteIS9_EEEEN5blink10PersistentINSD_21DataPipeBytesConsumer18CompletionNotifierEEEimEJSC_SH_EFvimEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv: argument 0"}
!29 = distinct !{!29, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE: argument 0"}
!32 = distinct !{!32, !"_ZN5blink14HeapMojoRemoteIN7network5mojom5blink16URLLoaderFactoryELNS_19HeapMojoWrapperModeE0EE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE"}
!33 = !{i32 24, i32 33}
!34 = !{!"branch_weights", i32 2000, i32 1}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!37 = distinct !{!37, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!40 = distinct !{!40, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
