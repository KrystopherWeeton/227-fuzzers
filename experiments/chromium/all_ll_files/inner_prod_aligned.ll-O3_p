; ModuleID = '../../third_party/opus/src/silk/inner_prod_aligned.c'
source_filename = "../../third_party/opus/src/silk/inner_prod_aligned.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @silk_inner_prod_aligned_scale(i16* nocapture readonly, i16* nocapture readonly, i32, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %68

6:                                                ; preds = %4
  %7 = zext i32 %3 to i64
  %8 = icmp ult i32 %3, 8
  br i1 %8, label %51, label %9

9:                                                ; preds = %6
  %10 = and i64 %7, 4294967288
  %11 = insertelement <4 x i32> undef, i32 %2, i32 0
  %12 = shufflevector <4 x i32> %11, <4 x i32> undef, <4 x i32> zeroinitializer
  %13 = insertelement <4 x i32> undef, i32 %2, i32 0
  %14 = shufflevector <4 x i32> %13, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %15

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %41, %15 ]
  %17 = phi <4 x i32> [ zeroinitializer, %9 ], [ %39, %15 ]
  %18 = phi <4 x i32> [ zeroinitializer, %9 ], [ %40, %15 ]
  %19 = getelementptr inbounds i16, i16* %0, i64 %16
  %20 = bitcast i16* %19 to <4 x i16>*
  %21 = load <4 x i16>, <4 x i16>* %20, align 2
  %22 = getelementptr inbounds i16, i16* %19, i64 4
  %23 = bitcast i16* %22 to <4 x i16>*
  %24 = load <4 x i16>, <4 x i16>* %23, align 2
  %25 = sext <4 x i16> %21 to <4 x i32>
  %26 = sext <4 x i16> %24 to <4 x i32>
  %27 = getelementptr inbounds i16, i16* %1, i64 %16
  %28 = bitcast i16* %27 to <4 x i16>*
  %29 = load <4 x i16>, <4 x i16>* %28, align 2
  %30 = getelementptr inbounds i16, i16* %27, i64 4
  %31 = bitcast i16* %30 to <4 x i16>*
  %32 = load <4 x i16>, <4 x i16>* %31, align 2
  %33 = sext <4 x i16> %29 to <4 x i32>
  %34 = sext <4 x i16> %32 to <4 x i32>
  %35 = mul nsw <4 x i32> %33, %25
  %36 = mul nsw <4 x i32> %34, %26
  %37 = ashr <4 x i32> %35, %12
  %38 = ashr <4 x i32> %36, %14
  %39 = add nsw <4 x i32> %37, %17
  %40 = add nsw <4 x i32> %38, %18
  %41 = add i64 %16, 8
  %42 = icmp eq i64 %41, %10
  br i1 %42, label %43, label %15, !llvm.loop !2

43:                                               ; preds = %15
  %44 = add <4 x i32> %40, %39
  %45 = shufflevector <4 x i32> %44, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %46 = add <4 x i32> %44, %45
  %47 = shufflevector <4 x i32> %46, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %48 = add <4 x i32> %46, %47
  %49 = extractelement <4 x i32> %48, i32 0
  %50 = icmp eq i64 %10, %7
  br i1 %50, label %68, label %51

51:                                               ; preds = %43, %6
  %52 = phi i64 [ 0, %6 ], [ %10, %43 ]
  %53 = phi i32 [ 0, %6 ], [ %49, %43 ]
  br label %54

54:                                               ; preds = %51, %54
  %55 = phi i64 [ %66, %54 ], [ %52, %51 ]
  %56 = phi i32 [ %65, %54 ], [ %53, %51 ]
  %57 = getelementptr inbounds i16, i16* %0, i64 %55
  %58 = load i16, i16* %57, align 2
  %59 = sext i16 %58 to i32
  %60 = getelementptr inbounds i16, i16* %1, i64 %55
  %61 = load i16, i16* %60, align 2
  %62 = sext i16 %61 to i32
  %63 = mul nsw i32 %62, %59
  %64 = ashr i32 %63, %2
  %65 = add nsw i32 %64, %56
  %66 = add nuw nsw i64 %55, 1
  %67 = icmp eq i64 %66, %7
  br i1 %67, label %68, label %54, !llvm.loop !4

68:                                               ; preds = %54, %43, %4
  %69 = phi i32 [ 0, %4 ], [ %49, %43 ], [ %65, %54 ]
  ret i32 %69
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
