; ModuleID = '../../gpu/config/gpu_driver_bug_workarounds.cc'
source_filename = "../../gpu/config/gpu_driver_bug_workarounds.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.gpu::GpuDriverBugWorkarounds" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN3gpu23GpuDriverBugWorkaroundsC1Ev = hidden unnamed_addr alias void (%"class.gpu::GpuDriverBugWorkarounds"*), void (%"class.gpu::GpuDriverBugWorkarounds"*)* @_ZN3gpu23GpuDriverBugWorkaroundsC2Ev
@_ZN3gpu23GpuDriverBugWorkaroundsC1ERKNSt3__16vectorIiNS1_9allocatorIiEEEE = hidden unnamed_addr alias void (%"class.gpu::GpuDriverBugWorkarounds"*, %"class.std::__1::vector"*), void (%"class.gpu::GpuDriverBugWorkarounds"*, %"class.std::__1::vector"*)* @_ZN3gpu23GpuDriverBugWorkaroundsC2ERKNSt3__16vectorIiNS1_9allocatorIiEEEE
@_ZN3gpu23GpuDriverBugWorkaroundsC1ERKS0_ = hidden unnamed_addr alias void (%"class.gpu::GpuDriverBugWorkarounds"*, %"class.gpu::GpuDriverBugWorkarounds"*), void (%"class.gpu::GpuDriverBugWorkarounds"*, %"class.gpu::GpuDriverBugWorkarounds"*)* @_ZN3gpu23GpuDriverBugWorkaroundsC2ERKS0_
@_ZN3gpu23GpuDriverBugWorkaroundsD1Ev = hidden unnamed_addr alias void (%"class.gpu::GpuDriverBugWorkarounds"*), void (%"class.gpu::GpuDriverBugWorkarounds"*)* @_ZN3gpu23GpuDriverBugWorkaroundsD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu23GpuDriverBugWorkaroundsC2Ev(%"class.gpu::GpuDriverBugWorkarounds"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 134
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 135
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 136
  store i32 0, i32* %5, align 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 134, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu23GpuDriverBugWorkaroundsC2ERKNSt3__16vectorIiNS1_9allocatorIiEEEE(%"class.gpu::GpuDriverBugWorkarounds"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 7
  %11 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 8
  %12 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 9
  %13 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 10
  %14 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 11
  %15 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 12
  %16 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 13
  %17 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 14
  %18 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 15
  %19 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 16
  %20 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 17
  %21 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 18
  %22 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 19
  %23 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 20
  %24 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 21
  %25 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 22
  %26 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 23
  %27 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 24
  %28 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 25
  %29 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 26
  %30 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 27
  %31 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 28
  %32 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 29
  %33 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 30
  %34 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 31
  %35 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 32
  %36 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 33
  %37 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 34
  %38 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 35
  %39 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 36
  %40 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 37
  %41 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 38
  %42 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 39
  %43 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 40
  %44 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 41
  %45 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 42
  %46 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 43
  %47 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 44
  %48 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 45
  %49 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 46
  %50 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 47
  %51 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 48
  %52 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 49
  %53 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 50
  %54 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 51
  %55 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 52
  %56 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 53
  %57 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 54
  %58 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 55
  %59 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 56
  %60 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 57
  %61 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 58
  %62 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 59
  %63 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 60
  %64 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 61
  %65 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 62
  %66 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 63
  %67 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 64
  %68 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 65
  %69 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 66
  %70 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 67
  %71 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 68
  %72 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 69
  %73 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 70
  %74 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 71
  %75 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 72
  %76 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 73
  %77 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 74
  %78 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 75
  %79 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 76
  %80 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 77
  %81 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 78
  %82 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 79
  %83 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 80
  %84 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 81
  %85 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 82
  %86 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 83
  %87 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 84
  %88 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 85
  %89 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 86
  %90 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 87
  %91 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 88
  %92 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 89
  %93 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 90
  %94 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 91
  %95 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 92
  %96 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 93
  %97 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 94
  %98 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 95
  %99 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 96
  %100 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 97
  %101 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 98
  %102 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 99
  %103 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 100
  %104 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 101
  %105 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 102
  %106 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 103
  %107 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 104
  %108 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 105
  %109 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 106
  %110 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 107
  %111 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 108
  %112 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 109
  %113 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 110
  %114 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 111
  %115 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 112
  %116 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 113
  %117 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 114
  %118 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 115
  %119 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 116
  %120 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 117
  %121 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 118
  %122 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 119
  %123 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 120
  %124 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 121
  %125 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 122
  %126 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 123
  %127 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 124
  %128 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 125
  %129 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 126
  %130 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 127
  %131 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 128
  %132 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 129
  %133 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 130
  %134 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 131
  %135 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 132
  %136 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 133
  %137 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 134
  store i32 0, i32* %137, align 4
  %138 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 135
  store i32 0, i32* %138, align 4
  %139 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 136
  store i32 0, i32* %139, align 4
  %140 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 134, i1 false)
  %141 = load i32*, i32** %140, align 8
  %142 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %143 = load i32*, i32** %142, align 8
  %144 = icmp eq i32* %141, %143
  br i1 %144, label %290, label %147

145:                                              ; preds = %285
  %146 = icmp eq i8 %286, 0
  br i1 %146, label %290, label %289

147:                                              ; preds = %2, %285
  %148 = phi i8 [ %286, %285 ], [ 0, %2 ]
  %149 = phi i32* [ %287, %285 ], [ %141, %2 ]
  %150 = load i32, i32* %149, align 4
  switch i32 %150, label %285 [
    i32 0, label %151
    i32 1, label %152
    i32 2, label %153
    i32 3, label %154
    i32 4, label %155
    i32 5, label %156
    i32 6, label %157
    i32 7, label %158
    i32 8, label %159
    i32 9, label %160
    i32 10, label %161
    i32 11, label %162
    i32 12, label %163
    i32 13, label %164
    i32 14, label %165
    i32 15, label %166
    i32 16, label %167
    i32 17, label %168
    i32 18, label %169
    i32 19, label %170
    i32 20, label %171
    i32 21, label %172
    i32 22, label %173
    i32 23, label %174
    i32 24, label %175
    i32 25, label %176
    i32 26, label %177
    i32 27, label %178
    i32 28, label %179
    i32 29, label %180
    i32 30, label %181
    i32 31, label %182
    i32 32, label %183
    i32 33, label %184
    i32 34, label %185
    i32 35, label %186
    i32 36, label %187
    i32 37, label %188
    i32 38, label %189
    i32 39, label %190
    i32 40, label %191
    i32 41, label %192
    i32 42, label %193
    i32 43, label %194
    i32 44, label %195
    i32 45, label %196
    i32 46, label %197
    i32 47, label %198
    i32 48, label %199
    i32 49, label %200
    i32 50, label %201
    i32 51, label %202
    i32 52, label %203
    i32 53, label %204
    i32 54, label %205
    i32 55, label %206
    i32 56, label %207
    i32 57, label %208
    i32 58, label %209
    i32 59, label %210
    i32 60, label %211
    i32 61, label %212
    i32 62, label %213
    i32 63, label %214
    i32 64, label %215
    i32 65, label %216
    i32 66, label %217
    i32 67, label %218
    i32 68, label %219
    i32 69, label %220
    i32 70, label %221
    i32 71, label %222
    i32 72, label %223
    i32 73, label %224
    i32 74, label %225
    i32 75, label %226
    i32 76, label %227
    i32 77, label %228
    i32 78, label %229
    i32 79, label %230
    i32 80, label %231
    i32 81, label %232
    i32 82, label %233
    i32 83, label %234
    i32 84, label %235
    i32 85, label %236
    i32 86, label %237
    i32 87, label %238
    i32 88, label %239
    i32 89, label %240
    i32 90, label %241
    i32 91, label %242
    i32 92, label %243
    i32 93, label %244
    i32 94, label %245
    i32 95, label %246
    i32 96, label %247
    i32 97, label %248
    i32 98, label %249
    i32 99, label %250
    i32 100, label %251
    i32 101, label %252
    i32 102, label %253
    i32 103, label %254
    i32 104, label %255
    i32 105, label %256
    i32 106, label %257
    i32 107, label %258
    i32 108, label %259
    i32 109, label %260
    i32 110, label %261
    i32 111, label %262
    i32 112, label %263
    i32 113, label %264
    i32 114, label %265
    i32 115, label %266
    i32 116, label %267
    i32 117, label %268
    i32 118, label %269
    i32 119, label %270
    i32 120, label %271
    i32 121, label %272
    i32 122, label %273
    i32 123, label %274
    i32 124, label %275
    i32 125, label %276
    i32 126, label %277
    i32 127, label %278
    i32 128, label %279
    i32 129, label %280
    i32 130, label %281
    i32 131, label %282
    i32 132, label %283
    i32 133, label %284
  ]

151:                                              ; preds = %147
  store i8 1, i8* %3, align 4
  br label %285

152:                                              ; preds = %147
  store i8 1, i8* %4, align 1
  br label %285

153:                                              ; preds = %147
  store i8 1, i8* %5, align 2
  br label %285

154:                                              ; preds = %147
  store i8 1, i8* %6, align 1
  br label %285

155:                                              ; preds = %147
  store i8 1, i8* %7, align 4
  br label %285

156:                                              ; preds = %147
  store i8 1, i8* %8, align 1
  br label %285

157:                                              ; preds = %147
  store i8 1, i8* %9, align 2
  br label %285

158:                                              ; preds = %147
  store i8 1, i8* %10, align 1
  br label %285

159:                                              ; preds = %147
  store i8 1, i8* %11, align 4
  br label %285

160:                                              ; preds = %147
  store i8 1, i8* %12, align 1
  br label %285

161:                                              ; preds = %147
  store i8 1, i8* %13, align 2
  br label %285

162:                                              ; preds = %147
  store i8 1, i8* %14, align 1
  br label %285

163:                                              ; preds = %147
  store i8 1, i8* %15, align 4
  br label %285

164:                                              ; preds = %147
  store i8 1, i8* %16, align 1
  br label %285

165:                                              ; preds = %147
  store i8 1, i8* %17, align 2
  br label %285

166:                                              ; preds = %147
  store i8 1, i8* %18, align 1
  br label %285

167:                                              ; preds = %147
  store i8 1, i8* %19, align 4
  br label %285

168:                                              ; preds = %147
  store i8 1, i8* %20, align 1
  br label %285

169:                                              ; preds = %147
  store i8 1, i8* %21, align 2
  br label %285

170:                                              ; preds = %147
  store i8 1, i8* %22, align 1
  br label %285

171:                                              ; preds = %147
  store i8 1, i8* %23, align 4
  br label %285

172:                                              ; preds = %147
  store i8 1, i8* %24, align 1
  br label %285

173:                                              ; preds = %147
  store i8 1, i8* %25, align 2
  br label %285

174:                                              ; preds = %147
  store i8 1, i8* %26, align 1
  br label %285

175:                                              ; preds = %147
  store i8 1, i8* %27, align 4
  br label %285

176:                                              ; preds = %147
  store i8 1, i8* %28, align 1
  br label %285

177:                                              ; preds = %147
  store i8 1, i8* %29, align 2
  br label %285

178:                                              ; preds = %147
  store i8 1, i8* %30, align 1
  br label %285

179:                                              ; preds = %147
  store i8 1, i8* %31, align 4
  br label %285

180:                                              ; preds = %147
  store i8 1, i8* %32, align 1
  br label %285

181:                                              ; preds = %147
  store i8 1, i8* %33, align 2
  br label %285

182:                                              ; preds = %147
  store i8 1, i8* %34, align 1
  br label %285

183:                                              ; preds = %147
  store i8 1, i8* %35, align 4
  br label %285

184:                                              ; preds = %147
  store i8 1, i8* %36, align 1
  br label %285

185:                                              ; preds = %147
  store i8 1, i8* %37, align 2
  br label %285

186:                                              ; preds = %147
  store i8 1, i8* %38, align 1
  br label %285

187:                                              ; preds = %147
  store i8 1, i8* %39, align 4
  br label %285

188:                                              ; preds = %147
  store i8 1, i8* %40, align 1
  br label %285

189:                                              ; preds = %147
  store i8 1, i8* %41, align 2
  br label %285

190:                                              ; preds = %147
  store i8 1, i8* %42, align 1
  br label %285

191:                                              ; preds = %147
  store i8 1, i8* %43, align 4
  br label %285

192:                                              ; preds = %147
  store i8 1, i8* %44, align 1
  br label %285

193:                                              ; preds = %147
  store i8 1, i8* %45, align 2
  br label %285

194:                                              ; preds = %147
  store i8 1, i8* %46, align 1
  br label %285

195:                                              ; preds = %147
  store i8 1, i8* %47, align 4
  br label %285

196:                                              ; preds = %147
  store i8 1, i8* %48, align 1
  br label %285

197:                                              ; preds = %147
  store i8 1, i8* %49, align 2
  br label %285

198:                                              ; preds = %147
  store i8 1, i8* %50, align 1
  br label %285

199:                                              ; preds = %147
  store i8 1, i8* %51, align 4
  br label %285

200:                                              ; preds = %147
  store i8 1, i8* %52, align 1
  br label %285

201:                                              ; preds = %147
  store i8 1, i8* %53, align 2
  br label %285

202:                                              ; preds = %147
  store i8 1, i8* %54, align 1
  br label %285

203:                                              ; preds = %147
  store i8 1, i8* %55, align 4
  br label %285

204:                                              ; preds = %147
  store i8 1, i8* %56, align 1
  br label %285

205:                                              ; preds = %147
  store i8 1, i8* %57, align 2
  br label %285

206:                                              ; preds = %147
  store i8 1, i8* %58, align 1
  br label %285

207:                                              ; preds = %147
  store i8 1, i8* %59, align 4
  br label %285

208:                                              ; preds = %147
  store i8 1, i8* %60, align 1
  br label %285

209:                                              ; preds = %147
  store i8 1, i8* %61, align 2
  br label %285

210:                                              ; preds = %147
  store i8 1, i8* %62, align 1
  br label %285

211:                                              ; preds = %147
  store i8 1, i8* %63, align 4
  br label %285

212:                                              ; preds = %147
  store i8 1, i8* %64, align 1
  br label %285

213:                                              ; preds = %147
  store i8 1, i8* %65, align 2
  br label %285

214:                                              ; preds = %147
  store i8 1, i8* %66, align 1
  br label %285

215:                                              ; preds = %147
  store i8 1, i8* %67, align 4
  br label %285

216:                                              ; preds = %147
  store i8 1, i8* %68, align 1
  br label %285

217:                                              ; preds = %147
  store i8 1, i8* %69, align 2
  br label %285

218:                                              ; preds = %147
  store i8 1, i8* %70, align 1
  br label %285

219:                                              ; preds = %147
  store i8 1, i8* %71, align 4
  br label %285

220:                                              ; preds = %147
  store i8 1, i8* %72, align 1
  br label %285

221:                                              ; preds = %147
  store i8 1, i8* %73, align 2
  br label %285

222:                                              ; preds = %147
  store i8 1, i8* %74, align 1
  br label %285

223:                                              ; preds = %147
  store i8 1, i8* %75, align 4
  br label %285

224:                                              ; preds = %147
  store i8 1, i8* %76, align 1
  br label %285

225:                                              ; preds = %147
  store i8 1, i8* %77, align 2
  br label %285

226:                                              ; preds = %147
  store i8 1, i8* %78, align 1
  br label %285

227:                                              ; preds = %147
  store i8 1, i8* %79, align 4
  br label %285

228:                                              ; preds = %147
  store i8 1, i8* %80, align 1
  br label %285

229:                                              ; preds = %147
  store i8 1, i8* %81, align 2
  br label %285

230:                                              ; preds = %147
  store i8 1, i8* %82, align 1
  br label %285

231:                                              ; preds = %147
  store i8 1, i8* %83, align 4
  br label %285

232:                                              ; preds = %147
  store i8 1, i8* %84, align 1
  br label %285

233:                                              ; preds = %147
  store i8 1, i8* %85, align 2
  br label %285

234:                                              ; preds = %147
  store i8 1, i8* %86, align 1
  br label %285

235:                                              ; preds = %147
  store i8 1, i8* %87, align 4
  br label %285

236:                                              ; preds = %147
  store i8 1, i8* %88, align 1
  br label %285

237:                                              ; preds = %147
  store i8 1, i8* %89, align 2
  br label %285

238:                                              ; preds = %147
  store i8 1, i8* %90, align 1
  br label %285

239:                                              ; preds = %147
  store i8 1, i8* %91, align 4
  br label %285

240:                                              ; preds = %147
  store i8 1, i8* %92, align 1
  br label %285

241:                                              ; preds = %147
  store i8 1, i8* %93, align 2
  br label %285

242:                                              ; preds = %147
  store i8 1, i8* %94, align 1
  br label %285

243:                                              ; preds = %147
  store i8 1, i8* %95, align 4
  br label %285

244:                                              ; preds = %147
  store i8 1, i8* %96, align 1
  br label %285

245:                                              ; preds = %147
  store i8 1, i8* %97, align 2
  br label %285

246:                                              ; preds = %147
  store i8 1, i8* %98, align 1
  br label %285

247:                                              ; preds = %147
  store i8 1, i8* %99, align 4
  br label %285

248:                                              ; preds = %147
  store i8 1, i8* %100, align 1
  br label %285

249:                                              ; preds = %147
  store i8 1, i8* %101, align 2
  br label %285

250:                                              ; preds = %147
  store i8 1, i8* %102, align 1
  br label %285

251:                                              ; preds = %147
  store i8 1, i8* %103, align 4
  br label %285

252:                                              ; preds = %147
  store i8 1, i8* %104, align 1
  br label %285

253:                                              ; preds = %147
  store i8 1, i8* %105, align 2
  br label %285

254:                                              ; preds = %147
  store i8 1, i8* %106, align 1
  br label %285

255:                                              ; preds = %147
  store i8 1, i8* %107, align 4
  br label %285

256:                                              ; preds = %147
  store i8 1, i8* %108, align 1
  br label %285

257:                                              ; preds = %147
  store i8 1, i8* %109, align 2
  br label %285

258:                                              ; preds = %147
  store i8 1, i8* %110, align 1
  br label %285

259:                                              ; preds = %147
  store i8 1, i8* %111, align 4
  br label %285

260:                                              ; preds = %147
  store i8 1, i8* %112, align 1
  br label %285

261:                                              ; preds = %147
  store i8 1, i8* %113, align 2
  br label %285

262:                                              ; preds = %147
  store i8 1, i8* %114, align 1
  br label %285

263:                                              ; preds = %147
  store i8 1, i8* %115, align 4
  br label %285

264:                                              ; preds = %147
  store i8 1, i8* %116, align 1
  br label %285

265:                                              ; preds = %147
  store i8 1, i8* %117, align 2
  br label %285

266:                                              ; preds = %147
  store i8 1, i8* %118, align 1
  br label %285

267:                                              ; preds = %147
  store i8 1, i8* %119, align 4
  br label %285

268:                                              ; preds = %147
  store i8 1, i8* %120, align 1
  br label %285

269:                                              ; preds = %147
  store i8 1, i8* %121, align 2
  br label %285

270:                                              ; preds = %147
  store i8 1, i8* %122, align 1
  br label %285

271:                                              ; preds = %147
  store i8 1, i8* %123, align 4
  br label %285

272:                                              ; preds = %147
  store i8 1, i8* %124, align 1
  br label %285

273:                                              ; preds = %147
  store i8 1, i8* %125, align 2
  br label %285

274:                                              ; preds = %147
  store i8 1, i8* %126, align 1
  br label %285

275:                                              ; preds = %147
  store i8 1, i8* %127, align 4
  br label %285

276:                                              ; preds = %147
  store i8 1, i8* %128, align 1
  br label %285

277:                                              ; preds = %147
  store i8 1, i8* %129, align 2
  br label %285

278:                                              ; preds = %147
  store i8 1, i8* %130, align 1
  br label %285

279:                                              ; preds = %147
  store i8 1, i8* %131, align 4
  br label %285

280:                                              ; preds = %147
  store i8 1, i8* %132, align 1
  br label %285

281:                                              ; preds = %147
  store i8 1, i8* %133, align 2
  br label %285

282:                                              ; preds = %147
  store i8 1, i8* %134, align 1
  br label %285

283:                                              ; preds = %147
  store i8 1, i8* %135, align 4
  br label %285

284:                                              ; preds = %147
  store i8 1, i8* %136, align 1
  br label %285

285:                                              ; preds
  %286 = phi i8 [ %148, %284 ], [ %148, %283 ], [ %148, %282 ], [ %148, %281 ], [ %148, %280 ], [ %148, %279 ], [ %148, %278 ], [ %148, %277 ], [ %148, %276 ], [ %148, %275 ], [ %148, %274 ], [ %148, %273 ], [ %148, %272 ], [ %148, %271 ], [ %148, %270 ], [ %148, %269 ], [ %148, %268 ], [ %148, %267 ], [ %148, %266 ], [ %148, %265 ], [ %148, %264 ], [ %148, %263 ], [ %148, %262 ], [ %148, %261 ], [ %148, %260 ], [ %148, %259 ], [ %148, %258 ], [ %148, %257 ], [ %148, %256 ], [ %148, %255 ], [ %148, %254 ], [ %148, %253 ], [ %148, %252 ], [ %148, %251 ], [ %148, %250 ], [ %148, %249 ], [ %148, %248 ], [ %148, %247 ], [ %148, %246 ], [ %148, %245 ], [ 1, %244 ], [ %148, %243 ], [ %148, %242 ], [ %148, %241 ], [ %148, %240 ], [ %148, %239 ], [ %148, %238 ], [ %148, %237 ], [ %148, %236 ], [ %148, %235 ], [ %148, %234 ], [ %148, %233 ], [ %148, %232 ], [ %148, %231 ], [ %148, %230 ], [ %148, %229 ], [ %148, %228 ], [ %148, %227 ], [ %148, %226 ], [ %148, %225 ], [ %148, %224 ], [ %148, %223 ], [ %148, %222 ], [ %148, %221 ], [ %148, %220 ], [ %148, %219 ], [ %148, %218 ], [ %148, %217 ], [ %148, %216 ], [ %148, %215 ], [ %148, %214 ], [ %148, %213 ], [ %148, %212 ], [ %148, %211 ], [ %148, %210 ], [ %148, %209 ], [ %148, %208 ], [ %148, %207 ], [ %148, %206 ], [ %148, %205 ], [ %148, %204 ], [ %148, %203 ], [ %148, %202 ], [ %148, %201 ], [ %148, %200 ], [ %148, %199 ], [ %148, %198 ], [ %148, %197 ], [ %148, %196 ], [ %148, %195 ], [ %148, %194 ], [ %148, %193 ], [ %148, %192 ], [ %148, %191 ], [ %148, %190 ], [ %148, %189 ], [ %148, %188 ], [ %148, %187 ], [ %148, %186 ], [ %148, %185 ], [ %148, %184 ], [ %148, %183 ], [ %148, %182 ], [ %148, %181 ], [ %148, %180 ], [ %148, %179 ], [ %148, %178 ], [ %148, %177 ], [ %148, %176 ], [ %148, %175 ], [ %148, %174 ], [ %148, %173 ], [ %148, %172 ], [ %148, %171 ], [ %148, %170 ], [ %148, %169 ], [ %148, %168 ], [ %148, %167 ], [ %148, %166 ], [ %148, %165 ], [ %148, %164 ], [ %148, %163 ], [ %148, %162 ], [ %148, %161 ], [ %148, %160 ], [ %148, %159 ], [ %148, %158 ], [ %148, %157 ], [ %148, %156 ], [ %148, %155 ], [ %148, %154 ], [ %148, %153 ], [ %148, %152 ], [ %148, %151 ], [ %148, %147 ]
  %287 = getelementptr inbounds i32, i32* %149, i64 1
  %288 = icmp eq i32* %287, %143
  br i1 %288, label %145, label %147

289:                                              ; preds = %145
  store i32 4096, i32* %137, align 4
  br label %290

290:                                              ; preds = %2, %289, %145
  %291 = load i8, i8* %92, align 1, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %294, label %293

293:                                              ; preds = %290
  store i32 1048576, i32* %139, align 4
  br label %294

294:                                              ; preds = %293, %290
  %295 = load i8, i8* %91, align 4, !range !2
  %296 = icmp eq i8 %295, 0
  br i1 %296, label %298, label %297

297:                                              ; preds = %294
  store i32 1024, i32* %138, align 4
  br label %298

298:                                              ; preds = %294, %297
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu23GpuDriverBugWorkaroundsC2ERKS0_(%"class.gpu::GpuDriverBugWorkarounds"* nocapture, %"class.gpu::GpuDriverBugWorkarounds"* nocapture readonly dereferenceable(148)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 148, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu23GpuDriverBugWorkaroundsD2Ev(%"class.gpu::GpuDriverBugWorkarounds"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gpu23GpuDriverBugWorkarounds8ToIntSetEv(%"class.std::__1::vector"* noalias sret, %"class.gpu::GpuDriverBugWorkarounds"* readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #9
  %6 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %2
  %10 = bitcast i32** %3 to i64*
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = bitcast i32** %4 to i64*
  %13 = tail call i8* @_Znwm(i64 4) #10
  %14 = bitcast i8* %13 to i32*
  %15 = getelementptr inbounds i8, i8* %13, i64 4
  %16 = bitcast i8* %15 to i32*
  %17 = ptrtoint i8* %15 to i64
  store i32 0, i32* %14, align 4
  %18 = ptrtoint i8* %13 to i64
  store i64 %18, i64* %11, align 8
  store i64 %17, i64* %10, align 8
  store i64 %17, i64* %12, align 8
  br label %19

19:                                               ; preds = %9, %2
  %20 = phi i64 [ %17, %9 ], [ 0, %2 ]
  %21 = phi i8* [ %13, %9 ], [ null, %2 ]
  %22 = phi i32* [ %14, %9 ], [ null, %2 ]
  %23 = phi i64 [ %18, %9 ], [ 0, %2 ]
  %24 = phi i32* [ %16, %9 ], [ null, %2 ]
  %25 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 1
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %77, label %28

28:                                               ; preds = %19
  %29 = ptrtoint i32* %24 to i64
  %30 = bitcast i32** %3 to i64*
  %31 = bitcast %"class.std::__1::vector"* %0 to i64*
  %32 = sub i64 %29, %23
  %33 = ashr exact i64 %32, 2
  %34 = add nsw i64 %33, 1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %28
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %28
  %39 = ptrtoint i32* %24 to i64
  %40 = bitcast i32** %4 to i64*
  %41 = sub i64 %39, %23
  %42 = ashr exact i64 %41, 2
  %43 = icmp ult i64 %42, 2305843009213693951
  br i1 %43, label %44, label %52

44:                                               ; preds = %38
  %45 = ashr exact i64 %41, 1
  %46 = icmp ult i64 %45, %34
  %47 = select i1 %46, i64 %34, i64 %45
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %44
  %50 = icmp ugt i64 %47, 4611686018427387903
  br i1 %50, label %51, label %52

51:                                               ; preds = %49
  tail call void @abort() #11
  unreachable

52:                                               ; preds = %49, %38
  %53 = phi i64 [ %47, %49 ], [ 4611686018427387903, %38 ]
  %54 = shl i64 %53, 2
  %55 = tail call i8* @_Znwm(i64 %54) #10
  %56 = bitcast i8* %55 to i32*
  br label %57

57:                                               ; preds = %52, %44
  %58 = phi i64 [ %53, %52 ], [ 0, %44 ]
  %59 = phi i32* [ %56, %52 ], [ null, %44 ]
  %60 = getelementptr inbounds i32, i32* %59, i64 %33
  %61 = getelementptr inbounds i32, i32* %59, i64 %58
  %62 = ptrtoint i32* %61 to i64
  store i32 1, i32* %60, align 4
  %63 = getelementptr inbounds i32, i32* %60, i64 1
  %64 = ptrtoint i32* %63 to i64
  %65 = ptrtoint i32* %22 to i64
  %66 = sub i64 %20, %65
  %67 = ashr exact i64 %66, 2
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds i32, i32* %60, i64 %68
  %70 = ptrtoint i32* %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %57
  %73 = bitcast i32* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %21, i64 %66, i1 false) #9
  br label %74

74:                                               ; preds = %72, %57
  store i64 %70, i64* %31, align 8
  store i64 %64, i64* %30, align 8
  store i64 %62, i64* %40, align 8
  %75 = icmp eq i32* %22, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %74
  tail call void @_ZdlPv(i8* %21) #10
  br label %77

77:                                               ; preds = %76, %74, %19
  %78 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 2
  %79 = load i8, i8* %78, align 2, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %136, label %81

81:                                               ; preds = %77
  %82 = load i32*, i32** %3, align 8
  %83 = load i32*, i32** %4, align 8
  %84 = icmp ult i32* %82, %83
  %85 = ptrtoint i32* %83 to i64
  br i1 %84, label %86, label %90

86:                                               ; preds = %81
  store i32 2, i32* %82, align 4
  %87 = getelementptr inbounds i32, i32* %82, i64 1
  %88 = ptrtoint i32* %87 to i64
  %89 = bitcast i32** %3 to i64*
  store i64 %88, i64* %89, align 8
  br label %136

90:                                               ; preds = %81
  %91 = ptrtoint i32* %82 to i64
  %92 = bitcast i32** %3 to i64*
  %93 = bitcast %"class.std::__1::vector"* %0 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %91, %94
  %96 = ashr exact i64 %95, 2
  %97 = add nsw i64 %96, 1
  %98 = icmp ugt i64 %97, 4611686018427387903
  br i1 %98, label %99, label %101

99:                                               ; preds = %90
  %100 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %100) #11
  unreachable

101:                                              ; preds = %90
  %102 = bitcast i32** %4 to i64*
  %103 = sub i64 %85, %94
  %104 = ashr exact i64 %103, 2
  %105 = icmp ult i64 %104, 2305843009213693951
  br i1 %105, label %106, label %114

106:                                              ; preds = %101
  %107 = ashr exact i64 %103, 1
  %108 = icmp ult i64 %107, %97
  %109 = select i1 %108, i64 %97, i64 %107
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %106
  %112 = icmp ugt i64 %109, 4611686018427387903
  br i1 %112, label %113, label %114

113:                                              ; preds = %111
  tail call void @abort() #11
  unreachable

114:                                              ; preds = %111, %101
  %115 = phi i64 [ %109, %111 ], [ 4611686018427387903, %101 ]
  %116 = shl i64 %115, 2
  %117 = tail call i8* @_Znwm(i64 %116) #10
  %118 = bitcast i8* %117 to i32*
  br label %119

119:                                              ; preds = %114, %106
  %120 = phi i64 [ %115, %114 ], [ 0, %106 ]
  %121 = phi i8* [ %117, %114 ], [ null, %106 ]
  %122 = phi i32* [ %118, %114 ], [ null, %106 ]
  %123 = getelementptr inbounds i32, i32* %122, i64 %96
  %124 = getelementptr inbounds i32, i32* %122, i64 %120
  %125 = ptrtoint i32* %124 to i64
  store i32 2, i32* %123, align 4
  %126 = getelementptr inbounds i32, i32* %123, i64 1
  %127 = ptrtoint i32* %126 to i64
  %128 = ptrtoint i32* %122 to i64
  %129 = icmp sgt i64 %95, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %119
  %131 = inttoptr i64 %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %121, i8* align 4 %131, i64 %95, i1 false) #9
  br label %132

132:                                              ; preds = %130, %119
  store i64 %128, i64* %93, align 8
  store i64 %127, i64* %92, align 8
  store i64 %125, i64* %102, align 8
  %133 = icmp eq i64 %94, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = inttoptr i64 %94 to i8*
  tail call void @_ZdlPv(i8* %135) #10
  br label %136

136:                                              ; preds = %134, %132, %86, %77
  %137 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 3
  %138 = load i8, i8* %137, align 1, !range !2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %195, label %140

140:                                              ; preds = %136
  %141 = load i32*, i32** %3, align 8
  %142 = load i32*, i32** %4, align 8
  %143 = icmp ult i32* %141, %142
  %144 = ptrtoint i32* %142 to i64
  br i1 %143, label %145, label %149

145:                                              ; preds = %140
  store i32 3, i32* %141, align 4
  %146 = getelementptr inbounds i32, i32* %141, i64 1
  %147 = ptrtoint i32* %146 to i64
  %148 = bitcast i32** %3 to i64*
  store i64 %147, i64* %148, align 8
  br label %195

149:                                              ; preds = %140
  %150 = ptrtoint i32* %141 to i64
  %151 = bitcast i32** %3 to i64*
  %152 = bitcast %"class.std::__1::vector"* %0 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %150, %153
  %155 = ashr exact i64 %154, 2
  %156 = add nsw i64 %155, 1
  %157 = icmp ugt i64 %156, 4611686018427387903
  br i1 %157, label %158, label %160

158:                                              ; preds = %149
  %159 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %159) #11
  unreachable

160:                                              ; preds = %149
  %161 = bitcast i32** %4 to i64*
  %162 = sub i64 %144, %153
  %163 = ashr exact i64 %162, 2
  %164 = icmp ult i64 %163, 2305843009213693951
  br i1 %164, label %165, label %173

165:                                              ; preds = %160
  %166 = ashr exact i64 %162, 1
  %167 = icmp ult i64 %166, %156
  %168 = select i1 %167, i64 %156, i64 %166
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %178, label %170

170:                                              ; preds = %165
  %171 = icmp ugt i64 %168, 4611686018427387903
  br i1 %171, label %172, label %173

172:                                              ; preds = %170
  tail call void @abort() #11
  unreachable

173:                                              ; preds = %170, %160
  %174 = phi i64 [ %168, %170 ], [ 4611686018427387903, %160 ]
  %175 = shl i64 %174, 2
  %176 = tail call i8* @_Znwm(i64 %175) #10
  %177 = bitcast i8* %176 to i32*
  br label %178

178:                                              ; preds = %173, %165
  %179 = phi i64 [ %174, %173 ], [ 0, %165 ]
  %180 = phi i8* [ %176, %173 ], [ null, %165 ]
  %181 = phi i32* [ %177, %173 ], [ null, %165 ]
  %182 = getelementptr inbounds i32, i32* %181, i64 %155
  %183 = getelementptr inbounds i32, i32* %181, i64 %179
  %184 = ptrtoint i32* %183 to i64
  store i32 3, i32* %182, align 4
  %185 = getelementptr inbounds i32, i32* %182, i64 1
  %186 = ptrtoint i32* %185 to i64
  %187 = ptrtoint i32* %181 to i64
  %188 = icmp sgt i64 %154, 0
  br i1 %188, label %189, label %191

189:                                              ; preds = %178
  %190 = inttoptr i64 %153 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %180, i8* align 4 %190, i64 %154, i1 false) #9
  br label %191

191:                                              ; preds = %189, %178
  store i64 %187, i64* %152, align 8
  store i64 %186, i64* %151, align 8
  store i64 %184, i64* %161, align 8
  %192 = icmp eq i64 %153, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %191
  %194 = inttoptr i64 %153 to i8*
  tail call void @_ZdlPv(i8* %194) #10
  br label %195

195:                                              ; preds = %193, %191, %145, %136
  %196 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 4
  %197 = load i8, i8* %196, align 4, !range !2
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %254, label %199

199:                                              ; preds = %195
  %200 = load i32*, i32** %3, align 8
  %201 = load i32*, i32** %4, align 8
  %202 = icmp ult i32* %200, %201
  %203 = ptrtoint i32* %201 to i64
  br i1 %202, label %204, label %208

204:                                              ; preds = %199
  store i32 4, i32* %200, align 4
  %205 = getelementptr inbounds i32, i32* %200, i64 1
  %206 = ptrtoint i32* %205 to i64
  %207 = bitcast i32** %3 to i64*
  store i64 %206, i64* %207, align 8
  br label %254

208:                                              ; preds = %199
  %209 = ptrtoint i32* %200 to i64
  %210 = bitcast i32** %3 to i64*
  %211 = bitcast %"class.std::__1::vector"* %0 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = sub i64 %209, %212
  %214 = ashr exact i64 %213, 2
  %215 = add nsw i64 %214, 1
  %216 = icmp ugt i64 %215, 4611686018427387903
  br i1 %216, label %217, label %219

217:                                              ; preds = %208
  %218 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %218) #11
  unreachable

219:                                              ; preds = %208
  %220 = bitcast i32** %4 to i64*
  %221 = sub i64 %203, %212
  %222 = ashr exact i64 %221, 2
  %223 = icmp ult i64 %222, 2305843009213693951
  br i1 %223, label %224, label %232

224:                                              ; preds = %219
  %225 = ashr exact i64 %221, 1
  %226 = icmp ult i64 %225, %215
  %227 = select i1 %226, i64 %215, i64 %225
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %237, label %229

229:                                              ; preds = %224
  %230 = icmp ugt i64 %227, 4611686018427387903
  br i1 %230, label %231, label %232

231:                                              ; preds = %229
  tail call void @abort() #11
  unreachable

232:                                              ; preds = %229, %219
  %233 = phi i64 [ %227, %229 ], [ 4611686018427387903, %219 ]
  %234 = shl i64 %233, 2
  %235 = tail call i8* @_Znwm(i64 %234) #10
  %236 = bitcast i8* %235 to i32*
  br label %237

237:                                              ; preds = %232, %224
  %238 = phi i64 [ %233, %232 ], [ 0, %224 ]
  %239 = phi i8* [ %235, %232 ], [ null, %224 ]
  %240 = phi i32* [ %236, %232 ], [ null, %224 ]
  %241 = getelementptr inbounds i32, i32* %240, i64 %214
  %242 = getelementptr inbounds i32, i32* %240, i64 %238
  %243 = ptrtoint i32* %242 to i64
  store i32 4, i32* %241, align 4
  %244 = getelementptr inbounds i32, i32* %241, i64 1
  %245 = ptrtoint i32* %244 to i64
  %246 = ptrtoint i32* %240 to i64
  %247 = icmp sgt i64 %213, 0
  br i1 %247, label %248, label %250

248:                                              ; preds = %237
  %249 = inttoptr i64 %212 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %239, i8* align 4 %249, i64 %213, i1 false) #9
  br label %250

250:                                              ; preds = %248, %237
  store i64 %246, i64* %211, align 8
  store i64 %245, i64* %210, align 8
  store i64 %243, i64* %220, align 8
  %251 = icmp eq i64 %212, 0
  br i1 %251, label %254, label %252

252:                                              ; preds = %250
  %253 = inttoptr i64 %212 to i8*
  tail call void @_ZdlPv(i8* %253) #10
  br label %254

254:                                              ; preds = %252, %250, %204, %195
  %255 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 5
  %256 = load i8, i8* %255, align 1, !range !2
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %313, label %258

258:                                              ; preds = %254
  %259 = load i32*, i32** %3, align 8
  %260 = load i32*, i32** %4, align 8
  %261 = icmp ult i32* %259, %260
  %262 = ptrtoint i32* %260 to i64
  br i1 %261, label %263, label %267

263:                                              ; preds = %258
  store i32 5, i32* %259, align 4
  %264 = getelementptr inbounds i32, i32* %259, i64 1
  %265 = ptrtoint i32* %264 to i64
  %266 = bitcast i32** %3 to i64*
  store i64 %265, i64* %266, align 8
  br label %313

267:                                              ; preds = %258
  %268 = ptrtoint i32* %259 to i64
  %269 = bitcast i32** %3 to i64*
  %270 = bitcast %"class.std::__1::vector"* %0 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = sub i64 %268, %271
  %273 = ashr exact i64 %272, 2
  %274 = add nsw i64 %273, 1
  %275 = icmp ugt i64 %274, 4611686018427387903
  br i1 %275, label %276, label %278

276:                                              ; preds = %267
  %277 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %277) #11
  unreachable

278:                                              ; preds = %267
  %279 = bitcast i32** %4 to i64*
  %280 = sub i64 %262, %271
  %281 = ashr exact i64 %280, 2
  %282 = icmp ult i64 %281, 2305843009213693951
  br i1 %282, label %283, label %291

283:                                              ; preds = %278
  %284 = ashr exact i64 %280, 1
  %285 = icmp ult i64 %284, %274
  %286 = select i1 %285, i64 %274, i64 %284
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %296, label %288

288:                                              ; preds = %283
  %289 = icmp ugt i64 %286, 4611686018427387903
  br i1 %289, label %290, label %291

290:                                              ; preds = %288
  tail call void @abort() #11
  unreachable

291:                                              ; preds = %288, %278
  %292 = phi i64 [ %286, %288 ], [ 4611686018427387903, %278 ]
  %293 = shl i64 %292, 2
  %294 = tail call i8* @_Znwm(i64 %293) #10
  %295 = bitcast i8* %294 to i32*
  br label %296

296:                                              ; preds = %291, %283
  %297 = phi i64 [ %292, %291 ], [ 0, %283 ]
  %298 = phi i8* [ %294, %291 ], [ null, %283 ]
  %299 = phi i32* [ %295, %291 ], [ null, %283 ]
  %300 = getelementptr inbounds i32, i32* %299, i64 %273
  %301 = getelementptr inbounds i32, i32* %299, i64 %297
  %302 = ptrtoint i32* %301 to i64
  store i32 5, i32* %300, align 4
  %303 = getelementptr inbounds i32, i32* %300, i64 1
  %304 = ptrtoint i32* %303 to i64
  %305 = ptrtoint i32* %299 to i64
  %306 = icmp sgt i64 %272, 0
  br i1 %306, label %307, label %309

307:                                              ; preds = %296
  %308 = inttoptr i64 %271 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %298, i8* align 4 %308, i64 %272, i1 false) #9
  br label %309

309:                                              ; preds = %307, %296
  store i64 %305, i64* %270, align 8
  store i64 %304, i64* %269, align 8
  store i64 %302, i64* %279, align 8
  %310 = icmp eq i64 %271, 0
  br i1 %310, label %313, label %311

311:                                              ; preds = %309
  %312 = inttoptr i64 %271 to i8*
  tail call void @_ZdlPv(i8* %312) #10
  br label %313

313:                                              ; preds = %311, %309, %263, %254
  %314 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 6
  %315 = load i8, i8* %314, align 2, !range !2
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %372, label %317

317:                                              ; preds = %313
  %318 = load i32*, i32** %3, align 8
  %319 = load i32*, i32** %4, align 8
  %320 = icmp ult i32* %318, %319
  %321 = ptrtoint i32* %319 to i64
  br i1 %320, label %322, label %326

322:                                              ; preds = %317
  store i32 6, i32* %318, align 4
  %323 = getelementptr inbounds i32, i32* %318, i64 1
  %324 = ptrtoint i32* %323 to i64
  %325 = bitcast i32** %3 to i64*
  store i64 %324, i64* %325, align 8
  br label %372

326:                                              ; preds = %317
  %327 = ptrtoint i32* %318 to i64
  %328 = bitcast i32** %3 to i64*
  %329 = bitcast %"class.std::__1::vector"* %0 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = sub i64 %327, %330
  %332 = ashr exact i64 %331, 2
  %333 = add nsw i64 %332, 1
  %334 = icmp ugt i64 %333, 4611686018427387903
  br i1 %334, label %335, label %337

335:                                              ; preds = %326
  %336 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %336) #11
  unreachable

337:                                              ; preds = %326
  %338 = bitcast i32** %4 to i64*
  %339 = sub i64 %321, %330
  %340 = ashr exact i64 %339, 2
  %341 = icmp ult i64 %340, 2305843009213693951
  br i1 %341, label %342, label %350

342:                                              ; preds = %337
  %343 = ashr exact i64 %339, 1
  %344 = icmp ult i64 %343, %333
  %345 = select i1 %344, i64 %333, i64 %343
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %355, label %347

347:                                              ; preds = %342
  %348 = icmp ugt i64 %345, 4611686018427387903
  br i1 %348, label %349, label %350

349:                                              ; preds = %347
  tail call void @abort() #11
  unreachable

350:                                              ; preds = %347, %337
  %351 = phi i64 [ %345, %347 ], [ 4611686018427387903, %337 ]
  %352 = shl i64 %351, 2
  %353 = tail call i8* @_Znwm(i64 %352) #10
  %354 = bitcast i8* %353 to i32*
  br label %355

355:                                              ; preds = %350, %342
  %356 = phi i64 [ %351, %350 ], [ 0, %342 ]
  %357 = phi i8* [ %353, %350 ], [ null, %342 ]
  %358 = phi i32* [ %354, %350 ], [ null, %342 ]
  %359 = getelementptr inbounds i32, i32* %358, i64 %332
  %360 = getelementptr inbounds i32, i32* %358, i64 %356
  %361 = ptrtoint i32* %360 to i64
  store i32 6, i32* %359, align 4
  %362 = getelementptr inbounds i32, i32* %359, i64 1
  %363 = ptrtoint i32* %362 to i64
  %364 = ptrtoint i32* %358 to i64
  %365 = icmp sgt i64 %331, 0
  br i1 %365, label %366, label %368

366:                                              ; preds = %355
  %367 = inttoptr i64 %330 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %357, i8* align 4 %367, i64 %331, i1 false) #9
  br label %368

368:                                              ; preds = %366, %355
  store i64 %364, i64* %329, align 8
  store i64 %363, i64* %328, align 8
  store i64 %361, i64* %338, align 8
  %369 = icmp eq i64 %330, 0
  br i1 %369, label %372, label %370

370:                                              ; preds = %368
  %371 = inttoptr i64 %330 to i8*
  tail call void @_ZdlPv(i8* %371) #10
  br label %372

372:                                              ; preds = %370, %368, %322, %313
  %373 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 7
  %374 = load i8, i8* %373, align 1, !range !2
  %375 = icmp eq i8 %374, 0
  br i1 %375, label %431, label %376

376:                                              ; preds = %372
  %377 = load i32*, i32** %3, align 8
  %378 = load i32*, i32** %4, align 8
  %379 = icmp ult i32* %377, %378
  %380 = ptrtoint i32* %378 to i64
  br i1 %379, label %381, label %385

381:                                              ; preds = %376
  store i32 7, i32* %377, align 4
  %382 = getelementptr inbounds i32, i32* %377, i64 1
  %383 = ptrtoint i32* %382 to i64
  %384 = bitcast i32** %3 to i64*
  store i64 %383, i64* %384, align 8
  br label %431

385:                                              ; preds = %376
  %386 = ptrtoint i32* %377 to i64
  %387 = bitcast i32** %3 to i64*
  %388 = bitcast %"class.std::__1::vector"* %0 to i64*
  %389 = load i64, i64* %388, align 8
  %390 = sub i64 %386, %389
  %391 = ashr exact i64 %390, 2
  %392 = add nsw i64 %391, 1
  %393 = icmp ugt i64 %392, 4611686018427387903
  br i1 %393, label %394, label %396

394:                                              ; preds = %385
  %395 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %395) #11
  unreachable

396:                                              ; preds = %385
  %397 = bitcast i32** %4 to i64*
  %398 = sub i64 %380, %389
  %399 = ashr exact i64 %398, 2
  %400 = icmp ult i64 %399, 2305843009213693951
  br i1 %400, label %401, label %409

401:                                              ; preds = %396
  %402 = ashr exact i64 %398, 1
  %403 = icmp ult i64 %402, %392
  %404 = select i1 %403, i64 %392, i64 %402
  %405 = icmp eq i64 %404, 0
  br i1 %405, label %414, label %406

406:                                              ; preds = %401
  %407 = icmp ugt i64 %404, 4611686018427387903
  br i1 %407, label %408, label %409

408:                                              ; preds = %406
  tail call void @abort() #11
  unreachable

409:                                              ; preds = %406, %396
  %410 = phi i64 [ %404, %406 ], [ 4611686018427387903, %396 ]
  %411 = shl i64 %410, 2
  %412 = tail call i8* @_Znwm(i64 %411) #10
  %413 = bitcast i8* %412 to i32*
  br label %414

414:                                              ; preds = %409, %401
  %415 = phi i64 [ %410, %409 ], [ 0, %401 ]
  %416 = phi i8* [ %412, %409 ], [ null, %401 ]
  %417 = phi i32* [ %413, %409 ], [ null, %401 ]
  %418 = getelementptr inbounds i32, i32* %417, i64 %391
  %419 = getelementptr inbounds i32, i32* %417, i64 %415
  %420 = ptrtoint i32* %419 to i64
  store i32 7, i32* %418, align 4
  %421 = getelementptr inbounds i32, i32* %418, i64 1
  %422 = ptrtoint i32* %421 to i64
  %423 = ptrtoint i32* %417 to i64
  %424 = icmp sgt i64 %390, 0
  br i1 %424, label %425, label %427

425:                                              ; preds = %414
  %426 = inttoptr i64 %389 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %416, i8* align 4 %426, i64 %390, i1 false) #9
  br label %427

427:                                              ; preds = %425, %414
  store i64 %423, i64* %388, align 8
  store i64 %422, i64* %387, align 8
  store i64 %420, i64* %397, align 8
  %428 = icmp eq i64 %389, 0
  br i1 %428, label %431, label %429

429:                                              ; preds = %427
  %430 = inttoptr i64 %389 to i8*
  tail call void @_ZdlPv(i8* %430) #10
  br label %431

431:                                              ; preds = %429, %427, %381, %372
  %432 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 8
  %433 = load i8, i8* %432, align 4, !range !2
  %434 = icmp eq i8 %433, 0
  br i1 %434, label %490, label %435

435:                                              ; preds = %431
  %436 = load i32*, i32** %3, align 8
  %437 = load i32*, i32** %4, align 8
  %438 = icmp ult i32* %436, %437
  %439 = ptrtoint i32* %437 to i64
  br i1 %438, label %440, label %444

440:                                              ; preds = %435
  store i32 8, i32* %436, align 4
  %441 = getelementptr inbounds i32, i32* %436, i64 1
  %442 = ptrtoint i32* %441 to i64
  %443 = bitcast i32** %3 to i64*
  store i64 %442, i64* %443, align 8
  br label %490

444:                                              ; preds = %435
  %445 = ptrtoint i32* %436 to i64
  %446 = bitcast i32** %3 to i64*
  %447 = bitcast %"class.std::__1::vector"* %0 to i64*
  %448 = load i64, i64* %447, align 8
  %449 = sub i64 %445, %448
  %450 = ashr exact i64 %449, 2
  %451 = add nsw i64 %450, 1
  %452 = icmp ugt i64 %451, 4611686018427387903
  br i1 %452, label %453, label %455

453:                                              ; preds = %444
  %454 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %454) #11
  unreachable

455:                                              ; preds = %444
  %456 = bitcast i32** %4 to i64*
  %457 = sub i64 %439, %448
  %458 = ashr exact i64 %457, 2
  %459 = icmp ult i64 %458, 2305843009213693951
  br i1 %459, label %460, label %468

460:                                              ; preds = %455
  %461 = ashr exact i64 %457, 1
  %462 = icmp ult i64 %461, %451
  %463 = select i1 %462, i64 %451, i64 %461
  %464 = icmp eq i64 %463, 0
  br i1 %464, label %473, label %465

465:                                              ; preds = %460
  %466 = icmp ugt i64 %463, 4611686018427387903
  br i1 %466, label %467, label %468

467:                                              ; preds = %465
  tail call void @abort() #11
  unreachable

468:                                              ; preds = %465, %455
  %469 = phi i64 [ %463, %465 ], [ 4611686018427387903, %455 ]
  %470 = shl i64 %469, 2
  %471 = tail call i8* @_Znwm(i64 %470) #10
  %472 = bitcast i8* %471 to i32*
  br label %473

473:                                              ; preds = %468, %460
  %474 = phi i64 [ %469, %468 ], [ 0, %460 ]
  %475 = phi i8* [ %471, %468 ], [ null, %460 ]
  %476 = phi i32* [ %472, %468 ], [ null, %460 ]
  %477 = getelementptr inbounds i32, i32* %476, i64 %450
  %478 = getelementptr inbounds i32, i32* %476, i64 %474
  %479 = ptrtoint i32* %478 to i64
  store i32 8, i32* %477, align 4
  %480 = getelementptr inbounds i32, i32* %477, i64 1
  %481 = ptrtoint i32* %480 to i64
  %482 = ptrtoint i32* %476 to i64
  %483 = icmp sgt i64 %449, 0
  br i1 %483, label %484, label %486

484:                                              ; preds = %473
  %485 = inttoptr i64 %448 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %475, i8* align 4 %485, i64 %449, i1 false) #9
  br label %486

486:                                              ; preds = %484, %473
  store i64 %482, i64* %447, align 8
  store i64 %481, i64* %446, align 8
  store i64 %479, i64* %456, align 8
  %487 = icmp eq i64 %448, 0
  br i1 %487, label %490, label %488

488:                                              ; preds = %486
  %489 = inttoptr i64 %448 to i8*
  tail call void @_ZdlPv(i8* %489) #10
  br label %490

490:                                              ; preds = %488, %486, %440, %431
  %491 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 9
  %492 = load i8, i8* %491, align 1, !range !2
  %493 = icmp eq i8 %492, 0
  br i1 %493, label %549, label %494

494:                                              ; preds = %490
  %495 = load i32*, i32** %3, align 8
  %496 = load i32*, i32** %4, align 8
  %497 = icmp ult i32* %495, %496
  %498 = ptrtoint i32* %496 to i64
  br i1 %497, label %499, label %503

499:                                              ; preds = %494
  store i32 9, i32* %495, align 4
  %500 = getelementptr inbounds i32, i32* %495, i64 1
  %501 = ptrtoint i32* %500 to i64
  %502 = bitcast i32** %3 to i64*
  store i64 %501, i64* %502, align 8
  br label %549

503:                                              ; preds = %494
  %504 = ptrtoint i32* %495 to i64
  %505 = bitcast i32** %3 to i64*
  %506 = bitcast %"class.std::__1::vector"* %0 to i64*
  %507 = load i64, i64* %506, align 8
  %508 = sub i64 %504, %507
  %509 = ashr exact i64 %508, 2
  %510 = add nsw i64 %509, 1
  %511 = icmp ugt i64 %510, 4611686018427387903
  br i1 %511, label %512, label %514

512:                                              ; preds = %503
  %513 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %513) #11
  unreachable

514:                                              ; preds = %503
  %515 = bitcast i32** %4 to i64*
  %516 = sub i64 %498, %507
  %517 = ashr exact i64 %516, 2
  %518 = icmp ult i64 %517, 2305843009213693951
  br i1 %518, label %519, label %527

519:                                              ; preds = %514
  %520 = ashr exact i64 %516, 1
  %521 = icmp ult i64 %520, %510
  %522 = select i1 %521, i64 %510, i64 %520
  %523 = icmp eq i64 %522, 0
  br i1 %523, label %532, label %524

524:                                              ; preds = %519
  %525 = icmp ugt i64 %522, 4611686018427387903
  br i1 %525, label %526, label %527

526:                                              ; preds = %524
  tail call void @abort() #11
  unreachable

527:                                              ; preds = %524, %514
  %528 = phi i64 [ %522, %524 ], [ 4611686018427387903, %514 ]
  %529 = shl i64 %528, 2
  %530 = tail call i8* @_Znwm(i64 %529) #10
  %531 = bitcast i8* %530 to i32*
  br label %532

532:                                              ; preds = %527, %519
  %533 = phi i64 [ %528, %527 ], [ 0, %519 ]
  %534 = phi i8* [ %530, %527 ], [ null, %519 ]
  %535 = phi i32* [ %531, %527 ], [ null, %519 ]
  %536 = getelementptr inbounds i32, i32* %535, i64 %509
  %537 = getelementptr inbounds i32, i32* %535, i64 %533
  %538 = ptrtoint i32* %537 to i64
  store i32 9, i32* %536, align 4
  %539 = getelementptr inbounds i32, i32* %536, i64 1
  %540 = ptrtoint i32* %539 to i64
  %541 = ptrtoint i32* %535 to i64
  %542 = icmp sgt i64 %508, 0
  br i1 %542, label %543, label %545

543:                                              ; preds = %532
  %544 = inttoptr i64 %507 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %534, i8* align 4 %544, i64 %508, i1 false) #9
  br label %545

545:                                              ; preds = %543, %532
  store i64 %541, i64* %506, align 8
  store i64 %540, i64* %505, align 8
  store i64 %538, i64* %515, align 8
  %546 = icmp eq i64 %507, 0
  br i1 %546, label %549, label %547

547:                                              ; preds = %545
  %548 = inttoptr i64 %507 to i8*
  tail call void @_ZdlPv(i8* %548) #10
  br label %549

549:                                              ; preds = %547, %545, %499, %490
  %550 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 10
  %551 = load i8, i8* %550, align 2, !range !2
  %552 = icmp eq i8 %551, 0
  br i1 %552, label %608, label %553

553:                                              ; preds = %549
  %554 = load i32*, i32** %3, align 8
  %555 = load i32*, i32** %4, align 8
  %556 = icmp ult i32* %554, %555
  %557 = ptrtoint i32* %555 to i64
  br i1 %556, label %558, label %562

558:                                              ; preds = %553
  store i32 10, i32* %554, align 4
  %559 = getelementptr inbounds i32, i32* %554, i64 1
  %560 = ptrtoint i32* %559 to i64
  %561 = bitcast i32** %3 to i64*
  store i64 %560, i64* %561, align 8
  br label %608

562:                                              ; preds = %553
  %563 = ptrtoint i32* %554 to i64
  %564 = bitcast i32** %3 to i64*
  %565 = bitcast %"class.std::__1::vector"* %0 to i64*
  %566 = load i64, i64* %565, align 8
  %567 = sub i64 %563, %566
  %568 = ashr exact i64 %567, 2
  %569 = add nsw i64 %568, 1
  %570 = icmp ugt i64 %569, 4611686018427387903
  br i1 %570, label %571, label %573

571:                                              ; preds = %562
  %572 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %572) #11
  unreachable

573:                                              ; preds = %562
  %574 = bitcast i32** %4 to i64*
  %575 = sub i64 %557, %566
  %576 = ashr exact i64 %575, 2
  %577 = icmp ult i64 %576, 2305843009213693951
  br i1 %577, label %578, label %586

578:                                              ; preds = %573
  %579 = ashr exact i64 %575, 1
  %580 = icmp ult i64 %579, %569
  %581 = select i1 %580, i64 %569, i64 %579
  %582 = icmp eq i64 %581, 0
  br i1 %582, label %591, label %583

583:                                              ; preds = %578
  %584 = icmp ugt i64 %581, 4611686018427387903
  br i1 %584, label %585, label %586

585:                                              ; preds = %583
  tail call void @abort() #11
  unreachable

586:                                              ; preds = %583, %573
  %587 = phi i64 [ %581, %583 ], [ 4611686018427387903, %573 ]
  %588 = shl i64 %587, 2
  %589 = tail call i8* @_Znwm(i64 %588) #10
  %590 = bitcast i8* %589 to i32*
  br label %591

591:                                              ; preds = %586, %578
  %592 = phi i64 [ %587, %586 ], [ 0, %578 ]
  %593 = phi i8* [ %589, %586 ], [ null, %578 ]
  %594 = phi i32* [ %590, %586 ], [ null, %578 ]
  %595 = getelementptr inbounds i32, i32* %594, i64 %568
  %596 = getelementptr inbounds i32, i32* %594, i64 %592
  %597 = ptrtoint i32* %596 to i64
  store i32 10, i32* %595, align 4
  %598 = getelementptr inbounds i32, i32* %595, i64 1
  %599 = ptrtoint i32* %598 to i64
  %600 = ptrtoint i32* %594 to i64
  %601 = icmp sgt i64 %567, 0
  br i1 %601, label %602, label %604

602:                                              ; preds = %591
  %603 = inttoptr i64 %566 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %593, i8* align 4 %603, i64 %567, i1 false) #9
  br label %604

604:                                              ; preds = %602, %591
  store i64 %600, i64* %565, align 8
  store i64 %599, i64* %564, align 8
  store i64 %597, i64* %574, align 8
  %605 = icmp eq i64 %566, 0
  br i1 %605, label %608, label %606

606:                                              ; preds = %604
  %607 = inttoptr i64 %566 to i8*
  tail call void @_ZdlPv(i8* %607) #10
  br label %608

608:                                              ; preds = %606, %604, %558, %549
  %609 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 11
  %610 = load i8, i8* %609, align 1, !range !2
  %611 = icmp eq i8 %610, 0
  br i1 %611, label %667, label %612

612:                                              ; preds = %608
  %613 = load i32*, i32** %3, align 8
  %614 = load i32*, i32** %4, align 8
  %615 = icmp ult i32* %613, %614
  %616 = ptrtoint i32* %614 to i64
  br i1 %615, label %617, label %621

617:                                              ; preds = %612
  store i32 11, i32* %613, align 4
  %618 = getelementptr inbounds i32, i32* %613, i64 1
  %619 = ptrtoint i32* %618 to i64
  %620 = bitcast i32** %3 to i64*
  store i64 %619, i64* %620, align 8
  br label %667

621:                                              ; preds = %612
  %622 = ptrtoint i32* %613 to i64
  %623 = bitcast i32** %3 to i64*
  %624 = bitcast %"class.std::__1::vector"* %0 to i64*
  %625 = load i64, i64* %624, align 8
  %626 = sub i64 %622, %625
  %627 = ashr exact i64 %626, 2
  %628 = add nsw i64 %627, 1
  %629 = icmp ugt i64 %628, 4611686018427387903
  br i1 %629, label %630, label %632

630:                                              ; preds = %621
  %631 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %631) #11
  unreachable

632:                                              ; preds = %621
  %633 = bitcast i32** %4 to i64*
  %634 = sub i64 %616, %625
  %635 = ashr exact i64 %634, 2
  %636 = icmp ult i64 %635, 2305843009213693951
  br i1 %636, label %637, label %645

637:                                              ; preds = %632
  %638 = ashr exact i64 %634, 1
  %639 = icmp ult i64 %638, %628
  %640 = select i1 %639, i64 %628, i64 %638
  %641 = icmp eq i64 %640, 0
  br i1 %641, label %650, label %642

642:                                              ; preds = %637
  %643 = icmp ugt i64 %640, 4611686018427387903
  br i1 %643, label %644, label %645

644:                                              ; preds = %642
  tail call void @abort() #11
  unreachable

645:                                              ; preds = %642, %632
  %646 = phi i64 [ %640, %642 ], [ 4611686018427387903, %632 ]
  %647 = shl i64 %646, 2
  %648 = tail call i8* @_Znwm(i64 %647) #10
  %649 = bitcast i8* %648 to i32*
  br label %650

650:                                              ; preds = %645, %637
  %651 = phi i64 [ %646, %645 ], [ 0, %637 ]
  %652 = phi i8* [ %648, %645 ], [ null, %637 ]
  %653 = phi i32* [ %649, %645 ], [ null, %637 ]
  %654 = getelementptr inbounds i32, i32* %653, i64 %627
  %655 = getelementptr inbounds i32, i32* %653, i64 %651
  %656 = ptrtoint i32* %655 to i64
  store i32 11, i32* %654, align 4
  %657 = getelementptr inbounds i32, i32* %654, i64 1
  %658 = ptrtoint i32* %657 to i64
  %659 = ptrtoint i32* %653 to i64
  %660 = icmp sgt i64 %626, 0
  br i1 %660, label %661, label %663

661:                                              ; preds = %650
  %662 = inttoptr i64 %625 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %652, i8* align 4 %662, i64 %626, i1 false) #9
  br label %663

663:                                              ; preds = %661, %650
  store i64 %659, i64* %624, align 8
  store i64 %658, i64* %623, align 8
  store i64 %656, i64* %633, align 8
  %664 = icmp eq i64 %625, 0
  br i1 %664, label %667, label %665

665:                                              ; preds = %663
  %666 = inttoptr i64 %625 to i8*
  tail call void @_ZdlPv(i8* %666) #10
  br label %667

667:                                              ; preds = %665, %663, %617, %608
  %668 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 12
  %669 = load i8, i8* %668, align 4, !range !2
  %670 = icmp eq i8 %669, 0
  br i1 %670, label %726, label %671

671:                                              ; preds = %667
  %672 = load i32*, i32** %3, align 8
  %673 = load i32*, i32** %4, align 8
  %674 = icmp ult i32* %672, %673
  %675 = ptrtoint i32* %673 to i64
  br i1 %674, label %676, label %680

676:                                              ; preds = %671
  store i32 12, i32* %672, align 4
  %677 = getelementptr inbounds i32, i32* %672, i64 1
  %678 = ptrtoint i32* %677 to i64
  %679 = bitcast i32** %3 to i64*
  store i64 %678, i64* %679, align 8
  br label %726

680:                                              ; preds = %671
  %681 = ptrtoint i32* %672 to i64
  %682 = bitcast i32** %3 to i64*
  %683 = bitcast %"class.std::__1::vector"* %0 to i64*
  %684 = load i64, i64* %683, align 8
  %685 = sub i64 %681, %684
  %686 = ashr exact i64 %685, 2
  %687 = add nsw i64 %686, 1
  %688 = icmp ugt i64 %687, 4611686018427387903
  br i1 %688, label %689, label %691

689:                                              ; preds = %680
  %690 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %690) #11
  unreachable

691:                                              ; preds = %680
  %692 = bitcast i32** %4 to i64*
  %693 = sub i64 %675, %684
  %694 = ashr exact i64 %693, 2
  %695 = icmp ult i64 %694, 2305843009213693951
  br i1 %695, label %696, label %704

696:                                              ; preds = %691
  %697 = ashr exact i64 %693, 1
  %698 = icmp ult i64 %697, %687
  %699 = select i1 %698, i64 %687, i64 %697
  %700 = icmp eq i64 %699, 0
  br i1 %700, label %709, label %701

701:                                              ; preds = %696
  %702 = icmp ugt i64 %699, 4611686018427387903
  br i1 %702, label %703, label %704

703:                                              ; preds = %701
  tail call void @abort() #11
  unreachable

704:                                              ; preds = %701, %691
  %705 = phi i64 [ %699, %701 ], [ 4611686018427387903, %691 ]
  %706 = shl i64 %705, 2
  %707 = tail call i8* @_Znwm(i64 %706) #10
  %708 = bitcast i8* %707 to i32*
  br label %709

709:                                              ; preds = %704, %696
  %710 = phi i64 [ %705, %704 ], [ 0, %696 ]
  %711 = phi i8* [ %707, %704 ], [ null, %696 ]
  %712 = phi i32* [ %708, %704 ], [ null, %696 ]
  %713 = getelementptr inbounds i32, i32* %712, i64 %686
  %714 = getelementptr inbounds i32, i32* %712, i64 %710
  %715 = ptrtoint i32* %714 to i64
  store i32 12, i32* %713, align 4
  %716 = getelementptr inbounds i32, i32* %713, i64 1
  %717 = ptrtoint i32* %716 to i64
  %718 = ptrtoint i32* %712 to i64
  %719 = icmp sgt i64 %685, 0
  br i1 %719, label %720, label %722

720:                                              ; preds = %709
  %721 = inttoptr i64 %684 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %711, i8* align 4 %721, i64 %685, i1 false) #9
  br label %722

722:                                              ; preds = %720, %709
  store i64 %718, i64* %683, align 8
  store i64 %717, i64* %682, align 8
  store i64 %715, i64* %692, align 8
  %723 = icmp eq i64 %684, 0
  br i1 %723, label %726, label %724

724:                                              ; preds = %722
  %725 = inttoptr i64 %684 to i8*
  tail call void @_ZdlPv(i8* %725) #10
  br label %726

726:                                              ; preds = %724, %722, %676, %667
  %727 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 13
  %728 = load i8, i8* %727, align 1, !range !2
  %729 = icmp eq i8 %728, 0
  br i1 %729, label %785, label %730

730:                                              ; preds = %726
  %731 = load i32*, i32** %3, align 8
  %732 = load i32*, i32** %4, align 8
  %733 = icmp ult i32* %731, %732
  %734 = ptrtoint i32* %732 to i64
  br i1 %733, label %735, label %739

735:                                              ; preds = %730
  store i32 13, i32* %731, align 4
  %736 = getelementptr inbounds i32, i32* %731, i64 1
  %737 = ptrtoint i32* %736 to i64
  %738 = bitcast i32** %3 to i64*
  store i64 %737, i64* %738, align 8
  br label %785

739:                                              ; preds = %730
  %740 = ptrtoint i32* %731 to i64
  %741 = bitcast i32** %3 to i64*
  %742 = bitcast %"class.std::__1::vector"* %0 to i64*
  %743 = load i64, i64* %742, align 8
  %744 = sub i64 %740, %743
  %745 = ashr exact i64 %744, 2
  %746 = add nsw i64 %745, 1
  %747 = icmp ugt i64 %746, 4611686018427387903
  br i1 %747, label %748, label %750

748:                                              ; preds = %739
  %749 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %749) #11
  unreachable

750:                                              ; preds = %739
  %751 = bitcast i32** %4 to i64*
  %752 = sub i64 %734, %743
  %753 = ashr exact i64 %752, 2
  %754 = icmp ult i64 %753, 2305843009213693951
  br i1 %754, label %755, label %763

755:                                              ; preds = %750
  %756 = ashr exact i64 %752, 1
  %757 = icmp ult i64 %756, %746
  %758 = select i1 %757, i64 %746, i64 %756
  %759 = icmp eq i64 %758, 0
  br i1 %759, label %768, label %760

760:                                              ; preds = %755
  %761 = icmp ugt i64 %758, 4611686018427387903
  br i1 %761, label %762, label %763

762:                                              ; preds = %760
  tail call void @abort() #11
  unreachable

763:                                              ; preds = %760, %750
  %764 = phi i64 [ %758, %760 ], [ 4611686018427387903, %750 ]
  %765 = shl i64 %764, 2
  %766 = tail call i8* @_Znwm(i64 %765) #10
  %767 = bitcast i8* %766 to i32*
  br label %768

768:                                              ; preds = %763, %755
  %769 = phi i64 [ %764, %763 ], [ 0, %755 ]
  %770 = phi i8* [ %766, %763 ], [ null, %755 ]
  %771 = phi i32* [ %767, %763 ], [ null, %755 ]
  %772 = getelementptr inbounds i32, i32* %771, i64 %745
  %773 = getelementptr inbounds i32, i32* %771, i64 %769
  %774 = ptrtoint i32* %773 to i64
  store i32 13, i32* %772, align 4
  %775 = getelementptr inbounds i32, i32* %772, i64 1
  %776 = ptrtoint i32* %775 to i64
  %777 = ptrtoint i32* %771 to i64
  %778 = icmp sgt i64 %744, 0
  br i1 %778, label %779, label %781

779:                                              ; preds = %768
  %780 = inttoptr i64 %743 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %770, i8* align 4 %780, i64 %744, i1 false) #9
  br label %781

781:                                              ; preds = %779, %768
  store i64 %777, i64* %742, align 8
  store i64 %776, i64* %741, align 8
  store i64 %774, i64* %751, align 8
  %782 = icmp eq i64 %743, 0
  br i1 %782, label %785, label %783

783:                                              ; preds = %781
  %784 = inttoptr i64 %743 to i8*
  tail call void @_ZdlPv(i8* %784) #10
  br label %785

785:                                              ; preds = %783, %781, %735, %726
  %786 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 14
  %787 = load i8, i8* %786, align 2, !range !2
  %788 = icmp eq i8 %787, 0
  br i1 %788, label %844, label %789

789:                                              ; preds = %785
  %790 = load i32*, i32** %3, align 8
  %791 = load i32*, i32** %4, align 8
  %792 = icmp ult i32* %790, %791
  %793 = ptrtoint i32* %791 to i64
  br i1 %792, label %794, label %798

794:                                              ; preds = %789
  store i32 14, i32* %790, align 4
  %795 = getelementptr inbounds i32, i32* %790, i64 1
  %796 = ptrtoint i32* %795 to i64
  %797 = bitcast i32** %3 to i64*
  store i64 %796, i64* %797, align 8
  br label %844

798:                                              ; preds = %789
  %799 = ptrtoint i32* %790 to i64
  %800 = bitcast i32** %3 to i64*
  %801 = bitcast %"class.std::__1::vector"* %0 to i64*
  %802 = load i64, i64* %801, align 8
  %803 = sub i64 %799, %802
  %804 = ashr exact i64 %803, 2
  %805 = add nsw i64 %804, 1
  %806 = icmp ugt i64 %805, 4611686018427387903
  br i1 %806, label %807, label %809

807:                                              ; preds = %798
  %808 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %808) #11
  unreachable

809:                                              ; preds = %798
  %810 = bitcast i32** %4 to i64*
  %811 = sub i64 %793, %802
  %812 = ashr exact i64 %811, 2
  %813 = icmp ult i64 %812, 2305843009213693951
  br i1 %813, label %814, label %822

814:                                              ; preds = %809
  %815 = ashr exact i64 %811, 1
  %816 = icmp ult i64 %815, %805
  %817 = select i1 %816, i64 %805, i64 %815
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %827, label %819

819:                                              ; preds = %814
  %820 = icmp ugt i64 %817, 4611686018427387903
  br i1 %820, label %821, label %822

821:                                              ; preds = %819
  tail call void @abort() #11
  unreachable

822:                                              ; preds = %819, %809
  %823 = phi i64 [ %817, %819 ], [ 4611686018427387903, %809 ]
  %824 = shl i64 %823, 2
  %825 = tail call i8* @_Znwm(i64 %824) #10
  %826 = bitcast i8* %825 to i32*
  br label %827

827:                                              ; preds = %822, %814
  %828 = phi i64 [ %823, %822 ], [ 0, %814 ]
  %829 = phi i8* [ %825, %822 ], [ null, %814 ]
  %830 = phi i32* [ %826, %822 ], [ null, %814 ]
  %831 = getelementptr inbounds i32, i32* %830, i64 %804
  %832 = getelementptr inbounds i32, i32* %830, i64 %828
  %833 = ptrtoint i32* %832 to i64
  store i32 14, i32* %831, align 4
  %834 = getelementptr inbounds i32, i32* %831, i64 1
  %835 = ptrtoint i32* %834 to i64
  %836 = ptrtoint i32* %830 to i64
  %837 = icmp sgt i64 %803, 0
  br i1 %837, label %838, label %840

838:                                              ; preds = %827
  %839 = inttoptr i64 %802 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %829, i8* align 4 %839, i64 %803, i1 false) #9
  br label %840

840:                                              ; preds = %838, %827
  store i64 %836, i64* %801, align 8
  store i64 %835, i64* %800, align 8
  store i64 %833, i64* %810, align 8
  %841 = icmp eq i64 %802, 0
  br i1 %841, label %844, label %842

842:                                              ; preds = %840
  %843 = inttoptr i64 %802 to i8*
  tail call void @_ZdlPv(i8* %843) #10
  br label %844

844:                                              ; preds = %842, %840, %794, %785
  %845 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 15
  %846 = load i8, i8* %845, align 1, !range !2
  %847 = icmp eq i8 %846, 0
  br i1 %847, label %903, label %848

848:                                              ; preds = %844
  %849 = load i32*, i32** %3, align 8
  %850 = load i32*, i32** %4, align 8
  %851 = icmp ult i32* %849, %850
  %852 = ptrtoint i32* %850 to i64
  br i1 %851, label %853, label %857

853:                                              ; preds = %848
  store i32 15, i32* %849, align 4
  %854 = getelementptr inbounds i32, i32* %849, i64 1
  %855 = ptrtoint i32* %854 to i64
  %856 = bitcast i32** %3 to i64*
  store i64 %855, i64* %856, align 8
  br label %903

857:                                              ; preds = %848
  %858 = ptrtoint i32* %849 to i64
  %859 = bitcast i32** %3 to i64*
  %860 = bitcast %"class.std::__1::vector"* %0 to i64*
  %861 = load i64, i64* %860, align 8
  %862 = sub i64 %858, %861
  %863 = ashr exact i64 %862, 2
  %864 = add nsw i64 %863, 1
  %865 = icmp ugt i64 %864, 4611686018427387903
  br i1 %865, label %866, label %868

866:                                              ; preds = %857
  %867 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %867) #11
  unreachable

868:                                              ; preds = %857
  %869 = bitcast i32** %4 to i64*
  %870 = sub i64 %852, %861
  %871 = ashr exact i64 %870, 2
  %872 = icmp ult i64 %871, 2305843009213693951
  br i1 %872, label %873, label %881

873:                                              ; preds = %868
  %874 = ashr exact i64 %870, 1
  %875 = icmp ult i64 %874, %864
  %876 = select i1 %875, i64 %864, i64 %874
  %877 = icmp eq i64 %876, 0
  br i1 %877, label %886, label %878

878:                                              ; preds = %873
  %879 = icmp ugt i64 %876, 4611686018427387903
  br i1 %879, label %880, label %881

880:                                              ; preds = %878
  tail call void @abort() #11
  unreachable

881:                                              ; preds = %878, %868
  %882 = phi i64 [ %876, %878 ], [ 4611686018427387903, %868 ]
  %883 = shl i64 %882, 2
  %884 = tail call i8* @_Znwm(i64 %883) #10
  %885 = bitcast i8* %884 to i32*
  br label %886

886:                                              ; preds = %881, %873
  %887 = phi i64 [ %882, %881 ], [ 0, %873 ]
  %888 = phi i8* [ %884, %881 ], [ null, %873 ]
  %889 = phi i32* [ %885, %881 ], [ null, %873 ]
  %890 = getelementptr inbounds i32, i32* %889, i64 %863
  %891 = getelementptr inbounds i32, i32* %889, i64 %887
  %892 = ptrtoint i32* %891 to i64
  store i32 15, i32* %890, align 4
  %893 = getelementptr inbounds i32, i32* %890, i64 1
  %894 = ptrtoint i32* %893 to i64
  %895 = ptrtoint i32* %889 to i64
  %896 = icmp sgt i64 %862, 0
  br i1 %896, label %897, label %899

897:                                              ; preds = %886
  %898 = inttoptr i64 %861 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %888, i8* align 4 %898, i64 %862, i1 false) #9
  br label %899

899:                                              ; preds = %897, %886
  store i64 %895, i64* %860, align 8
  store i64 %894, i64* %859, align 8
  store i64 %892, i64* %869, align 8
  %900 = icmp eq i64 %861, 0
  br i1 %900, label %903, label %901

901:                                              ; preds = %899
  %902 = inttoptr i64 %861 to i8*
  tail call void @_ZdlPv(i8* %902) #10
  br label %903

903:                                              ; preds = %901, %899, %853, %844
  %904 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 16
  %905 = load i8, i8* %904, align 4, !range !2
  %906 = icmp eq i8 %905, 0
  br i1 %906, label %962, label %907

907:                                              ; preds = %903
  %908 = load i32*, i32** %3, align 8
  %909 = load i32*, i32** %4, align 8
  %910 = icmp ult i32* %908, %909
  %911 = ptrtoint i32* %909 to i64
  br i1 %910, label %912, label %916

912:                                              ; preds = %907
  store i32 16, i32* %908, align 4
  %913 = getelementptr inbounds i32, i32* %908, i64 1
  %914 = ptrtoint i32* %913 to i64
  %915 = bitcast i32** %3 to i64*
  store i64 %914, i64* %915, align 8
  br label %962

916:                                              ; preds = %907
  %917 = ptrtoint i32* %908 to i64
  %918 = bitcast i32** %3 to i64*
  %919 = bitcast %"class.std::__1::vector"* %0 to i64*
  %920 = load i64, i64* %919, align 8
  %921 = sub i64 %917, %920
  %922 = ashr exact i64 %921, 2
  %923 = add nsw i64 %922, 1
  %924 = icmp ugt i64 %923, 4611686018427387903
  br i1 %924, label %925, label %927

925:                                              ; preds = %916
  %926 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %926) #11
  unreachable

927:                                              ; preds = %916
  %928 = bitcast i32** %4 to i64*
  %929 = sub i64 %911, %920
  %930 = ashr exact i64 %929, 2
  %931 = icmp ult i64 %930, 2305843009213693951
  br i1 %931, label %932, label %940

932:                                              ; preds = %927
  %933 = ashr exact i64 %929, 1
  %934 = icmp ult i64 %933, %923
  %935 = select i1 %934, i64 %923, i64 %933
  %936 = icmp eq i64 %935, 0
  br i1 %936, label %945, label %937

937:                                              ; preds = %932
  %938 = icmp ugt i64 %935, 4611686018427387903
  br i1 %938, label %939, label %940

939:                                              ; preds = %937
  tail call void @abort() #11
  unreachable

940:                                              ; preds = %937, %927
  %941 = phi i64 [ %935, %937 ], [ 4611686018427387903, %927 ]
  %942 = shl i64 %941, 2
  %943 = tail call i8* @_Znwm(i64 %942) #10
  %944 = bitcast i8* %943 to i32*
  br label %945

945:                                              ; preds = %940, %932
  %946 = phi i64 [ %941, %940 ], [ 0, %932 ]
  %947 = phi i8* [ %943, %940 ], [ null, %932 ]
  %948 = phi i32* [ %944, %940 ], [ null, %932 ]
  %949 = getelementptr inbounds i32, i32* %948, i64 %922
  %950 = getelementptr inbounds i32, i32* %948, i64 %946
  %951 = ptrtoint i32* %950 to i64
  store i32 16, i32* %949, align 4
  %952 = getelementptr inbounds i32, i32* %949, i64 1
  %953 = ptrtoint i32* %952 to i64
  %954 = ptrtoint i32* %948 to i64
  %955 = icmp sgt i64 %921, 0
  br i1 %955, label %956, label %958

956:                                              ; preds = %945
  %957 = inttoptr i64 %920 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %947, i8* align 4 %957, i64 %921, i1 false) #9
  br label %958

958:                                              ; preds = %956, %945
  store i64 %954, i64* %919, align 8
  store i64 %953, i64* %918, align 8
  store i64 %951, i64* %928, align 8
  %959 = icmp eq i64 %920, 0
  br i1 %959, label %962, label %960

960:                                              ; preds = %958
  %961 = inttoptr i64 %920 to i8*
  tail call void @_ZdlPv(i8* %961) #10
  br label %962

962:                                              ; preds = %960, %958, %912, %903
  %963 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 17
  %964 = load i8, i8* %963, align 1, !range !2
  %965 = icmp eq i8 %964, 0
  br i1 %965, label %1021, label %966

966:                                              ; preds = %962
  %967 = load i32*, i32** %3, align 8
  %968 = load i32*, i32** %4, align 8
  %969 = icmp ult i32* %967, %968
  %970 = ptrtoint i32* %968 to i64
  br i1 %969, label %971, label %975

971:                                              ; preds = %966
  store i32 17, i32* %967, align 4
  %972 = getelementptr inbounds i32, i32* %967, i64 1
  %973 = ptrtoint i32* %972 to i64
  %974 = bitcast i32** %3 to i64*
  store i64 %973, i64* %974, align 8
  br label %1021

975:                                              ; preds = %966
  %976 = ptrtoint i32* %967 to i64
  %977 = bitcast i32** %3 to i64*
  %978 = bitcast %"class.std::__1::vector"* %0 to i64*
  %979 = load i64, i64* %978, align 8
  %980 = sub i64 %976, %979
  %981 = ashr exact i64 %980, 2
  %982 = add nsw i64 %981, 1
  %983 = icmp ugt i64 %982, 4611686018427387903
  br i1 %983, label %984, label %986

984:                                              ; preds = %975
  %985 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %985) #11
  unreachable

986:                                              ; preds = %975
  %987 = bitcast i32** %4 to i64*
  %988 = sub i64 %970, %979
  %989 = ashr exact i64 %988, 2
  %990 = icmp ult i64 %989, 2305843009213693951
  br i1 %990, label %991, label %999

991:                                              ; preds = %986
  %992 = ashr exact i64 %988, 1
  %993 = icmp ult i64 %992, %982
  %994 = select i1 %993, i64 %982, i64 %992
  %995 = icmp eq i64 %994, 0
  br i1 %995, label %1004, label %996

996:                                              ; preds = %991
  %997 = icmp ugt i64 %994, 4611686018427387903
  br i1 %997, label %998, label %999

998:                                              ; preds = %996
  tail call void @abort() #11
  unreachable

999:                                              ; preds = %996, %986
  %1000 = phi i64 [ %994, %996 ], [ 4611686018427387903, %986 ]
  %1001 = shl i64 %1000, 2
  %1002 = tail call i8* @_Znwm(i64 %1001) #10
  %1003 = bitcast i8* %1002 to i32*
  br label %1004

1004:                                             ; preds = %999, %991
  %1005 = phi i64 [ %1000, %999 ], [ 0, %991 ]
  %1006 = phi i8* [ %1002, %999 ], [ null, %991 ]
  %1007 = phi i32* [ %1003, %999 ], [ null, %991 ]
  %1008 = getelementptr inbounds i32, i32* %1007, i64 %981
  %1009 = getelementptr inbounds i32, i32* %1007, i64 %1005
  %1010 = ptrtoint i32* %1009 to i64
  store i32 17, i32* %1008, align 4
  %1011 = getelementptr inbounds i32, i32* %1008, i64 1
  %1012 = ptrtoint i32* %1011 to i64
  %1013 = ptrtoint i32* %1007 to i64
  %1014 = icmp sgt i64 %980, 0
  br i1 %1014, label %1015, label %1017

1015:                                             ; preds = %1004
  %1016 = inttoptr i64 %979 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1006, i8* align 4 %1016, i64 %980, i1 false) #9
  br label %1017

1017:                                             ; preds = %1015, %1004
  store i64 %1013, i64* %978, align 8
  store i64 %1012, i64* %977, align 8
  store i64 %1010, i64* %987, align 8
  %1018 = icmp eq i64 %979, 0
  br i1 %1018, label %1021, label %1019

1019:                                             ; preds = %1017
  %1020 = inttoptr i64 %979 to i8*
  tail call void @_ZdlPv(i8* %1020) #10
  br label %1021

1021:                                             ; preds = %1019, %1017, %971, %962
  %1022 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 18
  %1023 = load i8, i8* %1022, align 2, !range !2
  %1024 = icmp eq i8 %1023, 0
  br i1 %1024, label %1080, label %1025

1025:                                             ; preds = %1021
  %1026 = load i32*, i32** %3, align 8
  %1027 = load i32*, i32** %4, align 8
  %1028 = icmp ult i32* %1026, %1027
  %1029 = ptrtoint i32* %1027 to i64
  br i1 %1028, label %1030, label %1034

1030:                                             ; preds = %1025
  store i32 18, i32* %1026, align 4
  %1031 = getelementptr inbounds i32, i32* %1026, i64 1
  %1032 = ptrtoint i32* %1031 to i64
  %1033 = bitcast i32** %3 to i64*
  store i64 %1032, i64* %1033, align 8
  br label %1080

1034:                                             ; preds = %1025
  %1035 = ptrtoint i32* %1026 to i64
  %1036 = bitcast i32** %3 to i64*
  %1037 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1038 = load i64, i64* %1037, align 8
  %1039 = sub i64 %1035, %1038
  %1040 = ashr exact i64 %1039, 2
  %1041 = add nsw i64 %1040, 1
  %1042 = icmp ugt i64 %1041, 4611686018427387903
  br i1 %1042, label %1043, label %1045

1043:                                             ; preds = %1034
  %1044 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1044) #11
  unreachable

1045:                                             ; preds = %1034
  %1046 = bitcast i32** %4 to i64*
  %1047 = sub i64 %1029, %1038
  %1048 = ashr exact i64 %1047, 2
  %1049 = icmp ult i64 %1048, 2305843009213693951
  br i1 %1049, label %1050, label %1058

1050:                                             ; preds = %1045
  %1051 = ashr exact i64 %1047, 1
  %1052 = icmp ult i64 %1051, %1041
  %1053 = select i1 %1052, i64 %1041, i64 %1051
  %1054 = icmp eq i64 %1053, 0
  br i1 %1054, label %1063, label %1055

1055:                                             ; preds = %1050
  %1056 = icmp ugt i64 %1053, 4611686018427387903
  br i1 %1056, label %1057, label %1058

1057:                                             ; preds = %1055
  tail call void @abort() #11
  unreachable

1058:                                             ; preds = %1055, %1045
  %1059 = phi i64 [ %1053, %1055 ], [ 4611686018427387903, %1045 ]
  %1060 = shl i64 %1059, 2
  %1061 = tail call i8* @_Znwm(i64 %1060) #10
  %1062 = bitcast i8* %1061 to i32*
  br label %1063

1063:                                             ; preds = %1058, %1050
  %1064 = phi i64 [ %1059, %1058 ], [ 0, %1050 ]
  %1065 = phi i8* [ %1061, %1058 ], [ null, %1050 ]
  %1066 = phi i32* [ %1062, %1058 ], [ null, %1050 ]
  %1067 = getelementptr inbounds i32, i32* %1066, i64 %1040
  %1068 = getelementptr inbounds i32, i32* %1066, i64 %1064
  %1069 = ptrtoint i32* %1068 to i64
  store i32 18, i32* %1067, align 4
  %1070 = getelementptr inbounds i32, i32* %1067, i64 1
  %1071 = ptrtoint i32* %1070 to i64
  %1072 = ptrtoint i32* %1066 to i64
  %1073 = icmp sgt i64 %1039, 0
  br i1 %1073, label %1074, label %1076

1074:                                             ; preds = %1063
  %1075 = inttoptr i64 %1038 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1065, i8* align 4 %1075, i64 %1039, i1 false) #9
  br label %1076

1076:                                             ; preds = %1074, %1063
  store i64 %1072, i64* %1037, align 8
  store i64 %1071, i64* %1036, align 8
  store i64 %1069, i64* %1046, align 8
  %1077 = icmp eq i64 %1038, 0
  br i1 %1077, label %1080, label %1078

1078:                                             ; preds = %1076
  %1079 = inttoptr i64 %1038 to i8*
  tail call void @_ZdlPv(i8* %1079) #10
  br label %1080

1080:                                             ; preds = %1078, %1076, %1030, %1021
  %1081 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 19
  %1082 = load i8, i8* %1081, align 1, !range !2
  %1083 = icmp eq i8 %1082, 0
  br i1 %1083, label %1139, label %1084

1084:                                             ; preds = %1080
  %1085 = load i32*, i32** %3, align 8
  %1086 = load i32*, i32** %4, align 8
  %1087 = icmp ult i32* %1085, %1086
  %1088 = ptrtoint i32* %1086 to i64
  br i1 %1087, label %1089, label %1093

1089:                                             ; preds = %1084
  store i32 19, i32* %1085, align 4
  %1090 = getelementptr inbounds i32, i32* %1085, i64 1
  %1091 = ptrtoint i32* %1090 to i64
  %1092 = bitcast i32** %3 to i64*
  store i64 %1091, i64* %1092, align 8
  br label %1139

1093:                                             ; preds = %1084
  %1094 = ptrtoint i32* %1085 to i64
  %1095 = bitcast i32** %3 to i64*
  %1096 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1097 = load i64, i64* %1096, align 8
  %1098 = sub i64 %1094, %1097
  %1099 = ashr exact i64 %1098, 2
  %1100 = add nsw i64 %1099, 1
  %1101 = icmp ugt i64 %1100, 4611686018427387903
  br i1 %1101, label %1102, label %1104

1102:                                             ; preds = %1093
  %1103 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1103) #11
  unreachable

1104:                                             ; preds = %1093
  %1105 = bitcast i32** %4 to i64*
  %1106 = sub i64 %1088, %1097
  %1107 = ashr exact i64 %1106, 2
  %1108 = icmp ult i64 %1107, 2305843009213693951
  br i1 %1108, label %1109, label %1117

1109:                                             ; preds = %1104
  %1110 = ashr exact i64 %1106, 1
  %1111 = icmp ult i64 %1110, %1100
  %1112 = select i1 %1111, i64 %1100, i64 %1110
  %1113 = icmp eq i64 %1112, 0
  br i1 %1113, label %1122, label %1114

1114:                                             ; preds = %1109
  %1115 = icmp ugt i64 %1112, 4611686018427387903
  br i1 %1115, label %1116, label %1117

1116:                                             ; preds = %1114
  tail call void @abort() #11
  unreachable

1117:                                             ; preds = %1114, %1104
  %1118 = phi i64 [ %1112, %1114 ], [ 4611686018427387903, %1104 ]
  %1119 = shl i64 %1118, 2
  %1120 = tail call i8* @_Znwm(i64 %1119) #10
  %1121 = bitcast i8* %1120 to i32*
  br label %1122

1122:                                             ; preds = %1117, %1109
  %1123 = phi i64 [ %1118, %1117 ], [ 0, %1109 ]
  %1124 = phi i8* [ %1120, %1117 ], [ null, %1109 ]
  %1125 = phi i32* [ %1121, %1117 ], [ null, %1109 ]
  %1126 = getelementptr inbounds i32, i32* %1125, i64 %1099
  %1127 = getelementptr inbounds i32, i32* %1125, i64 %1123
  %1128 = ptrtoint i32* %1127 to i64
  store i32 19, i32* %1126, align 4
  %1129 = getelementptr inbounds i32, i32* %1126, i64 1
  %1130 = ptrtoint i32* %1129 to i64
  %1131 = ptrtoint i32* %1125 to i64
  %1132 = icmp sgt i64 %1098, 0
  br i1 %1132, label %1133, label %1135

1133:                                             ; preds = %1122
  %1134 = inttoptr i64 %1097 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1124, i8* align 4 %1134, i64 %1098, i1 false) #9
  br label %1135

1135:                                             ; preds = %1133, %1122
  store i64 %1131, i64* %1096, align 8
  store i64 %1130, i64* %1095, align 8
  store i64 %1128, i64* %1105, align 8
  %1136 = icmp eq i64 %1097, 0
  br i1 %1136, label %1139, label %1137

1137:                                             ; preds = %1135
  %1138 = inttoptr i64 %1097 to i8*
  tail call void @_ZdlPv(i8* %1138) #10
  br label %1139

1139:                                             ; preds = %1137, %1135, %1089, %1080
  %1140 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 20
  %1141 = load i8, i8* %1140, align 4, !range !2
  %1142 = icmp eq i8 %1141, 0
  br i1 %1142, label %1198, label %1143

1143:                                             ; preds = %1139
  %1144 = load i32*, i32** %3, align 8
  %1145 = load i32*, i32** %4, align 8
  %1146 = icmp ult i32* %1144, %1145
  %1147 = ptrtoint i32* %1145 to i64
  br i1 %1146, label %1148, label %1152

1148:                                             ; preds = %1143
  store i32 20, i32* %1144, align 4
  %1149 = getelementptr inbounds i32, i32* %1144, i64 1
  %1150 = ptrtoint i32* %1149 to i64
  %1151 = bitcast i32** %3 to i64*
  store i64 %1150, i64* %1151, align 8
  br label %1198

1152:                                             ; preds = %1143
  %1153 = ptrtoint i32* %1144 to i64
  %1154 = bitcast i32** %3 to i64*
  %1155 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1156 = load i64, i64* %1155, align 8
  %1157 = sub i64 %1153, %1156
  %1158 = ashr exact i64 %1157, 2
  %1159 = add nsw i64 %1158, 1
  %1160 = icmp ugt i64 %1159, 4611686018427387903
  br i1 %1160, label %1161, label %1163

1161:                                             ; preds = %1152
  %1162 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1162) #11
  unreachable

1163:                                             ; preds = %1152
  %1164 = bitcast i32** %4 to i64*
  %1165 = sub i64 %1147, %1156
  %1166 = ashr exact i64 %1165, 2
  %1167 = icmp ult i64 %1166, 2305843009213693951
  br i1 %1167, label %1168, label %1176

1168:                                             ; preds = %1163
  %1169 = ashr exact i64 %1165, 1
  %1170 = icmp ult i64 %1169, %1159
  %1171 = select i1 %1170, i64 %1159, i64 %1169
  %1172 = icmp eq i64 %1171, 0
  br i1 %1172, label %1181, label %1173

1173:                                             ; preds = %1168
  %1174 = icmp ugt i64 %1171, 4611686018427387903
  br i1 %1174, label %1175, label %1176

1175:                                             ; preds = %1173
  tail call void @abort() #11
  unreachable

1176:                                             ; preds = %1173, %1163
  %1177 = phi i64 [ %1171, %1173 ], [ 4611686018427387903, %1163 ]
  %1178 = shl i64 %1177, 2
  %1179 = tail call i8* @_Znwm(i64 %1178) #10
  %1180 = bitcast i8* %1179 to i32*
  br label %1181

1181:                                             ; preds = %1176, %1168
  %1182 = phi i64 [ %1177, %1176 ], [ 0, %1168 ]
  %1183 = phi i8* [ %1179, %1176 ], [ null, %1168 ]
  %1184 = phi i32* [ %1180, %1176 ], [ null, %1168 ]
  %1185 = getelementptr inbounds i32, i32* %1184, i64 %1158
  %1186 = getelementptr inbounds i32, i32* %1184, i64 %1182
  %1187 = ptrtoint i32* %1186 to i64
  store i32 20, i32* %1185, align 4
  %1188 = getelementptr inbounds i32, i32* %1185, i64 1
  %1189 = ptrtoint i32* %1188 to i64
  %1190 = ptrtoint i32* %1184 to i64
  %1191 = icmp sgt i64 %1157, 0
  br i1 %1191, label %1192, label %1194

1192:                                             ; preds = %1181
  %1193 = inttoptr i64 %1156 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1183, i8* align 4 %1193, i64 %1157, i1 false) #9
  br label %1194

1194:                                             ; preds = %1192, %1181
  store i64 %1190, i64* %1155, align 8
  store i64 %1189, i64* %1154, align 8
  store i64 %1187, i64* %1164, align 8
  %1195 = icmp eq i64 %1156, 0
  br i1 %1195, label %1198, label %1196

1196:                                             ; preds = %1194
  %1197 = inttoptr i64 %1156 to i8*
  tail call void @_ZdlPv(i8* %1197) #10
  br label %1198

1198:                                             ; preds = %1196, %1194, %1148, %1139
  %1199 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 21
  %1200 = load i8, i8* %1199, align 1, !range !2
  %1201 = icmp eq i8 %1200, 0
  br i1 %1201, label %1257, label %1202

1202:                                             ; preds = %1198
  %1203 = load i32*, i32** %3, align 8
  %1204 = load i32*, i32** %4, align 8
  %1205 = icmp ult i32* %1203, %1204
  %1206 = ptrtoint i32* %1204 to i64
  br i1 %1205, label %1207, label %1211

1207:                                             ; preds = %1202
  store i32 21, i32* %1203, align 4
  %1208 = getelementptr inbounds i32, i32* %1203, i64 1
  %1209 = ptrtoint i32* %1208 to i64
  %1210 = bitcast i32** %3 to i64*
  store i64 %1209, i64* %1210, align 8
  br label %1257

1211:                                             ; preds = %1202
  %1212 = ptrtoint i32* %1203 to i64
  %1213 = bitcast i32** %3 to i64*
  %1214 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1215 = load i64, i64* %1214, align 8
  %1216 = sub i64 %1212, %1215
  %1217 = ashr exact i64 %1216, 2
  %1218 = add nsw i64 %1217, 1
  %1219 = icmp ugt i64 %1218, 4611686018427387903
  br i1 %1219, label %1220, label %1222

1220:                                             ; preds = %1211
  %1221 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1221) #11
  unreachable

1222:                                             ; preds = %1211
  %1223 = bitcast i32** %4 to i64*
  %1224 = sub i64 %1206, %1215
  %1225 = ashr exact i64 %1224, 2
  %1226 = icmp ult i64 %1225, 2305843009213693951
  br i1 %1226, label %1227, label %1235

1227:                                             ; preds = %1222
  %1228 = ashr exact i64 %1224, 1
  %1229 = icmp ult i64 %1228, %1218
  %1230 = select i1 %1229, i64 %1218, i64 %1228
  %1231 = icmp eq i64 %1230, 0
  br i1 %1231, label %1240, label %1232

1232:                                             ; preds = %1227
  %1233 = icmp ugt i64 %1230, 4611686018427387903
  br i1 %1233, label %1234, label %1235

1234:                                             ; preds = %1232
  tail call void @abort() #11
  unreachable

1235:                                             ; preds = %1232, %1222
  %1236 = phi i64 [ %1230, %1232 ], [ 4611686018427387903, %1222 ]
  %1237 = shl i64 %1236, 2
  %1238 = tail call i8* @_Znwm(i64 %1237) #10
  %1239 = bitcast i8* %1238 to i32*
  br label %1240

1240:                                             ; preds = %1235, %1227
  %1241 = phi i64 [ %1236, %1235 ], [ 0, %1227 ]
  %1242 = phi i8* [ %1238, %1235 ], [ null, %1227 ]
  %1243 = phi i32* [ %1239, %1235 ], [ null, %1227 ]
  %1244 = getelementptr inbounds i32, i32* %1243, i64 %1217
  %1245 = getelementptr inbounds i32, i32* %1243, i64 %1241
  %1246 = ptrtoint i32* %1245 to i64
  store i32 21, i32* %1244, align 4
  %1247 = getelementptr inbounds i32, i32* %1244, i64 1
  %1248 = ptrtoint i32* %1247 to i64
  %1249 = ptrtoint i32* %1243 to i64
  %1250 = icmp sgt i64 %1216, 0
  br i1 %1250, label %1251, label %1253

1251:                                             ; preds = %1240
  %1252 = inttoptr i64 %1215 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1242, i8* align 4 %1252, i64 %1216, i1 false) #9
  br label %1253

1253:                                             ; preds = %1251, %1240
  store i64 %1249, i64* %1214, align 8
  store i64 %1248, i64* %1213, align 8
  store i64 %1246, i64* %1223, align 8
  %1254 = icmp eq i64 %1215, 0
  br i1 %1254, label %1257, label %1255

1255:                                             ; preds = %1253
  %1256 = inttoptr i64 %1215 to i8*
  tail call void @_ZdlPv(i8* %1256) #10
  br label %1257

1257:                                             ; preds = %1255, %1253, %1207, %1198
  %1258 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 22
  %1259 = load i8, i8* %1258, align 2, !range !2
  %1260 = icmp eq i8 %1259, 0
  br i1 %1260, label %1316, label %1261

1261:                                             ; preds = %1257
  %1262 = load i32*, i32** %3, align 8
  %1263 = load i32*, i32** %4, align 8
  %1264 = icmp ult i32* %1262, %1263
  %1265 = ptrtoint i32* %1263 to i64
  br i1 %1264, label %1266, label %1270

1266:                                             ; preds = %1261
  store i32 22, i32* %1262, align 4
  %1267 = getelementptr inbounds i32, i32* %1262, i64 1
  %1268 = ptrtoint i32* %1267 to i64
  %1269 = bitcast i32** %3 to i64*
  store i64 %1268, i64* %1269, align 8
  br label %1316

1270:                                             ; preds = %1261
  %1271 = ptrtoint i32* %1262 to i64
  %1272 = bitcast i32** %3 to i64*
  %1273 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1274 = load i64, i64* %1273, align 8
  %1275 = sub i64 %1271, %1274
  %1276 = ashr exact i64 %1275, 2
  %1277 = add nsw i64 %1276, 1
  %1278 = icmp ugt i64 %1277, 4611686018427387903
  br i1 %1278, label %1279, label %1281

1279:                                             ; preds = %1270
  %1280 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1280) #11
  unreachable

1281:                                             ; preds = %1270
  %1282 = bitcast i32** %4 to i64*
  %1283 = sub i64 %1265, %1274
  %1284 = ashr exact i64 %1283, 2
  %1285 = icmp ult i64 %1284, 2305843009213693951
  br i1 %1285, label %1286, label %1294

1286:                                             ; preds = %1281
  %1287 = ashr exact i64 %1283, 1
  %1288 = icmp ult i64 %1287, %1277
  %1289 = select i1 %1288, i64 %1277, i64 %1287
  %1290 = icmp eq i64 %1289, 0
  br i1 %1290, label %1299, label %1291

1291:                                             ; preds = %1286
  %1292 = icmp ugt i64 %1289, 4611686018427387903
  br i1 %1292, label %1293, label %1294

1293:                                             ; preds = %1291
  tail call void @abort() #11
  unreachable

1294:                                             ; preds = %1291, %1281
  %1295 = phi i64 [ %1289, %1291 ], [ 4611686018427387903, %1281 ]
  %1296 = shl i64 %1295, 2
  %1297 = tail call i8* @_Znwm(i64 %1296) #10
  %1298 = bitcast i8* %1297 to i32*
  br label %1299

1299:                                             ; preds = %1294, %1286
  %1300 = phi i64 [ %1295, %1294 ], [ 0, %1286 ]
  %1301 = phi i8* [ %1297, %1294 ], [ null, %1286 ]
  %1302 = phi i32* [ %1298, %1294 ], [ null, %1286 ]
  %1303 = getelementptr inbounds i32, i32* %1302, i64 %1276
  %1304 = getelementptr inbounds i32, i32* %1302, i64 %1300
  %1305 = ptrtoint i32* %1304 to i64
  store i32 22, i32* %1303, align 4
  %1306 = getelementptr inbounds i32, i32* %1303, i64 1
  %1307 = ptrtoint i32* %1306 to i64
  %1308 = ptrtoint i32* %1302 to i64
  %1309 = icmp sgt i64 %1275, 0
  br i1 %1309, label %1310, label %1312

1310:                                             ; preds = %1299
  %1311 = inttoptr i64 %1274 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1301, i8* align 4 %1311, i64 %1275, i1 false) #9
  br label %1312

1312:                                             ; preds = %1310, %1299
  store i64 %1308, i64* %1273, align 8
  store i64 %1307, i64* %1272, align 8
  store i64 %1305, i64* %1282, align 8
  %1313 = icmp eq i64 %1274, 0
  br i1 %1313, label %1316, label %1314

1314:                                             ; preds = %1312
  %1315 = inttoptr i64 %1274 to i8*
  tail call void @_ZdlPv(i8* %1315) #10
  br label %1316

1316:                                             ; preds = %1314, %1312, %1266, %1257
  %1317 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 23
  %1318 = load i8, i8* %1317, align 1, !range !2
  %1319 = icmp eq i8 %1318, 0
  br i1 %1319, label %1375, label %1320

1320:                                             ; preds = %1316
  %1321 = load i32*, i32** %3, align 8
  %1322 = load i32*, i32** %4, align 8
  %1323 = icmp ult i32* %1321, %1322
  %1324 = ptrtoint i32* %1322 to i64
  br i1 %1323, label %1325, label %1329

1325:                                             ; preds = %1320
  store i32 23, i32* %1321, align 4
  %1326 = getelementptr inbounds i32, i32* %1321, i64 1
  %1327 = ptrtoint i32* %1326 to i64
  %1328 = bitcast i32** %3 to i64*
  store i64 %1327, i64* %1328, align 8
  br label %1375

1329:                                             ; preds = %1320
  %1330 = ptrtoint i32* %1321 to i64
  %1331 = bitcast i32** %3 to i64*
  %1332 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1333 = load i64, i64* %1332, align 8
  %1334 = sub i64 %1330, %1333
  %1335 = ashr exact i64 %1334, 2
  %1336 = add nsw i64 %1335, 1
  %1337 = icmp ugt i64 %1336, 4611686018427387903
  br i1 %1337, label %1338, label %1340

1338:                                             ; preds = %1329
  %1339 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1339) #11
  unreachable

1340:                                             ; preds = %1329
  %1341 = bitcast i32** %4 to i64*
  %1342 = sub i64 %1324, %1333
  %1343 = ashr exact i64 %1342, 2
  %1344 = icmp ult i64 %1343, 2305843009213693951
  br i1 %1344, label %1345, label %1353

1345:                                             ; preds = %1340
  %1346 = ashr exact i64 %1342, 1
  %1347 = icmp ult i64 %1346, %1336
  %1348 = select i1 %1347, i64 %1336, i64 %1346
  %1349 = icmp eq i64 %1348, 0
  br i1 %1349, label %1358, label %1350

1350:                                             ; preds = %1345
  %1351 = icmp ugt i64 %1348, 4611686018427387903
  br i1 %1351, label %1352, label %1353

1352:                                             ; preds = %1350
  tail call void @abort() #11
  unreachable

1353:                                             ; preds = %1350, %1340
  %1354 = phi i64 [ %1348, %1350 ], [ 4611686018427387903, %1340 ]
  %1355 = shl i64 %1354, 2
  %1356 = tail call i8* @_Znwm(i64 %1355) #10
  %1357 = bitcast i8* %1356 to i32*
  br label %1358

1358:                                             ; preds = %1353, %1345
  %1359 = phi i64 [ %1354, %1353 ], [ 0, %1345 ]
  %1360 = phi i8* [ %1356, %1353 ], [ null, %1345 ]
  %1361 = phi i32* [ %1357, %1353 ], [ null, %1345 ]
  %1362 = getelementptr inbounds i32, i32* %1361, i64 %1335
  %1363 = getelementptr inbounds i32, i32* %1361, i64 %1359
  %1364 = ptrtoint i32* %1363 to i64
  store i32 23, i32* %1362, align 4
  %1365 = getelementptr inbounds i32, i32* %1362, i64 1
  %1366 = ptrtoint i32* %1365 to i64
  %1367 = ptrtoint i32* %1361 to i64
  %1368 = icmp sgt i64 %1334, 0
  br i1 %1368, label %1369, label %1371

1369:                                             ; preds = %1358
  %1370 = inttoptr i64 %1333 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1360, i8* align 4 %1370, i64 %1334, i1 false) #9
  br label %1371

1371:                                             ; preds = %1369, %1358
  store i64 %1367, i64* %1332, align 8
  store i64 %1366, i64* %1331, align 8
  store i64 %1364, i64* %1341, align 8
  %1372 = icmp eq i64 %1333, 0
  br i1 %1372, label %1375, label %1373

1373:                                             ; preds = %1371
  %1374 = inttoptr i64 %1333 to i8*
  tail call void @_ZdlPv(i8* %1374) #10
  br label %1375

1375:                                             ; preds = %1373, %1371, %1325, %1316
  %1376 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 24
  %1377 = load i8, i8* %1376, align 4, !range !2
  %1378 = icmp eq i8 %1377, 0
  br i1 %1378, label %1434, label %1379

1379:                                             ; preds = %1375
  %1380 = load i32*, i32** %3, align 8
  %1381 = load i32*, i32** %4, align 8
  %1382 = icmp ult i32* %1380, %1381
  %1383 = ptrtoint i32* %1381 to i64
  br i1 %1382, label %1384, label %1388

1384:                                             ; preds = %1379
  store i32 24, i32* %1380, align 4
  %1385 = getelementptr inbounds i32, i32* %1380, i64 1
  %1386 = ptrtoint i32* %1385 to i64
  %1387 = bitcast i32** %3 to i64*
  store i64 %1386, i64* %1387, align 8
  br label %1434

1388:                                             ; preds = %1379
  %1389 = ptrtoint i32* %1380 to i64
  %1390 = bitcast i32** %3 to i64*
  %1391 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1392 = load i64, i64* %1391, align 8
  %1393 = sub i64 %1389, %1392
  %1394 = ashr exact i64 %1393, 2
  %1395 = add nsw i64 %1394, 1
  %1396 = icmp ugt i64 %1395, 4611686018427387903
  br i1 %1396, label %1397, label %1399

1397:                                             ; preds = %1388
  %1398 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1398) #11
  unreachable

1399:                                             ; preds = %1388
  %1400 = bitcast i32** %4 to i64*
  %1401 = sub i64 %1383, %1392
  %1402 = ashr exact i64 %1401, 2
  %1403 = icmp ult i64 %1402, 2305843009213693951
  br i1 %1403, label %1404, label %1412

1404:                                             ; preds = %1399
  %1405 = ashr exact i64 %1401, 1
  %1406 = icmp ult i64 %1405, %1395
  %1407 = select i1 %1406, i64 %1395, i64 %1405
  %1408 = icmp eq i64 %1407, 0
  br i1 %1408, label %1417, label %1409

1409:                                             ; preds = %1404
  %1410 = icmp ugt i64 %1407, 4611686018427387903
  br i1 %1410, label %1411, label %1412

1411:                                             ; preds = %1409
  tail call void @abort() #11
  unreachable

1412:                                             ; preds = %1409, %1399
  %1413 = phi i64 [ %1407, %1409 ], [ 4611686018427387903, %1399 ]
  %1414 = shl i64 %1413, 2
  %1415 = tail call i8* @_Znwm(i64 %1414) #10
  %1416 = bitcast i8* %1415 to i32*
  br label %1417

1417:                                             ; preds = %1412, %1404
  %1418 = phi i64 [ %1413, %1412 ], [ 0, %1404 ]
  %1419 = phi i8* [ %1415, %1412 ], [ null, %1404 ]
  %1420 = phi i32* [ %1416, %1412 ], [ null, %1404 ]
  %1421 = getelementptr inbounds i32, i32* %1420, i64 %1394
  %1422 = getelementptr inbounds i32, i32* %1420, i64 %1418
  %1423 = ptrtoint i32* %1422 to i64
  store i32 24, i32* %1421, align 4
  %1424 = getelementptr inbounds i32, i32* %1421, i64 1
  %1425 = ptrtoint i32* %1424 to i64
  %1426 = ptrtoint i32* %1420 to i64
  %1427 = icmp sgt i64 %1393, 0
  br i1 %1427, label %1428, label %1430

1428:                                             ; preds = %1417
  %1429 = inttoptr i64 %1392 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1419, i8* align 4 %1429, i64 %1393, i1 false) #9
  br label %1430

1430:                                             ; preds = %1428, %1417
  store i64 %1426, i64* %1391, align 8
  store i64 %1425, i64* %1390, align 8
  store i64 %1423, i64* %1400, align 8
  %1431 = icmp eq i64 %1392, 0
  br i1 %1431, label %1434, label %1432

1432:                                             ; preds = %1430
  %1433 = inttoptr i64 %1392 to i8*
  tail call void @_ZdlPv(i8* %1433) #10
  br label %1434

1434:                                             ; preds = %1432, %1430, %1384, %1375
  %1435 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 25
  %1436 = load i8, i8* %1435, align 1, !range !2
  %1437 = icmp eq i8 %1436, 0
  br i1 %1437, label %1493, label %1438

1438:                                             ; preds = %1434
  %1439 = load i32*, i32** %3, align 8
  %1440 = load i32*, i32** %4, align 8
  %1441 = icmp ult i32* %1439, %1440
  %1442 = ptrtoint i32* %1440 to i64
  br i1 %1441, label %1443, label %1447

1443:                                             ; preds = %1438
  store i32 25, i32* %1439, align 4
  %1444 = getelementptr inbounds i32, i32* %1439, i64 1
  %1445 = ptrtoint i32* %1444 to i64
  %1446 = bitcast i32** %3 to i64*
  store i64 %1445, i64* %1446, align 8
  br label %1493

1447:                                             ; preds = %1438
  %1448 = ptrtoint i32* %1439 to i64
  %1449 = bitcast i32** %3 to i64*
  %1450 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1451 = load i64, i64* %1450, align 8
  %1452 = sub i64 %1448, %1451
  %1453 = ashr exact i64 %1452, 2
  %1454 = add nsw i64 %1453, 1
  %1455 = icmp ugt i64 %1454, 4611686018427387903
  br i1 %1455, label %1456, label %1458

1456:                                             ; preds = %1447
  %1457 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1457) #11
  unreachable

1458:                                             ; preds = %1447
  %1459 = bitcast i32** %4 to i64*
  %1460 = sub i64 %1442, %1451
  %1461 = ashr exact i64 %1460, 2
  %1462 = icmp ult i64 %1461, 2305843009213693951
  br i1 %1462, label %1463, label %1471

1463:                                             ; preds = %1458
  %1464 = ashr exact i64 %1460, 1
  %1465 = icmp ult i64 %1464, %1454
  %1466 = select i1 %1465, i64 %1454, i64 %1464
  %1467 = icmp eq i64 %1466, 0
  br i1 %1467, label %1476, label %1468

1468:                                             ; preds = %1463
  %1469 = icmp ugt i64 %1466, 4611686018427387903
  br i1 %1469, label %1470, label %1471

1470:                                             ; preds = %1468
  tail call void @abort() #11
  unreachable

1471:                                             ; preds = %1468, %1458
  %1472 = phi i64 [ %1466, %1468 ], [ 4611686018427387903, %1458 ]
  %1473 = shl i64 %1472, 2
  %1474 = tail call i8* @_Znwm(i64 %1473) #10
  %1475 = bitcast i8* %1474 to i32*
  br label %1476

1476:                                             ; preds = %1471, %1463
  %1477 = phi i64 [ %1472, %1471 ], [ 0, %1463 ]
  %1478 = phi i8* [ %1474, %1471 ], [ null, %1463 ]
  %1479 = phi i32* [ %1475, %1471 ], [ null, %1463 ]
  %1480 = getelementptr inbounds i32, i32* %1479, i64 %1453
  %1481 = getelementptr inbounds i32, i32* %1479, i64 %1477
  %1482 = ptrtoint i32* %1481 to i64
  store i32 25, i32* %1480, align 4
  %1483 = getelementptr inbounds i32, i32* %1480, i64 1
  %1484 = ptrtoint i32* %1483 to i64
  %1485 = ptrtoint i32* %1479 to i64
  %1486 = icmp sgt i64 %1452, 0
  br i1 %1486, label %1487, label %1489

1487:                                             ; preds = %1476
  %1488 = inttoptr i64 %1451 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1478, i8* align 4 %1488, i64 %1452, i1 false) #9
  br label %1489

1489:                                             ; preds = %1487, %1476
  store i64 %1485, i64* %1450, align 8
  store i64 %1484, i64* %1449, align 8
  store i64 %1482, i64* %1459, align 8
  %1490 = icmp eq i64 %1451, 0
  br i1 %1490, label %1493, label %1491

1491:                                             ; preds = %1489
  %1492 = inttoptr i64 %1451 to i8*
  tail call void @_ZdlPv(i8* %1492) #10
  br label %1493

1493:                                             ; preds = %1491, %1489, %1443, %1434
  %1494 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 26
  %1495 = load i8, i8* %1494, align 2, !range !2
  %1496 = icmp eq i8 %1495, 0
  br i1 %1496, label %1552, label %1497

1497:                                             ; preds = %1493
  %1498 = load i32*, i32** %3, align 8
  %1499 = load i32*, i32** %4, align 8
  %1500 = icmp ult i32* %1498, %1499
  %1501 = ptrtoint i32* %1499 to i64
  br i1 %1500, label %1502, label %1506

1502:                                             ; preds = %1497
  store i32 26, i32* %1498, align 4
  %1503 = getelementptr inbounds i32, i32* %1498, i64 1
  %1504 = ptrtoint i32* %1503 to i64
  %1505 = bitcast i32** %3 to i64*
  store i64 %1504, i64* %1505, align 8
  br label %1552

1506:                                             ; preds = %1497
  %1507 = ptrtoint i32* %1498 to i64
  %1508 = bitcast i32** %3 to i64*
  %1509 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1510 = load i64, i64* %1509, align 8
  %1511 = sub i64 %1507, %1510
  %1512 = ashr exact i64 %1511, 2
  %1513 = add nsw i64 %1512, 1
  %1514 = icmp ugt i64 %1513, 4611686018427387903
  br i1 %1514, label %1515, label %1517

1515:                                             ; preds = %1506
  %1516 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1516) #11
  unreachable

1517:                                             ; preds = %1506
  %1518 = bitcast i32** %4 to i64*
  %1519 = sub i64 %1501, %1510
  %1520 = ashr exact i64 %1519, 2
  %1521 = icmp ult i64 %1520, 2305843009213693951
  br i1 %1521, label %1522, label %1530

1522:                                             ; preds = %1517
  %1523 = ashr exact i64 %1519, 1
  %1524 = icmp ult i64 %1523, %1513
  %1525 = select i1 %1524, i64 %1513, i64 %1523
  %1526 = icmp eq i64 %1525, 0
  br i1 %1526, label %1535, label %1527

1527:                                             ; preds = %1522
  %1528 = icmp ugt i64 %1525, 4611686018427387903
  br i1 %1528, label %1529, label %1530

1529:                                             ; preds = %1527
  tail call void @abort() #11
  unreachable

1530:                                             ; preds = %1527, %1517
  %1531 = phi i64 [ %1525, %1527 ], [ 4611686018427387903, %1517 ]
  %1532 = shl i64 %1531, 2
  %1533 = tail call i8* @_Znwm(i64 %1532) #10
  %1534 = bitcast i8* %1533 to i32*
  br label %1535

1535:                                             ; preds = %1530, %1522
  %1536 = phi i64 [ %1531, %1530 ], [ 0, %1522 ]
  %1537 = phi i8* [ %1533, %1530 ], [ null, %1522 ]
  %1538 = phi i32* [ %1534, %1530 ], [ null, %1522 ]
  %1539 = getelementptr inbounds i32, i32* %1538, i64 %1512
  %1540 = getelementptr inbounds i32, i32* %1538, i64 %1536
  %1541 = ptrtoint i32* %1540 to i64
  store i32 26, i32* %1539, align 4
  %1542 = getelementptr inbounds i32, i32* %1539, i64 1
  %1543 = ptrtoint i32* %1542 to i64
  %1544 = ptrtoint i32* %1538 to i64
  %1545 = icmp sgt i64 %1511, 0
  br i1 %1545, label %1546, label %1548

1546:                                             ; preds = %1535
  %1547 = inttoptr i64 %1510 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1537, i8* align 4 %1547, i64 %1511, i1 false) #9
  br label %1548

1548:                                             ; preds = %1546, %1535
  store i64 %1544, i64* %1509, align 8
  store i64 %1543, i64* %1508, align 8
  store i64 %1541, i64* %1518, align 8
  %1549 = icmp eq i64 %1510, 0
  br i1 %1549, label %1552, label %1550

1550:                                             ; preds = %1548
  %1551 = inttoptr i64 %1510 to i8*
  tail call void @_ZdlPv(i8* %1551) #10
  br label %1552

1552:                                             ; preds = %1550, %1548, %1502, %1493
  %1553 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 27
  %1554 = load i8, i8* %1553, align 1, !range !2
  %1555 = icmp eq i8 %1554, 0
  br i1 %1555, label %1611, label %1556

1556:                                             ; preds = %1552
  %1557 = load i32*, i32** %3, align 8
  %1558 = load i32*, i32** %4, align 8
  %1559 = icmp ult i32* %1557, %1558
  %1560 = ptrtoint i32* %1558 to i64
  br i1 %1559, label %1561, label %1565

1561:                                             ; preds = %1556
  store i32 27, i32* %1557, align 4
  %1562 = getelementptr inbounds i32, i32* %1557, i64 1
  %1563 = ptrtoint i32* %1562 to i64
  %1564 = bitcast i32** %3 to i64*
  store i64 %1563, i64* %1564, align 8
  br label %1611

1565:                                             ; preds = %1556
  %1566 = ptrtoint i32* %1557 to i64
  %1567 = bitcast i32** %3 to i64*
  %1568 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1569 = load i64, i64* %1568, align 8
  %1570 = sub i64 %1566, %1569
  %1571 = ashr exact i64 %1570, 2
  %1572 = add nsw i64 %1571, 1
  %1573 = icmp ugt i64 %1572, 4611686018427387903
  br i1 %1573, label %1574, label %1576

1574:                                             ; preds = %1565
  %1575 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1575) #11
  unreachable

1576:                                             ; preds = %1565
  %1577 = bitcast i32** %4 to i64*
  %1578 = sub i64 %1560, %1569
  %1579 = ashr exact i64 %1578, 2
  %1580 = icmp ult i64 %1579, 2305843009213693951
  br i1 %1580, label %1581, label %1589

1581:                                             ; preds = %1576
  %1582 = ashr exact i64 %1578, 1
  %1583 = icmp ult i64 %1582, %1572
  %1584 = select i1 %1583, i64 %1572, i64 %1582
  %1585 = icmp eq i64 %1584, 0
  br i1 %1585, label %1594, label %1586

1586:                                             ; preds = %1581
  %1587 = icmp ugt i64 %1584, 4611686018427387903
  br i1 %1587, label %1588, label %1589

1588:                                             ; preds = %1586
  tail call void @abort() #11
  unreachable

1589:                                             ; preds = %1586, %1576
  %1590 = phi i64 [ %1584, %1586 ], [ 4611686018427387903, %1576 ]
  %1591 = shl i64 %1590, 2
  %1592 = tail call i8* @_Znwm(i64 %1591) #10
  %1593 = bitcast i8* %1592 to i32*
  br label %1594

1594:                                             ; preds = %1589, %1581
  %1595 = phi i64 [ %1590, %1589 ], [ 0, %1581 ]
  %1596 = phi i8* [ %1592, %1589 ], [ null, %1581 ]
  %1597 = phi i32* [ %1593, %1589 ], [ null, %1581 ]
  %1598 = getelementptr inbounds i32, i32* %1597, i64 %1571
  %1599 = getelementptr inbounds i32, i32* %1597, i64 %1595
  %1600 = ptrtoint i32* %1599 to i64
  store i32 27, i32* %1598, align 4
  %1601 = getelementptr inbounds i32, i32* %1598, i64 1
  %1602 = ptrtoint i32* %1601 to i64
  %1603 = ptrtoint i32* %1597 to i64
  %1604 = icmp sgt i64 %1570, 0
  br i1 %1604, label %1605, label %1607

1605:                                             ; preds = %1594
  %1606 = inttoptr i64 %1569 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1596, i8* align 4 %1606, i64 %1570, i1 false) #9
  br label %1607

1607:                                             ; preds = %1605, %1594
  store i64 %1603, i64* %1568, align 8
  store i64 %1602, i64* %1567, align 8
  store i64 %1600, i64* %1577, align 8
  %1608 = icmp eq i64 %1569, 0
  br i1 %1608, label %1611, label %1609

1609:                                             ; preds = %1607
  %1610 = inttoptr i64 %1569 to i8*
  tail call void @_ZdlPv(i8* %1610) #10
  br label %1611

1611:                                             ; preds = %1609, %1607, %1561, %1552
  %1612 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 28
  %1613 = load i8, i8* %1612, align 4, !range !2
  %1614 = icmp eq i8 %1613, 0
  br i1 %1614, label %1670, label %1615

1615:                                             ; preds = %1611
  %1616 = load i32*, i32** %3, align 8
  %1617 = load i32*, i32** %4, align 8
  %1618 = icmp ult i32* %1616, %1617
  %1619 = ptrtoint i32* %1617 to i64
  br i1 %1618, label %1620, label %1624

1620:                                             ; preds = %1615
  store i32 28, i32* %1616, align 4
  %1621 = getelementptr inbounds i32, i32* %1616, i64 1
  %1622 = ptrtoint i32* %1621 to i64
  %1623 = bitcast i32** %3 to i64*
  store i64 %1622, i64* %1623, align 8
  br label %1670

1624:                                             ; preds = %1615
  %1625 = ptrtoint i32* %1616 to i64
  %1626 = bitcast i32** %3 to i64*
  %1627 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1628 = load i64, i64* %1627, align 8
  %1629 = sub i64 %1625, %1628
  %1630 = ashr exact i64 %1629, 2
  %1631 = add nsw i64 %1630, 1
  %1632 = icmp ugt i64 %1631, 4611686018427387903
  br i1 %1632, label %1633, label %1635

1633:                                             ; preds = %1624
  %1634 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1634) #11
  unreachable

1635:                                             ; preds = %1624
  %1636 = bitcast i32** %4 to i64*
  %1637 = sub i64 %1619, %1628
  %1638 = ashr exact i64 %1637, 2
  %1639 = icmp ult i64 %1638, 2305843009213693951
  br i1 %1639, label %1640, label %1648

1640:                                             ; preds = %1635
  %1641 = ashr exact i64 %1637, 1
  %1642 = icmp ult i64 %1641, %1631
  %1643 = select i1 %1642, i64 %1631, i64 %1641
  %1644 = icmp eq i64 %1643, 0
  br i1 %1644, label %1653, label %1645

1645:                                             ; preds = %1640
  %1646 = icmp ugt i64 %1643, 4611686018427387903
  br i1 %1646, label %1647, label %1648

1647:                                             ; preds = %1645
  tail call void @abort() #11
  unreachable

1648:                                             ; preds = %1645, %1635
  %1649 = phi i64 [ %1643, %1645 ], [ 4611686018427387903, %1635 ]
  %1650 = shl i64 %1649, 2
  %1651 = tail call i8* @_Znwm(i64 %1650) #10
  %1652 = bitcast i8* %1651 to i32*
  br label %1653

1653:                                             ; preds = %1648, %1640
  %1654 = phi i64 [ %1649, %1648 ], [ 0, %1640 ]
  %1655 = phi i8* [ %1651, %1648 ], [ null, %1640 ]
  %1656 = phi i32* [ %1652, %1648 ], [ null, %1640 ]
  %1657 = getelementptr inbounds i32, i32* %1656, i64 %1630
  %1658 = getelementptr inbounds i32, i32* %1656, i64 %1654
  %1659 = ptrtoint i32* %1658 to i64
  store i32 28, i32* %1657, align 4
  %1660 = getelementptr inbounds i32, i32* %1657, i64 1
  %1661 = ptrtoint i32* %1660 to i64
  %1662 = ptrtoint i32* %1656 to i64
  %1663 = icmp sgt i64 %1629, 0
  br i1 %1663, label %1664, label %1666

1664:                                             ; preds = %1653
  %1665 = inttoptr i64 %1628 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1655, i8* align 4 %1665, i64 %1629, i1 false) #9
  br label %1666

1666:                                             ; preds = %1664, %1653
  store i64 %1662, i64* %1627, align 8
  store i64 %1661, i64* %1626, align 8
  store i64 %1659, i64* %1636, align 8
  %1667 = icmp eq i64 %1628, 0
  br i1 %1667, label %1670, label %1668

1668:                                             ; preds = %1666
  %1669 = inttoptr i64 %1628 to i8*
  tail call void @_ZdlPv(i8* %1669) #10
  br label %1670

1670:                                             ; preds = %1668, %1666, %1620, %1611
  %1671 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 29
  %1672 = load i8, i8* %1671, align 1, !range !2
  %1673 = icmp eq i8 %1672, 0
  br i1 %1673, label %1729, label %1674

1674:                                             ; preds = %1670
  %1675 = load i32*, i32** %3, align 8
  %1676 = load i32*, i32** %4, align 8
  %1677 = icmp ult i32* %1675, %1676
  %1678 = ptrtoint i32* %1676 to i64
  br i1 %1677, label %1679, label %1683

1679:                                             ; preds = %1674
  store i32 29, i32* %1675, align 4
  %1680 = getelementptr inbounds i32, i32* %1675, i64 1
  %1681 = ptrtoint i32* %1680 to i64
  %1682 = bitcast i32** %3 to i64*
  store i64 %1681, i64* %1682, align 8
  br label %1729

1683:                                             ; preds = %1674
  %1684 = ptrtoint i32* %1675 to i64
  %1685 = bitcast i32** %3 to i64*
  %1686 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1687 = load i64, i64* %1686, align 8
  %1688 = sub i64 %1684, %1687
  %1689 = ashr exact i64 %1688, 2
  %1690 = add nsw i64 %1689, 1
  %1691 = icmp ugt i64 %1690, 4611686018427387903
  br i1 %1691, label %1692, label %1694

1692:                                             ; preds = %1683
  %1693 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1693) #11
  unreachable

1694:                                             ; preds = %1683
  %1695 = bitcast i32** %4 to i64*
  %1696 = sub i64 %1678, %1687
  %1697 = ashr exact i64 %1696, 2
  %1698 = icmp ult i64 %1697, 2305843009213693951
  br i1 %1698, label %1699, label %1707

1699:                                             ; preds = %1694
  %1700 = ashr exact i64 %1696, 1
  %1701 = icmp ult i64 %1700, %1690
  %1702 = select i1 %1701, i64 %1690, i64 %1700
  %1703 = icmp eq i64 %1702, 0
  br i1 %1703, label %1712, label %1704

1704:                                             ; preds = %1699
  %1705 = icmp ugt i64 %1702, 4611686018427387903
  br i1 %1705, label %1706, label %1707

1706:                                             ; preds = %1704
  tail call void @abort() #11
  unreachable

1707:                                             ; preds = %1704, %1694
  %1708 = phi i64 [ %1702, %1704 ], [ 4611686018427387903, %1694 ]
  %1709 = shl i64 %1708, 2
  %1710 = tail call i8* @_Znwm(i64 %1709) #10
  %1711 = bitcast i8* %1710 to i32*
  br label %1712

1712:                                             ; preds = %1707, %1699
  %1713 = phi i64 [ %1708, %1707 ], [ 0, %1699 ]
  %1714 = phi i8* [ %1710, %1707 ], [ null, %1699 ]
  %1715 = phi i32* [ %1711, %1707 ], [ null, %1699 ]
  %1716 = getelementptr inbounds i32, i32* %1715, i64 %1689
  %1717 = getelementptr inbounds i32, i32* %1715, i64 %1713
  %1718 = ptrtoint i32* %1717 to i64
  store i32 29, i32* %1716, align 4
  %1719 = getelementptr inbounds i32, i32* %1716, i64 1
  %1720 = ptrtoint i32* %1719 to i64
  %1721 = ptrtoint i32* %1715 to i64
  %1722 = icmp sgt i64 %1688, 0
  br i1 %1722, label %1723, label %1725

1723:                                             ; preds = %1712
  %1724 = inttoptr i64 %1687 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1714, i8* align 4 %1724, i64 %1688, i1 false) #9
  br label %1725

1725:                                             ; preds = %1723, %1712
  store i64 %1721, i64* %1686, align 8
  store i64 %1720, i64* %1685, align 8
  store i64 %1718, i64* %1695, align 8
  %1726 = icmp eq i64 %1687, 0
  br i1 %1726, label %1729, label %1727

1727:                                             ; preds = %1725
  %1728 = inttoptr i64 %1687 to i8*
  tail call void @_ZdlPv(i8* %1728) #10
  br label %1729

1729:                                             ; preds = %1727, %1725, %1679, %1670
  %1730 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 30
  %1731 = load i8, i8* %1730, align 2, !range !2
  %1732 = icmp eq i8 %1731, 0
  br i1 %1732, label %1788, label %1733

1733:                                             ; preds = %1729
  %1734 = load i32*, i32** %3, align 8
  %1735 = load i32*, i32** %4, align 8
  %1736 = icmp ult i32* %1734, %1735
  %1737 = ptrtoint i32* %1735 to i64
  br i1 %1736, label %1738, label %1742

1738:                                             ; preds = %1733
  store i32 30, i32* %1734, align 4
  %1739 = getelementptr inbounds i32, i32* %1734, i64 1
  %1740 = ptrtoint i32* %1739 to i64
  %1741 = bitcast i32** %3 to i64*
  store i64 %1740, i64* %1741, align 8
  br label %1788

1742:                                             ; preds = %1733
  %1743 = ptrtoint i32* %1734 to i64
  %1744 = bitcast i32** %3 to i64*
  %1745 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1746 = load i64, i64* %1745, align 8
  %1747 = sub i64 %1743, %1746
  %1748 = ashr exact i64 %1747, 2
  %1749 = add nsw i64 %1748, 1
  %1750 = icmp ugt i64 %1749, 4611686018427387903
  br i1 %1750, label %1751, label %1753

1751:                                             ; preds = %1742
  %1752 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1752) #11
  unreachable

1753:                                             ; preds = %1742
  %1754 = bitcast i32** %4 to i64*
  %1755 = sub i64 %1737, %1746
  %1756 = ashr exact i64 %1755, 2
  %1757 = icmp ult i64 %1756, 2305843009213693951
  br i1 %1757, label %1758, label %1766

1758:                                             ; preds = %1753
  %1759 = ashr exact i64 %1755, 1
  %1760 = icmp ult i64 %1759, %1749
  %1761 = select i1 %1760, i64 %1749, i64 %1759
  %1762 = icmp eq i64 %1761, 0
  br i1 %1762, label %1771, label %1763

1763:                                             ; preds = %1758
  %1764 = icmp ugt i64 %1761, 4611686018427387903
  br i1 %1764, label %1765, label %1766

1765:                                             ; preds = %1763
  tail call void @abort() #11
  unreachable

1766:                                             ; preds = %1763, %1753
  %1767 = phi i64 [ %1761, %1763 ], [ 4611686018427387903, %1753 ]
  %1768 = shl i64 %1767, 2
  %1769 = tail call i8* @_Znwm(i64 %1768) #10
  %1770 = bitcast i8* %1769 to i32*
  br label %1771

1771:                                             ; preds = %1766, %1758
  %1772 = phi i64 [ %1767, %1766 ], [ 0, %1758 ]
  %1773 = phi i8* [ %1769, %1766 ], [ null, %1758 ]
  %1774 = phi i32* [ %1770, %1766 ], [ null, %1758 ]
  %1775 = getelementptr inbounds i32, i32* %1774, i64 %1748
  %1776 = getelementptr inbounds i32, i32* %1774, i64 %1772
  %1777 = ptrtoint i32* %1776 to i64
  store i32 30, i32* %1775, align 4
  %1778 = getelementptr inbounds i32, i32* %1775, i64 1
  %1779 = ptrtoint i32* %1778 to i64
  %1780 = ptrtoint i32* %1774 to i64
  %1781 = icmp sgt i64 %1747, 0
  br i1 %1781, label %1782, label %1784

1782:                                             ; preds = %1771
  %1783 = inttoptr i64 %1746 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1773, i8* align 4 %1783, i64 %1747, i1 false) #9
  br label %1784

1784:                                             ; preds = %1782, %1771
  store i64 %1780, i64* %1745, align 8
  store i64 %1779, i64* %1744, align 8
  store i64 %1777, i64* %1754, align 8
  %1785 = icmp eq i64 %1746, 0
  br i1 %1785, label %1788, label %1786

1786:                                             ; preds = %1784
  %1787 = inttoptr i64 %1746 to i8*
  tail call void @_ZdlPv(i8* %1787) #10
  br label %1788

1788:                                             ; preds = %1786, %1784, %1738, %1729
  %1789 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 31
  %1790 = load i8, i8* %1789, align 1, !range !2
  %1791 = icmp eq i8 %1790, 0
  br i1 %1791, label %1847, label %1792

1792:                                             ; preds = %1788
  %1793 = load i32*, i32** %3, align 8
  %1794 = load i32*, i32** %4, align 8
  %1795 = icmp ult i32* %1793, %1794
  %1796 = ptrtoint i32* %1794 to i64
  br i1 %1795, label %1797, label %1801

1797:                                             ; preds = %1792
  store i32 31, i32* %1793, align 4
  %1798 = getelementptr inbounds i32, i32* %1793, i64 1
  %1799 = ptrtoint i32* %1798 to i64
  %1800 = bitcast i32** %3 to i64*
  store i64 %1799, i64* %1800, align 8
  br label %1847

1801:                                             ; preds = %1792
  %1802 = ptrtoint i32* %1793 to i64
  %1803 = bitcast i32** %3 to i64*
  %1804 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1805 = load i64, i64* %1804, align 8
  %1806 = sub i64 %1802, %1805
  %1807 = ashr exact i64 %1806, 2
  %1808 = add nsw i64 %1807, 1
  %1809 = icmp ugt i64 %1808, 4611686018427387903
  br i1 %1809, label %1810, label %1812

1810:                                             ; preds = %1801
  %1811 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1811) #11
  unreachable

1812:                                             ; preds = %1801
  %1813 = bitcast i32** %4 to i64*
  %1814 = sub i64 %1796, %1805
  %1815 = ashr exact i64 %1814, 2
  %1816 = icmp ult i64 %1815, 2305843009213693951
  br i1 %1816, label %1817, label %1825

1817:                                             ; preds = %1812
  %1818 = ashr exact i64 %1814, 1
  %1819 = icmp ult i64 %1818, %1808
  %1820 = select i1 %1819, i64 %1808, i64 %1818
  %1821 = icmp eq i64 %1820, 0
  br i1 %1821, label %1830, label %1822

1822:                                             ; preds = %1817
  %1823 = icmp ugt i64 %1820, 4611686018427387903
  br i1 %1823, label %1824, label %1825

1824:                                             ; preds = %1822
  tail call void @abort() #11
  unreachable

1825:                                             ; preds = %1822, %1812
  %1826 = phi i64 [ %1820, %1822 ], [ 4611686018427387903, %1812 ]
  %1827 = shl i64 %1826, 2
  %1828 = tail call i8* @_Znwm(i64 %1827) #10
  %1829 = bitcast i8* %1828 to i32*
  br label %1830

1830:                                             ; preds = %1825, %1817
  %1831 = phi i64 [ %1826, %1825 ], [ 0, %1817 ]
  %1832 = phi i8* [ %1828, %1825 ], [ null, %1817 ]
  %1833 = phi i32* [ %1829, %1825 ], [ null, %1817 ]
  %1834 = getelementptr inbounds i32, i32* %1833, i64 %1807
  %1835 = getelementptr inbounds i32, i32* %1833, i64 %1831
  %1836 = ptrtoint i32* %1835 to i64
  store i32 31, i32* %1834, align 4
  %1837 = getelementptr inbounds i32, i32* %1834, i64 1
  %1838 = ptrtoint i32* %1837 to i64
  %1839 = ptrtoint i32* %1833 to i64
  %1840 = icmp sgt i64 %1806, 0
  br i1 %1840, label %1841, label %1843

1841:                                             ; preds = %1830
  %1842 = inttoptr i64 %1805 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1832, i8* align 4 %1842, i64 %1806, i1 false) #9
  br label %1843

1843:                                             ; preds = %1841, %1830
  store i64 %1839, i64* %1804, align 8
  store i64 %1838, i64* %1803, align 8
  store i64 %1836, i64* %1813, align 8
  %1844 = icmp eq i64 %1805, 0
  br i1 %1844, label %1847, label %1845

1845:                                             ; preds = %1843
  %1846 = inttoptr i64 %1805 to i8*
  tail call void @_ZdlPv(i8* %1846) #10
  br label %1847

1847:                                             ; preds = %1845, %1843, %1797, %1788
  %1848 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 32
  %1849 = load i8, i8* %1848, align 4, !range !2
  %1850 = icmp eq i8 %1849, 0
  br i1 %1850, label %1906, label %1851

1851:                                             ; preds = %1847
  %1852 = load i32*, i32** %3, align 8
  %1853 = load i32*, i32** %4, align 8
  %1854 = icmp ult i32* %1852, %1853
  %1855 = ptrtoint i32* %1853 to i64
  br i1 %1854, label %1856, label %1860

1856:                                             ; preds = %1851
  store i32 32, i32* %1852, align 4
  %1857 = getelementptr inbounds i32, i32* %1852, i64 1
  %1858 = ptrtoint i32* %1857 to i64
  %1859 = bitcast i32** %3 to i64*
  store i64 %1858, i64* %1859, align 8
  br label %1906

1860:                                             ; preds = %1851
  %1861 = ptrtoint i32* %1852 to i64
  %1862 = bitcast i32** %3 to i64*
  %1863 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1864 = load i64, i64* %1863, align 8
  %1865 = sub i64 %1861, %1864
  %1866 = ashr exact i64 %1865, 2
  %1867 = add nsw i64 %1866, 1
  %1868 = icmp ugt i64 %1867, 4611686018427387903
  br i1 %1868, label %1869, label %1871

1869:                                             ; preds = %1860
  %1870 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1870) #11
  unreachable

1871:                                             ; preds = %1860
  %1872 = bitcast i32** %4 to i64*
  %1873 = sub i64 %1855, %1864
  %1874 = ashr exact i64 %1873, 2
  %1875 = icmp ult i64 %1874, 2305843009213693951
  br i1 %1875, label %1876, label %1884

1876:                                             ; preds = %1871
  %1877 = ashr exact i64 %1873, 1
  %1878 = icmp ult i64 %1877, %1867
  %1879 = select i1 %1878, i64 %1867, i64 %1877
  %1880 = icmp eq i64 %1879, 0
  br i1 %1880, label %1889, label %1881

1881:                                             ; preds = %1876
  %1882 = icmp ugt i64 %1879, 4611686018427387903
  br i1 %1882, label %1883, label %1884

1883:                                             ; preds = %1881
  tail call void @abort() #11
  unreachable

1884:                                             ; preds = %1881, %1871
  %1885 = phi i64 [ %1879, %1881 ], [ 4611686018427387903, %1871 ]
  %1886 = shl i64 %1885, 2
  %1887 = tail call i8* @_Znwm(i64 %1886) #10
  %1888 = bitcast i8* %1887 to i32*
  br label %1889

1889:                                             ; preds = %1884, %1876
  %1890 = phi i64 [ %1885, %1884 ], [ 0, %1876 ]
  %1891 = phi i8* [ %1887, %1884 ], [ null, %1876 ]
  %1892 = phi i32* [ %1888, %1884 ], [ null, %1876 ]
  %1893 = getelementptr inbounds i32, i32* %1892, i64 %1866
  %1894 = getelementptr inbounds i32, i32* %1892, i64 %1890
  %1895 = ptrtoint i32* %1894 to i64
  store i32 32, i32* %1893, align 4
  %1896 = getelementptr inbounds i32, i32* %1893, i64 1
  %1897 = ptrtoint i32* %1896 to i64
  %1898 = ptrtoint i32* %1892 to i64
  %1899 = icmp sgt i64 %1865, 0
  br i1 %1899, label %1900, label %1902

1900:                                             ; preds = %1889
  %1901 = inttoptr i64 %1864 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1891, i8* align 4 %1901, i64 %1865, i1 false) #9
  br label %1902

1902:                                             ; preds = %1900, %1889
  store i64 %1898, i64* %1863, align 8
  store i64 %1897, i64* %1862, align 8
  store i64 %1895, i64* %1872, align 8
  %1903 = icmp eq i64 %1864, 0
  br i1 %1903, label %1906, label %1904

1904:                                             ; preds = %1902
  %1905 = inttoptr i64 %1864 to i8*
  tail call void @_ZdlPv(i8* %1905) #10
  br label %1906

1906:                                             ; preds = %1904, %1902, %1856, %1847
  %1907 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 33
  %1908 = load i8, i8* %1907, align 1, !range !2
  %1909 = icmp eq i8 %1908, 0
  br i1 %1909, label %1965, label %1910

1910:                                             ; preds = %1906
  %1911 = load i32*, i32** %3, align 8
  %1912 = load i32*, i32** %4, align 8
  %1913 = icmp ult i32* %1911, %1912
  %1914 = ptrtoint i32* %1912 to i64
  br i1 %1913, label %1915, label %1919

1915:                                             ; preds = %1910
  store i32 33, i32* %1911, align 4
  %1916 = getelementptr inbounds i32, i32* %1911, i64 1
  %1917 = ptrtoint i32* %1916 to i64
  %1918 = bitcast i32** %3 to i64*
  store i64 %1917, i64* %1918, align 8
  br label %1965

1919:                                             ; preds = %1910
  %1920 = ptrtoint i32* %1911 to i64
  %1921 = bitcast i32** %3 to i64*
  %1922 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1923 = load i64, i64* %1922, align 8
  %1924 = sub i64 %1920, %1923
  %1925 = ashr exact i64 %1924, 2
  %1926 = add nsw i64 %1925, 1
  %1927 = icmp ugt i64 %1926, 4611686018427387903
  br i1 %1927, label %1928, label %1930

1928:                                             ; preds = %1919
  %1929 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1929) #11
  unreachable

1930:                                             ; preds = %1919
  %1931 = bitcast i32** %4 to i64*
  %1932 = sub i64 %1914, %1923
  %1933 = ashr exact i64 %1932, 2
  %1934 = icmp ult i64 %1933, 2305843009213693951
  br i1 %1934, label %1935, label %1943

1935:                                             ; preds = %1930
  %1936 = ashr exact i64 %1932, 1
  %1937 = icmp ult i64 %1936, %1926
  %1938 = select i1 %1937, i64 %1926, i64 %1936
  %1939 = icmp eq i64 %1938, 0
  br i1 %1939, label %1948, label %1940

1940:                                             ; preds = %1935
  %1941 = icmp ugt i64 %1938, 4611686018427387903
  br i1 %1941, label %1942, label %1943

1942:                                             ; preds = %1940
  tail call void @abort() #11
  unreachable

1943:                                             ; preds = %1940, %1930
  %1944 = phi i64 [ %1938, %1940 ], [ 4611686018427387903, %1930 ]
  %1945 = shl i64 %1944, 2
  %1946 = tail call i8* @_Znwm(i64 %1945) #10
  %1947 = bitcast i8* %1946 to i32*
  br label %1948

1948:                                             ; preds = %1943, %1935
  %1949 = phi i64 [ %1944, %1943 ], [ 0, %1935 ]
  %1950 = phi i8* [ %1946, %1943 ], [ null, %1935 ]
  %1951 = phi i32* [ %1947, %1943 ], [ null, %1935 ]
  %1952 = getelementptr inbounds i32, i32* %1951, i64 %1925
  %1953 = getelementptr inbounds i32, i32* %1951, i64 %1949
  %1954 = ptrtoint i32* %1953 to i64
  store i32 33, i32* %1952, align 4
  %1955 = getelementptr inbounds i32, i32* %1952, i64 1
  %1956 = ptrtoint i32* %1955 to i64
  %1957 = ptrtoint i32* %1951 to i64
  %1958 = icmp sgt i64 %1924, 0
  br i1 %1958, label %1959, label %1961

1959:                                             ; preds = %1948
  %1960 = inttoptr i64 %1923 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1950, i8* align 4 %1960, i64 %1924, i1 false) #9
  br label %1961

1961:                                             ; preds = %1959, %1948
  store i64 %1957, i64* %1922, align 8
  store i64 %1956, i64* %1921, align 8
  store i64 %1954, i64* %1931, align 8
  %1962 = icmp eq i64 %1923, 0
  br i1 %1962, label %1965, label %1963

1963:                                             ; preds = %1961
  %1964 = inttoptr i64 %1923 to i8*
  tail call void @_ZdlPv(i8* %1964) #10
  br label %1965

1965:                                             ; preds = %1963, %1961, %1915, %1906
  %1966 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 34
  %1967 = load i8, i8* %1966, align 2, !range !2
  %1968 = icmp eq i8 %1967, 0
  br i1 %1968, label %2024, label %1969

1969:                                             ; preds = %1965
  %1970 = load i32*, i32** %3, align 8
  %1971 = load i32*, i32** %4, align 8
  %1972 = icmp ult i32* %1970, %1971
  %1973 = ptrtoint i32* %1971 to i64
  br i1 %1972, label %1974, label %1978

1974:                                             ; preds = %1969
  store i32 34, i32* %1970, align 4
  %1975 = getelementptr inbounds i32, i32* %1970, i64 1
  %1976 = ptrtoint i32* %1975 to i64
  %1977 = bitcast i32** %3 to i64*
  store i64 %1976, i64* %1977, align 8
  br label %2024

1978:                                             ; preds = %1969
  %1979 = ptrtoint i32* %1970 to i64
  %1980 = bitcast i32** %3 to i64*
  %1981 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1982 = load i64, i64* %1981, align 8
  %1983 = sub i64 %1979, %1982
  %1984 = ashr exact i64 %1983, 2
  %1985 = add nsw i64 %1984, 1
  %1986 = icmp ugt i64 %1985, 4611686018427387903
  br i1 %1986, label %1987, label %1989

1987:                                             ; preds = %1978
  %1988 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1988) #11
  unreachable

1989:                                             ; preds = %1978
  %1990 = bitcast i32** %4 to i64*
  %1991 = sub i64 %1973, %1982
  %1992 = ashr exact i64 %1991, 2
  %1993 = icmp ult i64 %1992, 2305843009213693951
  br i1 %1993, label %1994, label %2002

1994:                                             ; preds = %1989
  %1995 = ashr exact i64 %1991, 1
  %1996 = icmp ult i64 %1995, %1985
  %1997 = select i1 %1996, i64 %1985, i64 %1995
  %1998 = icmp eq i64 %1997, 0
  br i1 %1998, label %2007, label %1999

1999:                                             ; preds = %1994
  %2000 = icmp ugt i64 %1997, 4611686018427387903
  br i1 %2000, label %2001, label %2002

2001:                                             ; preds = %1999
  tail call void @abort() #11
  unreachable

2002:                                             ; preds = %1999, %1989
  %2003 = phi i64 [ %1997, %1999 ], [ 4611686018427387903, %1989 ]
  %2004 = shl i64 %2003, 2
  %2005 = tail call i8* @_Znwm(i64 %2004) #10
  %2006 = bitcast i8* %2005 to i32*
  br label %2007

2007:                                             ; preds = %2002, %1994
  %2008 = phi i64 [ %2003, %2002 ], [ 0, %1994 ]
  %2009 = phi i8* [ %2005, %2002 ], [ null, %1994 ]
  %2010 = phi i32* [ %2006, %2002 ], [ null, %1994 ]
  %2011 = getelementptr inbounds i32, i32* %2010, i64 %1984
  %2012 = getelementptr inbounds i32, i32* %2010, i64 %2008
  %2013 = ptrtoint i32* %2012 to i64
  store i32 34, i32* %2011, align 4
  %2014 = getelementptr inbounds i32, i32* %2011, i64 1
  %2015 = ptrtoint i32* %2014 to i64
  %2016 = ptrtoint i32* %2010 to i64
  %2017 = icmp sgt i64 %1983, 0
  br i1 %2017, label %2018, label %2020

2018:                                             ; preds = %2007
  %2019 = inttoptr i64 %1982 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2009, i8* align 4 %2019, i64 %1983, i1 false) #9
  br label %2020

2020:                                             ; preds = %2018, %2007
  store i64 %2016, i64* %1981, align 8
  store i64 %2015, i64* %1980, align 8
  store i64 %2013, i64* %1990, align 8
  %2021 = icmp eq i64 %1982, 0
  br i1 %2021, label %2024, label %2022

2022:                                             ; preds = %2020
  %2023 = inttoptr i64 %1982 to i8*
  tail call void @_ZdlPv(i8* %2023) #10
  br label %2024

2024:                                             ; preds = %2022, %2020, %1974, %1965
  %2025 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 35
  %2026 = load i8, i8* %2025, align 1, !range !2
  %2027 = icmp eq i8 %2026, 0
  br i1 %2027, label %2083, label %2028

2028:                                             ; preds = %2024
  %2029 = load i32*, i32** %3, align 8
  %2030 = load i32*, i32** %4, align 8
  %2031 = icmp ult i32* %2029, %2030
  %2032 = ptrtoint i32* %2030 to i64
  br i1 %2031, label %2033, label %2037

2033:                                             ; preds = %2028
  store i32 35, i32* %2029, align 4
  %2034 = getelementptr inbounds i32, i32* %2029, i64 1
  %2035 = ptrtoint i32* %2034 to i64
  %2036 = bitcast i32** %3 to i64*
  store i64 %2035, i64* %2036, align 8
  br label %2083

2037:                                             ; preds = %2028
  %2038 = ptrtoint i32* %2029 to i64
  %2039 = bitcast i32** %3 to i64*
  %2040 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2041 = load i64, i64* %2040, align 8
  %2042 = sub i64 %2038, %2041
  %2043 = ashr exact i64 %2042, 2
  %2044 = add nsw i64 %2043, 1
  %2045 = icmp ugt i64 %2044, 4611686018427387903
  br i1 %2045, label %2046, label %2048

2046:                                             ; preds = %2037
  %2047 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2047) #11
  unreachable

2048:                                             ; preds = %2037
  %2049 = bitcast i32** %4 to i64*
  %2050 = sub i64 %2032, %2041
  %2051 = ashr exact i64 %2050, 2
  %2052 = icmp ult i64 %2051, 2305843009213693951
  br i1 %2052, label %2053, label %2061

2053:                                             ; preds = %2048
  %2054 = ashr exact i64 %2050, 1
  %2055 = icmp ult i64 %2054, %2044
  %2056 = select i1 %2055, i64 %2044, i64 %2054
  %2057 = icmp eq i64 %2056, 0
  br i1 %2057, label %2066, label %2058

2058:                                             ; preds = %2053
  %2059 = icmp ugt i64 %2056, 4611686018427387903
  br i1 %2059, label %2060, label %2061

2060:                                             ; preds = %2058
  tail call void @abort() #11
  unreachable

2061:                                             ; preds = %2058, %2048
  %2062 = phi i64 [ %2056, %2058 ], [ 4611686018427387903, %2048 ]
  %2063 = shl i64 %2062, 2
  %2064 = tail call i8* @_Znwm(i64 %2063) #10
  %2065 = bitcast i8* %2064 to i32*
  br label %2066

2066:                                             ; preds = %2061, %2053
  %2067 = phi i64 [ %2062, %2061 ], [ 0, %2053 ]
  %2068 = phi i8* [ %2064, %2061 ], [ null, %2053 ]
  %2069 = phi i32* [ %2065, %2061 ], [ null, %2053 ]
  %2070 = getelementptr inbounds i32, i32* %2069, i64 %2043
  %2071 = getelementptr inbounds i32, i32* %2069, i64 %2067
  %2072 = ptrtoint i32* %2071 to i64
  store i32 35, i32* %2070, align 4
  %2073 = getelementptr inbounds i32, i32* %2070, i64 1
  %2074 = ptrtoint i32* %2073 to i64
  %2075 = ptrtoint i32* %2069 to i64
  %2076 = icmp sgt i64 %2042, 0
  br i1 %2076, label %2077, label %2079

2077:                                             ; preds = %2066
  %2078 = inttoptr i64 %2041 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2068, i8* align 4 %2078, i64 %2042, i1 false) #9
  br label %2079

2079:                                             ; preds = %2077, %2066
  store i64 %2075, i64* %2040, align 8
  store i64 %2074, i64* %2039, align 8
  store i64 %2072, i64* %2049, align 8
  %2080 = icmp eq i64 %2041, 0
  br i1 %2080, label %2083, label %2081

2081:                                             ; preds = %2079
  %2082 = inttoptr i64 %2041 to i8*
  tail call void @_ZdlPv(i8* %2082) #10
  br label %2083

2083:                                             ; preds = %2081, %2079, %2033, %2024
  %2084 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 36
  %2085 = load i8, i8* %2084, align 4, !range !2
  %2086 = icmp eq i8 %2085, 0
  br i1 %2086, label %2142, label %2087

2087:                                             ; preds = %2083
  %2088 = load i32*, i32** %3, align 8
  %2089 = load i32*, i32** %4, align 8
  %2090 = icmp ult i32* %2088, %2089
  %2091 = ptrtoint i32* %2089 to i64
  br i1 %2090, label %2092, label %2096

2092:                                             ; preds = %2087
  store i32 36, i32* %2088, align 4
  %2093 = getelementptr inbounds i32, i32* %2088, i64 1
  %2094 = ptrtoint i32* %2093 to i64
  %2095 = bitcast i32** %3 to i64*
  store i64 %2094, i64* %2095, align 8
  br label %2142

2096:                                             ; preds = %2087
  %2097 = ptrtoint i32* %2088 to i64
  %2098 = bitcast i32** %3 to i64*
  %2099 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2100 = load i64, i64* %2099, align 8
  %2101 = sub i64 %2097, %2100
  %2102 = ashr exact i64 %2101, 2
  %2103 = add nsw i64 %2102, 1
  %2104 = icmp ugt i64 %2103, 4611686018427387903
  br i1 %2104, label %2105, label %2107

2105:                                             ; preds = %2096
  %2106 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2106) #11
  unreachable

2107:                                             ; preds = %2096
  %2108 = bitcast i32** %4 to i64*
  %2109 = sub i64 %2091, %2100
  %2110 = ashr exact i64 %2109, 2
  %2111 = icmp ult i64 %2110, 2305843009213693951
  br i1 %2111, label %2112, label %2120

2112:                                             ; preds = %2107
  %2113 = ashr exact i64 %2109, 1
  %2114 = icmp ult i64 %2113, %2103
  %2115 = select i1 %2114, i64 %2103, i64 %2113
  %2116 = icmp eq i64 %2115, 0
  br i1 %2116, label %2125, label %2117

2117:                                             ; preds = %2112
  %2118 = icmp ugt i64 %2115, 4611686018427387903
  br i1 %2118, label %2119, label %2120

2119:                                             ; preds = %2117
  tail call void @abort() #11
  unreachable

2120:                                             ; preds = %2117, %2107
  %2121 = phi i64 [ %2115, %2117 ], [ 4611686018427387903, %2107 ]
  %2122 = shl i64 %2121, 2
  %2123 = tail call i8* @_Znwm(i64 %2122) #10
  %2124 = bitcast i8* %2123 to i32*
  br label %2125

2125:                                             ; preds = %2120, %2112
  %2126 = phi i64 [ %2121, %2120 ], [ 0, %2112 ]
  %2127 = phi i8* [ %2123, %2120 ], [ null, %2112 ]
  %2128 = phi i32* [ %2124, %2120 ], [ null, %2112 ]
  %2129 = getelementptr inbounds i32, i32* %2128, i64 %2102
  %2130 = getelementptr inbounds i32, i32* %2128, i64 %2126
  %2131 = ptrtoint i32* %2130 to i64
  store i32 36, i32* %2129, align 4
  %2132 = getelementptr inbounds i32, i32* %2129, i64 1
  %2133 = ptrtoint i32* %2132 to i64
  %2134 = ptrtoint i32* %2128 to i64
  %2135 = icmp sgt i64 %2101, 0
  br i1 %2135, label %2136, label %2138

2136:                                             ; preds = %2125
  %2137 = inttoptr i64 %2100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2127, i8* align 4 %2137, i64 %2101, i1 false) #9
  br label %2138

2138:                                             ; preds = %2136, %2125
  store i64 %2134, i64* %2099, align 8
  store i64 %2133, i64* %2098, align 8
  store i64 %2131, i64* %2108, align 8
  %2139 = icmp eq i64 %2100, 0
  br i1 %2139, label %2142, label %2140

2140:                                             ; preds = %2138
  %2141 = inttoptr i64 %2100 to i8*
  tail call void @_ZdlPv(i8* %2141) #10
  br label %2142

2142:                                             ; preds = %2140, %2138, %2092, %2083
  %2143 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 37
  %2144 = load i8, i8* %2143, align 1, !range !2
  %2145 = icmp eq i8 %2144, 0
  br i1 %2145, label %2201, label %2146

2146:                                             ; preds = %2142
  %2147 = load i32*, i32** %3, align 8
  %2148 = load i32*, i32** %4, align 8
  %2149 = icmp ult i32* %2147, %2148
  %2150 = ptrtoint i32* %2148 to i64
  br i1 %2149, label %2151, label %2155

2151:                                             ; preds = %2146
  store i32 37, i32* %2147, align 4
  %2152 = getelementptr inbounds i32, i32* %2147, i64 1
  %2153 = ptrtoint i32* %2152 to i64
  %2154 = bitcast i32** %3 to i64*
  store i64 %2153, i64* %2154, align 8
  br label %2201

2155:                                             ; preds = %2146
  %2156 = ptrtoint i32* %2147 to i64
  %2157 = bitcast i32** %3 to i64*
  %2158 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2159 = load i64, i64* %2158, align 8
  %2160 = sub i64 %2156, %2159
  %2161 = ashr exact i64 %2160, 2
  %2162 = add nsw i64 %2161, 1
  %2163 = icmp ugt i64 %2162, 4611686018427387903
  br i1 %2163, label %2164, label %2166

2164:                                             ; preds = %2155
  %2165 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2165) #11
  unreachable

2166:                                             ; preds = %2155
  %2167 = bitcast i32** %4 to i64*
  %2168 = sub i64 %2150, %2159
  %2169 = ashr exact i64 %2168, 2
  %2170 = icmp ult i64 %2169, 2305843009213693951
  br i1 %2170, label %2171, label %2179

2171:                                             ; preds = %2166
  %2172 = ashr exact i64 %2168, 1
  %2173 = icmp ult i64 %2172, %2162
  %2174 = select i1 %2173, i64 %2162, i64 %2172
  %2175 = icmp eq i64 %2174, 0
  br i1 %2175, label %2184, label %2176

2176:                                             ; preds = %2171
  %2177 = icmp ugt i64 %2174, 4611686018427387903
  br i1 %2177, label %2178, label %2179

2178:                                             ; preds = %2176
  tail call void @abort() #11
  unreachable

2179:                                             ; preds = %2176, %2166
  %2180 = phi i64 [ %2174, %2176 ], [ 4611686018427387903, %2166 ]
  %2181 = shl i64 %2180, 2
  %2182 = tail call i8* @_Znwm(i64 %2181) #10
  %2183 = bitcast i8* %2182 to i32*
  br label %2184

2184:                                             ; preds = %2179, %2171
  %2185 = phi i64 [ %2180, %2179 ], [ 0, %2171 ]
  %2186 = phi i8* [ %2182, %2179 ], [ null, %2171 ]
  %2187 = phi i32* [ %2183, %2179 ], [ null, %2171 ]
  %2188 = getelementptr inbounds i32, i32* %2187, i64 %2161
  %2189 = getelementptr inbounds i32, i32* %2187, i64 %2185
  %2190 = ptrtoint i32* %2189 to i64
  store i32 37, i32* %2188, align 4
  %2191 = getelementptr inbounds i32, i32* %2188, i64 1
  %2192 = ptrtoint i32* %2191 to i64
  %2193 = ptrtoint i32* %2187 to i64
  %2194 = icmp sgt i64 %2160, 0
  br i1 %2194, label %2195, label %2197

2195:                                             ; preds = %2184
  %2196 = inttoptr i64 %2159 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2186, i8* align 4 %2196, i64 %2160, i1 false) #9
  br label %2197

2197:                                             ; preds = %2195, %2184
  store i64 %2193, i64* %2158, align 8
  store i64 %2192, i64* %2157, align 8
  store i64 %2190, i64* %2167, align 8
  %2198 = icmp eq i64 %2159, 0
  br i1 %2198, label %2201, label %2199

2199:                                             ; preds = %2197
  %2200 = inttoptr i64 %2159 to i8*
  tail call void @_ZdlPv(i8* %2200) #10
  br label %2201

2201:                                             ; preds = %2199, %2197, %2151, %2142
  %2202 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 38
  %2203 = load i8, i8* %2202, align 2, !range !2
  %2204 = icmp eq i8 %2203, 0
  br i1 %2204, label %2260, label %2205

2205:                                             ; preds = %2201
  %2206 = load i32*, i32** %3, align 8
  %2207 = load i32*, i32** %4, align 8
  %2208 = icmp ult i32* %2206, %2207
  %2209 = ptrtoint i32* %2207 to i64
  br i1 %2208, label %2210, label %2214

2210:                                             ; preds = %2205
  store i32 38, i32* %2206, align 4
  %2211 = getelementptr inbounds i32, i32* %2206, i64 1
  %2212 = ptrtoint i32* %2211 to i64
  %2213 = bitcast i32** %3 to i64*
  store i64 %2212, i64* %2213, align 8
  br label %2260

2214:                                             ; preds = %2205
  %2215 = ptrtoint i32* %2206 to i64
  %2216 = bitcast i32** %3 to i64*
  %2217 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2218 = load i64, i64* %2217, align 8
  %2219 = sub i64 %2215, %2218
  %2220 = ashr exact i64 %2219, 2
  %2221 = add nsw i64 %2220, 1
  %2222 = icmp ugt i64 %2221, 4611686018427387903
  br i1 %2222, label %2223, label %2225

2223:                                             ; preds = %2214
  %2224 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2224) #11
  unreachable

2225:                                             ; preds = %2214
  %2226 = bitcast i32** %4 to i64*
  %2227 = sub i64 %2209, %2218
  %2228 = ashr exact i64 %2227, 2
  %2229 = icmp ult i64 %2228, 2305843009213693951
  br i1 %2229, label %2230, label %2238

2230:                                             ; preds = %2225
  %2231 = ashr exact i64 %2227, 1
  %2232 = icmp ult i64 %2231, %2221
  %2233 = select i1 %2232, i64 %2221, i64 %2231
  %2234 = icmp eq i64 %2233, 0
  br i1 %2234, label %2243, label %2235

2235:                                             ; preds = %2230
  %2236 = icmp ugt i64 %2233, 4611686018427387903
  br i1 %2236, label %2237, label %2238

2237:                                             ; preds = %2235
  tail call void @abort() #11
  unreachable

2238:                                             ; preds = %2235, %2225
  %2239 = phi i64 [ %2233, %2235 ], [ 4611686018427387903, %2225 ]
  %2240 = shl i64 %2239, 2
  %2241 = tail call i8* @_Znwm(i64 %2240) #10
  %2242 = bitcast i8* %2241 to i32*
  br label %2243

2243:                                             ; preds = %2238, %2230
  %2244 = phi i64 [ %2239, %2238 ], [ 0, %2230 ]
  %2245 = phi i8* [ %2241, %2238 ], [ null, %2230 ]
  %2246 = phi i32* [ %2242, %2238 ], [ null, %2230 ]
  %2247 = getelementptr inbounds i32, i32* %2246, i64 %2220
  %2248 = getelementptr inbounds i32, i32* %2246, i64 %2244
  %2249 = ptrtoint i32* %2248 to i64
  store i32 38, i32* %2247, align 4
  %2250 = getelementptr inbounds i32, i32* %2247, i64 1
  %2251 = ptrtoint i32* %2250 to i64
  %2252 = ptrtoint i32* %2246 to i64
  %2253 = icmp sgt i64 %2219, 0
  br i1 %2253, label %2254, label %2256

2254:                                             ; preds = %2243
  %2255 = inttoptr i64 %2218 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2245, i8* align 4 %2255, i64 %2219, i1 false) #9
  br label %2256

2256:                                             ; preds = %2254, %2243
  store i64 %2252, i64* %2217, align 8
  store i64 %2251, i64* %2216, align 8
  store i64 %2249, i64* %2226, align 8
  %2257 = icmp eq i64 %2218, 0
  br i1 %2257, label %2260, label %2258

2258:                                             ; preds = %2256
  %2259 = inttoptr i64 %2218 to i8*
  tail call void @_ZdlPv(i8* %2259) #10
  br label %2260

2260:                                             ; preds = %2258, %2256, %2210, %2201
  %2261 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 39
  %2262 = load i8, i8* %2261, align 1, !range !2
  %2263 = icmp eq i8 %2262, 0
  br i1 %2263, label %2319, label %2264

2264:                                             ; preds = %2260
  %2265 = load i32*, i32** %3, align 8
  %2266 = load i32*, i32** %4, align 8
  %2267 = icmp ult i32* %2265, %2266
  %2268 = ptrtoint i32* %2266 to i64
  br i1 %2267, label %2269, label %2273

2269:                                             ; preds = %2264
  store i32 39, i32* %2265, align 4
  %2270 = getelementptr inbounds i32, i32* %2265, i64 1
  %2271 = ptrtoint i32* %2270 to i64
  %2272 = bitcast i32** %3 to i64*
  store i64 %2271, i64* %2272, align 8
  br label %2319

2273:                                             ; preds = %2264
  %2274 = ptrtoint i32* %2265 to i64
  %2275 = bitcast i32** %3 to i64*
  %2276 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2277 = load i64, i64* %2276, align 8
  %2278 = sub i64 %2274, %2277
  %2279 = ashr exact i64 %2278, 2
  %2280 = add nsw i64 %2279, 1
  %2281 = icmp ugt i64 %2280, 4611686018427387903
  br i1 %2281, label %2282, label %2284

2282:                                             ; preds = %2273
  %2283 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2283) #11
  unreachable

2284:                                             ; preds = %2273
  %2285 = bitcast i32** %4 to i64*
  %2286 = sub i64 %2268, %2277
  %2287 = ashr exact i64 %2286, 2
  %2288 = icmp ult i64 %2287, 2305843009213693951
  br i1 %2288, label %2289, label %2297

2289:                                             ; preds = %2284
  %2290 = ashr exact i64 %2286, 1
  %2291 = icmp ult i64 %2290, %2280
  %2292 = select i1 %2291, i64 %2280, i64 %2290
  %2293 = icmp eq i64 %2292, 0
  br i1 %2293, label %2302, label %2294

2294:                                             ; preds = %2289
  %2295 = icmp ugt i64 %2292, 4611686018427387903
  br i1 %2295, label %2296, label %2297

2296:                                             ; preds = %2294
  tail call void @abort() #11
  unreachable

2297:                                             ; preds = %2294, %2284
  %2298 = phi i64 [ %2292, %2294 ], [ 4611686018427387903, %2284 ]
  %2299 = shl i64 %2298, 2
  %2300 = tail call i8* @_Znwm(i64 %2299) #10
  %2301 = bitcast i8* %2300 to i32*
  br label %2302

2302:                                             ; preds = %2297, %2289
  %2303 = phi i64 [ %2298, %2297 ], [ 0, %2289 ]
  %2304 = phi i8* [ %2300, %2297 ], [ null, %2289 ]
  %2305 = phi i32* [ %2301, %2297 ], [ null, %2289 ]
  %2306 = getelementptr inbounds i32, i32* %2305, i64 %2279
  %2307 = getelementptr inbounds i32, i32* %2305, i64 %2303
  %2308 = ptrtoint i32* %2307 to i64
  store i32 39, i32* %2306, align 4
  %2309 = getelementptr inbounds i32, i32* %2306, i64 1
  %2310 = ptrtoint i32* %2309 to i64
  %2311 = ptrtoint i32* %2305 to i64
  %2312 = icmp sgt i64 %2278, 0
  br i1 %2312, label %2313, label %2315

2313:                                             ; preds = %2302
  %2314 = inttoptr i64 %2277 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2304, i8* align 4 %2314, i64 %2278, i1 false) #9
  br label %2315

2315:                                             ; preds = %2313, %2302
  store i64 %2311, i64* %2276, align 8
  store i64 %2310, i64* %2275, align 8
  store i64 %2308, i64* %2285, align 8
  %2316 = icmp eq i64 %2277, 0
  br i1 %2316, label %2319, label %2317

2317:                                             ; preds = %2315
  %2318 = inttoptr i64 %2277 to i8*
  tail call void @_ZdlPv(i8* %2318) #10
  br label %2319

2319:                                             ; preds = %2317, %2315, %2269, %2260
  %2320 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 40
  %2321 = load i8, i8* %2320, align 4, !range !2
  %2322 = icmp eq i8 %2321, 0
  br i1 %2322, label %2378, label %2323

2323:                                             ; preds = %2319
  %2324 = load i32*, i32** %3, align 8
  %2325 = load i32*, i32** %4, align 8
  %2326 = icmp ult i32* %2324, %2325
  %2327 = ptrtoint i32* %2325 to i64
  br i1 %2326, label %2328, label %2332

2328:                                             ; preds = %2323
  store i32 40, i32* %2324, align 4
  %2329 = getelementptr inbounds i32, i32* %2324, i64 1
  %2330 = ptrtoint i32* %2329 to i64
  %2331 = bitcast i32** %3 to i64*
  store i64 %2330, i64* %2331, align 8
  br label %2378

2332:                                             ; preds = %2323
  %2333 = ptrtoint i32* %2324 to i64
  %2334 = bitcast i32** %3 to i64*
  %2335 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2336 = load i64, i64* %2335, align 8
  %2337 = sub i64 %2333, %2336
  %2338 = ashr exact i64 %2337, 2
  %2339 = add nsw i64 %2338, 1
  %2340 = icmp ugt i64 %2339, 4611686018427387903
  br i1 %2340, label %2341, label %2343

2341:                                             ; preds = %2332
  %2342 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2342) #11
  unreachable

2343:                                             ; preds = %2332
  %2344 = bitcast i32** %4 to i64*
  %2345 = sub i64 %2327, %2336
  %2346 = ashr exact i64 %2345, 2
  %2347 = icmp ult i64 %2346, 2305843009213693951
  br i1 %2347, label %2348, label %2356

2348:                                             ; preds = %2343
  %2349 = ashr exact i64 %2345, 1
  %2350 = icmp ult i64 %2349, %2339
  %2351 = select i1 %2350, i64 %2339, i64 %2349
  %2352 = icmp eq i64 %2351, 0
  br i1 %2352, label %2361, label %2353

2353:                                             ; preds = %2348
  %2354 = icmp ugt i64 %2351, 4611686018427387903
  br i1 %2354, label %2355, label %2356

2355:                                             ; preds = %2353
  tail call void @abort() #11
  unreachable

2356:                                             ; preds = %2353, %2343
  %2357 = phi i64 [ %2351, %2353 ], [ 4611686018427387903, %2343 ]
  %2358 = shl i64 %2357, 2
  %2359 = tail call i8* @_Znwm(i64 %2358) #10
  %2360 = bitcast i8* %2359 to i32*
  br label %2361

2361:                                             ; preds = %2356, %2348
  %2362 = phi i64 [ %2357, %2356 ], [ 0, %2348 ]
  %2363 = phi i8* [ %2359, %2356 ], [ null, %2348 ]
  %2364 = phi i32* [ %2360, %2356 ], [ null, %2348 ]
  %2365 = getelementptr inbounds i32, i32* %2364, i64 %2338
  %2366 = getelementptr inbounds i32, i32* %2364, i64 %2362
  %2367 = ptrtoint i32* %2366 to i64
  store i32 40, i32* %2365, align 4
  %2368 = getelementptr inbounds i32, i32* %2365, i64 1
  %2369 = ptrtoint i32* %2368 to i64
  %2370 = ptrtoint i32* %2364 to i64
  %2371 = icmp sgt i64 %2337, 0
  br i1 %2371, label %2372, label %2374

2372:                                             ; preds = %2361
  %2373 = inttoptr i64 %2336 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2363, i8* align 4 %2373, i64 %2337, i1 false) #9
  br label %2374

2374:                                             ; preds = %2372, %2361
  store i64 %2370, i64* %2335, align 8
  store i64 %2369, i64* %2334, align 8
  store i64 %2367, i64* %2344, align 8
  %2375 = icmp eq i64 %2336, 0
  br i1 %2375, label %2378, label %2376

2376:                                             ; preds = %2374
  %2377 = inttoptr i64 %2336 to i8*
  tail call void @_ZdlPv(i8* %2377) #10
  br label %2378

2378:                                             ; preds = %2376, %2374, %2328, %2319
  %2379 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 41
  %2380 = load i8, i8* %2379, align 1, !range !2
  %2381 = icmp eq i8 %2380, 0
  br i1 %2381, label %2437, label %2382

2382:                                             ; preds = %2378
  %2383 = load i32*, i32** %3, align 8
  %2384 = load i32*, i32** %4, align 8
  %2385 = icmp ult i32* %2383, %2384
  %2386 = ptrtoint i32* %2384 to i64
  br i1 %2385, label %2387, label %2391

2387:                                             ; preds = %2382
  store i32 41, i32* %2383, align 4
  %2388 = getelementptr inbounds i32, i32* %2383, i64 1
  %2389 = ptrtoint i32* %2388 to i64
  %2390 = bitcast i32** %3 to i64*
  store i64 %2389, i64* %2390, align 8
  br label %2437

2391:                                             ; preds = %2382
  %2392 = ptrtoint i32* %2383 to i64
  %2393 = bitcast i32** %3 to i64*
  %2394 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2395 = load i64, i64* %2394, align 8
  %2396 = sub i64 %2392, %2395
  %2397 = ashr exact i64 %2396, 2
  %2398 = add nsw i64 %2397, 1
  %2399 = icmp ugt i64 %2398, 4611686018427387903
  br i1 %2399, label %2400, label %2402

2400:                                             ; preds = %2391
  %2401 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2401) #11
  unreachable

2402:                                             ; preds = %2391
  %2403 = bitcast i32** %4 to i64*
  %2404 = sub i64 %2386, %2395
  %2405 = ashr exact i64 %2404, 2
  %2406 = icmp ult i64 %2405, 2305843009213693951
  br i1 %2406, label %2407, label %2415

2407:                                             ; preds = %2402
  %2408 = ashr exact i64 %2404, 1
  %2409 = icmp ult i64 %2408, %2398
  %2410 = select i1 %2409, i64 %2398, i64 %2408
  %2411 = icmp eq i64 %2410, 0
  br i1 %2411, label %2420, label %2412

2412:                                             ; preds = %2407
  %2413 = icmp ugt i64 %2410, 4611686018427387903
  br i1 %2413, label %2414, label %2415

2414:                                             ; preds = %2412
  tail call void @abort() #11
  unreachable

2415:                                             ; preds = %2412, %2402
  %2416 = phi i64 [ %2410, %2412 ], [ 4611686018427387903, %2402 ]
  %2417 = shl i64 %2416, 2
  %2418 = tail call i8* @_Znwm(i64 %2417) #10
  %2419 = bitcast i8* %2418 to i32*
  br label %2420

2420:                                             ; preds = %2415, %2407
  %2421 = phi i64 [ %2416, %2415 ], [ 0, %2407 ]
  %2422 = phi i8* [ %2418, %2415 ], [ null, %2407 ]
  %2423 = phi i32* [ %2419, %2415 ], [ null, %2407 ]
  %2424 = getelementptr inbounds i32, i32* %2423, i64 %2397
  %2425 = getelementptr inbounds i32, i32* %2423, i64 %2421
  %2426 = ptrtoint i32* %2425 to i64
  store i32 41, i32* %2424, align 4
  %2427 = getelementptr inbounds i32, i32* %2424, i64 1
  %2428 = ptrtoint i32* %2427 to i64
  %2429 = ptrtoint i32* %2423 to i64
  %2430 = icmp sgt i64 %2396, 0
  br i1 %2430, label %2431, label %2433

2431:                                             ; preds = %2420
  %2432 = inttoptr i64 %2395 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2422, i8* align 4 %2432, i64 %2396, i1 false) #9
  br label %2433

2433:                                             ; preds = %2431, %2420
  store i64 %2429, i64* %2394, align 8
  store i64 %2428, i64* %2393, align 8
  store i64 %2426, i64* %2403, align 8
  %2434 = icmp eq i64 %2395, 0
  br i1 %2434, label %2437, label %2435

2435:                                             ; preds = %2433
  %2436 = inttoptr i64 %2395 to i8*
  tail call void @_ZdlPv(i8* %2436) #10
  br label %2437

2437:                                             ; preds = %2435, %2433, %2387, %2378
  %2438 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 42
  %2439 = load i8, i8* %2438, align 2, !range !2
  %2440 = icmp eq i8 %2439, 0
  br i1 %2440, label %2496, label %2441

2441:                                             ; preds = %2437
  %2442 = load i32*, i32** %3, align 8
  %2443 = load i32*, i32** %4, align 8
  %2444 = icmp ult i32* %2442, %2443
  %2445 = ptrtoint i32* %2443 to i64
  br i1 %2444, label %2446, label %2450

2446:                                             ; preds = %2441
  store i32 42, i32* %2442, align 4
  %2447 = getelementptr inbounds i32, i32* %2442, i64 1
  %2448 = ptrtoint i32* %2447 to i64
  %2449 = bitcast i32** %3 to i64*
  store i64 %2448, i64* %2449, align 8
  br label %2496

2450:                                             ; preds = %2441
  %2451 = ptrtoint i32* %2442 to i64
  %2452 = bitcast i32** %3 to i64*
  %2453 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2454 = load i64, i64* %2453, align 8
  %2455 = sub i64 %2451, %2454
  %2456 = ashr exact i64 %2455, 2
  %2457 = add nsw i64 %2456, 1
  %2458 = icmp ugt i64 %2457, 4611686018427387903
  br i1 %2458, label %2459, label %2461

2459:                                             ; preds = %2450
  %2460 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2460) #11
  unreachable

2461:                                             ; preds = %2450
  %2462 = bitcast i32** %4 to i64*
  %2463 = sub i64 %2445, %2454
  %2464 = ashr exact i64 %2463, 2
  %2465 = icmp ult i64 %2464, 2305843009213693951
  br i1 %2465, label %2466, label %2474

2466:                                             ; preds = %2461
  %2467 = ashr exact i64 %2463, 1
  %2468 = icmp ult i64 %2467, %2457
  %2469 = select i1 %2468, i64 %2457, i64 %2467
  %2470 = icmp eq i64 %2469, 0
  br i1 %2470, label %2479, label %2471

2471:                                             ; preds = %2466
  %2472 = icmp ugt i64 %2469, 4611686018427387903
  br i1 %2472, label %2473, label %2474

2473:                                             ; preds = %2471
  tail call void @abort() #11
  unreachable

2474:                                             ; preds = %2471, %2461
  %2475 = phi i64 [ %2469, %2471 ], [ 4611686018427387903, %2461 ]
  %2476 = shl i64 %2475, 2
  %2477 = tail call i8* @_Znwm(i64 %2476) #10
  %2478 = bitcast i8* %2477 to i32*
  br label %2479

2479:                                             ; preds = %2474, %2466
  %2480 = phi i64 [ %2475, %2474 ], [ 0, %2466 ]
  %2481 = phi i8* [ %2477, %2474 ], [ null, %2466 ]
  %2482 = phi i32* [ %2478, %2474 ], [ null, %2466 ]
  %2483 = getelementptr inbounds i32, i32* %2482, i64 %2456
  %2484 = getelementptr inbounds i32, i32* %2482, i64 %2480
  %2485 = ptrtoint i32* %2484 to i64
  store i32 42, i32* %2483, align 4
  %2486 = getelementptr inbounds i32, i32* %2483, i64 1
  %2487 = ptrtoint i32* %2486 to i64
  %2488 = ptrtoint i32* %2482 to i64
  %2489 = icmp sgt i64 %2455, 0
  br i1 %2489, label %2490, label %2492

2490:                                             ; preds = %2479
  %2491 = inttoptr i64 %2454 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2481, i8* align 4 %2491, i64 %2455, i1 false) #9
  br label %2492

2492:                                             ; preds = %2490, %2479
  store i64 %2488, i64* %2453, align 8
  store i64 %2487, i64* %2452, align 8
  store i64 %2485, i64* %2462, align 8
  %2493 = icmp eq i64 %2454, 0
  br i1 %2493, label %2496, label %2494

2494:                                             ; preds = %2492
  %2495 = inttoptr i64 %2454 to i8*
  tail call void @_ZdlPv(i8* %2495) #10
  br label %2496

2496:                                             ; preds = %2494, %2492, %2446, %2437
  %2497 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 43
  %2498 = load i8, i8* %2497, align 1, !range !2
  %2499 = icmp eq i8 %2498, 0
  br i1 %2499, label %2555, label %2500

2500:                                             ; preds = %2496
  %2501 = load i32*, i32** %3, align 8
  %2502 = load i32*, i32** %4, align 8
  %2503 = icmp ult i32* %2501, %2502
  %2504 = ptrtoint i32* %2502 to i64
  br i1 %2503, label %2505, label %2509

2505:                                             ; preds = %2500
  store i32 43, i32* %2501, align 4
  %2506 = getelementptr inbounds i32, i32* %2501, i64 1
  %2507 = ptrtoint i32* %2506 to i64
  %2508 = bitcast i32** %3 to i64*
  store i64 %2507, i64* %2508, align 8
  br label %2555

2509:                                             ; preds = %2500
  %2510 = ptrtoint i32* %2501 to i64
  %2511 = bitcast i32** %3 to i64*
  %2512 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2513 = load i64, i64* %2512, align 8
  %2514 = sub i64 %2510, %2513
  %2515 = ashr exact i64 %2514, 2
  %2516 = add nsw i64 %2515, 1
  %2517 = icmp ugt i64 %2516, 4611686018427387903
  br i1 %2517, label %2518, label %2520

2518:                                             ; preds = %2509
  %2519 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2519) #11
  unreachable

2520:                                             ; preds = %2509
  %2521 = bitcast i32** %4 to i64*
  %2522 = sub i64 %2504, %2513
  %2523 = ashr exact i64 %2522, 2
  %2524 = icmp ult i64 %2523, 2305843009213693951
  br i1 %2524, label %2525, label %2533

2525:                                             ; preds = %2520
  %2526 = ashr exact i64 %2522, 1
  %2527 = icmp ult i64 %2526, %2516
  %2528 = select i1 %2527, i64 %2516, i64 %2526
  %2529 = icmp eq i64 %2528, 0
  br i1 %2529, label %2538, label %2530

2530:                                             ; preds = %2525
  %2531 = icmp ugt i64 %2528, 4611686018427387903
  br i1 %2531, label %2532, label %2533

2532:                                             ; preds = %2530
  tail call void @abort() #11
  unreachable

2533:                                             ; preds = %2530, %2520
  %2534 = phi i64 [ %2528, %2530 ], [ 4611686018427387903, %2520 ]
  %2535 = shl i64 %2534, 2
  %2536 = tail call i8* @_Znwm(i64 %2535) #10
  %2537 = bitcast i8* %2536 to i32*
  br label %2538

2538:                                             ; preds = %2533, %2525
  %2539 = phi i64 [ %2534, %2533 ], [ 0, %2525 ]
  %2540 = phi i8* [ %2536, %2533 ], [ null, %2525 ]
  %2541 = phi i32* [ %2537, %2533 ], [ null, %2525 ]
  %2542 = getelementptr inbounds i32, i32* %2541, i64 %2515
  %2543 = getelementptr inbounds i32, i32* %2541, i64 %2539
  %2544 = ptrtoint i32* %2543 to i64
  store i32 43, i32* %2542, align 4
  %2545 = getelementptr inbounds i32, i32* %2542, i64 1
  %2546 = ptrtoint i32* %2545 to i64
  %2547 = ptrtoint i32* %2541 to i64
  %2548 = icmp sgt i64 %2514, 0
  br i1 %2548, label %2549, label %2551

2549:                                             ; preds = %2538
  %2550 = inttoptr i64 %2513 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2540, i8* align 4 %2550, i64 %2514, i1 false) #9
  br label %2551

2551:                                             ; preds = %2549, %2538
  store i64 %2547, i64* %2512, align 8
  store i64 %2546, i64* %2511, align 8
  store i64 %2544, i64* %2521, align 8
  %2552 = icmp eq i64 %2513, 0
  br i1 %2552, label %2555, label %2553

2553:                                             ; preds = %2551
  %2554 = inttoptr i64 %2513 to i8*
  tail call void @_ZdlPv(i8* %2554) #10
  br label %2555

2555:                                             ; preds = %2553, %2551, %2505, %2496
  %2556 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 44
  %2557 = load i8, i8* %2556, align 4, !range !2
  %2558 = icmp eq i8 %2557, 0
  br i1 %2558, label %2614, label %2559

2559:                                             ; preds = %2555
  %2560 = load i32*, i32** %3, align 8
  %2561 = load i32*, i32** %4, align 8
  %2562 = icmp ult i32* %2560, %2561
  %2563 = ptrtoint i32* %2561 to i64
  br i1 %2562, label %2564, label %2568

2564:                                             ; preds = %2559
  store i32 44, i32* %2560, align 4
  %2565 = getelementptr inbounds i32, i32* %2560, i64 1
  %2566 = ptrtoint i32* %2565 to i64
  %2567 = bitcast i32** %3 to i64*
  store i64 %2566, i64* %2567, align 8
  br label %2614

2568:                                             ; preds = %2559
  %2569 = ptrtoint i32* %2560 to i64
  %2570 = bitcast i32** %3 to i64*
  %2571 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2572 = load i64, i64* %2571, align 8
  %2573 = sub i64 %2569, %2572
  %2574 = ashr exact i64 %2573, 2
  %2575 = add nsw i64 %2574, 1
  %2576 = icmp ugt i64 %2575, 4611686018427387903
  br i1 %2576, label %2577, label %2579

2577:                                             ; preds = %2568
  %2578 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2578) #11
  unreachable

2579:                                             ; preds = %2568
  %2580 = bitcast i32** %4 to i64*
  %2581 = sub i64 %2563, %2572
  %2582 = ashr exact i64 %2581, 2
  %2583 = icmp ult i64 %2582, 2305843009213693951
  br i1 %2583, label %2584, label %2592

2584:                                             ; preds = %2579
  %2585 = ashr exact i64 %2581, 1
  %2586 = icmp ult i64 %2585, %2575
  %2587 = select i1 %2586, i64 %2575, i64 %2585
  %2588 = icmp eq i64 %2587, 0
  br i1 %2588, label %2597, label %2589

2589:                                             ; preds = %2584
  %2590 = icmp ugt i64 %2587, 4611686018427387903
  br i1 %2590, label %2591, label %2592

2591:                                             ; preds = %2589
  tail call void @abort() #11
  unreachable

2592:                                             ; preds = %2589, %2579
  %2593 = phi i64 [ %2587, %2589 ], [ 4611686018427387903, %2579 ]
  %2594 = shl i64 %2593, 2
  %2595 = tail call i8* @_Znwm(i64 %2594) #10
  %2596 = bitcast i8* %2595 to i32*
  br label %2597

2597:                                             ; preds = %2592, %2584
  %2598 = phi i64 [ %2593, %2592 ], [ 0, %2584 ]
  %2599 = phi i8* [ %2595, %2592 ], [ null, %2584 ]
  %2600 = phi i32* [ %2596, %2592 ], [ null, %2584 ]
  %2601 = getelementptr inbounds i32, i32* %2600, i64 %2574
  %2602 = getelementptr inbounds i32, i32* %2600, i64 %2598
  %2603 = ptrtoint i32* %2602 to i64
  store i32 44, i32* %2601, align 4
  %2604 = getelementptr inbounds i32, i32* %2601, i64 1
  %2605 = ptrtoint i32* %2604 to i64
  %2606 = ptrtoint i32* %2600 to i64
  %2607 = icmp sgt i64 %2573, 0
  br i1 %2607, label %2608, label %2610

2608:                                             ; preds = %2597
  %2609 = inttoptr i64 %2572 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2599, i8* align 4 %2609, i64 %2573, i1 false) #9
  br label %2610

2610:                                             ; preds = %2608, %2597
  store i64 %2606, i64* %2571, align 8
  store i64 %2605, i64* %2570, align 8
  store i64 %2603, i64* %2580, align 8
  %2611 = icmp eq i64 %2572, 0
  br i1 %2611, label %2614, label %2612

2612:                                             ; preds = %2610
  %2613 = inttoptr i64 %2572 to i8*
  tail call void @_ZdlPv(i8* %2613) #10
  br label %2614

2614:                                             ; preds = %2612, %2610, %2564, %2555
  %2615 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 45
  %2616 = load i8, i8* %2615, align 1, !range !2
  %2617 = icmp eq i8 %2616, 0
  br i1 %2617, label %2673, label %2618

2618:                                             ; preds = %2614
  %2619 = load i32*, i32** %3, align 8
  %2620 = load i32*, i32** %4, align 8
  %2621 = icmp ult i32* %2619, %2620
  %2622 = ptrtoint i32* %2620 to i64
  br i1 %2621, label %2623, label %2627

2623:                                             ; preds = %2618
  store i32 45, i32* %2619, align 4
  %2624 = getelementptr inbounds i32, i32* %2619, i64 1
  %2625 = ptrtoint i32* %2624 to i64
  %2626 = bitcast i32** %3 to i64*
  store i64 %2625, i64* %2626, align 8
  br label %2673

2627:                                             ; preds = %2618
  %2628 = ptrtoint i32* %2619 to i64
  %2629 = bitcast i32** %3 to i64*
  %2630 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2631 = load i64, i64* %2630, align 8
  %2632 = sub i64 %2628, %2631
  %2633 = ashr exact i64 %2632, 2
  %2634 = add nsw i64 %2633, 1
  %2635 = icmp ugt i64 %2634, 4611686018427387903
  br i1 %2635, label %2636, label %2638

2636:                                             ; preds = %2627
  %2637 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2637) #11
  unreachable

2638:                                             ; preds = %2627
  %2639 = bitcast i32** %4 to i64*
  %2640 = sub i64 %2622, %2631
  %2641 = ashr exact i64 %2640, 2
  %2642 = icmp ult i64 %2641, 2305843009213693951
  br i1 %2642, label %2643, label %2651

2643:                                             ; preds = %2638
  %2644 = ashr exact i64 %2640, 1
  %2645 = icmp ult i64 %2644, %2634
  %2646 = select i1 %2645, i64 %2634, i64 %2644
  %2647 = icmp eq i64 %2646, 0
  br i1 %2647, label %2656, label %2648

2648:                                             ; preds = %2643
  %2649 = icmp ugt i64 %2646, 4611686018427387903
  br i1 %2649, label %2650, label %2651

2650:                                             ; preds = %2648
  tail call void @abort() #11
  unreachable

2651:                                             ; preds = %2648, %2638
  %2652 = phi i64 [ %2646, %2648 ], [ 4611686018427387903, %2638 ]
  %2653 = shl i64 %2652, 2
  %2654 = tail call i8* @_Znwm(i64 %2653) #10
  %2655 = bitcast i8* %2654 to i32*
  br label %2656

2656:                                             ; preds = %2651, %2643
  %2657 = phi i64 [ %2652, %2651 ], [ 0, %2643 ]
  %2658 = phi i8* [ %2654, %2651 ], [ null, %2643 ]
  %2659 = phi i32* [ %2655, %2651 ], [ null, %2643 ]
  %2660 = getelementptr inbounds i32, i32* %2659, i64 %2633
  %2661 = getelementptr inbounds i32, i32* %2659, i64 %2657
  %2662 = ptrtoint i32* %2661 to i64
  store i32 45, i32* %2660, align 4
  %2663 = getelementptr inbounds i32, i32* %2660, i64 1
  %2664 = ptrtoint i32* %2663 to i64
  %2665 = ptrtoint i32* %2659 to i64
  %2666 = icmp sgt i64 %2632, 0
  br i1 %2666, label %2667, label %2669

2667:                                             ; preds = %2656
  %2668 = inttoptr i64 %2631 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2658, i8* align 4 %2668, i64 %2632, i1 false) #9
  br label %2669

2669:                                             ; preds = %2667, %2656
  store i64 %2665, i64* %2630, align 8
  store i64 %2664, i64* %2629, align 8
  store i64 %2662, i64* %2639, align 8
  %2670 = icmp eq i64 %2631, 0
  br i1 %2670, label %2673, label %2671

2671:                                             ; preds = %2669
  %2672 = inttoptr i64 %2631 to i8*
  tail call void @_ZdlPv(i8* %2672) #10
  br label %2673

2673:                                             ; preds = %2671, %2669, %2623, %2614
  %2674 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 46
  %2675 = load i8, i8* %2674, align 2, !range !2
  %2676 = icmp eq i8 %2675, 0
  br i1 %2676, label %2732, label %2677

2677:                                             ; preds = %2673
  %2678 = load i32*, i32** %3, align 8
  %2679 = load i32*, i32** %4, align 8
  %2680 = icmp ult i32* %2678, %2679
  %2681 = ptrtoint i32* %2679 to i64
  br i1 %2680, label %2682, label %2686

2682:                                             ; preds = %2677
  store i32 46, i32* %2678, align 4
  %2683 = getelementptr inbounds i32, i32* %2678, i64 1
  %2684 = ptrtoint i32* %2683 to i64
  %2685 = bitcast i32** %3 to i64*
  store i64 %2684, i64* %2685, align 8
  br label %2732

2686:                                             ; preds = %2677
  %2687 = ptrtoint i32* %2678 to i64
  %2688 = bitcast i32** %3 to i64*
  %2689 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2690 = load i64, i64* %2689, align 8
  %2691 = sub i64 %2687, %2690
  %2692 = ashr exact i64 %2691, 2
  %2693 = add nsw i64 %2692, 1
  %2694 = icmp ugt i64 %2693, 4611686018427387903
  br i1 %2694, label %2695, label %2697

2695:                                             ; preds = %2686
  %2696 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2696) #11
  unreachable

2697:                                             ; preds = %2686
  %2698 = bitcast i32** %4 to i64*
  %2699 = sub i64 %2681, %2690
  %2700 = ashr exact i64 %2699, 2
  %2701 = icmp ult i64 %2700, 2305843009213693951
  br i1 %2701, label %2702, label %2710

2702:                                             ; preds = %2697
  %2703 = ashr exact i64 %2699, 1
  %2704 = icmp ult i64 %2703, %2693
  %2705 = select i1 %2704, i64 %2693, i64 %2703
  %2706 = icmp eq i64 %2705, 0
  br i1 %2706, label %2715, label %2707

2707:                                             ; preds = %2702
  %2708 = icmp ugt i64 %2705, 4611686018427387903
  br i1 %2708, label %2709, label %2710

2709:                                             ; preds = %2707
  tail call void @abort() #11
  unreachable

2710:                                             ; preds = %2707, %2697
  %2711 = phi i64 [ %2705, %2707 ], [ 4611686018427387903, %2697 ]
  %2712 = shl i64 %2711, 2
  %2713 = tail call i8* @_Znwm(i64 %2712) #10
  %2714 = bitcast i8* %2713 to i32*
  br label %2715

2715:                                             ; preds = %2710, %2702
  %2716 = phi i64 [ %2711, %2710 ], [ 0, %2702 ]
  %2717 = phi i8* [ %2713, %2710 ], [ null, %2702 ]
  %2718 = phi i32* [ %2714, %2710 ], [ null, %2702 ]
  %2719 = getelementptr inbounds i32, i32* %2718, i64 %2692
  %2720 = getelementptr inbounds i32, i32* %2718, i64 %2716
  %2721 = ptrtoint i32* %2720 to i64
  store i32 46, i32* %2719, align 4
  %2722 = getelementptr inbounds i32, i32* %2719, i64 1
  %2723 = ptrtoint i32* %2722 to i64
  %2724 = ptrtoint i32* %2718 to i64
  %2725 = icmp sgt i64 %2691, 0
  br i1 %2725, label %2726, label %2728

2726:                                             ; preds = %2715
  %2727 = inttoptr i64 %2690 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2717, i8* align 4 %2727, i64 %2691, i1 false) #9
  br label %2728

2728:                                             ; preds = %2726, %2715
  store i64 %2724, i64* %2689, align 8
  store i64 %2723, i64* %2688, align 8
  store i64 %2721, i64* %2698, align 8
  %2729 = icmp eq i64 %2690, 0
  br i1 %2729, label %2732, label %2730

2730:                                             ; preds = %2728
  %2731 = inttoptr i64 %2690 to i8*
  tail call void @_ZdlPv(i8* %2731) #10
  br label %2732

2732:                                             ; preds = %2730, %2728, %2682, %2673
  %2733 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 47
  %2734 = load i8, i8* %2733, align 1, !range !2
  %2735 = icmp eq i8 %2734, 0
  br i1 %2735, label %2791, label %2736

2736:                                             ; preds = %2732
  %2737 = load i32*, i32** %3, align 8
  %2738 = load i32*, i32** %4, align 8
  %2739 = icmp ult i32* %2737, %2738
  %2740 = ptrtoint i32* %2738 to i64
  br i1 %2739, label %2741, label %2745

2741:                                             ; preds = %2736
  store i32 47, i32* %2737, align 4
  %2742 = getelementptr inbounds i32, i32* %2737, i64 1
  %2743 = ptrtoint i32* %2742 to i64
  %2744 = bitcast i32** %3 to i64*
  store i64 %2743, i64* %2744, align 8
  br label %2791

2745:                                             ; preds = %2736
  %2746 = ptrtoint i32* %2737 to i64
  %2747 = bitcast i32** %3 to i64*
  %2748 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2749 = load i64, i64* %2748, align 8
  %2750 = sub i64 %2746, %2749
  %2751 = ashr exact i64 %2750, 2
  %2752 = add nsw i64 %2751, 1
  %2753 = icmp ugt i64 %2752, 4611686018427387903
  br i1 %2753, label %2754, label %2756

2754:                                             ; preds = %2745
  %2755 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2755) #11
  unreachable

2756:                                             ; preds = %2745
  %2757 = bitcast i32** %4 to i64*
  %2758 = sub i64 %2740, %2749
  %2759 = ashr exact i64 %2758, 2
  %2760 = icmp ult i64 %2759, 2305843009213693951
  br i1 %2760, label %2761, label %2769

2761:                                             ; preds = %2756
  %2762 = ashr exact i64 %2758, 1
  %2763 = icmp ult i64 %2762, %2752
  %2764 = select i1 %2763, i64 %2752, i64 %2762
  %2765 = icmp eq i64 %2764, 0
  br i1 %2765, label %2774, label %2766

2766:                                             ; preds = %2761
  %2767 = icmp ugt i64 %2764, 4611686018427387903
  br i1 %2767, label %2768, label %2769

2768:                                             ; preds = %2766
  tail call void @abort() #11
  unreachable

2769:                                             ; preds = %2766, %2756
  %2770 = phi i64 [ %2764, %2766 ], [ 4611686018427387903, %2756 ]
  %2771 = shl i64 %2770, 2
  %2772 = tail call i8* @_Znwm(i64 %2771) #10
  %2773 = bitcast i8* %2772 to i32*
  br label %2774

2774:                                             ; preds = %2769, %2761
  %2775 = phi i64 [ %2770, %2769 ], [ 0, %2761 ]
  %2776 = phi i8* [ %2772, %2769 ], [ null, %2761 ]
  %2777 = phi i32* [ %2773, %2769 ], [ null, %2761 ]
  %2778 = getelementptr inbounds i32, i32* %2777, i64 %2751
  %2779 = getelementptr inbounds i32, i32* %2777, i64 %2775
  %2780 = ptrtoint i32* %2779 to i64
  store i32 47, i32* %2778, align 4
  %2781 = getelementptr inbounds i32, i32* %2778, i64 1
  %2782 = ptrtoint i32* %2781 to i64
  %2783 = ptrtoint i32* %2777 to i64
  %2784 = icmp sgt i64 %2750, 0
  br i1 %2784, label %2785, label %2787

2785:                                             ; preds = %2774
  %2786 = inttoptr i64 %2749 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2776, i8* align 4 %2786, i64 %2750, i1 false) #9
  br label %2787

2787:                                             ; preds = %2785, %2774
  store i64 %2783, i64* %2748, align 8
  store i64 %2782, i64* %2747, align 8
  store i64 %2780, i64* %2757, align 8
  %2788 = icmp eq i64 %2749, 0
  br i1 %2788, label %2791, label %2789

2789:                                             ; preds = %2787
  %2790 = inttoptr i64 %2749 to i8*
  tail call void @_ZdlPv(i8* %2790) #10
  br label %2791

2791:                                             ; preds = %2789, %2787, %2741, %2732
  %2792 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 48
  %2793 = load i8, i8* %2792, align 4, !range !2
  %2794 = icmp eq i8 %2793, 0
  br i1 %2794, label %2850, label %2795

2795:                                             ; preds = %2791
  %2796 = load i32*, i32** %3, align 8
  %2797 = load i32*, i32** %4, align 8
  %2798 = icmp ult i32* %2796, %2797
  %2799 = ptrtoint i32* %2797 to i64
  br i1 %2798, label %2800, label %2804

2800:                                             ; preds = %2795
  store i32 48, i32* %2796, align 4
  %2801 = getelementptr inbounds i32, i32* %2796, i64 1
  %2802 = ptrtoint i32* %2801 to i64
  %2803 = bitcast i32** %3 to i64*
  store i64 %2802, i64* %2803, align 8
  br label %2850

2804:                                             ; preds = %2795
  %2805 = ptrtoint i32* %2796 to i64
  %2806 = bitcast i32** %3 to i64*
  %2807 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2808 = load i64, i64* %2807, align 8
  %2809 = sub i64 %2805, %2808
  %2810 = ashr exact i64 %2809, 2
  %2811 = add nsw i64 %2810, 1
  %2812 = icmp ugt i64 %2811, 4611686018427387903
  br i1 %2812, label %2813, label %2815

2813:                                             ; preds = %2804
  %2814 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2814) #11
  unreachable

2815:                                             ; preds = %2804
  %2816 = bitcast i32** %4 to i64*
  %2817 = sub i64 %2799, %2808
  %2818 = ashr exact i64 %2817, 2
  %2819 = icmp ult i64 %2818, 2305843009213693951
  br i1 %2819, label %2820, label %2828

2820:                                             ; preds = %2815
  %2821 = ashr exact i64 %2817, 1
  %2822 = icmp ult i64 %2821, %2811
  %2823 = select i1 %2822, i64 %2811, i64 %2821
  %2824 = icmp eq i64 %2823, 0
  br i1 %2824, label %2833, label %2825

2825:                                             ; preds = %2820
  %2826 = icmp ugt i64 %2823, 4611686018427387903
  br i1 %2826, label %2827, label %2828

2827:                                             ; preds = %2825
  tail call void @abort() #11
  unreachable

2828:                                             ; preds = %2825, %2815
  %2829 = phi i64 [ %2823, %2825 ], [ 4611686018427387903, %2815 ]
  %2830 = shl i64 %2829, 2
  %2831 = tail call i8* @_Znwm(i64 %2830) #10
  %2832 = bitcast i8* %2831 to i32*
  br label %2833

2833:                                             ; preds = %2828, %2820
  %2834 = phi i64 [ %2829, %2828 ], [ 0, %2820 ]
  %2835 = phi i8* [ %2831, %2828 ], [ null, %2820 ]
  %2836 = phi i32* [ %2832, %2828 ], [ null, %2820 ]
  %2837 = getelementptr inbounds i32, i32* %2836, i64 %2810
  %2838 = getelementptr inbounds i32, i32* %2836, i64 %2834
  %2839 = ptrtoint i32* %2838 to i64
  store i32 48, i32* %2837, align 4
  %2840 = getelementptr inbounds i32, i32* %2837, i64 1
  %2841 = ptrtoint i32* %2840 to i64
  %2842 = ptrtoint i32* %2836 to i64
  %2843 = icmp sgt i64 %2809, 0
  br i1 %2843, label %2844, label %2846

2844:                                             ; preds = %2833
  %2845 = inttoptr i64 %2808 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2835, i8* align 4 %2845, i64 %2809, i1 false) #9
  br label %2846

2846:                                             ; preds = %2844, %2833
  store i64 %2842, i64* %2807, align 8
  store i64 %2841, i64* %2806, align 8
  store i64 %2839, i64* %2816, align 8
  %2847 = icmp eq i64 %2808, 0
  br i1 %2847, label %2850, label %2848

2848:                                             ; preds = %2846
  %2849 = inttoptr i64 %2808 to i8*
  tail call void @_ZdlPv(i8* %2849) #10
  br label %2850

2850:                                             ; preds = %2848, %2846, %2800, %2791
  %2851 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 49
  %2852 = load i8, i8* %2851, align 1, !range !2
  %2853 = icmp eq i8 %2852, 0
  br i1 %2853, label %2909, label %2854

2854:                                             ; preds = %2850
  %2855 = load i32*, i32** %3, align 8
  %2856 = load i32*, i32** %4, align 8
  %2857 = icmp ult i32* %2855, %2856
  %2858 = ptrtoint i32* %2856 to i64
  br i1 %2857, label %2859, label %2863

2859:                                             ; preds = %2854
  store i32 49, i32* %2855, align 4
  %2860 = getelementptr inbounds i32, i32* %2855, i64 1
  %2861 = ptrtoint i32* %2860 to i64
  %2862 = bitcast i32** %3 to i64*
  store i64 %2861, i64* %2862, align 8
  br label %2909

2863:                                             ; preds = %2854
  %2864 = ptrtoint i32* %2855 to i64
  %2865 = bitcast i32** %3 to i64*
  %2866 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2867 = load i64, i64* %2866, align 8
  %2868 = sub i64 %2864, %2867
  %2869 = ashr exact i64 %2868, 2
  %2870 = add nsw i64 %2869, 1
  %2871 = icmp ugt i64 %2870, 4611686018427387903
  br i1 %2871, label %2872, label %2874

2872:                                             ; preds = %2863
  %2873 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2873) #11
  unreachable

2874:                                             ; preds = %2863
  %2875 = bitcast i32** %4 to i64*
  %2876 = sub i64 %2858, %2867
  %2877 = ashr exact i64 %2876, 2
  %2878 = icmp ult i64 %2877, 2305843009213693951
  br i1 %2878, label %2879, label %2887

2879:                                             ; preds = %2874
  %2880 = ashr exact i64 %2876, 1
  %2881 = icmp ult i64 %2880, %2870
  %2882 = select i1 %2881, i64 %2870, i64 %2880
  %2883 = icmp eq i64 %2882, 0
  br i1 %2883, label %2892, label %2884

2884:                                             ; preds = %2879
  %2885 = icmp ugt i64 %2882, 4611686018427387903
  br i1 %2885, label %2886, label %2887

2886:                                             ; preds = %2884
  tail call void @abort() #11
  unreachable

2887:                                             ; preds = %2884, %2874
  %2888 = phi i64 [ %2882, %2884 ], [ 4611686018427387903, %2874 ]
  %2889 = shl i64 %2888, 2
  %2890 = tail call i8* @_Znwm(i64 %2889) #10
  %2891 = bitcast i8* %2890 to i32*
  br label %2892

2892:                                             ; preds = %2887, %2879
  %2893 = phi i64 [ %2888, %2887 ], [ 0, %2879 ]
  %2894 = phi i8* [ %2890, %2887 ], [ null, %2879 ]
  %2895 = phi i32* [ %2891, %2887 ], [ null, %2879 ]
  %2896 = getelementptr inbounds i32, i32* %2895, i64 %2869
  %2897 = getelementptr inbounds i32, i32* %2895, i64 %2893
  %2898 = ptrtoint i32* %2897 to i64
  store i32 49, i32* %2896, align 4
  %2899 = getelementptr inbounds i32, i32* %2896, i64 1
  %2900 = ptrtoint i32* %2899 to i64
  %2901 = ptrtoint i32* %2895 to i64
  %2902 = icmp sgt i64 %2868, 0
  br i1 %2902, label %2903, label %2905

2903:                                             ; preds = %2892
  %2904 = inttoptr i64 %2867 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2894, i8* align 4 %2904, i64 %2868, i1 false) #9
  br label %2905

2905:                                             ; preds = %2903, %2892
  store i64 %2901, i64* %2866, align 8
  store i64 %2900, i64* %2865, align 8
  store i64 %2898, i64* %2875, align 8
  %2906 = icmp eq i64 %2867, 0
  br i1 %2906, label %2909, label %2907

2907:                                             ; preds = %2905
  %2908 = inttoptr i64 %2867 to i8*
  tail call void @_ZdlPv(i8* %2908) #10
  br label %2909

2909:                                             ; preds = %2907, %2905, %2859, %2850
  %2910 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 50
  %2911 = load i8, i8* %2910, align 2, !range !2
  %2912 = icmp eq i8 %2911, 0
  br i1 %2912, label %2968, label %2913

2913:                                             ; preds = %2909
  %2914 = load i32*, i32** %3, align 8
  %2915 = load i32*, i32** %4, align 8
  %2916 = icmp ult i32* %2914, %2915
  %2917 = ptrtoint i32* %2915 to i64
  br i1 %2916, label %2918, label %2922

2918:                                             ; preds = %2913
  store i32 50, i32* %2914, align 4
  %2919 = getelementptr inbounds i32, i32* %2914, i64 1
  %2920 = ptrtoint i32* %2919 to i64
  %2921 = bitcast i32** %3 to i64*
  store i64 %2920, i64* %2921, align 8
  br label %2968

2922:                                             ; preds = %2913
  %2923 = ptrtoint i32* %2914 to i64
  %2924 = bitcast i32** %3 to i64*
  %2925 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2926 = load i64, i64* %2925, align 8
  %2927 = sub i64 %2923, %2926
  %2928 = ashr exact i64 %2927, 2
  %2929 = add nsw i64 %2928, 1
  %2930 = icmp ugt i64 %2929, 4611686018427387903
  br i1 %2930, label %2931, label %2933

2931:                                             ; preds = %2922
  %2932 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2932) #11
  unreachable

2933:                                             ; preds = %2922
  %2934 = bitcast i32** %4 to i64*
  %2935 = sub i64 %2917, %2926
  %2936 = ashr exact i64 %2935, 2
  %2937 = icmp ult i64 %2936, 2305843009213693951
  br i1 %2937, label %2938, label %2946

2938:                                             ; preds = %2933
  %2939 = ashr exact i64 %2935, 1
  %2940 = icmp ult i64 %2939, %2929
  %2941 = select i1 %2940, i64 %2929, i64 %2939
  %2942 = icmp eq i64 %2941, 0
  br i1 %2942, label %2951, label %2943

2943:                                             ; preds = %2938
  %2944 = icmp ugt i64 %2941, 4611686018427387903
  br i1 %2944, label %2945, label %2946

2945:                                             ; preds = %2943
  tail call void @abort() #11
  unreachable

2946:                                             ; preds = %2943, %2933
  %2947 = phi i64 [ %2941, %2943 ], [ 4611686018427387903, %2933 ]
  %2948 = shl i64 %2947, 2
  %2949 = tail call i8* @_Znwm(i64 %2948) #10
  %2950 = bitcast i8* %2949 to i32*
  br label %2951

2951:                                             ; preds = %2946, %2938
  %2952 = phi i64 [ %2947, %2946 ], [ 0, %2938 ]
  %2953 = phi i8* [ %2949, %2946 ], [ null, %2938 ]
  %2954 = phi i32* [ %2950, %2946 ], [ null, %2938 ]
  %2955 = getelementptr inbounds i32, i32* %2954, i64 %2928
  %2956 = getelementptr inbounds i32, i32* %2954, i64 %2952
  %2957 = ptrtoint i32* %2956 to i64
  store i32 50, i32* %2955, align 4
  %2958 = getelementptr inbounds i32, i32* %2955, i64 1
  %2959 = ptrtoint i32* %2958 to i64
  %2960 = ptrtoint i32* %2954 to i64
  %2961 = icmp sgt i64 %2927, 0
  br i1 %2961, label %2962, label %2964

2962:                                             ; preds = %2951
  %2963 = inttoptr i64 %2926 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2953, i8* align 4 %2963, i64 %2927, i1 false) #9
  br label %2964

2964:                                             ; preds = %2962, %2951
  store i64 %2960, i64* %2925, align 8
  store i64 %2959, i64* %2924, align 8
  store i64 %2957, i64* %2934, align 8
  %2965 = icmp eq i64 %2926, 0
  br i1 %2965, label %2968, label %2966

2966:                                             ; preds = %2964
  %2967 = inttoptr i64 %2926 to i8*
  tail call void @_ZdlPv(i8* %2967) #10
  br label %2968

2968:                                             ; preds = %2966, %2964, %2918, %2909
  %2969 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 51
  %2970 = load i8, i8* %2969, align 1, !range !2
  %2971 = icmp eq i8 %2970, 0
  br i1 %2971, label %3027, label %2972

2972:                                             ; preds = %2968
  %2973 = load i32*, i32** %3, align 8
  %2974 = load i32*, i32** %4, align 8
  %2975 = icmp ult i32* %2973, %2974
  %2976 = ptrtoint i32* %2974 to i64
  br i1 %2975, label %2977, label %2981

2977:                                             ; preds = %2972
  store i32 51, i32* %2973, align 4
  %2978 = getelementptr inbounds i32, i32* %2973, i64 1
  %2979 = ptrtoint i32* %2978 to i64
  %2980 = bitcast i32** %3 to i64*
  store i64 %2979, i64* %2980, align 8
  br label %3027

2981:                                             ; preds = %2972
  %2982 = ptrtoint i32* %2973 to i64
  %2983 = bitcast i32** %3 to i64*
  %2984 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2985 = load i64, i64* %2984, align 8
  %2986 = sub i64 %2982, %2985
  %2987 = ashr exact i64 %2986, 2
  %2988 = add nsw i64 %2987, 1
  %2989 = icmp ugt i64 %2988, 4611686018427387903
  br i1 %2989, label %2990, label %2992

2990:                                             ; preds = %2981
  %2991 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2991) #11
  unreachable

2992:                                             ; preds = %2981
  %2993 = bitcast i32** %4 to i64*
  %2994 = sub i64 %2976, %2985
  %2995 = ashr exact i64 %2994, 2
  %2996 = icmp ult i64 %2995, 2305843009213693951
  br i1 %2996, label %2997, label %3005

2997:                                             ; preds = %2992
  %2998 = ashr exact i64 %2994, 1
  %2999 = icmp ult i64 %2998, %2988
  %3000 = select i1 %2999, i64 %2988, i64 %2998
  %3001 = icmp eq i64 %3000, 0
  br i1 %3001, label %3010, label %3002

3002:                                             ; preds = %2997
  %3003 = icmp ugt i64 %3000, 4611686018427387903
  br i1 %3003, label %3004, label %3005

3004:                                             ; preds = %3002
  tail call void @abort() #11
  unreachable

3005:                                             ; preds = %3002, %2992
  %3006 = phi i64 [ %3000, %3002 ], [ 4611686018427387903, %2992 ]
  %3007 = shl i64 %3006, 2
  %3008 = tail call i8* @_Znwm(i64 %3007) #10
  %3009 = bitcast i8* %3008 to i32*
  br label %3010

3010:                                             ; preds = %3005, %2997
  %3011 = phi i64 [ %3006, %3005 ], [ 0, %2997 ]
  %3012 = phi i8* [ %3008, %3005 ], [ null, %2997 ]
  %3013 = phi i32* [ %3009, %3005 ], [ null, %2997 ]
  %3014 = getelementptr inbounds i32, i32* %3013, i64 %2987
  %3015 = getelementptr inbounds i32, i32* %3013, i64 %3011
  %3016 = ptrtoint i32* %3015 to i64
  store i32 51, i32* %3014, align 4
  %3017 = getelementptr inbounds i32, i32* %3014, i64 1
  %3018 = ptrtoint i32* %3017 to i64
  %3019 = ptrtoint i32* %3013 to i64
  %3020 = icmp sgt i64 %2986, 0
  br i1 %3020, label %3021, label %3023

3021:                                             ; preds = %3010
  %3022 = inttoptr i64 %2985 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3012, i8* align 4 %3022, i64 %2986, i1 false) #9
  br label %3023

3023:                                             ; preds = %3021, %3010
  store i64 %3019, i64* %2984, align 8
  store i64 %3018, i64* %2983, align 8
  store i64 %3016, i64* %2993, align 8
  %3024 = icmp eq i64 %2985, 0
  br i1 %3024, label %3027, label %3025

3025:                                             ; preds = %3023
  %3026 = inttoptr i64 %2985 to i8*
  tail call void @_ZdlPv(i8* %3026) #10
  br label %3027

3027:                                             ; preds = %3025, %3023, %2977, %2968
  %3028 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 52
  %3029 = load i8, i8* %3028, align 4, !range !2
  %3030 = icmp eq i8 %3029, 0
  br i1 %3030, label %3086, label %3031

3031:                                             ; preds = %3027
  %3032 = load i32*, i32** %3, align 8
  %3033 = load i32*, i32** %4, align 8
  %3034 = icmp ult i32* %3032, %3033
  %3035 = ptrtoint i32* %3033 to i64
  br i1 %3034, label %3036, label %3040

3036:                                             ; preds = %3031
  store i32 52, i32* %3032, align 4
  %3037 = getelementptr inbounds i32, i32* %3032, i64 1
  %3038 = ptrtoint i32* %3037 to i64
  %3039 = bitcast i32** %3 to i64*
  store i64 %3038, i64* %3039, align 8
  br label %3086

3040:                                             ; preds = %3031
  %3041 = ptrtoint i32* %3032 to i64
  %3042 = bitcast i32** %3 to i64*
  %3043 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3044 = load i64, i64* %3043, align 8
  %3045 = sub i64 %3041, %3044
  %3046 = ashr exact i64 %3045, 2
  %3047 = add nsw i64 %3046, 1
  %3048 = icmp ugt i64 %3047, 4611686018427387903
  br i1 %3048, label %3049, label %3051

3049:                                             ; preds = %3040
  %3050 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3050) #11
  unreachable

3051:                                             ; preds = %3040
  %3052 = bitcast i32** %4 to i64*
  %3053 = sub i64 %3035, %3044
  %3054 = ashr exact i64 %3053, 2
  %3055 = icmp ult i64 %3054, 2305843009213693951
  br i1 %3055, label %3056, label %3064

3056:                                             ; preds = %3051
  %3057 = ashr exact i64 %3053, 1
  %3058 = icmp ult i64 %3057, %3047
  %3059 = select i1 %3058, i64 %3047, i64 %3057
  %3060 = icmp eq i64 %3059, 0
  br i1 %3060, label %3069, label %3061

3061:                                             ; preds = %3056
  %3062 = icmp ugt i64 %3059, 4611686018427387903
  br i1 %3062, label %3063, label %3064

3063:                                             ; preds = %3061
  tail call void @abort() #11
  unreachable

3064:                                             ; preds = %3061, %3051
  %3065 = phi i64 [ %3059, %3061 ], [ 4611686018427387903, %3051 ]
  %3066 = shl i64 %3065, 2
  %3067 = tail call i8* @_Znwm(i64 %3066) #10
  %3068 = bitcast i8* %3067 to i32*
  br label %3069

3069:                                             ; preds = %3064, %3056
  %3070 = phi i64 [ %3065, %3064 ], [ 0, %3056 ]
  %3071 = phi i8* [ %3067, %3064 ], [ null, %3056 ]
  %3072 = phi i32* [ %3068, %3064 ], [ null, %3056 ]
  %3073 = getelementptr inbounds i32, i32* %3072, i64 %3046
  %3074 = getelementptr inbounds i32, i32* %3072, i64 %3070
  %3075 = ptrtoint i32* %3074 to i64
  store i32 52, i32* %3073, align 4
  %3076 = getelementptr inbounds i32, i32* %3073, i64 1
  %3077 = ptrtoint i32* %3076 to i64
  %3078 = ptrtoint i32* %3072 to i64
  %3079 = icmp sgt i64 %3045, 0
  br i1 %3079, label %3080, label %3082

3080:                                             ; preds = %3069
  %3081 = inttoptr i64 %3044 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3071, i8* align 4 %3081, i64 %3045, i1 false) #9
  br label %3082

3082:                                             ; preds = %3080, %3069
  store i64 %3078, i64* %3043, align 8
  store i64 %3077, i64* %3042, align 8
  store i64 %3075, i64* %3052, align 8
  %3083 = icmp eq i64 %3044, 0
  br i1 %3083, label %3086, label %3084

3084:                                             ; preds = %3082
  %3085 = inttoptr i64 %3044 to i8*
  tail call void @_ZdlPv(i8* %3085) #10
  br label %3086

3086:                                             ; preds = %3084, %3082, %3036, %3027
  %3087 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 53
  %3088 = load i8, i8* %3087, align 1, !range !2
  %3089 = icmp eq i8 %3088, 0
  br i1 %3089, label %3145, label %3090

3090:                                             ; preds = %3086
  %3091 = load i32*, i32** %3, align 8
  %3092 = load i32*, i32** %4, align 8
  %3093 = icmp ult i32* %3091, %3092
  %3094 = ptrtoint i32* %3092 to i64
  br i1 %3093, label %3095, label %3099

3095:                                             ; preds = %3090
  store i32 53, i32* %3091, align 4
  %3096 = getelementptr inbounds i32, i32* %3091, i64 1
  %3097 = ptrtoint i32* %3096 to i64
  %3098 = bitcast i32** %3 to i64*
  store i64 %3097, i64* %3098, align 8
  br label %3145

3099:                                             ; preds = %3090
  %3100 = ptrtoint i32* %3091 to i64
  %3101 = bitcast i32** %3 to i64*
  %3102 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3103 = load i64, i64* %3102, align 8
  %3104 = sub i64 %3100, %3103
  %3105 = ashr exact i64 %3104, 2
  %3106 = add nsw i64 %3105, 1
  %3107 = icmp ugt i64 %3106, 4611686018427387903
  br i1 %3107, label %3108, label %3110

3108:                                             ; preds = %3099
  %3109 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3109) #11
  unreachable

3110:                                             ; preds = %3099
  %3111 = bitcast i32** %4 to i64*
  %3112 = sub i64 %3094, %3103
  %3113 = ashr exact i64 %3112, 2
  %3114 = icmp ult i64 %3113, 2305843009213693951
  br i1 %3114, label %3115, label %3123

3115:                                             ; preds = %3110
  %3116 = ashr exact i64 %3112, 1
  %3117 = icmp ult i64 %3116, %3106
  %3118 = select i1 %3117, i64 %3106, i64 %3116
  %3119 = icmp eq i64 %3118, 0
  br i1 %3119, label %3128, label %3120

3120:                                             ; preds = %3115
  %3121 = icmp ugt i64 %3118, 4611686018427387903
  br i1 %3121, label %3122, label %3123

3122:                                             ; preds = %3120
  tail call void @abort() #11
  unreachable

3123:                                             ; preds = %3120, %3110
  %3124 = phi i64 [ %3118, %3120 ], [ 4611686018427387903, %3110 ]
  %3125 = shl i64 %3124, 2
  %3126 = tail call i8* @_Znwm(i64 %3125) #10
  %3127 = bitcast i8* %3126 to i32*
  br label %3128

3128:                                             ; preds = %3123, %3115
  %3129 = phi i64 [ %3124, %3123 ], [ 0, %3115 ]
  %3130 = phi i8* [ %3126, %3123 ], [ null, %3115 ]
  %3131 = phi i32* [ %3127, %3123 ], [ null, %3115 ]
  %3132 = getelementptr inbounds i32, i32* %3131, i64 %3105
  %3133 = getelementptr inbounds i32, i32* %3131, i64 %3129
  %3134 = ptrtoint i32* %3133 to i64
  store i32 53, i32* %3132, align 4
  %3135 = getelementptr inbounds i32, i32* %3132, i64 1
  %3136 = ptrtoint i32* %3135 to i64
  %3137 = ptrtoint i32* %3131 to i64
  %3138 = icmp sgt i64 %3104, 0
  br i1 %3138, label %3139, label %3141

3139:                                             ; preds = %3128
  %3140 = inttoptr i64 %3103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3130, i8* align 4 %3140, i64 %3104, i1 false) #9
  br label %3141

3141:                                             ; preds = %3139, %3128
  store i64 %3137, i64* %3102, align 8
  store i64 %3136, i64* %3101, align 8
  store i64 %3134, i64* %3111, align 8
  %3142 = icmp eq i64 %3103, 0
  br i1 %3142, label %3145, label %3143

3143:                                             ; preds = %3141
  %3144 = inttoptr i64 %3103 to i8*
  tail call void @_ZdlPv(i8* %3144) #10
  br label %3145

3145:                                             ; preds = %3143, %3141, %3095, %3086
  %3146 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 54
  %3147 = load i8, i8* %3146, align 2, !range !2
  %3148 = icmp eq i8 %3147, 0
  br i1 %3148, label %3204, label %3149

3149:                                             ; preds = %3145
  %3150 = load i32*, i32** %3, align 8
  %3151 = load i32*, i32** %4, align 8
  %3152 = icmp ult i32* %3150, %3151
  %3153 = ptrtoint i32* %3151 to i64
  br i1 %3152, label %3154, label %3158

3154:                                             ; preds = %3149
  store i32 54, i32* %3150, align 4
  %3155 = getelementptr inbounds i32, i32* %3150, i64 1
  %3156 = ptrtoint i32* %3155 to i64
  %3157 = bitcast i32** %3 to i64*
  store i64 %3156, i64* %3157, align 8
  br label %3204

3158:                                             ; preds = %3149
  %3159 = ptrtoint i32* %3150 to i64
  %3160 = bitcast i32** %3 to i64*
  %3161 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3162 = load i64, i64* %3161, align 8
  %3163 = sub i64 %3159, %3162
  %3164 = ashr exact i64 %3163, 2
  %3165 = add nsw i64 %3164, 1
  %3166 = icmp ugt i64 %3165, 4611686018427387903
  br i1 %3166, label %3167, label %3169

3167:                                             ; preds = %3158
  %3168 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3168) #11
  unreachable

3169:                                             ; preds = %3158
  %3170 = bitcast i32** %4 to i64*
  %3171 = sub i64 %3153, %3162
  %3172 = ashr exact i64 %3171, 2
  %3173 = icmp ult i64 %3172, 2305843009213693951
  br i1 %3173, label %3174, label %3182

3174:                                             ; preds = %3169
  %3175 = ashr exact i64 %3171, 1
  %3176 = icmp ult i64 %3175, %3165
  %3177 = select i1 %3176, i64 %3165, i64 %3175
  %3178 = icmp eq i64 %3177, 0
  br i1 %3178, label %3187, label %3179

3179:                                             ; preds = %3174
  %3180 = icmp ugt i64 %3177, 4611686018427387903
  br i1 %3180, label %3181, label %3182

3181:                                             ; preds = %3179
  tail call void @abort() #11
  unreachable

3182:                                             ; preds = %3179, %3169
  %3183 = phi i64 [ %3177, %3179 ], [ 4611686018427387903, %3169 ]
  %3184 = shl i64 %3183, 2
  %3185 = tail call i8* @_Znwm(i64 %3184) #10
  %3186 = bitcast i8* %3185 to i32*
  br label %3187

3187:                                             ; preds = %3182, %3174
  %3188 = phi i64 [ %3183, %3182 ], [ 0, %3174 ]
  %3189 = phi i8* [ %3185, %3182 ], [ null, %3174 ]
  %3190 = phi i32* [ %3186, %3182 ], [ null, %3174 ]
  %3191 = getelementptr inbounds i32, i32* %3190, i64 %3164
  %3192 = getelementptr inbounds i32, i32* %3190, i64 %3188
  %3193 = ptrtoint i32* %3192 to i64
  store i32 54, i32* %3191, align 4
  %3194 = getelementptr inbounds i32, i32* %3191, i64 1
  %3195 = ptrtoint i32* %3194 to i64
  %3196 = ptrtoint i32* %3190 to i64
  %3197 = icmp sgt i64 %3163, 0
  br i1 %3197, label %3198, label %3200

3198:                                             ; preds = %3187
  %3199 = inttoptr i64 %3162 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3189, i8* align 4 %3199, i64 %3163, i1 false) #9
  br label %3200

3200:                                             ; preds = %3198, %3187
  store i64 %3196, i64* %3161, align 8
  store i64 %3195, i64* %3160, align 8
  store i64 %3193, i64* %3170, align 8
  %3201 = icmp eq i64 %3162, 0
  br i1 %3201, label %3204, label %3202

3202:                                             ; preds = %3200
  %3203 = inttoptr i64 %3162 to i8*
  tail call void @_ZdlPv(i8* %3203) #10
  br label %3204

3204:                                             ; preds = %3202, %3200, %3154, %3145
  %3205 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 55
  %3206 = load i8, i8* %3205, align 1, !range !2
  %3207 = icmp eq i8 %3206, 0
  br i1 %3207, label %3263, label %3208

3208:                                             ; preds = %3204
  %3209 = load i32*, i32** %3, align 8
  %3210 = load i32*, i32** %4, align 8
  %3211 = icmp ult i32* %3209, %3210
  %3212 = ptrtoint i32* %3210 to i64
  br i1 %3211, label %3213, label %3217

3213:                                             ; preds = %3208
  store i32 55, i32* %3209, align 4
  %3214 = getelementptr inbounds i32, i32* %3209, i64 1
  %3215 = ptrtoint i32* %3214 to i64
  %3216 = bitcast i32** %3 to i64*
  store i64 %3215, i64* %3216, align 8
  br label %3263

3217:                                             ; preds = %3208
  %3218 = ptrtoint i32* %3209 to i64
  %3219 = bitcast i32** %3 to i64*
  %3220 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3221 = load i64, i64* %3220, align 8
  %3222 = sub i64 %3218, %3221
  %3223 = ashr exact i64 %3222, 2
  %3224 = add nsw i64 %3223, 1
  %3225 = icmp ugt i64 %3224, 4611686018427387903
  br i1 %3225, label %3226, label %3228

3226:                                             ; preds = %3217
  %3227 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3227) #11
  unreachable

3228:                                             ; preds = %3217
  %3229 = bitcast i32** %4 to i64*
  %3230 = sub i64 %3212, %3221
  %3231 = ashr exact i64 %3230, 2
  %3232 = icmp ult i64 %3231, 2305843009213693951
  br i1 %3232, label %3233, label %3241

3233:                                             ; preds = %3228
  %3234 = ashr exact i64 %3230, 1
  %3235 = icmp ult i64 %3234, %3224
  %3236 = select i1 %3235, i64 %3224, i64 %3234
  %3237 = icmp eq i64 %3236, 0
  br i1 %3237, label %3246, label %3238

3238:                                             ; preds = %3233
  %3239 = icmp ugt i64 %3236, 4611686018427387903
  br i1 %3239, label %3240, label %3241

3240:                                             ; preds = %3238
  tail call void @abort() #11
  unreachable

3241:                                             ; preds = %3238, %3228
  %3242 = phi i64 [ %3236, %3238 ], [ 4611686018427387903, %3228 ]
  %3243 = shl i64 %3242, 2
  %3244 = tail call i8* @_Znwm(i64 %3243) #10
  %3245 = bitcast i8* %3244 to i32*
  br label %3246

3246:                                             ; preds = %3241, %3233
  %3247 = phi i64 [ %3242, %3241 ], [ 0, %3233 ]
  %3248 = phi i8* [ %3244, %3241 ], [ null, %3233 ]
  %3249 = phi i32* [ %3245, %3241 ], [ null, %3233 ]
  %3250 = getelementptr inbounds i32, i32* %3249, i64 %3223
  %3251 = getelementptr inbounds i32, i32* %3249, i64 %3247
  %3252 = ptrtoint i32* %3251 to i64
  store i32 55, i32* %3250, align 4
  %3253 = getelementptr inbounds i32, i32* %3250, i64 1
  %3254 = ptrtoint i32* %3253 to i64
  %3255 = ptrtoint i32* %3249 to i64
  %3256 = icmp sgt i64 %3222, 0
  br i1 %3256, label %3257, label %3259

3257:                                             ; preds = %3246
  %3258 = inttoptr i64 %3221 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3248, i8* align 4 %3258, i64 %3222, i1 false) #9
  br label %3259

3259:                                             ; preds = %3257, %3246
  store i64 %3255, i64* %3220, align 8
  store i64 %3254, i64* %3219, align 8
  store i64 %3252, i64* %3229, align 8
  %3260 = icmp eq i64 %3221, 0
  br i1 %3260, label %3263, label %3261

3261:                                             ; preds = %3259
  %3262 = inttoptr i64 %3221 to i8*
  tail call void @_ZdlPv(i8* %3262) #10
  br label %3263

3263:                                             ; preds = %3261, %3259, %3213, %3204
  %3264 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 56
  %3265 = load i8, i8* %3264, align 4, !range !2
  %3266 = icmp eq i8 %3265, 0
  br i1 %3266, label %3322, label %3267

3267:                                             ; preds = %3263
  %3268 = load i32*, i32** %3, align 8
  %3269 = load i32*, i32** %4, align 8
  %3270 = icmp ult i32* %3268, %3269
  %3271 = ptrtoint i32* %3269 to i64
  br i1 %3270, label %3272, label %3276

3272:                                             ; preds = %3267
  store i32 56, i32* %3268, align 4
  %3273 = getelementptr inbounds i32, i32* %3268, i64 1
  %3274 = ptrtoint i32* %3273 to i64
  %3275 = bitcast i32** %3 to i64*
  store i64 %3274, i64* %3275, align 8
  br label %3322

3276:                                             ; preds = %3267
  %3277 = ptrtoint i32* %3268 to i64
  %3278 = bitcast i32** %3 to i64*
  %3279 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3280 = load i64, i64* %3279, align 8
  %3281 = sub i64 %3277, %3280
  %3282 = ashr exact i64 %3281, 2
  %3283 = add nsw i64 %3282, 1
  %3284 = icmp ugt i64 %3283, 4611686018427387903
  br i1 %3284, label %3285, label %3287

3285:                                             ; preds = %3276
  %3286 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3286) #11
  unreachable

3287:                                             ; preds = %3276
  %3288 = bitcast i32** %4 to i64*
  %3289 = sub i64 %3271, %3280
  %3290 = ashr exact i64 %3289, 2
  %3291 = icmp ult i64 %3290, 2305843009213693951
  br i1 %3291, label %3292, label %3300

3292:                                             ; preds = %3287
  %3293 = ashr exact i64 %3289, 1
  %3294 = icmp ult i64 %3293, %3283
  %3295 = select i1 %3294, i64 %3283, i64 %3293
  %3296 = icmp eq i64 %3295, 0
  br i1 %3296, label %3305, label %3297

3297:                                             ; preds = %3292
  %3298 = icmp ugt i64 %3295, 4611686018427387903
  br i1 %3298, label %3299, label %3300

3299:                                             ; preds = %3297
  tail call void @abort() #11
  unreachable

3300:                                             ; preds = %3297, %3287
  %3301 = phi i64 [ %3295, %3297 ], [ 4611686018427387903, %3287 ]
  %3302 = shl i64 %3301, 2
  %3303 = tail call i8* @_Znwm(i64 %3302) #10
  %3304 = bitcast i8* %3303 to i32*
  br label %3305

3305:                                             ; preds = %3300, %3292
  %3306 = phi i64 [ %3301, %3300 ], [ 0, %3292 ]
  %3307 = phi i8* [ %3303, %3300 ], [ null, %3292 ]
  %3308 = phi i32* [ %3304, %3300 ], [ null, %3292 ]
  %3309 = getelementptr inbounds i32, i32* %3308, i64 %3282
  %3310 = getelementptr inbounds i32, i32* %3308, i64 %3306
  %3311 = ptrtoint i32* %3310 to i64
  store i32 56, i32* %3309, align 4
  %3312 = getelementptr inbounds i32, i32* %3309, i64 1
  %3313 = ptrtoint i32* %3312 to i64
  %3314 = ptrtoint i32* %3308 to i64
  %3315 = icmp sgt i64 %3281, 0
  br i1 %3315, label %3316, label %3318

3316:                                             ; preds = %3305
  %3317 = inttoptr i64 %3280 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3307, i8* align 4 %3317, i64 %3281, i1 false) #9
  br label %3318

3318:                                             ; preds = %3316, %3305
  store i64 %3314, i64* %3279, align 8
  store i64 %3313, i64* %3278, align 8
  store i64 %3311, i64* %3288, align 8
  %3319 = icmp eq i64 %3280, 0
  br i1 %3319, label %3322, label %3320

3320:                                             ; preds = %3318
  %3321 = inttoptr i64 %3280 to i8*
  tail call void @_ZdlPv(i8* %3321) #10
  br label %3322

3322:                                             ; preds = %3320, %3318, %3272, %3263
  %3323 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 57
  %3324 = load i8, i8* %3323, align 1, !range !2
  %3325 = icmp eq i8 %3324, 0
  br i1 %3325, label %3381, label %3326

3326:                                             ; preds = %3322
  %3327 = load i32*, i32** %3, align 8
  %3328 = load i32*, i32** %4, align 8
  %3329 = icmp ult i32* %3327, %3328
  %3330 = ptrtoint i32* %3328 to i64
  br i1 %3329, label %3331, label %3335

3331:                                             ; preds = %3326
  store i32 57, i32* %3327, align 4
  %3332 = getelementptr inbounds i32, i32* %3327, i64 1
  %3333 = ptrtoint i32* %3332 to i64
  %3334 = bitcast i32** %3 to i64*
  store i64 %3333, i64* %3334, align 8
  br label %3381

3335:                                             ; preds = %3326
  %3336 = ptrtoint i32* %3327 to i64
  %3337 = bitcast i32** %3 to i64*
  %3338 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3339 = load i64, i64* %3338, align 8
  %3340 = sub i64 %3336, %3339
  %3341 = ashr exact i64 %3340, 2
  %3342 = add nsw i64 %3341, 1
  %3343 = icmp ugt i64 %3342, 4611686018427387903
  br i1 %3343, label %3344, label %3346

3344:                                             ; preds = %3335
  %3345 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3345) #11
  unreachable

3346:                                             ; preds = %3335
  %3347 = bitcast i32** %4 to i64*
  %3348 = sub i64 %3330, %3339
  %3349 = ashr exact i64 %3348, 2
  %3350 = icmp ult i64 %3349, 2305843009213693951
  br i1 %3350, label %3351, label %3359

3351:                                             ; preds = %3346
  %3352 = ashr exact i64 %3348, 1
  %3353 = icmp ult i64 %3352, %3342
  %3354 = select i1 %3353, i64 %3342, i64 %3352
  %3355 = icmp eq i64 %3354, 0
  br i1 %3355, label %3364, label %3356

3356:                                             ; preds = %3351
  %3357 = icmp ugt i64 %3354, 4611686018427387903
  br i1 %3357, label %3358, label %3359

3358:                                             ; preds = %3356
  tail call void @abort() #11
  unreachable

3359:                                             ; preds = %3356, %3346
  %3360 = phi i64 [ %3354, %3356 ], [ 4611686018427387903, %3346 ]
  %3361 = shl i64 %3360, 2
  %3362 = tail call i8* @_Znwm(i64 %3361) #10
  %3363 = bitcast i8* %3362 to i32*
  br label %3364

3364:                                             ; preds = %3359, %3351
  %3365 = phi i64 [ %3360, %3359 ], [ 0, %3351 ]
  %3366 = phi i8* [ %3362, %3359 ], [ null, %3351 ]
  %3367 = phi i32* [ %3363, %3359 ], [ null, %3351 ]
  %3368 = getelementptr inbounds i32, i32* %3367, i64 %3341
  %3369 = getelementptr inbounds i32, i32* %3367, i64 %3365
  %3370 = ptrtoint i32* %3369 to i64
  store i32 57, i32* %3368, align 4
  %3371 = getelementptr inbounds i32, i32* %3368, i64 1
  %3372 = ptrtoint i32* %3371 to i64
  %3373 = ptrtoint i32* %3367 to i64
  %3374 = icmp sgt i64 %3340, 0
  br i1 %3374, label %3375, label %3377

3375:                                             ; preds = %3364
  %3376 = inttoptr i64 %3339 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3366, i8* align 4 %3376, i64 %3340, i1 false) #9
  br label %3377

3377:                                             ; preds = %3375, %3364
  store i64 %3373, i64* %3338, align 8
  store i64 %3372, i64* %3337, align 8
  store i64 %3370, i64* %3347, align 8
  %3378 = icmp eq i64 %3339, 0
  br i1 %3378, label %3381, label %3379

3379:                                             ; preds = %3377
  %3380 = inttoptr i64 %3339 to i8*
  tail call void @_ZdlPv(i8* %3380) #10
  br label %3381

3381:                                             ; preds = %3379, %3377, %3331, %3322
  %3382 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 58
  %3383 = load i8, i8* %3382, align 2, !range !2
  %3384 = icmp eq i8 %3383, 0
  br i1 %3384, label %3440, label %3385

3385:                                             ; preds = %3381
  %3386 = load i32*, i32** %3, align 8
  %3387 = load i32*, i32** %4, align 8
  %3388 = icmp ult i32* %3386, %3387
  %3389 = ptrtoint i32* %3387 to i64
  br i1 %3388, label %3390, label %3394

3390:                                             ; preds = %3385
  store i32 58, i32* %3386, align 4
  %3391 = getelementptr inbounds i32, i32* %3386, i64 1
  %3392 = ptrtoint i32* %3391 to i64
  %3393 = bitcast i32** %3 to i64*
  store i64 %3392, i64* %3393, align 8
  br label %3440

3394:                                             ; preds = %3385
  %3395 = ptrtoint i32* %3386 to i64
  %3396 = bitcast i32** %3 to i64*
  %3397 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3398 = load i64, i64* %3397, align 8
  %3399 = sub i64 %3395, %3398
  %3400 = ashr exact i64 %3399, 2
  %3401 = add nsw i64 %3400, 1
  %3402 = icmp ugt i64 %3401, 4611686018427387903
  br i1 %3402, label %3403, label %3405

3403:                                             ; preds = %3394
  %3404 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3404) #11
  unreachable

3405:                                             ; preds = %3394
  %3406 = bitcast i32** %4 to i64*
  %3407 = sub i64 %3389, %3398
  %3408 = ashr exact i64 %3407, 2
  %3409 = icmp ult i64 %3408, 2305843009213693951
  br i1 %3409, label %3410, label %3418

3410:                                             ; preds = %3405
  %3411 = ashr exact i64 %3407, 1
  %3412 = icmp ult i64 %3411, %3401
  %3413 = select i1 %3412, i64 %3401, i64 %3411
  %3414 = icmp eq i64 %3413, 0
  br i1 %3414, label %3423, label %3415

3415:                                             ; preds = %3410
  %3416 = icmp ugt i64 %3413, 4611686018427387903
  br i1 %3416, label %3417, label %3418

3417:                                             ; preds = %3415
  tail call void @abort() #11
  unreachable

3418:                                             ; preds = %3415, %3405
  %3419 = phi i64 [ %3413, %3415 ], [ 4611686018427387903, %3405 ]
  %3420 = shl i64 %3419, 2
  %3421 = tail call i8* @_Znwm(i64 %3420) #10
  %3422 = bitcast i8* %3421 to i32*
  br label %3423

3423:                                             ; preds = %3418, %3410
  %3424 = phi i64 [ %3419, %3418 ], [ 0, %3410 ]
  %3425 = phi i8* [ %3421, %3418 ], [ null, %3410 ]
  %3426 = phi i32* [ %3422, %3418 ], [ null, %3410 ]
  %3427 = getelementptr inbounds i32, i32* %3426, i64 %3400
  %3428 = getelementptr inbounds i32, i32* %3426, i64 %3424
  %3429 = ptrtoint i32* %3428 to i64
  store i32 58, i32* %3427, align 4
  %3430 = getelementptr inbounds i32, i32* %3427, i64 1
  %3431 = ptrtoint i32* %3430 to i64
  %3432 = ptrtoint i32* %3426 to i64
  %3433 = icmp sgt i64 %3399, 0
  br i1 %3433, label %3434, label %3436

3434:                                             ; preds = %3423
  %3435 = inttoptr i64 %3398 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3425, i8* align 4 %3435, i64 %3399, i1 false) #9
  br label %3436

3436:                                             ; preds = %3434, %3423
  store i64 %3432, i64* %3397, align 8
  store i64 %3431, i64* %3396, align 8
  store i64 %3429, i64* %3406, align 8
  %3437 = icmp eq i64 %3398, 0
  br i1 %3437, label %3440, label %3438

3438:                                             ; preds = %3436
  %3439 = inttoptr i64 %3398 to i8*
  tail call void @_ZdlPv(i8* %3439) #10
  br label %3440

3440:                                             ; preds = %3438, %3436, %3390, %3381
  %3441 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 59
  %3442 = load i8, i8* %3441, align 1, !range !2
  %3443 = icmp eq i8 %3442, 0
  br i1 %3443, label %3499, label %3444

3444:                                             ; preds = %3440
  %3445 = load i32*, i32** %3, align 8
  %3446 = load i32*, i32** %4, align 8
  %3447 = icmp ult i32* %3445, %3446
  %3448 = ptrtoint i32* %3446 to i64
  br i1 %3447, label %3449, label %3453

3449:                                             ; preds = %3444
  store i32 59, i32* %3445, align 4
  %3450 = getelementptr inbounds i32, i32* %3445, i64 1
  %3451 = ptrtoint i32* %3450 to i64
  %3452 = bitcast i32** %3 to i64*
  store i64 %3451, i64* %3452, align 8
  br label %3499

3453:                                             ; preds = %3444
  %3454 = ptrtoint i32* %3445 to i64
  %3455 = bitcast i32** %3 to i64*
  %3456 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3457 = load i64, i64* %3456, align 8
  %3458 = sub i64 %3454, %3457
  %3459 = ashr exact i64 %3458, 2
  %3460 = add nsw i64 %3459, 1
  %3461 = icmp ugt i64 %3460, 4611686018427387903
  br i1 %3461, label %3462, label %3464

3462:                                             ; preds = %3453
  %3463 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3463) #11
  unreachable

3464:                                             ; preds = %3453
  %3465 = bitcast i32** %4 to i64*
  %3466 = sub i64 %3448, %3457
  %3467 = ashr exact i64 %3466, 2
  %3468 = icmp ult i64 %3467, 2305843009213693951
  br i1 %3468, label %3469, label %3477

3469:                                             ; preds = %3464
  %3470 = ashr exact i64 %3466, 1
  %3471 = icmp ult i64 %3470, %3460
  %3472 = select i1 %3471, i64 %3460, i64 %3470
  %3473 = icmp eq i64 %3472, 0
  br i1 %3473, label %3482, label %3474

3474:                                             ; preds = %3469
  %3475 = icmp ugt i64 %3472, 4611686018427387903
  br i1 %3475, label %3476, label %3477

3476:                                             ; preds = %3474
  tail call void @abort() #11
  unreachable

3477:                                             ; preds = %3474, %3464
  %3478 = phi i64 [ %3472, %3474 ], [ 4611686018427387903, %3464 ]
  %3479 = shl i64 %3478, 2
  %3480 = tail call i8* @_Znwm(i64 %3479) #10
  %3481 = bitcast i8* %3480 to i32*
  br label %3482

3482:                                             ; preds = %3477, %3469
  %3483 = phi i64 [ %3478, %3477 ], [ 0, %3469 ]
  %3484 = phi i8* [ %3480, %3477 ], [ null, %3469 ]
  %3485 = phi i32* [ %3481, %3477 ], [ null, %3469 ]
  %3486 = getelementptr inbounds i32, i32* %3485, i64 %3459
  %3487 = getelementptr inbounds i32, i32* %3485, i64 %3483
  %3488 = ptrtoint i32* %3487 to i64
  store i32 59, i32* %3486, align 4
  %3489 = getelementptr inbounds i32, i32* %3486, i64 1
  %3490 = ptrtoint i32* %3489 to i64
  %3491 = ptrtoint i32* %3485 to i64
  %3492 = icmp sgt i64 %3458, 0
  br i1 %3492, label %3493, label %3495

3493:                                             ; preds = %3482
  %3494 = inttoptr i64 %3457 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3484, i8* align 4 %3494, i64 %3458, i1 false) #9
  br label %3495

3495:                                             ; preds = %3493, %3482
  store i64 %3491, i64* %3456, align 8
  store i64 %3490, i64* %3455, align 8
  store i64 %3488, i64* %3465, align 8
  %3496 = icmp eq i64 %3457, 0
  br i1 %3496, label %3499, label %3497

3497:                                             ; preds = %3495
  %3498 = inttoptr i64 %3457 to i8*
  tail call void @_ZdlPv(i8* %3498) #10
  br label %3499

3499:                                             ; preds = %3497, %3495, %3449, %3440
  %3500 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 60
  %3501 = load i8, i8* %3500, align 4, !range !2
  %3502 = icmp eq i8 %3501, 0
  br i1 %3502, label %3558, label %3503

3503:                                             ; preds = %3499
  %3504 = load i32*, i32** %3, align 8
  %3505 = load i32*, i32** %4, align 8
  %3506 = icmp ult i32* %3504, %3505
  %3507 = ptrtoint i32* %3505 to i64
  br i1 %3506, label %3508, label %3512

3508:                                             ; preds = %3503
  store i32 60, i32* %3504, align 4
  %3509 = getelementptr inbounds i32, i32* %3504, i64 1
  %3510 = ptrtoint i32* %3509 to i64
  %3511 = bitcast i32** %3 to i64*
  store i64 %3510, i64* %3511, align 8
  br label %3558

3512:                                             ; preds = %3503
  %3513 = ptrtoint i32* %3504 to i64
  %3514 = bitcast i32** %3 to i64*
  %3515 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3516 = load i64, i64* %3515, align 8
  %3517 = sub i64 %3513, %3516
  %3518 = ashr exact i64 %3517, 2
  %3519 = add nsw i64 %3518, 1
  %3520 = icmp ugt i64 %3519, 4611686018427387903
  br i1 %3520, label %3521, label %3523

3521:                                             ; preds = %3512
  %3522 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3522) #11
  unreachable

3523:                                             ; preds = %3512
  %3524 = bitcast i32** %4 to i64*
  %3525 = sub i64 %3507, %3516
  %3526 = ashr exact i64 %3525, 2
  %3527 = icmp ult i64 %3526, 2305843009213693951
  br i1 %3527, label %3528, label %3536

3528:                                             ; preds = %3523
  %3529 = ashr exact i64 %3525, 1
  %3530 = icmp ult i64 %3529, %3519
  %3531 = select i1 %3530, i64 %3519, i64 %3529
  %3532 = icmp eq i64 %3531, 0
  br i1 %3532, label %3541, label %3533

3533:                                             ; preds = %3528
  %3534 = icmp ugt i64 %3531, 4611686018427387903
  br i1 %3534, label %3535, label %3536

3535:                                             ; preds = %3533
  tail call void @abort() #11
  unreachable

3536:                                             ; preds = %3533, %3523
  %3537 = phi i64 [ %3531, %3533 ], [ 4611686018427387903, %3523 ]
  %3538 = shl i64 %3537, 2
  %3539 = tail call i8* @_Znwm(i64 %3538) #10
  %3540 = bitcast i8* %3539 to i32*
  br label %3541

3541:                                             ; preds = %3536, %3528
  %3542 = phi i64 [ %3537, %3536 ], [ 0, %3528 ]
  %3543 = phi i8* [ %3539, %3536 ], [ null, %3528 ]
  %3544 = phi i32* [ %3540, %3536 ], [ null, %3528 ]
  %3545 = getelementptr inbounds i32, i32* %3544, i64 %3518
  %3546 = getelementptr inbounds i32, i32* %3544, i64 %3542
  %3547 = ptrtoint i32* %3546 to i64
  store i32 60, i32* %3545, align 4
  %3548 = getelementptr inbounds i32, i32* %3545, i64 1
  %3549 = ptrtoint i32* %3548 to i64
  %3550 = ptrtoint i32* %3544 to i64
  %3551 = icmp sgt i64 %3517, 0
  br i1 %3551, label %3552, label %3554

3552:                                             ; preds = %3541
  %3553 = inttoptr i64 %3516 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3543, i8* align 4 %3553, i64 %3517, i1 false) #9
  br label %3554

3554:                                             ; preds = %3552, %3541
  store i64 %3550, i64* %3515, align 8
  store i64 %3549, i64* %3514, align 8
  store i64 %3547, i64* %3524, align 8
  %3555 = icmp eq i64 %3516, 0
  br i1 %3555, label %3558, label %3556

3556:                                             ; preds = %3554
  %3557 = inttoptr i64 %3516 to i8*
  tail call void @_ZdlPv(i8* %3557) #10
  br label %3558

3558:                                             ; preds = %3556, %3554, %3508, %3499
  %3559 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 61
  %3560 = load i8, i8* %3559, align 1, !range !2
  %3561 = icmp eq i8 %3560, 0
  br i1 %3561, label %3617, label %3562

3562:                                             ; preds = %3558
  %3563 = load i32*, i32** %3, align 8
  %3564 = load i32*, i32** %4, align 8
  %3565 = icmp ult i32* %3563, %3564
  %3566 = ptrtoint i32* %3564 to i64
  br i1 %3565, label %3567, label %3571

3567:                                             ; preds = %3562
  store i32 61, i32* %3563, align 4
  %3568 = getelementptr inbounds i32, i32* %3563, i64 1
  %3569 = ptrtoint i32* %3568 to i64
  %3570 = bitcast i32** %3 to i64*
  store i64 %3569, i64* %3570, align 8
  br label %3617

3571:                                             ; preds = %3562
  %3572 = ptrtoint i32* %3563 to i64
  %3573 = bitcast i32** %3 to i64*
  %3574 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3575 = load i64, i64* %3574, align 8
  %3576 = sub i64 %3572, %3575
  %3577 = ashr exact i64 %3576, 2
  %3578 = add nsw i64 %3577, 1
  %3579 = icmp ugt i64 %3578, 4611686018427387903
  br i1 %3579, label %3580, label %3582

3580:                                             ; preds = %3571
  %3581 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3581) #11
  unreachable

3582:                                             ; preds = %3571
  %3583 = bitcast i32** %4 to i64*
  %3584 = sub i64 %3566, %3575
  %3585 = ashr exact i64 %3584, 2
  %3586 = icmp ult i64 %3585, 2305843009213693951
  br i1 %3586, label %3587, label %3595

3587:                                             ; preds = %3582
  %3588 = ashr exact i64 %3584, 1
  %3589 = icmp ult i64 %3588, %3578
  %3590 = select i1 %3589, i64 %3578, i64 %3588
  %3591 = icmp eq i64 %3590, 0
  br i1 %3591, label %3600, label %3592

3592:                                             ; preds = %3587
  %3593 = icmp ugt i64 %3590, 4611686018427387903
  br i1 %3593, label %3594, label %3595

3594:                                             ; preds = %3592
  tail call void @abort() #11
  unreachable

3595:                                             ; preds = %3592, %3582
  %3596 = phi i64 [ %3590, %3592 ], [ 4611686018427387903, %3582 ]
  %3597 = shl i64 %3596, 2
  %3598 = tail call i8* @_Znwm(i64 %3597) #10
  %3599 = bitcast i8* %3598 to i32*
  br label %3600

3600:                                             ; preds = %3595, %3587
  %3601 = phi i64 [ %3596, %3595 ], [ 0, %3587 ]
  %3602 = phi i8* [ %3598, %3595 ], [ null, %3587 ]
  %3603 = phi i32* [ %3599, %3595 ], [ null, %3587 ]
  %3604 = getelementptr inbounds i32, i32* %3603, i64 %3577
  %3605 = getelementptr inbounds i32, i32* %3603, i64 %3601
  %3606 = ptrtoint i32* %3605 to i64
  store i32 61, i32* %3604, align 4
  %3607 = getelementptr inbounds i32, i32* %3604, i64 1
  %3608 = ptrtoint i32* %3607 to i64
  %3609 = ptrtoint i32* %3603 to i64
  %3610 = icmp sgt i64 %3576, 0
  br i1 %3610, label %3611, label %3613

3611:                                             ; preds = %3600
  %3612 = inttoptr i64 %3575 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3602, i8* align 4 %3612, i64 %3576, i1 false) #9
  br label %3613

3613:                                             ; preds = %3611, %3600
  store i64 %3609, i64* %3574, align 8
  store i64 %3608, i64* %3573, align 8
  store i64 %3606, i64* %3583, align 8
  %3614 = icmp eq i64 %3575, 0
  br i1 %3614, label %3617, label %3615

3615:                                             ; preds = %3613
  %3616 = inttoptr i64 %3575 to i8*
  tail call void @_ZdlPv(i8* %3616) #10
  br label %3617

3617:                                             ; preds = %3615, %3613, %3567, %3558
  %3618 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 62
  %3619 = load i8, i8* %3618, align 2, !range !2
  %3620 = icmp eq i8 %3619, 0
  br i1 %3620, label %3676, label %3621

3621:                                             ; preds = %3617
  %3622 = load i32*, i32** %3, align 8
  %3623 = load i32*, i32** %4, align 8
  %3624 = icmp ult i32* %3622, %3623
  %3625 = ptrtoint i32* %3623 to i64
  br i1 %3624, label %3626, label %3630

3626:                                             ; preds = %3621
  store i32 62, i32* %3622, align 4
  %3627 = getelementptr inbounds i32, i32* %3622, i64 1
  %3628 = ptrtoint i32* %3627 to i64
  %3629 = bitcast i32** %3 to i64*
  store i64 %3628, i64* %3629, align 8
  br label %3676

3630:                                             ; preds = %3621
  %3631 = ptrtoint i32* %3622 to i64
  %3632 = bitcast i32** %3 to i64*
  %3633 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3634 = load i64, i64* %3633, align 8
  %3635 = sub i64 %3631, %3634
  %3636 = ashr exact i64 %3635, 2
  %3637 = add nsw i64 %3636, 1
  %3638 = icmp ugt i64 %3637, 4611686018427387903
  br i1 %3638, label %3639, label %3641

3639:                                             ; preds = %3630
  %3640 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3640) #11
  unreachable

3641:                                             ; preds = %3630
  %3642 = bitcast i32** %4 to i64*
  %3643 = sub i64 %3625, %3634
  %3644 = ashr exact i64 %3643, 2
  %3645 = icmp ult i64 %3644, 2305843009213693951
  br i1 %3645, label %3646, label %3654

3646:                                             ; preds = %3641
  %3647 = ashr exact i64 %3643, 1
  %3648 = icmp ult i64 %3647, %3637
  %3649 = select i1 %3648, i64 %3637, i64 %3647
  %3650 = icmp eq i64 %3649, 0
  br i1 %3650, label %3659, label %3651

3651:                                             ; preds = %3646
  %3652 = icmp ugt i64 %3649, 4611686018427387903
  br i1 %3652, label %3653, label %3654

3653:                                             ; preds = %3651
  tail call void @abort() #11
  unreachable

3654:                                             ; preds = %3651, %3641
  %3655 = phi i64 [ %3649, %3651 ], [ 4611686018427387903, %3641 ]
  %3656 = shl i64 %3655, 2
  %3657 = tail call i8* @_Znwm(i64 %3656) #10
  %3658 = bitcast i8* %3657 to i32*
  br label %3659

3659:                                             ; preds = %3654, %3646
  %3660 = phi i64 [ %3655, %3654 ], [ 0, %3646 ]
  %3661 = phi i8* [ %3657, %3654 ], [ null, %3646 ]
  %3662 = phi i32* [ %3658, %3654 ], [ null, %3646 ]
  %3663 = getelementptr inbounds i32, i32* %3662, i64 %3636
  %3664 = getelementptr inbounds i32, i32* %3662, i64 %3660
  %3665 = ptrtoint i32* %3664 to i64
  store i32 62, i32* %3663, align 4
  %3666 = getelementptr inbounds i32, i32* %3663, i64 1
  %3667 = ptrtoint i32* %3666 to i64
  %3668 = ptrtoint i32* %3662 to i64
  %3669 = icmp sgt i64 %3635, 0
  br i1 %3669, label %3670, label %3672

3670:                                             ; preds = %3659
  %3671 = inttoptr i64 %3634 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3661, i8* align 4 %3671, i64 %3635, i1 false) #9
  br label %3672

3672:                                             ; preds = %3670, %3659
  store i64 %3668, i64* %3633, align 8
  store i64 %3667, i64* %3632, align 8
  store i64 %3665, i64* %3642, align 8
  %3673 = icmp eq i64 %3634, 0
  br i1 %3673, label %3676, label %3674

3674:                                             ; preds = %3672
  %3675 = inttoptr i64 %3634 to i8*
  tail call void @_ZdlPv(i8* %3675) #10
  br label %3676

3676:                                             ; preds = %3674, %3672, %3626, %3617
  %3677 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 63
  %3678 = load i8, i8* %3677, align 1, !range !2
  %3679 = icmp eq i8 %3678, 0
  br i1 %3679, label %3735, label %3680

3680:                                             ; preds = %3676
  %3681 = load i32*, i32** %3, align 8
  %3682 = load i32*, i32** %4, align 8
  %3683 = icmp ult i32* %3681, %3682
  %3684 = ptrtoint i32* %3682 to i64
  br i1 %3683, label %3685, label %3689

3685:                                             ; preds = %3680
  store i32 63, i32* %3681, align 4
  %3686 = getelementptr inbounds i32, i32* %3681, i64 1
  %3687 = ptrtoint i32* %3686 to i64
  %3688 = bitcast i32** %3 to i64*
  store i64 %3687, i64* %3688, align 8
  br label %3735

3689:                                             ; preds = %3680
  %3690 = ptrtoint i32* %3681 to i64
  %3691 = bitcast i32** %3 to i64*
  %3692 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3693 = load i64, i64* %3692, align 8
  %3694 = sub i64 %3690, %3693
  %3695 = ashr exact i64 %3694, 2
  %3696 = add nsw i64 %3695, 1
  %3697 = icmp ugt i64 %3696, 4611686018427387903
  br i1 %3697, label %3698, label %3700

3698:                                             ; preds = %3689
  %3699 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3699) #11
  unreachable

3700:                                             ; preds = %3689
  %3701 = bitcast i32** %4 to i64*
  %3702 = sub i64 %3684, %3693
  %3703 = ashr exact i64 %3702, 2
  %3704 = icmp ult i64 %3703, 2305843009213693951
  br i1 %3704, label %3705, label %3713

3705:                                             ; preds = %3700
  %3706 = ashr exact i64 %3702, 1
  %3707 = icmp ult i64 %3706, %3696
  %3708 = select i1 %3707, i64 %3696, i64 %3706
  %3709 = icmp eq i64 %3708, 0
  br i1 %3709, label %3718, label %3710

3710:                                             ; preds = %3705
  %3711 = icmp ugt i64 %3708, 4611686018427387903
  br i1 %3711, label %3712, label %3713

3712:                                             ; preds = %3710
  tail call void @abort() #11
  unreachable

3713:                                             ; preds = %3710, %3700
  %3714 = phi i64 [ %3708, %3710 ], [ 4611686018427387903, %3700 ]
  %3715 = shl i64 %3714, 2
  %3716 = tail call i8* @_Znwm(i64 %3715) #10
  %3717 = bitcast i8* %3716 to i32*
  br label %3718

3718:                                             ; preds = %3713, %3705
  %3719 = phi i64 [ %3714, %3713 ], [ 0, %3705 ]
  %3720 = phi i8* [ %3716, %3713 ], [ null, %3705 ]
  %3721 = phi i32* [ %3717, %3713 ], [ null, %3705 ]
  %3722 = getelementptr inbounds i32, i32* %3721, i64 %3695
  %3723 = getelementptr inbounds i32, i32* %3721, i64 %3719
  %3724 = ptrtoint i32* %3723 to i64
  store i32 63, i32* %3722, align 4
  %3725 = getelementptr inbounds i32, i32* %3722, i64 1
  %3726 = ptrtoint i32* %3725 to i64
  %3727 = ptrtoint i32* %3721 to i64
  %3728 = icmp sgt i64 %3694, 0
  br i1 %3728, label %3729, label %3731

3729:                                             ; preds = %3718
  %3730 = inttoptr i64 %3693 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3720, i8* align 4 %3730, i64 %3694, i1 false) #9
  br label %3731

3731:                                             ; preds = %3729, %3718
  store i64 %3727, i64* %3692, align 8
  store i64 %3726, i64* %3691, align 8
  store i64 %3724, i64* %3701, align 8
  %3732 = icmp eq i64 %3693, 0
  br i1 %3732, label %3735, label %3733

3733:                                             ; preds = %3731
  %3734 = inttoptr i64 %3693 to i8*
  tail call void @_ZdlPv(i8* %3734) #10
  br label %3735

3735:                                             ; preds = %3733, %3731, %3685, %3676
  %3736 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 64
  %3737 = load i8, i8* %3736, align 4, !range !2
  %3738 = icmp eq i8 %3737, 0
  br i1 %3738, label %3794, label %3739

3739:                                             ; preds = %3735
  %3740 = load i32*, i32** %3, align 8
  %3741 = load i32*, i32** %4, align 8
  %3742 = icmp ult i32* %3740, %3741
  %3743 = ptrtoint i32* %3741 to i64
  br i1 %3742, label %3744, label %3748

3744:                                             ; preds = %3739
  store i32 64, i32* %3740, align 4
  %3745 = getelementptr inbounds i32, i32* %3740, i64 1
  %3746 = ptrtoint i32* %3745 to i64
  %3747 = bitcast i32** %3 to i64*
  store i64 %3746, i64* %3747, align 8
  br label %3794

3748:                                             ; preds = %3739
  %3749 = ptrtoint i32* %3740 to i64
  %3750 = bitcast i32** %3 to i64*
  %3751 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3752 = load i64, i64* %3751, align 8
  %3753 = sub i64 %3749, %3752
  %3754 = ashr exact i64 %3753, 2
  %3755 = add nsw i64 %3754, 1
  %3756 = icmp ugt i64 %3755, 4611686018427387903
  br i1 %3756, label %3757, label %3759

3757:                                             ; preds = %3748
  %3758 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3758) #11
  unreachable

3759:                                             ; preds = %3748
  %3760 = bitcast i32** %4 to i64*
  %3761 = sub i64 %3743, %3752
  %3762 = ashr exact i64 %3761, 2
  %3763 = icmp ult i64 %3762, 2305843009213693951
  br i1 %3763, label %3764, label %3772

3764:                                             ; preds = %3759
  %3765 = ashr exact i64 %3761, 1
  %3766 = icmp ult i64 %3765, %3755
  %3767 = select i1 %3766, i64 %3755, i64 %3765
  %3768 = icmp eq i64 %3767, 0
  br i1 %3768, label %3777, label %3769

3769:                                             ; preds = %3764
  %3770 = icmp ugt i64 %3767, 4611686018427387903
  br i1 %3770, label %3771, label %3772

3771:                                             ; preds = %3769
  tail call void @abort() #11
  unreachable

3772:                                             ; preds = %3769, %3759
  %3773 = phi i64 [ %3767, %3769 ], [ 4611686018427387903, %3759 ]
  %3774 = shl i64 %3773, 2
  %3775 = tail call i8* @_Znwm(i64 %3774) #10
  %3776 = bitcast i8* %3775 to i32*
  br label %3777

3777:                                             ; preds = %3772, %3764
  %3778 = phi i64 [ %3773, %3772 ], [ 0, %3764 ]
  %3779 = phi i8* [ %3775, %3772 ], [ null, %3764 ]
  %3780 = phi i32* [ %3776, %3772 ], [ null, %3764 ]
  %3781 = getelementptr inbounds i32, i32* %3780, i64 %3754
  %3782 = getelementptr inbounds i32, i32* %3780, i64 %3778
  %3783 = ptrtoint i32* %3782 to i64
  store i32 64, i32* %3781, align 4
  %3784 = getelementptr inbounds i32, i32* %3781, i64 1
  %3785 = ptrtoint i32* %3784 to i64
  %3786 = ptrtoint i32* %3780 to i64
  %3787 = icmp sgt i64 %3753, 0
  br i1 %3787, label %3788, label %3790

3788:                                             ; preds = %3777
  %3789 = inttoptr i64 %3752 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3779, i8* align 4 %3789, i64 %3753, i1 false) #9
  br label %3790

3790:                                             ; preds = %3788, %3777
  store i64 %3786, i64* %3751, align 8
  store i64 %3785, i64* %3750, align 8
  store i64 %3783, i64* %3760, align 8
  %3791 = icmp eq i64 %3752, 0
  br i1 %3791, label %3794, label %3792

3792:                                             ; preds = %3790
  %3793 = inttoptr i64 %3752 to i8*
  tail call void @_ZdlPv(i8* %3793) #10
  br label %3794

3794:                                             ; preds = %3792, %3790, %3744, %3735
  %3795 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 65
  %3796 = load i8, i8* %3795, align 1, !range !2
  %3797 = icmp eq i8 %3796, 0
  br i1 %3797, label %3853, label %3798

3798:                                             ; preds = %3794
  %3799 = load i32*, i32** %3, align 8
  %3800 = load i32*, i32** %4, align 8
  %3801 = icmp ult i32* %3799, %3800
  %3802 = ptrtoint i32* %3800 to i64
  br i1 %3801, label %3803, label %3807

3803:                                             ; preds = %3798
  store i32 65, i32* %3799, align 4
  %3804 = getelementptr inbounds i32, i32* %3799, i64 1
  %3805 = ptrtoint i32* %3804 to i64
  %3806 = bitcast i32** %3 to i64*
  store i64 %3805, i64* %3806, align 8
  br label %3853

3807:                                             ; preds = %3798
  %3808 = ptrtoint i32* %3799 to i64
  %3809 = bitcast i32** %3 to i64*
  %3810 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3811 = load i64, i64* %3810, align 8
  %3812 = sub i64 %3808, %3811
  %3813 = ashr exact i64 %3812, 2
  %3814 = add nsw i64 %3813, 1
  %3815 = icmp ugt i64 %3814, 4611686018427387903
  br i1 %3815, label %3816, label %3818

3816:                                             ; preds = %3807
  %3817 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3817) #11
  unreachable

3818:                                             ; preds = %3807
  %3819 = bitcast i32** %4 to i64*
  %3820 = sub i64 %3802, %3811
  %3821 = ashr exact i64 %3820, 2
  %3822 = icmp ult i64 %3821, 2305843009213693951
  br i1 %3822, label %3823, label %3831

3823:                                             ; preds = %3818
  %3824 = ashr exact i64 %3820, 1
  %3825 = icmp ult i64 %3824, %3814
  %3826 = select i1 %3825, i64 %3814, i64 %3824
  %3827 = icmp eq i64 %3826, 0
  br i1 %3827, label %3836, label %3828

3828:                                             ; preds = %3823
  %3829 = icmp ugt i64 %3826, 4611686018427387903
  br i1 %3829, label %3830, label %3831

3830:                                             ; preds = %3828
  tail call void @abort() #11
  unreachable

3831:                                             ; preds = %3828, %3818
  %3832 = phi i64 [ %3826, %3828 ], [ 4611686018427387903, %3818 ]
  %3833 = shl i64 %3832, 2
  %3834 = tail call i8* @_Znwm(i64 %3833) #10
  %3835 = bitcast i8* %3834 to i32*
  br label %3836

3836:                                             ; preds = %3831, %3823
  %3837 = phi i64 [ %3832, %3831 ], [ 0, %3823 ]
  %3838 = phi i8* [ %3834, %3831 ], [ null, %3823 ]
  %3839 = phi i32* [ %3835, %3831 ], [ null, %3823 ]
  %3840 = getelementptr inbounds i32, i32* %3839, i64 %3813
  %3841 = getelementptr inbounds i32, i32* %3839, i64 %3837
  %3842 = ptrtoint i32* %3841 to i64
  store i32 65, i32* %3840, align 4
  %3843 = getelementptr inbounds i32, i32* %3840, i64 1
  %3844 = ptrtoint i32* %3843 to i64
  %3845 = ptrtoint i32* %3839 to i64
  %3846 = icmp sgt i64 %3812, 0
  br i1 %3846, label %3847, label %3849

3847:                                             ; preds = %3836
  %3848 = inttoptr i64 %3811 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3838, i8* align 4 %3848, i64 %3812, i1 false) #9
  br label %3849

3849:                                             ; preds = %3847, %3836
  store i64 %3845, i64* %3810, align 8
  store i64 %3844, i64* %3809, align 8
  store i64 %3842, i64* %3819, align 8
  %3850 = icmp eq i64 %3811, 0
  br i1 %3850, label %3853, label %3851

3851:                                             ; preds = %3849
  %3852 = inttoptr i64 %3811 to i8*
  tail call void @_ZdlPv(i8* %3852) #10
  br label %3853

3853:                                             ; preds = %3851, %3849, %3803, %3794
  %3854 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 66
  %3855 = load i8, i8* %3854, align 2, !range !2
  %3856 = icmp eq i8 %3855, 0
  br i1 %3856, label %3912, label %3857

3857:                                             ; preds = %3853
  %3858 = load i32*, i32** %3, align 8
  %3859 = load i32*, i32** %4, align 8
  %3860 = icmp ult i32* %3858, %3859
  %3861 = ptrtoint i32* %3859 to i64
  br i1 %3860, label %3862, label %3866

3862:                                             ; preds = %3857
  store i32 66, i32* %3858, align 4
  %3863 = getelementptr inbounds i32, i32* %3858, i64 1
  %3864 = ptrtoint i32* %3863 to i64
  %3865 = bitcast i32** %3 to i64*
  store i64 %3864, i64* %3865, align 8
  br label %3912

3866:                                             ; preds = %3857
  %3867 = ptrtoint i32* %3858 to i64
  %3868 = bitcast i32** %3 to i64*
  %3869 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3870 = load i64, i64* %3869, align 8
  %3871 = sub i64 %3867, %3870
  %3872 = ashr exact i64 %3871, 2
  %3873 = add nsw i64 %3872, 1
  %3874 = icmp ugt i64 %3873, 4611686018427387903
  br i1 %3874, label %3875, label %3877

3875:                                             ; preds = %3866
  %3876 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3876) #11
  unreachable

3877:                                             ; preds = %3866
  %3878 = bitcast i32** %4 to i64*
  %3879 = sub i64 %3861, %3870
  %3880 = ashr exact i64 %3879, 2
  %3881 = icmp ult i64 %3880, 2305843009213693951
  br i1 %3881, label %3882, label %3890

3882:                                             ; preds = %3877
  %3883 = ashr exact i64 %3879, 1
  %3884 = icmp ult i64 %3883, %3873
  %3885 = select i1 %3884, i64 %3873, i64 %3883
  %3886 = icmp eq i64 %3885, 0
  br i1 %3886, label %3895, label %3887

3887:                                             ; preds = %3882
  %3888 = icmp ugt i64 %3885, 4611686018427387903
  br i1 %3888, label %3889, label %3890

3889:                                             ; preds = %3887
  tail call void @abort() #11
  unreachable

3890:                                             ; preds = %3887, %3877
  %3891 = phi i64 [ %3885, %3887 ], [ 4611686018427387903, %3877 ]
  %3892 = shl i64 %3891, 2
  %3893 = tail call i8* @_Znwm(i64 %3892) #10
  %3894 = bitcast i8* %3893 to i32*
  br label %3895

3895:                                             ; preds = %3890, %3882
  %3896 = phi i64 [ %3891, %3890 ], [ 0, %3882 ]
  %3897 = phi i8* [ %3893, %3890 ], [ null, %3882 ]
  %3898 = phi i32* [ %3894, %3890 ], [ null, %3882 ]
  %3899 = getelementptr inbounds i32, i32* %3898, i64 %3872
  %3900 = getelementptr inbounds i32, i32* %3898, i64 %3896
  %3901 = ptrtoint i32* %3900 to i64
  store i32 66, i32* %3899, align 4
  %3902 = getelementptr inbounds i32, i32* %3899, i64 1
  %3903 = ptrtoint i32* %3902 to i64
  %3904 = ptrtoint i32* %3898 to i64
  %3905 = icmp sgt i64 %3871, 0
  br i1 %3905, label %3906, label %3908

3906:                                             ; preds = %3895
  %3907 = inttoptr i64 %3870 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3897, i8* align 4 %3907, i64 %3871, i1 false) #9
  br label %3908

3908:                                             ; preds = %3906, %3895
  store i64 %3904, i64* %3869, align 8
  store i64 %3903, i64* %3868, align 8
  store i64 %3901, i64* %3878, align 8
  %3909 = icmp eq i64 %3870, 0
  br i1 %3909, label %3912, label %3910

3910:                                             ; preds = %3908
  %3911 = inttoptr i64 %3870 to i8*
  tail call void @_ZdlPv(i8* %3911) #10
  br label %3912

3912:                                             ; preds = %3910, %3908, %3862, %3853
  %3913 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 67
  %3914 = load i8, i8* %3913, align 1, !range !2
  %3915 = icmp eq i8 %3914, 0
  br i1 %3915, label %3971, label %3916

3916:                                             ; preds = %3912
  %3917 = load i32*, i32** %3, align 8
  %3918 = load i32*, i32** %4, align 8
  %3919 = icmp ult i32* %3917, %3918
  %3920 = ptrtoint i32* %3918 to i64
  br i1 %3919, label %3921, label %3925

3921:                                             ; preds = %3916
  store i32 67, i32* %3917, align 4
  %3922 = getelementptr inbounds i32, i32* %3917, i64 1
  %3923 = ptrtoint i32* %3922 to i64
  %3924 = bitcast i32** %3 to i64*
  store i64 %3923, i64* %3924, align 8
  br label %3971

3925:                                             ; preds = %3916
  %3926 = ptrtoint i32* %3917 to i64
  %3927 = bitcast i32** %3 to i64*
  %3928 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3929 = load i64, i64* %3928, align 8
  %3930 = sub i64 %3926, %3929
  %3931 = ashr exact i64 %3930, 2
  %3932 = add nsw i64 %3931, 1
  %3933 = icmp ugt i64 %3932, 4611686018427387903
  br i1 %3933, label %3934, label %3936

3934:                                             ; preds = %3925
  %3935 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3935) #11
  unreachable

3936:                                             ; preds = %3925
  %3937 = bitcast i32** %4 to i64*
  %3938 = sub i64 %3920, %3929
  %3939 = ashr exact i64 %3938, 2
  %3940 = icmp ult i64 %3939, 2305843009213693951
  br i1 %3940, label %3941, label %3949

3941:                                             ; preds = %3936
  %3942 = ashr exact i64 %3938, 1
  %3943 = icmp ult i64 %3942, %3932
  %3944 = select i1 %3943, i64 %3932, i64 %3942
  %3945 = icmp eq i64 %3944, 0
  br i1 %3945, label %3954, label %3946

3946:                                             ; preds = %3941
  %3947 = icmp ugt i64 %3944, 4611686018427387903
  br i1 %3947, label %3948, label %3949

3948:                                             ; preds = %3946
  tail call void @abort() #11
  unreachable

3949:                                             ; preds = %3946, %3936
  %3950 = phi i64 [ %3944, %3946 ], [ 4611686018427387903, %3936 ]
  %3951 = shl i64 %3950, 2
  %3952 = tail call i8* @_Znwm(i64 %3951) #10
  %3953 = bitcast i8* %3952 to i32*
  br label %3954

3954:                                             ; preds = %3949, %3941
  %3955 = phi i64 [ %3950, %3949 ], [ 0, %3941 ]
  %3956 = phi i8* [ %3952, %3949 ], [ null, %3941 ]
  %3957 = phi i32* [ %3953, %3949 ], [ null, %3941 ]
  %3958 = getelementptr inbounds i32, i32* %3957, i64 %3931
  %3959 = getelementptr inbounds i32, i32* %3957, i64 %3955
  %3960 = ptrtoint i32* %3959 to i64
  store i32 67, i32* %3958, align 4
  %3961 = getelementptr inbounds i32, i32* %3958, i64 1
  %3962 = ptrtoint i32* %3961 to i64
  %3963 = ptrtoint i32* %3957 to i64
  %3964 = icmp sgt i64 %3930, 0
  br i1 %3964, label %3965, label %3967

3965:                                             ; preds = %3954
  %3966 = inttoptr i64 %3929 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3956, i8* align 4 %3966, i64 %3930, i1 false) #9
  br label %3967

3967:                                             ; preds = %3965, %3954
  store i64 %3963, i64* %3928, align 8
  store i64 %3962, i64* %3927, align 8
  store i64 %3960, i64* %3937, align 8
  %3968 = icmp eq i64 %3929, 0
  br i1 %3968, label %3971, label %3969

3969:                                             ; preds = %3967
  %3970 = inttoptr i64 %3929 to i8*
  tail call void @_ZdlPv(i8* %3970) #10
  br label %3971

3971:                                             ; preds = %3969, %3967, %3921, %3912
  %3972 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 68
  %3973 = load i8, i8* %3972, align 4, !range !2
  %3974 = icmp eq i8 %3973, 0
  br i1 %3974, label %4030, label %3975

3975:                                             ; preds = %3971
  %3976 = load i32*, i32** %3, align 8
  %3977 = load i32*, i32** %4, align 8
  %3978 = icmp ult i32* %3976, %3977
  %3979 = ptrtoint i32* %3977 to i64
  br i1 %3978, label %3980, label %3984

3980:                                             ; preds = %3975
  store i32 68, i32* %3976, align 4
  %3981 = getelementptr inbounds i32, i32* %3976, i64 1
  %3982 = ptrtoint i32* %3981 to i64
  %3983 = bitcast i32** %3 to i64*
  store i64 %3982, i64* %3983, align 8
  br label %4030

3984:                                             ; preds = %3975
  %3985 = ptrtoint i32* %3976 to i64
  %3986 = bitcast i32** %3 to i64*
  %3987 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3988 = load i64, i64* %3987, align 8
  %3989 = sub i64 %3985, %3988
  %3990 = ashr exact i64 %3989, 2
  %3991 = add nsw i64 %3990, 1
  %3992 = icmp ugt i64 %3991, 4611686018427387903
  br i1 %3992, label %3993, label %3995

3993:                                             ; preds = %3984
  %3994 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3994) #11
  unreachable

3995:                                             ; preds = %3984
  %3996 = bitcast i32** %4 to i64*
  %3997 = sub i64 %3979, %3988
  %3998 = ashr exact i64 %3997, 2
  %3999 = icmp ult i64 %3998, 2305843009213693951
  br i1 %3999, label %4000, label %4008

4000:                                             ; preds = %3995
  %4001 = ashr exact i64 %3997, 1
  %4002 = icmp ult i64 %4001, %3991
  %4003 = select i1 %4002, i64 %3991, i64 %4001
  %4004 = icmp eq i64 %4003, 0
  br i1 %4004, label %4013, label %4005

4005:                                             ; preds = %4000
  %4006 = icmp ugt i64 %4003, 4611686018427387903
  br i1 %4006, label %4007, label %4008

4007:                                             ; preds = %4005
  tail call void @abort() #11
  unreachable

4008:                                             ; preds = %4005, %3995
  %4009 = phi i64 [ %4003, %4005 ], [ 4611686018427387903, %3995 ]
  %4010 = shl i64 %4009, 2
  %4011 = tail call i8* @_Znwm(i64 %4010) #10
  %4012 = bitcast i8* %4011 to i32*
  br label %4013

4013:                                             ; preds = %4008, %4000
  %4014 = phi i64 [ %4009, %4008 ], [ 0, %4000 ]
  %4015 = phi i8* [ %4011, %4008 ], [ null, %4000 ]
  %4016 = phi i32* [ %4012, %4008 ], [ null, %4000 ]
  %4017 = getelementptr inbounds i32, i32* %4016, i64 %3990
  %4018 = getelementptr inbounds i32, i32* %4016, i64 %4014
  %4019 = ptrtoint i32* %4018 to i64
  store i32 68, i32* %4017, align 4
  %4020 = getelementptr inbounds i32, i32* %4017, i64 1
  %4021 = ptrtoint i32* %4020 to i64
  %4022 = ptrtoint i32* %4016 to i64
  %4023 = icmp sgt i64 %3989, 0
  br i1 %4023, label %4024, label %4026

4024:                                             ; preds = %4013
  %4025 = inttoptr i64 %3988 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4015, i8* align 4 %4025, i64 %3989, i1 false) #9
  br label %4026

4026:                                             ; preds = %4024, %4013
  store i64 %4022, i64* %3987, align 8
  store i64 %4021, i64* %3986, align 8
  store i64 %4019, i64* %3996, align 8
  %4027 = icmp eq i64 %3988, 0
  br i1 %4027, label %4030, label %4028

4028:                                             ; preds = %4026
  %4029 = inttoptr i64 %3988 to i8*
  tail call void @_ZdlPv(i8* %4029) #10
  br label %4030

4030:                                             ; preds = %4028, %4026, %3980, %3971
  %4031 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 69
  %4032 = load i8, i8* %4031, align 1, !range !2
  %4033 = icmp eq i8 %4032, 0
  br i1 %4033, label %4089, label %4034

4034:                                             ; preds = %4030
  %4035 = load i32*, i32** %3, align 8
  %4036 = load i32*, i32** %4, align 8
  %4037 = icmp ult i32* %4035, %4036
  %4038 = ptrtoint i32* %4036 to i64
  br i1 %4037, label %4039, label %4043

4039:                                             ; preds = %4034
  store i32 69, i32* %4035, align 4
  %4040 = getelementptr inbounds i32, i32* %4035, i64 1
  %4041 = ptrtoint i32* %4040 to i64
  %4042 = bitcast i32** %3 to i64*
  store i64 %4041, i64* %4042, align 8
  br label %4089

4043:                                             ; preds = %4034
  %4044 = ptrtoint i32* %4035 to i64
  %4045 = bitcast i32** %3 to i64*
  %4046 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4047 = load i64, i64* %4046, align 8
  %4048 = sub i64 %4044, %4047
  %4049 = ashr exact i64 %4048, 2
  %4050 = add nsw i64 %4049, 1
  %4051 = icmp ugt i64 %4050, 4611686018427387903
  br i1 %4051, label %4052, label %4054

4052:                                             ; preds = %4043
  %4053 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4053) #11
  unreachable

4054:                                             ; preds = %4043
  %4055 = bitcast i32** %4 to i64*
  %4056 = sub i64 %4038, %4047
  %4057 = ashr exact i64 %4056, 2
  %4058 = icmp ult i64 %4057, 2305843009213693951
  br i1 %4058, label %4059, label %4067

4059:                                             ; preds = %4054
  %4060 = ashr exact i64 %4056, 1
  %4061 = icmp ult i64 %4060, %4050
  %4062 = select i1 %4061, i64 %4050, i64 %4060
  %4063 = icmp eq i64 %4062, 0
  br i1 %4063, label %4072, label %4064

4064:                                             ; preds = %4059
  %4065 = icmp ugt i64 %4062, 4611686018427387903
  br i1 %4065, label %4066, label %4067

4066:                                             ; preds = %4064
  tail call void @abort() #11
  unreachable

4067:                                             ; preds = %4064, %4054
  %4068 = phi i64 [ %4062, %4064 ], [ 4611686018427387903, %4054 ]
  %4069 = shl i64 %4068, 2
  %4070 = tail call i8* @_Znwm(i64 %4069) #10
  %4071 = bitcast i8* %4070 to i32*
  br label %4072

4072:                                             ; preds = %4067, %4059
  %4073 = phi i64 [ %4068, %4067 ], [ 0, %4059 ]
  %4074 = phi i8* [ %4070, %4067 ], [ null, %4059 ]
  %4075 = phi i32* [ %4071, %4067 ], [ null, %4059 ]
  %4076 = getelementptr inbounds i32, i32* %4075, i64 %4049
  %4077 = getelementptr inbounds i32, i32* %4075, i64 %4073
  %4078 = ptrtoint i32* %4077 to i64
  store i32 69, i32* %4076, align 4
  %4079 = getelementptr inbounds i32, i32* %4076, i64 1
  %4080 = ptrtoint i32* %4079 to i64
  %4081 = ptrtoint i32* %4075 to i64
  %4082 = icmp sgt i64 %4048, 0
  br i1 %4082, label %4083, label %4085

4083:                                             ; preds = %4072
  %4084 = inttoptr i64 %4047 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4074, i8* align 4 %4084, i64 %4048, i1 false) #9
  br label %4085

4085:                                             ; preds = %4083, %4072
  store i64 %4081, i64* %4046, align 8
  store i64 %4080, i64* %4045, align 8
  store i64 %4078, i64* %4055, align 8
  %4086 = icmp eq i64 %4047, 0
  br i1 %4086, label %4089, label %4087

4087:                                             ; preds = %4085
  %4088 = inttoptr i64 %4047 to i8*
  tail call void @_ZdlPv(i8* %4088) #10
  br label %4089

4089:                                             ; preds = %4087, %4085, %4039, %4030
  %4090 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 70
  %4091 = load i8, i8* %4090, align 2, !range !2
  %4092 = icmp eq i8 %4091, 0
  br i1 %4092, label %4148, label %4093

4093:                                             ; preds = %4089
  %4094 = load i32*, i32** %3, align 8
  %4095 = load i32*, i32** %4, align 8
  %4096 = icmp ult i32* %4094, %4095
  %4097 = ptrtoint i32* %4095 to i64
  br i1 %4096, label %4098, label %4102

4098:                                             ; preds = %4093
  store i32 70, i32* %4094, align 4
  %4099 = getelementptr inbounds i32, i32* %4094, i64 1
  %4100 = ptrtoint i32* %4099 to i64
  %4101 = bitcast i32** %3 to i64*
  store i64 %4100, i64* %4101, align 8
  br label %4148

4102:                                             ; preds = %4093
  %4103 = ptrtoint i32* %4094 to i64
  %4104 = bitcast i32** %3 to i64*
  %4105 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4106 = load i64, i64* %4105, align 8
  %4107 = sub i64 %4103, %4106
  %4108 = ashr exact i64 %4107, 2
  %4109 = add nsw i64 %4108, 1
  %4110 = icmp ugt i64 %4109, 4611686018427387903
  br i1 %4110, label %4111, label %4113

4111:                                             ; preds = %4102
  %4112 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4112) #11
  unreachable

4113:                                             ; preds = %4102
  %4114 = bitcast i32** %4 to i64*
  %4115 = sub i64 %4097, %4106
  %4116 = ashr exact i64 %4115, 2
  %4117 = icmp ult i64 %4116, 2305843009213693951
  br i1 %4117, label %4118, label %4126

4118:                                             ; preds = %4113
  %4119 = ashr exact i64 %4115, 1
  %4120 = icmp ult i64 %4119, %4109
  %4121 = select i1 %4120, i64 %4109, i64 %4119
  %4122 = icmp eq i64 %4121, 0
  br i1 %4122, label %4131, label %4123

4123:                                             ; preds = %4118
  %4124 = icmp ugt i64 %4121, 4611686018427387903
  br i1 %4124, label %4125, label %4126

4125:                                             ; preds = %4123
  tail call void @abort() #11
  unreachable

4126:                                             ; preds = %4123, %4113
  %4127 = phi i64 [ %4121, %4123 ], [ 4611686018427387903, %4113 ]
  %4128 = shl i64 %4127, 2
  %4129 = tail call i8* @_Znwm(i64 %4128) #10
  %4130 = bitcast i8* %4129 to i32*
  br label %4131

4131:                                             ; preds = %4126, %4118
  %4132 = phi i64 [ %4127, %4126 ], [ 0, %4118 ]
  %4133 = phi i8* [ %4129, %4126 ], [ null, %4118 ]
  %4134 = phi i32* [ %4130, %4126 ], [ null, %4118 ]
  %4135 = getelementptr inbounds i32, i32* %4134, i64 %4108
  %4136 = getelementptr inbounds i32, i32* %4134, i64 %4132
  %4137 = ptrtoint i32* %4136 to i64
  store i32 70, i32* %4135, align 4
  %4138 = getelementptr inbounds i32, i32* %4135, i64 1
  %4139 = ptrtoint i32* %4138 to i64
  %4140 = ptrtoint i32* %4134 to i64
  %4141 = icmp sgt i64 %4107, 0
  br i1 %4141, label %4142, label %4144

4142:                                             ; preds = %4131
  %4143 = inttoptr i64 %4106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4133, i8* align 4 %4143, i64 %4107, i1 false) #9
  br label %4144

4144:                                             ; preds = %4142, %4131
  store i64 %4140, i64* %4105, align 8
  store i64 %4139, i64* %4104, align 8
  store i64 %4137, i64* %4114, align 8
  %4145 = icmp eq i64 %4106, 0
  br i1 %4145, label %4148, label %4146

4146:                                             ; preds = %4144
  %4147 = inttoptr i64 %4106 to i8*
  tail call void @_ZdlPv(i8* %4147) #10
  br label %4148

4148:                                             ; preds = %4146, %4144, %4098, %4089
  %4149 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 71
  %4150 = load i8, i8* %4149, align 1, !range !2
  %4151 = icmp eq i8 %4150, 0
  br i1 %4151, label %4207, label %4152

4152:                                             ; preds = %4148
  %4153 = load i32*, i32** %3, align 8
  %4154 = load i32*, i32** %4, align 8
  %4155 = icmp ult i32* %4153, %4154
  %4156 = ptrtoint i32* %4154 to i64
  br i1 %4155, label %4157, label %4161

4157:                                             ; preds = %4152
  store i32 71, i32* %4153, align 4
  %4158 = getelementptr inbounds i32, i32* %4153, i64 1
  %4159 = ptrtoint i32* %4158 to i64
  %4160 = bitcast i32** %3 to i64*
  store i64 %4159, i64* %4160, align 8
  br label %4207

4161:                                             ; preds = %4152
  %4162 = ptrtoint i32* %4153 to i64
  %4163 = bitcast i32** %3 to i64*
  %4164 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4165 = load i64, i64* %4164, align 8
  %4166 = sub i64 %4162, %4165
  %4167 = ashr exact i64 %4166, 2
  %4168 = add nsw i64 %4167, 1
  %4169 = icmp ugt i64 %4168, 4611686018427387903
  br i1 %4169, label %4170, label %4172

4170:                                             ; preds = %4161
  %4171 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4171) #11
  unreachable

4172:                                             ; preds = %4161
  %4173 = bitcast i32** %4 to i64*
  %4174 = sub i64 %4156, %4165
  %4175 = ashr exact i64 %4174, 2
  %4176 = icmp ult i64 %4175, 2305843009213693951
  br i1 %4176, label %4177, label %4185

4177:                                             ; preds = %4172
  %4178 = ashr exact i64 %4174, 1
  %4179 = icmp ult i64 %4178, %4168
  %4180 = select i1 %4179, i64 %4168, i64 %4178
  %4181 = icmp eq i64 %4180, 0
  br i1 %4181, label %4190, label %4182

4182:                                             ; preds = %4177
  %4183 = icmp ugt i64 %4180, 4611686018427387903
  br i1 %4183, label %4184, label %4185

4184:                                             ; preds = %4182
  tail call void @abort() #11
  unreachable

4185:                                             ; preds = %4182, %4172
  %4186 = phi i64 [ %4180, %4182 ], [ 4611686018427387903, %4172 ]
  %4187 = shl i64 %4186, 2
  %4188 = tail call i8* @_Znwm(i64 %4187) #10
  %4189 = bitcast i8* %4188 to i32*
  br label %4190

4190:                                             ; preds = %4185, %4177
  %4191 = phi i64 [ %4186, %4185 ], [ 0, %4177 ]
  %4192 = phi i8* [ %4188, %4185 ], [ null, %4177 ]
  %4193 = phi i32* [ %4189, %4185 ], [ null, %4177 ]
  %4194 = getelementptr inbounds i32, i32* %4193, i64 %4167
  %4195 = getelementptr inbounds i32, i32* %4193, i64 %4191
  %4196 = ptrtoint i32* %4195 to i64
  store i32 71, i32* %4194, align 4
  %4197 = getelementptr inbounds i32, i32* %4194, i64 1
  %4198 = ptrtoint i32* %4197 to i64
  %4199 = ptrtoint i32* %4193 to i64
  %4200 = icmp sgt i64 %4166, 0
  br i1 %4200, label %4201, label %4203

4201:                                             ; preds = %4190
  %4202 = inttoptr i64 %4165 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4192, i8* align 4 %4202, i64 %4166, i1 false) #9
  br label %4203

4203:                                             ; preds = %4201, %4190
  store i64 %4199, i64* %4164, align 8
  store i64 %4198, i64* %4163, align 8
  store i64 %4196, i64* %4173, align 8
  %4204 = icmp eq i64 %4165, 0
  br i1 %4204, label %4207, label %4205

4205:                                             ; preds = %4203
  %4206 = inttoptr i64 %4165 to i8*
  tail call void @_ZdlPv(i8* %4206) #10
  br label %4207

4207:                                             ; preds = %4205, %4203, %4157, %4148
  %4208 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 72
  %4209 = load i8, i8* %4208, align 4, !range !2
  %4210 = icmp eq i8 %4209, 0
  br i1 %4210, label %4266, label %4211

4211:                                             ; preds = %4207
  %4212 = load i32*, i32** %3, align 8
  %4213 = load i32*, i32** %4, align 8
  %4214 = icmp ult i32* %4212, %4213
  %4215 = ptrtoint i32* %4213 to i64
  br i1 %4214, label %4216, label %4220

4216:                                             ; preds = %4211
  store i32 72, i32* %4212, align 4
  %4217 = getelementptr inbounds i32, i32* %4212, i64 1
  %4218 = ptrtoint i32* %4217 to i64
  %4219 = bitcast i32** %3 to i64*
  store i64 %4218, i64* %4219, align 8
  br label %4266

4220:                                             ; preds = %4211
  %4221 = ptrtoint i32* %4212 to i64
  %4222 = bitcast i32** %3 to i64*
  %4223 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4224 = load i64, i64* %4223, align 8
  %4225 = sub i64 %4221, %4224
  %4226 = ashr exact i64 %4225, 2
  %4227 = add nsw i64 %4226, 1
  %4228 = icmp ugt i64 %4227, 4611686018427387903
  br i1 %4228, label %4229, label %4231

4229:                                             ; preds = %4220
  %4230 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4230) #11
  unreachable

4231:                                             ; preds = %4220
  %4232 = bitcast i32** %4 to i64*
  %4233 = sub i64 %4215, %4224
  %4234 = ashr exact i64 %4233, 2
  %4235 = icmp ult i64 %4234, 2305843009213693951
  br i1 %4235, label %4236, label %4244

4236:                                             ; preds = %4231
  %4237 = ashr exact i64 %4233, 1
  %4238 = icmp ult i64 %4237, %4227
  %4239 = select i1 %4238, i64 %4227, i64 %4237
  %4240 = icmp eq i64 %4239, 0
  br i1 %4240, label %4249, label %4241

4241:                                             ; preds = %4236
  %4242 = icmp ugt i64 %4239, 4611686018427387903
  br i1 %4242, label %4243, label %4244

4243:                                             ; preds = %4241
  tail call void @abort() #11
  unreachable

4244:                                             ; preds = %4241, %4231
  %4245 = phi i64 [ %4239, %4241 ], [ 4611686018427387903, %4231 ]
  %4246 = shl i64 %4245, 2
  %4247 = tail call i8* @_Znwm(i64 %4246) #10
  %4248 = bitcast i8* %4247 to i32*
  br label %4249

4249:                                             ; preds = %4244, %4236
  %4250 = phi i64 [ %4245, %4244 ], [ 0, %4236 ]
  %4251 = phi i8* [ %4247, %4244 ], [ null, %4236 ]
  %4252 = phi i32* [ %4248, %4244 ], [ null, %4236 ]
  %4253 = getelementptr inbounds i32, i32* %4252, i64 %4226
  %4254 = getelementptr inbounds i32, i32* %4252, i64 %4250
  %4255 = ptrtoint i32* %4254 to i64
  store i32 72, i32* %4253, align 4
  %4256 = getelementptr inbounds i32, i32* %4253, i64 1
  %4257 = ptrtoint i32* %4256 to i64
  %4258 = ptrtoint i32* %4252 to i64
  %4259 = icmp sgt i64 %4225, 0
  br i1 %4259, label %4260, label %4262

4260:                                             ; preds = %4249
  %4261 = inttoptr i64 %4224 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4251, i8* align 4 %4261, i64 %4225, i1 false) #9
  br label %4262

4262:                                             ; preds = %4260, %4249
  store i64 %4258, i64* %4223, align 8
  store i64 %4257, i64* %4222, align 8
  store i64 %4255, i64* %4232, align 8
  %4263 = icmp eq i64 %4224, 0
  br i1 %4263, label %4266, label %4264

4264:                                             ; preds = %4262
  %4265 = inttoptr i64 %4224 to i8*
  tail call void @_ZdlPv(i8* %4265) #10
  br label %4266

4266:                                             ; preds = %4264, %4262, %4216, %4207
  %4267 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 73
  %4268 = load i8, i8* %4267, align 1, !range !2
  %4269 = icmp eq i8 %4268, 0
  br i1 %4269, label %4325, label %4270

4270:                                             ; preds = %4266
  %4271 = load i32*, i32** %3, align 8
  %4272 = load i32*, i32** %4, align 8
  %4273 = icmp ult i32* %4271, %4272
  %4274 = ptrtoint i32* %4272 to i64
  br i1 %4273, label %4275, label %4279

4275:                                             ; preds = %4270
  store i32 73, i32* %4271, align 4
  %4276 = getelementptr inbounds i32, i32* %4271, i64 1
  %4277 = ptrtoint i32* %4276 to i64
  %4278 = bitcast i32** %3 to i64*
  store i64 %4277, i64* %4278, align 8
  br label %4325

4279:                                             ; preds = %4270
  %4280 = ptrtoint i32* %4271 to i64
  %4281 = bitcast i32** %3 to i64*
  %4282 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4283 = load i64, i64* %4282, align 8
  %4284 = sub i64 %4280, %4283
  %4285 = ashr exact i64 %4284, 2
  %4286 = add nsw i64 %4285, 1
  %4287 = icmp ugt i64 %4286, 4611686018427387903
  br i1 %4287, label %4288, label %4290

4288:                                             ; preds = %4279
  %4289 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4289) #11
  unreachable

4290:                                             ; preds = %4279
  %4291 = bitcast i32** %4 to i64*
  %4292 = sub i64 %4274, %4283
  %4293 = ashr exact i64 %4292, 2
  %4294 = icmp ult i64 %4293, 2305843009213693951
  br i1 %4294, label %4295, label %4303

4295:                                             ; preds = %4290
  %4296 = ashr exact i64 %4292, 1
  %4297 = icmp ult i64 %4296, %4286
  %4298 = select i1 %4297, i64 %4286, i64 %4296
  %4299 = icmp eq i64 %4298, 0
  br i1 %4299, label %4308, label %4300

4300:                                             ; preds = %4295
  %4301 = icmp ugt i64 %4298, 4611686018427387903
  br i1 %4301, label %4302, label %4303

4302:                                             ; preds = %4300
  tail call void @abort() #11
  unreachable

4303:                                             ; preds = %4300, %4290
  %4304 = phi i64 [ %4298, %4300 ], [ 4611686018427387903, %4290 ]
  %4305 = shl i64 %4304, 2
  %4306 = tail call i8* @_Znwm(i64 %4305) #10
  %4307 = bitcast i8* %4306 to i32*
  br label %4308

4308:                                             ; preds = %4303, %4295
  %4309 = phi i64 [ %4304, %4303 ], [ 0, %4295 ]
  %4310 = phi i8* [ %4306, %4303 ], [ null, %4295 ]
  %4311 = phi i32* [ %4307, %4303 ], [ null, %4295 ]
  %4312 = getelementptr inbounds i32, i32* %4311, i64 %4285
  %4313 = getelementptr inbounds i32, i32* %4311, i64 %4309
  %4314 = ptrtoint i32* %4313 to i64
  store i32 73, i32* %4312, align 4
  %4315 = getelementptr inbounds i32, i32* %4312, i64 1
  %4316 = ptrtoint i32* %4315 to i64
  %4317 = ptrtoint i32* %4311 to i64
  %4318 = icmp sgt i64 %4284, 0
  br i1 %4318, label %4319, label %4321

4319:                                             ; preds = %4308
  %4320 = inttoptr i64 %4283 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4310, i8* align 4 %4320, i64 %4284, i1 false) #9
  br label %4321

4321:                                             ; preds = %4319, %4308
  store i64 %4317, i64* %4282, align 8
  store i64 %4316, i64* %4281, align 8
  store i64 %4314, i64* %4291, align 8
  %4322 = icmp eq i64 %4283, 0
  br i1 %4322, label %4325, label %4323

4323:                                             ; preds = %4321
  %4324 = inttoptr i64 %4283 to i8*
  tail call void @_ZdlPv(i8* %4324) #10
  br label %4325

4325:                                             ; preds = %4323, %4321, %4275, %4266
  %4326 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 74
  %4327 = load i8, i8* %4326, align 2, !range !2
  %4328 = icmp eq i8 %4327, 0
  br i1 %4328, label %4384, label %4329

4329:                                             ; preds = %4325
  %4330 = load i32*, i32** %3, align 8
  %4331 = load i32*, i32** %4, align 8
  %4332 = icmp ult i32* %4330, %4331
  %4333 = ptrtoint i32* %4331 to i64
  br i1 %4332, label %4334, label %4338

4334:                                             ; preds = %4329
  store i32 74, i32* %4330, align 4
  %4335 = getelementptr inbounds i32, i32* %4330, i64 1
  %4336 = ptrtoint i32* %4335 to i64
  %4337 = bitcast i32** %3 to i64*
  store i64 %4336, i64* %4337, align 8
  br label %4384

4338:                                             ; preds = %4329
  %4339 = ptrtoint i32* %4330 to i64
  %4340 = bitcast i32** %3 to i64*
  %4341 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4342 = load i64, i64* %4341, align 8
  %4343 = sub i64 %4339, %4342
  %4344 = ashr exact i64 %4343, 2
  %4345 = add nsw i64 %4344, 1
  %4346 = icmp ugt i64 %4345, 4611686018427387903
  br i1 %4346, label %4347, label %4349

4347:                                             ; preds = %4338
  %4348 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4348) #11
  unreachable

4349:                                             ; preds = %4338
  %4350 = bitcast i32** %4 to i64*
  %4351 = sub i64 %4333, %4342
  %4352 = ashr exact i64 %4351, 2
  %4353 = icmp ult i64 %4352, 2305843009213693951
  br i1 %4353, label %4354, label %4362

4354:                                             ; preds = %4349
  %4355 = ashr exact i64 %4351, 1
  %4356 = icmp ult i64 %4355, %4345
  %4357 = select i1 %4356, i64 %4345, i64 %4355
  %4358 = icmp eq i64 %4357, 0
  br i1 %4358, label %4367, label %4359

4359:                                             ; preds = %4354
  %4360 = icmp ugt i64 %4357, 4611686018427387903
  br i1 %4360, label %4361, label %4362

4361:                                             ; preds = %4359
  tail call void @abort() #11
  unreachable

4362:                                             ; preds = %4359, %4349
  %4363 = phi i64 [ %4357, %4359 ], [ 4611686018427387903, %4349 ]
  %4364 = shl i64 %4363, 2
  %4365 = tail call i8* @_Znwm(i64 %4364) #10
  %4366 = bitcast i8* %4365 to i32*
  br label %4367

4367:                                             ; preds = %4362, %4354
  %4368 = phi i64 [ %4363, %4362 ], [ 0, %4354 ]
  %4369 = phi i8* [ %4365, %4362 ], [ null, %4354 ]
  %4370 = phi i32* [ %4366, %4362 ], [ null, %4354 ]
  %4371 = getelementptr inbounds i32, i32* %4370, i64 %4344
  %4372 = getelementptr inbounds i32, i32* %4370, i64 %4368
  %4373 = ptrtoint i32* %4372 to i64
  store i32 74, i32* %4371, align 4
  %4374 = getelementptr inbounds i32, i32* %4371, i64 1
  %4375 = ptrtoint i32* %4374 to i64
  %4376 = ptrtoint i32* %4370 to i64
  %4377 = icmp sgt i64 %4343, 0
  br i1 %4377, label %4378, label %4380

4378:                                             ; preds = %4367
  %4379 = inttoptr i64 %4342 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4369, i8* align 4 %4379, i64 %4343, i1 false) #9
  br label %4380

4380:                                             ; preds = %4378, %4367
  store i64 %4376, i64* %4341, align 8
  store i64 %4375, i64* %4340, align 8
  store i64 %4373, i64* %4350, align 8
  %4381 = icmp eq i64 %4342, 0
  br i1 %4381, label %4384, label %4382

4382:                                             ; preds = %4380
  %4383 = inttoptr i64 %4342 to i8*
  tail call void @_ZdlPv(i8* %4383) #10
  br label %4384

4384:                                             ; preds = %4382, %4380, %4334, %4325
  %4385 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 75
  %4386 = load i8, i8* %4385, align 1, !range !2
  %4387 = icmp eq i8 %4386, 0
  br i1 %4387, label %4443, label %4388

4388:                                             ; preds = %4384
  %4389 = load i32*, i32** %3, align 8
  %4390 = load i32*, i32** %4, align 8
  %4391 = icmp ult i32* %4389, %4390
  %4392 = ptrtoint i32* %4390 to i64
  br i1 %4391, label %4393, label %4397

4393:                                             ; preds = %4388
  store i32 75, i32* %4389, align 4
  %4394 = getelementptr inbounds i32, i32* %4389, i64 1
  %4395 = ptrtoint i32* %4394 to i64
  %4396 = bitcast i32** %3 to i64*
  store i64 %4395, i64* %4396, align 8
  br label %4443

4397:                                             ; preds = %4388
  %4398 = ptrtoint i32* %4389 to i64
  %4399 = bitcast i32** %3 to i64*
  %4400 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4401 = load i64, i64* %4400, align 8
  %4402 = sub i64 %4398, %4401
  %4403 = ashr exact i64 %4402, 2
  %4404 = add nsw i64 %4403, 1
  %4405 = icmp ugt i64 %4404, 4611686018427387903
  br i1 %4405, label %4406, label %4408

4406:                                             ; preds = %4397
  %4407 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4407) #11
  unreachable

4408:                                             ; preds = %4397
  %4409 = bitcast i32** %4 to i64*
  %4410 = sub i64 %4392, %4401
  %4411 = ashr exact i64 %4410, 2
  %4412 = icmp ult i64 %4411, 2305843009213693951
  br i1 %4412, label %4413, label %4421

4413:                                             ; preds = %4408
  %4414 = ashr exact i64 %4410, 1
  %4415 = icmp ult i64 %4414, %4404
  %4416 = select i1 %4415, i64 %4404, i64 %4414
  %4417 = icmp eq i64 %4416, 0
  br i1 %4417, label %4426, label %4418

4418:                                             ; preds = %4413
  %4419 = icmp ugt i64 %4416, 4611686018427387903
  br i1 %4419, label %4420, label %4421

4420:                                             ; preds = %4418
  tail call void @abort() #11
  unreachable

4421:                                             ; preds = %4418, %4408
  %4422 = phi i64 [ %4416, %4418 ], [ 4611686018427387903, %4408 ]
  %4423 = shl i64 %4422, 2
  %4424 = tail call i8* @_Znwm(i64 %4423) #10
  %4425 = bitcast i8* %4424 to i32*
  br label %4426

4426:                                             ; preds = %4421, %4413
  %4427 = phi i64 [ %4422, %4421 ], [ 0, %4413 ]
  %4428 = phi i8* [ %4424, %4421 ], [ null, %4413 ]
  %4429 = phi i32* [ %4425, %4421 ], [ null, %4413 ]
  %4430 = getelementptr inbounds i32, i32* %4429, i64 %4403
  %4431 = getelementptr inbounds i32, i32* %4429, i64 %4427
  %4432 = ptrtoint i32* %4431 to i64
  store i32 75, i32* %4430, align 4
  %4433 = getelementptr inbounds i32, i32* %4430, i64 1
  %4434 = ptrtoint i32* %4433 to i64
  %4435 = ptrtoint i32* %4429 to i64
  %4436 = icmp sgt i64 %4402, 0
  br i1 %4436, label %4437, label %4439

4437:                                             ; preds = %4426
  %4438 = inttoptr i64 %4401 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4428, i8* align 4 %4438, i64 %4402, i1 false) #9
  br label %4439

4439:                                             ; preds = %4437, %4426
  store i64 %4435, i64* %4400, align 8
  store i64 %4434, i64* %4399, align 8
  store i64 %4432, i64* %4409, align 8
  %4440 = icmp eq i64 %4401, 0
  br i1 %4440, label %4443, label %4441

4441:                                             ; preds = %4439
  %4442 = inttoptr i64 %4401 to i8*
  tail call void @_ZdlPv(i8* %4442) #10
  br label %4443

4443:                                             ; preds = %4441, %4439, %4393, %4384
  %4444 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 76
  %4445 = load i8, i8* %4444, align 4, !range !2
  %4446 = icmp eq i8 %4445, 0
  br i1 %4446, label %4502, label %4447

4447:                                             ; preds = %4443
  %4448 = load i32*, i32** %3, align 8
  %4449 = load i32*, i32** %4, align 8
  %4450 = icmp ult i32* %4448, %4449
  %4451 = ptrtoint i32* %4449 to i64
  br i1 %4450, label %4452, label %4456

4452:                                             ; preds = %4447
  store i32 76, i32* %4448, align 4
  %4453 = getelementptr inbounds i32, i32* %4448, i64 1
  %4454 = ptrtoint i32* %4453 to i64
  %4455 = bitcast i32** %3 to i64*
  store i64 %4454, i64* %4455, align 8
  br label %4502

4456:                                             ; preds = %4447
  %4457 = ptrtoint i32* %4448 to i64
  %4458 = bitcast i32** %3 to i64*
  %4459 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4460 = load i64, i64* %4459, align 8
  %4461 = sub i64 %4457, %4460
  %4462 = ashr exact i64 %4461, 2
  %4463 = add nsw i64 %4462, 1
  %4464 = icmp ugt i64 %4463, 4611686018427387903
  br i1 %4464, label %4465, label %4467

4465:                                             ; preds = %4456
  %4466 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4466) #11
  unreachable

4467:                                             ; preds = %4456
  %4468 = bitcast i32** %4 to i64*
  %4469 = sub i64 %4451, %4460
  %4470 = ashr exact i64 %4469, 2
  %4471 = icmp ult i64 %4470, 2305843009213693951
  br i1 %4471, label %4472, label %4480

4472:                                             ; preds = %4467
  %4473 = ashr exact i64 %4469, 1
  %4474 = icmp ult i64 %4473, %4463
  %4475 = select i1 %4474, i64 %4463, i64 %4473
  %4476 = icmp eq i64 %4475, 0
  br i1 %4476, label %4485, label %4477

4477:                                             ; preds = %4472
  %4478 = icmp ugt i64 %4475, 4611686018427387903
  br i1 %4478, label %4479, label %4480

4479:                                             ; preds = %4477
  tail call void @abort() #11
  unreachable

4480:                                             ; preds = %4477, %4467
  %4481 = phi i64 [ %4475, %4477 ], [ 4611686018427387903, %4467 ]
  %4482 = shl i64 %4481, 2
  %4483 = tail call i8* @_Znwm(i64 %4482) #10
  %4484 = bitcast i8* %4483 to i32*
  br label %4485

4485:                                             ; preds = %4480, %4472
  %4486 = phi i64 [ %4481, %4480 ], [ 0, %4472 ]
  %4487 = phi i8* [ %4483, %4480 ], [ null, %4472 ]
  %4488 = phi i32* [ %4484, %4480 ], [ null, %4472 ]
  %4489 = getelementptr inbounds i32, i32* %4488, i64 %4462
  %4490 = getelementptr inbounds i32, i32* %4488, i64 %4486
  %4491 = ptrtoint i32* %4490 to i64
  store i32 76, i32* %4489, align 4
  %4492 = getelementptr inbounds i32, i32* %4489, i64 1
  %4493 = ptrtoint i32* %4492 to i64
  %4494 = ptrtoint i32* %4488 to i64
  %4495 = icmp sgt i64 %4461, 0
  br i1 %4495, label %4496, label %4498

4496:                                             ; preds = %4485
  %4497 = inttoptr i64 %4460 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4487, i8* align 4 %4497, i64 %4461, i1 false) #9
  br label %4498

4498:                                             ; preds = %4496, %4485
  store i64 %4494, i64* %4459, align 8
  store i64 %4493, i64* %4458, align 8
  store i64 %4491, i64* %4468, align 8
  %4499 = icmp eq i64 %4460, 0
  br i1 %4499, label %4502, label %4500

4500:                                             ; preds = %4498
  %4501 = inttoptr i64 %4460 to i8*
  tail call void @_ZdlPv(i8* %4501) #10
  br label %4502

4502:                                             ; preds = %4500, %4498, %4452, %4443
  %4503 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 77
  %4504 = load i8, i8* %4503, align 1, !range !2
  %4505 = icmp eq i8 %4504, 0
  br i1 %4505, label %4561, label %4506

4506:                                             ; preds = %4502
  %4507 = load i32*, i32** %3, align 8
  %4508 = load i32*, i32** %4, align 8
  %4509 = icmp ult i32* %4507, %4508
  %4510 = ptrtoint i32* %4508 to i64
  br i1 %4509, label %4511, label %4515

4511:                                             ; preds = %4506
  store i32 77, i32* %4507, align 4
  %4512 = getelementptr inbounds i32, i32* %4507, i64 1
  %4513 = ptrtoint i32* %4512 to i64
  %4514 = bitcast i32** %3 to i64*
  store i64 %4513, i64* %4514, align 8
  br label %4561

4515:                                             ; preds = %4506
  %4516 = ptrtoint i32* %4507 to i64
  %4517 = bitcast i32** %3 to i64*
  %4518 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4519 = load i64, i64* %4518, align 8
  %4520 = sub i64 %4516, %4519
  %4521 = ashr exact i64 %4520, 2
  %4522 = add nsw i64 %4521, 1
  %4523 = icmp ugt i64 %4522, 4611686018427387903
  br i1 %4523, label %4524, label %4526

4524:                                             ; preds = %4515
  %4525 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4525) #11
  unreachable

4526:                                             ; preds = %4515
  %4527 = bitcast i32** %4 to i64*
  %4528 = sub i64 %4510, %4519
  %4529 = ashr exact i64 %4528, 2
  %4530 = icmp ult i64 %4529, 2305843009213693951
  br i1 %4530, label %4531, label %4539

4531:                                             ; preds = %4526
  %4532 = ashr exact i64 %4528, 1
  %4533 = icmp ult i64 %4532, %4522
  %4534 = select i1 %4533, i64 %4522, i64 %4532
  %4535 = icmp eq i64 %4534, 0
  br i1 %4535, label %4544, label %4536

4536:                                             ; preds = %4531
  %4537 = icmp ugt i64 %4534, 4611686018427387903
  br i1 %4537, label %4538, label %4539

4538:                                             ; preds = %4536
  tail call void @abort() #11
  unreachable

4539:                                             ; preds = %4536, %4526
  %4540 = phi i64 [ %4534, %4536 ], [ 4611686018427387903, %4526 ]
  %4541 = shl i64 %4540, 2
  %4542 = tail call i8* @_Znwm(i64 %4541) #10
  %4543 = bitcast i8* %4542 to i32*
  br label %4544

4544:                                             ; preds = %4539, %4531
  %4545 = phi i64 [ %4540, %4539 ], [ 0, %4531 ]
  %4546 = phi i8* [ %4542, %4539 ], [ null, %4531 ]
  %4547 = phi i32* [ %4543, %4539 ], [ null, %4531 ]
  %4548 = getelementptr inbounds i32, i32* %4547, i64 %4521
  %4549 = getelementptr inbounds i32, i32* %4547, i64 %4545
  %4550 = ptrtoint i32* %4549 to i64
  store i32 77, i32* %4548, align 4
  %4551 = getelementptr inbounds i32, i32* %4548, i64 1
  %4552 = ptrtoint i32* %4551 to i64
  %4553 = ptrtoint i32* %4547 to i64
  %4554 = icmp sgt i64 %4520, 0
  br i1 %4554, label %4555, label %4557

4555:                                             ; preds = %4544
  %4556 = inttoptr i64 %4519 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4546, i8* align 4 %4556, i64 %4520, i1 false) #9
  br label %4557

4557:                                             ; preds = %4555, %4544
  store i64 %4553, i64* %4518, align 8
  store i64 %4552, i64* %4517, align 8
  store i64 %4550, i64* %4527, align 8
  %4558 = icmp eq i64 %4519, 0
  br i1 %4558, label %4561, label %4559

4559:                                             ; preds = %4557
  %4560 = inttoptr i64 %4519 to i8*
  tail call void @_ZdlPv(i8* %4560) #10
  br label %4561

4561:                                             ; preds = %4559, %4557, %4511, %4502
  %4562 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 78
  %4563 = load i8, i8* %4562, align 2, !range !2
  %4564 = icmp eq i8 %4563, 0
  br i1 %4564, label %4620, label %4565

4565:                                             ; preds = %4561
  %4566 = load i32*, i32** %3, align 8
  %4567 = load i32*, i32** %4, align 8
  %4568 = icmp ult i32* %4566, %4567
  %4569 = ptrtoint i32* %4567 to i64
  br i1 %4568, label %4570, label %4574

4570:                                             ; preds = %4565
  store i32 78, i32* %4566, align 4
  %4571 = getelementptr inbounds i32, i32* %4566, i64 1
  %4572 = ptrtoint i32* %4571 to i64
  %4573 = bitcast i32** %3 to i64*
  store i64 %4572, i64* %4573, align 8
  br label %4620

4574:                                             ; preds = %4565
  %4575 = ptrtoint i32* %4566 to i64
  %4576 = bitcast i32** %3 to i64*
  %4577 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4578 = load i64, i64* %4577, align 8
  %4579 = sub i64 %4575, %4578
  %4580 = ashr exact i64 %4579, 2
  %4581 = add nsw i64 %4580, 1
  %4582 = icmp ugt i64 %4581, 4611686018427387903
  br i1 %4582, label %4583, label %4585

4583:                                             ; preds = %4574
  %4584 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4584) #11
  unreachable

4585:                                             ; preds = %4574
  %4586 = bitcast i32** %4 to i64*
  %4587 = sub i64 %4569, %4578
  %4588 = ashr exact i64 %4587, 2
  %4589 = icmp ult i64 %4588, 2305843009213693951
  br i1 %4589, label %4590, label %4598

4590:                                             ; preds = %4585
  %4591 = ashr exact i64 %4587, 1
  %4592 = icmp ult i64 %4591, %4581
  %4593 = select i1 %4592, i64 %4581, i64 %4591
  %4594 = icmp eq i64 %4593, 0
  br i1 %4594, label %4603, label %4595

4595:                                             ; preds = %4590
  %4596 = icmp ugt i64 %4593, 4611686018427387903
  br i1 %4596, label %4597, label %4598

4597:                                             ; preds = %4595
  tail call void @abort() #11
  unreachable

4598:                                             ; preds = %4595, %4585
  %4599 = phi i64 [ %4593, %4595 ], [ 4611686018427387903, %4585 ]
  %4600 = shl i64 %4599, 2
  %4601 = tail call i8* @_Znwm(i64 %4600) #10
  %4602 = bitcast i8* %4601 to i32*
  br label %4603

4603:                                             ; preds = %4598, %4590
  %4604 = phi i64 [ %4599, %4598 ], [ 0, %4590 ]
  %4605 = phi i8* [ %4601, %4598 ], [ null, %4590 ]
  %4606 = phi i32* [ %4602, %4598 ], [ null, %4590 ]
  %4607 = getelementptr inbounds i32, i32* %4606, i64 %4580
  %4608 = getelementptr inbounds i32, i32* %4606, i64 %4604
  %4609 = ptrtoint i32* %4608 to i64
  store i32 78, i32* %4607, align 4
  %4610 = getelementptr inbounds i32, i32* %4607, i64 1
  %4611 = ptrtoint i32* %4610 to i64
  %4612 = ptrtoint i32* %4606 to i64
  %4613 = icmp sgt i64 %4579, 0
  br i1 %4613, label %4614, label %4616

4614:                                             ; preds = %4603
  %4615 = inttoptr i64 %4578 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4605, i8* align 4 %4615, i64 %4579, i1 false) #9
  br label %4616

4616:                                             ; preds = %4614, %4603
  store i64 %4612, i64* %4577, align 8
  store i64 %4611, i64* %4576, align 8
  store i64 %4609, i64* %4586, align 8
  %4617 = icmp eq i64 %4578, 0
  br i1 %4617, label %4620, label %4618

4618:                                             ; preds = %4616
  %4619 = inttoptr i64 %4578 to i8*
  tail call void @_ZdlPv(i8* %4619) #10
  br label %4620

4620:                                             ; preds = %4618, %4616, %4570, %4561
  %4621 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 79
  %4622 = load i8, i8* %4621, align 1, !range !2
  %4623 = icmp eq i8 %4622, 0
  br i1 %4623, label %4679, label %4624

4624:                                             ; preds = %4620
  %4625 = load i32*, i32** %3, align 8
  %4626 = load i32*, i32** %4, align 8
  %4627 = icmp ult i32* %4625, %4626
  %4628 = ptrtoint i32* %4626 to i64
  br i1 %4627, label %4629, label %4633

4629:                                             ; preds = %4624
  store i32 79, i32* %4625, align 4
  %4630 = getelementptr inbounds i32, i32* %4625, i64 1
  %4631 = ptrtoint i32* %4630 to i64
  %4632 = bitcast i32** %3 to i64*
  store i64 %4631, i64* %4632, align 8
  br label %4679

4633:                                             ; preds = %4624
  %4634 = ptrtoint i32* %4625 to i64
  %4635 = bitcast i32** %3 to i64*
  %4636 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4637 = load i64, i64* %4636, align 8
  %4638 = sub i64 %4634, %4637
  %4639 = ashr exact i64 %4638, 2
  %4640 = add nsw i64 %4639, 1
  %4641 = icmp ugt i64 %4640, 4611686018427387903
  br i1 %4641, label %4642, label %4644

4642:                                             ; preds = %4633
  %4643 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4643) #11
  unreachable

4644:                                             ; preds = %4633
  %4645 = bitcast i32** %4 to i64*
  %4646 = sub i64 %4628, %4637
  %4647 = ashr exact i64 %4646, 2
  %4648 = icmp ult i64 %4647, 2305843009213693951
  br i1 %4648, label %4649, label %4657

4649:                                             ; preds = %4644
  %4650 = ashr exact i64 %4646, 1
  %4651 = icmp ult i64 %4650, %4640
  %4652 = select i1 %4651, i64 %4640, i64 %4650
  %4653 = icmp eq i64 %4652, 0
  br i1 %4653, label %4662, label %4654

4654:                                             ; preds = %4649
  %4655 = icmp ugt i64 %4652, 4611686018427387903
  br i1 %4655, label %4656, label %4657

4656:                                             ; preds = %4654
  tail call void @abort() #11
  unreachable

4657:                                             ; preds = %4654, %4644
  %4658 = phi i64 [ %4652, %4654 ], [ 4611686018427387903, %4644 ]
  %4659 = shl i64 %4658, 2
  %4660 = tail call i8* @_Znwm(i64 %4659) #10
  %4661 = bitcast i8* %4660 to i32*
  br label %4662

4662:                                             ; preds = %4657, %4649
  %4663 = phi i64 [ %4658, %4657 ], [ 0, %4649 ]
  %4664 = phi i8* [ %4660, %4657 ], [ null, %4649 ]
  %4665 = phi i32* [ %4661, %4657 ], [ null, %4649 ]
  %4666 = getelementptr inbounds i32, i32* %4665, i64 %4639
  %4667 = getelementptr inbounds i32, i32* %4665, i64 %4663
  %4668 = ptrtoint i32* %4667 to i64
  store i32 79, i32* %4666, align 4
  %4669 = getelementptr inbounds i32, i32* %4666, i64 1
  %4670 = ptrtoint i32* %4669 to i64
  %4671 = ptrtoint i32* %4665 to i64
  %4672 = icmp sgt i64 %4638, 0
  br i1 %4672, label %4673, label %4675

4673:                                             ; preds = %4662
  %4674 = inttoptr i64 %4637 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4664, i8* align 4 %4674, i64 %4638, i1 false) #9
  br label %4675

4675:                                             ; preds = %4673, %4662
  store i64 %4671, i64* %4636, align 8
  store i64 %4670, i64* %4635, align 8
  store i64 %4668, i64* %4645, align 8
  %4676 = icmp eq i64 %4637, 0
  br i1 %4676, label %4679, label %4677

4677:                                             ; preds = %4675
  %4678 = inttoptr i64 %4637 to i8*
  tail call void @_ZdlPv(i8* %4678) #10
  br label %4679

4679:                                             ; preds = %4677, %4675, %4629, %4620
  %4680 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 80
  %4681 = load i8, i8* %4680, align 4, !range !2
  %4682 = icmp eq i8 %4681, 0
  br i1 %4682, label %4738, label %4683

4683:                                             ; preds = %4679
  %4684 = load i32*, i32** %3, align 8
  %4685 = load i32*, i32** %4, align 8
  %4686 = icmp ult i32* %4684, %4685
  %4687 = ptrtoint i32* %4685 to i64
  br i1 %4686, label %4688, label %4692

4688:                                             ; preds = %4683
  store i32 80, i32* %4684, align 4
  %4689 = getelementptr inbounds i32, i32* %4684, i64 1
  %4690 = ptrtoint i32* %4689 to i64
  %4691 = bitcast i32** %3 to i64*
  store i64 %4690, i64* %4691, align 8
  br label %4738

4692:                                             ; preds = %4683
  %4693 = ptrtoint i32* %4684 to i64
  %4694 = bitcast i32** %3 to i64*
  %4695 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4696 = load i64, i64* %4695, align 8
  %4697 = sub i64 %4693, %4696
  %4698 = ashr exact i64 %4697, 2
  %4699 = add nsw i64 %4698, 1
  %4700 = icmp ugt i64 %4699, 4611686018427387903
  br i1 %4700, label %4701, label %4703

4701:                                             ; preds = %4692
  %4702 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4702) #11
  unreachable

4703:                                             ; preds = %4692
  %4704 = bitcast i32** %4 to i64*
  %4705 = sub i64 %4687, %4696
  %4706 = ashr exact i64 %4705, 2
  %4707 = icmp ult i64 %4706, 2305843009213693951
  br i1 %4707, label %4708, label %4716

4708:                                             ; preds = %4703
  %4709 = ashr exact i64 %4705, 1
  %4710 = icmp ult i64 %4709, %4699
  %4711 = select i1 %4710, i64 %4699, i64 %4709
  %4712 = icmp eq i64 %4711, 0
  br i1 %4712, label %4721, label %4713

4713:                                             ; preds = %4708
  %4714 = icmp ugt i64 %4711, 4611686018427387903
  br i1 %4714, label %4715, label %4716

4715:                                             ; preds = %4713
  tail call void @abort() #11
  unreachable

4716:                                             ; preds = %4713, %4703
  %4717 = phi i64 [ %4711, %4713 ], [ 4611686018427387903, %4703 ]
  %4718 = shl i64 %4717, 2
  %4719 = tail call i8* @_Znwm(i64 %4718) #10
  %4720 = bitcast i8* %4719 to i32*
  br label %4721

4721:                                             ; preds = %4716, %4708
  %4722 = phi i64 [ %4717, %4716 ], [ 0, %4708 ]
  %4723 = phi i8* [ %4719, %4716 ], [ null, %4708 ]
  %4724 = phi i32* [ %4720, %4716 ], [ null, %4708 ]
  %4725 = getelementptr inbounds i32, i32* %4724, i64 %4698
  %4726 = getelementptr inbounds i32, i32* %4724, i64 %4722
  %4727 = ptrtoint i32* %4726 to i64
  store i32 80, i32* %4725, align 4
  %4728 = getelementptr inbounds i32, i32* %4725, i64 1
  %4729 = ptrtoint i32* %4728 to i64
  %4730 = ptrtoint i32* %4724 to i64
  %4731 = icmp sgt i64 %4697, 0
  br i1 %4731, label %4732, label %4734

4732:                                             ; preds = %4721
  %4733 = inttoptr i64 %4696 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4723, i8* align 4 %4733, i64 %4697, i1 false) #9
  br label %4734

4734:                                             ; preds = %4732, %4721
  store i64 %4730, i64* %4695, align 8
  store i64 %4729, i64* %4694, align 8
  store i64 %4727, i64* %4704, align 8
  %4735 = icmp eq i64 %4696, 0
  br i1 %4735, label %4738, label %4736

4736:                                             ; preds = %4734
  %4737 = inttoptr i64 %4696 to i8*
  tail call void @_ZdlPv(i8* %4737) #10
  br label %4738

4738:                                             ; preds = %4736, %4734, %4688, %4679
  %4739 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 81
  %4740 = load i8, i8* %4739, align 1, !range !2
  %4741 = icmp eq i8 %4740, 0
  br i1 %4741, label %4797, label %4742

4742:                                             ; preds = %4738
  %4743 = load i32*, i32** %3, align 8
  %4744 = load i32*, i32** %4, align 8
  %4745 = icmp ult i32* %4743, %4744
  %4746 = ptrtoint i32* %4744 to i64
  br i1 %4745, label %4747, label %4751

4747:                                             ; preds = %4742
  store i32 81, i32* %4743, align 4
  %4748 = getelementptr inbounds i32, i32* %4743, i64 1
  %4749 = ptrtoint i32* %4748 to i64
  %4750 = bitcast i32** %3 to i64*
  store i64 %4749, i64* %4750, align 8
  br label %4797

4751:                                             ; preds = %4742
  %4752 = ptrtoint i32* %4743 to i64
  %4753 = bitcast i32** %3 to i64*
  %4754 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4755 = load i64, i64* %4754, align 8
  %4756 = sub i64 %4752, %4755
  %4757 = ashr exact i64 %4756, 2
  %4758 = add nsw i64 %4757, 1
  %4759 = icmp ugt i64 %4758, 4611686018427387903
  br i1 %4759, label %4760, label %4762

4760:                                             ; preds = %4751
  %4761 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4761) #11
  unreachable

4762:                                             ; preds = %4751
  %4763 = bitcast i32** %4 to i64*
  %4764 = sub i64 %4746, %4755
  %4765 = ashr exact i64 %4764, 2
  %4766 = icmp ult i64 %4765, 2305843009213693951
  br i1 %4766, label %4767, label %4775

4767:                                             ; preds = %4762
  %4768 = ashr exact i64 %4764, 1
  %4769 = icmp ult i64 %4768, %4758
  %4770 = select i1 %4769, i64 %4758, i64 %4768
  %4771 = icmp eq i64 %4770, 0
  br i1 %4771, label %4780, label %4772

4772:                                             ; preds = %4767
  %4773 = icmp ugt i64 %4770, 4611686018427387903
  br i1 %4773, label %4774, label %4775

4774:                                             ; preds = %4772
  tail call void @abort() #11
  unreachable

4775:                                             ; preds = %4772, %4762
  %4776 = phi i64 [ %4770, %4772 ], [ 4611686018427387903, %4762 ]
  %4777 = shl i64 %4776, 2
  %4778 = tail call i8* @_Znwm(i64 %4777) #10
  %4779 = bitcast i8* %4778 to i32*
  br label %4780

4780:                                             ; preds = %4775, %4767
  %4781 = phi i64 [ %4776, %4775 ], [ 0, %4767 ]
  %4782 = phi i8* [ %4778, %4775 ], [ null, %4767 ]
  %4783 = phi i32* [ %4779, %4775 ], [ null, %4767 ]
  %4784 = getelementptr inbounds i32, i32* %4783, i64 %4757
  %4785 = getelementptr inbounds i32, i32* %4783, i64 %4781
  %4786 = ptrtoint i32* %4785 to i64
  store i32 81, i32* %4784, align 4
  %4787 = getelementptr inbounds i32, i32* %4784, i64 1
  %4788 = ptrtoint i32* %4787 to i64
  %4789 = ptrtoint i32* %4783 to i64
  %4790 = icmp sgt i64 %4756, 0
  br i1 %4790, label %4791, label %4793

4791:                                             ; preds = %4780
  %4792 = inttoptr i64 %4755 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4782, i8* align 4 %4792, i64 %4756, i1 false) #9
  br label %4793

4793:                                             ; preds = %4791, %4780
  store i64 %4789, i64* %4754, align 8
  store i64 %4788, i64* %4753, align 8
  store i64 %4786, i64* %4763, align 8
  %4794 = icmp eq i64 %4755, 0
  br i1 %4794, label %4797, label %4795

4795:                                             ; preds = %4793
  %4796 = inttoptr i64 %4755 to i8*
  tail call void @_ZdlPv(i8* %4796) #10
  br label %4797

4797:                                             ; preds = %4795, %4793, %4747, %4738
  %4798 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 82
  %4799 = load i8, i8* %4798, align 2, !range !2
  %4800 = icmp eq i8 %4799, 0
  br i1 %4800, label %4856, label %4801

4801:                                             ; preds = %4797
  %4802 = load i32*, i32** %3, align 8
  %4803 = load i32*, i32** %4, align 8
  %4804 = icmp ult i32* %4802, %4803
  %4805 = ptrtoint i32* %4803 to i64
  br i1 %4804, label %4806, label %4810

4806:                                             ; preds = %4801
  store i32 82, i32* %4802, align 4
  %4807 = getelementptr inbounds i32, i32* %4802, i64 1
  %4808 = ptrtoint i32* %4807 to i64
  %4809 = bitcast i32** %3 to i64*
  store i64 %4808, i64* %4809, align 8
  br label %4856

4810:                                             ; preds = %4801
  %4811 = ptrtoint i32* %4802 to i64
  %4812 = bitcast i32** %3 to i64*
  %4813 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4814 = load i64, i64* %4813, align 8
  %4815 = sub i64 %4811, %4814
  %4816 = ashr exact i64 %4815, 2
  %4817 = add nsw i64 %4816, 1
  %4818 = icmp ugt i64 %4817, 4611686018427387903
  br i1 %4818, label %4819, label %4821

4819:                                             ; preds = %4810
  %4820 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4820) #11
  unreachable

4821:                                             ; preds = %4810
  %4822 = bitcast i32** %4 to i64*
  %4823 = sub i64 %4805, %4814
  %4824 = ashr exact i64 %4823, 2
  %4825 = icmp ult i64 %4824, 2305843009213693951
  br i1 %4825, label %4826, label %4834

4826:                                             ; preds = %4821
  %4827 = ashr exact i64 %4823, 1
  %4828 = icmp ult i64 %4827, %4817
  %4829 = select i1 %4828, i64 %4817, i64 %4827
  %4830 = icmp eq i64 %4829, 0
  br i1 %4830, label %4839, label %4831

4831:                                             ; preds = %4826
  %4832 = icmp ugt i64 %4829, 4611686018427387903
  br i1 %4832, label %4833, label %4834

4833:                                             ; preds = %4831
  tail call void @abort() #11
  unreachable

4834:                                             ; preds = %4831, %4821
  %4835 = phi i64 [ %4829, %4831 ], [ 4611686018427387903, %4821 ]
  %4836 = shl i64 %4835, 2
  %4837 = tail call i8* @_Znwm(i64 %4836) #10
  %4838 = bitcast i8* %4837 to i32*
  br label %4839

4839:                                             ; preds = %4834, %4826
  %4840 = phi i64 [ %4835, %4834 ], [ 0, %4826 ]
  %4841 = phi i8* [ %4837, %4834 ], [ null, %4826 ]
  %4842 = phi i32* [ %4838, %4834 ], [ null, %4826 ]
  %4843 = getelementptr inbounds i32, i32* %4842, i64 %4816
  %4844 = getelementptr inbounds i32, i32* %4842, i64 %4840
  %4845 = ptrtoint i32* %4844 to i64
  store i32 82, i32* %4843, align 4
  %4846 = getelementptr inbounds i32, i32* %4843, i64 1
  %4847 = ptrtoint i32* %4846 to i64
  %4848 = ptrtoint i32* %4842 to i64
  %4849 = icmp sgt i64 %4815, 0
  br i1 %4849, label %4850, label %4852

4850:                                             ; preds = %4839
  %4851 = inttoptr i64 %4814 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4841, i8* align 4 %4851, i64 %4815, i1 false) #9
  br label %4852

4852:                                             ; preds = %4850, %4839
  store i64 %4848, i64* %4813, align 8
  store i64 %4847, i64* %4812, align 8
  store i64 %4845, i64* %4822, align 8
  %4853 = icmp eq i64 %4814, 0
  br i1 %4853, label %4856, label %4854

4854:                                             ; preds = %4852
  %4855 = inttoptr i64 %4814 to i8*
  tail call void @_ZdlPv(i8* %4855) #10
  br label %4856

4856:                                             ; preds = %4854, %4852, %4806, %4797
  %4857 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 83
  %4858 = load i8, i8* %4857, align 1, !range !2
  %4859 = icmp eq i8 %4858, 0
  br i1 %4859, label %4915, label %4860

4860:                                             ; preds = %4856
  %4861 = load i32*, i32** %3, align 8
  %4862 = load i32*, i32** %4, align 8
  %4863 = icmp ult i32* %4861, %4862
  %4864 = ptrtoint i32* %4862 to i64
  br i1 %4863, label %4865, label %4869

4865:                                             ; preds = %4860
  store i32 83, i32* %4861, align 4
  %4866 = getelementptr inbounds i32, i32* %4861, i64 1
  %4867 = ptrtoint i32* %4866 to i64
  %4868 = bitcast i32** %3 to i64*
  store i64 %4867, i64* %4868, align 8
  br label %4915

4869:                                             ; preds = %4860
  %4870 = ptrtoint i32* %4861 to i64
  %4871 = bitcast i32** %3 to i64*
  %4872 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4873 = load i64, i64* %4872, align 8
  %4874 = sub i64 %4870, %4873
  %4875 = ashr exact i64 %4874, 2
  %4876 = add nsw i64 %4875, 1
  %4877 = icmp ugt i64 %4876, 4611686018427387903
  br i1 %4877, label %4878, label %4880

4878:                                             ; preds = %4869
  %4879 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4879) #11
  unreachable

4880:                                             ; preds = %4869
  %4881 = bitcast i32** %4 to i64*
  %4882 = sub i64 %4864, %4873
  %4883 = ashr exact i64 %4882, 2
  %4884 = icmp ult i64 %4883, 2305843009213693951
  br i1 %4884, label %4885, label %4893

4885:                                             ; preds = %4880
  %4886 = ashr exact i64 %4882, 1
  %4887 = icmp ult i64 %4886, %4876
  %4888 = select i1 %4887, i64 %4876, i64 %4886
  %4889 = icmp eq i64 %4888, 0
  br i1 %4889, label %4898, label %4890

4890:                                             ; preds = %4885
  %4891 = icmp ugt i64 %4888, 4611686018427387903
  br i1 %4891, label %4892, label %4893

4892:                                             ; preds = %4890
  tail call void @abort() #11
  unreachable

4893:                                             ; preds = %4890, %4880
  %4894 = phi i64 [ %4888, %4890 ], [ 4611686018427387903, %4880 ]
  %4895 = shl i64 %4894, 2
  %4896 = tail call i8* @_Znwm(i64 %4895) #10
  %4897 = bitcast i8* %4896 to i32*
  br label %4898

4898:                                             ; preds = %4893, %4885
  %4899 = phi i64 [ %4894, %4893 ], [ 0, %4885 ]
  %4900 = phi i8* [ %4896, %4893 ], [ null, %4885 ]
  %4901 = phi i32* [ %4897, %4893 ], [ null, %4885 ]
  %4902 = getelementptr inbounds i32, i32* %4901, i64 %4875
  %4903 = getelementptr inbounds i32, i32* %4901, i64 %4899
  %4904 = ptrtoint i32* %4903 to i64
  store i32 83, i32* %4902, align 4
  %4905 = getelementptr inbounds i32, i32* %4902, i64 1
  %4906 = ptrtoint i32* %4905 to i64
  %4907 = ptrtoint i32* %4901 to i64
  %4908 = icmp sgt i64 %4874, 0
  br i1 %4908, label %4909, label %4911

4909:                                             ; preds = %4898
  %4910 = inttoptr i64 %4873 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4900, i8* align 4 %4910, i64 %4874, i1 false) #9
  br label %4911

4911:                                             ; preds = %4909, %4898
  store i64 %4907, i64* %4872, align 8
  store i64 %4906, i64* %4871, align 8
  store i64 %4904, i64* %4881, align 8
  %4912 = icmp eq i64 %4873, 0
  br i1 %4912, label %4915, label %4913

4913:                                             ; preds = %4911
  %4914 = inttoptr i64 %4873 to i8*
  tail call void @_ZdlPv(i8* %4914) #10
  br label %4915

4915:                                             ; preds = %4913, %4911, %4865, %4856
  %4916 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 84
  %4917 = load i8, i8* %4916, align 4, !range !2
  %4918 = icmp eq i8 %4917, 0
  br i1 %4918, label %4974, label %4919

4919:                                             ; preds = %4915
  %4920 = load i32*, i32** %3, align 8
  %4921 = load i32*, i32** %4, align 8
  %4922 = icmp ult i32* %4920, %4921
  %4923 = ptrtoint i32* %4921 to i64
  br i1 %4922, label %4924, label %4928

4924:                                             ; preds = %4919
  store i32 84, i32* %4920, align 4
  %4925 = getelementptr inbounds i32, i32* %4920, i64 1
  %4926 = ptrtoint i32* %4925 to i64
  %4927 = bitcast i32** %3 to i64*
  store i64 %4926, i64* %4927, align 8
  br label %4974

4928:                                             ; preds = %4919
  %4929 = ptrtoint i32* %4920 to i64
  %4930 = bitcast i32** %3 to i64*
  %4931 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4932 = load i64, i64* %4931, align 8
  %4933 = sub i64 %4929, %4932
  %4934 = ashr exact i64 %4933, 2
  %4935 = add nsw i64 %4934, 1
  %4936 = icmp ugt i64 %4935, 4611686018427387903
  br i1 %4936, label %4937, label %4939

4937:                                             ; preds = %4928
  %4938 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4938) #11
  unreachable

4939:                                             ; preds = %4928
  %4940 = bitcast i32** %4 to i64*
  %4941 = sub i64 %4923, %4932
  %4942 = ashr exact i64 %4941, 2
  %4943 = icmp ult i64 %4942, 2305843009213693951
  br i1 %4943, label %4944, label %4952

4944:                                             ; preds = %4939
  %4945 = ashr exact i64 %4941, 1
  %4946 = icmp ult i64 %4945, %4935
  %4947 = select i1 %4946, i64 %4935, i64 %4945
  %4948 = icmp eq i64 %4947, 0
  br i1 %4948, label %4957, label %4949

4949:                                             ; preds = %4944
  %4950 = icmp ugt i64 %4947, 4611686018427387903
  br i1 %4950, label %4951, label %4952

4951:                                             ; preds = %4949
  tail call void @abort() #11
  unreachable

4952:                                             ; preds = %4949, %4939
  %4953 = phi i64 [ %4947, %4949 ], [ 4611686018427387903, %4939 ]
  %4954 = shl i64 %4953, 2
  %4955 = tail call i8* @_Znwm(i64 %4954) #10
  %4956 = bitcast i8* %4955 to i32*
  br label %4957

4957:                                             ; preds = %4952, %4944
  %4958 = phi i64 [ %4953, %4952 ], [ 0, %4944 ]
  %4959 = phi i8* [ %4955, %4952 ], [ null, %4944 ]
  %4960 = phi i32* [ %4956, %4952 ], [ null, %4944 ]
  %4961 = getelementptr inbounds i32, i32* %4960, i64 %4934
  %4962 = getelementptr inbounds i32, i32* %4960, i64 %4958
  %4963 = ptrtoint i32* %4962 to i64
  store i32 84, i32* %4961, align 4
  %4964 = getelementptr inbounds i32, i32* %4961, i64 1
  %4965 = ptrtoint i32* %4964 to i64
  %4966 = ptrtoint i32* %4960 to i64
  %4967 = icmp sgt i64 %4933, 0
  br i1 %4967, label %4968, label %4970

4968:                                             ; preds = %4957
  %4969 = inttoptr i64 %4932 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4959, i8* align 4 %4969, i64 %4933, i1 false) #9
  br label %4970

4970:                                             ; preds = %4968, %4957
  store i64 %4966, i64* %4931, align 8
  store i64 %4965, i64* %4930, align 8
  store i64 %4963, i64* %4940, align 8
  %4971 = icmp eq i64 %4932, 0
  br i1 %4971, label %4974, label %4972

4972:                                             ; preds = %4970
  %4973 = inttoptr i64 %4932 to i8*
  tail call void @_ZdlPv(i8* %4973) #10
  br label %4974

4974:                                             ; preds = %4972, %4970, %4924, %4915
  %4975 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 85
  %4976 = load i8, i8* %4975, align 1, !range !2
  %4977 = icmp eq i8 %4976, 0
  br i1 %4977, label %5033, label %4978

4978:                                             ; preds = %4974
  %4979 = load i32*, i32** %3, align 8
  %4980 = load i32*, i32** %4, align 8
  %4981 = icmp ult i32* %4979, %4980
  %4982 = ptrtoint i32* %4980 to i64
  br i1 %4981, label %4983, label %4987

4983:                                             ; preds = %4978
  store i32 85, i32* %4979, align 4
  %4984 = getelementptr inbounds i32, i32* %4979, i64 1
  %4985 = ptrtoint i32* %4984 to i64
  %4986 = bitcast i32** %3 to i64*
  store i64 %4985, i64* %4986, align 8
  br label %5033

4987:                                             ; preds = %4978
  %4988 = ptrtoint i32* %4979 to i64
  %4989 = bitcast i32** %3 to i64*
  %4990 = bitcast %"class.std::__1::vector"* %0 to i64*
  %4991 = load i64, i64* %4990, align 8
  %4992 = sub i64 %4988, %4991
  %4993 = ashr exact i64 %4992, 2
  %4994 = add nsw i64 %4993, 1
  %4995 = icmp ugt i64 %4994, 4611686018427387903
  br i1 %4995, label %4996, label %4998

4996:                                             ; preds = %4987
  %4997 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %4997) #11
  unreachable

4998:                                             ; preds = %4987
  %4999 = bitcast i32** %4 to i64*
  %5000 = sub i64 %4982, %4991
  %5001 = ashr exact i64 %5000, 2
  %5002 = icmp ult i64 %5001, 2305843009213693951
  br i1 %5002, label %5003, label %5011

5003:                                             ; preds = %4998
  %5004 = ashr exact i64 %5000, 1
  %5005 = icmp ult i64 %5004, %4994
  %5006 = select i1 %5005, i64 %4994, i64 %5004
  %5007 = icmp eq i64 %5006, 0
  br i1 %5007, label %5016, label %5008

5008:                                             ; preds = %5003
  %5009 = icmp ugt i64 %5006, 4611686018427387903
  br i1 %5009, label %5010, label %5011

5010:                                             ; preds = %5008
  tail call void @abort() #11
  unreachable

5011:                                             ; preds = %5008, %4998
  %5012 = phi i64 [ %5006, %5008 ], [ 4611686018427387903, %4998 ]
  %5013 = shl i64 %5012, 2
  %5014 = tail call i8* @_Znwm(i64 %5013) #10
  %5015 = bitcast i8* %5014 to i32*
  br label %5016

5016:                                             ; preds = %5011, %5003
  %5017 = phi i64 [ %5012, %5011 ], [ 0, %5003 ]
  %5018 = phi i8* [ %5014, %5011 ], [ null, %5003 ]
  %5019 = phi i32* [ %5015, %5011 ], [ null, %5003 ]
  %5020 = getelementptr inbounds i32, i32* %5019, i64 %4993
  %5021 = getelementptr inbounds i32, i32* %5019, i64 %5017
  %5022 = ptrtoint i32* %5021 to i64
  store i32 85, i32* %5020, align 4
  %5023 = getelementptr inbounds i32, i32* %5020, i64 1
  %5024 = ptrtoint i32* %5023 to i64
  %5025 = ptrtoint i32* %5019 to i64
  %5026 = icmp sgt i64 %4992, 0
  br i1 %5026, label %5027, label %5029

5027:                                             ; preds = %5016
  %5028 = inttoptr i64 %4991 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5018, i8* align 4 %5028, i64 %4992, i1 false) #9
  br label %5029

5029:                                             ; preds = %5027, %5016
  store i64 %5025, i64* %4990, align 8
  store i64 %5024, i64* %4989, align 8
  store i64 %5022, i64* %4999, align 8
  %5030 = icmp eq i64 %4991, 0
  br i1 %5030, label %5033, label %5031

5031:                                             ; preds = %5029
  %5032 = inttoptr i64 %4991 to i8*
  tail call void @_ZdlPv(i8* %5032) #10
  br label %5033

5033:                                             ; preds = %5031, %5029, %4983, %4974
  %5034 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 86
  %5035 = load i8, i8* %5034, align 2, !range !2
  %5036 = icmp eq i8 %5035, 0
  br i1 %5036, label %5092, label %5037

5037:                                             ; preds = %5033
  %5038 = load i32*, i32** %3, align 8
  %5039 = load i32*, i32** %4, align 8
  %5040 = icmp ult i32* %5038, %5039
  %5041 = ptrtoint i32* %5039 to i64
  br i1 %5040, label %5042, label %5046

5042:                                             ; preds = %5037
  store i32 86, i32* %5038, align 4
  %5043 = getelementptr inbounds i32, i32* %5038, i64 1
  %5044 = ptrtoint i32* %5043 to i64
  %5045 = bitcast i32** %3 to i64*
  store i64 %5044, i64* %5045, align 8
  br label %5092

5046:                                             ; preds = %5037
  %5047 = ptrtoint i32* %5038 to i64
  %5048 = bitcast i32** %3 to i64*
  %5049 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5050 = load i64, i64* %5049, align 8
  %5051 = sub i64 %5047, %5050
  %5052 = ashr exact i64 %5051, 2
  %5053 = add nsw i64 %5052, 1
  %5054 = icmp ugt i64 %5053, 4611686018427387903
  br i1 %5054, label %5055, label %5057

5055:                                             ; preds = %5046
  %5056 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5056) #11
  unreachable

5057:                                             ; preds = %5046
  %5058 = bitcast i32** %4 to i64*
  %5059 = sub i64 %5041, %5050
  %5060 = ashr exact i64 %5059, 2
  %5061 = icmp ult i64 %5060, 2305843009213693951
  br i1 %5061, label %5062, label %5070

5062:                                             ; preds = %5057
  %5063 = ashr exact i64 %5059, 1
  %5064 = icmp ult i64 %5063, %5053
  %5065 = select i1 %5064, i64 %5053, i64 %5063
  %5066 = icmp eq i64 %5065, 0
  br i1 %5066, label %5075, label %5067

5067:                                             ; preds = %5062
  %5068 = icmp ugt i64 %5065, 4611686018427387903
  br i1 %5068, label %5069, label %5070

5069:                                             ; preds = %5067
  tail call void @abort() #11
  unreachable

5070:                                             ; preds = %5067, %5057
  %5071 = phi i64 [ %5065, %5067 ], [ 4611686018427387903, %5057 ]
  %5072 = shl i64 %5071, 2
  %5073 = tail call i8* @_Znwm(i64 %5072) #10
  %5074 = bitcast i8* %5073 to i32*
  br label %5075

5075:                                             ; preds = %5070, %5062
  %5076 = phi i64 [ %5071, %5070 ], [ 0, %5062 ]
  %5077 = phi i8* [ %5073, %5070 ], [ null, %5062 ]
  %5078 = phi i32* [ %5074, %5070 ], [ null, %5062 ]
  %5079 = getelementptr inbounds i32, i32* %5078, i64 %5052
  %5080 = getelementptr inbounds i32, i32* %5078, i64 %5076
  %5081 = ptrtoint i32* %5080 to i64
  store i32 86, i32* %5079, align 4
  %5082 = getelementptr inbounds i32, i32* %5079, i64 1
  %5083 = ptrtoint i32* %5082 to i64
  %5084 = ptrtoint i32* %5078 to i64
  %5085 = icmp sgt i64 %5051, 0
  br i1 %5085, label %5086, label %5088

5086:                                             ; preds = %5075
  %5087 = inttoptr i64 %5050 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5077, i8* align 4 %5087, i64 %5051, i1 false) #9
  br label %5088

5088:                                             ; preds = %5086, %5075
  store i64 %5084, i64* %5049, align 8
  store i64 %5083, i64* %5048, align 8
  store i64 %5081, i64* %5058, align 8
  %5089 = icmp eq i64 %5050, 0
  br i1 %5089, label %5092, label %5090

5090:                                             ; preds = %5088
  %5091 = inttoptr i64 %5050 to i8*
  tail call void @_ZdlPv(i8* %5091) #10
  br label %5092

5092:                                             ; preds = %5090, %5088, %5042, %5033
  %5093 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 87
  %5094 = load i8, i8* %5093, align 1, !range !2
  %5095 = icmp eq i8 %5094, 0
  br i1 %5095, label %5151, label %5096

5096:                                             ; preds = %5092
  %5097 = load i32*, i32** %3, align 8
  %5098 = load i32*, i32** %4, align 8
  %5099 = icmp ult i32* %5097, %5098
  %5100 = ptrtoint i32* %5098 to i64
  br i1 %5099, label %5101, label %5105

5101:                                             ; preds = %5096
  store i32 87, i32* %5097, align 4
  %5102 = getelementptr inbounds i32, i32* %5097, i64 1
  %5103 = ptrtoint i32* %5102 to i64
  %5104 = bitcast i32** %3 to i64*
  store i64 %5103, i64* %5104, align 8
  br label %5151

5105:                                             ; preds = %5096
  %5106 = ptrtoint i32* %5097 to i64
  %5107 = bitcast i32** %3 to i64*
  %5108 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5109 = load i64, i64* %5108, align 8
  %5110 = sub i64 %5106, %5109
  %5111 = ashr exact i64 %5110, 2
  %5112 = add nsw i64 %5111, 1
  %5113 = icmp ugt i64 %5112, 4611686018427387903
  br i1 %5113, label %5114, label %5116

5114:                                             ; preds = %5105
  %5115 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5115) #11
  unreachable

5116:                                             ; preds = %5105
  %5117 = bitcast i32** %4 to i64*
  %5118 = sub i64 %5100, %5109
  %5119 = ashr exact i64 %5118, 2
  %5120 = icmp ult i64 %5119, 2305843009213693951
  br i1 %5120, label %5121, label %5129

5121:                                             ; preds = %5116
  %5122 = ashr exact i64 %5118, 1
  %5123 = icmp ult i64 %5122, %5112
  %5124 = select i1 %5123, i64 %5112, i64 %5122
  %5125 = icmp eq i64 %5124, 0
  br i1 %5125, label %5134, label %5126

5126:                                             ; preds = %5121
  %5127 = icmp ugt i64 %5124, 4611686018427387903
  br i1 %5127, label %5128, label %5129

5128:                                             ; preds = %5126
  tail call void @abort() #11
  unreachable

5129:                                             ; preds = %5126, %5116
  %5130 = phi i64 [ %5124, %5126 ], [ 4611686018427387903, %5116 ]
  %5131 = shl i64 %5130, 2
  %5132 = tail call i8* @_Znwm(i64 %5131) #10
  %5133 = bitcast i8* %5132 to i32*
  br label %5134

5134:                                             ; preds = %5129, %5121
  %5135 = phi i64 [ %5130, %5129 ], [ 0, %5121 ]
  %5136 = phi i8* [ %5132, %5129 ], [ null, %5121 ]
  %5137 = phi i32* [ %5133, %5129 ], [ null, %5121 ]
  %5138 = getelementptr inbounds i32, i32* %5137, i64 %5111
  %5139 = getelementptr inbounds i32, i32* %5137, i64 %5135
  %5140 = ptrtoint i32* %5139 to i64
  store i32 87, i32* %5138, align 4
  %5141 = getelementptr inbounds i32, i32* %5138, i64 1
  %5142 = ptrtoint i32* %5141 to i64
  %5143 = ptrtoint i32* %5137 to i64
  %5144 = icmp sgt i64 %5110, 0
  br i1 %5144, label %5145, label %5147

5145:                                             ; preds = %5134
  %5146 = inttoptr i64 %5109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5136, i8* align 4 %5146, i64 %5110, i1 false) #9
  br label %5147

5147:                                             ; preds = %5145, %5134
  store i64 %5143, i64* %5108, align 8
  store i64 %5142, i64* %5107, align 8
  store i64 %5140, i64* %5117, align 8
  %5148 = icmp eq i64 %5109, 0
  br i1 %5148, label %5151, label %5149

5149:                                             ; preds = %5147
  %5150 = inttoptr i64 %5109 to i8*
  tail call void @_ZdlPv(i8* %5150) #10
  br label %5151

5151:                                             ; preds = %5149, %5147, %5101, %5092
  %5152 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 88
  %5153 = load i8, i8* %5152, align 4, !range !2
  %5154 = icmp eq i8 %5153, 0
  br i1 %5154, label %5210, label %5155

5155:                                             ; preds = %5151
  %5156 = load i32*, i32** %3, align 8
  %5157 = load i32*, i32** %4, align 8
  %5158 = icmp ult i32* %5156, %5157
  %5159 = ptrtoint i32* %5157 to i64
  br i1 %5158, label %5160, label %5164

5160:                                             ; preds = %5155
  store i32 88, i32* %5156, align 4
  %5161 = getelementptr inbounds i32, i32* %5156, i64 1
  %5162 = ptrtoint i32* %5161 to i64
  %5163 = bitcast i32** %3 to i64*
  store i64 %5162, i64* %5163, align 8
  br label %5210

5164:                                             ; preds = %5155
  %5165 = ptrtoint i32* %5156 to i64
  %5166 = bitcast i32** %3 to i64*
  %5167 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5168 = load i64, i64* %5167, align 8
  %5169 = sub i64 %5165, %5168
  %5170 = ashr exact i64 %5169, 2
  %5171 = add nsw i64 %5170, 1
  %5172 = icmp ugt i64 %5171, 4611686018427387903
  br i1 %5172, label %5173, label %5175

5173:                                             ; preds = %5164
  %5174 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5174) #11
  unreachable

5175:                                             ; preds = %5164
  %5176 = bitcast i32** %4 to i64*
  %5177 = sub i64 %5159, %5168
  %5178 = ashr exact i64 %5177, 2
  %5179 = icmp ult i64 %5178, 2305843009213693951
  br i1 %5179, label %5180, label %5188

5180:                                             ; preds = %5175
  %5181 = ashr exact i64 %5177, 1
  %5182 = icmp ult i64 %5181, %5171
  %5183 = select i1 %5182, i64 %5171, i64 %5181
  %5184 = icmp eq i64 %5183, 0
  br i1 %5184, label %5193, label %5185

5185:                                             ; preds = %5180
  %5186 = icmp ugt i64 %5183, 4611686018427387903
  br i1 %5186, label %5187, label %5188

5187:                                             ; preds = %5185
  tail call void @abort() #11
  unreachable

5188:                                             ; preds = %5185, %5175
  %5189 = phi i64 [ %5183, %5185 ], [ 4611686018427387903, %5175 ]
  %5190 = shl i64 %5189, 2
  %5191 = tail call i8* @_Znwm(i64 %5190) #10
  %5192 = bitcast i8* %5191 to i32*
  br label %5193

5193:                                             ; preds = %5188, %5180
  %5194 = phi i64 [ %5189, %5188 ], [ 0, %5180 ]
  %5195 = phi i8* [ %5191, %5188 ], [ null, %5180 ]
  %5196 = phi i32* [ %5192, %5188 ], [ null, %5180 ]
  %5197 = getelementptr inbounds i32, i32* %5196, i64 %5170
  %5198 = getelementptr inbounds i32, i32* %5196, i64 %5194
  %5199 = ptrtoint i32* %5198 to i64
  store i32 88, i32* %5197, align 4
  %5200 = getelementptr inbounds i32, i32* %5197, i64 1
  %5201 = ptrtoint i32* %5200 to i64
  %5202 = ptrtoint i32* %5196 to i64
  %5203 = icmp sgt i64 %5169, 0
  br i1 %5203, label %5204, label %5206

5204:                                             ; preds = %5193
  %5205 = inttoptr i64 %5168 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5195, i8* align 4 %5205, i64 %5169, i1 false) #9
  br label %5206

5206:                                             ; preds = %5204, %5193
  store i64 %5202, i64* %5167, align 8
  store i64 %5201, i64* %5166, align 8
  store i64 %5199, i64* %5176, align 8
  %5207 = icmp eq i64 %5168, 0
  br i1 %5207, label %5210, label %5208

5208:                                             ; preds = %5206
  %5209 = inttoptr i64 %5168 to i8*
  tail call void @_ZdlPv(i8* %5209) #10
  br label %5210

5210:                                             ; preds = %5208, %5206, %5160, %5151
  %5211 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 89
  %5212 = load i8, i8* %5211, align 1, !range !2
  %5213 = icmp eq i8 %5212, 0
  br i1 %5213, label %5269, label %5214

5214:                                             ; preds = %5210
  %5215 = load i32*, i32** %3, align 8
  %5216 = load i32*, i32** %4, align 8
  %5217 = icmp ult i32* %5215, %5216
  %5218 = ptrtoint i32* %5216 to i64
  br i1 %5217, label %5219, label %5223

5219:                                             ; preds = %5214
  store i32 89, i32* %5215, align 4
  %5220 = getelementptr inbounds i32, i32* %5215, i64 1
  %5221 = ptrtoint i32* %5220 to i64
  %5222 = bitcast i32** %3 to i64*
  store i64 %5221, i64* %5222, align 8
  br label %5269

5223:                                             ; preds = %5214
  %5224 = ptrtoint i32* %5215 to i64
  %5225 = bitcast i32** %3 to i64*
  %5226 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5227 = load i64, i64* %5226, align 8
  %5228 = sub i64 %5224, %5227
  %5229 = ashr exact i64 %5228, 2
  %5230 = add nsw i64 %5229, 1
  %5231 = icmp ugt i64 %5230, 4611686018427387903
  br i1 %5231, label %5232, label %5234

5232:                                             ; preds = %5223
  %5233 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5233) #11
  unreachable

5234:                                             ; preds = %5223
  %5235 = bitcast i32** %4 to i64*
  %5236 = sub i64 %5218, %5227
  %5237 = ashr exact i64 %5236, 2
  %5238 = icmp ult i64 %5237, 2305843009213693951
  br i1 %5238, label %5239, label %5247

5239:                                             ; preds = %5234
  %5240 = ashr exact i64 %5236, 1
  %5241 = icmp ult i64 %5240, %5230
  %5242 = select i1 %5241, i64 %5230, i64 %5240
  %5243 = icmp eq i64 %5242, 0
  br i1 %5243, label %5252, label %5244

5244:                                             ; preds = %5239
  %5245 = icmp ugt i64 %5242, 4611686018427387903
  br i1 %5245, label %5246, label %5247

5246:                                             ; preds = %5244
  tail call void @abort() #11
  unreachable

5247:                                             ; preds = %5244, %5234
  %5248 = phi i64 [ %5242, %5244 ], [ 4611686018427387903, %5234 ]
  %5249 = shl i64 %5248, 2
  %5250 = tail call i8* @_Znwm(i64 %5249) #10
  %5251 = bitcast i8* %5250 to i32*
  br label %5252

5252:                                             ; preds = %5247, %5239
  %5253 = phi i64 [ %5248, %5247 ], [ 0, %5239 ]
  %5254 = phi i8* [ %5250, %5247 ], [ null, %5239 ]
  %5255 = phi i32* [ %5251, %5247 ], [ null, %5239 ]
  %5256 = getelementptr inbounds i32, i32* %5255, i64 %5229
  %5257 = getelementptr inbounds i32, i32* %5255, i64 %5253
  %5258 = ptrtoint i32* %5257 to i64
  store i32 89, i32* %5256, align 4
  %5259 = getelementptr inbounds i32, i32* %5256, i64 1
  %5260 = ptrtoint i32* %5259 to i64
  %5261 = ptrtoint i32* %5255 to i64
  %5262 = icmp sgt i64 %5228, 0
  br i1 %5262, label %5263, label %5265

5263:                                             ; preds = %5252
  %5264 = inttoptr i64 %5227 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5254, i8* align 4 %5264, i64 %5228, i1 false) #9
  br label %5265

5265:                                             ; preds = %5263, %5252
  store i64 %5261, i64* %5226, align 8
  store i64 %5260, i64* %5225, align 8
  store i64 %5258, i64* %5235, align 8
  %5266 = icmp eq i64 %5227, 0
  br i1 %5266, label %5269, label %5267

5267:                                             ; preds = %5265
  %5268 = inttoptr i64 %5227 to i8*
  tail call void @_ZdlPv(i8* %5268) #10
  br label %5269

5269:                                             ; preds = %5267, %5265, %5219, %5210
  %5270 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 90
  %5271 = load i8, i8* %5270, align 2, !range !2
  %5272 = icmp eq i8 %5271, 0
  br i1 %5272, label %5328, label %5273

5273:                                             ; preds = %5269
  %5274 = load i32*, i32** %3, align 8
  %5275 = load i32*, i32** %4, align 8
  %5276 = icmp ult i32* %5274, %5275
  %5277 = ptrtoint i32* %5275 to i64
  br i1 %5276, label %5278, label %5282

5278:                                             ; preds = %5273
  store i32 90, i32* %5274, align 4
  %5279 = getelementptr inbounds i32, i32* %5274, i64 1
  %5280 = ptrtoint i32* %5279 to i64
  %5281 = bitcast i32** %3 to i64*
  store i64 %5280, i64* %5281, align 8
  br label %5328

5282:                                             ; preds = %5273
  %5283 = ptrtoint i32* %5274 to i64
  %5284 = bitcast i32** %3 to i64*
  %5285 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5286 = load i64, i64* %5285, align 8
  %5287 = sub i64 %5283, %5286
  %5288 = ashr exact i64 %5287, 2
  %5289 = add nsw i64 %5288, 1
  %5290 = icmp ugt i64 %5289, 4611686018427387903
  br i1 %5290, label %5291, label %5293

5291:                                             ; preds = %5282
  %5292 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5292) #11
  unreachable

5293:                                             ; preds = %5282
  %5294 = bitcast i32** %4 to i64*
  %5295 = sub i64 %5277, %5286
  %5296 = ashr exact i64 %5295, 2
  %5297 = icmp ult i64 %5296, 2305843009213693951
  br i1 %5297, label %5298, label %5306

5298:                                             ; preds = %5293
  %5299 = ashr exact i64 %5295, 1
  %5300 = icmp ult i64 %5299, %5289
  %5301 = select i1 %5300, i64 %5289, i64 %5299
  %5302 = icmp eq i64 %5301, 0
  br i1 %5302, label %5311, label %5303

5303:                                             ; preds = %5298
  %5304 = icmp ugt i64 %5301, 4611686018427387903
  br i1 %5304, label %5305, label %5306

5305:                                             ; preds = %5303
  tail call void @abort() #11
  unreachable

5306:                                             ; preds = %5303, %5293
  %5307 = phi i64 [ %5301, %5303 ], [ 4611686018427387903, %5293 ]
  %5308 = shl i64 %5307, 2
  %5309 = tail call i8* @_Znwm(i64 %5308) #10
  %5310 = bitcast i8* %5309 to i32*
  br label %5311

5311:                                             ; preds = %5306, %5298
  %5312 = phi i64 [ %5307, %5306 ], [ 0, %5298 ]
  %5313 = phi i8* [ %5309, %5306 ], [ null, %5298 ]
  %5314 = phi i32* [ %5310, %5306 ], [ null, %5298 ]
  %5315 = getelementptr inbounds i32, i32* %5314, i64 %5288
  %5316 = getelementptr inbounds i32, i32* %5314, i64 %5312
  %5317 = ptrtoint i32* %5316 to i64
  store i32 90, i32* %5315, align 4
  %5318 = getelementptr inbounds i32, i32* %5315, i64 1
  %5319 = ptrtoint i32* %5318 to i64
  %5320 = ptrtoint i32* %5314 to i64
  %5321 = icmp sgt i64 %5287, 0
  br i1 %5321, label %5322, label %5324

5322:                                             ; preds = %5311
  %5323 = inttoptr i64 %5286 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5313, i8* align 4 %5323, i64 %5287, i1 false) #9
  br label %5324

5324:                                             ; preds = %5322, %5311
  store i64 %5320, i64* %5285, align 8
  store i64 %5319, i64* %5284, align 8
  store i64 %5317, i64* %5294, align 8
  %5325 = icmp eq i64 %5286, 0
  br i1 %5325, label %5328, label %5326

5326:                                             ; preds = %5324
  %5327 = inttoptr i64 %5286 to i8*
  tail call void @_ZdlPv(i8* %5327) #10
  br label %5328

5328:                                             ; preds = %5326, %5324, %5278, %5269
  %5329 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 91
  %5330 = load i8, i8* %5329, align 1, !range !2
  %5331 = icmp eq i8 %5330, 0
  br i1 %5331, label %5387, label %5332

5332:                                             ; preds = %5328
  %5333 = load i32*, i32** %3, align 8
  %5334 = load i32*, i32** %4, align 8
  %5335 = icmp ult i32* %5333, %5334
  %5336 = ptrtoint i32* %5334 to i64
  br i1 %5335, label %5337, label %5341

5337:                                             ; preds = %5332
  store i32 91, i32* %5333, align 4
  %5338 = getelementptr inbounds i32, i32* %5333, i64 1
  %5339 = ptrtoint i32* %5338 to i64
  %5340 = bitcast i32** %3 to i64*
  store i64 %5339, i64* %5340, align 8
  br label %5387

5341:                                             ; preds = %5332
  %5342 = ptrtoint i32* %5333 to i64
  %5343 = bitcast i32** %3 to i64*
  %5344 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5345 = load i64, i64* %5344, align 8
  %5346 = sub i64 %5342, %5345
  %5347 = ashr exact i64 %5346, 2
  %5348 = add nsw i64 %5347, 1
  %5349 = icmp ugt i64 %5348, 4611686018427387903
  br i1 %5349, label %5350, label %5352

5350:                                             ; preds = %5341
  %5351 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5351) #11
  unreachable

5352:                                             ; preds = %5341
  %5353 = bitcast i32** %4 to i64*
  %5354 = sub i64 %5336, %5345
  %5355 = ashr exact i64 %5354, 2
  %5356 = icmp ult i64 %5355, 2305843009213693951
  br i1 %5356, label %5357, label %5365

5357:                                             ; preds = %5352
  %5358 = ashr exact i64 %5354, 1
  %5359 = icmp ult i64 %5358, %5348
  %5360 = select i1 %5359, i64 %5348, i64 %5358
  %5361 = icmp eq i64 %5360, 0
  br i1 %5361, label %5370, label %5362

5362:                                             ; preds = %5357
  %5363 = icmp ugt i64 %5360, 4611686018427387903
  br i1 %5363, label %5364, label %5365

5364:                                             ; preds = %5362
  tail call void @abort() #11
  unreachable

5365:                                             ; preds = %5362, %5352
  %5366 = phi i64 [ %5360, %5362 ], [ 4611686018427387903, %5352 ]
  %5367 = shl i64 %5366, 2
  %5368 = tail call i8* @_Znwm(i64 %5367) #10
  %5369 = bitcast i8* %5368 to i32*
  br label %5370

5370:                                             ; preds = %5365, %5357
  %5371 = phi i64 [ %5366, %5365 ], [ 0, %5357 ]
  %5372 = phi i8* [ %5368, %5365 ], [ null, %5357 ]
  %5373 = phi i32* [ %5369, %5365 ], [ null, %5357 ]
  %5374 = getelementptr inbounds i32, i32* %5373, i64 %5347
  %5375 = getelementptr inbounds i32, i32* %5373, i64 %5371
  %5376 = ptrtoint i32* %5375 to i64
  store i32 91, i32* %5374, align 4
  %5377 = getelementptr inbounds i32, i32* %5374, i64 1
  %5378 = ptrtoint i32* %5377 to i64
  %5379 = ptrtoint i32* %5373 to i64
  %5380 = icmp sgt i64 %5346, 0
  br i1 %5380, label %5381, label %5383

5381:                                             ; preds = %5370
  %5382 = inttoptr i64 %5345 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5372, i8* align 4 %5382, i64 %5346, i1 false) #9
  br label %5383

5383:                                             ; preds = %5381, %5370
  store i64 %5379, i64* %5344, align 8
  store i64 %5378, i64* %5343, align 8
  store i64 %5376, i64* %5353, align 8
  %5384 = icmp eq i64 %5345, 0
  br i1 %5384, label %5387, label %5385

5385:                                             ; preds = %5383
  %5386 = inttoptr i64 %5345 to i8*
  tail call void @_ZdlPv(i8* %5386) #10
  br label %5387

5387:                                             ; preds = %5385, %5383, %5337, %5328
  %5388 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 92
  %5389 = load i8, i8* %5388, align 4, !range !2
  %5390 = icmp eq i8 %5389, 0
  br i1 %5390, label %5446, label %5391

5391:                                             ; preds = %5387
  %5392 = load i32*, i32** %3, align 8
  %5393 = load i32*, i32** %4, align 8
  %5394 = icmp ult i32* %5392, %5393
  %5395 = ptrtoint i32* %5393 to i64
  br i1 %5394, label %5396, label %5400

5396:                                             ; preds = %5391
  store i32 92, i32* %5392, align 4
  %5397 = getelementptr inbounds i32, i32* %5392, i64 1
  %5398 = ptrtoint i32* %5397 to i64
  %5399 = bitcast i32** %3 to i64*
  store i64 %5398, i64* %5399, align 8
  br label %5446

5400:                                             ; preds = %5391
  %5401 = ptrtoint i32* %5392 to i64
  %5402 = bitcast i32** %3 to i64*
  %5403 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5404 = load i64, i64* %5403, align 8
  %5405 = sub i64 %5401, %5404
  %5406 = ashr exact i64 %5405, 2
  %5407 = add nsw i64 %5406, 1
  %5408 = icmp ugt i64 %5407, 4611686018427387903
  br i1 %5408, label %5409, label %5411

5409:                                             ; preds = %5400
  %5410 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5410) #11
  unreachable

5411:                                             ; preds = %5400
  %5412 = bitcast i32** %4 to i64*
  %5413 = sub i64 %5395, %5404
  %5414 = ashr exact i64 %5413, 2
  %5415 = icmp ult i64 %5414, 2305843009213693951
  br i1 %5415, label %5416, label %5424

5416:                                             ; preds = %5411
  %5417 = ashr exact i64 %5413, 1
  %5418 = icmp ult i64 %5417, %5407
  %5419 = select i1 %5418, i64 %5407, i64 %5417
  %5420 = icmp eq i64 %5419, 0
  br i1 %5420, label %5429, label %5421

5421:                                             ; preds = %5416
  %5422 = icmp ugt i64 %5419, 4611686018427387903
  br i1 %5422, label %5423, label %5424

5423:                                             ; preds = %5421
  tail call void @abort() #11
  unreachable

5424:                                             ; preds = %5421, %5411
  %5425 = phi i64 [ %5419, %5421 ], [ 4611686018427387903, %5411 ]
  %5426 = shl i64 %5425, 2
  %5427 = tail call i8* @_Znwm(i64 %5426) #10
  %5428 = bitcast i8* %5427 to i32*
  br label %5429

5429:                                             ; preds = %5424, %5416
  %5430 = phi i64 [ %5425, %5424 ], [ 0, %5416 ]
  %5431 = phi i8* [ %5427, %5424 ], [ null, %5416 ]
  %5432 = phi i32* [ %5428, %5424 ], [ null, %5416 ]
  %5433 = getelementptr inbounds i32, i32* %5432, i64 %5406
  %5434 = getelementptr inbounds i32, i32* %5432, i64 %5430
  %5435 = ptrtoint i32* %5434 to i64
  store i32 92, i32* %5433, align 4
  %5436 = getelementptr inbounds i32, i32* %5433, i64 1
  %5437 = ptrtoint i32* %5436 to i64
  %5438 = ptrtoint i32* %5432 to i64
  %5439 = icmp sgt i64 %5405, 0
  br i1 %5439, label %5440, label %5442

5440:                                             ; preds = %5429
  %5441 = inttoptr i64 %5404 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5431, i8* align 4 %5441, i64 %5405, i1 false) #9
  br label %5442

5442:                                             ; preds = %5440, %5429
  store i64 %5438, i64* %5403, align 8
  store i64 %5437, i64* %5402, align 8
  store i64 %5435, i64* %5412, align 8
  %5443 = icmp eq i64 %5404, 0
  br i1 %5443, label %5446, label %5444

5444:                                             ; preds = %5442
  %5445 = inttoptr i64 %5404 to i8*
  tail call void @_ZdlPv(i8* %5445) #10
  br label %5446

5446:                                             ; preds = %5444, %5442, %5396, %5387
  %5447 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 93
  %5448 = load i8, i8* %5447, align 1, !range !2
  %5449 = icmp eq i8 %5448, 0
  br i1 %5449, label %5505, label %5450

5450:                                             ; preds = %5446
  %5451 = load i32*, i32** %3, align 8
  %5452 = load i32*, i32** %4, align 8
  %5453 = icmp ult i32* %5451, %5452
  %5454 = ptrtoint i32* %5452 to i64
  br i1 %5453, label %5455, label %5459

5455:                                             ; preds = %5450
  store i32 93, i32* %5451, align 4
  %5456 = getelementptr inbounds i32, i32* %5451, i64 1
  %5457 = ptrtoint i32* %5456 to i64
  %5458 = bitcast i32** %3 to i64*
  store i64 %5457, i64* %5458, align 8
  br label %5505

5459:                                             ; preds = %5450
  %5460 = ptrtoint i32* %5451 to i64
  %5461 = bitcast i32** %3 to i64*
  %5462 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5463 = load i64, i64* %5462, align 8
  %5464 = sub i64 %5460, %5463
  %5465 = ashr exact i64 %5464, 2
  %5466 = add nsw i64 %5465, 1
  %5467 = icmp ugt i64 %5466, 4611686018427387903
  br i1 %5467, label %5468, label %5470

5468:                                             ; preds = %5459
  %5469 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5469) #11
  unreachable

5470:                                             ; preds = %5459
  %5471 = bitcast i32** %4 to i64*
  %5472 = sub i64 %5454, %5463
  %5473 = ashr exact i64 %5472, 2
  %5474 = icmp ult i64 %5473, 2305843009213693951
  br i1 %5474, label %5475, label %5483

5475:                                             ; preds = %5470
  %5476 = ashr exact i64 %5472, 1
  %5477 = icmp ult i64 %5476, %5466
  %5478 = select i1 %5477, i64 %5466, i64 %5476
  %5479 = icmp eq i64 %5478, 0
  br i1 %5479, label %5488, label %5480

5480:                                             ; preds = %5475
  %5481 = icmp ugt i64 %5478, 4611686018427387903
  br i1 %5481, label %5482, label %5483

5482:                                             ; preds = %5480
  tail call void @abort() #11
  unreachable

5483:                                             ; preds = %5480, %5470
  %5484 = phi i64 [ %5478, %5480 ], [ 4611686018427387903, %5470 ]
  %5485 = shl i64 %5484, 2
  %5486 = tail call i8* @_Znwm(i64 %5485) #10
  %5487 = bitcast i8* %5486 to i32*
  br label %5488

5488:                                             ; preds = %5483, %5475
  %5489 = phi i64 [ %5484, %5483 ], [ 0, %5475 ]
  %5490 = phi i8* [ %5486, %5483 ], [ null, %5475 ]
  %5491 = phi i32* [ %5487, %5483 ], [ null, %5475 ]
  %5492 = getelementptr inbounds i32, i32* %5491, i64 %5465
  %5493 = getelementptr inbounds i32, i32* %5491, i64 %5489
  %5494 = ptrtoint i32* %5493 to i64
  store i32 93, i32* %5492, align 4
  %5495 = getelementptr inbounds i32, i32* %5492, i64 1
  %5496 = ptrtoint i32* %5495 to i64
  %5497 = ptrtoint i32* %5491 to i64
  %5498 = icmp sgt i64 %5464, 0
  br i1 %5498, label %5499, label %5501

5499:                                             ; preds = %5488
  %5500 = inttoptr i64 %5463 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5490, i8* align 4 %5500, i64 %5464, i1 false) #9
  br label %5501

5501:                                             ; preds = %5499, %5488
  store i64 %5497, i64* %5462, align 8
  store i64 %5496, i64* %5461, align 8
  store i64 %5494, i64* %5471, align 8
  %5502 = icmp eq i64 %5463, 0
  br i1 %5502, label %5505, label %5503

5503:                                             ; preds = %5501
  %5504 = inttoptr i64 %5463 to i8*
  tail call void @_ZdlPv(i8* %5504) #10
  br label %5505

5505:                                             ; preds = %5503, %5501, %5455, %5446
  %5506 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 94
  %5507 = load i8, i8* %5506, align 2, !range !2
  %5508 = icmp eq i8 %5507, 0
  br i1 %5508, label %5564, label %5509

5509:                                             ; preds = %5505
  %5510 = load i32*, i32** %3, align 8
  %5511 = load i32*, i32** %4, align 8
  %5512 = icmp ult i32* %5510, %5511
  %5513 = ptrtoint i32* %5511 to i64
  br i1 %5512, label %5514, label %5518

5514:                                             ; preds = %5509
  store i32 94, i32* %5510, align 4
  %5515 = getelementptr inbounds i32, i32* %5510, i64 1
  %5516 = ptrtoint i32* %5515 to i64
  %5517 = bitcast i32** %3 to i64*
  store i64 %5516, i64* %5517, align 8
  br label %5564

5518:                                             ; preds = %5509
  %5519 = ptrtoint i32* %5510 to i64
  %5520 = bitcast i32** %3 to i64*
  %5521 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5522 = load i64, i64* %5521, align 8
  %5523 = sub i64 %5519, %5522
  %5524 = ashr exact i64 %5523, 2
  %5525 = add nsw i64 %5524, 1
  %5526 = icmp ugt i64 %5525, 4611686018427387903
  br i1 %5526, label %5527, label %5529

5527:                                             ; preds = %5518
  %5528 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5528) #11
  unreachable

5529:                                             ; preds = %5518
  %5530 = bitcast i32** %4 to i64*
  %5531 = sub i64 %5513, %5522
  %5532 = ashr exact i64 %5531, 2
  %5533 = icmp ult i64 %5532, 2305843009213693951
  br i1 %5533, label %5534, label %5542

5534:                                             ; preds = %5529
  %5535 = ashr exact i64 %5531, 1
  %5536 = icmp ult i64 %5535, %5525
  %5537 = select i1 %5536, i64 %5525, i64 %5535
  %5538 = icmp eq i64 %5537, 0
  br i1 %5538, label %5547, label %5539

5539:                                             ; preds = %5534
  %5540 = icmp ugt i64 %5537, 4611686018427387903
  br i1 %5540, label %5541, label %5542

5541:                                             ; preds = %5539
  tail call void @abort() #11
  unreachable

5542:                                             ; preds = %5539, %5529
  %5543 = phi i64 [ %5537, %5539 ], [ 4611686018427387903, %5529 ]
  %5544 = shl i64 %5543, 2
  %5545 = tail call i8* @_Znwm(i64 %5544) #10
  %5546 = bitcast i8* %5545 to i32*
  br label %5547

5547:                                             ; preds = %5542, %5534
  %5548 = phi i64 [ %5543, %5542 ], [ 0, %5534 ]
  %5549 = phi i8* [ %5545, %5542 ], [ null, %5534 ]
  %5550 = phi i32* [ %5546, %5542 ], [ null, %5534 ]
  %5551 = getelementptr inbounds i32, i32* %5550, i64 %5524
  %5552 = getelementptr inbounds i32, i32* %5550, i64 %5548
  %5553 = ptrtoint i32* %5552 to i64
  store i32 94, i32* %5551, align 4
  %5554 = getelementptr inbounds i32, i32* %5551, i64 1
  %5555 = ptrtoint i32* %5554 to i64
  %5556 = ptrtoint i32* %5550 to i64
  %5557 = icmp sgt i64 %5523, 0
  br i1 %5557, label %5558, label %5560

5558:                                             ; preds = %5547
  %5559 = inttoptr i64 %5522 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5549, i8* align 4 %5559, i64 %5523, i1 false) #9
  br label %5560

5560:                                             ; preds = %5558, %5547
  store i64 %5556, i64* %5521, align 8
  store i64 %5555, i64* %5520, align 8
  store i64 %5553, i64* %5530, align 8
  %5561 = icmp eq i64 %5522, 0
  br i1 %5561, label %5564, label %5562

5562:                                             ; preds = %5560
  %5563 = inttoptr i64 %5522 to i8*
  tail call void @_ZdlPv(i8* %5563) #10
  br label %5564

5564:                                             ; preds = %5562, %5560, %5514, %5505
  %5565 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 95
  %5566 = load i8, i8* %5565, align 1, !range !2
  %5567 = icmp eq i8 %5566, 0
  br i1 %5567, label %5623, label %5568

5568:                                             ; preds = %5564
  %5569 = load i32*, i32** %3, align 8
  %5570 = load i32*, i32** %4, align 8
  %5571 = icmp ult i32* %5569, %5570
  %5572 = ptrtoint i32* %5570 to i64
  br i1 %5571, label %5573, label %5577

5573:                                             ; preds = %5568
  store i32 95, i32* %5569, align 4
  %5574 = getelementptr inbounds i32, i32* %5569, i64 1
  %5575 = ptrtoint i32* %5574 to i64
  %5576 = bitcast i32** %3 to i64*
  store i64 %5575, i64* %5576, align 8
  br label %5623

5577:                                             ; preds = %5568
  %5578 = ptrtoint i32* %5569 to i64
  %5579 = bitcast i32** %3 to i64*
  %5580 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5581 = load i64, i64* %5580, align 8
  %5582 = sub i64 %5578, %5581
  %5583 = ashr exact i64 %5582, 2
  %5584 = add nsw i64 %5583, 1
  %5585 = icmp ugt i64 %5584, 4611686018427387903
  br i1 %5585, label %5586, label %5588

5586:                                             ; preds = %5577
  %5587 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5587) #11
  unreachable

5588:                                             ; preds = %5577
  %5589 = bitcast i32** %4 to i64*
  %5590 = sub i64 %5572, %5581
  %5591 = ashr exact i64 %5590, 2
  %5592 = icmp ult i64 %5591, 2305843009213693951
  br i1 %5592, label %5593, label %5601

5593:                                             ; preds = %5588
  %5594 = ashr exact i64 %5590, 1
  %5595 = icmp ult i64 %5594, %5584
  %5596 = select i1 %5595, i64 %5584, i64 %5594
  %5597 = icmp eq i64 %5596, 0
  br i1 %5597, label %5606, label %5598

5598:                                             ; preds = %5593
  %5599 = icmp ugt i64 %5596, 4611686018427387903
  br i1 %5599, label %5600, label %5601

5600:                                             ; preds = %5598
  tail call void @abort() #11
  unreachable

5601:                                             ; preds = %5598, %5588
  %5602 = phi i64 [ %5596, %5598 ], [ 4611686018427387903, %5588 ]
  %5603 = shl i64 %5602, 2
  %5604 = tail call i8* @_Znwm(i64 %5603) #10
  %5605 = bitcast i8* %5604 to i32*
  br label %5606

5606:                                             ; preds = %5601, %5593
  %5607 = phi i64 [ %5602, %5601 ], [ 0, %5593 ]
  %5608 = phi i8* [ %5604, %5601 ], [ null, %5593 ]
  %5609 = phi i32* [ %5605, %5601 ], [ null, %5593 ]
  %5610 = getelementptr inbounds i32, i32* %5609, i64 %5583
  %5611 = getelementptr inbounds i32, i32* %5609, i64 %5607
  %5612 = ptrtoint i32* %5611 to i64
  store i32 95, i32* %5610, align 4
  %5613 = getelementptr inbounds i32, i32* %5610, i64 1
  %5614 = ptrtoint i32* %5613 to i64
  %5615 = ptrtoint i32* %5609 to i64
  %5616 = icmp sgt i64 %5582, 0
  br i1 %5616, label %5617, label %5619

5617:                                             ; preds = %5606
  %5618 = inttoptr i64 %5581 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5608, i8* align 4 %5618, i64 %5582, i1 false) #9
  br label %5619

5619:                                             ; preds = %5617, %5606
  store i64 %5615, i64* %5580, align 8
  store i64 %5614, i64* %5579, align 8
  store i64 %5612, i64* %5589, align 8
  %5620 = icmp eq i64 %5581, 0
  br i1 %5620, label %5623, label %5621

5621:                                             ; preds = %5619
  %5622 = inttoptr i64 %5581 to i8*
  tail call void @_ZdlPv(i8* %5622) #10
  br label %5623

5623:                                             ; preds = %5621, %5619, %5573, %5564
  %5624 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 96
  %5625 = load i8, i8* %5624, align 4, !range !2
  %5626 = icmp eq i8 %5625, 0
  br i1 %5626, label %5682, label %5627

5627:                                             ; preds = %5623
  %5628 = load i32*, i32** %3, align 8
  %5629 = load i32*, i32** %4, align 8
  %5630 = icmp ult i32* %5628, %5629
  %5631 = ptrtoint i32* %5629 to i64
  br i1 %5630, label %5632, label %5636

5632:                                             ; preds = %5627
  store i32 96, i32* %5628, align 4
  %5633 = getelementptr inbounds i32, i32* %5628, i64 1
  %5634 = ptrtoint i32* %5633 to i64
  %5635 = bitcast i32** %3 to i64*
  store i64 %5634, i64* %5635, align 8
  br label %5682

5636:                                             ; preds = %5627
  %5637 = ptrtoint i32* %5628 to i64
  %5638 = bitcast i32** %3 to i64*
  %5639 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5640 = load i64, i64* %5639, align 8
  %5641 = sub i64 %5637, %5640
  %5642 = ashr exact i64 %5641, 2
  %5643 = add nsw i64 %5642, 1
  %5644 = icmp ugt i64 %5643, 4611686018427387903
  br i1 %5644, label %5645, label %5647

5645:                                             ; preds = %5636
  %5646 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5646) #11
  unreachable

5647:                                             ; preds = %5636
  %5648 = bitcast i32** %4 to i64*
  %5649 = sub i64 %5631, %5640
  %5650 = ashr exact i64 %5649, 2
  %5651 = icmp ult i64 %5650, 2305843009213693951
  br i1 %5651, label %5652, label %5660

5652:                                             ; preds = %5647
  %5653 = ashr exact i64 %5649, 1
  %5654 = icmp ult i64 %5653, %5643
  %5655 = select i1 %5654, i64 %5643, i64 %5653
  %5656 = icmp eq i64 %5655, 0
  br i1 %5656, label %5665, label %5657

5657:                                             ; preds = %5652
  %5658 = icmp ugt i64 %5655, 4611686018427387903
  br i1 %5658, label %5659, label %5660

5659:                                             ; preds = %5657
  tail call void @abort() #11
  unreachable

5660:                                             ; preds = %5657, %5647
  %5661 = phi i64 [ %5655, %5657 ], [ 4611686018427387903, %5647 ]
  %5662 = shl i64 %5661, 2
  %5663 = tail call i8* @_Znwm(i64 %5662) #10
  %5664 = bitcast i8* %5663 to i32*
  br label %5665

5665:                                             ; preds = %5660, %5652
  %5666 = phi i64 [ %5661, %5660 ], [ 0, %5652 ]
  %5667 = phi i8* [ %5663, %5660 ], [ null, %5652 ]
  %5668 = phi i32* [ %5664, %5660 ], [ null, %5652 ]
  %5669 = getelementptr inbounds i32, i32* %5668, i64 %5642
  %5670 = getelementptr inbounds i32, i32* %5668, i64 %5666
  %5671 = ptrtoint i32* %5670 to i64
  store i32 96, i32* %5669, align 4
  %5672 = getelementptr inbounds i32, i32* %5669, i64 1
  %5673 = ptrtoint i32* %5672 to i64
  %5674 = ptrtoint i32* %5668 to i64
  %5675 = icmp sgt i64 %5641, 0
  br i1 %5675, label %5676, label %5678

5676:                                             ; preds = %5665
  %5677 = inttoptr i64 %5640 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5667, i8* align 4 %5677, i64 %5641, i1 false) #9
  br label %5678

5678:                                             ; preds = %5676, %5665
  store i64 %5674, i64* %5639, align 8
  store i64 %5673, i64* %5638, align 8
  store i64 %5671, i64* %5648, align 8
  %5679 = icmp eq i64 %5640, 0
  br i1 %5679, label %5682, label %5680

5680:                                             ; preds = %5678
  %5681 = inttoptr i64 %5640 to i8*
  tail call void @_ZdlPv(i8* %5681) #10
  br label %5682

5682:                                             ; preds = %5680, %5678, %5632, %5623
  %5683 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 97
  %5684 = load i8, i8* %5683, align 1, !range !2
  %5685 = icmp eq i8 %5684, 0
  br i1 %5685, label %5741, label %5686

5686:                                             ; preds = %5682
  %5687 = load i32*, i32** %3, align 8
  %5688 = load i32*, i32** %4, align 8
  %5689 = icmp ult i32* %5687, %5688
  %5690 = ptrtoint i32* %5688 to i64
  br i1 %5689, label %5691, label %5695

5691:                                             ; preds = %5686
  store i32 97, i32* %5687, align 4
  %5692 = getelementptr inbounds i32, i32* %5687, i64 1
  %5693 = ptrtoint i32* %5692 to i64
  %5694 = bitcast i32** %3 to i64*
  store i64 %5693, i64* %5694, align 8
  br label %5741

5695:                                             ; preds = %5686
  %5696 = ptrtoint i32* %5687 to i64
  %5697 = bitcast i32** %3 to i64*
  %5698 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5699 = load i64, i64* %5698, align 8
  %5700 = sub i64 %5696, %5699
  %5701 = ashr exact i64 %5700, 2
  %5702 = add nsw i64 %5701, 1
  %5703 = icmp ugt i64 %5702, 4611686018427387903
  br i1 %5703, label %5704, label %5706

5704:                                             ; preds = %5695
  %5705 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5705) #11
  unreachable

5706:                                             ; preds = %5695
  %5707 = bitcast i32** %4 to i64*
  %5708 = sub i64 %5690, %5699
  %5709 = ashr exact i64 %5708, 2
  %5710 = icmp ult i64 %5709, 2305843009213693951
  br i1 %5710, label %5711, label %5719

5711:                                             ; preds = %5706
  %5712 = ashr exact i64 %5708, 1
  %5713 = icmp ult i64 %5712, %5702
  %5714 = select i1 %5713, i64 %5702, i64 %5712
  %5715 = icmp eq i64 %5714, 0
  br i1 %5715, label %5724, label %5716

5716:                                             ; preds = %5711
  %5717 = icmp ugt i64 %5714, 4611686018427387903
  br i1 %5717, label %5718, label %5719

5718:                                             ; preds = %5716
  tail call void @abort() #11
  unreachable

5719:                                             ; preds = %5716, %5706
  %5720 = phi i64 [ %5714, %5716 ], [ 4611686018427387903, %5706 ]
  %5721 = shl i64 %5720, 2
  %5722 = tail call i8* @_Znwm(i64 %5721) #10
  %5723 = bitcast i8* %5722 to i32*
  br label %5724

5724:                                             ; preds = %5719, %5711
  %5725 = phi i64 [ %5720, %5719 ], [ 0, %5711 ]
  %5726 = phi i8* [ %5722, %5719 ], [ null, %5711 ]
  %5727 = phi i32* [ %5723, %5719 ], [ null, %5711 ]
  %5728 = getelementptr inbounds i32, i32* %5727, i64 %5701
  %5729 = getelementptr inbounds i32, i32* %5727, i64 %5725
  %5730 = ptrtoint i32* %5729 to i64
  store i32 97, i32* %5728, align 4
  %5731 = getelementptr inbounds i32, i32* %5728, i64 1
  %5732 = ptrtoint i32* %5731 to i64
  %5733 = ptrtoint i32* %5727 to i64
  %5734 = icmp sgt i64 %5700, 0
  br i1 %5734, label %5735, label %5737

5735:                                             ; preds = %5724
  %5736 = inttoptr i64 %5699 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5726, i8* align 4 %5736, i64 %5700, i1 false) #9
  br label %5737

5737:                                             ; preds = %5735, %5724
  store i64 %5733, i64* %5698, align 8
  store i64 %5732, i64* %5697, align 8
  store i64 %5730, i64* %5707, align 8
  %5738 = icmp eq i64 %5699, 0
  br i1 %5738, label %5741, label %5739

5739:                                             ; preds = %5737
  %5740 = inttoptr i64 %5699 to i8*
  tail call void @_ZdlPv(i8* %5740) #10
  br label %5741

5741:                                             ; preds = %5739, %5737, %5691, %5682
  %5742 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 98
  %5743 = load i8, i8* %5742, align 2, !range !2
  %5744 = icmp eq i8 %5743, 0
  br i1 %5744, label %5800, label %5745

5745:                                             ; preds = %5741
  %5746 = load i32*, i32** %3, align 8
  %5747 = load i32*, i32** %4, align 8
  %5748 = icmp ult i32* %5746, %5747
  %5749 = ptrtoint i32* %5747 to i64
  br i1 %5748, label %5750, label %5754

5750:                                             ; preds = %5745
  store i32 98, i32* %5746, align 4
  %5751 = getelementptr inbounds i32, i32* %5746, i64 1
  %5752 = ptrtoint i32* %5751 to i64
  %5753 = bitcast i32** %3 to i64*
  store i64 %5752, i64* %5753, align 8
  br label %5800

5754:                                             ; preds = %5745
  %5755 = ptrtoint i32* %5746 to i64
  %5756 = bitcast i32** %3 to i64*
  %5757 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5758 = load i64, i64* %5757, align 8
  %5759 = sub i64 %5755, %5758
  %5760 = ashr exact i64 %5759, 2
  %5761 = add nsw i64 %5760, 1
  %5762 = icmp ugt i64 %5761, 4611686018427387903
  br i1 %5762, label %5763, label %5765

5763:                                             ; preds = %5754
  %5764 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5764) #11
  unreachable

5765:                                             ; preds = %5754
  %5766 = bitcast i32** %4 to i64*
  %5767 = sub i64 %5749, %5758
  %5768 = ashr exact i64 %5767, 2
  %5769 = icmp ult i64 %5768, 2305843009213693951
  br i1 %5769, label %5770, label %5778

5770:                                             ; preds = %5765
  %5771 = ashr exact i64 %5767, 1
  %5772 = icmp ult i64 %5771, %5761
  %5773 = select i1 %5772, i64 %5761, i64 %5771
  %5774 = icmp eq i64 %5773, 0
  br i1 %5774, label %5783, label %5775

5775:                                             ; preds = %5770
  %5776 = icmp ugt i64 %5773, 4611686018427387903
  br i1 %5776, label %5777, label %5778

5777:                                             ; preds = %5775
  tail call void @abort() #11
  unreachable

5778:                                             ; preds = %5775, %5765
  %5779 = phi i64 [ %5773, %5775 ], [ 4611686018427387903, %5765 ]
  %5780 = shl i64 %5779, 2
  %5781 = tail call i8* @_Znwm(i64 %5780) #10
  %5782 = bitcast i8* %5781 to i32*
  br label %5783

5783:                                             ; preds = %5778, %5770
  %5784 = phi i64 [ %5779, %5778 ], [ 0, %5770 ]
  %5785 = phi i8* [ %5781, %5778 ], [ null, %5770 ]
  %5786 = phi i32* [ %5782, %5778 ], [ null, %5770 ]
  %5787 = getelementptr inbounds i32, i32* %5786, i64 %5760
  %5788 = getelementptr inbounds i32, i32* %5786, i64 %5784
  %5789 = ptrtoint i32* %5788 to i64
  store i32 98, i32* %5787, align 4
  %5790 = getelementptr inbounds i32, i32* %5787, i64 1
  %5791 = ptrtoint i32* %5790 to i64
  %5792 = ptrtoint i32* %5786 to i64
  %5793 = icmp sgt i64 %5759, 0
  br i1 %5793, label %5794, label %5796

5794:                                             ; preds = %5783
  %5795 = inttoptr i64 %5758 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5785, i8* align 4 %5795, i64 %5759, i1 false) #9
  br label %5796

5796:                                             ; preds = %5794, %5783
  store i64 %5792, i64* %5757, align 8
  store i64 %5791, i64* %5756, align 8
  store i64 %5789, i64* %5766, align 8
  %5797 = icmp eq i64 %5758, 0
  br i1 %5797, label %5800, label %5798

5798:                                             ; preds = %5796
  %5799 = inttoptr i64 %5758 to i8*
  tail call void @_ZdlPv(i8* %5799) #10
  br label %5800

5800:                                             ; preds = %5798, %5796, %5750, %5741
  %5801 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 99
  %5802 = load i8, i8* %5801, align 1, !range !2
  %5803 = icmp eq i8 %5802, 0
  br i1 %5803, label %5859, label %5804

5804:                                             ; preds = %5800
  %5805 = load i32*, i32** %3, align 8
  %5806 = load i32*, i32** %4, align 8
  %5807 = icmp ult i32* %5805, %5806
  %5808 = ptrtoint i32* %5806 to i64
  br i1 %5807, label %5809, label %5813

5809:                                             ; preds = %5804
  store i32 99, i32* %5805, align 4
  %5810 = getelementptr inbounds i32, i32* %5805, i64 1
  %5811 = ptrtoint i32* %5810 to i64
  %5812 = bitcast i32** %3 to i64*
  store i64 %5811, i64* %5812, align 8
  br label %5859

5813:                                             ; preds = %5804
  %5814 = ptrtoint i32* %5805 to i64
  %5815 = bitcast i32** %3 to i64*
  %5816 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5817 = load i64, i64* %5816, align 8
  %5818 = sub i64 %5814, %5817
  %5819 = ashr exact i64 %5818, 2
  %5820 = add nsw i64 %5819, 1
  %5821 = icmp ugt i64 %5820, 4611686018427387903
  br i1 %5821, label %5822, label %5824

5822:                                             ; preds = %5813
  %5823 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5823) #11
  unreachable

5824:                                             ; preds = %5813
  %5825 = bitcast i32** %4 to i64*
  %5826 = sub i64 %5808, %5817
  %5827 = ashr exact i64 %5826, 2
  %5828 = icmp ult i64 %5827, 2305843009213693951
  br i1 %5828, label %5829, label %5837

5829:                                             ; preds = %5824
  %5830 = ashr exact i64 %5826, 1
  %5831 = icmp ult i64 %5830, %5820
  %5832 = select i1 %5831, i64 %5820, i64 %5830
  %5833 = icmp eq i64 %5832, 0
  br i1 %5833, label %5842, label %5834

5834:                                             ; preds = %5829
  %5835 = icmp ugt i64 %5832, 4611686018427387903
  br i1 %5835, label %5836, label %5837

5836:                                             ; preds = %5834
  tail call void @abort() #11
  unreachable

5837:                                             ; preds = %5834, %5824
  %5838 = phi i64 [ %5832, %5834 ], [ 4611686018427387903, %5824 ]
  %5839 = shl i64 %5838, 2
  %5840 = tail call i8* @_Znwm(i64 %5839) #10
  %5841 = bitcast i8* %5840 to i32*
  br label %5842

5842:                                             ; preds = %5837, %5829
  %5843 = phi i64 [ %5838, %5837 ], [ 0, %5829 ]
  %5844 = phi i8* [ %5840, %5837 ], [ null, %5829 ]
  %5845 = phi i32* [ %5841, %5837 ], [ null, %5829 ]
  %5846 = getelementptr inbounds i32, i32* %5845, i64 %5819
  %5847 = getelementptr inbounds i32, i32* %5845, i64 %5843
  %5848 = ptrtoint i32* %5847 to i64
  store i32 99, i32* %5846, align 4
  %5849 = getelementptr inbounds i32, i32* %5846, i64 1
  %5850 = ptrtoint i32* %5849 to i64
  %5851 = ptrtoint i32* %5845 to i64
  %5852 = icmp sgt i64 %5818, 0
  br i1 %5852, label %5853, label %5855

5853:                                             ; preds = %5842
  %5854 = inttoptr i64 %5817 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5844, i8* align 4 %5854, i64 %5818, i1 false) #9
  br label %5855

5855:                                             ; preds = %5853, %5842
  store i64 %5851, i64* %5816, align 8
  store i64 %5850, i64* %5815, align 8
  store i64 %5848, i64* %5825, align 8
  %5856 = icmp eq i64 %5817, 0
  br i1 %5856, label %5859, label %5857

5857:                                             ; preds = %5855
  %5858 = inttoptr i64 %5817 to i8*
  tail call void @_ZdlPv(i8* %5858) #10
  br label %5859

5859:                                             ; preds = %5857, %5855, %5809, %5800
  %5860 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 100
  %5861 = load i8, i8* %5860, align 4, !range !2
  %5862 = icmp eq i8 %5861, 0
  br i1 %5862, label %5918, label %5863

5863:                                             ; preds = %5859
  %5864 = load i32*, i32** %3, align 8
  %5865 = load i32*, i32** %4, align 8
  %5866 = icmp ult i32* %5864, %5865
  %5867 = ptrtoint i32* %5865 to i64
  br i1 %5866, label %5868, label %5872

5868:                                             ; preds = %5863
  store i32 100, i32* %5864, align 4
  %5869 = getelementptr inbounds i32, i32* %5864, i64 1
  %5870 = ptrtoint i32* %5869 to i64
  %5871 = bitcast i32** %3 to i64*
  store i64 %5870, i64* %5871, align 8
  br label %5918

5872:                                             ; preds = %5863
  %5873 = ptrtoint i32* %5864 to i64
  %5874 = bitcast i32** %3 to i64*
  %5875 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5876 = load i64, i64* %5875, align 8
  %5877 = sub i64 %5873, %5876
  %5878 = ashr exact i64 %5877, 2
  %5879 = add nsw i64 %5878, 1
  %5880 = icmp ugt i64 %5879, 4611686018427387903
  br i1 %5880, label %5881, label %5883

5881:                                             ; preds = %5872
  %5882 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5882) #11
  unreachable

5883:                                             ; preds = %5872
  %5884 = bitcast i32** %4 to i64*
  %5885 = sub i64 %5867, %5876
  %5886 = ashr exact i64 %5885, 2
  %5887 = icmp ult i64 %5886, 2305843009213693951
  br i1 %5887, label %5888, label %5896

5888:                                             ; preds = %5883
  %5889 = ashr exact i64 %5885, 1
  %5890 = icmp ult i64 %5889, %5879
  %5891 = select i1 %5890, i64 %5879, i64 %5889
  %5892 = icmp eq i64 %5891, 0
  br i1 %5892, label %5901, label %5893

5893:                                             ; preds = %5888
  %5894 = icmp ugt i64 %5891, 4611686018427387903
  br i1 %5894, label %5895, label %5896

5895:                                             ; preds = %5893
  tail call void @abort() #11
  unreachable

5896:                                             ; preds = %5893, %5883
  %5897 = phi i64 [ %5891, %5893 ], [ 4611686018427387903, %5883 ]
  %5898 = shl i64 %5897, 2
  %5899 = tail call i8* @_Znwm(i64 %5898) #10
  %5900 = bitcast i8* %5899 to i32*
  br label %5901

5901:                                             ; preds = %5896, %5888
  %5902 = phi i64 [ %5897, %5896 ], [ 0, %5888 ]
  %5903 = phi i8* [ %5899, %5896 ], [ null, %5888 ]
  %5904 = phi i32* [ %5900, %5896 ], [ null, %5888 ]
  %5905 = getelementptr inbounds i32, i32* %5904, i64 %5878
  %5906 = getelementptr inbounds i32, i32* %5904, i64 %5902
  %5907 = ptrtoint i32* %5906 to i64
  store i32 100, i32* %5905, align 4
  %5908 = getelementptr inbounds i32, i32* %5905, i64 1
  %5909 = ptrtoint i32* %5908 to i64
  %5910 = ptrtoint i32* %5904 to i64
  %5911 = icmp sgt i64 %5877, 0
  br i1 %5911, label %5912, label %5914

5912:                                             ; preds = %5901
  %5913 = inttoptr i64 %5876 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5903, i8* align 4 %5913, i64 %5877, i1 false) #9
  br label %5914

5914:                                             ; preds = %5912, %5901
  store i64 %5910, i64* %5875, align 8
  store i64 %5909, i64* %5874, align 8
  store i64 %5907, i64* %5884, align 8
  %5915 = icmp eq i64 %5876, 0
  br i1 %5915, label %5918, label %5916

5916:                                             ; preds = %5914
  %5917 = inttoptr i64 %5876 to i8*
  tail call void @_ZdlPv(i8* %5917) #10
  br label %5918

5918:                                             ; preds = %5916, %5914, %5868, %5859
  %5919 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 101
  %5920 = load i8, i8* %5919, align 1, !range !2
  %5921 = icmp eq i8 %5920, 0
  br i1 %5921, label %5977, label %5922

5922:                                             ; preds = %5918
  %5923 = load i32*, i32** %3, align 8
  %5924 = load i32*, i32** %4, align 8
  %5925 = icmp ult i32* %5923, %5924
  %5926 = ptrtoint i32* %5924 to i64
  br i1 %5925, label %5927, label %5931

5927:                                             ; preds = %5922
  store i32 101, i32* %5923, align 4
  %5928 = getelementptr inbounds i32, i32* %5923, i64 1
  %5929 = ptrtoint i32* %5928 to i64
  %5930 = bitcast i32** %3 to i64*
  store i64 %5929, i64* %5930, align 8
  br label %5977

5931:                                             ; preds = %5922
  %5932 = ptrtoint i32* %5923 to i64
  %5933 = bitcast i32** %3 to i64*
  %5934 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5935 = load i64, i64* %5934, align 8
  %5936 = sub i64 %5932, %5935
  %5937 = ashr exact i64 %5936, 2
  %5938 = add nsw i64 %5937, 1
  %5939 = icmp ugt i64 %5938, 4611686018427387903
  br i1 %5939, label %5940, label %5942

5940:                                             ; preds = %5931
  %5941 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5941) #11
  unreachable

5942:                                             ; preds = %5931
  %5943 = bitcast i32** %4 to i64*
  %5944 = sub i64 %5926, %5935
  %5945 = ashr exact i64 %5944, 2
  %5946 = icmp ult i64 %5945, 2305843009213693951
  br i1 %5946, label %5947, label %5955

5947:                                             ; preds = %5942
  %5948 = ashr exact i64 %5944, 1
  %5949 = icmp ult i64 %5948, %5938
  %5950 = select i1 %5949, i64 %5938, i64 %5948
  %5951 = icmp eq i64 %5950, 0
  br i1 %5951, label %5960, label %5952

5952:                                             ; preds = %5947
  %5953 = icmp ugt i64 %5950, 4611686018427387903
  br i1 %5953, label %5954, label %5955

5954:                                             ; preds = %5952
  tail call void @abort() #11
  unreachable

5955:                                             ; preds = %5952, %5942
  %5956 = phi i64 [ %5950, %5952 ], [ 4611686018427387903, %5942 ]
  %5957 = shl i64 %5956, 2
  %5958 = tail call i8* @_Znwm(i64 %5957) #10
  %5959 = bitcast i8* %5958 to i32*
  br label %5960

5960:                                             ; preds = %5955, %5947
  %5961 = phi i64 [ %5956, %5955 ], [ 0, %5947 ]
  %5962 = phi i8* [ %5958, %5955 ], [ null, %5947 ]
  %5963 = phi i32* [ %5959, %5955 ], [ null, %5947 ]
  %5964 = getelementptr inbounds i32, i32* %5963, i64 %5937
  %5965 = getelementptr inbounds i32, i32* %5963, i64 %5961
  %5966 = ptrtoint i32* %5965 to i64
  store i32 101, i32* %5964, align 4
  %5967 = getelementptr inbounds i32, i32* %5964, i64 1
  %5968 = ptrtoint i32* %5967 to i64
  %5969 = ptrtoint i32* %5963 to i64
  %5970 = icmp sgt i64 %5936, 0
  br i1 %5970, label %5971, label %5973

5971:                                             ; preds = %5960
  %5972 = inttoptr i64 %5935 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5962, i8* align 4 %5972, i64 %5936, i1 false) #9
  br label %5973

5973:                                             ; preds = %5971, %5960
  store i64 %5969, i64* %5934, align 8
  store i64 %5968, i64* %5933, align 8
  store i64 %5966, i64* %5943, align 8
  %5974 = icmp eq i64 %5935, 0
  br i1 %5974, label %5977, label %5975

5975:                                             ; preds = %5973
  %5976 = inttoptr i64 %5935 to i8*
  tail call void @_ZdlPv(i8* %5976) #10
  br label %5977

5977:                                             ; preds = %5975, %5973, %5927, %5918
  %5978 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 102
  %5979 = load i8, i8* %5978, align 2, !range !2
  %5980 = icmp eq i8 %5979, 0
  br i1 %5980, label %6036, label %5981

5981:                                             ; preds = %5977
  %5982 = load i32*, i32** %3, align 8
  %5983 = load i32*, i32** %4, align 8
  %5984 = icmp ult i32* %5982, %5983
  %5985 = ptrtoint i32* %5983 to i64
  br i1 %5984, label %5986, label %5990

5986:                                             ; preds = %5981
  store i32 102, i32* %5982, align 4
  %5987 = getelementptr inbounds i32, i32* %5982, i64 1
  %5988 = ptrtoint i32* %5987 to i64
  %5989 = bitcast i32** %3 to i64*
  store i64 %5988, i64* %5989, align 8
  br label %6036

5990:                                             ; preds = %5981
  %5991 = ptrtoint i32* %5982 to i64
  %5992 = bitcast i32** %3 to i64*
  %5993 = bitcast %"class.std::__1::vector"* %0 to i64*
  %5994 = load i64, i64* %5993, align 8
  %5995 = sub i64 %5991, %5994
  %5996 = ashr exact i64 %5995, 2
  %5997 = add nsw i64 %5996, 1
  %5998 = icmp ugt i64 %5997, 4611686018427387903
  br i1 %5998, label %5999, label %6001

5999:                                             ; preds = %5990
  %6000 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6000) #11
  unreachable

6001:                                             ; preds = %5990
  %6002 = bitcast i32** %4 to i64*
  %6003 = sub i64 %5985, %5994
  %6004 = ashr exact i64 %6003, 2
  %6005 = icmp ult i64 %6004, 2305843009213693951
  br i1 %6005, label %6006, label %6014

6006:                                             ; preds = %6001
  %6007 = ashr exact i64 %6003, 1
  %6008 = icmp ult i64 %6007, %5997
  %6009 = select i1 %6008, i64 %5997, i64 %6007
  %6010 = icmp eq i64 %6009, 0
  br i1 %6010, label %6019, label %6011

6011:                                             ; preds = %6006
  %6012 = icmp ugt i64 %6009, 4611686018427387903
  br i1 %6012, label %6013, label %6014

6013:                                             ; preds = %6011
  tail call void @abort() #11
  unreachable

6014:                                             ; preds = %6011, %6001
  %6015 = phi i64 [ %6009, %6011 ], [ 4611686018427387903, %6001 ]
  %6016 = shl i64 %6015, 2
  %6017 = tail call i8* @_Znwm(i64 %6016) #10
  %6018 = bitcast i8* %6017 to i32*
  br label %6019

6019:                                             ; preds = %6014, %6006
  %6020 = phi i64 [ %6015, %6014 ], [ 0, %6006 ]
  %6021 = phi i8* [ %6017, %6014 ], [ null, %6006 ]
  %6022 = phi i32* [ %6018, %6014 ], [ null, %6006 ]
  %6023 = getelementptr inbounds i32, i32* %6022, i64 %5996
  %6024 = getelementptr inbounds i32, i32* %6022, i64 %6020
  %6025 = ptrtoint i32* %6024 to i64
  store i32 102, i32* %6023, align 4
  %6026 = getelementptr inbounds i32, i32* %6023, i64 1
  %6027 = ptrtoint i32* %6026 to i64
  %6028 = ptrtoint i32* %6022 to i64
  %6029 = icmp sgt i64 %5995, 0
  br i1 %6029, label %6030, label %6032

6030:                                             ; preds = %6019
  %6031 = inttoptr i64 %5994 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6021, i8* align 4 %6031, i64 %5995, i1 false) #9
  br label %6032

6032:                                             ; preds = %6030, %6019
  store i64 %6028, i64* %5993, align 8
  store i64 %6027, i64* %5992, align 8
  store i64 %6025, i64* %6002, align 8
  %6033 = icmp eq i64 %5994, 0
  br i1 %6033, label %6036, label %6034

6034:                                             ; preds = %6032
  %6035 = inttoptr i64 %5994 to i8*
  tail call void @_ZdlPv(i8* %6035) #10
  br label %6036

6036:                                             ; preds = %6034, %6032, %5986, %5977
  %6037 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 103
  %6038 = load i8, i8* %6037, align 1, !range !2
  %6039 = icmp eq i8 %6038, 0
  br i1 %6039, label %6095, label %6040

6040:                                             ; preds = %6036
  %6041 = load i32*, i32** %3, align 8
  %6042 = load i32*, i32** %4, align 8
  %6043 = icmp ult i32* %6041, %6042
  %6044 = ptrtoint i32* %6042 to i64
  br i1 %6043, label %6045, label %6049

6045:                                             ; preds = %6040
  store i32 103, i32* %6041, align 4
  %6046 = getelementptr inbounds i32, i32* %6041, i64 1
  %6047 = ptrtoint i32* %6046 to i64
  %6048 = bitcast i32** %3 to i64*
  store i64 %6047, i64* %6048, align 8
  br label %6095

6049:                                             ; preds = %6040
  %6050 = ptrtoint i32* %6041 to i64
  %6051 = bitcast i32** %3 to i64*
  %6052 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6053 = load i64, i64* %6052, align 8
  %6054 = sub i64 %6050, %6053
  %6055 = ashr exact i64 %6054, 2
  %6056 = add nsw i64 %6055, 1
  %6057 = icmp ugt i64 %6056, 4611686018427387903
  br i1 %6057, label %6058, label %6060

6058:                                             ; preds = %6049
  %6059 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6059) #11
  unreachable

6060:                                             ; preds = %6049
  %6061 = bitcast i32** %4 to i64*
  %6062 = sub i64 %6044, %6053
  %6063 = ashr exact i64 %6062, 2
  %6064 = icmp ult i64 %6063, 2305843009213693951
  br i1 %6064, label %6065, label %6073

6065:                                             ; preds = %6060
  %6066 = ashr exact i64 %6062, 1
  %6067 = icmp ult i64 %6066, %6056
  %6068 = select i1 %6067, i64 %6056, i64 %6066
  %6069 = icmp eq i64 %6068, 0
  br i1 %6069, label %6078, label %6070

6070:                                             ; preds = %6065
  %6071 = icmp ugt i64 %6068, 4611686018427387903
  br i1 %6071, label %6072, label %6073

6072:                                             ; preds = %6070
  tail call void @abort() #11
  unreachable

6073:                                             ; preds = %6070, %6060
  %6074 = phi i64 [ %6068, %6070 ], [ 4611686018427387903, %6060 ]
  %6075 = shl i64 %6074, 2
  %6076 = tail call i8* @_Znwm(i64 %6075) #10
  %6077 = bitcast i8* %6076 to i32*
  br label %6078

6078:                                             ; preds = %6073, %6065
  %6079 = phi i64 [ %6074, %6073 ], [ 0, %6065 ]
  %6080 = phi i8* [ %6076, %6073 ], [ null, %6065 ]
  %6081 = phi i32* [ %6077, %6073 ], [ null, %6065 ]
  %6082 = getelementptr inbounds i32, i32* %6081, i64 %6055
  %6083 = getelementptr inbounds i32, i32* %6081, i64 %6079
  %6084 = ptrtoint i32* %6083 to i64
  store i32 103, i32* %6082, align 4
  %6085 = getelementptr inbounds i32, i32* %6082, i64 1
  %6086 = ptrtoint i32* %6085 to i64
  %6087 = ptrtoint i32* %6081 to i64
  %6088 = icmp sgt i64 %6054, 0
  br i1 %6088, label %6089, label %6091

6089:                                             ; preds = %6078
  %6090 = inttoptr i64 %6053 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6080, i8* align 4 %6090, i64 %6054, i1 false) #9
  br label %6091

6091:                                             ; preds = %6089, %6078
  store i64 %6087, i64* %6052, align 8
  store i64 %6086, i64* %6051, align 8
  store i64 %6084, i64* %6061, align 8
  %6092 = icmp eq i64 %6053, 0
  br i1 %6092, label %6095, label %6093

6093:                                             ; preds = %6091
  %6094 = inttoptr i64 %6053 to i8*
  tail call void @_ZdlPv(i8* %6094) #10
  br label %6095

6095:                                             ; preds = %6093, %6091, %6045, %6036
  %6096 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 104
  %6097 = load i8, i8* %6096, align 4, !range !2
  %6098 = icmp eq i8 %6097, 0
  br i1 %6098, label %6154, label %6099

6099:                                             ; preds = %6095
  %6100 = load i32*, i32** %3, align 8
  %6101 = load i32*, i32** %4, align 8
  %6102 = icmp ult i32* %6100, %6101
  %6103 = ptrtoint i32* %6101 to i64
  br i1 %6102, label %6104, label %6108

6104:                                             ; preds = %6099
  store i32 104, i32* %6100, align 4
  %6105 = getelementptr inbounds i32, i32* %6100, i64 1
  %6106 = ptrtoint i32* %6105 to i64
  %6107 = bitcast i32** %3 to i64*
  store i64 %6106, i64* %6107, align 8
  br label %6154

6108:                                             ; preds = %6099
  %6109 = ptrtoint i32* %6100 to i64
  %6110 = bitcast i32** %3 to i64*
  %6111 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6112 = load i64, i64* %6111, align 8
  %6113 = sub i64 %6109, %6112
  %6114 = ashr exact i64 %6113, 2
  %6115 = add nsw i64 %6114, 1
  %6116 = icmp ugt i64 %6115, 4611686018427387903
  br i1 %6116, label %6117, label %6119

6117:                                             ; preds = %6108
  %6118 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6118) #11
  unreachable

6119:                                             ; preds = %6108
  %6120 = bitcast i32** %4 to i64*
  %6121 = sub i64 %6103, %6112
  %6122 = ashr exact i64 %6121, 2
  %6123 = icmp ult i64 %6122, 2305843009213693951
  br i1 %6123, label %6124, label %6132

6124:                                             ; preds = %6119
  %6125 = ashr exact i64 %6121, 1
  %6126 = icmp ult i64 %6125, %6115
  %6127 = select i1 %6126, i64 %6115, i64 %6125
  %6128 = icmp eq i64 %6127, 0
  br i1 %6128, label %6137, label %6129

6129:                                             ; preds = %6124
  %6130 = icmp ugt i64 %6127, 4611686018427387903
  br i1 %6130, label %6131, label %6132

6131:                                             ; preds = %6129
  tail call void @abort() #11
  unreachable

6132:                                             ; preds = %6129, %6119
  %6133 = phi i64 [ %6127, %6129 ], [ 4611686018427387903, %6119 ]
  %6134 = shl i64 %6133, 2
  %6135 = tail call i8* @_Znwm(i64 %6134) #10
  %6136 = bitcast i8* %6135 to i32*
  br label %6137

6137:                                             ; preds = %6132, %6124
  %6138 = phi i64 [ %6133, %6132 ], [ 0, %6124 ]
  %6139 = phi i8* [ %6135, %6132 ], [ null, %6124 ]
  %6140 = phi i32* [ %6136, %6132 ], [ null, %6124 ]
  %6141 = getelementptr inbounds i32, i32* %6140, i64 %6114
  %6142 = getelementptr inbounds i32, i32* %6140, i64 %6138
  %6143 = ptrtoint i32* %6142 to i64
  store i32 104, i32* %6141, align 4
  %6144 = getelementptr inbounds i32, i32* %6141, i64 1
  %6145 = ptrtoint i32* %6144 to i64
  %6146 = ptrtoint i32* %6140 to i64
  %6147 = icmp sgt i64 %6113, 0
  br i1 %6147, label %6148, label %6150

6148:                                             ; preds = %6137
  %6149 = inttoptr i64 %6112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6139, i8* align 4 %6149, i64 %6113, i1 false) #9
  br label %6150

6150:                                             ; preds = %6148, %6137
  store i64 %6146, i64* %6111, align 8
  store i64 %6145, i64* %6110, align 8
  store i64 %6143, i64* %6120, align 8
  %6151 = icmp eq i64 %6112, 0
  br i1 %6151, label %6154, label %6152

6152:                                             ; preds = %6150
  %6153 = inttoptr i64 %6112 to i8*
  tail call void @_ZdlPv(i8* %6153) #10
  br label %6154

6154:                                             ; preds = %6152, %6150, %6104, %6095
  %6155 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 105
  %6156 = load i8, i8* %6155, align 1, !range !2
  %6157 = icmp eq i8 %6156, 0
  br i1 %6157, label %6213, label %6158

6158:                                             ; preds = %6154
  %6159 = load i32*, i32** %3, align 8
  %6160 = load i32*, i32** %4, align 8
  %6161 = icmp ult i32* %6159, %6160
  %6162 = ptrtoint i32* %6160 to i64
  br i1 %6161, label %6163, label %6167

6163:                                             ; preds = %6158
  store i32 105, i32* %6159, align 4
  %6164 = getelementptr inbounds i32, i32* %6159, i64 1
  %6165 = ptrtoint i32* %6164 to i64
  %6166 = bitcast i32** %3 to i64*
  store i64 %6165, i64* %6166, align 8
  br label %6213

6167:                                             ; preds = %6158
  %6168 = ptrtoint i32* %6159 to i64
  %6169 = bitcast i32** %3 to i64*
  %6170 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6171 = load i64, i64* %6170, align 8
  %6172 = sub i64 %6168, %6171
  %6173 = ashr exact i64 %6172, 2
  %6174 = add nsw i64 %6173, 1
  %6175 = icmp ugt i64 %6174, 4611686018427387903
  br i1 %6175, label %6176, label %6178

6176:                                             ; preds = %6167
  %6177 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6177) #11
  unreachable

6178:                                             ; preds = %6167
  %6179 = bitcast i32** %4 to i64*
  %6180 = sub i64 %6162, %6171
  %6181 = ashr exact i64 %6180, 2
  %6182 = icmp ult i64 %6181, 2305843009213693951
  br i1 %6182, label %6183, label %6191

6183:                                             ; preds = %6178
  %6184 = ashr exact i64 %6180, 1
  %6185 = icmp ult i64 %6184, %6174
  %6186 = select i1 %6185, i64 %6174, i64 %6184
  %6187 = icmp eq i64 %6186, 0
  br i1 %6187, label %6196, label %6188

6188:                                             ; preds = %6183
  %6189 = icmp ugt i64 %6186, 4611686018427387903
  br i1 %6189, label %6190, label %6191

6190:                                             ; preds = %6188
  tail call void @abort() #11
  unreachable

6191:                                             ; preds = %6188, %6178
  %6192 = phi i64 [ %6186, %6188 ], [ 4611686018427387903, %6178 ]
  %6193 = shl i64 %6192, 2
  %6194 = tail call i8* @_Znwm(i64 %6193) #10
  %6195 = bitcast i8* %6194 to i32*
  br label %6196

6196:                                             ; preds = %6191, %6183
  %6197 = phi i64 [ %6192, %6191 ], [ 0, %6183 ]
  %6198 = phi i8* [ %6194, %6191 ], [ null, %6183 ]
  %6199 = phi i32* [ %6195, %6191 ], [ null, %6183 ]
  %6200 = getelementptr inbounds i32, i32* %6199, i64 %6173
  %6201 = getelementptr inbounds i32, i32* %6199, i64 %6197
  %6202 = ptrtoint i32* %6201 to i64
  store i32 105, i32* %6200, align 4
  %6203 = getelementptr inbounds i32, i32* %6200, i64 1
  %6204 = ptrtoint i32* %6203 to i64
  %6205 = ptrtoint i32* %6199 to i64
  %6206 = icmp sgt i64 %6172, 0
  br i1 %6206, label %6207, label %6209

6207:                                             ; preds = %6196
  %6208 = inttoptr i64 %6171 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6198, i8* align 4 %6208, i64 %6172, i1 false) #9
  br label %6209

6209:                                             ; preds = %6207, %6196
  store i64 %6205, i64* %6170, align 8
  store i64 %6204, i64* %6169, align 8
  store i64 %6202, i64* %6179, align 8
  %6210 = icmp eq i64 %6171, 0
  br i1 %6210, label %6213, label %6211

6211:                                             ; preds = %6209
  %6212 = inttoptr i64 %6171 to i8*
  tail call void @_ZdlPv(i8* %6212) #10
  br label %6213

6213:                                             ; preds = %6211, %6209, %6163, %6154
  %6214 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 106
  %6215 = load i8, i8* %6214, align 2, !range !2
  %6216 = icmp eq i8 %6215, 0
  br i1 %6216, label %6272, label %6217

6217:                                             ; preds = %6213
  %6218 = load i32*, i32** %3, align 8
  %6219 = load i32*, i32** %4, align 8
  %6220 = icmp ult i32* %6218, %6219
  %6221 = ptrtoint i32* %6219 to i64
  br i1 %6220, label %6222, label %6226

6222:                                             ; preds = %6217
  store i32 106, i32* %6218, align 4
  %6223 = getelementptr inbounds i32, i32* %6218, i64 1
  %6224 = ptrtoint i32* %6223 to i64
  %6225 = bitcast i32** %3 to i64*
  store i64 %6224, i64* %6225, align 8
  br label %6272

6226:                                             ; preds = %6217
  %6227 = ptrtoint i32* %6218 to i64
  %6228 = bitcast i32** %3 to i64*
  %6229 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6230 = load i64, i64* %6229, align 8
  %6231 = sub i64 %6227, %6230
  %6232 = ashr exact i64 %6231, 2
  %6233 = add nsw i64 %6232, 1
  %6234 = icmp ugt i64 %6233, 4611686018427387903
  br i1 %6234, label %6235, label %6237

6235:                                             ; preds = %6226
  %6236 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6236) #11
  unreachable

6237:                                             ; preds = %6226
  %6238 = bitcast i32** %4 to i64*
  %6239 = sub i64 %6221, %6230
  %6240 = ashr exact i64 %6239, 2
  %6241 = icmp ult i64 %6240, 2305843009213693951
  br i1 %6241, label %6242, label %6250

6242:                                             ; preds = %6237
  %6243 = ashr exact i64 %6239, 1
  %6244 = icmp ult i64 %6243, %6233
  %6245 = select i1 %6244, i64 %6233, i64 %6243
  %6246 = icmp eq i64 %6245, 0
  br i1 %6246, label %6255, label %6247

6247:                                             ; preds = %6242
  %6248 = icmp ugt i64 %6245, 4611686018427387903
  br i1 %6248, label %6249, label %6250

6249:                                             ; preds = %6247
  tail call void @abort() #11
  unreachable

6250:                                             ; preds = %6247, %6237
  %6251 = phi i64 [ %6245, %6247 ], [ 4611686018427387903, %6237 ]
  %6252 = shl i64 %6251, 2
  %6253 = tail call i8* @_Znwm(i64 %6252) #10
  %6254 = bitcast i8* %6253 to i32*
  br label %6255

6255:                                             ; preds = %6250, %6242
  %6256 = phi i64 [ %6251, %6250 ], [ 0, %6242 ]
  %6257 = phi i8* [ %6253, %6250 ], [ null, %6242 ]
  %6258 = phi i32* [ %6254, %6250 ], [ null, %6242 ]
  %6259 = getelementptr inbounds i32, i32* %6258, i64 %6232
  %6260 = getelementptr inbounds i32, i32* %6258, i64 %6256
  %6261 = ptrtoint i32* %6260 to i64
  store i32 106, i32* %6259, align 4
  %6262 = getelementptr inbounds i32, i32* %6259, i64 1
  %6263 = ptrtoint i32* %6262 to i64
  %6264 = ptrtoint i32* %6258 to i64
  %6265 = icmp sgt i64 %6231, 0
  br i1 %6265, label %6266, label %6268

6266:                                             ; preds = %6255
  %6267 = inttoptr i64 %6230 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6257, i8* align 4 %6267, i64 %6231, i1 false) #9
  br label %6268

6268:                                             ; preds = %6266, %6255
  store i64 %6264, i64* %6229, align 8
  store i64 %6263, i64* %6228, align 8
  store i64 %6261, i64* %6238, align 8
  %6269 = icmp eq i64 %6230, 0
  br i1 %6269, label %6272, label %6270

6270:                                             ; preds = %6268
  %6271 = inttoptr i64 %6230 to i8*
  tail call void @_ZdlPv(i8* %6271) #10
  br label %6272

6272:                                             ; preds = %6270, %6268, %6222, %6213
  %6273 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 107
  %6274 = load i8, i8* %6273, align 1, !range !2
  %6275 = icmp eq i8 %6274, 0
  br i1 %6275, label %6331, label %6276

6276:                                             ; preds = %6272
  %6277 = load i32*, i32** %3, align 8
  %6278 = load i32*, i32** %4, align 8
  %6279 = icmp ult i32* %6277, %6278
  %6280 = ptrtoint i32* %6278 to i64
  br i1 %6279, label %6281, label %6285

6281:                                             ; preds = %6276
  store i32 107, i32* %6277, align 4
  %6282 = getelementptr inbounds i32, i32* %6277, i64 1
  %6283 = ptrtoint i32* %6282 to i64
  %6284 = bitcast i32** %3 to i64*
  store i64 %6283, i64* %6284, align 8
  br label %6331

6285:                                             ; preds = %6276
  %6286 = ptrtoint i32* %6277 to i64
  %6287 = bitcast i32** %3 to i64*
  %6288 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6289 = load i64, i64* %6288, align 8
  %6290 = sub i64 %6286, %6289
  %6291 = ashr exact i64 %6290, 2
  %6292 = add nsw i64 %6291, 1
  %6293 = icmp ugt i64 %6292, 4611686018427387903
  br i1 %6293, label %6294, label %6296

6294:                                             ; preds = %6285
  %6295 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6295) #11
  unreachable

6296:                                             ; preds = %6285
  %6297 = bitcast i32** %4 to i64*
  %6298 = sub i64 %6280, %6289
  %6299 = ashr exact i64 %6298, 2
  %6300 = icmp ult i64 %6299, 2305843009213693951
  br i1 %6300, label %6301, label %6309

6301:                                             ; preds = %6296
  %6302 = ashr exact i64 %6298, 1
  %6303 = icmp ult i64 %6302, %6292
  %6304 = select i1 %6303, i64 %6292, i64 %6302
  %6305 = icmp eq i64 %6304, 0
  br i1 %6305, label %6314, label %6306

6306:                                             ; preds = %6301
  %6307 = icmp ugt i64 %6304, 4611686018427387903
  br i1 %6307, label %6308, label %6309

6308:                                             ; preds = %6306
  tail call void @abort() #11
  unreachable

6309:                                             ; preds = %6306, %6296
  %6310 = phi i64 [ %6304, %6306 ], [ 4611686018427387903, %6296 ]
  %6311 = shl i64 %6310, 2
  %6312 = tail call i8* @_Znwm(i64 %6311) #10
  %6313 = bitcast i8* %6312 to i32*
  br label %6314

6314:                                             ; preds = %6309, %6301
  %6315 = phi i64 [ %6310, %6309 ], [ 0, %6301 ]
  %6316 = phi i8* [ %6312, %6309 ], [ null, %6301 ]
  %6317 = phi i32* [ %6313, %6309 ], [ null, %6301 ]
  %6318 = getelementptr inbounds i32, i32* %6317, i64 %6291
  %6319 = getelementptr inbounds i32, i32* %6317, i64 %6315
  %6320 = ptrtoint i32* %6319 to i64
  store i32 107, i32* %6318, align 4
  %6321 = getelementptr inbounds i32, i32* %6318, i64 1
  %6322 = ptrtoint i32* %6321 to i64
  %6323 = ptrtoint i32* %6317 to i64
  %6324 = icmp sgt i64 %6290, 0
  br i1 %6324, label %6325, label %6327

6325:                                             ; preds = %6314
  %6326 = inttoptr i64 %6289 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6316, i8* align 4 %6326, i64 %6290, i1 false) #9
  br label %6327

6327:                                             ; preds = %6325, %6314
  store i64 %6323, i64* %6288, align 8
  store i64 %6322, i64* %6287, align 8
  store i64 %6320, i64* %6297, align 8
  %6328 = icmp eq i64 %6289, 0
  br i1 %6328, label %6331, label %6329

6329:                                             ; preds = %6327
  %6330 = inttoptr i64 %6289 to i8*
  tail call void @_ZdlPv(i8* %6330) #10
  br label %6331

6331:                                             ; preds = %6329, %6327, %6281, %6272
  %6332 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 108
  %6333 = load i8, i8* %6332, align 4, !range !2
  %6334 = icmp eq i8 %6333, 0
  br i1 %6334, label %6390, label %6335

6335:                                             ; preds = %6331
  %6336 = load i32*, i32** %3, align 8
  %6337 = load i32*, i32** %4, align 8
  %6338 = icmp ult i32* %6336, %6337
  %6339 = ptrtoint i32* %6337 to i64
  br i1 %6338, label %6340, label %6344

6340:                                             ; preds = %6335
  store i32 108, i32* %6336, align 4
  %6341 = getelementptr inbounds i32, i32* %6336, i64 1
  %6342 = ptrtoint i32* %6341 to i64
  %6343 = bitcast i32** %3 to i64*
  store i64 %6342, i64* %6343, align 8
  br label %6390

6344:                                             ; preds = %6335
  %6345 = ptrtoint i32* %6336 to i64
  %6346 = bitcast i32** %3 to i64*
  %6347 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6348 = load i64, i64* %6347, align 8
  %6349 = sub i64 %6345, %6348
  %6350 = ashr exact i64 %6349, 2
  %6351 = add nsw i64 %6350, 1
  %6352 = icmp ugt i64 %6351, 4611686018427387903
  br i1 %6352, label %6353, label %6355

6353:                                             ; preds = %6344
  %6354 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6354) #11
  unreachable

6355:                                             ; preds = %6344
  %6356 = bitcast i32** %4 to i64*
  %6357 = sub i64 %6339, %6348
  %6358 = ashr exact i64 %6357, 2
  %6359 = icmp ult i64 %6358, 2305843009213693951
  br i1 %6359, label %6360, label %6368

6360:                                             ; preds = %6355
  %6361 = ashr exact i64 %6357, 1
  %6362 = icmp ult i64 %6361, %6351
  %6363 = select i1 %6362, i64 %6351, i64 %6361
  %6364 = icmp eq i64 %6363, 0
  br i1 %6364, label %6373, label %6365

6365:                                             ; preds = %6360
  %6366 = icmp ugt i64 %6363, 4611686018427387903
  br i1 %6366, label %6367, label %6368

6367:                                             ; preds = %6365
  tail call void @abort() #11
  unreachable

6368:                                             ; preds = %6365, %6355
  %6369 = phi i64 [ %6363, %6365 ], [ 4611686018427387903, %6355 ]
  %6370 = shl i64 %6369, 2
  %6371 = tail call i8* @_Znwm(i64 %6370) #10
  %6372 = bitcast i8* %6371 to i32*
  br label %6373

6373:                                             ; preds = %6368, %6360
  %6374 = phi i64 [ %6369, %6368 ], [ 0, %6360 ]
  %6375 = phi i8* [ %6371, %6368 ], [ null, %6360 ]
  %6376 = phi i32* [ %6372, %6368 ], [ null, %6360 ]
  %6377 = getelementptr inbounds i32, i32* %6376, i64 %6350
  %6378 = getelementptr inbounds i32, i32* %6376, i64 %6374
  %6379 = ptrtoint i32* %6378 to i64
  store i32 108, i32* %6377, align 4
  %6380 = getelementptr inbounds i32, i32* %6377, i64 1
  %6381 = ptrtoint i32* %6380 to i64
  %6382 = ptrtoint i32* %6376 to i64
  %6383 = icmp sgt i64 %6349, 0
  br i1 %6383, label %6384, label %6386

6384:                                             ; preds = %6373
  %6385 = inttoptr i64 %6348 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6375, i8* align 4 %6385, i64 %6349, i1 false) #9
  br label %6386

6386:                                             ; preds = %6384, %6373
  store i64 %6382, i64* %6347, align 8
  store i64 %6381, i64* %6346, align 8
  store i64 %6379, i64* %6356, align 8
  %6387 = icmp eq i64 %6348, 0
  br i1 %6387, label %6390, label %6388

6388:                                             ; preds = %6386
  %6389 = inttoptr i64 %6348 to i8*
  tail call void @_ZdlPv(i8* %6389) #10
  br label %6390

6390:                                             ; preds = %6388, %6386, %6340, %6331
  %6391 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 109
  %6392 = load i8, i8* %6391, align 1, !range !2
  %6393 = icmp eq i8 %6392, 0
  br i1 %6393, label %6449, label %6394

6394:                                             ; preds = %6390
  %6395 = load i32*, i32** %3, align 8
  %6396 = load i32*, i32** %4, align 8
  %6397 = icmp ult i32* %6395, %6396
  %6398 = ptrtoint i32* %6396 to i64
  br i1 %6397, label %6399, label %6403

6399:                                             ; preds = %6394
  store i32 109, i32* %6395, align 4
  %6400 = getelementptr inbounds i32, i32* %6395, i64 1
  %6401 = ptrtoint i32* %6400 to i64
  %6402 = bitcast i32** %3 to i64*
  store i64 %6401, i64* %6402, align 8
  br label %6449

6403:                                             ; preds = %6394
  %6404 = ptrtoint i32* %6395 to i64
  %6405 = bitcast i32** %3 to i64*
  %6406 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6407 = load i64, i64* %6406, align 8
  %6408 = sub i64 %6404, %6407
  %6409 = ashr exact i64 %6408, 2
  %6410 = add nsw i64 %6409, 1
  %6411 = icmp ugt i64 %6410, 4611686018427387903
  br i1 %6411, label %6412, label %6414

6412:                                             ; preds = %6403
  %6413 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6413) #11
  unreachable

6414:                                             ; preds = %6403
  %6415 = bitcast i32** %4 to i64*
  %6416 = sub i64 %6398, %6407
  %6417 = ashr exact i64 %6416, 2
  %6418 = icmp ult i64 %6417, 2305843009213693951
  br i1 %6418, label %6419, label %6427

6419:                                             ; preds = %6414
  %6420 = ashr exact i64 %6416, 1
  %6421 = icmp ult i64 %6420, %6410
  %6422 = select i1 %6421, i64 %6410, i64 %6420
  %6423 = icmp eq i64 %6422, 0
  br i1 %6423, label %6432, label %6424

6424:                                             ; preds = %6419
  %6425 = icmp ugt i64 %6422, 4611686018427387903
  br i1 %6425, label %6426, label %6427

6426:                                             ; preds = %6424
  tail call void @abort() #11
  unreachable

6427:                                             ; preds = %6424, %6414
  %6428 = phi i64 [ %6422, %6424 ], [ 4611686018427387903, %6414 ]
  %6429 = shl i64 %6428, 2
  %6430 = tail call i8* @_Znwm(i64 %6429) #10
  %6431 = bitcast i8* %6430 to i32*
  br label %6432

6432:                                             ; preds = %6427, %6419
  %6433 = phi i64 [ %6428, %6427 ], [ 0, %6419 ]
  %6434 = phi i8* [ %6430, %6427 ], [ null, %6419 ]
  %6435 = phi i32* [ %6431, %6427 ], [ null, %6419 ]
  %6436 = getelementptr inbounds i32, i32* %6435, i64 %6409
  %6437 = getelementptr inbounds i32, i32* %6435, i64 %6433
  %6438 = ptrtoint i32* %6437 to i64
  store i32 109, i32* %6436, align 4
  %6439 = getelementptr inbounds i32, i32* %6436, i64 1
  %6440 = ptrtoint i32* %6439 to i64
  %6441 = ptrtoint i32* %6435 to i64
  %6442 = icmp sgt i64 %6408, 0
  br i1 %6442, label %6443, label %6445

6443:                                             ; preds = %6432
  %6444 = inttoptr i64 %6407 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6434, i8* align 4 %6444, i64 %6408, i1 false) #9
  br label %6445

6445:                                             ; preds = %6443, %6432
  store i64 %6441, i64* %6406, align 8
  store i64 %6440, i64* %6405, align 8
  store i64 %6438, i64* %6415, align 8
  %6446 = icmp eq i64 %6407, 0
  br i1 %6446, label %6449, label %6447

6447:                                             ; preds = %6445
  %6448 = inttoptr i64 %6407 to i8*
  tail call void @_ZdlPv(i8* %6448) #10
  br label %6449

6449:                                             ; preds = %6447, %6445, %6399, %6390
  %6450 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 110
  %6451 = load i8, i8* %6450, align 2, !range !2
  %6452 = icmp eq i8 %6451, 0
  br i1 %6452, label %6508, label %6453

6453:                                             ; preds = %6449
  %6454 = load i32*, i32** %3, align 8
  %6455 = load i32*, i32** %4, align 8
  %6456 = icmp ult i32* %6454, %6455
  %6457 = ptrtoint i32* %6455 to i64
  br i1 %6456, label %6458, label %6462

6458:                                             ; preds = %6453
  store i32 110, i32* %6454, align 4
  %6459 = getelementptr inbounds i32, i32* %6454, i64 1
  %6460 = ptrtoint i32* %6459 to i64
  %6461 = bitcast i32** %3 to i64*
  store i64 %6460, i64* %6461, align 8
  br label %6508

6462:                                             ; preds = %6453
  %6463 = ptrtoint i32* %6454 to i64
  %6464 = bitcast i32** %3 to i64*
  %6465 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6466 = load i64, i64* %6465, align 8
  %6467 = sub i64 %6463, %6466
  %6468 = ashr exact i64 %6467, 2
  %6469 = add nsw i64 %6468, 1
  %6470 = icmp ugt i64 %6469, 4611686018427387903
  br i1 %6470, label %6471, label %6473

6471:                                             ; preds = %6462
  %6472 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6472) #11
  unreachable

6473:                                             ; preds = %6462
  %6474 = bitcast i32** %4 to i64*
  %6475 = sub i64 %6457, %6466
  %6476 = ashr exact i64 %6475, 2
  %6477 = icmp ult i64 %6476, 2305843009213693951
  br i1 %6477, label %6478, label %6486

6478:                                             ; preds = %6473
  %6479 = ashr exact i64 %6475, 1
  %6480 = icmp ult i64 %6479, %6469
  %6481 = select i1 %6480, i64 %6469, i64 %6479
  %6482 = icmp eq i64 %6481, 0
  br i1 %6482, label %6491, label %6483

6483:                                             ; preds = %6478
  %6484 = icmp ugt i64 %6481, 4611686018427387903
  br i1 %6484, label %6485, label %6486

6485:                                             ; preds = %6483
  tail call void @abort() #11
  unreachable

6486:                                             ; preds = %6483, %6473
  %6487 = phi i64 [ %6481, %6483 ], [ 4611686018427387903, %6473 ]
  %6488 = shl i64 %6487, 2
  %6489 = tail call i8* @_Znwm(i64 %6488) #10
  %6490 = bitcast i8* %6489 to i32*
  br label %6491

6491:                                             ; preds = %6486, %6478
  %6492 = phi i64 [ %6487, %6486 ], [ 0, %6478 ]
  %6493 = phi i8* [ %6489, %6486 ], [ null, %6478 ]
  %6494 = phi i32* [ %6490, %6486 ], [ null, %6478 ]
  %6495 = getelementptr inbounds i32, i32* %6494, i64 %6468
  %6496 = getelementptr inbounds i32, i32* %6494, i64 %6492
  %6497 = ptrtoint i32* %6496 to i64
  store i32 110, i32* %6495, align 4
  %6498 = getelementptr inbounds i32, i32* %6495, i64 1
  %6499 = ptrtoint i32* %6498 to i64
  %6500 = ptrtoint i32* %6494 to i64
  %6501 = icmp sgt i64 %6467, 0
  br i1 %6501, label %6502, label %6504

6502:                                             ; preds = %6491
  %6503 = inttoptr i64 %6466 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6493, i8* align 4 %6503, i64 %6467, i1 false) #9
  br label %6504

6504:                                             ; preds = %6502, %6491
  store i64 %6500, i64* %6465, align 8
  store i64 %6499, i64* %6464, align 8
  store i64 %6497, i64* %6474, align 8
  %6505 = icmp eq i64 %6466, 0
  br i1 %6505, label %6508, label %6506

6506:                                             ; preds = %6504
  %6507 = inttoptr i64 %6466 to i8*
  tail call void @_ZdlPv(i8* %6507) #10
  br label %6508

6508:                                             ; preds = %6506, %6504, %6458, %6449
  %6509 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 111
  %6510 = load i8, i8* %6509, align 1, !range !2
  %6511 = icmp eq i8 %6510, 0
  br i1 %6511, label %6567, label %6512

6512:                                             ; preds = %6508
  %6513 = load i32*, i32** %3, align 8
  %6514 = load i32*, i32** %4, align 8
  %6515 = icmp ult i32* %6513, %6514
  %6516 = ptrtoint i32* %6514 to i64
  br i1 %6515, label %6517, label %6521

6517:                                             ; preds = %6512
  store i32 111, i32* %6513, align 4
  %6518 = getelementptr inbounds i32, i32* %6513, i64 1
  %6519 = ptrtoint i32* %6518 to i64
  %6520 = bitcast i32** %3 to i64*
  store i64 %6519, i64* %6520, align 8
  br label %6567

6521:                                             ; preds = %6512
  %6522 = ptrtoint i32* %6513 to i64
  %6523 = bitcast i32** %3 to i64*
  %6524 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6525 = load i64, i64* %6524, align 8
  %6526 = sub i64 %6522, %6525
  %6527 = ashr exact i64 %6526, 2
  %6528 = add nsw i64 %6527, 1
  %6529 = icmp ugt i64 %6528, 4611686018427387903
  br i1 %6529, label %6530, label %6532

6530:                                             ; preds = %6521
  %6531 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6531) #11
  unreachable

6532:                                             ; preds = %6521
  %6533 = bitcast i32** %4 to i64*
  %6534 = sub i64 %6516, %6525
  %6535 = ashr exact i64 %6534, 2
  %6536 = icmp ult i64 %6535, 2305843009213693951
  br i1 %6536, label %6537, label %6545

6537:                                             ; preds = %6532
  %6538 = ashr exact i64 %6534, 1
  %6539 = icmp ult i64 %6538, %6528
  %6540 = select i1 %6539, i64 %6528, i64 %6538
  %6541 = icmp eq i64 %6540, 0
  br i1 %6541, label %6550, label %6542

6542:                                             ; preds = %6537
  %6543 = icmp ugt i64 %6540, 4611686018427387903
  br i1 %6543, label %6544, label %6545

6544:                                             ; preds = %6542
  tail call void @abort() #11
  unreachable

6545:                                             ; preds = %6542, %6532
  %6546 = phi i64 [ %6540, %6542 ], [ 4611686018427387903, %6532 ]
  %6547 = shl i64 %6546, 2
  %6548 = tail call i8* @_Znwm(i64 %6547) #10
  %6549 = bitcast i8* %6548 to i32*
  br label %6550

6550:                                             ; preds = %6545, %6537
  %6551 = phi i64 [ %6546, %6545 ], [ 0, %6537 ]
  %6552 = phi i8* [ %6548, %6545 ], [ null, %6537 ]
  %6553 = phi i32* [ %6549, %6545 ], [ null, %6537 ]
  %6554 = getelementptr inbounds i32, i32* %6553, i64 %6527
  %6555 = getelementptr inbounds i32, i32* %6553, i64 %6551
  %6556 = ptrtoint i32* %6555 to i64
  store i32 111, i32* %6554, align 4
  %6557 = getelementptr inbounds i32, i32* %6554, i64 1
  %6558 = ptrtoint i32* %6557 to i64
  %6559 = ptrtoint i32* %6553 to i64
  %6560 = icmp sgt i64 %6526, 0
  br i1 %6560, label %6561, label %6563

6561:                                             ; preds = %6550
  %6562 = inttoptr i64 %6525 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6552, i8* align 4 %6562, i64 %6526, i1 false) #9
  br label %6563

6563:                                             ; preds = %6561, %6550
  store i64 %6559, i64* %6524, align 8
  store i64 %6558, i64* %6523, align 8
  store i64 %6556, i64* %6533, align 8
  %6564 = icmp eq i64 %6525, 0
  br i1 %6564, label %6567, label %6565

6565:                                             ; preds = %6563
  %6566 = inttoptr i64 %6525 to i8*
  tail call void @_ZdlPv(i8* %6566) #10
  br label %6567

6567:                                             ; preds = %6565, %6563, %6517, %6508
  %6568 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 112
  %6569 = load i8, i8* %6568, align 4, !range !2
  %6570 = icmp eq i8 %6569, 0
  br i1 %6570, label %6626, label %6571

6571:                                             ; preds = %6567
  %6572 = load i32*, i32** %3, align 8
  %6573 = load i32*, i32** %4, align 8
  %6574 = icmp ult i32* %6572, %6573
  %6575 = ptrtoint i32* %6573 to i64
  br i1 %6574, label %6576, label %6580

6576:                                             ; preds = %6571
  store i32 112, i32* %6572, align 4
  %6577 = getelementptr inbounds i32, i32* %6572, i64 1
  %6578 = ptrtoint i32* %6577 to i64
  %6579 = bitcast i32** %3 to i64*
  store i64 %6578, i64* %6579, align 8
  br label %6626

6580:                                             ; preds = %6571
  %6581 = ptrtoint i32* %6572 to i64
  %6582 = bitcast i32** %3 to i64*
  %6583 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6584 = load i64, i64* %6583, align 8
  %6585 = sub i64 %6581, %6584
  %6586 = ashr exact i64 %6585, 2
  %6587 = add nsw i64 %6586, 1
  %6588 = icmp ugt i64 %6587, 4611686018427387903
  br i1 %6588, label %6589, label %6591

6589:                                             ; preds = %6580
  %6590 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6590) #11
  unreachable

6591:                                             ; preds = %6580
  %6592 = bitcast i32** %4 to i64*
  %6593 = sub i64 %6575, %6584
  %6594 = ashr exact i64 %6593, 2
  %6595 = icmp ult i64 %6594, 2305843009213693951
  br i1 %6595, label %6596, label %6604

6596:                                             ; preds = %6591
  %6597 = ashr exact i64 %6593, 1
  %6598 = icmp ult i64 %6597, %6587
  %6599 = select i1 %6598, i64 %6587, i64 %6597
  %6600 = icmp eq i64 %6599, 0
  br i1 %6600, label %6609, label %6601

6601:                                             ; preds = %6596
  %6602 = icmp ugt i64 %6599, 4611686018427387903
  br i1 %6602, label %6603, label %6604

6603:                                             ; preds = %6601
  tail call void @abort() #11
  unreachable

6604:                                             ; preds = %6601, %6591
  %6605 = phi i64 [ %6599, %6601 ], [ 4611686018427387903, %6591 ]
  %6606 = shl i64 %6605, 2
  %6607 = tail call i8* @_Znwm(i64 %6606) #10
  %6608 = bitcast i8* %6607 to i32*
  br label %6609

6609:                                             ; preds = %6604, %6596
  %6610 = phi i64 [ %6605, %6604 ], [ 0, %6596 ]
  %6611 = phi i8* [ %6607, %6604 ], [ null, %6596 ]
  %6612 = phi i32* [ %6608, %6604 ], [ null, %6596 ]
  %6613 = getelementptr inbounds i32, i32* %6612, i64 %6586
  %6614 = getelementptr inbounds i32, i32* %6612, i64 %6610
  %6615 = ptrtoint i32* %6614 to i64
  store i32 112, i32* %6613, align 4
  %6616 = getelementptr inbounds i32, i32* %6613, i64 1
  %6617 = ptrtoint i32* %6616 to i64
  %6618 = ptrtoint i32* %6612 to i64
  %6619 = icmp sgt i64 %6585, 0
  br i1 %6619, label %6620, label %6622

6620:                                             ; preds = %6609
  %6621 = inttoptr i64 %6584 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6611, i8* align 4 %6621, i64 %6585, i1 false) #9
  br label %6622

6622:                                             ; preds = %6620, %6609
  store i64 %6618, i64* %6583, align 8
  store i64 %6617, i64* %6582, align 8
  store i64 %6615, i64* %6592, align 8
  %6623 = icmp eq i64 %6584, 0
  br i1 %6623, label %6626, label %6624

6624:                                             ; preds = %6622
  %6625 = inttoptr i64 %6584 to i8*
  tail call void @_ZdlPv(i8* %6625) #10
  br label %6626

6626:                                             ; preds = %6624, %6622, %6576, %6567
  %6627 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 113
  %6628 = load i8, i8* %6627, align 1, !range !2
  %6629 = icmp eq i8 %6628, 0
  br i1 %6629, label %6685, label %6630

6630:                                             ; preds = %6626
  %6631 = load i32*, i32** %3, align 8
  %6632 = load i32*, i32** %4, align 8
  %6633 = icmp ult i32* %6631, %6632
  %6634 = ptrtoint i32* %6632 to i64
  br i1 %6633, label %6635, label %6639

6635:                                             ; preds = %6630
  store i32 113, i32* %6631, align 4
  %6636 = getelementptr inbounds i32, i32* %6631, i64 1
  %6637 = ptrtoint i32* %6636 to i64
  %6638 = bitcast i32** %3 to i64*
  store i64 %6637, i64* %6638, align 8
  br label %6685

6639:                                             ; preds = %6630
  %6640 = ptrtoint i32* %6631 to i64
  %6641 = bitcast i32** %3 to i64*
  %6642 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6643 = load i64, i64* %6642, align 8
  %6644 = sub i64 %6640, %6643
  %6645 = ashr exact i64 %6644, 2
  %6646 = add nsw i64 %6645, 1
  %6647 = icmp ugt i64 %6646, 4611686018427387903
  br i1 %6647, label %6648, label %6650

6648:                                             ; preds = %6639
  %6649 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6649) #11
  unreachable

6650:                                             ; preds = %6639
  %6651 = bitcast i32** %4 to i64*
  %6652 = sub i64 %6634, %6643
  %6653 = ashr exact i64 %6652, 2
  %6654 = icmp ult i64 %6653, 2305843009213693951
  br i1 %6654, label %6655, label %6663

6655:                                             ; preds = %6650
  %6656 = ashr exact i64 %6652, 1
  %6657 = icmp ult i64 %6656, %6646
  %6658 = select i1 %6657, i64 %6646, i64 %6656
  %6659 = icmp eq i64 %6658, 0
  br i1 %6659, label %6668, label %6660

6660:                                             ; preds = %6655
  %6661 = icmp ugt i64 %6658, 4611686018427387903
  br i1 %6661, label %6662, label %6663

6662:                                             ; preds = %6660
  tail call void @abort() #11
  unreachable

6663:                                             ; preds = %6660, %6650
  %6664 = phi i64 [ %6658, %6660 ], [ 4611686018427387903, %6650 ]
  %6665 = shl i64 %6664, 2
  %6666 = tail call i8* @_Znwm(i64 %6665) #10
  %6667 = bitcast i8* %6666 to i32*
  br label %6668

6668:                                             ; preds = %6663, %6655
  %6669 = phi i64 [ %6664, %6663 ], [ 0, %6655 ]
  %6670 = phi i8* [ %6666, %6663 ], [ null, %6655 ]
  %6671 = phi i32* [ %6667, %6663 ], [ null, %6655 ]
  %6672 = getelementptr inbounds i32, i32* %6671, i64 %6645
  %6673 = getelementptr inbounds i32, i32* %6671, i64 %6669
  %6674 = ptrtoint i32* %6673 to i64
  store i32 113, i32* %6672, align 4
  %6675 = getelementptr inbounds i32, i32* %6672, i64 1
  %6676 = ptrtoint i32* %6675 to i64
  %6677 = ptrtoint i32* %6671 to i64
  %6678 = icmp sgt i64 %6644, 0
  br i1 %6678, label %6679, label %6681

6679:                                             ; preds = %6668
  %6680 = inttoptr i64 %6643 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6670, i8* align 4 %6680, i64 %6644, i1 false) #9
  br label %6681

6681:                                             ; preds = %6679, %6668
  store i64 %6677, i64* %6642, align 8
  store i64 %6676, i64* %6641, align 8
  store i64 %6674, i64* %6651, align 8
  %6682 = icmp eq i64 %6643, 0
  br i1 %6682, label %6685, label %6683

6683:                                             ; preds = %6681
  %6684 = inttoptr i64 %6643 to i8*
  tail call void @_ZdlPv(i8* %6684) #10
  br label %6685

6685:                                             ; preds = %6683, %6681, %6635, %6626
  %6686 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 114
  %6687 = load i8, i8* %6686, align 2, !range !2
  %6688 = icmp eq i8 %6687, 0
  br i1 %6688, label %6744, label %6689

6689:                                             ; preds = %6685
  %6690 = load i32*, i32** %3, align 8
  %6691 = load i32*, i32** %4, align 8
  %6692 = icmp ult i32* %6690, %6691
  %6693 = ptrtoint i32* %6691 to i64
  br i1 %6692, label %6694, label %6698

6694:                                             ; preds = %6689
  store i32 114, i32* %6690, align 4
  %6695 = getelementptr inbounds i32, i32* %6690, i64 1
  %6696 = ptrtoint i32* %6695 to i64
  %6697 = bitcast i32** %3 to i64*
  store i64 %6696, i64* %6697, align 8
  br label %6744

6698:                                             ; preds = %6689
  %6699 = ptrtoint i32* %6690 to i64
  %6700 = bitcast i32** %3 to i64*
  %6701 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6702 = load i64, i64* %6701, align 8
  %6703 = sub i64 %6699, %6702
  %6704 = ashr exact i64 %6703, 2
  %6705 = add nsw i64 %6704, 1
  %6706 = icmp ugt i64 %6705, 4611686018427387903
  br i1 %6706, label %6707, label %6709

6707:                                             ; preds = %6698
  %6708 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6708) #11
  unreachable

6709:                                             ; preds = %6698
  %6710 = bitcast i32** %4 to i64*
  %6711 = sub i64 %6693, %6702
  %6712 = ashr exact i64 %6711, 2
  %6713 = icmp ult i64 %6712, 2305843009213693951
  br i1 %6713, label %6714, label %6722

6714:                                             ; preds = %6709
  %6715 = ashr exact i64 %6711, 1
  %6716 = icmp ult i64 %6715, %6705
  %6717 = select i1 %6716, i64 %6705, i64 %6715
  %6718 = icmp eq i64 %6717, 0
  br i1 %6718, label %6727, label %6719

6719:                                             ; preds = %6714
  %6720 = icmp ugt i64 %6717, 4611686018427387903
  br i1 %6720, label %6721, label %6722

6721:                                             ; preds = %6719
  tail call void @abort() #11
  unreachable

6722:                                             ; preds = %6719, %6709
  %6723 = phi i64 [ %6717, %6719 ], [ 4611686018427387903, %6709 ]
  %6724 = shl i64 %6723, 2
  %6725 = tail call i8* @_Znwm(i64 %6724) #10
  %6726 = bitcast i8* %6725 to i32*
  br label %6727

6727:                                             ; preds = %6722, %6714
  %6728 = phi i64 [ %6723, %6722 ], [ 0, %6714 ]
  %6729 = phi i8* [ %6725, %6722 ], [ null, %6714 ]
  %6730 = phi i32* [ %6726, %6722 ], [ null, %6714 ]
  %6731 = getelementptr inbounds i32, i32* %6730, i64 %6704
  %6732 = getelementptr inbounds i32, i32* %6730, i64 %6728
  %6733 = ptrtoint i32* %6732 to i64
  store i32 114, i32* %6731, align 4
  %6734 = getelementptr inbounds i32, i32* %6731, i64 1
  %6735 = ptrtoint i32* %6734 to i64
  %6736 = ptrtoint i32* %6730 to i64
  %6737 = icmp sgt i64 %6703, 0
  br i1 %6737, label %6738, label %6740

6738:                                             ; preds = %6727
  %6739 = inttoptr i64 %6702 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6729, i8* align 4 %6739, i64 %6703, i1 false) #9
  br label %6740

6740:                                             ; preds = %6738, %6727
  store i64 %6736, i64* %6701, align 8
  store i64 %6735, i64* %6700, align 8
  store i64 %6733, i64* %6710, align 8
  %6741 = icmp eq i64 %6702, 0
  br i1 %6741, label %6744, label %6742

6742:                                             ; preds = %6740
  %6743 = inttoptr i64 %6702 to i8*
  tail call void @_ZdlPv(i8* %6743) #10
  br label %6744

6744:                                             ; preds = %6742, %6740, %6694, %6685
  %6745 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 115
  %6746 = load i8, i8* %6745, align 1, !range !2
  %6747 = icmp eq i8 %6746, 0
  br i1 %6747, label %6803, label %6748

6748:                                             ; preds = %6744
  %6749 = load i32*, i32** %3, align 8
  %6750 = load i32*, i32** %4, align 8
  %6751 = icmp ult i32* %6749, %6750
  %6752 = ptrtoint i32* %6750 to i64
  br i1 %6751, label %6753, label %6757

6753:                                             ; preds = %6748
  store i32 115, i32* %6749, align 4
  %6754 = getelementptr inbounds i32, i32* %6749, i64 1
  %6755 = ptrtoint i32* %6754 to i64
  %6756 = bitcast i32** %3 to i64*
  store i64 %6755, i64* %6756, align 8
  br label %6803

6757:                                             ; preds = %6748
  %6758 = ptrtoint i32* %6749 to i64
  %6759 = bitcast i32** %3 to i64*
  %6760 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6761 = load i64, i64* %6760, align 8
  %6762 = sub i64 %6758, %6761
  %6763 = ashr exact i64 %6762, 2
  %6764 = add nsw i64 %6763, 1
  %6765 = icmp ugt i64 %6764, 4611686018427387903
  br i1 %6765, label %6766, label %6768

6766:                                             ; preds = %6757
  %6767 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6767) #11
  unreachable

6768:                                             ; preds = %6757
  %6769 = bitcast i32** %4 to i64*
  %6770 = sub i64 %6752, %6761
  %6771 = ashr exact i64 %6770, 2
  %6772 = icmp ult i64 %6771, 2305843009213693951
  br i1 %6772, label %6773, label %6781

6773:                                             ; preds = %6768
  %6774 = ashr exact i64 %6770, 1
  %6775 = icmp ult i64 %6774, %6764
  %6776 = select i1 %6775, i64 %6764, i64 %6774
  %6777 = icmp eq i64 %6776, 0
  br i1 %6777, label %6786, label %6778

6778:                                             ; preds = %6773
  %6779 = icmp ugt i64 %6776, 4611686018427387903
  br i1 %6779, label %6780, label %6781

6780:                                             ; preds = %6778
  tail call void @abort() #11
  unreachable

6781:                                             ; preds = %6778, %6768
  %6782 = phi i64 [ %6776, %6778 ], [ 4611686018427387903, %6768 ]
  %6783 = shl i64 %6782, 2
  %6784 = tail call i8* @_Znwm(i64 %6783) #10
  %6785 = bitcast i8* %6784 to i32*
  br label %6786

6786:                                             ; preds = %6781, %6773
  %6787 = phi i64 [ %6782, %6781 ], [ 0, %6773 ]
  %6788 = phi i8* [ %6784, %6781 ], [ null, %6773 ]
  %6789 = phi i32* [ %6785, %6781 ], [ null, %6773 ]
  %6790 = getelementptr inbounds i32, i32* %6789, i64 %6763
  %6791 = getelementptr inbounds i32, i32* %6789, i64 %6787
  %6792 = ptrtoint i32* %6791 to i64
  store i32 115, i32* %6790, align 4
  %6793 = getelementptr inbounds i32, i32* %6790, i64 1
  %6794 = ptrtoint i32* %6793 to i64
  %6795 = ptrtoint i32* %6789 to i64
  %6796 = icmp sgt i64 %6762, 0
  br i1 %6796, label %6797, label %6799

6797:                                             ; preds = %6786
  %6798 = inttoptr i64 %6761 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6788, i8* align 4 %6798, i64 %6762, i1 false) #9
  br label %6799

6799:                                             ; preds = %6797, %6786
  store i64 %6795, i64* %6760, align 8
  store i64 %6794, i64* %6759, align 8
  store i64 %6792, i64* %6769, align 8
  %6800 = icmp eq i64 %6761, 0
  br i1 %6800, label %6803, label %6801

6801:                                             ; preds = %6799
  %6802 = inttoptr i64 %6761 to i8*
  tail call void @_ZdlPv(i8* %6802) #10
  br label %6803

6803:                                             ; preds = %6801, %6799, %6753, %6744
  %6804 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 116
  %6805 = load i8, i8* %6804, align 4, !range !2
  %6806 = icmp eq i8 %6805, 0
  br i1 %6806, label %6862, label %6807

6807:                                             ; preds = %6803
  %6808 = load i32*, i32** %3, align 8
  %6809 = load i32*, i32** %4, align 8
  %6810 = icmp ult i32* %6808, %6809
  %6811 = ptrtoint i32* %6809 to i64
  br i1 %6810, label %6812, label %6816

6812:                                             ; preds = %6807
  store i32 116, i32* %6808, align 4
  %6813 = getelementptr inbounds i32, i32* %6808, i64 1
  %6814 = ptrtoint i32* %6813 to i64
  %6815 = bitcast i32** %3 to i64*
  store i64 %6814, i64* %6815, align 8
  br label %6862

6816:                                             ; preds = %6807
  %6817 = ptrtoint i32* %6808 to i64
  %6818 = bitcast i32** %3 to i64*
  %6819 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6820 = load i64, i64* %6819, align 8
  %6821 = sub i64 %6817, %6820
  %6822 = ashr exact i64 %6821, 2
  %6823 = add nsw i64 %6822, 1
  %6824 = icmp ugt i64 %6823, 4611686018427387903
  br i1 %6824, label %6825, label %6827

6825:                                             ; preds = %6816
  %6826 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6826) #11
  unreachable

6827:                                             ; preds = %6816
  %6828 = bitcast i32** %4 to i64*
  %6829 = sub i64 %6811, %6820
  %6830 = ashr exact i64 %6829, 2
  %6831 = icmp ult i64 %6830, 2305843009213693951
  br i1 %6831, label %6832, label %6840

6832:                                             ; preds = %6827
  %6833 = ashr exact i64 %6829, 1
  %6834 = icmp ult i64 %6833, %6823
  %6835 = select i1 %6834, i64 %6823, i64 %6833
  %6836 = icmp eq i64 %6835, 0
  br i1 %6836, label %6845, label %6837

6837:                                             ; preds = %6832
  %6838 = icmp ugt i64 %6835, 4611686018427387903
  br i1 %6838, label %6839, label %6840

6839:                                             ; preds = %6837
  tail call void @abort() #11
  unreachable

6840:                                             ; preds = %6837, %6827
  %6841 = phi i64 [ %6835, %6837 ], [ 4611686018427387903, %6827 ]
  %6842 = shl i64 %6841, 2
  %6843 = tail call i8* @_Znwm(i64 %6842) #10
  %6844 = bitcast i8* %6843 to i32*
  br label %6845

6845:                                             ; preds = %6840, %6832
  %6846 = phi i64 [ %6841, %6840 ], [ 0, %6832 ]
  %6847 = phi i8* [ %6843, %6840 ], [ null, %6832 ]
  %6848 = phi i32* [ %6844, %6840 ], [ null, %6832 ]
  %6849 = getelementptr inbounds i32, i32* %6848, i64 %6822
  %6850 = getelementptr inbounds i32, i32* %6848, i64 %6846
  %6851 = ptrtoint i32* %6850 to i64
  store i32 116, i32* %6849, align 4
  %6852 = getelementptr inbounds i32, i32* %6849, i64 1
  %6853 = ptrtoint i32* %6852 to i64
  %6854 = ptrtoint i32* %6848 to i64
  %6855 = icmp sgt i64 %6821, 0
  br i1 %6855, label %6856, label %6858

6856:                                             ; preds = %6845
  %6857 = inttoptr i64 %6820 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6847, i8* align 4 %6857, i64 %6821, i1 false) #9
  br label %6858

6858:                                             ; preds = %6856, %6845
  store i64 %6854, i64* %6819, align 8
  store i64 %6853, i64* %6818, align 8
  store i64 %6851, i64* %6828, align 8
  %6859 = icmp eq i64 %6820, 0
  br i1 %6859, label %6862, label %6860

6860:                                             ; preds = %6858
  %6861 = inttoptr i64 %6820 to i8*
  tail call void @_ZdlPv(i8* %6861) #10
  br label %6862

6862:                                             ; preds = %6860, %6858, %6812, %6803
  %6863 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 117
  %6864 = load i8, i8* %6863, align 1, !range !2
  %6865 = icmp eq i8 %6864, 0
  br i1 %6865, label %6921, label %6866

6866:                                             ; preds = %6862
  %6867 = load i32*, i32** %3, align 8
  %6868 = load i32*, i32** %4, align 8
  %6869 = icmp ult i32* %6867, %6868
  %6870 = ptrtoint i32* %6868 to i64
  br i1 %6869, label %6871, label %6875

6871:                                             ; preds = %6866
  store i32 117, i32* %6867, align 4
  %6872 = getelementptr inbounds i32, i32* %6867, i64 1
  %6873 = ptrtoint i32* %6872 to i64
  %6874 = bitcast i32** %3 to i64*
  store i64 %6873, i64* %6874, align 8
  br label %6921

6875:                                             ; preds = %6866
  %6876 = ptrtoint i32* %6867 to i64
  %6877 = bitcast i32** %3 to i64*
  %6878 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6879 = load i64, i64* %6878, align 8
  %6880 = sub i64 %6876, %6879
  %6881 = ashr exact i64 %6880, 2
  %6882 = add nsw i64 %6881, 1
  %6883 = icmp ugt i64 %6882, 4611686018427387903
  br i1 %6883, label %6884, label %6886

6884:                                             ; preds = %6875
  %6885 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6885) #11
  unreachable

6886:                                             ; preds = %6875
  %6887 = bitcast i32** %4 to i64*
  %6888 = sub i64 %6870, %6879
  %6889 = ashr exact i64 %6888, 2
  %6890 = icmp ult i64 %6889, 2305843009213693951
  br i1 %6890, label %6891, label %6899

6891:                                             ; preds = %6886
  %6892 = ashr exact i64 %6888, 1
  %6893 = icmp ult i64 %6892, %6882
  %6894 = select i1 %6893, i64 %6882, i64 %6892
  %6895 = icmp eq i64 %6894, 0
  br i1 %6895, label %6904, label %6896

6896:                                             ; preds = %6891
  %6897 = icmp ugt i64 %6894, 4611686018427387903
  br i1 %6897, label %6898, label %6899

6898:                                             ; preds = %6896
  tail call void @abort() #11
  unreachable

6899:                                             ; preds = %6896, %6886
  %6900 = phi i64 [ %6894, %6896 ], [ 4611686018427387903, %6886 ]
  %6901 = shl i64 %6900, 2
  %6902 = tail call i8* @_Znwm(i64 %6901) #10
  %6903 = bitcast i8* %6902 to i32*
  br label %6904

6904:                                             ; preds = %6899, %6891
  %6905 = phi i64 [ %6900, %6899 ], [ 0, %6891 ]
  %6906 = phi i8* [ %6902, %6899 ], [ null, %6891 ]
  %6907 = phi i32* [ %6903, %6899 ], [ null, %6891 ]
  %6908 = getelementptr inbounds i32, i32* %6907, i64 %6881
  %6909 = getelementptr inbounds i32, i32* %6907, i64 %6905
  %6910 = ptrtoint i32* %6909 to i64
  store i32 117, i32* %6908, align 4
  %6911 = getelementptr inbounds i32, i32* %6908, i64 1
  %6912 = ptrtoint i32* %6911 to i64
  %6913 = ptrtoint i32* %6907 to i64
  %6914 = icmp sgt i64 %6880, 0
  br i1 %6914, label %6915, label %6917

6915:                                             ; preds = %6904
  %6916 = inttoptr i64 %6879 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6906, i8* align 4 %6916, i64 %6880, i1 false) #9
  br label %6917

6917:                                             ; preds = %6915, %6904
  store i64 %6913, i64* %6878, align 8
  store i64 %6912, i64* %6877, align 8
  store i64 %6910, i64* %6887, align 8
  %6918 = icmp eq i64 %6879, 0
  br i1 %6918, label %6921, label %6919

6919:                                             ; preds = %6917
  %6920 = inttoptr i64 %6879 to i8*
  tail call void @_ZdlPv(i8* %6920) #10
  br label %6921

6921:                                             ; preds = %6919, %6917, %6871, %6862
  %6922 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 118
  %6923 = load i8, i8* %6922, align 2, !range !2
  %6924 = icmp eq i8 %6923, 0
  br i1 %6924, label %6980, label %6925

6925:                                             ; preds = %6921
  %6926 = load i32*, i32** %3, align 8
  %6927 = load i32*, i32** %4, align 8
  %6928 = icmp ult i32* %6926, %6927
  %6929 = ptrtoint i32* %6927 to i64
  br i1 %6928, label %6930, label %6934

6930:                                             ; preds = %6925
  store i32 118, i32* %6926, align 4
  %6931 = getelementptr inbounds i32, i32* %6926, i64 1
  %6932 = ptrtoint i32* %6931 to i64
  %6933 = bitcast i32** %3 to i64*
  store i64 %6932, i64* %6933, align 8
  br label %6980

6934:                                             ; preds = %6925
  %6935 = ptrtoint i32* %6926 to i64
  %6936 = bitcast i32** %3 to i64*
  %6937 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6938 = load i64, i64* %6937, align 8
  %6939 = sub i64 %6935, %6938
  %6940 = ashr exact i64 %6939, 2
  %6941 = add nsw i64 %6940, 1
  %6942 = icmp ugt i64 %6941, 4611686018427387903
  br i1 %6942, label %6943, label %6945

6943:                                             ; preds = %6934
  %6944 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %6944) #11
  unreachable

6945:                                             ; preds = %6934
  %6946 = bitcast i32** %4 to i64*
  %6947 = sub i64 %6929, %6938
  %6948 = ashr exact i64 %6947, 2
  %6949 = icmp ult i64 %6948, 2305843009213693951
  br i1 %6949, label %6950, label %6958

6950:                                             ; preds = %6945
  %6951 = ashr exact i64 %6947, 1
  %6952 = icmp ult i64 %6951, %6941
  %6953 = select i1 %6952, i64 %6941, i64 %6951
  %6954 = icmp eq i64 %6953, 0
  br i1 %6954, label %6963, label %6955

6955:                                             ; preds = %6950
  %6956 = icmp ugt i64 %6953, 4611686018427387903
  br i1 %6956, label %6957, label %6958

6957:                                             ; preds = %6955
  tail call void @abort() #11
  unreachable

6958:                                             ; preds = %6955, %6945
  %6959 = phi i64 [ %6953, %6955 ], [ 4611686018427387903, %6945 ]
  %6960 = shl i64 %6959, 2
  %6961 = tail call i8* @_Znwm(i64 %6960) #10
  %6962 = bitcast i8* %6961 to i32*
  br label %6963

6963:                                             ; preds = %6958, %6950
  %6964 = phi i64 [ %6959, %6958 ], [ 0, %6950 ]
  %6965 = phi i8* [ %6961, %6958 ], [ null, %6950 ]
  %6966 = phi i32* [ %6962, %6958 ], [ null, %6950 ]
  %6967 = getelementptr inbounds i32, i32* %6966, i64 %6940
  %6968 = getelementptr inbounds i32, i32* %6966, i64 %6964
  %6969 = ptrtoint i32* %6968 to i64
  store i32 118, i32* %6967, align 4
  %6970 = getelementptr inbounds i32, i32* %6967, i64 1
  %6971 = ptrtoint i32* %6970 to i64
  %6972 = ptrtoint i32* %6966 to i64
  %6973 = icmp sgt i64 %6939, 0
  br i1 %6973, label %6974, label %6976

6974:                                             ; preds = %6963
  %6975 = inttoptr i64 %6938 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6965, i8* align 4 %6975, i64 %6939, i1 false) #9
  br label %6976

6976:                                             ; preds = %6974, %6963
  store i64 %6972, i64* %6937, align 8
  store i64 %6971, i64* %6936, align 8
  store i64 %6969, i64* %6946, align 8
  %6977 = icmp eq i64 %6938, 0
  br i1 %6977, label %6980, label %6978

6978:                                             ; preds = %6976
  %6979 = inttoptr i64 %6938 to i8*
  tail call void @_ZdlPv(i8* %6979) #10
  br label %6980

6980:                                             ; preds = %6978, %6976, %6930, %6921
  %6981 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 119
  %6982 = load i8, i8* %6981, align 1, !range !2
  %6983 = icmp eq i8 %6982, 0
  br i1 %6983, label %7039, label %6984

6984:                                             ; preds = %6980
  %6985 = load i32*, i32** %3, align 8
  %6986 = load i32*, i32** %4, align 8
  %6987 = icmp ult i32* %6985, %6986
  %6988 = ptrtoint i32* %6986 to i64
  br i1 %6987, label %6989, label %6993

6989:                                             ; preds = %6984
  store i32 119, i32* %6985, align 4
  %6990 = getelementptr inbounds i32, i32* %6985, i64 1
  %6991 = ptrtoint i32* %6990 to i64
  %6992 = bitcast i32** %3 to i64*
  store i64 %6991, i64* %6992, align 8
  br label %7039

6993:                                             ; preds = %6984
  %6994 = ptrtoint i32* %6985 to i64
  %6995 = bitcast i32** %3 to i64*
  %6996 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6997 = load i64, i64* %6996, align 8
  %6998 = sub i64 %6994, %6997
  %6999 = ashr exact i64 %6998, 2
  %7000 = add nsw i64 %6999, 1
  %7001 = icmp ugt i64 %7000, 4611686018427387903
  br i1 %7001, label %7002, label %7004

7002:                                             ; preds = %6993
  %7003 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %7003) #11
  unreachable

7004:                                             ; preds = %6993
  %7005 = bitcast i32** %4 to i64*
  %7006 = sub i64 %6988, %6997
  %7007 = ashr exact i64 %7006, 2
  %7008 = icmp ult i64 %7007, 2305843009213693951
  br i1 %7008, label %7009, label %7017

7009:                                             ; preds = %7004
  %7010 = ashr exact i64 %7006, 1
  %7011 = icmp ult i64 %7010, %7000
  %7012 = select i1 %7011, i64 %7000, i64 %7010
  %7013 = icmp eq i64 %7012, 0
  br i1 %7013, label %7022, label %7014

7014:                                             ; preds = %7009
  %7015 = icmp ugt i64 %7012, 4611686018427387903
  br i1 %7015, label %7016, label %7017

7016:                                             ; preds = %7014
  tail call void @abort() #11
  unreachable

7017:                                             ; preds = %7014, %7004
  %7018 = phi i64 [ %7012, %7014 ], [ 4611686018427387903, %7004 ]
  %7019 = shl i64 %7018, 2
  %7020 = tail call i8* @_Znwm(i64 %7019) #10
  %7021 = bitcast i8* %7020 to i32*
  br label %7022

7022:                                             ; preds = %7017, %7009
  %7023 = phi i64 [ %7018, %7017 ], [ 0, %7009 ]
  %7024 = phi i8* [ %7020, %7017 ], [ null, %7009 ]
  %7025 = phi i32* [ %7021, %7017 ], [ null, %7009 ]
  %7026 = getelementptr inbounds i32, i32* %7025, i64 %6999
  %7027 = getelementptr inbounds i32, i32* %7025, i64 %7023
  %7028 = ptrtoint i32* %7027 to i64
  store i32 119, i32* %7026, align 4
  %7029 = getelementptr inbounds i32, i32* %7026, i64 1
  %7030 = ptrtoint i32* %7029 to i64
  %7031 = ptrtoint i32* %7025 to i64
  %7032 = icmp sgt i64 %6998, 0
  br i1 %7032, label %7033, label %7035

7033:                                             ; preds = %7022
  %7034 = inttoptr i64 %6997 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7024, i8* align 4 %7034, i64 %6998, i1 false) #9
  br label %7035

7035:                                             ; preds = %7033, %7022
  store i64 %7031, i64* %6996, align 8
  store i64 %7030, i64* %6995, align 8
  store i64 %7028, i64* %7005, align 8
  %7036 = icmp eq i64 %6997, 0
  br i1 %7036, label %7039, label %7037

7037:                                             ; preds = %7035
  %7038 = inttoptr i64 %6997 to i8*
  tail call void @_ZdlPv(i8* %7038) #10
  br label %7039

7039:                                             ; preds = %7037, %7035, %6989, %6980
  %7040 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 120
  %7041 = load i8, i8* %7040, align 4, !range !2
  %7042 = icmp eq i8 %7041, 0
  br i1 %7042, label %7098, label %7043

7043:                                             ; preds = %7039
  %7044 = load i32*, i32** %3, align 8
  %7045 = load i32*, i32** %4, align 8
  %7046 = icmp ult i32* %7044, %7045
  %7047 = ptrtoint i32* %7045 to i64
  br i1 %7046, label %7048, label %7052

7048:                                             ; preds = %7043
  store i32 120, i32* %7044, align 4
  %7049 = getelementptr inbounds i32, i32* %7044, i64 1
  %7050 = ptrtoint i32* %7049 to i64
  %7051 = bitcast i32** %3 to i64*
  store i64 %7050, i64* %7051, align 8
  br label %7098

7052:                                             ; preds = %7043
  %7053 = ptrtoint i32* %7044 to i64
  %7054 = bitcast i32** %3 to i64*
  %7055 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7056 = load i64, i64* %7055, align 8
  %7057 = sub i64 %7053, %7056
  %7058 = ashr exact i64 %7057, 2
  %7059 = add nsw i64 %7058, 1
  %7060 = icmp ugt i64 %7059, 4611686018427387903
  br i1 %7060, label %7061, label %7063

7061:                                             ; preds = %7052
  %7062 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %7062) #11
  unreachable

7063:                                             ; preds = %7052
  %7064 = bitcast i32** %4 to i64*
  %7065 = sub i64 %7047, %7056
  %7066 = ashr exact i64 %7065, 2
  %7067 = icmp ult i64 %7066, 2305843009213693951
  br i1 %7067, label %7068, label %7076

7068:                                             ; preds = %7063
  %7069 = ashr exact i64 %7065, 1
  %7070 = icmp ult i64 %7069, %7059
  %7071 = select i1 %7070, i64 %7059, i64 %7069
  %7072 = icmp eq i64 %7071, 0
  br i1 %7072, label %7081, label %7073

7073:                                             ; preds = %7068
  %7074 = icmp ugt i64 %7071, 4611686018427387903
  br i1 %7074, label %7075, label %7076

7075:                                             ; preds = %7073
  tail call void @abort() #11
  unreachable

7076:                                             ; preds = %7073, %7063
  %7077 = phi i64 [ %7071, %7073 ], [ 4611686018427387903, %7063 ]
  %7078 = shl i64 %7077, 2
  %7079 = tail call i8* @_Znwm(i64 %7078) #10
  %7080 = bitcast i8* %7079 to i32*
  br label %7081

7081:                                             ; preds = %7076, %7068
  %7082 = phi i64 [ %7077, %7076 ], [ 0, %7068 ]
  %7083 = phi i8* [ %7079, %7076 ], [ null, %7068 ]
  %7084 = phi i32* [ %7080, %7076 ], [ null, %7068 ]
  %7085 = getelementptr inbounds i32, i32* %7084, i64 %7058
  %7086 = getelementptr inbounds i32, i32* %7084, i64 %7082
  %7087 = ptrtoint i32* %7086 to i64
  store i32 120, i32* %7085, align 4
  %7088 = getelementptr inbounds i32, i32* %7085, i64 1
  %7089 = ptrtoint i32* %7088 to i64
  %7090 = ptrtoint i32* %7084 to i64
  %7091 = icmp sgt i64 %7057, 0
  br i1 %7091, label %7092, label %7094

7092:                                             ; preds = %7081
  %7093 = inttoptr i64 %7056 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7083, i8* align 4 %7093, i64 %7057, i1 false) #9
  br label %7094

7094:                                             ; preds = %7092, %7081
  store i64 %7090, i64* %7055, align 8
  store i64 %7089, i64* %7054, align 8
  store i64 %7087, i64* %7064, align 8
  %7095 = icmp eq i64 %7056, 0
  br i1 %7095, label %7098, label %7096

7096:                                             ; preds = %7094
  %7097 = inttoptr i64 %7056 to i8*
  tail call void @_ZdlPv(i8* %7097) #10
  br label %7098

7098:                                             ; preds = %7096, %7094, %7048, %7039
  %7099 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 121
  %7100 = load i8, i8* %7099, align 1, !range !2
  %7101 = icmp eq i8 %7100, 0
  br i1 %7101, label %7157, label %7102

7102:                                             ; preds = %7098
  %7103 = load i32*, i32** %3, align 8
  %7104 = load i32*, i32** %4, align 8
  %7105 = icmp ult i32* %7103, %7104
  %7106 = ptrtoint i32* %7104 to i64
  br i1 %7105, label %7107, label %7111

7107:                                             ; preds = %7102
  store i32 121, i32* %7103, align 4
  %7108 = getelementptr inbounds i32, i32* %7103, i64 1
  %7109 = ptrtoint i32* %7108 to i64
  %7110 = bitcast i32** %3 to i64*
  store i64 %7109, i64* %7110, align 8
  br label %7157

7111:                                             ; preds = %7102
  %7112 = ptrtoint i32* %7103 to i64
  %7113 = bitcast i32** %3 to i64*
  %7114 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7115 = load i64, i64* %7114, align 8
  %7116 = sub i64 %7112, %7115
  %7117 = ashr exact i64 %7116, 2
  %7118 = add nsw i64 %7117, 1
  %7119 = icmp ugt i64 %7118, 4611686018427387903
  br i1 %7119, label %7120, label %7122

7120:                                             ; preds = %7111
  %7121 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %7121) #11
  unreachable

7122:                                             ; preds = %7111
  %7123 = bitcast i32** %4 to i64*
  %7124 = sub i64 %7106, %7115
  %7125 = ashr exact i64 %7124, 2
  %7126 = icmp ult i64 %7125, 2305843009213693951
  br i1 %7126, label %7127, label %7135

7127:                                             ; preds = %7122
  %7128 = ashr exact i64 %7124, 1
  %7129 = icmp ult i64 %7128, %7118
  %7130 = select i1 %7129, i64 %7118, i64 %7128
  %7131 = icmp eq i64 %7130, 0
  br i1 %7131, label %7140, label %7132

7132:                                             ; preds = %7127
  %7133 = icmp ugt i64 %7130, 4611686018427387903
  br i1 %7133, label %7134, label %7135

7134:                                             ; preds = %7132
  tail call void @abort() #11
  unreachable

7135:                                             ; preds = %7132, %7122
  %7136 = phi i64 [ %7130, %7132 ], [ 4611686018427387903, %7122 ]
  %7137 = shl i64 %7136, 2
  %7138 = tail call i8* @_Znwm(i64 %7137) #10
  %7139 = bitcast i8* %7138 to i32*
  br label %7140

7140:                                             ; preds = %7135, %7127
  %7141 = phi i64 [ %7136, %7135 ], [ 0, %7127 ]
  %7142 = phi i8* [ %7138, %7135 ], [ null, %7127 ]
  %7143 = phi i32* [ %7139, %7135 ], [ null, %7127 ]
  %7144 = getelementptr inbounds i32, i32* %7143, i64 %7117
  %7145 = getelementptr inbounds i32, i32* %7143, i64 %7141
  %7146 = ptrtoint i32* %7145 to i64
  store i32 121, i32* %7144, align 4
  %7147 = getelementptr inbounds i32, i32* %7144, i64 1
  %7148 = ptrtoint i32* %7147 to i64
  %7149 = ptrtoint i32* %7143 to i64
  %7150 = icmp sgt i64 %7116, 0
  br i1 %7150, label %7151, label %7153

7151:                                             ; preds = %7140
  %7152 = inttoptr i64 %7115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7142, i8* align 4 %7152, i64 %7116, i1 false) #9
  br label %7153

7153:                                             ; preds = %7151, %7140
  store i64 %7149, i64* %7114, align 8
  store i64 %7148, i64* %7113, align 8
  store i64 %7146, i64* %7123, align 8
  %7154 = icmp eq i64 %7115, 0
  br i1 %7154, label %7157, label %7155

7155:                                             ; preds = %7153
  %7156 = inttoptr i64 %7115 to i8*
  tail call void @_ZdlPv(i8* %7156) #10
  br label %7157

7157:                                             ; preds = %7155, %7153, %7107, %7098
  %7158 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 122
  %7159 = load i8, i8* %7158, align 2, !range !2
  %7160 = icmp eq i8 %7159, 0
  br i1 %7160, label %7216, label %7161

7161:                                             ; preds = %7157
  %7162 = load i32*, i32** %3, align 8
  %7163 = load i32*, i32** %4, align 8
  %7164 = icmp ult i32* %7162, %7163
  %7165 = ptrtoint i32* %7163 to i64
  br i1 %7164, label %7166, label %7170

7166:                                             ; preds = %7161
  store i32 122, i32* %7162, align 4
  %7167 = getelementptr inbounds i32, i32* %7162, i64 1
  %7168 = ptrtoint i32* %7167 to i64
  %7169 = bitcast i32** %3 to i64*
  store i64 %7168, i64* %7169, align 8
  br label %7216

7170:                                             ; preds = %7161
  %7171 = ptrtoint i32* %7162 to i64
  %7172 = bitcast i32** %3 to i64*
  %7173 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7174 = load i64, i64* %7173, align 8
  %7175 = sub i64 %7171, %7174
  %7176 = ashr exact i64 %7175, 2
  %7177 = add nsw i64 %7176, 1
  %7178 = icmp ugt i64 %7177, 4611686018427387903
  br i1 %7178, label %7179, label %7181

7179:                                             ; preds = %7170
  %7180 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %7180) #11
  unreachable

7181:                                             ; preds = %7170
  %7182 = bitcast i32** %4 to i64*
  %7183 = sub i64 %7165, %7174
  %7184 = ashr exact i64 %7183, 2
  %7185 = icmp ult i64 %7184, 2305843009213693951
  br i1 %7185, label %7186, label %7194

7186:                                             ; preds = %7181
  %7187 = ashr exact i64 %7183, 1
  %7188 = icmp ult i64 %7187, %7177
  %7189 = select i1 %7188, i64 %7177, i64 %7187
  %7190 = icmp eq i64 %7189, 0
  br i1 %7190, label %7199, label %7191

7191:                                             ; preds = %7186
  %7192 = icmp ugt i64 %7189, 4611686018427387903
  br i1 %7192, label %7193, label %7194

7193:                                             ; preds = %7191
  tail call void @abort() #11
  unreachable

7194:                                             ; preds = %7191, %7181
  %7195 = phi i64 [ %7189, %7191 ], [ 4611686018427387903, %7181 ]
  %7196 = shl i64 %7195, 2
  %7197 = tail call i8* @_Znwm(i64 %7196) #10
  %7198 = bitcast i8* %7197 to i32*
  br label %7199

7199:                                             ; preds = %7194, %7186
  %7200 = phi i64 [ %7195, %7194 ], [ 0, %7186 ]
  %7201 = phi i8* [ %7197, %7194 ], [ null, %7186 ]
  %7202 = phi i32* [ %7198, %7194 ], [ null, %7186 ]
  %7203 = getelementptr inbounds i32, i32* %7202, i64 %7176
  %7204 = getelementptr inbounds i32, i32* %7202, i64 %7200
  %7205 = ptrtoint i32* %7204 to i64
  store i32 122, i32* %7203, align 4
  %7206 = getelementptr inbounds i32, i32* %7203, i64 1
  %7207 = ptrtoint i32* %7206 to i64
  %7208 = ptrtoint i32* %7202 to i64
  %7209 = icmp sgt i64 %7175, 0
  br i1 %7209, label %7210, label %7212

7210:                                             ; preds = %7199
  %7211 = inttoptr i64 %7174 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7201, i8* align 4 %7211, i64 %7175, i1 false) #9
  br label %7212

7212:                                             ; preds = %7210, %7199
  store i64 %7208, i64* %7173, align 8
  store i64 %7207, i64* %7172, align 8
  store i64 %7205, i64* %7182, align 8
  %7213 = icmp eq i64 %7174, 0
  br i1 %7213, label %7216, label %7214

7214:                                             ; preds = %7212
  %7215 = inttoptr i64 %7174 to i8*
  tail call void @_ZdlPv(i8* %7215) #10
  br label %7216

7216:                                             ; preds = %7214, %7212, %7166, %7157
  %7217 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 123
  %7218 = load i8, i8* %7217, align 1, !range !2
  %7219 = icmp eq i8 %7218, 0
  br i1 %7219, label %7275, label %7220

7220:                                             ; preds = %7216
  %7221 = load i32*, i32** %3, align 8
  %7222 = load i32*, i32** %4, align 8
  %7223 = icmp ult i32* %7221, %7222
  %7224 = ptrtoint i32* %7222 to i64
  br i1 %7223, label %7225, label %7229

7225:                                             ; preds = %7220
  store i32 123, i32* %7221, align 4
  %7226 = getelementptr inbounds i32, i32* %7221, i64 1
  %7227 = ptrtoint i32* %7226 to i64
  %7228 = bitcast i32** %3 to i64*
  store i64 %7227, i64* %7228, align 8
  br label %7275

7229:                                             ; preds = %7220
  %7230 = ptrtoint i32* %7221 to i64
  %7231 = bitcast i32** %3 to i64*
  %7232 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7233 = load i64, i64* %7232, align 8
  %7234 = sub i64 %7230, %7233
  %7235 = ashr exact i64 %7234, 2
  %7236 = add nsw i64 %7235, 1
  %7237 = icmp ugt i64 %7236, 4611686018427387903
  br i1 %7237, label %7238, label %7240

7238:                                             ; preds = %7229
  %7239 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %7239) #11
  unreachable

7240:                                             ; preds = %7229
  %7241 = bitcast i32** %4 to i64*
  %7242 = sub i64 %7224, %7233
  %7243 = ashr exact i64 %7242, 2
  %7244 = icmp ult i64 %7243, 2305843009213693951
  br i1 %7244, label %7245, label %7253

7245:                                             ; preds = %7240
  %7246 = ashr exact i64 %7242, 1
  %7247 = icmp ult i64 %7246, %7236
  %7248 = select i1 %7247, i64 %7236, i64 %7246
  %7249 = icmp eq i64 %7248, 0
  br i1 %7249, label %7258, label %7250

7250:                                             ; preds = %7245
  %7251 = icmp ugt i64 %7248, 4611686018427387903
  br i1 %7251, label %7252, label %7253

7252:                                             ; preds = %7250
  tail call void @abort() #11
  unreachable

7253:                                             ; preds = %7250, %7240
  %7254 = phi i64 [ %7248, %7250 ], [ 4611686018427387903, %7240 ]
  %7255 = shl i64 %7254, 2
  %7256 = tail call i8* @_Znwm(i64 %7255) #10
  %7257 = bitcast i8* %7256 to i32*
  br label %7258

7258:                                             ; preds = %7253, %7245
  %7259 = phi i64 [ %7254, %7253 ], [ 0, %7245 ]
  %7260 = phi i8* [ %7256, %7253 ], [ null, %7245 ]
  %7261 = phi i32* [ %7257, %7253 ], [ null, %7245 ]
  %7262 = getelementptr inbounds i32, i32* %7261, i64 %7235
  %7263 = getelementptr inbounds i32, i32* %7261, i64 %7259
  %7264 = ptrtoint i32* %7263 to i64
  store i32 123, i32* %7262, align 4
  %7265 = getelementptr inbounds i32, i32* %7262, i64 1
  %7266 = ptrtoint i32* %7265 to i64
  %7267 = ptrtoint i32* %7261 to i64
  %7268 = icmp sgt i64 %7234, 0
  br i1 %7268, label %7269, label %7271

7269:                                             ; preds = %7258
  %7270 = inttoptr i64 %7233 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7260, i8* align 4 %7270, i64 %7234, i1 false) #9
  br label %7271

7271:                                             ; preds = %7269, %7258
  store i64 %7267, i64* %7232, align 8
  store i64 %7266, i64* %7231, align 8
  store i64 %7264, i64* %7241, align 8
  %7272 = icmp eq i64 %7233, 0
  br i1 %7272, label %7275, label %7273

7273:                                             ; preds = %7271
  %7274 = inttoptr i64 %7233 to i8*
  tail call void @_ZdlPv(i8* %7274) #10
  br label %7275

7275:                                             ; preds = %7273, %7271, %7225, %7216
  %7276 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 124
  %7277 = load i8, i8* %7276, align 4, !range !2
  %7278 = icmp eq i8 %7277, 0
  br i1 %7278, label %7334, label %7279

7279:                                             ; preds = %7275
  %7280 = load i32*, i32** %3, align 8
  %7281 = load i32*, i32** %4, align 8
  %7282 = icmp ult i32* %7280, %7281
  %7283 = ptrtoint i32* %7281 to i64
  br i1 %7282, label %7284, label %7288

7284:                                             ; preds = %7279
  store i32 124, i32* %7280, align 4
  %7285 = getelementptr inbounds i32, i32* %7280, i64 1
  %7286 = ptrtoint i32* %7285 to i64
  %7287 = bitcast i32** %3 to i64*
  store i64 %7286, i64* %7287, align 8
  br label %7334

7288:                                             ; preds = %7279
  %7289 = ptrtoint i32* %7280 to i64
  %7290 = bitcast i32** %3 to i64*
  %7291 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7292 = load i64, i64* %7291, align 8
  %7293 = sub i64 %7289, %7292
  %7294 = ashr exact i64 %7293, 2
  %7295 = add nsw i64 %7294, 1
  %7296 = icmp ugt i64 %7295, 4611686018427387903
  br i1 %7296, label %7297, label %7299

7297:                                             ; preds = %7288
  %7298 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %7298) #11
  unreachable

7299:                                             ; preds = %7288
  %7300 = bitcast i32** %4 to i64*
  %7301 = sub i64 %7283, %7292
  %7302 = ashr exact i64 %7301, 2
  %7303 = icmp ult i64 %7302, 2305843009213693951
  br i1 %7303, label %7304, label %7312

7304:                                             ; preds = %7299
  %7305 = ashr exact i64 %7301, 1
  %7306 = icmp ult i64 %7305, %7295
  %7307 = select i1 %7306, i64 %7295, i64 %7305
  %7308 = icmp eq i64 %7307, 0
  br i1 %7308, label %7317, label %7309

7309:                                             ; preds = %7304
  %7310 = icmp ugt i64 %7307, 4611686018427387903
  br i1 %7310, label %7311, label %7312

7311:                                             ; preds = %7309
  tail call void @abort() #11
  unreachable

7312:                                             ; preds = %7309, %7299
  %7313 = phi i64 [ %7307, %7309 ], [ 4611686018427387903, %7299 ]
  %7314 = shl i64 %7313, 2
  %7315 = tail call i8* @_Znwm(i64 %7314) #10
  %7316 = bitcast i8* %7315 to i32*
  br label %7317

7317:                                             ; preds = %7312, %7304
  %7318 = phi i64 [ %7313, %7312 ], [ 0, %7304 ]
  %7319 = phi i8* [ %7315, %7312 ], [ null, %7304 ]
  %7320 = phi i32* [ %7316, %7312 ], [ null, %7304 ]
  %7321 = getelementptr inbounds i32, i32* %7320, i64 %7294
  %7322 = getelementptr inbounds i32, i32* %7320, i64 %7318
  %7323 = ptrtoint i32* %7322 to i64
  store i32 124, i32* %7321, align 4
  %7324 = getelementptr inbounds i32, i32* %7321, i64 1
  %7325 = ptrtoint i32* %7324 to i64
  %7326 = ptrtoint i32* %7320 to i64
  %7327 = icmp sgt i64 %7293, 0
  br i1 %7327, label %7328, label %7330

7328:                                             ; preds = %7317
  %7329 = inttoptr i64 %7292 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7319, i8* align 4 %7329, i64 %7293, i1 false) #9
  br label %7330

7330:                                             ; preds = %7328, %7317
  store i64 %7326, i64* %7291, align 8
  store i64 %7325, i64* %7290, align 8
  store i64 %7323, i64* %7300, align 8
  %7331 = icmp eq i64 %7292, 0
  br i1 %7331, label %7334, label %7332

7332:                                             ; preds = %7330
  %7333 = inttoptr i64 %7292 to i8*
  tail call void @_ZdlPv(i8* %7333) #10
  br label %7334

7334:                                             ; preds = %7332, %7330, %7284, %7275
  %7335 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 125
  %7336 = load i8, i8* %7335, align 1, !range !2
  %7337 = icmp eq i8 %7336, 0
  br i1 %7337, label %7393, label %7338

7338:                                             ; preds = %7334
  %7339 = load i32*, i32** %3, align 8
  %7340 = load i32*, i32** %4, align 8
  %7341 = icmp ult i32* %7339, %7340
  %7342 = ptrtoint i32* %7340 to i64
  br i1 %7341, label %7343, label %7347

7343:                                             ; preds = %7338
  store i32 125, i32* %7339, align 4
  %7344 = getelementptr inbounds i32, i32* %7339, i64 1
  %7345 = ptrtoint i32* %7344 to i64
  %7346 = bitcast i32** %3 to i64*
  store i64 %7345, i64* %7346, align 8
  br label %7393

7347:                                             ; preds = %7338
  %7348 = ptrtoint i32* %7339 to i64
  %7349 = bitcast i32** %3 to i64*
  %7350 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7351 = load i64, i64* %7350, align 8
  %7352 = sub i64 %7348, %7351
  %7353 = ashr exact i64 %7352, 2
  %7354 = add nsw i64 %7353, 1
  %7355 = icmp ugt i64 %7354, 4611686018427387903
  br i1 %7355, label %7356, label %7358

7356:                                             ; preds = %7347
  %7357 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %7357) #11
  unreachable

7358:                                             ; preds = %7347
  %7359 = bitcast i32** %4 to i64*
  %7360 = sub i64 %7342, %7351
  %7361 = ashr exact i64 %7360, 2
  %7362 = icmp ult i64 %7361, 2305843009213693951
  br i1 %7362, label %7363, label %7371

7363:                                             ; preds = %7358
  %7364 = ashr exact i64 %7360, 1
  %7365 = icmp ult i64 %7364, %7354
  %7366 = select i1 %7365, i64 %7354, i64 %7364
  %7367 = icmp eq i64 %7366, 0
  br i1 %7367, label %7376, label %7368

7368:                                             ; preds = %7363
  %7369 = icmp ugt i64 %7366, 4611686018427387903
  br i1 %7369, label %7370, label %7371

7370:                                             ; preds = %7368
  tail call void @abort() #11
  unreachable

7371:                                             ; preds = %7368, %7358
  %7372 = phi i64 [ %7366, %7368 ], [ 4611686018427387903, %7358 ]
  %7373 = shl i64 %7372, 2
  %7374 = tail call i8* @_Znwm(i64 %7373) #10
  %7375 = bitcast i8* %7374 to i32*
  br label %7376

7376:                                             ; preds = %7371, %7363
  %7377 = phi i64 [ %7372, %7371 ], [ 0, %7363 ]
  %7378 = phi i8* [ %7374, %7371 ], [ null, %7363 ]
  %7379 = phi i32* [ %7375, %7371 ], [ null, %7363 ]
  %7380 = getelementptr inbounds i32, i32* %7379, i64 %7353
  %7381 = getelementptr inbounds i32, i32* %7379, i64 %7377
  %7382 = ptrtoint i32* %7381 to i64
  store i32 125, i32* %7380, align 4
  %7383 = getelementptr inbounds i32, i32* %7380, i64 1
  %7384 = ptrtoint i32* %7383 to i64
  %7385 = ptrtoint i32* %7379 to i64
  %7386 = icmp sgt i64 %7352, 0
  br i1 %7386, label %7387, label %7389

7387:                                             ; preds = %7376
  %7388 = inttoptr i64 %7351 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7378, i8* align 4 %7388, i64 %7352, i1 false) #9
  br label %7389

7389:                                             ; preds = %7387, %7376
  store i64 %7385, i64* %7350, align 8
  store i64 %7384, i64* %7349, align 8
  store i64 %7382, i64* %7359, align 8
  %7390 = icmp eq i64 %7351, 0
  br i1 %7390, label %7393, label %7391

7391:                                             ; preds = %7389
  %7392 = inttoptr i64 %7351 to i8*
  tail call void @_ZdlPv(i8* %7392) #10
  br label %7393

7393:                                             ; preds = %7391, %7389, %7343, %7334
  %7394 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 126
  %7395 = load i8, i8* %7394, align 2, !range !2
  %7396 = icmp eq i8 %7395, 0
  br i1 %7396, label %7452, label %7397

7397:                                             ; preds = %7393
  %7398 = load i32*, i32** %3, align 8
  %7399 = load i32*, i32** %4, align 8
  %7400 = icmp ult i32* %7398, %7399
  %7401 = ptrtoint i32* %7399 to i64
  br i1 %7400, label %7402, label %7406

7402:                                             ; preds = %7397
  store i32 126, i32* %7398, align 4
  %7403 = getelementptr inbounds i32, i32* %7398, i64 1
  %7404 = ptrtoint i32* %7403 to i64
  %7405 = bitcast i32** %3 to i64*
  store i64 %7404, i64* %7405, align 8
  br label %7452

7406:                                             ; preds = %7397
  %7407 = ptrtoint i32* %7398 to i64
  %7408 = bitcast i32** %3 to i64*
  %7409 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7410 = load i64, i64* %7409, align 8
  %7411 = sub i64 %7407, %7410
  %7412 = ashr exact i64 %7411, 2
  %7413 = add nsw i64 %7412, 1
  %7414 = icmp ugt i64 %7413, 4611686018427387903
  br i1 %7414, label %7415, label %7417

7415:                                             ; preds = %7406
  %7416 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %7416) #11
  unreachable

7417:                                             ; preds = %7406
  %7418 = bitcast i32** %4 to i64*
  %7419 = sub i64 %7401, %7410
  %7420 = ashr exact i64 %7419, 2
  %7421 = icmp ult i64 %7420, 2305843009213693951
  br i1 %7421, label %7422, label %7430

7422:                                             ; preds = %7417
  %7423 = ashr exact i64 %7419, 1
  %7424 = icmp ult i64 %7423, %7413
  %7425 = select i1 %7424, i64 %7413, i64 %7423
  %7426 = icmp eq i64 %7425, 0
  br i1 %7426, label %7435, label %7427

7427:                                             ; preds = %7422
  %7428 = icmp ugt i64 %7425, 4611686018427387903
  br i1 %7428, label %7429, label %7430

7429:                                             ; preds = %7427
  tail call void @abort() #11
  unreachable

7430:                                             ; preds = %7427, %7417
  %7431 = phi i64 [ %7425, %7427 ], [ 4611686018427387903, %7417 ]
  %7432 = shl i64 %7431, 2
  %7433 = tail call i8* @_Znwm(i64 %7432) #10
  %7434 = bitcast i8* %7433 to i32*
  br label %7435

7435:                                             ; preds = %7430, %7422
  %7436 = phi i64 [ %7431, %7430 ], [ 0, %7422 ]
  %7437 = phi i8* [ %7433, %7430 ], [ null, %7422 ]
  %7438 = phi i32* [ %7434, %7430 ], [ null, %7422 ]
  %7439 = getelementptr inbounds i32, i32* %7438, i64 %7412
  %7440 = getelementptr inbounds i32, i32* %7438, i64 %7436
  %7441 = ptrtoint i32* %7440 to i64
  store i32 126, i32* %7439, align 4
  %7442 = getelementptr inbounds i32, i32* %7439, i64 1
  %7443 = ptrtoint i32* %7442 to i64
  %7444 = ptrtoint i32* %7438 to i64
  %7445 = icmp sgt i64 %7411, 0
  br i1 %7445, label %7446, label %7448

7446:                                             ; preds = %7435
  %7447 = inttoptr i64 %7410 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7437, i8* align 4 %7447, i64 %7411, i1 false) #9
  br label %7448

7448:                                             ; preds = %7446, %7435
  store i64 %7444, i64* %7409, align 8
  store i64 %7443, i64* %7408, align 8
  store i64 %7441, i64* %7418, align 8
  %7449 = icmp eq i64 %7410, 0
  br i1 %7449, label %7452, label %7450

7450:                                             ; preds = %7448
  %7451 = inttoptr i64 %7410 to i8*
  tail call void @_ZdlPv(i8* %7451) #10
  br label %7452

7452:                                             ; preds = %7450, %7448, %7402, %7393
  %7453 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 127
  %7454 = load i8, i8* %7453, align 1, !range !2
  %7455 = icmp eq i8 %7454, 0
  br i1 %7455, label %7511, label %7456

7456:                                             ; preds = %7452
  %7457 = load i32*, i32** %3, align 8
  %7458 = load i32*, i32** %4, align 8
  %7459 = icmp ult i32* %7457, %7458
  %7460 = ptrtoint i32* %7458 to i64
  br i1 %7459, label %7461, label %7465

7461:                                             ; preds = %7456
  store i32 127, i32* %7457, align 4
  %7462 = getelementptr inbounds i32, i32* %7457, i64 1
  %7463 = ptrtoint i32* %7462 to i64
  %7464 = bitcast i32** %3 to i64*
  store i64 %7463, i64* %7464, align 8
  br label %7511

7465:                                             ; preds = %7456
  %7466 = ptrtoint i32* %7457 to i64
  %7467 = bitcast i32** %3 to i64*
  %7468 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7469 = load i64, i64* %7468, align 8
  %7470 = sub i64 %7466, %7469
  %7471 = ashr exact i64 %7470, 2
  %7472 = add nsw i64 %7471, 1
  %7473 = icmp ugt i64 %7472, 4611686018427387903
  br i1 %7473, label %7474, label %7476

7474:                                             ; preds = %7465
  %7475 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %7475) #11
  unreachable

7476:                                             ; preds = %7465
  %7477 = bitcast i32** %4 to i64*
  %7478 = sub i64 %7460, %7469
  %7479 = ashr exact i64 %7478, 2
  %7480 = icmp ult i64 %7479, 2305843009213693951
  br i1 %7480, label %7481, label %7489

7481:                                             ; preds = %7476
  %7482 = ashr exact i64 %7478, 1
  %7483 = icmp ult i64 %7482, %7472
  %7484 = select i1 %7483, i64 %7472, i64 %7482
  %7485 = icmp eq i64 %7484, 0
  br i1 %7485, label %7494, label %7486

7486:                                             ; preds = %7481
  %7487 = icmp ugt i64 %7484, 4611686018427387903
  br i1 %7487, label %7488, label %7489

7488:                                             ; preds = %7486
  tail call void @abort() #11
  unreachable

7489:                                             ; preds = %7486, %7476
  %7490 = phi i64 [ %7484, %7486 ], [ 4611686018427387903, %7476 ]
  %7491 = shl i64 %7490, 2
  %7492 = tail call i8* @_Znwm(i64 %7491) #10
  %7493 = bitcast i8* %7492 to i32*
  br label %7494

7494:                                             ; preds = %7489, %7481
  %7495 = phi i64 [ %7490, %7489 ], [ 0, %7481 ]
  %7496 = phi i8* [ %7492, %7489 ], [ null, %7481 ]
  %7497 = phi i32* [ %7493, %7489 ], [ null, %7481 ]
  %7498 = getelementptr inbounds i32, i32* %7497, i64 %7471
  %7499 = getelementptr inbounds i32, i32* %7497, i64 %7495
  %7500 = ptrtoint i32* %7499 to i64
  store i32 127, i32* %7498, align 4
  %7501 = getelementptr inbounds i32, i32* %7498, i64 1
  %7502 = ptrtoint i32* %7501 to i64
  %7503 = ptrtoint i32* %7497 to i64
  %7504 = icmp sgt i64 %7470, 0
  br i1 %7504, label %7505, label %7507

7505:                                             ; preds = %7494
  %7506 = inttoptr i64 %7469 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7496, i8* align 4 %7506, i64 %7470, i1 false) #9
  br label %7507

7507:                                             ; preds = %7505, %7494
  store i64 %7503, i64* %7468, align 8
  store i64 %7502, i64* %7467, align 8
  store i64 %7500, i64* %7477, align 8
  %7508 = icmp eq i64 %7469, 0
  br i1 %7508, label %7511, label %7509

7509:                                             ; preds = %7507
  %7510 = inttoptr i64 %7469 to i8*
  tail call void @_ZdlPv(i8* %7510) #10
  br label %7511

7511:                                             ; preds = %7509, %7507, %7461, %7452
  %7512 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 128
  %7513 = load i8, i8* %7512, align 4, !range !2
  %7514 = icmp eq i8 %7513, 0
  br i1 %7514, label %7570, label %7515

7515:                                             ; preds = %7511
  %7516 = load i32*, i32** %3, align 8
  %7517 = load i32*, i32** %4, align 8
  %7518 = icmp ult i32* %7516, %7517
  %7519 = ptrtoint i32* %7517 to i64
  br i1 %7518, label %7520, label %7524

7520:                                             ; preds = %7515
  store i32 128, i32* %7516, align 4
  %7521 = getelementptr inbounds i32, i32* %7516, i64 1
  %7522 = ptrtoint i32* %7521 to i64
  %7523 = bitcast i32** %3 to i64*
  store i64 %7522, i64* %7523, align 8
  br label %7570

7524:                                             ; preds = %7515
  %7525 = ptrtoint i32* %7516 to i64
  %7526 = bitcast i32** %3 to i64*
  %7527 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7528 = load i64, i64* %7527, align 8
  %7529 = sub i64 %7525, %7528
  %7530 = ashr exact i64 %7529, 2
  %7531 = add nsw i64 %7530, 1
  %7532 = icmp ugt i64 %7531, 4611686018427387903
  br i1 %7532, label %7533, label %7535

7533:                                             ; preds = %7524
  %7534 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %7534) #11
  unreachable

7535:                                             ; preds = %7524
  %7536 = bitcast i32** %4 to i64*
  %7537 = sub i64 %7519, %7528
  %7538 = ashr exact i64 %7537, 2
  %7539 = icmp ult i64 %7538, 2305843009213693951
  br i1 %7539, label %7540, label %7548

7540:                                             ; preds = %7535
  %7541 = ashr exact i64 %7537, 1
  %7542 = icmp ult i64 %7541, %7531
  %7543 = select i1 %7542, i64 %7531, i64 %7541
  %7544 = icmp eq i64 %7543, 0
  br i1 %7544, label %7553, label %7545

7545:                                             ; preds = %7540
  %7546 = icmp ugt i64 %7543, 4611686018427387903
  br i1 %7546, label %7547, label %7548

7547:                                             ; preds = %7545
  tail call void @abort() #11
  unreachable

7548:                                             ; preds = %7545, %7535
  %7549 = phi i64 [ %7543, %7545 ], [ 4611686018427387903, %7535 ]
  %7550 = shl i64 %7549, 2
  %7551 = tail call i8* @_Znwm(i64 %7550) #10
  %7552 = bitcast i8* %7551 to i32*
  br label %7553

7553:                                             ; preds = %7548, %7540
  %7554 = phi i64 [ %7549, %7548 ], [ 0, %7540 ]
  %7555 = phi i8* [ %7551, %7548 ], [ null, %7540 ]
  %7556 = phi i32* [ %7552, %7548 ], [ null, %7540 ]
  %7557 = getelementptr inbounds i32, i32* %7556, i64 %7530
  %7558 = getelementptr inbounds i32, i32* %7556, i64 %7554
  %7559 = ptrtoint i32* %7558 to i64
  store i32 128, i32* %7557, align 4
  %7560 = getelementptr inbounds i32, i32* %7557, i64 1
  %7561 = ptrtoint i32* %7560 to i64
  %7562 = ptrtoint i32* %7556 to i64
  %7563 = icmp sgt i64 %7529, 0
  br i1 %7563, label %7564, label %7566

7564:                                             ; preds = %7553
  %7565 = inttoptr i64 %7528 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7555, i8* align 4 %7565, i64 %7529, i1 false) #9
  br label %7566

7566:                                             ; preds = %7564, %7553
  store i64 %7562, i64* %7527, align 8
  store i64 %7561, i64* %7526, align 8
  store i64 %7559, i64* %7536, align 8
  %7567 = icmp eq i64 %7528, 0
  br i1 %7567, label %7570, label %7568

7568:                                             ; preds = %7566
  %7569 = inttoptr i64 %7528 to i8*
  tail call void @_ZdlPv(i8* %7569) #10
  br label %7570

7570:                                             ; preds = %7568, %7566, %7520, %7511
  %7571 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 129
  %7572 = load i8, i8* %7571, align 1, !range !2
  %7573 = icmp eq i8 %7572, 0
  br i1 %7573, label %7629, label %7574

7574:                                             ; preds = %7570
  %7575 = load i32*, i32** %3, align 8
  %7576 = load i32*, i32** %4, align 8
  %7577 = icmp ult i32* %7575, %7576
  %7578 = ptrtoint i32* %7576 to i64
  br i1 %7577, label %7579, label %7583

7579:                                             ; preds = %7574
  store i32 129, i32* %7575, align 4
  %7580 = getelementptr inbounds i32, i32* %7575, i64 1
  %7581 = ptrtoint i32* %7580 to i64
  %7582 = bitcast i32** %3 to i64*
  store i64 %7581, i64* %7582, align 8
  br label %7629

7583:                                             ; preds = %7574
  %7584 = ptrtoint i32* %7575 to i64
  %7585 = bitcast i32** %3 to i64*
  %7586 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7587 = load i64, i64* %7586, align 8
  %7588 = sub i64 %7584, %7587
  %7589 = ashr exact i64 %7588, 2
  %7590 = add nsw i64 %7589, 1
  %7591 = icmp ugt i64 %7590, 4611686018427387903
  br i1 %7591, label %7592, label %7594

7592:                                             ; preds = %7583
  %7593 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %7593) #11
  unreachable

7594:                                             ; preds = %7583
  %7595 = bitcast i32** %4 to i64*
  %7596 = sub i64 %7578, %7587
  %7597 = ashr exact i64 %7596, 2
  %7598 = icmp ult i64 %7597, 2305843009213693951
  br i1 %7598, label %7599, label %7607

7599:                                             ; preds = %7594
  %7600 = ashr exact i64 %7596, 1
  %7601 = icmp ult i64 %7600, %7590
  %7602 = select i1 %7601, i64 %7590, i64 %7600
  %7603 = icmp eq i64 %7602, 0
  br i1 %7603, label %7612, label %7604

7604:                                             ; preds = %7599
  %7605 = icmp ugt i64 %7602, 4611686018427387903
  br i1 %7605, label %7606, label %7607

7606:                                             ; preds = %7604
  tail call void @abort() #11
  unreachable

7607:                                             ; preds = %7604, %7594
  %7608 = phi i64 [ %7602, %7604 ], [ 4611686018427387903, %7594 ]
  %7609 = shl i64 %7608, 2
  %7610 = tail call i8* @_Znwm(i64 %7609) #10
  %7611 = bitcast i8* %7610 to i32*
  br label %7612

7612:                                             ; preds = %7607, %7599
  %7613 = phi i64 [ %7608, %7607 ], [ 0, %7599 ]
  %7614 = phi i8* [ %7610, %7607 ], [ null, %7599 ]
  %7615 = phi i32* [ %7611, %7607 ], [ null, %7599 ]
  %7616 = getelementptr inbounds i32, i32* %7615, i64 %7589
  %7617 = getelementptr inbounds i32, i32* %7615, i64 %7613
  %7618 = ptrtoint i32* %7617 to i64
  store i32 129, i32* %7616, align 4
  %7619 = getelementptr inbounds i32, i32* %7616, i64 1
  %7620 = ptrtoint i32* %7619 to i64
  %7621 = ptrtoint i32* %7615 to i64
  %7622 = icmp sgt i64 %7588, 0
  br i1 %7622, label %7623, label %7625

7623:                                             ; preds = %7612
  %7624 = inttoptr i64 %7587 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7614, i8* align 4 %7624, i64 %7588, i1 false) #9
  br label %7625

7625:                                             ; preds = %7623, %7612
  store i64 %7621, i64* %7586, align 8
  store i64 %7620, i64* %7585, align 8
  store i64 %7618, i64* %7595, align 8
  %7626 = icmp eq i64 %7587, 0
  br i1 %7626, label %7629, label %7627

7627:                                             ; preds = %7625
  %7628 = inttoptr i64 %7587 to i8*
  tail call void @_ZdlPv(i8* %7628) #10
  br label %7629

7629:                                             ; preds = %7627, %7625, %7579, %7570
  %7630 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 130
  %7631 = load i8, i8* %7630, align 2, !range !2
  %7632 = icmp eq i8 %7631, 0
  br i1 %7632, label %7688, label %7633

7633:                                             ; preds = %7629
  %7634 = load i32*, i32** %3, align 8
  %7635 = load i32*, i32** %4, align 8
  %7636 = icmp ult i32* %7634, %7635
  %7637 = ptrtoint i32* %7635 to i64
  br i1 %7636, label %7638, label %7642

7638:                                             ; preds = %7633
  store i32 130, i32* %7634, align 4
  %7639 = getelementptr inbounds i32, i32* %7634, i64 1
  %7640 = ptrtoint i32* %7639 to i64
  %7641 = bitcast i32** %3 to i64*
  store i64 %7640, i64* %7641, align 8
  br label %7688

7642:                                             ; preds = %7633
  %7643 = ptrtoint i32* %7634 to i64
  %7644 = bitcast i32** %3 to i64*
  %7645 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7646 = load i64, i64* %7645, align 8
  %7647 = sub i64 %7643, %7646
  %7648 = ashr exact i64 %7647, 2
  %7649 = add nsw i64 %7648, 1
  %7650 = icmp ugt i64 %7649, 4611686018427387903
  br i1 %7650, label %7651, label %7653

7651:                                             ; preds = %7642
  %7652 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %7652) #11
  unreachable

7653:                                             ; preds = %7642
  %7654 = bitcast i32** %4 to i64*
  %7655 = sub i64 %7637, %7646
  %7656 = ashr exact i64 %7655, 2
  %7657 = icmp ult i64 %7656, 2305843009213693951
  br i1 %7657, label %7658, label %7666

7658:                                             ; preds = %7653
  %7659 = ashr exact i64 %7655, 1
  %7660 = icmp ult i64 %7659, %7649
  %7661 = select i1 %7660, i64 %7649, i64 %7659
  %7662 = icmp eq i64 %7661, 0
  br i1 %7662, label %7671, label %7663

7663:                                             ; preds = %7658
  %7664 = icmp ugt i64 %7661, 4611686018427387903
  br i1 %7664, label %7665, label %7666

7665:                                             ; preds = %7663
  tail call void @abort() #11
  unreachable

7666:                                             ; preds = %7663, %7653
  %7667 = phi i64 [ %7661, %7663 ], [ 4611686018427387903, %7653 ]
  %7668 = shl i64 %7667, 2
  %7669 = tail call i8* @_Znwm(i64 %7668) #10
  %7670 = bitcast i8* %7669 to i32*
  br label %7671

7671:                                             ; preds = %7666, %7658
  %7672 = phi i64 [ %7667, %7666 ], [ 0, %7658 ]
  %7673 = phi i8* [ %7669, %7666 ], [ null, %7658 ]
  %7674 = phi i32* [ %7670, %7666 ], [ null, %7658 ]
  %7675 = getelementptr inbounds i32, i32* %7674, i64 %7648
  %7676 = getelementptr inbounds i32, i32* %7674, i64 %7672
  %7677 = ptrtoint i32* %7676 to i64
  store i32 130, i32* %7675, align 4
  %7678 = getelementptr inbounds i32, i32* %7675, i64 1
  %7679 = ptrtoint i32* %7678 to i64
  %7680 = ptrtoint i32* %7674 to i64
  %7681 = icmp sgt i64 %7647, 0
  br i1 %7681, label %7682, label %7684

7682:                                             ; preds = %7671
  %7683 = inttoptr i64 %7646 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7673, i8* align 4 %7683, i64 %7647, i1 false) #9
  br label %7684

7684:                                             ; preds = %7682, %7671
  store i64 %7680, i64* %7645, align 8
  store i64 %7679, i64* %7644, align 8
  store i64 %7677, i64* %7654, align 8
  %7685 = icmp eq i64 %7646, 0
  br i1 %7685, label %7688, label %7686

7686:                                             ; preds = %7684
  %7687 = inttoptr i64 %7646 to i8*
  tail call void @_ZdlPv(i8* %7687) #10
  br label %7688

7688:                                             ; preds = %7686, %7684, %7638, %7629
  %7689 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 131
  %7690 = load i8, i8* %7689, align 1, !range !2
  %7691 = icmp eq i8 %7690, 0
  br i1 %7691, label %7747, label %7692

7692:                                             ; preds = %7688
  %7693 = load i32*, i32** %3, align 8
  %7694 = load i32*, i32** %4, align 8
  %7695 = icmp ult i32* %7693, %7694
  %7696 = ptrtoint i32* %7694 to i64
  br i1 %7695, label %7697, label %7701

7697:                                             ; preds = %7692
  store i32 131, i32* %7693, align 4
  %7698 = getelementptr inbounds i32, i32* %7693, i64 1
  %7699 = ptrtoint i32* %7698 to i64
  %7700 = bitcast i32** %3 to i64*
  store i64 %7699, i64* %7700, align 8
  br label %7747

7701:                                             ; preds = %7692
  %7702 = ptrtoint i32* %7693 to i64
  %7703 = bitcast i32** %3 to i64*
  %7704 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7705 = load i64, i64* %7704, align 8
  %7706 = sub i64 %7702, %7705
  %7707 = ashr exact i64 %7706, 2
  %7708 = add nsw i64 %7707, 1
  %7709 = icmp ugt i64 %7708, 4611686018427387903
  br i1 %7709, label %7710, label %7712

7710:                                             ; preds = %7701
  %7711 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %7711) #11
  unreachable

7712:                                             ; preds = %7701
  %7713 = bitcast i32** %4 to i64*
  %7714 = sub i64 %7696, %7705
  %7715 = ashr exact i64 %7714, 2
  %7716 = icmp ult i64 %7715, 2305843009213693951
  br i1 %7716, label %7717, label %7725

7717:                                             ; preds = %7712
  %7718 = ashr exact i64 %7714, 1
  %7719 = icmp ult i64 %7718, %7708
  %7720 = select i1 %7719, i64 %7708, i64 %7718
  %7721 = icmp eq i64 %7720, 0
  br i1 %7721, label %7730, label %7722

7722:                                             ; preds = %7717
  %7723 = icmp ugt i64 %7720, 4611686018427387903
  br i1 %7723, label %7724, label %7725

7724:                                             ; preds = %7722
  tail call void @abort() #11
  unreachable

7725:                                             ; preds = %7722, %7712
  %7726 = phi i64 [ %7720, %7722 ], [ 4611686018427387903, %7712 ]
  %7727 = shl i64 %7726, 2
  %7728 = tail call i8* @_Znwm(i64 %7727) #10
  %7729 = bitcast i8* %7728 to i32*
  br label %7730

7730:                                             ; preds = %7725, %7717
  %7731 = phi i64 [ %7726, %7725 ], [ 0, %7717 ]
  %7732 = phi i8* [ %7728, %7725 ], [ null, %7717 ]
  %7733 = phi i32* [ %7729, %7725 ], [ null, %7717 ]
  %7734 = getelementptr inbounds i32, i32* %7733, i64 %7707
  %7735 = getelementptr inbounds i32, i32* %7733, i64 %7731
  %7736 = ptrtoint i32* %7735 to i64
  store i32 131, i32* %7734, align 4
  %7737 = getelementptr inbounds i32, i32* %7734, i64 1
  %7738 = ptrtoint i32* %7737 to i64
  %7739 = ptrtoint i32* %7733 to i64
  %7740 = icmp sgt i64 %7706, 0
  br i1 %7740, label %7741, label %7743

7741:                                             ; preds = %7730
  %7742 = inttoptr i64 %7705 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7732, i8* align 4 %7742, i64 %7706, i1 false) #9
  br label %7743

7743:                                             ; preds = %7741, %7730
  store i64 %7739, i64* %7704, align 8
  store i64 %7738, i64* %7703, align 8
  store i64 %7736, i64* %7713, align 8
  %7744 = icmp eq i64 %7705, 0
  br i1 %7744, label %7747, label %7745

7745:                                             ; preds = %7743
  %7746 = inttoptr i64 %7705 to i8*
  tail call void @_ZdlPv(i8* %7746) #10
  br label %7747

7747:                                             ; preds = %7745, %7743, %7697, %7688
  %7748 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 132
  %7749 = load i8, i8* %7748, align 4, !range !2
  %7750 = icmp eq i8 %7749, 0
  br i1 %7750, label %7806, label %7751

7751:                                             ; preds = %7747
  %7752 = load i32*, i32** %3, align 8
  %7753 = load i32*, i32** %4, align 8
  %7754 = icmp ult i32* %7752, %7753
  %7755 = ptrtoint i32* %7753 to i64
  br i1 %7754, label %7756, label %7760

7756:                                             ; preds = %7751
  store i32 132, i32* %7752, align 4
  %7757 = getelementptr inbounds i32, i32* %7752, i64 1
  %7758 = ptrtoint i32* %7757 to i64
  %7759 = bitcast i32** %3 to i64*
  store i64 %7758, i64* %7759, align 8
  br label %7806

7760:                                             ; preds = %7751
  %7761 = ptrtoint i32* %7752 to i64
  %7762 = bitcast i32** %3 to i64*
  %7763 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7764 = load i64, i64* %7763, align 8
  %7765 = sub i64 %7761, %7764
  %7766 = ashr exact i64 %7765, 2
  %7767 = add nsw i64 %7766, 1
  %7768 = icmp ugt i64 %7767, 4611686018427387903
  br i1 %7768, label %7769, label %7771

7769:                                             ; preds = %7760
  %7770 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %7770) #11
  unreachable

7771:                                             ; preds = %7760
  %7772 = bitcast i32** %4 to i64*
  %7773 = sub i64 %7755, %7764
  %7774 = ashr exact i64 %7773, 2
  %7775 = icmp ult i64 %7774, 2305843009213693951
  br i1 %7775, label %7776, label %7784

7776:                                             ; preds = %7771
  %7777 = ashr exact i64 %7773, 1
  %7778 = icmp ult i64 %7777, %7767
  %7779 = select i1 %7778, i64 %7767, i64 %7777
  %7780 = icmp eq i64 %7779, 0
  br i1 %7780, label %7789, label %7781

7781:                                             ; preds = %7776
  %7782 = icmp ugt i64 %7779, 4611686018427387903
  br i1 %7782, label %7783, label %7784

7783:                                             ; preds = %7781
  tail call void @abort() #11
  unreachable

7784:                                             ; preds = %7781, %7771
  %7785 = phi i64 [ %7779, %7781 ], [ 4611686018427387903, %7771 ]
  %7786 = shl i64 %7785, 2
  %7787 = tail call i8* @_Znwm(i64 %7786) #10
  %7788 = bitcast i8* %7787 to i32*
  br label %7789

7789:                                             ; preds = %7784, %7776
  %7790 = phi i64 [ %7785, %7784 ], [ 0, %7776 ]
  %7791 = phi i8* [ %7787, %7784 ], [ null, %7776 ]
  %7792 = phi i32* [ %7788, %7784 ], [ null, %7776 ]
  %7793 = getelementptr inbounds i32, i32* %7792, i64 %7766
  %7794 = getelementptr inbounds i32, i32* %7792, i64 %7790
  %7795 = ptrtoint i32* %7794 to i64
  store i32 132, i32* %7793, align 4
  %7796 = getelementptr inbounds i32, i32* %7793, i64 1
  %7797 = ptrtoint i32* %7796 to i64
  %7798 = ptrtoint i32* %7792 to i64
  %7799 = icmp sgt i64 %7765, 0
  br i1 %7799, label %7800, label %7802

7800:                                             ; preds = %7789
  %7801 = inttoptr i64 %7764 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7791, i8* align 4 %7801, i64 %7765, i1 false) #9
  br label %7802

7802:                                             ; preds = %7800, %7789
  store i64 %7798, i64* %7763, align 8
  store i64 %7797, i64* %7762, align 8
  store i64 %7795, i64* %7772, align 8
  %7803 = icmp eq i64 %7764, 0
  br i1 %7803, label %7806, label %7804

7804:                                             ; preds = %7802
  %7805 = inttoptr i64 %7764 to i8*
  tail call void @_ZdlPv(i8* %7805) #10
  br label %7806

7806:                                             ; preds = %7804, %7802, %7756, %7747
  %7807 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 133
  %7808 = load i8, i8* %7807, align 1, !range !2
  %7809 = icmp eq i8 %7808, 0
  br i1 %7809, label %7865, label %7810

7810:                                             ; preds = %7806
  %7811 = load i32*, i32** %3, align 8
  %7812 = load i32*, i32** %4, align 8
  %7813 = icmp ult i32* %7811, %7812
  %7814 = ptrtoint i32* %7812 to i64
  br i1 %7813, label %7815, label %7819

7815:                                             ; preds = %7810
  store i32 133, i32* %7811, align 4
  %7816 = getelementptr inbounds i32, i32* %7811, i64 1
  %7817 = ptrtoint i32* %7816 to i64
  %7818 = bitcast i32** %3 to i64*
  store i64 %7817, i64* %7818, align 8
  br label %7865

7819:                                             ; preds = %7810
  %7820 = ptrtoint i32* %7811 to i64
  %7821 = bitcast i32** %3 to i64*
  %7822 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7823 = load i64, i64* %7822, align 8
  %7824 = sub i64 %7820, %7823
  %7825 = ashr exact i64 %7824, 2
  %7826 = add nsw i64 %7825, 1
  %7827 = icmp ugt i64 %7826, 4611686018427387903
  br i1 %7827, label %7828, label %7830

7828:                                             ; preds = %7819
  %7829 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %7829) #11
  unreachable

7830:                                             ; preds = %7819
  %7831 = bitcast i32** %4 to i64*
  %7832 = sub i64 %7814, %7823
  %7833 = ashr exact i64 %7832, 2
  %7834 = icmp ult i64 %7833, 2305843009213693951
  br i1 %7834, label %7835, label %7843

7835:                                             ; preds = %7830
  %7836 = ashr exact i64 %7832, 1
  %7837 = icmp ult i64 %7836, %7826
  %7838 = select i1 %7837, i64 %7826, i64 %7836
  %7839 = icmp eq i64 %7838, 0
  br i1 %7839, label %7848, label %7840

7840:                                             ; preds = %7835
  %7841 = icmp ugt i64 %7838, 4611686018427387903
  br i1 %7841, label %7842, label %7843

7842:                                             ; preds = %7840
  tail call void @abort() #11
  unreachable

7843:                                             ; preds = %7840, %7830
  %7844 = phi i64 [ %7838, %7840 ], [ 4611686018427387903, %7830 ]
  %7845 = shl i64 %7844, 2
  %7846 = tail call i8* @_Znwm(i64 %7845) #10
  %7847 = bitcast i8* %7846 to i32*
  br label %7848

7848:                                             ; preds = %7843, %7835
  %7849 = phi i64 [ %7844, %7843 ], [ 0, %7835 ]
  %7850 = phi i8* [ %7846, %7843 ], [ null, %7835 ]
  %7851 = phi i32* [ %7847, %7843 ], [ null, %7835 ]
  %7852 = getelementptr inbounds i32, i32* %7851, i64 %7825
  %7853 = getelementptr inbounds i32, i32* %7851, i64 %7849
  %7854 = ptrtoint i32* %7853 to i64
  store i32 133, i32* %7852, align 4
  %7855 = getelementptr inbounds i32, i32* %7852, i64 1
  %7856 = ptrtoint i32* %7855 to i64
  %7857 = ptrtoint i32* %7851 to i64
  %7858 = icmp sgt i64 %7824, 0
  br i1 %7858, label %7859, label %7861

7859:                                             ; preds = %7848
  %7860 = inttoptr i64 %7823 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7850, i8* align 4 %7860, i64 %7824, i1 false) #9
  br label %7861

7861:                                             ; preds = %7859, %7848
  store i64 %7857, i64* %7822, align 8
  store i64 %7856, i64* %7821, align 8
  store i64 %7854, i64* %7831, align 8
  %7862 = icmp eq i64 %7823, 0
  br i1 %7862, label %7865, label %7863

7863:                                             ; preds = %7861
  %7864 = inttoptr i64 %7823 to i8*
  tail call void @_ZdlPv(i8* %7864) #10
  br label %7865

7865:                                             ; preds = %7863, %7861, %7815, %7806
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu23GpuDriverBugWorkarounds6AppendERKS0_(%"class.gpu::GpuDriverBugWorkarounds"*, %"class.gpu::GpuDriverBugWorkarounds"* readonly dereferenceable(148)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = or i8 %6, %4
  store i8 %7, i8* %5, align 4
  %8 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 1
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = or i8 %11, %9
  store i8 %12, i8* %10, align 1
  %13 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 2, !range !2
  %15 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 2, !range !2
  %17 = or i8 %16, %14
  store i8 %17, i8* %15, align 2
  %18 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 3
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 3
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = or i8 %21, %19
  store i8 %22, i8* %20, align 1
  %23 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 4
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 4
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = or i8 %26, %24
  store i8 %27, i8* %25, align 4
  %28 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 5
  %29 = load i8, i8* %28, align 1, !range !2
  %30 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 5
  %31 = load i8, i8* %30, align 1, !range !2
  %32 = or i8 %31, %29
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 6
  %34 = load i8, i8* %33, align 2, !range !2
  %35 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 6
  %36 = load i8, i8* %35, align 2, !range !2
  %37 = or i8 %36, %34
  store i8 %37, i8* %35, align 2
  %38 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 7
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 7
  %41 = load i8, i8* %40, align 1, !range !2
  %42 = or i8 %41, %39
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 8
  %44 = load i8, i8* %43, align 4, !range !2
  %45 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 8
  %46 = load i8, i8* %45, align 4, !range !2
  %47 = or i8 %46, %44
  store i8 %47, i8* %45, align 4
  %48 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 9
  %49 = load i8, i8* %48, align 1, !range !2
  %50 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 9
  %51 = load i8, i8* %50, align 1, !range !2
  %52 = or i8 %51, %49
  store i8 %52, i8* %50, align 1
  %53 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 10
  %54 = load i8, i8* %53, align 2, !range !2
  %55 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 10
  %56 = load i8, i8* %55, align 2, !range !2
  %57 = or i8 %56, %54
  store i8 %57, i8* %55, align 2
  %58 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 11
  %59 = load i8, i8* %58, align 1, !range !2
  %60 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 11
  %61 = load i8, i8* %60, align 1, !range !2
  %62 = or i8 %61, %59
  store i8 %62, i8* %60, align 1
  %63 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 12
  %64 = load i8, i8* %63, align 4, !range !2
  %65 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 12
  %66 = load i8, i8* %65, align 4, !range !2
  %67 = or i8 %66, %64
  store i8 %67, i8* %65, align 4
  %68 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 13
  %69 = load i8, i8* %68, align 1, !range !2
  %70 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 13
  %71 = load i8, i8* %70, align 1, !range !2
  %72 = or i8 %71, %69
  store i8 %72, i8* %70, align 1
  %73 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 14
  %74 = load i8, i8* %73, align 2, !range !2
  %75 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 14
  %76 = load i8, i8* %75, align 2, !range !2
  %77 = or i8 %76, %74
  store i8 %77, i8* %75, align 2
  %78 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 15
  %79 = load i8, i8* %78, align 1, !range !2
  %80 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 15
  %81 = load i8, i8* %80, align 1, !range !2
  %82 = or i8 %81, %79
  store i8 %82, i8* %80, align 1
  %83 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 16
  %84 = load i8, i8* %83, align 4, !range !2
  %85 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 16
  %86 = load i8, i8* %85, align 4, !range !2
  %87 = or i8 %86, %84
  store i8 %87, i8* %85, align 4
  %88 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 17
  %89 = load i8, i8* %88, align 1, !range !2
  %90 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 17
  %91 = load i8, i8* %90, align 1, !range !2
  %92 = or i8 %91, %89
  store i8 %92, i8* %90, align 1
  %93 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 18
  %94 = load i8, i8* %93, align 2, !range !2
  %95 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 18
  %96 = load i8, i8* %95, align 2, !range !2
  %97 = or i8 %96, %94
  store i8 %97, i8* %95, align 2
  %98 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 19
  %99 = load i8, i8* %98, align 1, !range !2
  %100 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 19
  %101 = load i8, i8* %100, align 1, !range !2
  %102 = or i8 %101, %99
  store i8 %102, i8* %100, align 1
  %103 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 20
  %104 = load i8, i8* %103, align 4, !range !2
  %105 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 20
  %106 = load i8, i8* %105, align 4, !range !2
  %107 = or i8 %106, %104
  store i8 %107, i8* %105, align 4
  %108 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 21
  %109 = load i8, i8* %108, align 1, !range !2
  %110 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 21
  %111 = load i8, i8* %110, align 1, !range !2
  %112 = or i8 %111, %109
  store i8 %112, i8* %110, align 1
  %113 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 22
  %114 = load i8, i8* %113, align 2, !range !2
  %115 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 22
  %116 = load i8, i8* %115, align 2, !range !2
  %117 = or i8 %116, %114
  store i8 %117, i8* %115, align 2
  %118 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 23
  %119 = load i8, i8* %118, align 1, !range !2
  %120 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 23
  %121 = load i8, i8* %120, align 1, !range !2
  %122 = or i8 %121, %119
  store i8 %122, i8* %120, align 1
  %123 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 24
  %124 = load i8, i8* %123, align 4, !range !2
  %125 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 24
  %126 = load i8, i8* %125, align 4, !range !2
  %127 = or i8 %126, %124
  store i8 %127, i8* %125, align 4
  %128 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 25
  %129 = load i8, i8* %128, align 1, !range !2
  %130 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 25
  %131 = load i8, i8* %130, align 1, !range !2
  %132 = or i8 %131, %129
  store i8 %132, i8* %130, align 1
  %133 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 26
  %134 = load i8, i8* %133, align 2, !range !2
  %135 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 26
  %136 = load i8, i8* %135, align 2, !range !2
  %137 = or i8 %136, %134
  store i8 %137, i8* %135, align 2
  %138 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 27
  %139 = load i8, i8* %138, align 1, !range !2
  %140 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 27
  %141 = load i8, i8* %140, align 1, !range !2
  %142 = or i8 %141, %139
  store i8 %142, i8* %140, align 1
  %143 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 28
  %144 = load i8, i8* %143, align 4, !range !2
  %145 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 28
  %146 = load i8, i8* %145, align 4, !range !2
  %147 = or i8 %146, %144
  store i8 %147, i8* %145, align 4
  %148 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 29
  %149 = load i8, i8* %148, align 1, !range !2
  %150 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 29
  %151 = load i8, i8* %150, align 1, !range !2
  %152 = or i8 %151, %149
  store i8 %152, i8* %150, align 1
  %153 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 30
  %154 = load i8, i8* %153, align 2, !range !2
  %155 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 30
  %156 = load i8, i8* %155, align 2, !range !2
  %157 = or i8 %156, %154
  store i8 %157, i8* %155, align 2
  %158 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 31
  %159 = load i8, i8* %158, align 1, !range !2
  %160 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 31
  %161 = load i8, i8* %160, align 1, !range !2
  %162 = or i8 %161, %159
  store i8 %162, i8* %160, align 1
  %163 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 32
  %164 = load i8, i8* %163, align 4, !range !2
  %165 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 32
  %166 = load i8, i8* %165, align 4, !range !2
  %167 = or i8 %166, %164
  store i8 %167, i8* %165, align 4
  %168 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 33
  %169 = load i8, i8* %168, align 1, !range !2
  %170 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 33
  %171 = load i8, i8* %170, align 1, !range !2
  %172 = or i8 %171, %169
  store i8 %172, i8* %170, align 1
  %173 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 34
  %174 = load i8, i8* %173, align 2, !range !2
  %175 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 34
  %176 = load i8, i8* %175, align 2, !range !2
  %177 = or i8 %176, %174
  store i8 %177, i8* %175, align 2
  %178 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 35
  %179 = load i8, i8* %178, align 1, !range !2
  %180 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 35
  %181 = load i8, i8* %180, align 1, !range !2
  %182 = or i8 %181, %179
  store i8 %182, i8* %180, align 1
  %183 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 36
  %184 = load i8, i8* %183, align 4, !range !2
  %185 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 36
  %186 = load i8, i8* %185, align 4, !range !2
  %187 = or i8 %186, %184
  store i8 %187, i8* %185, align 4
  %188 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 37
  %189 = load i8, i8* %188, align 1, !range !2
  %190 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 37
  %191 = load i8, i8* %190, align 1, !range !2
  %192 = or i8 %191, %189
  store i8 %192, i8* %190, align 1
  %193 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 38
  %194 = load i8, i8* %193, align 2, !range !2
  %195 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 38
  %196 = load i8, i8* %195, align 2, !range !2
  %197 = or i8 %196, %194
  store i8 %197, i8* %195, align 2
  %198 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 39
  %199 = load i8, i8* %198, align 1, !range !2
  %200 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 39
  %201 = load i8, i8* %200, align 1, !range !2
  %202 = or i8 %201, %199
  store i8 %202, i8* %200, align 1
  %203 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 40
  %204 = load i8, i8* %203, align 4, !range !2
  %205 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 40
  %206 = load i8, i8* %205, align 4, !range !2
  %207 = or i8 %206, %204
  store i8 %207, i8* %205, align 4
  %208 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 41
  %209 = load i8, i8* %208, align 1, !range !2
  %210 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 41
  %211 = load i8, i8* %210, align 1, !range !2
  %212 = or i8 %211, %209
  store i8 %212, i8* %210, align 1
  %213 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 42
  %214 = load i8, i8* %213, align 2, !range !2
  %215 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 42
  %216 = load i8, i8* %215, align 2, !range !2
  %217 = or i8 %216, %214
  store i8 %217, i8* %215, align 2
  %218 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 43
  %219 = load i8, i8* %218, align 1, !range !2
  %220 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 43
  %221 = load i8, i8* %220, align 1, !range !2
  %222 = or i8 %221, %219
  store i8 %222, i8* %220, align 1
  %223 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 44
  %224 = load i8, i8* %223, align 4, !range !2
  %225 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 44
  %226 = load i8, i8* %225, align 4, !range !2
  %227 = or i8 %226, %224
  store i8 %227, i8* %225, align 4
  %228 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 45
  %229 = load i8, i8* %228, align 1, !range !2
  %230 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 45
  %231 = load i8, i8* %230, align 1, !range !2
  %232 = or i8 %231, %229
  store i8 %232, i8* %230, align 1
  %233 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 46
  %234 = load i8, i8* %233, align 2, !range !2
  %235 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 46
  %236 = load i8, i8* %235, align 2, !range !2
  %237 = or i8 %236, %234
  store i8 %237, i8* %235, align 2
  %238 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 47
  %239 = load i8, i8* %238, align 1, !range !2
  %240 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 47
  %241 = load i8, i8* %240, align 1, !range !2
  %242 = or i8 %241, %239
  store i8 %242, i8* %240, align 1
  %243 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 48
  %244 = load i8, i8* %243, align 4, !range !2
  %245 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 48
  %246 = load i8, i8* %245, align 4, !range !2
  %247 = or i8 %246, %244
  store i8 %247, i8* %245, align 4
  %248 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 49
  %249 = load i8, i8* %248, align 1, !range !2
  %250 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 49
  %251 = load i8, i8* %250, align 1, !range !2
  %252 = or i8 %251, %249
  store i8 %252, i8* %250, align 1
  %253 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 50
  %254 = load i8, i8* %253, align 2, !range !2
  %255 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 50
  %256 = load i8, i8* %255, align 2, !range !2
  %257 = or i8 %256, %254
  store i8 %257, i8* %255, align 2
  %258 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 51
  %259 = load i8, i8* %258, align 1, !range !2
  %260 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 51
  %261 = load i8, i8* %260, align 1, !range !2
  %262 = or i8 %261, %259
  store i8 %262, i8* %260, align 1
  %263 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 52
  %264 = load i8, i8* %263, align 4, !range !2
  %265 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 52
  %266 = load i8, i8* %265, align 4, !range !2
  %267 = or i8 %266, %264
  store i8 %267, i8* %265, align 4
  %268 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 53
  %269 = load i8, i8* %268, align 1, !range !2
  %270 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 53
  %271 = load i8, i8* %270, align 1, !range !2
  %272 = or i8 %271, %269
  store i8 %272, i8* %270, align 1
  %273 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 54
  %274 = load i8, i8* %273, align 2, !range !2
  %275 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 54
  %276 = load i8, i8* %275, align 2, !range !2
  %277 = or i8 %276, %274
  store i8 %277, i8* %275, align 2
  %278 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 55
  %279 = load i8, i8* %278, align 1, !range !2
  %280 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 55
  %281 = load i8, i8* %280, align 1, !range !2
  %282 = or i8 %281, %279
  store i8 %282, i8* %280, align 1
  %283 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 56
  %284 = load i8, i8* %283, align 4, !range !2
  %285 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 56
  %286 = load i8, i8* %285, align 4, !range !2
  %287 = or i8 %286, %284
  store i8 %287, i8* %285, align 4
  %288 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 57
  %289 = load i8, i8* %288, align 1, !range !2
  %290 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 57
  %291 = load i8, i8* %290, align 1, !range !2
  %292 = or i8 %291, %289
  store i8 %292, i8* %290, align 1
  %293 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 58
  %294 = load i8, i8* %293, align 2, !range !2
  %295 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 58
  %296 = load i8, i8* %295, align 2, !range !2
  %297 = or i8 %296, %294
  store i8 %297, i8* %295, align 2
  %298 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 59
  %299 = load i8, i8* %298, align 1, !range !2
  %300 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 59
  %301 = load i8, i8* %300, align 1, !range !2
  %302 = or i8 %301, %299
  store i8 %302, i8* %300, align 1
  %303 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 60
  %304 = load i8, i8* %303, align 4, !range !2
  %305 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 60
  %306 = load i8, i8* %305, align 4, !range !2
  %307 = or i8 %306, %304
  store i8 %307, i8* %305, align 4
  %308 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 61
  %309 = load i8, i8* %308, align 1, !range !2
  %310 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 61
  %311 = load i8, i8* %310, align 1, !range !2
  %312 = or i8 %311, %309
  store i8 %312, i8* %310, align 1
  %313 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 62
  %314 = load i8, i8* %313, align 2, !range !2
  %315 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 62
  %316 = load i8, i8* %315, align 2, !range !2
  %317 = or i8 %316, %314
  store i8 %317, i8* %315, align 2
  %318 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 63
  %319 = load i8, i8* %318, align 1, !range !2
  %320 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 63
  %321 = load i8, i8* %320, align 1, !range !2
  %322 = or i8 %321, %319
  store i8 %322, i8* %320, align 1
  %323 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 64
  %324 = load i8, i8* %323, align 4, !range !2
  %325 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 64
  %326 = load i8, i8* %325, align 4, !range !2
  %327 = or i8 %326, %324
  store i8 %327, i8* %325, align 4
  %328 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 65
  %329 = load i8, i8* %328, align 1, !range !2
  %330 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 65
  %331 = load i8, i8* %330, align 1, !range !2
  %332 = or i8 %331, %329
  store i8 %332, i8* %330, align 1
  %333 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 66
  %334 = load i8, i8* %333, align 2, !range !2
  %335 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 66
  %336 = load i8, i8* %335, align 2, !range !2
  %337 = or i8 %336, %334
  store i8 %337, i8* %335, align 2
  %338 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 67
  %339 = load i8, i8* %338, align 1, !range !2
  %340 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 67
  %341 = load i8, i8* %340, align 1, !range !2
  %342 = or i8 %341, %339
  store i8 %342, i8* %340, align 1
  %343 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 68
  %344 = load i8, i8* %343, align 4, !range !2
  %345 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 68
  %346 = load i8, i8* %345, align 4, !range !2
  %347 = or i8 %346, %344
  store i8 %347, i8* %345, align 4
  %348 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 69
  %349 = load i8, i8* %348, align 1, !range !2
  %350 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 69
  %351 = load i8, i8* %350, align 1, !range !2
  %352 = or i8 %351, %349
  store i8 %352, i8* %350, align 1
  %353 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 70
  %354 = load i8, i8* %353, align 2, !range !2
  %355 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 70
  %356 = load i8, i8* %355, align 2, !range !2
  %357 = or i8 %356, %354
  store i8 %357, i8* %355, align 2
  %358 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 71
  %359 = load i8, i8* %358, align 1, !range !2
  %360 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 71
  %361 = load i8, i8* %360, align 1, !range !2
  %362 = or i8 %361, %359
  store i8 %362, i8* %360, align 1
  %363 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 72
  %364 = load i8, i8* %363, align 4, !range !2
  %365 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 72
  %366 = load i8, i8* %365, align 4, !range !2
  %367 = or i8 %366, %364
  store i8 %367, i8* %365, align 4
  %368 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 73
  %369 = load i8, i8* %368, align 1, !range !2
  %370 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 73
  %371 = load i8, i8* %370, align 1, !range !2
  %372 = or i8 %371, %369
  store i8 %372, i8* %370, align 1
  %373 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 74
  %374 = load i8, i8* %373, align 2, !range !2
  %375 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 74
  %376 = load i8, i8* %375, align 2, !range !2
  %377 = or i8 %376, %374
  store i8 %377, i8* %375, align 2
  %378 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 75
  %379 = load i8, i8* %378, align 1, !range !2
  %380 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 75
  %381 = load i8, i8* %380, align 1, !range !2
  %382 = or i8 %381, %379
  store i8 %382, i8* %380, align 1
  %383 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 76
  %384 = load i8, i8* %383, align 4, !range !2
  %385 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 76
  %386 = load i8, i8* %385, align 4, !range !2
  %387 = or i8 %386, %384
  store i8 %387, i8* %385, align 4
  %388 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 77
  %389 = load i8, i8* %388, align 1, !range !2
  %390 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 77
  %391 = load i8, i8* %390, align 1, !range !2
  %392 = or i8 %391, %389
  store i8 %392, i8* %390, align 1
  %393 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 78
  %394 = load i8, i8* %393, align 2, !range !2
  %395 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 78
  %396 = load i8, i8* %395, align 2, !range !2
  %397 = or i8 %396, %394
  store i8 %397, i8* %395, align 2
  %398 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 79
  %399 = load i8, i8* %398, align 1, !range !2
  %400 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 79
  %401 = load i8, i8* %400, align 1, !range !2
  %402 = or i8 %401, %399
  store i8 %402, i8* %400, align 1
  %403 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 80
  %404 = load i8, i8* %403, align 4, !range !2
  %405 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 80
  %406 = load i8, i8* %405, align 4, !range !2
  %407 = or i8 %406, %404
  store i8 %407, i8* %405, align 4
  %408 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 81
  %409 = load i8, i8* %408, align 1, !range !2
  %410 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 81
  %411 = load i8, i8* %410, align 1, !range !2
  %412 = or i8 %411, %409
  store i8 %412, i8* %410, align 1
  %413 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 82
  %414 = load i8, i8* %413, align 2, !range !2
  %415 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 82
  %416 = load i8, i8* %415, align 2, !range !2
  %417 = or i8 %416, %414
  store i8 %417, i8* %415, align 2
  %418 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 83
  %419 = load i8, i8* %418, align 1, !range !2
  %420 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 83
  %421 = load i8, i8* %420, align 1, !range !2
  %422 = or i8 %421, %419
  store i8 %422, i8* %420, align 1
  %423 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 84
  %424 = load i8, i8* %423, align 4, !range !2
  %425 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 84
  %426 = load i8, i8* %425, align 4, !range !2
  %427 = or i8 %426, %424
  store i8 %427, i8* %425, align 4
  %428 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 85
  %429 = load i8, i8* %428, align 1, !range !2
  %430 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 85
  %431 = load i8, i8* %430, align 1, !range !2
  %432 = or i8 %431, %429
  store i8 %432, i8* %430, align 1
  %433 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 86
  %434 = load i8, i8* %433, align 2, !range !2
  %435 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 86
  %436 = load i8, i8* %435, align 2, !range !2
  %437 = or i8 %436, %434
  store i8 %437, i8* %435, align 2
  %438 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 87
  %439 = load i8, i8* %438, align 1, !range !2
  %440 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 87
  %441 = load i8, i8* %440, align 1, !range !2
  %442 = or i8 %441, %439
  store i8 %442, i8* %440, align 1
  %443 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 88
  %444 = load i8, i8* %443, align 4, !range !2
  %445 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 88
  %446 = load i8, i8* %445, align 4, !range !2
  %447 = or i8 %446, %444
  store i8 %447, i8* %445, align 4
  %448 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 89
  %449 = load i8, i8* %448, align 1, !range !2
  %450 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 89
  %451 = load i8, i8* %450, align 1, !range !2
  %452 = or i8 %451, %449
  store i8 %452, i8* %450, align 1
  %453 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 90
  %454 = load i8, i8* %453, align 2, !range !2
  %455 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 90
  %456 = load i8, i8* %455, align 2, !range !2
  %457 = or i8 %456, %454
  store i8 %457, i8* %455, align 2
  %458 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 91
  %459 = load i8, i8* %458, align 1, !range !2
  %460 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 91
  %461 = load i8, i8* %460, align 1, !range !2
  %462 = or i8 %461, %459
  store i8 %462, i8* %460, align 1
  %463 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 92
  %464 = load i8, i8* %463, align 4, !range !2
  %465 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 92
  %466 = load i8, i8* %465, align 4, !range !2
  %467 = or i8 %466, %464
  store i8 %467, i8* %465, align 4
  %468 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 93
  %469 = load i8, i8* %468, align 1, !range !2
  %470 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 93
  %471 = load i8, i8* %470, align 1, !range !2
  %472 = or i8 %471, %469
  store i8 %472, i8* %470, align 1
  %473 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 94
  %474 = load i8, i8* %473, align 2, !range !2
  %475 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 94
  %476 = load i8, i8* %475, align 2, !range !2
  %477 = or i8 %476, %474
  store i8 %477, i8* %475, align 2
  %478 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 95
  %479 = load i8, i8* %478, align 1, !range !2
  %480 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 95
  %481 = load i8, i8* %480, align 1, !range !2
  %482 = or i8 %481, %479
  store i8 %482, i8* %480, align 1
  %483 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 96
  %484 = load i8, i8* %483, align 4, !range !2
  %485 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 96
  %486 = load i8, i8* %485, align 4, !range !2
  %487 = or i8 %486, %484
  store i8 %487, i8* %485, align 4
  %488 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 97
  %489 = load i8, i8* %488, align 1, !range !2
  %490 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 97
  %491 = load i8, i8* %490, align 1, !range !2
  %492 = or i8 %491, %489
  store i8 %492, i8* %490, align 1
  %493 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 98
  %494 = load i8, i8* %493, align 2, !range !2
  %495 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 98
  %496 = load i8, i8* %495, align 2, !range !2
  %497 = or i8 %496, %494
  store i8 %497, i8* %495, align 2
  %498 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 99
  %499 = load i8, i8* %498, align 1, !range !2
  %500 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 99
  %501 = load i8, i8* %500, align 1, !range !2
  %502 = or i8 %501, %499
  store i8 %502, i8* %500, align 1
  %503 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 100
  %504 = load i8, i8* %503, align 4, !range !2
  %505 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 100
  %506 = load i8, i8* %505, align 4, !range !2
  %507 = or i8 %506, %504
  store i8 %507, i8* %505, align 4
  %508 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 101
  %509 = load i8, i8* %508, align 1, !range !2
  %510 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 101
  %511 = load i8, i8* %510, align 1, !range !2
  %512 = or i8 %511, %509
  store i8 %512, i8* %510, align 1
  %513 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 102
  %514 = load i8, i8* %513, align 2, !range !2
  %515 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 102
  %516 = load i8, i8* %515, align 2, !range !2
  %517 = or i8 %516, %514
  store i8 %517, i8* %515, align 2
  %518 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 103
  %519 = load i8, i8* %518, align 1, !range !2
  %520 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 103
  %521 = load i8, i8* %520, align 1, !range !2
  %522 = or i8 %521, %519
  store i8 %522, i8* %520, align 1
  %523 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 104
  %524 = load i8, i8* %523, align 4, !range !2
  %525 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 104
  %526 = load i8, i8* %525, align 4, !range !2
  %527 = or i8 %526, %524
  store i8 %527, i8* %525, align 4
  %528 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 105
  %529 = load i8, i8* %528, align 1, !range !2
  %530 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 105
  %531 = load i8, i8* %530, align 1, !range !2
  %532 = or i8 %531, %529
  store i8 %532, i8* %530, align 1
  %533 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 106
  %534 = load i8, i8* %533, align 2, !range !2
  %535 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 106
  %536 = load i8, i8* %535, align 2, !range !2
  %537 = or i8 %536, %534
  store i8 %537, i8* %535, align 2
  %538 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 107
  %539 = load i8, i8* %538, align 1, !range !2
  %540 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 107
  %541 = load i8, i8* %540, align 1, !range !2
  %542 = or i8 %541, %539
  store i8 %542, i8* %540, align 1
  %543 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 108
  %544 = load i8, i8* %543, align 4, !range !2
  %545 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 108
  %546 = load i8, i8* %545, align 4, !range !2
  %547 = or i8 %546, %544
  store i8 %547, i8* %545, align 4
  %548 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 109
  %549 = load i8, i8* %548, align 1, !range !2
  %550 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 109
  %551 = load i8, i8* %550, align 1, !range !2
  %552 = or i8 %551, %549
  store i8 %552, i8* %550, align 1
  %553 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 110
  %554 = load i8, i8* %553, align 2, !range !2
  %555 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 110
  %556 = load i8, i8* %555, align 2, !range !2
  %557 = or i8 %556, %554
  store i8 %557, i8* %555, align 2
  %558 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 111
  %559 = load i8, i8* %558, align 1, !range !2
  %560 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 111
  %561 = load i8, i8* %560, align 1, !range !2
  %562 = or i8 %561, %559
  store i8 %562, i8* %560, align 1
  %563 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 112
  %564 = load i8, i8* %563, align 4, !range !2
  %565 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 112
  %566 = load i8, i8* %565, align 4, !range !2
  %567 = or i8 %566, %564
  store i8 %567, i8* %565, align 4
  %568 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 113
  %569 = load i8, i8* %568, align 1, !range !2
  %570 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 113
  %571 = load i8, i8* %570, align 1, !range !2
  %572 = or i8 %571, %569
  store i8 %572, i8* %570, align 1
  %573 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 114
  %574 = load i8, i8* %573, align 2, !range !2
  %575 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 114
  %576 = load i8, i8* %575, align 2, !range !2
  %577 = or i8 %576, %574
  store i8 %577, i8* %575, align 2
  %578 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 115
  %579 = load i8, i8* %578, align 1, !range !2
  %580 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 115
  %581 = load i8, i8* %580, align 1, !range !2
  %582 = or i8 %581, %579
  store i8 %582, i8* %580, align 1
  %583 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 116
  %584 = load i8, i8* %583, align 4, !range !2
  %585 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 116
  %586 = load i8, i8* %585, align 4, !range !2
  %587 = or i8 %586, %584
  store i8 %587, i8* %585, align 4
  %588 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 117
  %589 = load i8, i8* %588, align 1, !range !2
  %590 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 117
  %591 = load i8, i8* %590, align 1, !range !2
  %592 = or i8 %591, %589
  store i8 %592, i8* %590, align 1
  %593 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 118
  %594 = load i8, i8* %593, align 2, !range !2
  %595 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 118
  %596 = load i8, i8* %595, align 2, !range !2
  %597 = or i8 %596, %594
  store i8 %597, i8* %595, align 2
  %598 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 119
  %599 = load i8, i8* %598, align 1, !range !2
  %600 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 119
  %601 = load i8, i8* %600, align 1, !range !2
  %602 = or i8 %601, %599
  store i8 %602, i8* %600, align 1
  %603 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 120
  %604 = load i8, i8* %603, align 4, !range !2
  %605 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 120
  %606 = load i8, i8* %605, align 4, !range !2
  %607 = or i8 %606, %604
  store i8 %607, i8* %605, align 4
  %608 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 121
  %609 = load i8, i8* %608, align 1, !range !2
  %610 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 121
  %611 = load i8, i8* %610, align 1, !range !2
  %612 = or i8 %611, %609
  store i8 %612, i8* %610, align 1
  %613 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 122
  %614 = load i8, i8* %613, align 2, !range !2
  %615 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 122
  %616 = load i8, i8* %615, align 2, !range !2
  %617 = or i8 %616, %614
  store i8 %617, i8* %615, align 2
  %618 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 123
  %619 = load i8, i8* %618, align 1, !range !2
  %620 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 123
  %621 = load i8, i8* %620, align 1, !range !2
  %622 = or i8 %621, %619
  store i8 %622, i8* %620, align 1
  %623 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 124
  %624 = load i8, i8* %623, align 4, !range !2
  %625 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 124
  %626 = load i8, i8* %625, align 4, !range !2
  %627 = or i8 %626, %624
  store i8 %627, i8* %625, align 4
  %628 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 125
  %629 = load i8, i8* %628, align 1, !range !2
  %630 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 125
  %631 = load i8, i8* %630, align 1, !range !2
  %632 = or i8 %631, %629
  store i8 %632, i8* %630, align 1
  %633 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 126
  %634 = load i8, i8* %633, align 2, !range !2
  %635 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 126
  %636 = load i8, i8* %635, align 2, !range !2
  %637 = or i8 %636, %634
  store i8 %637, i8* %635, align 2
  %638 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 127
  %639 = load i8, i8* %638, align 1, !range !2
  %640 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 127
  %641 = load i8, i8* %640, align 1, !range !2
  %642 = or i8 %641, %639
  store i8 %642, i8* %640, align 1
  %643 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 128
  %644 = load i8, i8* %643, align 4, !range !2
  %645 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 128
  %646 = load i8, i8* %645, align 4, !range !2
  %647 = or i8 %646, %644
  store i8 %647, i8* %645, align 4
  %648 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 129
  %649 = load i8, i8* %648, align 1, !range !2
  %650 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 129
  %651 = load i8, i8* %650, align 1, !range !2
  %652 = or i8 %651, %649
  store i8 %652, i8* %650, align 1
  %653 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 130
  %654 = load i8, i8* %653, align 2, !range !2
  %655 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 130
  %656 = load i8, i8* %655, align 2, !range !2
  %657 = or i8 %656, %654
  store i8 %657, i8* %655, align 2
  %658 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 131
  %659 = load i8, i8* %658, align 1, !range !2
  %660 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 131
  %661 = load i8, i8* %660, align 1, !range !2
  %662 = or i8 %661, %659
  store i8 %662, i8* %660, align 1
  %663 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 132
  %664 = load i8, i8* %663, align 4, !range !2
  %665 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 132
  %666 = load i8, i8* %665, align 4, !range !2
  %667 = or i8 %666, %664
  store i8 %667, i8* %665, align 4
  %668 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 133
  %669 = load i8, i8* %668, align 1, !range !2
  %670 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 133
  %671 = load i8, i8* %670, align 1, !range !2
  %672 = or i8 %671, %669
  store i8 %672, i8* %670, align 1
  %673 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 134
  %674 = load i32, i32* %673, align 4
  %675 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 134
  %676 = load i32, i32* %675, align 4
  %677 = icmp sgt i32 %674, 0
  %678 = icmp sgt i32 %676, 0
  %679 = and i1 %677, %678
  %680 = icmp slt i32 %676, %674
  %681 = select i1 %680, i32 %676, i32 %674
  %682 = select i1 %677, i32 %674, i32 %676
  %683 = select i1 %679, i32 %681, i32 %682
  store i32 %683, i32* %673, align 4
  %684 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 136
  %685 = load i32, i32* %684, align 4
  %686 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 136
  %687 = load i32, i32* %686, align 4
  %688 = icmp sgt i32 %685, 0
  %689 = icmp sgt i32 %687, 0
  %690 = and i1 %688, %689
  %691 = icmp slt i32 %687, %685
  %692 = select i1 %691, i32 %687, i32 %685
  %693 = select i1 %688, i32 %685, i32 %687
  %694 = select i1 %690, i32 %692, i32 %693
  store i32 %694, i32* %684, align 4
  %695 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %0, i64 0, i32 135
  %696 = load i32, i32* %695, align 4
  %697 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 135
  %698 = load i32, i32* %697, align 4
  %699 = icmp sgt i32 %696, 0
  %700 = icmp sgt i32 %698, 0
  %701 = and i1 %699, %700
  %702 = icmp slt i32 %698, %696
  %703 = select i1 %702, i32 %698, i32 %696
  %704 = select i1 %699, i32 %696, i32 %698
  %705 = select i1 %701, i32 %703, i32 %704
  store i32 %705, i32* %695, align 4
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
