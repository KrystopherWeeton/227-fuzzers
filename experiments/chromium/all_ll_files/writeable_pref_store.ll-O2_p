; ModuleID = '../../components/prefs/writeable_pref_store.cc'
source_filename = "../../components/prefs/writeable_pref_store.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.WriteablePrefStore = type { %class.PrefStore.base, [4 x i8] }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }

$_ZN9PrefStore11AddObserverEPNS_8ObserverE = comdat any

$_ZN9PrefStore14RemoveObserverEPNS_8ObserverE = comdat any

$_ZN9PrefStoreD2Ev = comdat any

$_ZN18WriteablePrefStoreD0Ev = comdat any

@_ZTV18WriteablePrefStore = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.PrefStore*, %"class.PrefStore::Observer"*)* @_ZN9PrefStore11AddObserverEPNS_8ObserverE to i8*), i8* bitcast (void (%class.PrefStore*, %"class.PrefStore::Observer"*)* @_ZN9PrefStore14RemoveObserverEPNS_8ObserverE to i8*), i8* bitcast (i1 (%class.PrefStore*)* @_ZNK9PrefStore12HasObserversEv to i8*), i8* bitcast (i1 (%class.PrefStore*)* @_ZNK9PrefStore24IsInitializationCompleteEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.PrefStore*)* @_ZN9PrefStoreD2Ev to i8*), i8* bitcast (void (%class.WriteablePrefStore*)* @_ZN18WriteablePrefStoreD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.std::__1::set"*, i32)* @_ZN18WriteablePrefStore22ReportSubValuesChangedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_3setINS0_6vectorIS6_NS4_IS6_EEEENS0_4lessISC_EENS4_ISC_EEEEj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18WriteablePrefStore22ReportSubValuesChangedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_3setINS0_6vectorIS6_NS4_IS6_EEEENS0_4lessISC_EENS4_ISC_EEEEj(%class.WriteablePrefStore*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::set"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %5 = bitcast %class.WriteablePrefStore* %0 to void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)***
  %6 = load void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)**, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)*, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)** %6, i64 11
  %8 = load void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)*, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)** %7, align 8
  tail call void %8(%class.WriteablePrefStore* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i32 %3) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9PrefStore11AddObserverEPNS_8ObserverE(%class.PrefStore*, %"class.PrefStore::Observer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9PrefStore14RemoveObserverEPNS_8ObserverE(%class.PrefStore*, %"class.PrefStore::Observer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK9PrefStore12HasObserversEv(%class.PrefStore*) unnamed_addr #1

declare zeroext i1 @_ZNK9PrefStore24IsInitializationCompleteEv(%class.PrefStore*) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9PrefStoreD2Ev(%class.PrefStore*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18WriteablePrefStoreD0Ev(%class.WriteablePrefStore*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #4
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind }
attributes #4 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
