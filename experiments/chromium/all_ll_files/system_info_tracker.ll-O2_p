; ModuleID = '../../third_party/perfetto/src/trace_processor/importers/common/system_info_tracker.cc'
source_filename = "../../third_party/perfetto/src/trace_processor/importers/common/system_info_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.perfetto::trace_processor::SystemInfoTracker" = type <{ %"class.perfetto::trace_processor::Destructible", %"class.perfetto::base::Optional", [4 x i8] }>
%"class.perfetto::trace_processor::Destructible" = type { i32 (...)** }
%"class.perfetto::base::Optional" = type { %"class.perfetto::base::internal::OptionalBase" }
%"class.perfetto::base::internal::OptionalBase" = type { %"struct.perfetto::base::internal::OptionalStorage" }
%"struct.perfetto::base::internal::OptionalStorage" = type { %"struct.perfetto::base::internal::OptionalStorageBase" }
%"struct.perfetto::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"struct.perfetto::trace_processor::VersionNumber" }
%"struct.perfetto::trace_processor::VersionNumber" = type { i32, i32 }
%"class.perfetto::trace_processor::TraceProcessorContext" = type { %"struct.perfetto::trace_processor::Config", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::vector", %"class.std::__1::vector.113", %"class.perfetto::trace_processor::FtraceModule"* }
%"struct.perfetto::trace_processor::Config" = type { i32, i8, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.perfetto::trace_processor::TraceStorage"* }
%"class.perfetto::trace_processor::TraceStorage" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.perfetto::trace_processor::TraceSorter"* }
%"class.perfetto::trace_processor::TraceSorter" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.perfetto::trace_processor::GlobalArgsTracker"* }
%"class.perfetto::trace_processor::GlobalArgsTracker" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.perfetto::trace_processor::ArgsTracker"* }
%"class.perfetto::trace_processor::ArgsTracker" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.perfetto::trace_processor::TrackTracker"* }
%"class.perfetto::trace_processor::TrackTracker" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.perfetto::trace_processor::AsyncTrackSetTracker"* }
%"class.perfetto::trace_processor::AsyncTrackSetTracker" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.perfetto::trace_processor::SliceTracker"* }
%"class.perfetto::trace_processor::SliceTracker" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.perfetto::trace_processor::FlowTracker"* }
%"class.perfetto::trace_processor::FlowTracker" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.perfetto::trace_processor::ProcessTracker"* }
%"class.perfetto::trace_processor::ProcessTracker" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.perfetto::trace_processor::EventTracker"* }
%"class.perfetto::trace_processor::EventTracker" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.perfetto::trace_processor::ClockTracker"* }
%"class.perfetto::trace_processor::ClockTracker" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.perfetto::trace_processor::HeapProfileTracker"* }
%"class.perfetto::trace_processor::HeapProfileTracker" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.perfetto::trace_processor::PerfSampleTracker"* }
%"class.perfetto::trace_processor::PerfSampleTracker" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.perfetto::trace_processor::GlobalStackProfileTracker"* }
%"class.perfetto::trace_processor::GlobalStackProfileTracker" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.perfetto::trace_processor::MetadataTracker"* }
%"class.perfetto::trace_processor::MetadataTracker" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.perfetto::trace_processor::Destructible"* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.perfetto::trace_processor::ChunkedTraceReader"* }
%"class.perfetto::trace_processor::ChunkedTraceReader" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.perfetto::trace_processor::TraceParser"* }
%"class.perfetto::trace_processor::TraceParser" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.perfetto::trace_processor::DescriptorPool"* }
%"class.perfetto::trace_processor::DescriptorPool" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.109"*, %"class.std::__1::vector.109"*, %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::vector.109" = type opaque
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.std::__1::vector.109"* }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"*, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::unique_ptr.115" = type opaque
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::unique_ptr.115"* }
%"class.perfetto::trace_processor::FtraceModule" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.128 }
%union.anon.128 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN8perfetto4base8BasenameEPKc = comdat any

@_ZTVN8perfetto15trace_processor17SystemInfoTrackerE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.perfetto::trace_processor::SystemInfoTracker"*)* @_ZN8perfetto15trace_processor17SystemInfoTrackerD2Ev to i8*), i8* bitcast (void (%"class.perfetto::trace_processor::SystemInfoTracker"*)* @_ZN8perfetto15trace_processor17SystemInfoTrackerD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [6 x i8] c"Linux\00", align 1
@.str.4 = private unnamed_addr constant [64 x i8] c"../../third_party/perfetto/include/perfetto/ext/base/optional.h\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"%s (errno: %d, %s)\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"PERFETTO_CHECK(storage_.is_populated_)\00", align 1

@_ZN8perfetto15trace_processor17SystemInfoTrackerC1EPNS0_21TraceProcessorContextE = hidden unnamed_addr alias void (%"class.perfetto::trace_processor::SystemInfoTracker"*, %"class.perfetto::trace_processor::TraceProcessorContext"*), void (%"class.perfetto::trace_processor::SystemInfoTracker"*, %"class.perfetto::trace_processor::TraceProcessorContext"*)* @_ZN8perfetto15trace_processor17SystemInfoTrackerC2EPNS0_21TraceProcessorContextE
@_ZN8perfetto15trace_processor17SystemInfoTrackerD1Ev = hidden unnamed_addr alias void (%"class.perfetto::trace_processor::SystemInfoTracker"*), void (%"class.perfetto::trace_processor::SystemInfoTracker"*)* @_ZN8perfetto15trace_processor17SystemInfoTrackerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8perfetto15trace_processor17SystemInfoTrackerC2EPNS0_21TraceProcessorContextE(%"class.perfetto::trace_processor::SystemInfoTracker"* nocapture, %"class.perfetto::trace_processor::TraceProcessorContext"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::SystemInfoTracker", %"class.perfetto::trace_processor::SystemInfoTracker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8perfetto15trace_processor17SystemInfoTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::SystemInfoTracker", %"class.perfetto::trace_processor::SystemInfoTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.perfetto::trace_processor::SystemInfoTracker", %"class.perfetto::trace_processor::SystemInfoTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %union.anon* %5 to i8*
  store i8 0, i8* %6, align 4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8perfetto15trace_processor12DestructibleD2Ev(%"class.perfetto::trace_processor::Destructible"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor17SystemInfoTrackerD2Ev(%"class.perfetto::trace_processor::SystemInfoTracker"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.perfetto::trace_processor::SystemInfoTracker", %"class.perfetto::trace_processor::SystemInfoTracker"* %0, i64 0, i32 0
  tail call void @_ZN8perfetto15trace_processor12DestructibleD2Ev(%"class.perfetto::trace_processor::Destructible"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor17SystemInfoTrackerD0Ev(%"class.perfetto::trace_processor::SystemInfoTracker"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.perfetto::trace_processor::SystemInfoTracker", %"class.perfetto::trace_processor::SystemInfoTracker"* %0, i64 0, i32 0
  tail call void @_ZN8perfetto15trace_processor12DestructibleD2Ev(%"class.perfetto::trace_processor::Destructible"* %2) #12
  %3 = bitcast %"class.perfetto::trace_processor::SystemInfoTracker"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor17SystemInfoTracker16SetKernelVersionENS_4base10StringViewES3_(%"class.perfetto::trace_processor::SystemInfoTracker"* nocapture, i8*, i64, i8*, i64) local_unnamed_addr #2 align 2 {
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = icmp ne i64 %4, 0
  %11 = icmp eq i64 %2, 5
  %12 = and i1 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %5
  %14 = tail call i32 @bcmp(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5) #12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %5, %13
  %17 = getelementptr inbounds %"class.perfetto::trace_processor::SystemInfoTracker", %"class.perfetto::trace_processor::SystemInfoTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %230, label %20

20:                                               ; preds = %16
  store i8 0, i8* %17, align 4
  br label %230

21:                                               ; preds = %13
  %22 = getelementptr inbounds i8, i8* %3, i64 %4
  %23 = icmp slt i64 %4, 1
  br i1 %23, label %31, label %24

24:                                               ; preds = %21, %28
  %25 = phi i8* [ %29, %28 ], [ %3, %21 ]
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 46
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds i8, i8* %25, i64 1
  %30 = icmp eq i8* %29, %22
  br i1 %30, label %31, label %24

31:                                               ; preds = %28, %24, %21
  %32 = phi i8* [ %22, %21 ], [ %25, %24 ], [ %22, %28 ]
  %33 = ptrtoint i8* %32 to i64
  %34 = ptrtoint i8* %3 to i64
  %35 = sub i64 %33, %34
  %36 = add i64 %35, 1
  %37 = icmp ugt i64 %36, %4
  %38 = select i1 %37, i64 -1, i64 %35
  %39 = add i64 %38, 1
  %40 = icmp ugt i64 %39, %4
  br i1 %40, label %63, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds i8, i8* %3, i64 %39
  %43 = ptrtoint i8* %42 to i64
  %44 = ptrtoint i8* %22 to i64
  %45 = sub i64 %44, %43
  %46 = icmp slt i64 %45, 1
  %47 = icmp eq i64 %39, %4
  %48 = or i1 %47, %46
  br i1 %48, label %56, label %49

49:                                               ; preds = %41, %53
  %50 = phi i8* [ %54, %53 ], [ %42, %41 ]
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 46
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds i8, i8* %50, i64 1
  %55 = icmp eq i8* %54, %22
  br i1 %55, label %56, label %49

56:                                               ; preds = %53, %49, %41
  %57 = phi i8* [ %22, %41 ], [ %50, %49 ], [ %22, %53 ]
  %58 = ptrtoint i8* %57 to i64
  %59 = sub i64 %58, %34
  %60 = add i64 %59, 1
  %61 = icmp ugt i64 %60, %4
  %62 = select i1 %61, i64 -1, i64 %59
  br label %63

63:                                               ; preds = %56, %31
  %64 = phi i64 [ %62, %56 ], [ -1, %31 ]
  %65 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #12
  %66 = icmp ugt i64 %38, %4
  %67 = select i1 %66, i64 %4, i64 %38
  %68 = icmp eq i8* %3, null
  br i1 %68, label %69, label %73

69:                                               ; preds = %63
  %70 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  store i8 0, i8* %71, align 1, !alias.scope !3
  store i8 0, i8* %65, align 8, !alias.scope !3
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %106

73:                                               ; preds = %63
  %74 = icmp ugt i64 %67, -17
  br i1 %74, label %75, label %77

75:                                               ; preds = %73
  %76 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %76) #14
  unreachable

77:                                               ; preds = %73
  %78 = icmp ult i64 %67, 23
  br i1 %78, label %88, label %79

79:                                               ; preds = %77
  %80 = add nuw i64 %67, 16
  %81 = and i64 %80, -16
  %82 = tail call i8* @_Znwm(i64 %81) #13
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %82, i8** %83, align 8, !alias.scope !3
  %84 = or i64 %81, -9223372036854775808
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %84, i64* %85, align 8, !alias.scope !3
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %67, i64* %86, align 8, !alias.scope !3
  %87 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %93

88:                                               ; preds = %77
  %89 = trunc i64 %67 to i8
  %90 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  store i8 %89, i8* %91, align 1, !alias.scope !3
  %92 = icmp eq i64 %67, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %88, %79
  %94 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %90, %88 ], [ %87, %79 ]
  %95 = phi i8* [ %65, %88 ], [ %82, %79 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %95, i8* nonnull align 1 %3, i64 %67, i1 false) #12
  br label %96

96:                                               ; preds = %88, %93
  %97 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %94, %93 ], [ %90, %88 ]
  %98 = phi i8* [ %95, %93 ], [ %65, %88 ]
  %99 = getelementptr inbounds i8, i8* %98, i64 %67
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1, !noalias !6
  %102 = icmp slt i8 %101, 0
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8, !noalias !6
  %105 = select i1 %102, i8* %104, i8* %65
  br label %106

106:                                              ; preds = %96, %69
  %107 = phi i8** [ %72, %69 ], [ %103, %96 ]
  %108 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %70, %69 ], [ %97, %96 ]
  %109 = phi i8* [ %65, %69 ], [ %105, %96 ]
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %111 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #12, !noalias !9
  store i8* null, i8** %7, align 8, !noalias !9
  %112 = call i64 @strtoul(i8* %109, i8** nonnull %7, i32 10) #12, !noalias !9
  %113 = load i8, i8* %109, align 1, !noalias !9
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %122, label %115

115:                                              ; preds = %106
  %116 = load i8*, i8** %7, align 8, !noalias !9
  %117 = load i8, i8* %116, align 1, !noalias !9
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %115
  %120 = and i64 %112, 4294967040
  %121 = and i64 %112, 255
  br label %122

122:                                              ; preds = %106, %115, %119
  %123 = phi i8 [ 1, %119 ], [ 0, %115 ], [ 0, %106 ]
  %124 = phi i64 [ %121, %119 ], [ 0, %115 ], [ 0, %106 ]
  %125 = phi i64 [ %120, %119 ], [ 2863311360, %115 ], [ 2863311360, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #12, !noalias !9
  %126 = load i8, i8* %110, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %122
  %129 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %129) #13
  br label %130

130:                                              ; preds = %122, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #12
  %131 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #12
  %132 = sub i64 %64, %39
  %133 = icmp ult i64 %39, %4
  br i1 %133, label %137, label %134

134:                                              ; preds = %130
  %135 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  store i8 0, i8* %136, align 1, !alias.scope !12
  br label %170

137:                                              ; preds = %130
  %138 = sub i64 %4, %39
  %139 = icmp ult i64 %138, %132
  %140 = select i1 %139, i64 %138, i64 %132
  %141 = getelementptr inbounds i8, i8* %3, i64 %39
  %142 = icmp eq i8* %141, null
  br i1 %142, label %143, label %147

143:                                              ; preds = %137
  %144 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  store i8 0, i8* %145, align 1, !alias.scope !12
  store i8 0, i8* %131, align 8, !alias.scope !12
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %181

147:                                              ; preds = %137
  %148 = icmp ugt i64 %140, -17
  br i1 %148, label %149, label %151

149:                                              ; preds = %147
  %150 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %150) #14
  unreachable

151:                                              ; preds = %147
  %152 = icmp ult i64 %140, 23
  br i1 %152, label %162, label %153

153:                                              ; preds = %151
  %154 = add nuw i64 %140, 16
  %155 = and i64 %154, -16
  %156 = call i8* @_Znwm(i64 %155) #13
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %156, i8** %157, align 8, !alias.scope !12
  %158 = or i64 %155, -9223372036854775808
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %158, i64* %159, align 8, !alias.scope !12
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %140, i64* %160, align 8, !alias.scope !12
  %161 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %167

162:                                              ; preds = %151
  %163 = trunc i64 %140 to i8
  %164 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %164, i64 0, i32 1, i32 0
  store i8 %163, i8* %165, align 1, !alias.scope !12
  %166 = icmp eq i64 %140, 0
  br i1 %166, label %170, label %167

167:                                              ; preds = %162, %153
  %168 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %164, %162 ], [ %161, %153 ]
  %169 = phi i8* [ %131, %162 ], [ %156, %153 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %169, i8* nonnull align 1 %141, i64 %140, i1 false) #12
  br label %170

170:                                              ; preds = %162, %167, %134
  %171 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %135, %134 ], [ %168, %167 ], [ %164, %162 ]
  %172 = phi i64 [ 0, %134 ], [ %140, %167 ], [ 0, %162 ]
  %173 = phi i8* [ %131, %134 ], [ %169, %167 ], [ %131, %162 ]
  %174 = getelementptr inbounds i8, i8* %173, i64 %172
  store i8 0, i8* %174, align 1
  %175 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %176 = load i8, i8* %175, align 1, !noalias !15
  %177 = icmp slt i8 %176, 0
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i8*, i8** %178, align 8, !noalias !15
  %180 = select i1 %177, i8* %179, i8* %131
  br label %181

181:                                              ; preds = %170, %143
  %182 = phi i8** [ %146, %143 ], [ %178, %170 ]
  %183 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %144, %143 ], [ %171, %170 ]
  %184 = phi i8* [ %131, %143 ], [ %180, %170 ]
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %183, i64 0, i32 1, i32 0
  %186 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #12, !noalias !18
  store i8* null, i8** %6, align 8, !noalias !18
  %187 = call i64 @strtoul(i8* %184, i8** nonnull %6, i32 10) #12, !noalias !18
  %188 = load i8, i8* %184, align 1, !noalias !18
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %197, label %190

190:                                              ; preds = %181
  %191 = load i8*, i8** %6, align 8, !noalias !18
  %192 = load i8, i8* %191, align 1, !noalias !18
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %190
  %195 = and i64 %187, 4294967040
  %196 = and i64 %187, 255
  br label %197

197:                                              ; preds = %181, %190, %194
  %198 = phi i64 [ %196, %194 ], [ 0, %190 ], [ 0, %181 ]
  %199 = phi i8 [ 1, %194 ], [ 0, %190 ], [ 0, %181 ]
  %200 = phi i64 [ %195, %194 ], [ 2863311360, %190 ], [ 2863311360, %181 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #12, !noalias !18
  %201 = load i8, i8* %185, align 1
  %202 = icmp slt i8 %201, 0
  br i1 %202, label %203, label %205

203:                                              ; preds = %197
  %204 = load i8*, i8** %182, align 8
  call void @_ZdlPv(i8* %204) #13
  br label %205

205:                                              ; preds = %197, %203
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #12
  %206 = icmp eq i8 %123, 1
  br i1 %206, label %212, label %207, !prof !21

207:                                              ; preds = %205
  %208 = call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.4, i64 0, i64 0)) #12
  %209 = tail call i32* @__errno_location() #15
  %210 = load i32, i32* %209, align 4
  %211 = call i8* @strerror(i32 %210) #12
  call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %208, i32 597, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i32 %210, i8* %211) #12
  call void @llvm.trap() #12
  unreachable

212:                                              ; preds = %205
  %213 = icmp eq i8 %199, 1
  br i1 %213, label %219, label %214, !prof !21

214:                                              ; preds = %212
  %215 = call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.4, i64 0, i64 0)) #12
  %216 = tail call i32* @__errno_location() #15
  %217 = load i32, i32* %216, align 4
  %218 = call i8* @strerror(i32 %217) #12
  call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %215, i32 597, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i32 %217, i8* %218) #12
  call void @llvm.trap() #12
  unreachable

219:                                              ; preds = %212
  %220 = or i64 %125, %124
  %221 = or i64 %200, %198
  %222 = getelementptr inbounds %"class.perfetto::trace_processor::SystemInfoTracker", %"class.perfetto::trace_processor::SystemInfoTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %223 = load i8, i8* %222, align 4, !range !2
  %224 = icmp eq i8 %223, 0
  %225 = getelementptr inbounds %"class.perfetto::trace_processor::SystemInfoTracker", %"class.perfetto::trace_processor::SystemInfoTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %226 = bitcast %"struct.perfetto::trace_processor::VersionNumber"* %225 to i64*
  %227 = shl nuw i64 %221, 32
  %228 = or i64 %220, %227
  store i64 %228, i64* %226, align 4
  br i1 %224, label %229, label %230

229:                                              ; preds = %219
  store i8 1, i8* %222, align 4
  br label %230

230:                                              ; preds = %229, %219, %20, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nofree nounwind
declare i64 @strtoul(i8* readonly, i8** nocapture, i32) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32, i8*, i32, i8*, ...) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN8perfetto4base8BasenameEPKc(i8*) local_unnamed_addr #2 comdat {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi i8* [ %0, %1 ], [ %6, %2 ]
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds i8, i8* %3, i64 1
  br i1 %5, label %7, label %2

7:                                                ; preds = %2, %7
  %8 = phi i8* [ %11, %7 ], [ %0, %2 ]
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds i8, i8* %8, i64 1
  br i1 %10, label %12, label %7

12:                                               ; preds = %7, %15
  %13 = phi i8* [ %16, %15 ], [ %3, %7 ]
  %14 = icmp ugt i8* %13, %0
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = getelementptr inbounds i8, i8* %13, i64 -1
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 47
  %19 = icmp ult i8* %16, %8
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %12

21:                                               ; preds = %12, %15
  ret i8* %13
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #9

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK8perfetto4base10StringView11ToStdStringEv: argument 0"}
!5 = distinct !{!5, !"_ZNK8perfetto4base10StringView11ToStdStringEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN8perfetto4base14StringToUInt32ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi: argument 0"}
!8 = distinct !{!8, !"_ZN8perfetto4base14StringToUInt32ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi"}
!9 = !{!10, !7}
!10 = distinct !{!10, !11, !"_ZN8perfetto4base15CStringToUInt32EPKci: argument 0"}
!11 = distinct !{!11, !"_ZN8perfetto4base15CStringToUInt32EPKci"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK8perfetto4base10StringView11ToStdStringEv: argument 0"}
!14 = distinct !{!14, !"_ZNK8perfetto4base10StringView11ToStdStringEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN8perfetto4base14StringToUInt32ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi: argument 0"}
!17 = distinct !{!17, !"_ZN8perfetto4base14StringToUInt32ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi"}
!18 = !{!19, !16}
!19 = distinct !{!19, !20, !"_ZN8perfetto4base15CStringToUInt32EPKci: argument 0"}
!20 = distinct !{!20, !"_ZN8perfetto4base15CStringToUInt32EPKci"}
!21 = !{!"branch_weights", i32 2000, i32 1}
