; ModuleID = '../../net/nqe/throughput_analyzer.cc'
source_filename = "../../net/nqe/throughput_analyzer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.net::nqe::internal::ThroughputAnalyzer" = type { i32 (...)**, %"class.net::NetworkQualityEstimator"*, %"class.net::NetworkQualityEstimatorParams"*, %class.scoped_refptr.47, %"class.base::RepeatingCallback.120", %"class.base::TickClock"*, %"class.base::TimeTicks", %"class.base::TimeTicks", i64, %"class.std::__1::unordered_set", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.161", i64, %"class.base::TimeTicks", i8, i8, %"class.net::NetLogWithSource" }
%class.scoped_refptr.47 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::RepeatingCallback.120" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.49 }
%class.scoped_refptr.49 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.50", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.50" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.121", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.134", %"class.std::__1::__compressed_pair.136", [4 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123", %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { float }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.140" }
%"class.std::__1::__hash_table.140" = type <{ %"class.std::__1::unique_ptr.141", %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.156", %"class.std::__1::__compressed_pair.158", [4 x i8] }>
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143", %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.std::__1::__hash_node_base.144"** }
%"struct.std::__1::__hash_node_base.144" = type { %"struct.std::__1::__hash_node_base.144"* }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.std::__1::__bucket_list_deallocator.146" }
%"class.std::__1::__bucket_list_deallocator.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.std::__1::__hash_node_base.144" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"class.std::__1::unordered_map.161" = type { %"class.std::__1::__hash_table.162" }
%"class.std::__1::__hash_table.162" = type <{ %"class.std::__1::unique_ptr.163", %"class.std::__1::__compressed_pair.173", %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.181", [4 x i8] }>
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165", %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base.166"** }
%"struct.std::__1::__hash_node_base.166" = type { %"struct.std::__1::__hash_node_base.166"* }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.std::__1::__bucket_list_deallocator.168" }
%"class.std::__1::__bucket_list_deallocator.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::__hash_node_base.166" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.99", %"class.std::__1::vector.106" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.101" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.108" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::NetworkQualityEstimator" = type { %"class.net::NetworkChangeNotifier::ConnectionTypeObserver", %"class.base::ObserverList", %"class.base::ObserverList.1", %"class.base::ObserverList.5", %"class.std::__1::unique_ptr", i64, i32, %"class.absl::optional.20", i8, i8, %"class.base::TickClock"*, %"class.base::TimeTicks", %"struct.net::nqe::internal::NetworkID", %"class.net::nqe::internal::ObservationBuffer", [3 x %"class.net::nqe::internal::ObservationBuffer"], %"class.base::TimeTicks", %"class.net::nqe::internal::NetworkQuality", i32, [4 x i8], %"class.base::ObserverList.36", %"class.base::ObserverList.40", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.55", %"class.base::TimeDelta", %"class.base::TimeTicks", i64, i64, i64, i64, i64, %"class.net::nqe::internal::NetworkQuality", %"class.absl::optional.61", i32, %"class.absl::optional.66", %"class.absl::optional.66", %"class.std::__1::unique_ptr.71", i8, %"class.net::NetLogWithSource", %"class.net::nqe::internal::EventCreator", %"class.base::TimeTicks", %"class.absl::optional.20", %"class.std::__1::unique_ptr.113", %"class.base::WeakPtrFactory.119" }
%"class.net::NetworkChangeNotifier::ConnectionTypeObserver" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.1" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.2", i64, i32, [4 x i8] }>
%"class.base::LinkedList.2" = type { %"class.base::LinkNode.3" }
%"class.base::LinkNode.3" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.5" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.6", i64, i32, [4 x i8] }>
%"class.base::LinkedList.6" = type { %"class.base::LinkNode.7" }
%"class.base::LinkNode.7" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.net::NetworkQualityEstimatorParams"* }
%"struct.net::nqe::internal::NetworkID" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.27 }
%union.anon.27 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::nqe::internal::ObservationBuffer" = type { %"class.net::NetworkQualityEstimatorParams"*, %"class.base::circular_deque", double, double, %"class.base::TickClock"* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.net::nqe::internal::Observation"*, i64 }
%"class.net::nqe::internal::Observation" = type { i32, %"class.base::TimeTicks", i32, i32, %"class.absl::optional.31" }
%"class.absl::optional.31" = type { %"class.absl::optional_internal::optional_data.32" }
%"class.absl::optional_internal::optional_data.32" = type { %"class.absl::optional_internal::optional_data_base.33" }
%"class.absl::optional_internal::optional_data_base.33" = type { %"class.absl::optional_internal::optional_data_dtor_base.34" }
%"class.absl::optional_internal::optional_data_dtor_base.34" = type { i8, %union.anon.35 }
%union.anon.35 = type { i64 }
%"class.base::ObserverList.36" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.37", i64, i32, [4 x i8] }>
%"class.base::LinkedList.37" = type { %"class.base::LinkNode.38" }
%"class.base::LinkNode.38" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.40" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.41", i64, i32, [4 x i8] }>
%"class.base::LinkedList.41" = type { %"class.base::LinkNode.42" }
%"class.base::LinkNode.42" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.net::nqe::internal::SocketWatcherFactory"* }
%"class.net::nqe::internal::SocketWatcherFactory" = type { %"class.net::SocketPerformanceWatcherFactory", %class.scoped_refptr.47, %"class.base::TimeDelta", i8, %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.51", %"class.base::TickClock"* }
%"class.net::SocketPerformanceWatcherFactory" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.51" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.net::nqe::internal::ThroughputAnalyzer"* }
%"class.base::TimeDelta" = type { i64 }
%"class.net::nqe::internal::NetworkQuality" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.absl::optional.61" = type { %"class.absl::optional_internal::optional_data.62" }
%"class.absl::optional_internal::optional_data.62" = type { %"class.absl::optional_internal::optional_data_base.63" }
%"class.absl::optional_internal::optional_data_base.63" = type { %"class.absl::optional_internal::optional_data_dtor_base.64" }
%"class.absl::optional_internal::optional_data_dtor_base.64" = type { i8, %union.anon.65 }
%union.anon.65 = type { %"class.base::TimeDelta" }
%"class.absl::optional.66" = type { %"class.absl::optional_internal::optional_data.67" }
%"class.absl::optional_internal::optional_data.67" = type { %"class.absl::optional_internal::optional_data_base.68" }
%"class.absl::optional_internal::optional_data_base.68" = type { %"class.absl::optional_internal::optional_data_dtor_base.69" }
%"class.absl::optional_internal::optional_data_dtor_base.69" = type { i8, %union.anon.70 }
%union.anon.70 = type { i32 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.net::nqe::internal::NetworkQualityStore"* }
%"class.net::nqe::internal::NetworkQualityStore" = type { %"class.std::__1::map.74", %"class.base::ObserverList.85", %"class.base::WeakPtrFactory" }
%"class.std::__1::map.74" = type { %"class.std::__1::__tree.75" }
%"class.std::__1::__tree.75" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.base::ObserverList.85" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.86", i64, i32, [4 x i8] }>
%"class.base::LinkedList.86" = type { %"class.base::LinkNode.87" }
%"class.base::LinkNode.87" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.89 }
%class.scoped_refptr.89 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.90", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.90" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.91" }
%"struct.std::__1::atomic.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__cxx_atomic_impl.94" }
%"struct.std::__1::__cxx_atomic_impl.94" = type { %"struct.std::__1::__cxx_atomic_base_impl.95" }
%"struct.std::__1::__cxx_atomic_base_impl.95" = type { i8 }
%"class.net::nqe::internal::EventCreator" = type { %"class.net::NetLogWithSource", i32, [4 x i8], %"class.net::nqe::internal::NetworkQuality" }
%"class.absl::optional.20" = type { %"class.absl::optional_internal::optional_data.21" }
%"class.absl::optional_internal::optional_data.21" = type { %"class.absl::optional_internal::optional_data_base.22" }
%"class.absl::optional_internal::optional_data_base.22" = type { %"class.absl::optional_internal::optional_data_dtor_base.23" }
%"class.absl::optional_internal::optional_data_dtor_base.23" = type { i8, %union.anon.24 }
%union.anon.24 = type { %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.net::ConnectivityMonitor"* }
%"class.net::ConnectivityMonitor" = type opaque
%"class.base::WeakPtrFactory.119" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::NetworkQualityEstimatorParams" = type { %"class.std::__1::map", i64, i32, double, double, double, %"class.absl::optional", i8, i8, %"class.base::TimeDelta", double, double, i32, i32, %"class.base::TimeDelta", i64, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i32, %"class.base::TimeDelta", i8, %"class.base::TimeDelta", i8, i8, double, i8, %"class.base::TimeDelta", i8, i8, [6 x i8], [9 x %"class.net::nqe::internal::NetworkQuality"], [6 x %"class.net::nqe::internal::NetworkQuality"], [6 x %"class.net::nqe::internal::NetworkQuality"] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.net::URLRequest" = type { %"class.base::SupportsUserData.base", %"class.net::URLRequestContext"*, %"class.net::NetLogWithSource", %"class.std::__1::unique_ptr.397", %"class.std::__1::unique_ptr.403", %"class.std::__1::vector.410", %"class.net::SiteForCookies", %"class.net::IsolationInfo", i32, i8, i8, %"class.absl::optional.427", %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.net::HttpRequestHeaders", i32, i8, i32, i32, %"class.std::__1::vector.459", %"class.std::__1::vector.466", i32, %"class.net::URLRequest::Delegate"*, i32, %"class.net::HttpResponseInfo", i8, i8, i32, %"class.net::UploadProgress", i32, i32, i8, %"class.std::__1::basic_string", i8, i8, i64, %"class.base::TimeTicks", %"struct.net::LoadTimingInfo", %"class.net::ProxyServer", %"class.absl::optional.523", %"struct.net::NetworkTrafficAnnotationTag", %"class.net::SocketTag", %"class.base::RepeatingCallback.536", %"class.base::RepeatingCallback.537", %"class.base::RepeatingCallback.537", i8, i8, i32, %"class.base::WeakPtrFactory.538" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.185", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.185" = type { %"class.std::__1::__tree.186" }
%"class.std::__1::__tree.186" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.187", %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.net::URLRequestContext" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.net::NetLog"*, %"class.net::HostResolver"*, %"class.net::CertVerifier"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::ProxyResolutionService"*, %"class.net::ProxyDelegate"*, %"class.net::SSLConfigService"*, %"class.net::NetworkDelegate"*, %"class.net::HttpServerProperties"*, %"class.net::HttpUserAgentSettings"*, %"class.net::CookieStore"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SCTAuditingDelegate"*, %"class.net::HttpTransactionFactory"*, %"class.net::URLRequestJobFactory"*, %"class.net::URLRequestThrottlerManager"*, %"class.net::QuicContext"*, %"class.net::NetworkQualityEstimator"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::FtpAuthCache"*, %"class.std::__1::unique_ptr.390", i8, i8, i8, %"class.std::__1::basic_string" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.net::HostResolver" = type { i32 (...)** }
%"class.net::CertVerifier" = type opaque
%"class.net::HttpAuthHandlerFactory" = type opaque
%"class.net::ProxyResolutionService" = type opaque
%"class.net::ProxyDelegate" = type opaque
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList.196" }
%"class.base::ObserverList.196" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.197", i64, i32, [4 x i8] }>
%"class.base::LinkedList.197" = type { %"class.base::LinkNode.198" }
%"class.base::LinkNode.198" = type { %"class.base::internal::LinkNodeBase" }
%"class.net::NetworkDelegate" = type { i32 (...)** }
%"class.net::HttpServerProperties" = type { %"class.net::BrokenAlternativeServices::Delegate", %"class.base::TickClock"*, %"class.base::Clock"*, i8, i8, i8, %"class.std::__1::unique_ptr.200", %"class.net::HttpServerProperties::ServerInfoMap", %"class.net::BrokenAlternativeServices", %"class.net::IPAddress", %"class.base::flat_map", %"class.std::__1::vector.274", %"class.base::MRUCache.281", %"class.base::flat_map.301", i64, %"class.base::OneShotTimer" }
%"class.net::BrokenAlternativeServices::Delegate" = type { i32 (...)** }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.net::HttpServerPropertiesManager"* }
%"class.net::HttpServerPropertiesManager" = type opaque
%"class.net::HttpServerProperties::ServerInfoMap" = type { %"class.base::MRUCache" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map.210", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.206" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.210" = type { %"class.std::__1::__tree.211" }
%"class.std::__1::__tree.211" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.212", %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.net::BrokenAlternativeServices" = type { %"class.net::BrokenAlternativeServices::Delegate"*, %"class.base::TickClock"*, %"class.std::__1::list.221", %"class.std::__1::map.228", %"class.std::__1::set", %"class.net::RecentlyBrokenAlternativeServices", %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.266" }
%"class.std::__1::list.221" = type { %"class.std::__1::__list_imp.222" }
%"class.std::__1::__list_imp.222" = type { %"struct.std::__1::__list_node_base.223", %"class.std::__1::__compressed_pair.224" }
%"struct.std::__1::__list_node_base.223" = type { %"struct.std::__1::__list_node_base.223"*, %"struct.std::__1::__list_node_base.223"* }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.228" = type { %"class.std::__1::__tree.229" }
%"class.std::__1::__tree.229" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.239" }
%"class.std::__1::__tree.239" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.240", %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.net::RecentlyBrokenAlternativeServices" = type { %"class.base::MRUCache.246" }
%"class.base::MRUCache.246" = type { %"class.base::MRUCacheBase.247" }
%"class.base::MRUCacheBase.247" = type { i32 (...)**, %"class.std::__1::list.248", %"class.std::__1::map.255", i64 }
%"class.std::__1::list.248" = type { %"class.std::__1::__list_imp.249" }
%"class.std::__1::__list_imp.249" = type { %"struct.std::__1::__list_node_base.250", %"class.std::__1::__compressed_pair.251" }
%"struct.std::__1::__list_node_base.250" = type { %"struct.std::__1::__list_node_base.250"*, %"struct.std::__1::__list_node_base.250"* }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.255" = type { %"class.std::__1::__tree.256" }
%"class.std::__1::__tree.256" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.base::WeakPtrFactory.266" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.267" }
%"class.std::__1::vector.267" = type { %"class.std::__1::__vector_base.268" }
%"class.std::__1::__vector_base.268" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.269" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.274" = type { %"class.std::__1::__vector_base.275" }
%"class.std::__1::__vector_base.275" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.std::__1::basic_string"* }
%"class.base::MRUCache.281" = type { %"class.base::MRUCacheBase.282" }
%"class.base::MRUCacheBase.282" = type { i32 (...)**, %"class.std::__1::list.283", %"class.std::__1::map.290", i64 }
%"class.std::__1::list.283" = type { %"class.std::__1::__list_imp.284" }
%"class.std::__1::__list_imp.284" = type { %"struct.std::__1::__list_node_base.285", %"class.std::__1::__compressed_pair.286" }
%"struct.std::__1::__list_node_base.285" = type { %"struct.std::__1::__list_node_base.285"*, %"struct.std::__1::__list_node_base.285"* }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.290" = type { %"class.std::__1::__tree.291" }
%"class.std::__1::__tree.291" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.292", %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.base::flat_map.301" = type { %"class.base::internal::flat_tree.302" }
%"class.base::internal::flat_tree.302" = type { %"class.std::__1::vector.303" }
%"class.std::__1::vector.303" = type { %"class.std::__1::__vector_base.304" }
%"class.std::__1::__vector_base.304" = type { %"struct.std::__1::pair.305"*, %"struct.std::__1::pair.305"*, %"class.std::__1::__compressed_pair.306" }
%"struct.std::__1::pair.305" = type opaque
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"struct.std::__1::pair.305"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.264, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.265" }
%class.scoped_refptr.264 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.265" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.net::HttpUserAgentSettings" = type opaque
%"class.net::CookieStore" = type opaque
%"class.net::TransportSecurityState" = type <{ %"class.std::__1::map.311", %"class.std::__1::map.320", %"class.std::__1::map.329", %"class.net::TransportSecurityState::Delegate"*, %"class.net::TransportSecurityState::ReportSenderInterface"*, i8, i8, i8, [5 x i8], %"class.net::TransportSecurityState::ExpectCTReporter"*, %"class.net::TransportSecurityState::RequireCTDelegate"*, %"class.net::ExpiringCache", %"class.net::ExpiringCache", i8, [7 x i8], %"class.base::Time", %"class.std::__1::set.352", i8, [7 x i8] }>
%"class.std::__1::map.311" = type { %"class.std::__1::__tree.312" }
%"class.std::__1::__tree.312" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.313", %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.320" = type { %"class.std::__1::__tree.321" }
%"class.std::__1::__tree.321" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.329" = type { %"class.std::__1::__tree.330" }
%"class.std::__1::__tree.330" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.331", %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.net::TransportSecurityState::Delegate" = type { i32 (...)** }
%"class.net::TransportSecurityState::ReportSenderInterface" = type { i32 (...)** }
%"class.net::TransportSecurityState::ExpectCTReporter" = type { i32 (...)** }
%"class.net::TransportSecurityState::RequireCTDelegate" = type { i32 (...)** }
%"class.net::ExpiringCache" = type <{ i64, %"class.std::__1::map.340", %"struct.std::__1::less.349", %"class.net::NoopEvictionHandler", [6 x i8] }>
%"class.std::__1::map.340" = type { %"class.std::__1::__tree.341" }
%"class.std::__1::__tree.341" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::less.349" = type { i8 }
%"class.net::NoopEvictionHandler" = type { i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.351" }
%"class.base::time_internal::TimeBase.351" = type { i64 }
%"class.std::__1::set.352" = type { %"class.std::__1::__tree.353" }
%"class.std::__1::__tree.353" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.354", %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.net::CTPolicyEnforcer" = type opaque
%"class.net::SCTAuditingDelegate" = type opaque
%"class.net::HttpTransactionFactory" = type opaque
%"class.net::URLRequestJobFactory" = type opaque
%"class.net::URLRequestThrottlerManager" = type opaque
%"class.net::QuicContext" = type { %"class.std::__1::unique_ptr.360", %"struct.net::QuicParams" }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.quic::QuicConnectionHelperInterface"* }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"struct.net::QuicParams" = type { %"class.std::__1::vector.366", %"class.std::__1::basic_string", i64, i64, %"class.std::__1::set.373", %"class.std::__1::vector.383", %"class.std::__1::vector.383", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i8, i8, i8, i8, i8, i8, i8, %"class.base::TimeDelta", i8, i8, i32 }
%"class.std::__1::vector.366" = type { %"class.std::__1::__vector_base.367" }
%"class.std::__1::__vector_base.367" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.368" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::set.373" = type { %"class.std::__1::__tree.374" }
%"class.std::__1::__tree.374" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.375", %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.383" = type { %"class.std::__1::__vector_base.384" }
%"class.std::__1::__vector_base.384" = type { i32*, i32*, %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { i32* }
%"class.net::ReportingService" = type opaque
%"class.net::NetworkErrorLoggingService" = type opaque
%"class.net::FtpAuthCache" = type opaque
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.std::__1::set.393"* }
%"class.std::__1::set.393" = type opaque
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.net::URLRequestJob"* }
%"class.net::URLRequestJob" = type opaque
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.net::UploadDataStream"* }
%"class.net::UploadDataStream" = type { i32 (...)**, i64, i64, i64, i8, i8, i8, %"class.base::OnceCallback.406", %"class.net::NetLogWithSource" }
%"class.base::OnceCallback.406" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.410" = type { %"class.std::__1::__vector_base.411" }
%"class.std::__1::__vector_base.411" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %class.GURL* }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.422" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.422" = type { %"class.absl::optional_internal::optional_data.423" }
%"class.absl::optional_internal::optional_data.423" = type { %"class.absl::optional_internal::optional_data_base.424" }
%"class.absl::optional_internal::optional_data_base.424" = type { %"class.absl::optional_internal::optional_data_dtor_base.425" }
%"class.absl::optional_internal::optional_data_dtor_base.425" = type { i8, %union.anon.426 }
%union.anon.426 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.427", %"class.absl::optional.427", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.437" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.432", %"class.absl::optional.432" }
%"class.absl::optional.432" = type { %"class.absl::optional_internal::optional_data.433" }
%"class.absl::optional_internal::optional_data.433" = type { %"class.absl::optional_internal::optional_data_base.434" }
%"class.absl::optional_internal::optional_data_base.434" = type { %"class.absl::optional_internal::optional_data_dtor_base.435" }
%"class.absl::optional_internal::optional_data_dtor_base.435" = type { i8, %union.anon.436 }
%union.anon.436 = type { %"class.net::SchemefulSite" }
%"class.absl::optional.437" = type { %"class.absl::optional_internal::optional_data.438" }
%"class.absl::optional_internal::optional_data.438" = type { %"class.absl::optional_internal::optional_data_base.439" }
%"class.absl::optional_internal::optional_data_base.439" = type { %"class.absl::optional_internal::optional_data_dtor_base.440" }
%"class.absl::optional_internal::optional_data_dtor_base.440" = type { i8, %union.anon.441 }
%union.anon.441 = type { %"class.std::__1::set.442" }
%"class.std::__1::set.442" = type { %"class.std::__1::__tree.443" }
%"class.std::__1::__tree.443" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.444", %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.absl::optional.427" = type { %"class.absl::optional_internal::optional_data.428" }
%"class.absl::optional_internal::optional_data.428" = type { %"class.absl::optional_internal::optional_data_base.429" }
%"class.absl::optional_internal::optional_data_base.429" = type { %"class.absl::optional_internal::optional_data_dtor_base.430" }
%"class.absl::optional_internal::optional_data_dtor_base.430" = type { i8, %union.anon.431 }
%union.anon.431 = type { %"class.url::Origin" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.412" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.452" }
%"class.std::__1::vector.452" = type { %"class.std::__1::__vector_base.453" }
%"class.std::__1::__vector_base.453" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.454" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.std::__1::vector.459" = type { %"class.std::__1::__vector_base.460" }
%"class.std::__1::__vector_base.460" = type { %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"*, %"class.std::__1::__compressed_pair.461" }
%"struct.net::CookieWithAccessResult" = type <{ %"class.net::CanonicalCookie", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.net::CanonicalCookie" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, i8, i32, i32 }
%"struct.net::CookieAccessResult" = type <{ %"class.net::CookieInclusionStatus", i32, i32, i8, [3 x i8] }>
%"class.net::CookieInclusionStatus" = type { i32, i32 }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"struct.net::CookieWithAccessResult"* }
%"class.std::__1::vector.466" = type { %"class.std::__1::__vector_base.467" }
%"class.std::__1::__vector_base.467" = type { %"struct.net::CookieAndLineWithAccessResult"*, %"struct.net::CookieAndLineWithAccessResult"*, %"class.std::__1::__compressed_pair.473" }
%"struct.net::CookieAndLineWithAccessResult" = type <{ %"class.absl::optional.468", %"class.std::__1::basic_string", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.absl::optional.468" = type { %"class.absl::optional_internal::optional_data.469" }
%"class.absl::optional_internal::optional_data.469" = type { %"class.absl::optional_internal::optional_data_base.470" }
%"class.absl::optional_internal::optional_data_base.470" = type { %"class.absl::optional_internal::optional_data_dtor_base.471" }
%"class.absl::optional_internal::optional_data_dtor_base.471" = type { i8, %union.anon.472 }
%union.anon.472 = type { %"class.net::CanonicalCookie" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"struct.net::CookieAndLineWithAccessResult"* }
%"class.net::URLRequest::Delegate" = type { i32 (...)** }
%"class.net::HttpResponseInfo" = type { i8, i32, i8, i8, i8, i8, i8, %"class.net::ProxyServer", i8, i8, i8, i8, %"class.base::Time", %"class.net::IPEndPoint", %"class.std::__1::basic_string", i32, %"class.base::Time", %"class.base::Time", %"struct.net::ResolveErrorInfo", %"class.absl::optional.478", %class.scoped_refptr.483, %"class.net::SSLInfo", %class.scoped_refptr.514, %"class.net::HttpVaryData", %"class.std::__1::vector.274" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.478" = type { %"class.absl::optional_internal::optional_data.479" }
%"class.absl::optional_internal::optional_data.479" = type { %"class.absl::optional_internal::optional_data_base.480" }
%"class.absl::optional_internal::optional_data_base.480" = type { %"class.absl::optional_internal::optional_data_dtor_base.481" }
%"class.absl::optional_internal::optional_data_dtor_base.481" = type { i8, %union.anon.482 }
%union.anon.482 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.483 = type { %"class.net::SSLCertRequestInfo"* }
%"class.net::SSLCertRequestInfo" = type opaque
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.484, %class.scoped_refptr.484, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.497", %"class.std::__1::basic_string", %"class.std::__1::vector.505", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.484 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.485", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.486", %"class.std::__1::vector.490" }
%"class.base::RefCountedThreadSafe.485" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.274", %"class.std::__1::vector.274", %"class.std::__1::vector.274", %"class.std::__1::vector.274" }
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"class.std::__1::unique_ptr.486"*, %"class.std::__1::unique_ptr.486"*, %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.std::__1::unique_ptr.486"* }
%"class.std::__1::vector.497" = type { %"class.std::__1::__vector_base.498" }
%"class.std::__1::__vector_base.498" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.500" }
%"class.net::HashValue" = type { i32, %union.anon.499 }
%union.anon.499 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.509" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.507, i32, [4 x i8] }>
%class.scoped_refptr.507 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.508", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.508" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%class.scoped_refptr.514 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.515", %"class.std::__1::vector.516", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.515" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.516" = type { %"class.std::__1::__vector_base.517" }
%"class.std::__1::__vector_base.517" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.518" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.net::HttpVaryData" = type { %"struct.base::MD5Digest", i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.net::UploadProgress" = type { i64, i64 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.523" = type { %"class.absl::optional_internal::optional_data.524" }
%"class.absl::optional_internal::optional_data.524" = type { %"class.absl::optional_internal::optional_data_base.525" }
%"class.absl::optional_internal::optional_data_base.525" = type { %"class.absl::optional_internal::optional_data_dtor_base.526" }
%"class.absl::optional_internal::optional_data_dtor_base.526" = type { i8, %union.anon.527 }
%union.anon.527 = type { %"class.base::internal::flat_tree.528" }
%"class.base::internal::flat_tree.528" = type { %"class.std::__1::vector.529" }
%"class.std::__1::vector.529" = type { %"class.std::__1::__vector_base.530" }
%"class.std::__1::__vector_base.530" = type { i32*, i32*, %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { i32* }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.net::SocketTag" = type { i8 }
%"class.base::RepeatingCallback.536" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.537" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.538" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.net::URLRequest"** }
%"class.std::__1::tuple.561" = type { i8 }
%"class.std::__1::tuple.579" = type { %"struct.std::__1::__tuple_impl.580" }
%"struct.std::__1::__tuple_impl.580" = type { %"class.std::__1::__tuple_leaf.581" }
%"class.std::__1::__tuple_leaf.581" = type { %"class.net::URLRequest"** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node.553"* }
%"struct.std::__1::__hash_node.553" = type { %"struct.std::__1::__hash_node_base.144", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.552" }
%"struct.std::__1::pair.552" = type { %"class.net::URLRequest"*, %"class.base::TimeTicks" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.std::__1::__hash_node_destructor.586" }
%"class.std::__1::__hash_node_destructor.586" = type <{ %"class.std::__1::allocator.154"*, i8, [7 x i8] }>
%"class.std::__1::allocator.154" = type { i8 }
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573", %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"class.net::URLRequest"* }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.std::__1::__hash_node_destructor.575" }
%"class.std::__1::__hash_node_destructor.575" = type <{ %"class.std::__1::allocator.132"*, i8, [7 x i8] }>
%"class.std::__1::allocator.132" = type { i8 }
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564", %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"struct.std::__1::__hash_node.554"* }
%"struct.std::__1::__hash_node.554" = type { %"struct.std::__1::__hash_node_base.166", i64, %"struct.std::__1::__hash_value_type.555" }
%"struct.std::__1::__hash_value_type.555" = type { %"struct.std::__1::pair.556" }
%"struct.std::__1::pair.556" = type { %"class.net::URLRequest"*, i64 }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.176"*, i8, [7 x i8] }>
%"class.std::__1::allocator.176" = type { i8 }
%"struct.base::internal::BindState" = type <{ %"class.base::internal::BindStateBase", %"class.base::RepeatingCallback.120", %"class.std::__1::tuple.591", [4 x i8] }>
%"class.std::__1::tuple.591" = type { %"struct.std::__1::__tuple_impl.592" }
%"struct.std::__1::__tuple_impl.592" = type { %"class.std::__1::__tuple_leaf.593" }
%"class.std::__1::__tuple_leaf.593" = type { i32 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.547", [4 x i8] }>
%"struct.std::__1::atomic.547" = type { %"struct.std::__1::__atomic_base.548" }
%"struct.std::__1::__atomic_base.548" = type { %"struct.std::__1::__atomic_base.549" }
%"struct.std::__1::__atomic_base.549" = type { %"struct.std::__1::__cxx_atomic_impl.550" }
%"struct.std::__1::__cxx_atomic_impl.550" = type { %"struct.std::__1::__cxx_atomic_base_impl.551" }
%"struct.std::__1::__cxx_atomic_base_impl.551" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNSt3__113unordered_mapIPKN3net10URLRequestEN4base9TimeTicksENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorINS_4pairIKS4_S6_EEEEE5eraseERSD_ = comdat any

$_ZNK4base9TimeDeltadvES0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE = comdat any

$_ZN4base8internal9BindStateINS_17RepeatingCallbackIFviEEEJiEE6CreateIRS4_JRiEEEPS5_PFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_17RepeatingCallbackIFviEEEJiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_17RepeatingCallbackIFviEEEJiEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_17RepeatingCallbackIFviEEEJiEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE = comdat any

$_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE = comdat any

$_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

@_ZTVN3net3nqe8internal18ThroughputAnalyzerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::nqe::internal::ThroughputAnalyzer"*)* @_ZN3net3nqe8internal18ThroughputAnalyzerD2Ev to i8*), i8* bitcast (void (%"class.net::nqe::internal::ThroughputAnalyzer"*)* @_ZN3net3nqe8internal18ThroughputAnalyzerD0Ev to i8*), i8* bitcast (i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)* @_ZNK3net3nqe8internal18ThroughputAnalyzer15GetBitsReceivedEv to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"NotifyRequestCompleted\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"../../net/nqe/throughput_analyzer.cc\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"NQE.ThroughputObservation.Hanging\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"NQE.ThroughputObservation.NotHanging\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1
@_ZZNK3net3nqe8internal18ThroughputAnalyzer15IsHangingWindowElN4base9TimeDeltaEdE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZNK3net3nqe8internal18ThroughputAnalyzer15IsHangingWindowElN4base9TimeDeltaEdE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net3nqe8internal18ThroughputAnalyzerC1EPKNS_23NetworkQualityEstimatorEPKNS_29NetworkQualityEstimatorParamsE13scoped_refptrIN4base22SingleThreadTaskRunnerEENSA_17RepeatingCallbackIFviEEEPKNSA_9TickClockERKNS_16NetLogWithSourceE = hidden unnamed_addr alias void (%"class.net::nqe::internal::ThroughputAnalyzer"*, %"class.net::NetworkQualityEstimator"*, %"class.net::NetworkQualityEstimatorParams"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::RepeatingCallback.120"*, %"class.base::TickClock"*, %"class.net::NetLogWithSource"*), void (%"class.net::nqe::internal::ThroughputAnalyzer"*, %"class.net::NetworkQualityEstimator"*, %"class.net::NetworkQualityEstimatorParams"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::RepeatingCallback.120"*, %"class.base::TickClock"*, %"class.net::NetLogWithSource"*)* @_ZN3net3nqe8internal18ThroughputAnalyzerC2EPKNS_23NetworkQualityEstimatorEPKNS_29NetworkQualityEstimatorParamsE13scoped_refptrIN4base22SingleThreadTaskRunnerEENSA_17RepeatingCallbackIFviEEEPKNSA_9TickClockERKNS_16NetLogWithSourceE
@_ZN3net3nqe8internal18ThroughputAnalyzerD1Ev = hidden unnamed_addr alias void (%"class.net::nqe::internal::ThroughputAnalyzer"*), void (%"class.net::nqe::internal::ThroughputAnalyzer"*)* @_ZN3net3nqe8internal18ThroughputAnalyzerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal18ThroughputAnalyzerC2EPKNS_23NetworkQualityEstimatorEPKNS_29NetworkQualityEstimatorParamsE13scoped_refptrIN4base22SingleThreadTaskRunnerEENSA_17RepeatingCallbackIFviEEEPKNSA_9TickClockERKNS_16NetLogWithSourceE(%"class.net::nqe::internal::ThroughputAnalyzer"*, %"class.net::NetworkQualityEstimator"*, %"class.net::NetworkQualityEstimatorParams"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::RepeatingCallback.120"*, %"class.base::TickClock"*, %"class.net::NetLogWithSource"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net3nqe8internal18ThroughputAnalyzerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 1
  store %"class.net::NetworkQualityEstimator"* %1, %"class.net::NetworkQualityEstimator"** %9, align 8
  %10 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 2
  store %"class.net::NetworkQualityEstimatorParams"* %2, %"class.net::NetworkQualityEstimatorParams"** %10, align 8
  %11 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 3, i32 0
  store %"class.base::SingleThreadTaskRunner"* %3, %"class.base::SingleThreadTaskRunner"** %11, align 8
  %12 = icmp eq %"class.base::SingleThreadTaskRunner"* %3, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  br label %16

16:                                               ; preds = %7, %13
  %17 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 4, i32 0
  %18 = getelementptr inbounds %"class.base::RepeatingCallback.120", %"class.base::RepeatingCallback.120"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %17, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %18) #11
  %19 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 5
  store %"class.base::TickClock"* %5, %"class.base::TickClock"** %19, align 8
  %20 = bitcast %"class.base::TickClock"* %5 to i64 (%"class.base::TickClock"*)***
  %21 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %20, align 8
  %22 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %21, i64 2
  %23 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %22, align 8
  %24 = tail call i64 %23(%"class.base::TickClock"* %5) #11
  %25 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 7, i32 0, i32 0
  %27 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0, i32 3
  %28 = bitcast %"class.std::__1::__compressed_pair.136"* %27 to i32*
  %29 = bitcast i64* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 48, i1 false)
  store i32 1065353216, i32* %28, align 4
  %30 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10
  %31 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 3
  %32 = bitcast %"class.std::__1::__compressed_pair.158"* %31 to i32*
  %33 = bitcast %"class.std::__1::unordered_map"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %32, align 4
  %34 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 11
  %35 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 11, i32 0, i32 3
  %36 = bitcast %"class.std::__1::__compressed_pair.181"* %35 to i32*
  %37 = bitcast %"class.std::__1::unordered_map.161"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %36, align 4
  %38 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 12
  %39 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 16
  %40 = bitcast %"class.net::NetLogWithSource"* %39 to i8*
  %41 = bitcast %"class.net::NetLogWithSource"* %6 to i8*
  %42 = bitcast i64* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 18, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false)
  br i1 %12, label %51, label %43

43:                                               ; preds = %16
  %44 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %3, i64 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw sub i32* %45, i32 1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %44, i64 -2
  %50 = bitcast %"class.base::RefCountedThreadSafe"* %49 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %50) #11
  br label %51

51:                                               ; preds = %16, %43, %48
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal18ThroughputAnalyzerD2Ev(%"class.net::nqe::internal::ThroughputAnalyzer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net3nqe8internal18ThroughputAnalyzerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 16
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %3) #11
  %4 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base.166"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"struct.std::__1::__hash_node_base.166"* [ %10, %7 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %8, i64 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %9, align 8
  %11 = bitcast %"struct.std::__1::__hash_node_base.166"* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  %12 = icmp eq %"struct.std::__1::__hash_node_base.166"* %10, null
  br i1 %12, label %13, label %7

13:                                               ; preds = %7, %1
  %14 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %14, align 8
  store %"struct.std::__1::__hash_node_base.166"** null, %"struct.std::__1::__hash_node_base.166"*** %14, align 8
  %16 = icmp eq %"struct.std::__1::__hash_node_base.166"** %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = bitcast %"struct.std::__1::__hash_node_base.166"** %15 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.144"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19, %23
  %24 = phi %"struct.std::__1::__hash_node_base.144"* [ %26, %23 ], [ %21, %19 ]
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %24, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %25, align 8
  %27 = bitcast %"struct.std::__1::__hash_node_base.144"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #12
  %28 = icmp eq %"struct.std::__1::__hash_node_base.144"* %26, null
  br i1 %28, label %29, label %23

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %30, align 8
  store %"struct.std::__1::__hash_node_base.144"** null, %"struct.std::__1::__hash_node_base.144"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.144"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base.144"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"struct.std::__1::__hash_node_base"* [ %42, %39 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, align 8
  %43 = bitcast %"struct.std::__1::__hash_node_base"* %40 to i8*
  tail call void @_ZdlPv(i8* %43) #12
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %42, null
  br i1 %44, label %45, label %39

45:                                               ; preds = %39, %35
  %46 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %46, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base"** %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = bitcast %"struct.std::__1::__hash_node_base"** %47 to i8*
  tail call void @_ZdlPv(i8* %50) #12
  br label %51

51:                                               ; preds = %45, %49
  %52 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %52) #11
  %53 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 3, i32 0
  %54 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %53, align 8
  %55 = icmp eq %"class.base::SingleThreadTaskRunner"* %54, null
  br i1 %55, label %64, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %54, i64 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw sub i32* %58, i32 1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %64

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %57, i64 -2
  %63 = bitcast %"class.base::RefCountedThreadSafe"* %62 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %63) #11
  br label %64

64:                                               ; preds = %51, %56, %61
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal18ThroughputAnalyzerD0Ev(%"class.net::nqe::internal::ThroughputAnalyzer"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net3nqe8internal18ThroughputAnalyzerD2Ev(%"class.net::nqe::internal::ThroughputAnalyzer"* %0) #11
  %2 = bitcast %"class.net::nqe::internal::ThroughputAnalyzer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal18ThroughputAnalyzer37MaybeStartThroughputObservationWindowEv(%"class.net::nqe::internal::ThroughputAnalyzer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %34

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 7, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %34

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 2
  %17 = load %"class.net::NetworkQualityEstimatorParams"*, %"class.net::NetworkQualityEstimatorParams"** %16, align 8
  %18 = tail call i64 @_ZNK3net29NetworkQualityEstimatorParams33throughput_min_requests_in_flightEv(%"class.net::NetworkQualityEstimatorParams"* %17) #11
  %19 = icmp ult i64 %15, %18
  br i1 %19, label %34, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 5
  %22 = load %"class.base::TickClock"*, %"class.base::TickClock"** %21, align 8
  %23 = bitcast %"class.base::TickClock"* %22 to i64 (%"class.base::TickClock"*)***
  %24 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %23, align 8
  %25 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %24, i64 2
  %26 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %25, align 8
  %27 = tail call i64 %26(%"class.base::TickClock"* %22) #11
  store i64 %27, i64* %10, align 8
  %28 = bitcast %"class.net::nqe::internal::ThroughputAnalyzer"* %0 to i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)***
  %29 = load i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)**, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*** %28, align 8
  %30 = getelementptr inbounds i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)** %29, i64 2
  %31 = load i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)** %30, align 8
  %32 = tail call i64 %31(%"class.net::nqe::internal::ThroughputAnalyzer"* %0) #11
  %33 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 8
  store i64 %32, i64* %33, align 8
  br label %34

34:                                               ; preds = %9, %5, %1, %13, %20
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net3nqe8internal18ThroughputAnalyzer29IsCurrentlyTrackingThroughputEv(%"class.net::nqe::internal::ThroughputAnalyzer"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, 0
  ret i1 %4
}

declare i64 @_ZNK3net29NetworkQualityEstimatorParams33throughput_min_requests_in_flightEv(%"class.net::NetworkQualityEstimatorParams"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN3net3nqe8internal18ThroughputAnalyzer30EndThroughputObservationWindowEv(%"class.net::nqe::internal::ThroughputAnalyzer"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net3nqe8internal18ThroughputAnalyzer22SetTickClockForTestingEPKN4base9TickClockE(%"class.net::nqe::internal::ThroughputAnalyzer"* nocapture, %"class.base::TickClock"*) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 5
  store %"class.base::TickClock"* %1, %"class.base::TickClock"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal18ThroughputAnalyzer25UpdateResponseContentSizeEPKNS_10URLRequestEl(%"class.net::nqe::internal::ThroughputAnalyzer"*, %"class.net::URLRequest"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.561", align 1
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.561", align 1
  %8 = alloca %"class.net::URLRequest"*, align 8
  store %"class.net::URLRequest"* %1, %"class.net::URLRequest"** %8, align 8
  %9 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 11
  %10 = ptrtoint %"class.net::URLRequest"* %1 to i64
  %11 = lshr i64 %10, 32
  %12 = shl i64 %10, 3
  %13 = and i64 %12, 4294967288
  %14 = add nuw nsw i64 %13, 8
  %15 = xor i64 %14, %11
  %16 = mul i64 %15, -7070675565921424023
  %17 = lshr i64 %16, 47
  %18 = xor i64 %16, %11
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = lshr i64 %20, 47
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %88, label %27

27:                                               ; preds = %3
  %28 = tail call i64 @llvm.ctpop.i64(i64 %25) #11, !range !3
  %29 = icmp ugt i64 %28, 1
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = add i64 %25, -1
  %32 = and i64 %31, %23
  br label %37

33:                                               ; preds = %27
  %34 = icmp ult i64 %23, %25
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  %36 = urem i64 %23, %25
  br label %37

37:                                               ; preds = %35, %33, %30
  %38 = phi i64 [ %32, %30 ], [ %36, %35 ], [ %23, %33 ]
  %39 = getelementptr inbounds %"class.std::__1::unordered_map.161", %"class.std::__1::unordered_map.161"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %40, i64 %38
  %42 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.166"* %42, null
  br i1 %43, label %88, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %42, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.166"* %46, null
  br i1 %47, label %88, label %48

48:                                               ; preds = %44
  %49 = add i64 %25, -1
  br label %50

50:                                               ; preds = %71, %48
  %51 = phi %"struct.std::__1::__hash_node_base.166"* [ %46, %48 ], [ %73, %71 ]
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %51, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.166"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %66, label %56

56:                                               ; preds = %50
  br i1 %29, label %59, label %57

57:                                               ; preds = %56
  %58 = and i64 %54, %49
  br label %63

59:                                               ; preds = %56
  %60 = icmp ult i64 %54, %25
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = urem i64 %54, %25
  br label %63

63:                                               ; preds = %61, %59, %57
  %64 = phi i64 [ %58, %57 ], [ %62, %61 ], [ %54, %59 ]
  %65 = icmp eq i64 %64, %38
  br i1 %65, label %71, label %88

66:                                               ; preds = %50
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %51, i64 2
  %68 = bitcast %"struct.std::__1::__hash_node_base.166"* %67 to %"class.net::URLRequest"**
  %69 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %68, align 8
  %70 = icmp eq %"class.net::URLRequest"* %69, %1
  br i1 %70, label %75, label %71

71:                                               ; preds = %66, %63
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %51, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %72, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base.166"* %73, null
  br i1 %74, label %88, label %50

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.std::__1::unordered_map.161", %"class.std::__1::unordered_map.161"* %9, i64 0, i32 0
  %77 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #11
  %78 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.net::URLRequest"** %8, %"class.net::URLRequest"*** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::tuple.561", %"class.std::__1::tuple.561"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %79) #11
  %80 = call { %"struct.std::__1::__hash_node_base.166"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.162"* %76, %"class.net::URLRequest"** nonnull dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.561"* nonnull dereferenceable(1) %5) #11
  %81 = extractvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } %80, 0
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %81, i64 3
  %83 = bitcast %"struct.std::__1::__hash_node_base.166"* %82 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %79) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #11
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %2, %84
  %86 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 12
  %87 = load i64, i64* %86, align 8
  br label %91

88:                                               ; preds = %63, %71, %37, %3, %44
  %89 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 12
  %90 = load i64, i64* %89, align 8
  br label %91

91:                                               ; preds = %88, %75
  %92 = phi i64 [ %2, %88 ], [ %87, %75 ]
  %93 = phi i64 [ %90, %88 ], [ %85, %75 ]
  %94 = phi i64* [ %89, %88 ], [ %86, %75 ]
  %95 = add nsw i64 %93, %92
  store i64 %95, i64* %94, align 8
  %96 = getelementptr inbounds %"class.std::__1::unordered_map.161", %"class.std::__1::unordered_map.161"* %9, i64 0, i32 0
  %97 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #11
  %98 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.net::URLRequest"** %8, %"class.net::URLRequest"*** %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::tuple.561", %"class.std::__1::tuple.561"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %99) #11
  %100 = call { %"struct.std::__1::__hash_node_base.166"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.162"* %96, %"class.net::URLRequest"** nonnull dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.561"* nonnull dereferenceable(1) %7) #11
  %101 = extractvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %101, i64 3
  %103 = bitcast %"struct.std::__1::__hash_node_base.166"* %102 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %99) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #11
  store i64 %2, i64* %103, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal18ThroughputAnalyzer22NotifyStartTransactionERKNS_10URLRequestE(%"class.net::nqe::internal::ThroughputAnalyzer"*, %"class.net::URLRequest"* dereferenceable(2016)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.579", align 8
  %4 = alloca %"class.std::__1::tuple.561", align 1
  %5 = alloca %"class.net::URLRequest"*, align 8
  %6 = alloca %"class.net::URLRequest"*, align 8
  tail call void @_ZN3net3nqe8internal18ThroughputAnalyzer25UpdateResponseContentSizeEPKNS_10URLRequestEl(%"class.net::nqe::internal::ThroughputAnalyzer"* %0, %"class.net::URLRequest"* %1, i64 1800)
  %7 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 14
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %90

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @_ZN3net3nqe8internal23IsRequestForPrivateHostERKNS_10URLRequestE(%"class.net::URLRequest"* dereferenceable(2016) %1) #11
  %12 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 15
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, true
  %16 = or i1 %14, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %1, i64 0, i32 39, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 6, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp slt i64 %19, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %10, %17
  %24 = bitcast %"class.net::URLRequest"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  store %"class.net::URLRequest"* %1, %"class.net::URLRequest"** %5, align 8
  %25 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0
  %26 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %25, %"class.net::URLRequest"** nonnull dereferenceable(8) %5, %"class.net::URLRequest"** nonnull dereferenceable(8) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  call void @_ZN3net3nqe8internal18ThroughputAnalyzer17BoundRequestsSizeEv(%"class.net::nqe::internal::ThroughputAnalyzer"* %0)
  %27 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 7, i32 0, i32 0
  %28 = bitcast i64* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #11
  br label %90

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %1, i64 0, i32 13
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %33 to i64
  %38 = select i1 %34, i64 %36, i64 %37
  %39 = icmp eq i64 %38, 3
  br i1 %39, label %40, label %90

40:                                               ; preds = %29
  %41 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %30, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3) #11
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %90

43:                                               ; preds = %40
  tail call void @_ZN3net3nqe8internal18ThroughputAnalyzer20EraseHangingRequestsERKNS_10URLRequestE(%"class.net::nqe::internal::ThroughputAnalyzer"* %0, %"class.net::URLRequest"* dereferenceable(2016) %1)
  %44 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 5
  %45 = load %"class.base::TickClock"*, %"class.base::TickClock"** %44, align 8
  %46 = bitcast %"class.base::TickClock"* %45 to i64 (%"class.base::TickClock"*)***
  %47 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %46, align 8
  %48 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %47, i64 2
  %49 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %48, align 8
  %50 = tail call i64 %49(%"class.base::TickClock"* %45) #11
  %51 = bitcast %"class.net::URLRequest"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  store %"class.net::URLRequest"* %1, %"class.net::URLRequest"** %6, align 8
  %52 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0
  %53 = bitcast %"class.std::__1::tuple.579"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #11
  %54 = getelementptr inbounds %"class.std::__1::tuple.579", %"class.std::__1::tuple.579"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.net::URLRequest"** %6, %"class.net::URLRequest"*** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::tuple.561", %"class.std::__1::tuple.561"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %55) #11
  %56 = call { %"struct.std::__1::__hash_node_base.144"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.140"* %52, %"class.net::URLRequest"** nonnull dereferenceable(8) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.579"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.561"* nonnull dereferenceable(1) %4) #11
  %57 = extractvalue { %"struct.std::__1::__hash_node_base.144"*, i8 } %56, 0
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %57, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %55) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #11
  %59 = bitcast %"struct.std::__1::__hash_node_base.144"* %58 to i64*
  store i64 %50, i64* %59, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  call void @_ZN3net3nqe8internal18ThroughputAnalyzer17BoundRequestsSizeEv(%"class.net::nqe::internal::ThroughputAnalyzer"* %0)
  %60 = load i8, i8* %7, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %90

62:                                               ; preds = %43
  %63 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %90

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 7, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %90

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 2
  %74 = load %"class.net::NetworkQualityEstimatorParams"*, %"class.net::NetworkQualityEstimatorParams"** %73, align 8
  %75 = call i64 @_ZNK3net29NetworkQualityEstimatorParams33throughput_min_requests_in_flightEv(%"class.net::NetworkQualityEstimatorParams"* %74) #11
  %76 = icmp ult i64 %72, %75
  br i1 %76, label %90, label %77

77:                                               ; preds = %70
  %78 = load %"class.base::TickClock"*, %"class.base::TickClock"** %44, align 8
  %79 = bitcast %"class.base::TickClock"* %78 to i64 (%"class.base::TickClock"*)***
  %80 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %79, align 8
  %81 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %80, i64 2
  %82 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %81, align 8
  %83 = call i64 %82(%"class.base::TickClock"* %78) #11
  store i64 %83, i64* %67, align 8
  %84 = bitcast %"class.net::nqe::internal::ThroughputAnalyzer"* %0 to i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)***
  %85 = load i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)**, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*** %84, align 8
  %86 = getelementptr inbounds i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)** %85, i64 2
  %87 = load i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)** %86, align 8
  %88 = call i64 %87(%"class.net::nqe::internal::ThroughputAnalyzer"* %0) #11
  %89 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 8
  store i64 %88, i64* %89, align 8
  br label %90

90:                                               ; preds = %40, %29, %77, %70, %66, %62, %43, %23, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net3nqe8internal18ThroughputAnalyzer16DegradesAccuracyERKNS_10URLRequestE(%"class.net::nqe::internal::ThroughputAnalyzer"* nocapture readonly, %"class.net::URLRequest"* dereferenceable(2016)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN3net3nqe8internal23IsRequestForPrivateHostERKNS_10URLRequestE(%"class.net::URLRequest"* dereferenceable(2016) %1) #11
  %4 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 15
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp ne i8 %5, 0
  %7 = xor i1 %3, true
  %8 = or i1 %6, %7
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %1, i64 0, i32 39, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 6, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp slt i64 %11, %13
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi i1 [ %14, %9 ], [ true, %2 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal18ThroughputAnalyzer17BoundRequestsSizeEv(%"class.net::nqe::internal::ThroughputAnalyzer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 300
  br i1 %4, label %5, label %111

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %6, align 8
  %8 = icmp eq %"struct.std::__1::__hash_node_base"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5, %9
  %10 = phi %"struct.std::__1::__hash_node_base"* [ %12, %9 ], [ %7, %5 ]
  %11 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %10, i64 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %11, align 8
  %13 = bitcast %"struct.std::__1::__hash_node_base"* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #12
  %14 = icmp eq %"struct.std::__1::__hash_node_base"* %12, null
  br i1 %14, label %15, label %9

15:                                               ; preds = %9, %5
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %6, align 8
  %16 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %54, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = add i64 %17, -1
  %22 = and i64 %17, 3
  %23 = icmp ult i64 %21, 3
  br i1 %23, label %43, label %24

24:                                               ; preds = %19
  %25 = sub i64 %17, %22
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i64 [ 0, %24 ], [ %40, %26 ]
  %28 = phi i64 [ %25, %24 ], [ %41, %26 ]
  %29 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, i64 %27
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %30, align 8
  %31 = or i64 %27, 1
  %32 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, i64 %31
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %33, align 8
  %34 = or i64 %27, 2
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %34
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %36, align 8
  %37 = or i64 %27, 3
  %38 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, i64 %37
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %39, align 8
  %40 = add nuw i64 %27, 4
  %41 = add i64 %28, -4
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %26

43:                                               ; preds = %26, %19
  %44 = phi i64 [ 0, %19 ], [ %40, %26 ]
  %45 = icmp eq i64 %22, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %43, %46
  %47 = phi i64 [ %51, %46 ], [ %44, %43 ]
  %48 = phi i64 [ %52, %46 ], [ %22, %43 ]
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = add nuw i64 %47, 1
  %52 = add i64 %48, -1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %46, !llvm.loop !4

54:                                               ; preds = %43, %46, %15
  store i64 0, i64* %2, align 8
  %55 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 14
  store i8 1, i8* %55, align 8
  %56 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 7, i32 0, i32 0
  %57 = bitcast i64* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #11
  %58 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %168, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.144"* %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %61, %65
  %66 = phi %"struct.std::__1::__hash_node_base.144"* [ %68, %65 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %67, align 8
  %69 = bitcast %"struct.std::__1::__hash_node_base.144"* %66 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  %70 = icmp eq %"struct.std::__1::__hash_node_base.144"* %68, null
  br i1 %70, label %71, label %65

71:                                               ; preds = %65, %61
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %62, align 8
  %72 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %93, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = add i64 %73, -1
  %78 = and i64 %73, 3
  %79 = icmp ult i64 %77, 3
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = sub i64 %73, %78
  br label %94

82:                                               ; preds = %94, %75
  %83 = phi i64 [ 0, %75 ], [ %108, %94 ]
  %84 = icmp eq i64 %78, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %82, %85
  %86 = phi i64 [ %90, %85 ], [ %83, %82 ]
  %87 = phi i64 [ %91, %85 ], [ %78, %82 ]
  %88 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %76, align 8
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %88, i64 %86
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %89, align 8
  %90 = add nuw i64 %86, 1
  %91 = add i64 %87, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %85, !llvm.loop !6

93:                                               ; preds = %82, %85, %71
  store i64 0, i64* %58, align 8
  br label %168

94:                                               ; preds = %94, %80
  %95 = phi i64 [ 0, %80 ], [ %108, %94 ]
  %96 = phi i64 [ %81, %80 ], [ %109, %94 ]
  %97 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %76, align 8
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %97, i64 %95
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %98, align 8
  %99 = or i64 %95, 1
  %100 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %76, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %100, i64 %99
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %101, align 8
  %102 = or i64 %95, 2
  %103 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %76, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %103, i64 %102
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %104, align 8
  %105 = or i64 %95, 3
  %106 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %76, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %106, i64 %105
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %107, align 8
  %108 = add nuw i64 %95, 4
  %109 = add i64 %96, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %82, label %94

111:                                              ; preds = %1
  %112 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = icmp ugt i64 %113, 300
  %115 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  br i1 %114, label %116, label %168

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 7, i32 0, i32 0
  %118 = bitcast i64* %117 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 16, i1 false) #11
  %119 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %120 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.144"* %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %116, %122
  %123 = phi %"struct.std::__1::__hash_node_base.144"* [ %125, %122 ], [ %120, %116 ]
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %123, i64 0, i32 0
  %125 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %124, align 8
  %126 = bitcast %"struct.std::__1::__hash_node_base.144"* %123 to i8*
  tail call void @_ZdlPv(i8* %126) #12
  %127 = icmp eq %"struct.std::__1::__hash_node_base.144"* %125, null
  br i1 %127, label %128, label %122

128:                                              ; preds = %122, %116
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %119, align 8
  %129 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %167, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = add i64 %130, -1
  %135 = and i64 %130, 3
  %136 = icmp ult i64 %134, 3
  br i1 %136, label %156, label %137

137:                                              ; preds = %132
  %138 = sub i64 %130, %135
  br label %139

139:                                              ; preds = %139, %137
  %140 = phi i64 [ 0, %137 ], [ %153, %139 ]
  %141 = phi i64 [ %138, %137 ], [ %154, %139 ]
  %142 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %133, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %142, i64 %140
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %143, align 8
  %144 = or i64 %140, 1
  %145 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %133, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %145, i64 %144
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %146, align 8
  %147 = or i64 %140, 2
  %148 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %133, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %148, i64 %147
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %149, align 8
  %150 = or i64 %140, 3
  %151 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %133, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %151, i64 %150
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %152, align 8
  %153 = add nuw i64 %140, 4
  %154 = add i64 %141, -4
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %139

156:                                              ; preds = %139, %132
  %157 = phi i64 [ 0, %132 ], [ %153, %139 ]
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %167, label %159

159:                                              ; preds = %156, %159
  %160 = phi i64 [ %164, %159 ], [ %157, %156 ]
  %161 = phi i64 [ %165, %159 ], [ %135, %156 ]
  %162 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %133, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %162, i64 %160
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %163, align 8
  %164 = add nuw i64 %160, 1
  %165 = add i64 %161, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %159, !llvm.loop !7

167:                                              ; preds = %156, %159, %128
  store i64 0, i64* %115, align 8
  br label %168

168:                                              ; preds = %54, %93, %167, %111
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal18ThroughputAnalyzer20EraseHangingRequestsERKNS_10URLRequestE(%"class.net::nqe::internal::ThroughputAnalyzer"*, %"class.net::URLRequest"* dereferenceable(2016)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.582", align 8
  %4 = alloca %"class.std::__1::unique_ptr.582", align 8
  %5 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 5
  %6 = load %"class.base::TickClock"*, %"class.base::TickClock"** %5, align 8
  %7 = bitcast %"class.base::TickClock"* %6 to i64 (%"class.base::TickClock"*)***
  %8 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %8, i64 2
  %10 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::TickClock"* %6) #11
  %12 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 1
  %13 = load %"class.net::NetworkQualityEstimator"*, %"class.net::NetworkQualityEstimator"** %12, align 8
  %14 = bitcast %"class.net::NetworkQualityEstimator"* %13 to { i8, i64 } (%"class.net::NetworkQualityEstimator"*)***
  %15 = load { i8, i64 } (%"class.net::NetworkQualityEstimator"*)**, { i8, i64 } (%"class.net::NetworkQualityEstimator"*)*** %14, align 8
  %16 = getelementptr inbounds { i8, i64 } (%"class.net::NetworkQualityEstimator"*)*, { i8, i64 } (%"class.net::NetworkQualityEstimator"*)** %15, i64 4
  %17 = load { i8, i64 } (%"class.net::NetworkQualityEstimator"*)*, { i8, i64 } (%"class.net::NetworkQualityEstimator"*)** %16, align 8
  %18 = tail call { i8, i64 } %17(%"class.net::NetworkQualityEstimator"* %13) #11
  %19 = extractvalue { i8, i64 } %18, 0
  %20 = extractvalue { i8, i64 } %18, 1
  %21 = icmp eq i8 %19, 0
  %22 = select i1 %21, i64 60000000, i64 %20
  %23 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10
  %24 = ptrtoint %"class.net::URLRequest"* %1 to i64
  %25 = lshr i64 %24, 32
  %26 = shl i64 %24, 3
  %27 = and i64 %26, 4294967288
  %28 = add nuw nsw i64 %27, 8
  %29 = xor i64 %28, %25
  %30 = mul i64 %29, -7070675565921424023
  %31 = lshr i64 %30, 47
  %32 = xor i64 %30, %25
  %33 = xor i64 %32, %31
  %34 = mul i64 %33, -7070675565921424023
  %35 = lshr i64 %34, 47
  %36 = xor i64 %35, %34
  %37 = mul i64 %36, -7070675565921424023
  %38 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %124, label %41

41:                                               ; preds = %2
  %42 = tail call i64 @llvm.ctpop.i64(i64 %39) #11, !range !3
  %43 = icmp ugt i64 %42, 1
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = add i64 %39, -1
  %46 = and i64 %45, %37
  br label %51

47:                                               ; preds = %41
  %48 = icmp ult i64 %37, %39
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = urem i64 %37, %39
  br label %51

51:                                               ; preds = %49, %47, %44
  %52 = phi i64 [ %46, %44 ], [ %50, %49 ], [ %37, %47 ]
  %53 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %54, i64 %52
  %56 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.144"* %56, null
  br i1 %57, label %124, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %56, i64 0, i32 0
  %60 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node_base.144"* %60, null
  br i1 %61, label %124, label %62

62:                                               ; preds = %58
  %63 = add i64 %39, -1
  br label %64

64:                                               ; preds = %85, %62
  %65 = phi %"struct.std::__1::__hash_node_base.144"* [ %60, %62 ], [ %87, %85 ]
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %65, i64 1
  %67 = bitcast %"struct.std::__1::__hash_node_base.144"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, %37
  br i1 %69, label %80, label %70

70:                                               ; preds = %64
  br i1 %43, label %73, label %71

71:                                               ; preds = %70
  %72 = and i64 %68, %63
  br label %77

73:                                               ; preds = %70
  %74 = icmp ult i64 %68, %39
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %68, %39
  br label %77

77:                                               ; preds = %75, %73, %71
  %78 = phi i64 [ %72, %71 ], [ %76, %75 ], [ %68, %73 ]
  %79 = icmp eq i64 %78, %52
  br i1 %79, label %85, label %124

80:                                               ; preds = %64
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %65, i64 2
  %82 = bitcast %"struct.std::__1::__hash_node_base.144"* %81 to %"class.net::URLRequest"**
  %83 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %82, align 8
  %84 = icmp eq %"class.net::URLRequest"* %83, %1
  br i1 %84, label %89, label %85

85:                                               ; preds = %80, %77
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %65, i64 0, i32 0
  %87 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %86, align 8
  %88 = icmp eq %"struct.std::__1::__hash_node_base.144"* %87, null
  br i1 %88, label %124, label %64

89:                                               ; preds = %80
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %65, i64 3
  %91 = bitcast %"struct.std::__1::__hash_node_base.144"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = sub nsw i64 %11, %92
  %94 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 2
  %95 = load %"class.net::NetworkQualityEstimatorParams"*, %"class.net::NetworkQualityEstimatorParams"** %94, align 8
  %96 = getelementptr inbounds %"class.net::NetworkQualityEstimatorParams", %"class.net::NetworkQualityEstimatorParams"* %95, i64 0, i32 19
  %97 = load i32, i32* %96, align 8
  %98 = sext i32 %97 to i64
  %99 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %22, i64 %98) #11
  %100 = extractvalue { i64, i1 } %99, 1
  %101 = extractvalue { i64, i1 } %99, 0
  br i1 %100, label %102, label %108

102:                                              ; preds = %89
  %103 = lshr i64 %22, 63
  %104 = trunc i64 %103 to i32
  %105 = lshr i32 %97, 31
  %106 = icmp eq i32 %105, %104
  %107 = select i1 %106, i64 9223372036854775807, i64 -9223372036854775808
  br label %108

108:                                              ; preds = %89, %102
  %109 = phi i64 [ %101, %89 ], [ %107, %102 ]
  %110 = icmp slt i64 %93, %109
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.net::NetworkQualityEstimatorParams", %"class.net::NetworkQualityEstimatorParams"* %95, i64 0, i32 20, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = icmp slt i64 %93, %113
  br i1 %114, label %124, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %23, i64 0, i32 0
  %117 = bitcast %"class.std::__1::unique_ptr.582"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #11
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE(%"class.std::__1::unique_ptr.582"* nonnull sret %3, %"class.std::__1::__hash_table.140"* %116, %"struct.std::__1::__hash_node_base.144"* nonnull %65) #11
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.582", %"class.std::__1::unique_ptr.582"* %3, i64 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node.553"*, %"struct.std::__1::__hash_node.553"** %118, align 8
  store %"struct.std::__1::__hash_node.553"* null, %"struct.std::__1::__hash_node.553"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node.553"* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %115
  %122 = bitcast %"struct.std::__1::__hash_node.553"* %119 to i8*
  call void @_ZdlPv(i8* %122) #12
  br label %123

123:                                              ; preds = %115, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #11
  br label %124

124:                                              ; preds = %85, %77, %111, %108, %58, %2, %51, %123
  %125 = phi i64 [ 1, %123 ], [ 0, %111 ], [ 0, %108 ], [ 0, %51 ], [ 0, %2 ], [ 0, %58 ], [ 0, %77 ], [ 0, %85 ]
  %126 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 13, i32 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = sub nsw i64 %11, %127
  %129 = icmp sgt i64 %128, 999999
  br i1 %129, label %130, label %184

130:                                              ; preds = %124
  store i64 %11, i64* %126, align 8
  %131 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %132 = bitcast %"struct.std::__1::__hash_node_base.144"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %184, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 2
  %137 = lshr i64 %22, 63
  %138 = trunc i64 %137 to i32
  %139 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %23, i64 0, i32 0
  %140 = bitcast %"class.std::__1::unique_ptr.582"* %4 to i8*
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.582", %"class.std::__1::unique_ptr.582"* %4, i64 0, i32 0, i32 0, i32 0
  br label %142

142:                                              ; preds = %135, %180
  %143 = phi i64 [ %133, %135 ], [ %181, %180 ]
  %144 = phi i64 [ %125, %135 ], [ %182, %180 ]
  %145 = inttoptr i64 %143 to %"struct.std::__1::__hash_node_base.144"*
  %146 = inttoptr i64 %143 to %"struct.std::__1::__hash_node.553"*
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node.553", %"struct.std::__1::__hash_node.553"* %146, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = sub nsw i64 %11, %148
  %150 = load %"class.net::NetworkQualityEstimatorParams"*, %"class.net::NetworkQualityEstimatorParams"** %136, align 8
  %151 = getelementptr inbounds %"class.net::NetworkQualityEstimatorParams", %"class.net::NetworkQualityEstimatorParams"* %150, i64 0, i32 19
  %152 = load i32, i32* %151, align 8
  %153 = sext i32 %152 to i64
  %154 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %22, i64 %153) #11
  %155 = extractvalue { i64, i1 } %154, 1
  %156 = extractvalue { i64, i1 } %154, 0
  br i1 %155, label %157, label %161

157:                                              ; preds = %142
  %158 = lshr i32 %152, 31
  %159 = icmp eq i32 %158, %138
  %160 = select i1 %159, i64 9223372036854775807, i64 -9223372036854775808
  br label %161

161:                                              ; preds = %142, %157
  %162 = phi i64 [ %156, %142 ], [ %160, %157 ]
  %163 = icmp slt i64 %149, %162
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.net::NetworkQualityEstimatorParams", %"class.net::NetworkQualityEstimatorParams"* %150, i64 0, i32 20, i32 0
  %166 = load i64, i64* %165, align 8
  %167 = icmp slt i64 %149, %166
  br i1 %167, label %177, label %168

168:                                              ; preds = %164
  %169 = add i64 %144, 1
  %170 = inttoptr i64 %143 to i64*
  %171 = load i64, i64* %170, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #11
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE(%"class.std::__1::unique_ptr.582"* nonnull sret %4, %"class.std::__1::__hash_table.140"* %139, %"struct.std::__1::__hash_node_base.144"* nonnull %145) #11
  %172 = load %"struct.std::__1::__hash_node.553"*, %"struct.std::__1::__hash_node.553"** %141, align 8
  store %"struct.std::__1::__hash_node.553"* null, %"struct.std::__1::__hash_node.553"** %141, align 8
  %173 = icmp eq %"struct.std::__1::__hash_node.553"* %172, null
  br i1 %173, label %176, label %174

174:                                              ; preds = %168
  %175 = bitcast %"struct.std::__1::__hash_node.553"* %172 to i8*
  call void @_ZdlPv(i8* %175) #12
  br label %176

176:                                              ; preds = %168, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #11
  br label %180

177:                                              ; preds = %164, %161
  %178 = inttoptr i64 %143 to i64*
  %179 = load i64, i64* %178, align 8
  br label %180

180:                                              ; preds = %177, %176
  %181 = phi i64 [ %171, %176 ], [ %179, %177 ]
  %182 = phi i64 [ %169, %176 ], [ %144, %177 ]
  %183 = icmp eq i64 %181, 0
  br i1 %183, label %184, label %142

184:                                              ; preds = %180, %130, %124
  %185 = phi i64 [ %125, %124 ], [ %125, %130 ], [ %182, %180 ]
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %190, label %187

187:                                              ; preds = %184
  %188 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 7, i32 0, i32 0
  %189 = bitcast i64* %188 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 16, i1 false) #11
  br label %190

190:                                              ; preds = %184, %187
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal18ThroughputAnalyzer15NotifyBytesReadERKNS_10URLRequestE(%"class.net::nqe::internal::ThroughputAnalyzer"*, %"class.net::URLRequest"* dereferenceable(2016)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.579", align 8
  %4 = alloca %"class.std::__1::tuple.561", align 1
  %5 = alloca %"class.net::URLRequest"*, align 8
  %6 = alloca %"class.net::URLRequest"*, align 8
  %7 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 14
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %32

10:                                               ; preds = %2
  tail call void @_ZN3net3nqe8internal18ThroughputAnalyzer20EraseHangingRequestsERKNS_10URLRequestE(%"class.net::nqe::internal::ThroughputAnalyzer"* %0, %"class.net::URLRequest"* dereferenceable(2016) %1)
  %11 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10
  %12 = bitcast %"class.net::URLRequest"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  store %"class.net::URLRequest"* %1, %"class.net::URLRequest"** %5, align 8
  %13 = call i64 @_ZNSt3__113unordered_mapIPKN3net10URLRequestEN4base9TimeTicksENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorINS_4pairIKS4_S6_EEEEE5eraseERSD_(%"class.std::__1::unordered_map"* %11, %"class.net::URLRequest"** nonnull dereferenceable(8) %5)
  %14 = icmp eq i64 %13, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br i1 %14, label %32, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 5
  %17 = load %"class.base::TickClock"*, %"class.base::TickClock"** %16, align 8
  %18 = bitcast %"class.base::TickClock"* %17 to i64 (%"class.base::TickClock"*)***
  %19 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, i64 2
  %21 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %20, align 8
  %22 = call i64 %21(%"class.base::TickClock"* %17) #11
  %23 = bitcast %"class.net::URLRequest"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  store %"class.net::URLRequest"* %1, %"class.net::URLRequest"** %6, align 8
  %24 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %11, i64 0, i32 0
  %25 = bitcast %"class.std::__1::tuple.579"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.std::__1::tuple.579", %"class.std::__1::tuple.579"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.net::URLRequest"** %6, %"class.net::URLRequest"*** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::tuple.561", %"class.std::__1::tuple.561"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %27) #11
  %28 = call { %"struct.std::__1::__hash_node_base.144"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.140"* %24, %"class.net::URLRequest"** nonnull dereferenceable(8) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.579"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.561"* nonnull dereferenceable(1) %4) #11
  %29 = extractvalue { %"struct.std::__1::__hash_node_base.144"*, i8 } %28, 0
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %29, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11
  %31 = bitcast %"struct.std::__1::__hash_node_base.144"* %30 to i64*
  store i64 %22, i64* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %32

32:                                               ; preds = %2, %10, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__113unordered_mapIPKN3net10URLRequestEN4base9TimeTicksENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorINS_4pairIKS4_S6_EEEEE5eraseERSD_(%"class.std::__1::unordered_map"*, %"class.net::URLRequest"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.582", align 8
  %4 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0
  %5 = bitcast %"class.net::URLRequest"** %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 32
  %8 = shl i64 %6, 3
  %9 = and i64 %8, 4294967288
  %10 = add nuw nsw i64 %9, 8
  %11 = xor i64 %10, %7
  %12 = mul i64 %11, -7070675565921424023
  %13 = lshr i64 %12, 47
  %14 = xor i64 %12, %7
  %15 = xor i64 %14, %13
  %16 = mul i64 %15, -7070675565921424023
  %17 = lshr i64 %16, 47
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  %23 = inttoptr i64 %6 to %"class.net::URLRequest"*
  br i1 %22, label %80, label %24

24:                                               ; preds = %2
  %25 = tail call i64 @llvm.ctpop.i64(i64 %21) #11, !range !3
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %21, -1
  %29 = and i64 %19, %28
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %19, %21
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %19, %21
  br label %34

34:                                               ; preds = %32, %30, %27
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %19, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.144"* %39, null
  br i1 %40, label %80, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.144"* %43, null
  br i1 %44, label %80, label %45

45:                                               ; preds = %41
  %46 = add i64 %21, -1
  br label %47

47:                                               ; preds = %68, %45
  %48 = phi %"struct.std::__1::__hash_node_base.144"* [ %43, %45 ], [ %70, %68 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.144"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %19
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %46
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %21
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %21
  br label %60

60:                                               ; preds = %58, %56, %54
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %68, label %80

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.144"* %64 to %"class.net::URLRequest"**
  %66 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %65, align 8
  %67 = icmp eq %"class.net::URLRequest"* %66, %23
  br i1 %67, label %72, label %68

68:                                               ; preds = %63, %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %48, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.144"* %70, null
  br i1 %71, label %80, label %47

72:                                               ; preds = %63
  %73 = bitcast %"class.std::__1::unique_ptr.582"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #11
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE(%"class.std::__1::unique_ptr.582"* nonnull sret %3, %"class.std::__1::__hash_table.140"* %4, %"struct.std::__1::__hash_node_base.144"* nonnull %48) #11
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.582", %"class.std::__1::unique_ptr.582"* %3, i64 0, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__1::__hash_node.553"*, %"struct.std::__1::__hash_node.553"** %74, align 8
  store %"struct.std::__1::__hash_node.553"* null, %"struct.std::__1::__hash_node.553"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node.553"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %72
  %78 = bitcast %"struct.std::__1::__hash_node.553"* %75 to i8*
  call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %77, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #11
  br label %80

80:                                               ; preds = %60, %68, %41, %2, %34, %79
  %81 = phi i64 [ 1, %79 ], [ 0, %34 ], [ 0, %2 ], [ 0, %41 ], [ 0, %68 ], [ 0, %60 ]
  ret i64 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal18ThroughputAnalyzer22NotifyRequestCompletedERKNS_10URLRequestE(%"class.net::nqe::internal::ThroughputAnalyzer"*, %"class.net::URLRequest"* dereferenceable(2016)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.571", align 8
  %4 = alloca %"class.std::__1::unique_ptr.562", align 8
  %5 = alloca %"class.std::__1::tuple.579", align 8
  %6 = alloca %"class.std::__1::tuple.561", align 1
  %7 = alloca %"class.net::URLRequest"*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = alloca %"class.net::URLRequest"*, align 8
  %12 = alloca %"class.net::URLRequest"*, align 8
  %13 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 11
  %14 = ptrtoint %"class.net::URLRequest"* %1 to i64
  %15 = lshr i64 %14, 32
  %16 = shl i64 %14, 3
  %17 = and i64 %16, 4294967288
  %18 = add nuw nsw i64 %17, 8
  %19 = xor i64 %18, %15
  %20 = mul i64 %19, -7070675565921424023
  %21 = lshr i64 %20, 47
  %22 = xor i64 %20, %15
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, -7070675565921424023
  %25 = lshr i64 %24, 47
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, -7070675565921424023
  %28 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %150, label %31

31:                                               ; preds = %2
  %32 = tail call i64 @llvm.ctpop.i64(i64 %29) #11, !range !3
  %33 = icmp ugt i64 %32, 1
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = add i64 %29, -1
  %36 = and i64 %35, %27
  br label %41

37:                                               ; preds = %31
  %38 = icmp ult i64 %27, %29
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = urem i64 %27, %29
  br label %41

41:                                               ; preds = %39, %37, %34
  %42 = phi i64 [ %36, %34 ], [ %40, %39 ], [ %27, %37 ]
  %43 = getelementptr inbounds %"class.std::__1::unordered_map.161", %"class.std::__1::unordered_map.161"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %44, i64 %42
  %46 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.166"* %46, null
  br i1 %47, label %150, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %46, i64 0, i32 0
  %50 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %49, align 8
  %51 = icmp eq %"struct.std::__1::__hash_node_base.166"* %50, null
  br i1 %51, label %150, label %52

52:                                               ; preds = %48
  %53 = add i64 %29, -1
  br label %54

54:                                               ; preds = %75, %52
  %55 = phi %"struct.std::__1::__hash_node_base.166"* [ %50, %52 ], [ %77, %75 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %55, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base.166"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %27
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  br i1 %33, label %63, label %61

61:                                               ; preds = %60
  %62 = and i64 %58, %53
  br label %67

63:                                               ; preds = %60
  %64 = icmp ult i64 %58, %29
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %58, %29
  br label %67

67:                                               ; preds = %65, %63, %61
  %68 = phi i64 [ %62, %61 ], [ %66, %65 ], [ %58, %63 ]
  %69 = icmp eq i64 %68, %42
  br i1 %69, label %75, label %150

70:                                               ; preds = %54
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %55, i64 2
  %72 = bitcast %"struct.std::__1::__hash_node_base.166"* %71 to %"class.net::URLRequest"**
  %73 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %72, align 8
  %74 = icmp eq %"class.net::URLRequest"* %73, %1
  br i1 %74, label %79, label %75

75:                                               ; preds = %70, %67
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %55, i64 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %76, align 8
  %78 = icmp eq %"struct.std::__1::__hash_node_base.166"* %77, null
  br i1 %78, label %150, label %54

79:                                               ; preds = %70
  %80 = bitcast %"class.net::URLRequest"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #11
  store %"class.net::URLRequest"* %1, %"class.net::URLRequest"** %7, align 8
  %81 = getelementptr inbounds %"class.std::__1::unordered_map.161", %"class.std::__1::unordered_map.161"* %13, i64 0, i32 0
  %82 = bitcast %"class.std::__1::tuple.579"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  %83 = getelementptr inbounds %"class.std::__1::tuple.579", %"class.std::__1::tuple.579"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.net::URLRequest"** %7, %"class.net::URLRequest"*** %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::tuple.561", %"class.std::__1::tuple.561"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %84) #11
  %85 = call { %"struct.std::__1::__hash_node_base.166"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.162"* %81, %"class.net::URLRequest"** nonnull dereferenceable(8) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.579"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.561"* nonnull dereferenceable(1) %6) #11
  %86 = extractvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } %85, 0
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %86, i64 3
  %88 = bitcast %"struct.std::__1::__hash_node_base.166"* %87 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %84) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 12
  %91 = load i64, i64* %90, align 8
  %92 = sub nsw i64 %91, %89
  store i64 %92, i64* %90, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #11
  %93 = load i64, i64* %28, align 8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %150, label %95

95:                                               ; preds = %79
  %96 = call i64 @llvm.ctpop.i64(i64 %93) #11, !range !3
  %97 = icmp ugt i64 %96, 1
  br i1 %97, label %101, label %98

98:                                               ; preds = %95
  %99 = add i64 %93, -1
  %100 = and i64 %99, %27
  br label %105

101:                                              ; preds = %95
  %102 = icmp ult i64 %27, %93
  br i1 %102, label %105, label %103

103:                                              ; preds = %101
  %104 = urem i64 %27, %93
  br label %105

105:                                              ; preds = %103, %101, %98
  %106 = phi i64 [ %100, %98 ], [ %104, %103 ], [ %27, %101 ]
  %107 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %43, align 8
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %107, i64 %106
  %109 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.166"* %109, null
  br i1 %110, label %150, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %109, i64 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %112, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base.166"* %113, null
  br i1 %114, label %150, label %115

115:                                              ; preds = %111
  %116 = add i64 %93, -1
  br label %117

117:                                              ; preds = %138, %115
  %118 = phi %"struct.std::__1::__hash_node_base.166"* [ %113, %115 ], [ %140, %138 ]
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %118, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base.166"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = icmp eq i64 %121, %27
  br i1 %122, label %133, label %123

123:                                              ; preds = %117
  br i1 %97, label %126, label %124

124:                                              ; preds = %123
  %125 = and i64 %121, %116
  br label %130

126:                                              ; preds = %123
  %127 = icmp ult i64 %121, %93
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %121, %93
  br label %130

130:                                              ; preds = %128, %126, %124
  %131 = phi i64 [ %125, %124 ], [ %129, %128 ], [ %121, %126 ]
  %132 = icmp eq i64 %131, %106
  br i1 %132, label %138, label %150

133:                                              ; preds = %117
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %118, i64 2
  %135 = bitcast %"struct.std::__1::__hash_node_base.166"* %134 to %"class.net::URLRequest"**
  %136 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %135, align 8
  %137 = icmp eq %"class.net::URLRequest"* %136, %1
  br i1 %137, label %142, label %138

138:                                              ; preds = %133, %130
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %118, i64 0, i32 0
  %140 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %139, align 8
  %141 = icmp eq %"struct.std::__1::__hash_node_base.166"* %140, null
  br i1 %141, label %150, label %117

142:                                              ; preds = %133
  %143 = bitcast %"class.std::__1::unique_ptr.562"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #11
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.562"* nonnull sret %4, %"class.std::__1::__hash_table.162"* %81, %"struct.std::__1::__hash_node_base.166"* nonnull %118) #11
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.562", %"class.std::__1::unique_ptr.562"* %4, i64 0, i32 0, i32 0, i32 0
  %145 = load %"struct.std::__1::__hash_node.554"*, %"struct.std::__1::__hash_node.554"** %144, align 8
  store %"struct.std::__1::__hash_node.554"* null, %"struct.std::__1::__hash_node.554"** %144, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node.554"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %142
  %148 = bitcast %"struct.std::__1::__hash_node.554"* %145 to i8*
  call void @_ZdlPv(i8* %148) #12
  br label %149

149:                                              ; preds = %147, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #11
  br label %150

150:                                              ; preds = %75, %67, %130, %138, %111, %79, %105, %48, %2, %41, %149
  %151 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 14
  %152 = load i8, i8* %151, align 8, !range !2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %414

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10
  %156 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %157 = load i64, i64* %156, align 8
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %207, label %159

159:                                              ; preds = %154
  %160 = call i64 @llvm.ctpop.i64(i64 %157) #11, !range !3
  %161 = icmp ugt i64 %160, 1
  br i1 %161, label %165, label %162

162:                                              ; preds = %159
  %163 = add i64 %157, -1
  %164 = and i64 %163, %27
  br label %169

165:                                              ; preds = %159
  %166 = icmp ult i64 %27, %157
  br i1 %166, label %169, label %167

167:                                              ; preds = %165
  %168 = urem i64 %27, %157
  br label %169

169:                                              ; preds = %167, %165, %162
  %170 = phi i64 [ %164, %162 ], [ %168, %167 ], [ %27, %165 ]
  %171 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %171, align 8
  %173 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %172, i64 %170
  %174 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %173, align 8
  %175 = icmp eq %"struct.std::__1::__hash_node_base.144"* %174, null
  br i1 %175, label %207, label %176

176:                                              ; preds = %169
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %174, i64 0, i32 0
  %178 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %177, align 8
  %179 = icmp eq %"struct.std::__1::__hash_node_base.144"* %178, null
  br i1 %179, label %207, label %180

180:                                              ; preds = %176
  %181 = add i64 %157, -1
  br label %182

182:                                              ; preds = %203, %180
  %183 = phi %"struct.std::__1::__hash_node_base.144"* [ %178, %180 ], [ %205, %203 ]
  %184 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %183, i64 1
  %185 = bitcast %"struct.std::__1::__hash_node_base.144"* %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = icmp eq i64 %186, %27
  br i1 %187, label %198, label %188

188:                                              ; preds = %182
  br i1 %161, label %191, label %189

189:                                              ; preds = %188
  %190 = and i64 %186, %181
  br label %195

191:                                              ; preds = %188
  %192 = icmp ult i64 %186, %157
  br i1 %192, label %195, label %193

193:                                              ; preds = %191
  %194 = urem i64 %186, %157
  br label %195

195:                                              ; preds = %193, %191, %189
  %196 = phi i64 [ %190, %189 ], [ %194, %193 ], [ %186, %191 ]
  %197 = icmp eq i64 %196, %170
  br i1 %197, label %203, label %207

198:                                              ; preds = %182
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %183, i64 2
  %200 = bitcast %"struct.std::__1::__hash_node_base.144"* %199 to %"class.net::URLRequest"**
  %201 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %200, align 8
  %202 = icmp eq %"class.net::URLRequest"* %201, %1
  br i1 %202, label %259, label %203

203:                                              ; preds = %198, %195
  %204 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %183, i64 0, i32 0
  %205 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %204, align 8
  %206 = icmp eq %"struct.std::__1::__hash_node_base.144"* %205, null
  br i1 %206, label %207, label %182

207:                                              ; preds = %195, %203, %169, %154, %176
  %208 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %209 = load i64, i64* %208, align 8
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %414, label %211

211:                                              ; preds = %207
  %212 = call i64 @llvm.ctpop.i64(i64 %209) #11, !range !3
  %213 = icmp ugt i64 %212, 1
  br i1 %213, label %217, label %214

214:                                              ; preds = %211
  %215 = add i64 %209, -1
  %216 = and i64 %215, %27
  br label %221

217:                                              ; preds = %211
  %218 = icmp ult i64 %27, %209
  br i1 %218, label %221, label %219

219:                                              ; preds = %217
  %220 = urem i64 %27, %209
  br label %221

221:                                              ; preds = %219, %217, %214
  %222 = phi i64 [ %216, %214 ], [ %220, %219 ], [ %27, %217 ]
  %223 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %223, align 8
  %225 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %224, i64 %222
  %226 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %225, align 8
  %227 = icmp eq %"struct.std::__1::__hash_node_base"* %226, null
  br i1 %227, label %414, label %228

228:                                              ; preds = %221
  %229 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %226, i64 0, i32 0
  %230 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %229, align 8
  %231 = icmp eq %"struct.std::__1::__hash_node_base"* %230, null
  br i1 %231, label %414, label %232

232:                                              ; preds = %228
  %233 = add i64 %209, -1
  br label %234

234:                                              ; preds = %255, %232
  %235 = phi %"struct.std::__1::__hash_node_base"* [ %230, %232 ], [ %257, %255 ]
  %236 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %235, i64 1
  %237 = bitcast %"struct.std::__1::__hash_node_base"* %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = icmp eq i64 %238, %27
  br i1 %239, label %250, label %240

240:                                              ; preds = %234
  br i1 %213, label %243, label %241

241:                                              ; preds = %240
  %242 = and i64 %238, %233
  br label %247

243:                                              ; preds = %240
  %244 = icmp ult i64 %238, %209
  br i1 %244, label %247, label %245

245:                                              ; preds = %243
  %246 = urem i64 %238, %209
  br label %247

247:                                              ; preds = %245, %243, %241
  %248 = phi i64 [ %242, %241 ], [ %246, %245 ], [ %238, %243 ]
  %249 = icmp eq i64 %248, %222
  br i1 %249, label %255, label %414

250:                                              ; preds = %234
  %251 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %235, i64 2
  %252 = bitcast %"struct.std::__1::__hash_node_base"* %251 to %"class.net::URLRequest"**
  %253 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %252, align 8
  %254 = icmp eq %"class.net::URLRequest"* %253, %1
  br i1 %254, label %259, label %255

255:                                              ; preds = %250, %247
  %256 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %235, i64 0, i32 0
  %257 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %256, align 8
  %258 = icmp eq %"struct.std::__1::__hash_node_base"* %257, null
  br i1 %258, label %414, label %234

259:                                              ; preds = %198, %250
  call void @_ZN3net3nqe8internal18ThroughputAnalyzer20EraseHangingRequestsERKNS_10URLRequestE(%"class.net::nqe::internal::ThroughputAnalyzer"* %0, %"class.net::URLRequest"* dereferenceable(2016) %1)
  %260 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %260) #11
  store i32 -1, i32* %8, align 4
  %261 = call zeroext i1 @_ZN3net3nqe8internal18ThroughputAnalyzer29MaybeGetThroughputObservationEPi(%"class.net::nqe::internal::ThroughputAnalyzer"* %0, i32* nonnull %8)
  br i1 %261, label %262, label %273

262:                                              ; preds = %259
  %263 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 3, i32 0
  %264 = bitcast %"class.base::SingleThreadTaskRunner"** %263 to %"class.base::TaskRunner"**
  %265 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %264, align 8
  %266 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %266) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 219) #11
  %267 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 4
  %268 = call %"struct.base::internal::BindState"* @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFviEEEJiEE6CreateIRS4_JRiEEEPS5_PFvvEOT_DpOT0_(void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_17RepeatingCallbackIFviEEEJiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), %"class.base::RepeatingCallback.120"* dereferenceable(8) %267, i32* nonnull dereferenceable(4) %8) #11, !noalias !8
  %269 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %268, i64 0, i32 0
  %270 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* %269, %"class.base::internal::BindStateBase"** %270, align 8, !alias.scope !8
  %271 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %265, %"class.base::Location"* nonnull dereferenceable(32) %9, %"class.base::OnceCallback"* nonnull %10) #11
  %272 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %272) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #11
  br label %273

273:                                              ; preds = %262, %259
  %274 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0
  %275 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %276 = load i64, i64* %275, align 8
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %367, label %278

278:                                              ; preds = %273
  %279 = call i64 @llvm.ctpop.i64(i64 %276) #11, !range !3
  %280 = icmp ugt i64 %279, 1
  br i1 %280, label %284, label %281

281:                                              ; preds = %278
  %282 = add i64 %276, -1
  %283 = and i64 %282, %27
  br label %288

284:                                              ; preds = %278
  %285 = icmp ult i64 %27, %276
  br i1 %285, label %288, label %286

286:                                              ; preds = %284
  %287 = urem i64 %27, %276
  br label %288

288:                                              ; preds = %286, %284, %281
  %289 = phi i64 [ %283, %281 ], [ %287, %286 ], [ %27, %284 ]
  %290 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %274, i64 0, i32 0, i32 0, i32 0, i32 0
  %291 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %290, align 8
  %292 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %291, i64 %289
  %293 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %292, align 8
  %294 = icmp eq %"struct.std::__1::__hash_node_base"* %293, null
  br i1 %294, label %367, label %295

295:                                              ; preds = %288
  %296 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %293, i64 0, i32 0
  %297 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %296, align 8
  %298 = icmp eq %"struct.std::__1::__hash_node_base"* %297, null
  br i1 %298, label %367, label %299

299:                                              ; preds = %295
  %300 = add i64 %276, -1
  br label %301

301:                                              ; preds = %322, %299
  %302 = phi %"struct.std::__1::__hash_node_base"* [ %297, %299 ], [ %324, %322 ]
  %303 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %302, i64 1
  %304 = bitcast %"struct.std::__1::__hash_node_base"* %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = icmp eq i64 %305, %27
  br i1 %306, label %317, label %307

307:                                              ; preds = %301
  br i1 %280, label %310, label %308

308:                                              ; preds = %307
  %309 = and i64 %305, %300
  br label %314

310:                                              ; preds = %307
  %311 = icmp ult i64 %305, %276
  br i1 %311, label %314, label %312

312:                                              ; preds = %310
  %313 = urem i64 %305, %276
  br label %314

314:                                              ; preds = %312, %310, %308
  %315 = phi i64 [ %309, %308 ], [ %313, %312 ], [ %305, %310 ]
  %316 = icmp eq i64 %315, %289
  br i1 %316, label %322, label %367

317:                                              ; preds = %301
  %318 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %302, i64 2
  %319 = bitcast %"struct.std::__1::__hash_node_base"* %318 to %"class.net::URLRequest"**
  %320 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %319, align 8
  %321 = icmp eq %"class.net::URLRequest"* %320, %1
  br i1 %321, label %326, label %322

322:                                              ; preds = %317, %314
  %323 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %302, i64 0, i32 0
  %324 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %323, align 8
  %325 = icmp eq %"struct.std::__1::__hash_node_base"* %324, null
  br i1 %325, label %367, label %301

326:                                              ; preds = %317
  %327 = bitcast %"class.std::__1::unique_ptr.571"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %327) #11
  call void @_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE(%"class.std::__1::unique_ptr.571"* nonnull sret %3, %"class.std::__1::__hash_table"* %274, %"struct.std::__1::__hash_node_base"* nonnull %302) #11
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr.571", %"class.std::__1::unique_ptr.571"* %3, i64 0, i32 0, i32 0, i32 0
  %329 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %328, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %328, align 8
  %330 = icmp eq %"struct.std::__1::__hash_node"* %329, null
  br i1 %330, label %333, label %331

331:                                              ; preds = %326
  %332 = bitcast %"struct.std::__1::__hash_node"* %329 to i8*
  call void @_ZdlPv(i8* %332) #12
  br label %333

333:                                              ; preds = %326, %331
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %327) #11
  %334 = bitcast %"class.net::URLRequest"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %334) #11
  store %"class.net::URLRequest"* %1, %"class.net::URLRequest"** %11, align 8
  %335 = call i64 @_ZNSt3__113unordered_mapIPKN3net10URLRequestEN4base9TimeTicksENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorINS_4pairIKS4_S6_EEEEE5eraseERSD_(%"class.std::__1::unordered_map"* %155, %"class.net::URLRequest"** nonnull dereferenceable(8) %11)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %334) #11
  %336 = load i8, i8* %151, align 8, !range !2
  %337 = icmp eq i8 %336, 0
  br i1 %337, label %338, label %413

338:                                              ; preds = %333
  %339 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %340 = load i64, i64* %339, align 8
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %342, label %413

342:                                              ; preds = %338
  %343 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 7, i32 0, i32 0
  %344 = load i64, i64* %343, align 8
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %346, label %413

346:                                              ; preds = %342
  %347 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %348 = load i64, i64* %347, align 8
  %349 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 2
  %350 = load %"class.net::NetworkQualityEstimatorParams"*, %"class.net::NetworkQualityEstimatorParams"** %349, align 8
  %351 = call i64 @_ZNK3net29NetworkQualityEstimatorParams33throughput_min_requests_in_flightEv(%"class.net::NetworkQualityEstimatorParams"* %350) #11
  %352 = icmp ult i64 %348, %351
  br i1 %352, label %413, label %353

353:                                              ; preds = %346
  %354 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 5
  %355 = load %"class.base::TickClock"*, %"class.base::TickClock"** %354, align 8
  %356 = bitcast %"class.base::TickClock"* %355 to i64 (%"class.base::TickClock"*)***
  %357 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %356, align 8
  %358 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %357, i64 2
  %359 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %358, align 8
  %360 = call i64 %359(%"class.base::TickClock"* %355) #11
  store i64 %360, i64* %343, align 8
  %361 = bitcast %"class.net::nqe::internal::ThroughputAnalyzer"* %0 to i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)***
  %362 = load i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)**, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*** %361, align 8
  %363 = getelementptr inbounds i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)** %362, i64 2
  %364 = load i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)** %363, align 8
  %365 = call i64 %364(%"class.net::nqe::internal::ThroughputAnalyzer"* %0) #11
  %366 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 8
  store i64 %365, i64* %366, align 8
  br label %413

367:                                              ; preds = %314, %322, %295, %273, %288
  %368 = bitcast %"class.net::URLRequest"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %368) #11
  store %"class.net::URLRequest"* %1, %"class.net::URLRequest"** %12, align 8
  %369 = call i64 @_ZNSt3__113unordered_mapIPKN3net10URLRequestEN4base9TimeTicksENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorINS_4pairIKS4_S6_EEEEE5eraseERSD_(%"class.std::__1::unordered_map"* %155, %"class.net::URLRequest"** nonnull dereferenceable(8) %12)
  %370 = icmp eq i64 %369, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %368) #11
  br i1 %370, label %371, label %381

371:                                              ; preds = %367
  %372 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %373 = load i64, i64* %372, align 8
  %374 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 2
  %375 = load %"class.net::NetworkQualityEstimatorParams"*, %"class.net::NetworkQualityEstimatorParams"** %374, align 8
  %376 = call i64 @_ZNK3net29NetworkQualityEstimatorParams33throughput_min_requests_in_flightEv(%"class.net::NetworkQualityEstimatorParams"* %375) #11
  %377 = icmp ult i64 %373, %376
  br i1 %377, label %378, label %413

378:                                              ; preds = %371
  %379 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 7, i32 0, i32 0
  %380 = bitcast i64* %379 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %380, i8 0, i64 16, i1 false) #11
  br label %413

381:                                              ; preds = %367
  %382 = load i8, i8* %151, align 8, !range !2
  %383 = icmp eq i8 %382, 0
  br i1 %383, label %384, label %413

384:                                              ; preds = %381
  %385 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %386 = load i64, i64* %385, align 8
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %388, label %413

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 7, i32 0, i32 0
  %390 = load i64, i64* %389, align 8
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %392, label %413

392:                                              ; preds = %388
  %393 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %394 = load i64, i64* %393, align 8
  %395 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 2
  %396 = load %"class.net::NetworkQualityEstimatorParams"*, %"class.net::NetworkQualityEstimatorParams"** %395, align 8
  %397 = call i64 @_ZNK3net29NetworkQualityEstimatorParams33throughput_min_requests_in_flightEv(%"class.net::NetworkQualityEstimatorParams"* %396) #11
  %398 = icmp ult i64 %394, %397
  br i1 %398, label %413, label %399

399:                                              ; preds = %392
  %400 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 5
  %401 = load %"class.base::TickClock"*, %"class.base::TickClock"** %400, align 8
  %402 = bitcast %"class.base::TickClock"* %401 to i64 (%"class.base::TickClock"*)***
  %403 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %402, align 8
  %404 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %403, i64 2
  %405 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %404, align 8
  %406 = call i64 %405(%"class.base::TickClock"* %401) #11
  store i64 %406, i64* %389, align 8
  %407 = bitcast %"class.net::nqe::internal::ThroughputAnalyzer"* %0 to i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)***
  %408 = load i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)**, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*** %407, align 8
  %409 = getelementptr inbounds i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)** %408, i64 2
  %410 = load i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)** %409, align 8
  %411 = call i64 %410(%"class.net::nqe::internal::ThroughputAnalyzer"* %0) #11
  %412 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 8
  store i64 %411, i64* %412, align 8
  br label %413

413:                                              ; preds = %399, %392, %388, %384, %381, %353, %346, %342, %338, %333, %371, %378
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %260) #11
  br label %414

414:                                              ; preds = %255, %247, %228, %207, %221, %150, %413
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net3nqe8internal18ThroughputAnalyzer29MaybeGetThroughputObservationEPi(%"class.net::nqe::internal::ThroughputAnalyzer"*, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 14
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %128

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 7, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %128, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 5
  %13 = load %"class.base::TickClock"*, %"class.base::TickClock"** %12, align 8
  %14 = bitcast %"class.base::TickClock"* %13 to i64 (%"class.base::TickClock"*)***
  %15 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %15, i64 2
  %17 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %16, align 8
  %18 = tail call i64 %17(%"class.base::TickClock"* %13) #11
  %19 = bitcast %"class.net::nqe::internal::ThroughputAnalyzer"* %0 to i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)***
  %20 = load i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)**, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*** %19, align 8
  %21 = getelementptr inbounds i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)** %20, i64 2
  %22 = load i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)** %21, align 8
  %23 = tail call i64 %22(%"class.net::nqe::internal::ThroughputAnalyzer"* %0) #11
  %24 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 8
  %25 = load i64, i64* %24, align 8
  %26 = sub nsw i64 %23, %25
  %27 = load i64, i64* %8, align 8
  %28 = sub nsw i64 %18, %27
  %29 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 2
  %30 = load %"class.net::NetworkQualityEstimatorParams"*, %"class.net::NetworkQualityEstimatorParams"** %29, align 8
  %31 = tail call zeroext i1 @_ZNK3net29NetworkQualityEstimatorParams19use_small_responsesEv(%"class.net::NetworkQualityEstimatorParams"* %30) #11
  br i1 %31, label %36, label %32

32:                                               ; preds = %11
  %33 = load %"class.net::NetworkQualityEstimatorParams"*, %"class.net::NetworkQualityEstimatorParams"** %29, align 8
  %34 = tail call i64 @_ZNK3net29NetworkQualityEstimatorParams32GetThroughputMinTransferSizeBitsEv(%"class.net::NetworkQualityEstimatorParams"* %33) #11
  %35 = icmp slt i64 %26, %34
  br i1 %35, label %128, label %36

36:                                               ; preds = %32, %11
  %37 = sitofp i64 %26 to double
  %38 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 1000000, i64* %39, align 8
  %40 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %3, i64 %28) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %41 = fmul double %40, %37
  %42 = fdiv double %41, 1.000000e+03
  %43 = call zeroext i1 @_ZNK3net3nqe8internal18ThroughputAnalyzer15IsHangingWindowElN4base9TimeDeltaEd(%"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 %26, i64 %28, double %42)
  br i1 %43, label %44, label %100

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %98, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %50 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %49, align 8
  %51 = icmp eq %"struct.std::__1::__hash_node_base.144"* %50, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %48, %52
  %53 = phi %"struct.std::__1::__hash_node_base.144"* [ %55, %52 ], [ %50, %48 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %53, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %54, align 8
  %56 = bitcast %"struct.std::__1::__hash_node_base.144"* %53 to i8*
  call void @_ZdlPv(i8* %56) #12
  %57 = icmp eq %"struct.std::__1::__hash_node_base.144"* %55, null
  br i1 %57, label %58, label %52

58:                                               ; preds = %52, %48
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %49, align 8
  %59 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %80, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = add i64 %60, -1
  %65 = and i64 %60, 3
  %66 = icmp ult i64 %64, 3
  br i1 %66, label %69, label %67

67:                                               ; preds = %62
  %68 = sub i64 %60, %65
  br label %81

69:                                               ; preds = %81, %62
  %70 = phi i64 [ 0, %62 ], [ %95, %81 ]
  %71 = icmp eq i64 %65, 0
  br i1 %71, label %80, label %72

72:                                               ; preds = %69, %72
  %73 = phi i64 [ %77, %72 ], [ %70, %69 ]
  %74 = phi i64 [ %78, %72 ], [ %65, %69 ]
  %75 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %63, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %75, i64 %73
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %76, align 8
  %77 = add nuw i64 %73, 1
  %78 = add i64 %74, -1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %72, !llvm.loop !13

80:                                               ; preds = %69, %72, %58
  store i64 0, i64* %45, align 8
  br label %98

81:                                               ; preds = %81, %67
  %82 = phi i64 [ 0, %67 ], [ %95, %81 ]
  %83 = phi i64 [ %68, %67 ], [ %96, %81 ]
  %84 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %63, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %84, i64 %82
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %85, align 8
  %86 = or i64 %82, 1
  %87 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %63, align 8
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %87, i64 %86
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %88, align 8
  %89 = or i64 %82, 2
  %90 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %63, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %90, i64 %89
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %91, align 8
  %92 = or i64 %82, 3
  %93 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %63, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %93, i64 %92
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %94, align 8
  %95 = add nuw i64 %82, 4
  %96 = add i64 %83, -4
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %69, label %81

98:                                               ; preds = %44, %80
  %99 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 16, i1 false) #11
  br label %128

100:                                              ; preds = %36
  %101 = call double @llvm.ceil.f64(double %42)
  %102 = fptosi double %101 to i64
  %103 = trunc i64 %102 to i32
  store i32 %103, i32* %1, align 4
  %104 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 16, i1 false) #11
  %105 = load i8, i8* %4, align 8, !range !2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %128

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %128

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = load %"class.net::NetworkQualityEstimatorParams"*, %"class.net::NetworkQualityEstimatorParams"** %29, align 8
  %115 = call i64 @_ZNK3net29NetworkQualityEstimatorParams33throughput_min_requests_in_flightEv(%"class.net::NetworkQualityEstimatorParams"* %114) #11
  %116 = icmp ult i64 %113, %115
  br i1 %116, label %128, label %117

117:                                              ; preds = %111
  %118 = load %"class.base::TickClock"*, %"class.base::TickClock"** %12, align 8
  %119 = bitcast %"class.base::TickClock"* %118 to i64 (%"class.base::TickClock"*)***
  %120 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %119, align 8
  %121 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %120, i64 2
  %122 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %121, align 8
  %123 = call i64 %122(%"class.base::TickClock"* %118) #11
  store i64 %123, i64* %8, align 8
  %124 = load i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)**, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*** %19, align 8
  %125 = getelementptr inbounds i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)** %124, i64 2
  %126 = load i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)*, i64 (%"class.net::nqe::internal::ThroughputAnalyzer"*)** %125, align 8
  %127 = call i64 %126(%"class.net::nqe::internal::ThroughputAnalyzer"* %0) #11
  store i64 %127, i64* %24, align 8
  br label %128

128:                                              ; preds = %7, %32, %98, %100, %107, %111, %117, %2
  %129 = phi i1 [ false, %2 ], [ false, %7 ], [ false, %32 ], [ false, %98 ], [ true, %100 ], [ true, %107 ], [ true, %111 ], [ true, %117 ]
  ret i1 %129
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal18ThroughputAnalyzer33NotifyExpectedResponseContentSizeERKNS_10URLRequestEl(%"class.net::nqe::internal::ThroughputAnalyzer"*, %"class.net::URLRequest"* dereferenceable(2016), i64) local_unnamed_addr #0 align 2 {
  %4 = icmp sgt i64 %2, -1
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @_ZN3net3nqe8internal18ThroughputAnalyzer25UpdateResponseContentSizeEPKNS_10URLRequestEl(%"class.net::nqe::internal::ThroughputAnalyzer"* %0, %"class.net::URLRequest"* %1, i64 %2)
  br label %6

6:                                                ; preds = %5, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net3nqe8internal18ThroughputAnalyzer15IsHangingWindowElN4base9TimeDeltaEd(%"class.net::nqe::internal::ThroughputAnalyzer"* nocapture readonly, i64, i64, double) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 2
  %7 = load %"class.net::NetworkQualityEstimatorParams"*, %"class.net::NetworkQualityEstimatorParams"** %6, align 8
  %8 = getelementptr inbounds %"class.net::NetworkQualityEstimatorParams", %"class.net::NetworkQualityEstimatorParams"* %7, i64 0, i32 3
  %9 = load double, double* %8, align 8
  %10 = fcmp ugt double %9, 0.000000e+00
  br i1 %10, label %11, label %65

11:                                               ; preds = %4
  %12 = tail call zeroext i1 @_ZNK3net29NetworkQualityEstimatorParams19use_small_responsesEv(%"class.net::NetworkQualityEstimatorParams"* %7) #11
  br i1 %12, label %65, label %13

13:                                               ; preds = %11
  %14 = sitofp i64 %1 to double
  %15 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 1
  %17 = load %"class.net::NetworkQualityEstimator"*, %"class.net::NetworkQualityEstimator"** %16, align 8
  %18 = bitcast %"class.net::NetworkQualityEstimator"* %17 to { i8, i64 } (%"class.net::NetworkQualityEstimator"*)***
  %19 = load { i8, i64 } (%"class.net::NetworkQualityEstimator"*)**, { i8, i64 } (%"class.net::NetworkQualityEstimator"*)*** %18, align 8
  %20 = getelementptr inbounds { i8, i64 } (%"class.net::NetworkQualityEstimator"*)*, { i8, i64 } (%"class.net::NetworkQualityEstimator"*)** %19, i64 4
  %21 = load { i8, i64 } (%"class.net::NetworkQualityEstimator"*)*, { i8, i64 } (%"class.net::NetworkQualityEstimator"*)** %20, align 8
  %22 = tail call { i8, i64 } %21(%"class.net::NetworkQualityEstimator"* %17) #11
  %23 = extractvalue { i8, i64 } %22, 0
  %24 = extractvalue { i8, i64 } %22, 1
  %25 = icmp eq i8 %23, 0
  %26 = select i1 %25, i64 10000000, i64 %24
  %27 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %5, i64 %2)
  %29 = fmul double %28, %14
  %30 = fptoui double %29 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %31 = uitofp i64 %30 to double
  %32 = load %"class.net::NetworkQualityEstimatorParams"*, %"class.net::NetworkQualityEstimatorParams"** %6, align 8
  %33 = getelementptr inbounds %"class.net::NetworkQualityEstimatorParams", %"class.net::NetworkQualityEstimatorParams"* %32, i64 0, i32 3
  %34 = load double, double* %33, align 8
  %35 = fmul double %34, 1.200000e+05
  %36 = fcmp ogt double %35, %31
  br i1 %36, label %37, label %51

37:                                               ; preds = %13
  %38 = load atomic i64, i64* @_ZZNK3net3nqe8internal18ThroughputAnalyzer15IsHangingWindowElN4base9TimeDeltaEdE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %39 = inttoptr i64 %38 to %"class.base::HistogramBase"*
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %37
  %42 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 1000000, i32 50, i32 0) #11
  %43 = ptrtoint %"class.base::HistogramBase"* %42 to i64
  store atomic i64 %43, i64* @_ZZNK3net3nqe8internal18ThroughputAnalyzer15IsHangingWindowElN4base9TimeDeltaEdE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %44

44:                                               ; preds = %37, %41
  %45 = phi %"class.base::HistogramBase"* [ %39, %37 ], [ %42, %41 ]
  %46 = fptosi double %3 to i32
  %47 = bitcast %"class.base::HistogramBase"* %45 to void (%"class.base::HistogramBase"*, i32)***
  %48 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %48, i64 6
  %50 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %49, align 8
  call void %50(%"class.base::HistogramBase"* %45, i32 %46) #11
  br label %65

51:                                               ; preds = %13
  %52 = load atomic i64, i64* @_ZZNK3net3nqe8internal18ThroughputAnalyzer15IsHangingWindowElN4base9TimeDeltaEdE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %53 = inttoptr i64 %52 to %"class.base::HistogramBase"*
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %51
  %56 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 1000000, i32 50, i32 0) #11
  %57 = ptrtoint %"class.base::HistogramBase"* %56 to i64
  store atomic i64 %57, i64* @_ZZNK3net3nqe8internal18ThroughputAnalyzer15IsHangingWindowElN4base9TimeDeltaEdE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %58

58:                                               ; preds = %51, %55
  %59 = phi %"class.base::HistogramBase"* [ %53, %51 ], [ %56, %55 ]
  %60 = fptosi double %3 to i32
  %61 = bitcast %"class.base::HistogramBase"* %59 to void (%"class.base::HistogramBase"*, i32)***
  %62 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %62, i64 6
  %64 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %63, align 8
  call void %64(%"class.base::HistogramBase"* %59, i32 %60) #11
  br label %65

65:                                               ; preds = %44, %58, %11, %4
  %66 = phi i1 [ false, %4 ], [ false, %11 ], [ false, %58 ], [ true, %44 ]
  ret i1 %66
}

declare zeroext i1 @_ZNK3net29NetworkQualityEstimatorParams19use_small_responsesEv(%"class.net::NetworkQualityEstimatorParams"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)) #11
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0)) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #5

declare i64 @_ZNK3net29NetworkQualityEstimatorParams32GetThroughputMinTransferSizeBitsEv(%"class.net::NetworkQualityEstimatorParams"*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal18ThroughputAnalyzer23OnConnectionTypeChangedEv(%"class.net::nqe::internal::ThroughputAnalyzer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = bitcast %"struct.std::__1::__hash_node_base.144"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 9, i32 0
  br label %72

8:                                                ; preds = %72, %1
  %9 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %61, label %12

12:                                               ; preds = %8
  %13 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %2, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.144"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %12, %15
  %16 = phi %"struct.std::__1::__hash_node_base.144"* [ %18, %15 ], [ %13, %12 ]
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %16, i64 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %17, align 8
  %19 = bitcast %"struct.std::__1::__hash_node_base.144"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  %20 = icmp eq %"struct.std::__1::__hash_node_base.144"* %18, null
  br i1 %20, label %21, label %15

21:                                               ; preds = %15, %12
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %2, align 8
  %22 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %43, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = add i64 %23, -1
  %28 = and i64 %23, 3
  %29 = icmp ult i64 %27, 3
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = sub i64 %23, %28
  br label %44

32:                                               ; preds = %44, %25
  %33 = phi i64 [ 0, %25 ], [ %58, %44 ]
  %34 = icmp eq i64 %28, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %32, %35
  %36 = phi i64 [ %40, %35 ], [ %33, %32 ]
  %37 = phi i64 [ %41, %35 ], [ %28, %32 ]
  %38 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %26, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %38, i64 %36
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %39, align 8
  %40 = add nuw i64 %36, 1
  %41 = add i64 %37, -1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %35, !llvm.loop !14

43:                                               ; preds = %32, %35, %21
  store i64 0, i64* %9, align 8
  br label %61

44:                                               ; preds = %44, %30
  %45 = phi i64 [ 0, %30 ], [ %58, %44 ]
  %46 = phi i64 [ %31, %30 ], [ %59, %44 ]
  %47 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %26, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %47, i64 %45
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %48, align 8
  %49 = or i64 %45, 1
  %50 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %26, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %50, i64 %49
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %51, align 8
  %52 = or i64 %45, 2
  %53 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %26, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %54, align 8
  %55 = or i64 %45, 3
  %56 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %26, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %57, align 8
  %58 = add nuw i64 %45, 4
  %59 = add i64 %46, -4
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %32, label %44

61:                                               ; preds = %8, %43
  tail call void @_ZN3net3nqe8internal18ThroughputAnalyzer17BoundRequestsSizeEv(%"class.net::nqe::internal::ThroughputAnalyzer"* %0)
  %62 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 7, i32 0, i32 0
  %63 = bitcast i64* %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #11
  %64 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 5
  %65 = load %"class.base::TickClock"*, %"class.base::TickClock"** %64, align 8
  %66 = bitcast %"class.base::TickClock"* %65 to i64 (%"class.base::TickClock"*)***
  %67 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %66, align 8
  %68 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %67, i64 2
  %69 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %68, align 8
  %70 = tail call i64 %69(%"class.base::TickClock"* %65) #11
  %71 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %70, i64* %71, align 8
  ret void

72:                                               ; preds = %6, %72
  %73 = phi i64 [ %4, %6 ], [ %78, %72 ]
  %74 = inttoptr i64 %73 to %"struct.std::__1::__hash_node.553"*
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node.553", %"struct.std::__1::__hash_node.553"* %74, i64 0, i32 2, i32 0, i32 0
  %76 = tail call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %7, %"class.net::URLRequest"** dereferenceable(8) %75, %"class.net::URLRequest"** dereferenceable(8) %75) #11
  %77 = inttoptr i64 %73 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %8, label %72
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net3nqe8internal18ThroughputAnalyzer33SetUseLocalHostRequestsForTestingEb(%"class.net::nqe::internal::ThroughputAnalyzer"* nocapture, i1 zeroext) local_unnamed_addr #7 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 15
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3net3nqe8internal18ThroughputAnalyzer15GetBitsReceivedEv(%"class.net::nqe::internal::ThroughputAnalyzer"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN3net16activity_monitor16GetBytesReceivedEv() #11
  %3 = shl i64 %2, 3
  ret i64 %3
}

declare i64 @_ZN3net16activity_monitor16GetBytesReceivedEv() local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net3nqe8internal18ThroughputAnalyzer27CountActiveInFlightRequestsEv(%"class.net::nqe::internal::ThroughputAnalyzer"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net3nqe8internal18ThroughputAnalyzer26CountTotalInFlightRequestsEv(%"class.net::nqe::internal::ThroughputAnalyzer"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net3nqe8internal18ThroughputAnalyzer26CountTotalContentSizeBytesEv(%"class.net::nqe::internal::ThroughputAnalyzer"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::nqe::internal::ThroughputAnalyzer", %"class.net::nqe::internal::ThroughputAnalyzer"* %0, i64 0, i32 12
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

declare zeroext i1 @_ZN3net3nqe8internal23IsRequestForPrivateHostERKNS_10URLRequestE(%"class.net::URLRequest"* dereferenceable(2016)) local_unnamed_addr #5

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #5

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #8

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.166"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.162"*, %"class.net::URLRequest"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.561"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.net::URLRequest"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.net::URLRequest"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.166"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.166"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.166"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.166"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.166"* %65 to %"class.net::URLRequest"**
  %67 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %66, align 8
  %68 = icmp eq %"class.net::URLRequest"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !15
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !15
  %75 = load i64, i64* %74, align 8, !noalias !15
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !15
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i64*
  store i64 0, i64* %78, align 8, !noalias !15
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !15
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.166"**
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %81, align 8, !noalias !15
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.162"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.166"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.166"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.166"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.166"* %124, %"struct.std::__1::__hash_node_base.166"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.166"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.166"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.166"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.166"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.166"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.166"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.166"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } undef, %"struct.std::__1::__hash_node_base.166"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.166"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.162"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.162"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.162"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.162"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.162"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.166"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.166"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.168", %"class.std::__1::__bucket_list_deallocator.168"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !18

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.166"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.166"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.166"* %36, %"struct.std::__1::__hash_node_base.166"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.166"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.166"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.166"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.166"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.166"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.166"* %101 to %"class.net::URLRequest"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.166"* %82, %"struct.std::__1::__hash_node_base.166"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.166"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.166"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.166"* %110 to %"class.net::URLRequest"**
  %112 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %102, align 8
  %113 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %111, align 8
  %114 = icmp eq %"class.net::URLRequest"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.166"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.166"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.166"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.166"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.166"* %80, %"struct.std::__1::__hash_node_base.166"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.166"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.166"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.166"** null, %"struct.std::__1::__hash_node_base.166"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.166"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.166"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.168", %"class.std::__1::__bucket_list_deallocator.168"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.net::URLRequest"** dereferenceable(8), %"class.net::URLRequest"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %1, align 8
  %5 = ptrtoint %"class.net::URLRequest"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to %"class.net::URLRequest"**
  %64 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %63, align 8
  %65 = icmp eq %"class.net::URLRequest"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #12, !noalias !19
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.net::URLRequest"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !19
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !19
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !19
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %75, align 8, !noalias !19
  %76 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !3
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #11
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #11, !range !3
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base"* %118, %"struct.std::__1::__hash_node_base"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #11, !range !3
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !22

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"class.net::URLRequest"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to %"class.net::URLRequest"**
  %112 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %102, align 8
  %113 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %111, align 8
  %114 = icmp eq %"class.net::URLRequest"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.144"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.140"*, %"class.net::URLRequest"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.579"* dereferenceable(8), %"class.std::__1::tuple.561"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.net::URLRequest"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.net::URLRequest"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.144"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.144"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.144"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.144"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.144"* %65 to %"class.net::URLRequest"**
  %67 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %66, align 8
  %68 = icmp eq %"class.net::URLRequest"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !23
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.579"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !23
  %75 = load i64, i64* %74, align 8, !noalias !23
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !23
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i64*
  store i64 0, i64* %78, align 8, !noalias !23
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !23
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.144"**
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %81, align 8, !noalias !23
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.140"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.144"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.144"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.144"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.144"* %124, %"struct.std::__1::__hash_node_base.144"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.144"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.144"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.144"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.144"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.144"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.144"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.144"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.144"*, i8 } undef, %"struct.std::__1::__hash_node_base.144"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.144"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.144"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.140"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.140"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.140"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.140"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.140"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.144"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.144"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.146", %"class.std::__1::__bucket_list_deallocator.146"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !26

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.144"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.144"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.144"* %36, %"struct.std::__1::__hash_node_base.144"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.144"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.144"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.144"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.144"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.144"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.144"* %101 to %"class.net::URLRequest"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.144"* %82, %"struct.std::__1::__hash_node_base.144"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.144"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.144"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.144"* %110 to %"class.net::URLRequest"**
  %112 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %102, align 8
  %113 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %111, align 8
  %114 = icmp eq %"class.net::URLRequest"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.144"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.144"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.144"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.144"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.144"* %80, %"struct.std::__1::__hash_node_base.144"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.144"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.144"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.144"** null, %"struct.std::__1::__hash_node_base.144"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.144"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.144"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.146", %"class.std::__1::__bucket_list_deallocator.146"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE(%"class.std::__1::unique_ptr.582"* noalias sret, %"class.std::__1::__hash_table.140"*, %"struct.std::__1::__hash_node_base.144"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.144"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #11, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.144"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.144"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.151"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.144"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.144"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.144"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.144"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.144"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.144"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.144"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.144"* %25, %"struct.std::__1::__hash_node_base.144"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.144"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.144"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.144"* null, %"struct.std::__1::__hash_node_base.144"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.140", %"class.std::__1::__hash_table.140"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.144"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.582"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.582", %"class.std::__1::unique_ptr.582"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.154"** %98 to %"class.std::__1::__compressed_pair.151"**
  store %"class.std::__1::__compressed_pair.151"* %30, %"class.std::__1::__compressed_pair.151"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.582", %"class.std::__1::unique_ptr.582"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.166"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.162"*, %"class.net::URLRequest"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.579"* dereferenceable(8), %"class.std::__1::tuple.561"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.net::URLRequest"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.net::URLRequest"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.166"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.166"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.166"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.166"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.166"* %65 to %"class.net::URLRequest"**
  %67 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %66, align 8
  %68 = icmp eq %"class.net::URLRequest"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !27
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.579"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !27
  %75 = load i64, i64* %74, align 8, !noalias !27
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !27
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i64*
  store i64 0, i64* %78, align 8, !noalias !27
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !27
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.166"**
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %81, align 8, !noalias !27
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.162"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.166"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.166"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.166"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.166"* %124, %"struct.std::__1::__hash_node_base.166"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.166"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.166"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.166"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.166"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.166"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.166"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.166"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } undef, %"struct.std::__1::__hash_node_base.166"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.166"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.562"* noalias sret, %"class.std::__1::__hash_table.162"*, %"struct.std::__1::__hash_node_base.166"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.166"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #11, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.166"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.166"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.173", %"class.std::__1::__compressed_pair.173"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.166"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.166"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.166"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.166"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.166"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.166"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.166"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.166"* %25, %"struct.std::__1::__hash_node_base.166"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.166"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.166"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.166"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.562"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.562", %"class.std::__1::unique_ptr.562"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.176"** %98 to %"class.std::__1::__compressed_pair.173"**
  store %"class.std::__1::__compressed_pair.173"* %30, %"class.std::__1::__compressed_pair.173"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.562", %"class.std::__1::unique_ptr.562"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.base::internal::BindState"* @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFviEEEJiEE6CreateIRS4_JRiEEEPS5_PFvvEOT_DpOT0_(void ()*, %"class.base::RepeatingCallback.120"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = tail call i8* @_Znwm(i64 48) #12
  %6 = bitcast i8* %5 to %"struct.base::internal::BindState"*
  %7 = bitcast i8* %5 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %7, void ()* %0, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFviEEEJiEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_17RepeatingCallbackIFviEEEJiEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE) #11
  %8 = getelementptr inbounds i8, i8* %5, i64 32
  %9 = bitcast i8* %8 to %"class.base::internal::CallbackBaseCopyable"*
  %10 = getelementptr inbounds %"class.base::RepeatingCallback.120", %"class.base::RepeatingCallback.120"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %9, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %10) #11
  %11 = getelementptr inbounds i8, i8* %5, i64 40
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %2, align 4
  store i32 %13, i32* %12, align 4
  %14 = bitcast i8* %8 to %"class.base::internal::BindStateBase"**
  %15 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %14, align 8
  %16 = icmp eq %"class.base::internal::BindStateBase"* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0)) #11
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %20

20:                                               ; preds = %3, %17
  ret %"struct.base::internal::BindState"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_17RepeatingCallbackIFviEEEJiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::RepeatingCallback.120", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = bitcast %"class.base::RepeatingCallback.120"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::BindStateBase"**
  %9 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::RepeatingCallback.120"* %2 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = getelementptr inbounds %"class.base::RepeatingCallback.120", %"class.base::RepeatingCallback.120"* %2, i64 0, i32 0, i32 0
  %13 = inttoptr i64 %10 to %"class.base::internal::BindStateBase"*
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %13, i64 0, i32 1
  %15 = bitcast void ()** %14 to void (%"class.base::internal::BindStateBase"*, i32)**
  %16 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %15, align 8
  tail call void %16(%"class.base::internal::BindStateBase"* %13, i32 %6) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFviEEEJiEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_17RepeatingCallbackIFviEEEJiEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #11
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #11
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #5

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE(%"class.std::__1::unique_ptr.571"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #11, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.129"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.571"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.571", %"class.std::__1::unique_ptr.571"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.132"** %98 to %"class.std::__1::__compressed_pair.129"**
  store %"class.std::__1::__compressed_pair.129"* %30, %"class.std::__1::__compressed_pair.129"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.571", %"class.std::__1::unique_ptr.571"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.net::URLRequest"** dereferenceable(8), %"class.net::URLRequest"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %1, align 8
  %5 = ptrtoint %"class.net::URLRequest"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to %"class.net::URLRequest"**
  %64 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %63, align 8
  %65 = icmp eq %"class.net::URLRequest"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #12, !noalias !30
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.net::URLRequest"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !30
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !30
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !30
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %75, align 8, !noalias !30
  %76 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !3
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #11
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #11, !range !3
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base"* %118, %"struct.std::__1::__hash_node_base"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #11, !range !3
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %158
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
!7 = distinct !{!7, !5}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackERNS_17RepeatingCallbackIFviEEEJRiEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackERNS_17RepeatingCallbackIFviEEEJRiEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIRNS_17RepeatingCallbackIFviEEEJRiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIRNS_17RepeatingCallbackIFviEEEJRiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!13 = distinct !{!13, !5}
!14 = distinct !{!14, !5}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!18 = distinct !{!18, !5}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_"}
!22 = distinct !{!22, !5}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestEN4base9TimeTicksEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISV_EEEEEEmOT_DpOT0_"}
!26 = distinct !{!26, !5}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3net10URLRequestElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__112__hash_tableIPKN3net10URLRequestENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
