; ModuleID = '../../third_party/pdfium/core/fxcodec/jbig2/JBig2_PatternDict.cpp'
source_filename = "../../third_party/pdfium/core/fxcodec/jbig2/JBig2_PatternDict.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CJBig2_PatternDict = type { i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.CJBig2_Image* }
%class.CJBig2_Image = type <{ %"class.fxcrt::MaybeOwned", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.3", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i8* }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }

@_ZN18CJBig2_PatternDictC1Ej = hidden unnamed_addr alias void (%class.CJBig2_PatternDict*, i32), void (%class.CJBig2_PatternDict*, i32)* @_ZN18CJBig2_PatternDictC2Ej
@_ZN18CJBig2_PatternDictD1Ev = hidden unnamed_addr alias void (%class.CJBig2_PatternDict*), void (%class.CJBig2_PatternDict*)* @_ZN18CJBig2_PatternDictD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CJBig2_PatternDictC2Ej(%class.CJBig2_PatternDict* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CJBig2_PatternDict, %class.CJBig2_PatternDict* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %class.CJBig2_PatternDict, %class.CJBig2_PatternDict* %0, i64 0, i32 1
  %5 = zext i32 %1 to i64
  %6 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #5
  %7 = icmp eq i32 %1, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = shl nuw nsw i64 %5, 3
  %10 = tail call i8* @_Znwm(i64 %9) #6
  %11 = bitcast i8* %10 to %"class.std::__1::unique_ptr"*
  %12 = getelementptr inbounds %class.CJBig2_PatternDict, %class.CJBig2_PatternDict* %0, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %10, i8** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 %5
  %15 = getelementptr inbounds %class.CJBig2_PatternDict, %class.CJBig2_PatternDict* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::unique_ptr"* %14, %"class.std::__1::unique_ptr"** %15, align 8
  %16 = bitcast %"class.std::__1::unique_ptr"** %12 to i64*
  %17 = ptrtoint i8* %10 to i64
  %18 = add nsw i64 %5, -1
  %19 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 %18, i32 0, i32 0, i32 0
  %20 = ptrtoint %class.CJBig2_Image** %19 to i64
  %21 = sub i64 8, %17
  %22 = add i64 %21, %20
  %23 = and i64 %22, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 %23, i1 false) #5
  %24 = ptrtoint %"class.std::__1::unique_ptr"* %14 to i64
  store i64 %24, i64* %16, align 8
  br label %25

25:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CJBig2_PatternDictD2Ev(%class.CJBig2_PatternDict* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CJBig2_PatternDict, %class.CJBig2_PatternDict* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  %8 = getelementptr inbounds %class.CJBig2_PatternDict, %class.CJBig2_PatternDict* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %9, %4
  br i1 %10, label %24, label %11

11:                                               ; preds = %6, %19
  %12 = phi %"class.std::__1::unique_ptr"* [ %13, %19 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.CJBig2_Image*, %class.CJBig2_Image** %14, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %14, align 8
  %16 = icmp eq %class.CJBig2_Image* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  tail call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %15) #5
  %18 = bitcast %class.CJBig2_Image* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #6
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.std::__1::unique_ptr"* %13, %4
  br i1 %20, label %21, label %11

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %6
  %25 = phi i8* [ %23, %21 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr"* %4, %"class.std::__1::unique_ptr"** %8, align 8
  tail call void @_ZdlPv(i8* %25) #6
  br label %26

26:                                               ; preds = %1, %24
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
